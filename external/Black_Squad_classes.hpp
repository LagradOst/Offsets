namespace off {
	constexpr auto GNames = 0x1ce2098;
	constexpr auto GObjects = 0x1ce2a10;
	constexpr auto UEngine = 0x1ceff68;

	namespace n_UNavigationHandle {
		constexpr auto AnchorPylon = 0x60; // ObjectProperty
		constexpr auto AnchorPoly = 0x68; // FPointer
		constexpr auto PathCache = 0x70; // FPathStore
		constexpr auto BestUnfinishedPathPoint = 0x80; // FPointer
		constexpr auto CurrentEdge = 0x88; // FPointer
		constexpr auto SubGoal_DestPoly = 0x90; // FPointer
		constexpr auto FinalDestination = 0x98; // FBasedPosition
		constexpr auto bSkipRouteCacheUpdates = 0xd0; // uint32_t : 1
		constexpr auto bUseORforEvaluateGoal = 0xd0; // uint32_t : 1
		constexpr auto bDebugConstraintsAndGoalEvals = 0xd0; // uint32_t : 1
		constexpr auto bUltraVerbosePathDebugging = 0xd0; // uint32_t : 1
		constexpr auto bVisualPathDebugging = 0xd0; // uint32_t : 1
		constexpr auto bDebug_Breadcrumbs = 0xd0; // uint32_t : 1
		constexpr auto PathConstraintList = 0xd4; // ObjectProperty
		constexpr auto PathGoalList = 0xdc; // ObjectProperty
		constexpr auto CachedPathParams = 0xe4; // FNavMeshPathParams
		constexpr auto LastPathError = 0x118; // EPathFindingError
		constexpr auto LastPathFailTime = 0x11c; // float
		constexpr auto Breadcrumbs = 0x120; // FVector [0xa]
		constexpr auto BreadCrumbMostRecentIdx = 0x198; // int32_t
		constexpr auto BreadCrumbDistanceInterval = 0x19c; // float
	}

	namespace n_AImageReflection {
		constexpr auto bEnabled = 0x244; // uint32_t : 1
		constexpr auto ReflectionComponent = 0x248; // ComponentProperty
		constexpr auto ImageReflectionComponent = 0x250; // ComponentProperty
	}

	namespace n_UCCSBTCombatMelee {
		constexpr auto CAIP = 0xcc; // ObjectProperty
	}

	namespace n_ACombatPawn_TrophyTurret {
		constexpr auto TargetExplodeLocationInfo = 0x1274; // FSTargetExplodeLocationInfo
		constexpr auto IdleRotDegPerSecond = 0x1284; // float
		constexpr auto AimRotDegPerSecond = 0x1288; // float
		constexpr auto MaxAimTime = 0x128c; // float
		constexpr auto FireHoldTime = 0x1290; // float
		constexpr auto FireAnim = 0x1294; // FName
		constexpr auto FireCoolTime = 0x129c; // float
		constexpr auto FireMuzzlePS = 0x12a0; // ObjectProperty
		constexpr auto FireSound = 0x12a8; // ObjectProperty
		constexpr auto TouchComponent = 0x12b0; // ComponentProperty
		constexpr auto EnableCheckActorClasses = 0x12b8; // TArray<ACombatProjectile*>
		constexpr auto ForbiddenCheckActorClasses = 0x12c8; // TArray<ACombatProjectile*>
		constexpr auto ExplosionProjClass = 0x12d8; // ACombatProj_ExplosiveBase*
		constexpr auto TouchedProjectiles = 0x12e0; // TArray<ObjectProperty>
		constexpr auto DesiredAimRotation = 0x12f0; // FRotator
		constexpr auto AimControl = 0x12fc; // ObjectProperty
		constexpr auto TrophyTurretAnimState = 0x1304; // ObjectProperty
		constexpr auto CurTrophyState = 0x130c; // ETrophyState
		constexpr auto SavedTargetExplodeLocation = 0x1310; // FVector
		constexpr auto WeaponIndex = 0x131c; // int32_t
	}

	namespace n_ACombatHostageActor {
		constexpr auto MoveHealthMax = 0x244; // int32_t
		constexpr auto TransformObjectHealthMax = 0x248; // int32_t
		constexpr auto CanTalkDistance = 0x24c; // float
		constexpr auto SqrtCanTalkDistance = 0x250; // float
		constexpr auto RepairingArea = 0x254; // ObjectProperty
		constexpr auto bGodMode = 0x25c; // uint32_t : 1
		constexpr auto bTestMode = 0x25c; // uint32_t : 1
		constexpr auto bIsTransformation = 0x25c; // uint32_t : 1
		constexpr auto bIsRepair = 0x25c; // uint32_t : 1
		constexpr auto Health = 0x260; // int32_t
		constexpr auto HostageName = 0x264; // FString
		constexpr auto Mesh = 0x274; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x27c; // FReplicatedMeshInfo
		constexpr auto AnimNodeSlot = 0x29c; // FName
		constexpr auto AnimTime_UnlockHandcuffs = 0x2a4; // float
		constexpr auto UnlockHandcuffsAnim = 0x2a8; // FName
		constexpr auto AnimTime_GroggyStart = 0x2b0; // float
		constexpr auto GroggyStartAnim = 0x2b4; // FName
		constexpr auto AnimTime_GroggyEnd = 0x2bc; // float
		constexpr auto GroggyEndAnim = 0x2c0; // FName
		constexpr auto AnimTime_CoverStart = 0x2c8; // float
		constexpr auto CoverStartAnim = 0x2cc; // FName
		constexpr auto AnimTime_Death = 0x2d4; // float
		constexpr auto DeathAnim = 0x2d8; // FName
		constexpr auto HitAnim = 0x2e0; // FName
		constexpr auto CoverHitAnim = 0x2e8; // FName
		constexpr auto FullBodyAnimSlot = 0x2f0; // ObjectProperty
		constexpr auto CylinderComponent = 0x2f8; // ComponentProperty
		constexpr auto AnimState = 0x300; // HostageAnimType
		constexpr auto currentVoiceState = 0x301; // HostageVoiceType
		constexpr auto StateName = 0x304; // FName
		constexpr auto currentStateUIName = 0x30c; // FString
		constexpr auto IconName = 0x31c; // FString
		constexpr auto SequnceObject = 0x32c; // ObjectProperty
		constexpr auto MoveTrackEndTime = 0x334; // float
		constexpr auto AnimPosition = 0x338; // float
		constexpr auto MovingRate = 0x33c; // float
		constexpr auto HitParticleTemplate = 0x340; // ObjectProperty
		constexpr auto HitSound = 0x348; // ObjectProperty
		constexpr auto LastTakeHitInfo = 0x350; // FHostageTakeHitInfo
		constexpr auto Test_TalkSound = 0x368; // ObjectProperty
		constexpr auto Wheels = 0x370; // TArray<FPassiveWheel>
		constexpr auto RepairingPlayerCount = 0x380; // int32_t
		constexpr auto LastRepairingPlayerCount = 0x384; // int32_t
		constexpr auto MaxRepairingPlayerCount = 0x388; // int32_t
		constexpr auto RepairingPlayers = 0x38c; // TArray<ObjectProperty>
		constexpr auto RepairTime = 0x39c; // TArray<float>
		constexpr auto RepairingTime = 0x3ac; // float
		constexpr auto TimeForUnit = 0x3b0; // float
		constexpr auto HealthHealStep = 0x3b4; // int32_t
		constexpr auto HostageVocieSounds = 0x3b8; // ComponentProperty [0x6]
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0xa0; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UCBGunMuzzleFlashLight {
		constexpr auto RedTeamTimeShift = 0x26c; // TArray<FLightValues>
		constexpr auto BlueTeamTimeShift = 0x27c; // TArray<FLightValues>
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x68; // FRawDistributionFloat
	}

	namespace n_USoundCue {
		constexpr auto SoundClass = 0x60; // FName
		constexpr auto SoundClassName = 0x68; // ESoundClassName
		constexpr auto bDebug = 0x6c; // uint32_t : 1
		constexpr auto FirstNode = 0x70; // ObjectProperty
		constexpr auto EditorData = 0x78; // TMap<None, None>
		constexpr auto MaxAudibleDistance = 0xc0; // float
		constexpr auto VolumeMultiplier = 0xc4; // float
		constexpr auto PitchMultiplier = 0xc8; // float
		constexpr auto Duration = 0xcc; // float
		constexpr auto FaceFXAnimSetRef = 0xd0; // ObjectProperty
		constexpr auto FaceFXGroupName = 0xd8; // FString
		constexpr auto FaceFXAnimName = 0xe8; // FString
		constexpr auto MaxConcurrentPlayCount = 0xf8; // int32_t
		constexpr auto CurrentPlayCount = 0xfc; // int32_t
		constexpr auto SoundGroup = 0x100; // FName
	}

	namespace n_UParticleModuleSubUVSelect {
		constexpr auto SubImageSelect = 0x68; // FRawDistributionVector
	}

	namespace n_UClient {
		constexpr auto MinDesiredFrameRate = 0x68; // float
		constexpr auto DisplayGamma = 0x6c; // float
		constexpr auto InitialButtonRepeatDelay = 0x70; // float
		constexpr auto ButtonRepeatDelay = 0x74; // float
	}

	namespace n_UCBUIDataStore_PendingDialogMessage {
		constexpr auto DialogMessageList = 0x98; // TArray<FDialogMessage>
	}

	namespace n_UCombatHUD_MarkerMenu {
		constexpr auto OwnerSystem = 0xc0; // ObjectProperty
		constexpr auto CurrentMarkerGroupID = 0xc8; // FString
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x68; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x8c; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xb0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xd4; // EParticleCollisionComplete
		constexpr auto bApplyPhysics = 0xd8; // uint32_t : 1
		constexpr auto bPawnsDoNotDecrementCount = 0xd8; // uint32_t : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0xd8; // uint32_t : 1
		constexpr auto bDropDetail = 0xd8; // uint32_t : 1
		constexpr auto bCollideOnlyIfVisible = 0xd8; // uint32_t : 1
		constexpr auto bCollideWithWorld = 0xd8; // uint32_t : 1
		constexpr auto bCollideWithWorldAttractors = 0xd8; // uint32_t : 1
		constexpr auto ParticleMass = 0xdc; // FRawDistributionFloat
		constexpr auto DirScalar = 0x100; // float
		constexpr auto VerticalFudgeFactor = 0x104; // float
		constexpr auto DelayAmount = 0x108; // FRawDistributionFloat
		constexpr auto MaxCollisionDistance = 0x12c; // float
		constexpr auto ParticleAttractorCollisionActions = 0x130; // TArray<FParticleAttractorCollisionAction>
	}

	namespace n_UCombatHUD_ObserverInfo {
		constexpr auto LastHealth = 0xc0; // int32_t
		constexpr auto LastAmmoCount = 0xc4; // int32_t
		constexpr auto LastMagazineCount = 0xc8; // int32_t
		constexpr auto LastGrenadeA = 0xcc; // int32_t
		constexpr auto LastGrenadeB = 0xd0; // int32_t
		constexpr auto LastWeaponName = 0xd4; // FString
		constexpr auto LastHasBomb = 0xe4; // uint32_t : 1
		constexpr auto LastShowBullet = 0xe4; // uint32_t : 1
		constexpr auto LastLevel = 0xe8; // int32_t
		constexpr auto LastTierPoint = 0xec; // int32_t
		constexpr auto LastCCardID = 0xf0; // int32_t
		constexpr auto LastLevelImgPath = 0xf4; // FString
		constexpr auto LastTierImgSmallPath = 0x104; // FString
		constexpr auto LastCCardPath = 0x114; // FString
		constexpr auto LastKillCount = 0x124; // int32_t
	}

	namespace n_USoundNodeAttenuationAndGain {
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto GainDistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto AttenuateDistanceAlgorithm = 0x81; // SoundDistanceModel
		constexpr auto DistanceType = 0x82; // ESoundDistanceCalc
		constexpr auto MinimalVolume = 0x84; // float
		constexpr auto RadiusMin = 0x88; // float
		constexpr auto RadiusPeak = 0x8c; // float
		constexpr auto RadiusMax = 0x90; // float
		constexpr auto LPFMinimal = 0x94; // float
		constexpr auto LPFRadiusMin = 0x98; // float
		constexpr auto LPFRadiusPeak = 0x9c; // float
		constexpr auto LPFRadiusMax = 0xa0; // float
	}

	namespace n_USeqAct_Trace {
		constexpr auto bTraceActors = 0x108; // uint32_t : 1
		constexpr auto bTraceWorld = 0x108; // uint32_t : 1
		constexpr auto TraceExtent = 0x10c; // FVector
		constexpr auto StartOffset = 0x118; // FVector
		constexpr auto EndOffset = 0x124; // FVector
		constexpr auto HitObject = 0x130; // ObjectProperty
		constexpr auto Distance = 0x138; // float
		constexpr auto HitLocation = 0x13c; // FVector
	}

	namespace n_UCombatDataTableRefPenaltyBind {
		constexpr auto Penalty = 0x6c; // FString
		constexpr auto ModeGroup = 0x7c; // FString
	}

	namespace n_ACombatStaticMeshActor {
		constexpr auto MeshActorIndex = 0x250; // WordProperty
	}

	namespace n_USeqAct_CombatTutorial_HideHUD {
		constexpr auto HideHUD = 0x108; // uint32_t : 1
	}

	namespace n_UPhysicsAsset {
		constexpr auto BodySetup = 0x60; // TArray<ObjectProperty>
		constexpr auto BodySetupIndexMap = 0x70; // FMap_Mirror
		constexpr auto BoundsBodies = 0xb8; // TArray<int32_t>
		constexpr auto ConstraintSetup = 0xc8; // TArray<ObjectProperty>
		constexpr auto DefaultInstance = 0xd8; // ObjectProperty
	}

	namespace n_UCombatAnimNodeSequenceByBoneRotation {
		constexpr auto BoneName = 0x158; // FName
		constexpr auto BoneAxis = 0x160; // EAxis
		constexpr auto AnimList = 0x164; // TArray<FAnimByRotation>
	}

	namespace n_USceneCaptureCubeMapComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto NearPlane = 0xd8; // float
		constexpr auto FarPlane = 0xdc; // float
		constexpr auto WorldLocation = 0xe0; // FVector
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UCombatDataTableRefCompetitivePenalty {
		constexpr auto ModeGroupCodename = 0x6c; // FString
		constexpr auto AcceptPoint = 0x7c; // int32_t
		constexpr auto AcceptAlertTime = 0x80; // int32_t
		constexpr auto AcceptTime = 0x84; // int32_t
		constexpr auto AcceptInterval = 0x88; // int32_t
		constexpr auto DecreasePoint = 0x8c; // int32_t
	}

	namespace n_ACombatWeaponBase_Melee {
		constexpr auto MeleeFactors = 0x1ec8; // FMeleeAttackFactor [0x2]
		constexpr auto bHitPawn = 0x1f28; // uint32_t : 1
		constexpr auto bHitWorldActor = 0x1f28; // uint32_t : 1
		constexpr auto bContinousAttack = 0x1f28; // uint32_t : 1
		constexpr auto LastAttackIndex = 0x1f2c; // int32_t
		constexpr auto VictimsSaveList = 0x1f30; // TArray<ObjectProperty>
		constexpr auto ArcSectIndex = 0x1f40; // int32_t
	}

	namespace n_ACombatGuy_Player {
		constexpr auto bNeedAutoHeal = 0x1128; // uint32_t : 1
		constexpr auto bPlayAutoHealStopEffect = 0x1128; // uint32_t : 1
		constexpr auto AddHealth = 0x112c; // int32_t
		constexpr auto AutoHealTime = 0x1130; // float
		constexpr auto AutoHealAmount = 0x1134; // int32_t
		constexpr auto MaxAutoHealHealthModifier = 0x1138; // float
		constexpr auto AutoHealConditionTime = 0x113c; // float
		constexpr auto GrenadeIndicators = 0x1140; // TArray<ObjectProperty>
		constexpr auto HandActorClass = 0x1150; // ACombatHandActor*
		constexpr auto HandActor = 0x1158; // ObjectProperty
		constexpr auto DamageMultiplierForTest = 0x1160; // float
	}

	namespace n_UCombatWeaponRISBase_GrenadeLauncher {
		constexpr auto OverrideDataName = 0xc44; // FName
		constexpr auto WorldFOVMagnification = 0xc4c; // float
		constexpr auto bUseLauncherForegroundFOV = 0xc50; // uint32_t : 1
		constexpr auto LauncherForegroundFOV = 0xc54; // float
		constexpr auto LauncherZoomInDelayRatio = 0xc58; // float
		constexpr auto LauncherZoomOutDelayRatio = 0xc5c; // float
		constexpr auto OverrideWeaponBobRatio = 0xc60; // float
		constexpr auto OverrideWeaponLagRatio = 0xc64; // float
		constexpr auto OverrideZoomRotLagRatio = 0xc68; // float
		constexpr auto OverrideWeaponFireSnd = 0xc6c; // ObjectProperty
		constexpr auto OverrideWeaponFireSnd3rd = 0xc74; // ObjectProperty
		constexpr auto OverrideMuzzleFlashPSCTemplateForGrenade = 0xc7c; // ObjectProperty
		constexpr auto OverrideMuzzleFlashPSCTemplateForGrenade3rd = 0xc84; // ObjectProperty
	}

	namespace n_ATeamInfo {
		constexpr auto TeamName = 0x244; // FString
		constexpr auto Size = 0x254; // int32_t
		constexpr auto Score = 0x258; // float
		constexpr auto TeamIndex = 0x25c; // int32_t
		constexpr auto TeamColor = 0x260; // FColor
	}

	namespace n_USeqEvent_MobileInput {
		constexpr auto XAxisValue = 0x138; // float
		constexpr auto YAxisValue = 0x13c; // float
		constexpr auto CenterX = 0x140; // float
		constexpr auto CenterY = 0x144; // float
		constexpr auto CurrentX = 0x148; // float
		constexpr auto CurrentY = 0x14c; // float
	}

	namespace n_UCombatAwaitTransaction {
		constexpr auto AwaitListMap = 0x60; // TMap<None, None>
		constexpr auto InviteInfoMap = 0xa8; // TMap<None, None>
		constexpr auto AwaitListTotalPage = 0xf0; // int32_t
	}

	namespace n_UCombatDataTableRefRoomName {
		constexpr auto Code = 0x6c; // int32_t
		constexpr auto DisplayID = 0x70; // int32_t
	}

	namespace n_UMorphNodeMultiPose {
		constexpr auto Targets = 0x74; // TArray<ObjectProperty>
		constexpr auto MorphNames = 0x84; // TArray<FName>
		constexpr auto Weights = 0x94; // TArray<float>
	}

	namespace n_UInstancedFoliageSettings {
		constexpr auto Density = 0x60; // float
		constexpr auto Radius = 0x64; // float
		constexpr auto ScaleMinX = 0x68; // float
		constexpr auto ScaleMinY = 0x6c; // float
		constexpr auto ScaleMinZ = 0x70; // float
		constexpr auto ScaleMaxX = 0x74; // float
		constexpr auto ScaleMaxY = 0x78; // float
		constexpr auto ScaleMaxZ = 0x7c; // float
		constexpr auto LockScaleX = 0x80; // uint32_t : 1
		constexpr auto LockScaleY = 0x80; // uint32_t : 1
		constexpr auto LockScaleZ = 0x80; // uint32_t : 1
		constexpr auto AlignToNormal = 0x80; // uint32_t : 1
		constexpr auto RandomYaw = 0x80; // uint32_t : 1
		constexpr auto UniformScale = 0x80; // uint32_t : 1
		constexpr auto ReapplyDensity = 0x80; // uint32_t : 1
		constexpr auto ReapplyRadius = 0x80; // uint32_t : 1
		constexpr auto ReapplyAlignToNormal = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomYaw = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleX = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleY = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleZ = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomPitchAngle = 0x80; // uint32_t : 1
		constexpr auto ReapplyGroundSlope = 0x80; // uint32_t : 1
		constexpr auto ReapplyHeight = 0x80; // uint32_t : 1
		constexpr auto ReapplyLandscapeLayer = 0x80; // uint32_t : 1
		constexpr auto ReapplyZOffset = 0x80; // uint32_t : 1
		constexpr auto IsSelected = 0x80; // uint32_t : 1
		constexpr auto ShowNothing = 0x80; // uint32_t : 1
		constexpr auto ShowPaintSettings = 0x80; // uint32_t : 1
		constexpr auto ShowInstanceSettings = 0x80; // uint32_t : 1
		constexpr auto AlignMaxAngle = 0x84; // float
		constexpr auto RandomPitchAngle = 0x88; // float
		constexpr auto GroundSlope = 0x8c; // float
		constexpr auto HeightMin = 0x90; // float
		constexpr auto HeightMax = 0x94; // float
		constexpr auto LandscapeLayer = 0x98; // FName
		constexpr auto ZOffsetMin = 0xa0; // float
		constexpr auto ZOffsetMax = 0xa4; // float
		constexpr auto MaxInstancesPerCluster = 0xa8; // int32_t
		constexpr auto MaxClusterRadius = 0xac; // float
		constexpr auto ReapplyDensityAmount = 0xb0; // float
		constexpr auto StartCullDistance = 0xb4; // int32_t
		constexpr auto EndCullDistance = 0xb8; // int32_t
		constexpr auto CullOption = 0xbc; // FoliageCullOption
		constexpr auto DisplayOrder = 0xc0; // int32_t
	}

	namespace n_USeqAct_PlayCameraAnim {
		constexpr auto CameraAnim = 0x108; // ObjectProperty
		constexpr auto bLoop = 0x110; // uint32_t : 1
		constexpr auto bRandomStartTime = 0x110; // uint32_t : 1
		constexpr auto BlendInTime = 0x114; // float
		constexpr auto BlendOutTime = 0x118; // float
		constexpr auto Rate = 0x11c; // float
		constexpr auto IntensityScale = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto UserDefinedSpaceActor = 0x128; // ObjectProperty
	}

	namespace n_UCombatFlocking {
		constexpr auto Apply_Distance = 0x60; // float
		constexpr auto Cohesion_Force = 0x64; // float
		constexpr auto Alignment_Force = 0x68; // float
		constexpr auto Separation_Force = 0x6c; // float
		constexpr auto Separation_MaxDistance = 0x70; // float
		constexpr auto Avoidance_Force = 0x74; // float
		constexpr auto Avoidance_MaxDistance = 0x78; // float
		constexpr auto Target_Weight = 0x7c; // float
	}

	namespace n_USeqEvent_Input {
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_ABlockingVolume {
		constexpr auto bBlockCamera = 0x280; // uint32_t : 1
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto Range = 0x70; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x94; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0x94; // uint32_t : 1
		constexpr auto bRenewSource = 0x94; // uint32_t : 1
		constexpr auto bInheritSourceVel = 0x94; // uint32_t : 1
		constexpr auto Strength = 0x98; // FRawDistributionFloat
		constexpr auto SelectionMethod = 0xbc; // EAttractorParticleSelectionMethod
		constexpr auto LastSelIndex = 0xc0; // int32_t
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_USeqVar_Character {
		constexpr auto PawnClass = 0xc4; // APawn*
	}

	namespace n_USeqAct_GetDistance {
		constexpr auto Distance = 0x108; // float
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xd8; // FParticleRandomSeedInfo
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto SkeletalMesh = 0x260; // ObjectProperty
		constexpr auto AttachedToSkelComponent = 0x268; // ComponentProperty
		constexpr auto AnimTreeTemplate = 0x270; // ObjectProperty
		constexpr auto Animations = 0x278; // ObjectProperty
		constexpr auto AnimTickArray = 0x280; // TArray<ObjectProperty>
		constexpr auto AnimAlwaysTickArray = 0x290; // TArray<ObjectProperty>
		constexpr auto AnimTickRelevancyArray = 0x2a0; // TArray<int32_t>
		constexpr auto AnimTickWeightsArray = 0x2b0; // TArray<float>
		constexpr auto SkelControlTickArray = 0x2c0; // TArray<ObjectProperty>
		constexpr auto PhysicsAsset = 0x2d0; // ObjectProperty
		constexpr auto PhysicsAssetInstance = 0x2d8; // ObjectProperty
		constexpr auto ApexClothing = 0x2e0; // FPointer
		constexpr auto PhysicsWeight = 0x2e8; // float
		constexpr auto GlobalAnimRateScale = 0x2ec; // float
		constexpr auto StreamingDistanceMultiplier = 0x2f0; // float
		constexpr auto MeshObject = 0x2f4; // FPointer
		constexpr auto WireframeColor = 0x2fc; // FColor
		constexpr auto SpaceBases = 0x300; // TArray<FBoneAtom>
		constexpr auto LocalAtoms = 0x310; // TArray<FBoneAtom>
		constexpr auto CachedLocalAtoms = 0x320; // TArray<FBoneAtom>
		constexpr auto CachedSpaceBases = 0x330; // TArray<FBoneAtom>
		constexpr auto LowUpdateFrameRate = 0x340; // int32_t
		constexpr auto RequiredBones = 0x344; // TArray<char>
		constexpr auto ComposeOrderedRequiredBones = 0x354; // TArray<char>
		constexpr auto ParentAnimComponent = 0x364; // ComponentProperty
		constexpr auto ParentBoneMap = 0x36c; // TArray<int32_t>
		constexpr auto AnimSets = 0x37c; // TArray<ObjectProperty>
		constexpr auto TemporarySavedAnimSets = 0x38c; // TArray<ObjectProperty>
		constexpr auto MorphSets = 0x39c; // TArray<ObjectProperty>
		constexpr auto ActiveMorphs = 0x3ac; // TArray<FActiveMorph>
		constexpr auto ActiveCurveMorphs = 0x3bc; // TArray<FActiveMorph>
		constexpr auto MorphTargetIndexMap = 0x3cc; // TMap<None, None>
		constexpr auto Attachments = 0x414; // TArray<FAttachment>
		constexpr auto SkelControlIndex = 0x424; // TArray<char>
		constexpr auto PostPhysSkelControlIndex = 0x434; // TArray<char>
		constexpr auto ForcedLodModel = 0x444; // int32_t
		constexpr auto MinLodModel = 0x448; // int32_t
		constexpr auto PredictedLODLevel = 0x44c; // int32_t
		constexpr auto OldPredictedLODLevel = 0x450; // int32_t
		constexpr auto AnimationLODDistanceFactor = 0x454; // float
		constexpr auto AnimationLODFrameRate = 0x458; // int32_t
		constexpr auto MaxDistanceFactor = 0x45c; // float
		constexpr auto MaterialSet = 0x460; // TArray<char>
		constexpr auto bForceWireframe = 0x470; // int32_t
		constexpr auto bForceRefpose = 0x474; // int32_t
		constexpr auto bOldForceRefPose = 0x478; // int32_t
		constexpr auto bNoSkeletonUpdate = 0x47c; // uint32_t : 1
		constexpr auto bDisplayBones = 0x480; // int32_t
		constexpr auto bShowPrePhysBones = 0x484; // int32_t
		constexpr auto bHideSkin = 0x488; // int32_t
		constexpr auto bForceRawOffset = 0x48c; // int32_t
		constexpr auto bIgnoreControllers = 0x490; // int32_t
		constexpr auto bTransformFromAnimParent = 0x494; // int32_t
		constexpr auto TickTag = 0x498; // int32_t
		constexpr auto InitTag = 0x49c; // int32_t
		constexpr auto CachedAtomsTag = 0x4a0; // int32_t
		constexpr auto bUseSingleBodyPhysics = 0x4a4; // int32_t
		constexpr auto bRequiredBonesUpToDate = 0x4a8; // int32_t
		constexpr auto MinDistFactorForKinematicUpdate = 0x4ac; // float
		constexpr auto FramesPhysicsAsleep = 0x4b0; // int32_t
		constexpr auto SkipRateForTickAnimNodesAndGetBoneAtoms = 0x4b4; // int32_t
		constexpr auto bSkipTickAnimNodes = 0x4b8; // uint32_t : 1
		constexpr auto bSkipGetBoneAtoms = 0x4b8; // uint32_t : 1
		constexpr auto bInterpolateBoneAtoms = 0x4b8; // uint32_t : 1
		constexpr auto bHasValidBodies = 0x4b8; // uint32_t : 1
		constexpr auto bSkipAllUpdateWhenPhysicsAsleep = 0x4b8; // uint32_t : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x4b8; // uint32_t : 1
		constexpr auto bUseBoundsFromParentAnimComponent = 0x4b8; // uint32_t : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x4b8; // uint32_t : 1
		constexpr auto bUpdateSkelWhenNotRendered = 0x4b8; // uint32_t : 1
		constexpr auto bIgnoreControllersWhenNotRendered = 0x4b8; // uint32_t : 1
		constexpr auto bTickAnimNodesWhenNotRendered = 0x4b8; // uint32_t : 1
		constexpr auto bNotUpdatingKinematicDueToDistance = 0x4b8; // uint32_t : 1
		constexpr auto bForceDiscardRootMotion = 0x4b8; // uint32_t : 1
		constexpr auto bNotifyRootMotionProcessed = 0x4b8; // uint32_t : 1
		constexpr auto bRootMotionModeChangeNotify = 0x4b8; // uint32_t : 1
		constexpr auto bRootMotionExtractedNotify = 0x4b8; // uint32_t : 1
		constexpr auto bProcessingRootMotion = 0x4b8; // uint32_t : 1
		constexpr auto bDisableFaceFXMaterialInstanceCreation = 0x4b8; // uint32_t : 1
		constexpr auto bDisableFaceFX = 0x4b8; // uint32_t : 1
		constexpr auto bAnimTreeInitialised = 0x4b8; // uint32_t : 1
		constexpr auto bForceMeshObjectUpdate = 0x4b8; // uint32_t : 1
		constexpr auto bHasPhysicsAssetInstance = 0x4b8; // uint32_t : 1
		constexpr auto bUpdateKinematicBonesFromAnimation = 0x4b8; // uint32_t : 1
		constexpr auto bUpdateJointsFromAnimation = 0x4b8; // uint32_t : 1
		constexpr auto bSkelCompFixed = 0x4b8; // uint32_t : 1
		constexpr auto bHasHadPhysicsBlendedIn = 0x4b8; // uint32_t : 1
		constexpr auto bForceUpdateAttachmentsInTick = 0x4b8; // uint32_t : 1
		constexpr auto bEnableFullAnimWeightBodies = 0x4b8; // uint32_t : 1
		constexpr auto bPerBoneVolumeEffects = 0x4b8; // uint32_t : 1
		constexpr auto bPerBoneMotionBlur = 0x4b8; // uint32_t : 1
		constexpr auto bSyncActorLocationToRootRigidBody = 0x4b8; // uint32_t : 1
		constexpr auto bUseRawData = 0x4b8; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x4bc; // uint32_t : 1
		constexpr auto bOverrideAttachmentOwnerVisibility = 0x4bc; // uint32_t : 1
		constexpr auto bNeedsToDeleteHitMask = 0x4bc; // uint32_t : 1
		constexpr auto bPauseAnims = 0x4bc; // uint32_t : 1
		constexpr auto bChartDistanceFactor = 0x4bc; // uint32_t : 1
		constexpr auto bEnableLineCheckWithBounds = 0x4bc; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x4bc; // uint32_t : 1
		constexpr auto bUpdateMorphWhenParentAnimComponentExists = 0x4bc; // uint32_t : 1
		constexpr auto LineCheckBoundsScale = 0x4c0; // FVector
		constexpr auto bEnableClothSimulation = 0x4cc; // uint32_t : 1
		constexpr auto bDisableClothCollision = 0x4cc; // uint32_t : 1
		constexpr auto bClothFrozen = 0x4cc; // uint32_t : 1
		constexpr auto bAutoFreezeClothWhenNotRendered = 0x4cc; // uint32_t : 1
		constexpr auto bClothAwakeOnStartup = 0x4cc; // uint32_t : 1
		constexpr auto bClothBaseVelClamp = 0x4cc; // uint32_t : 1
		constexpr auto bClothBaseVelInterp = 0x4cc; // uint32_t : 1
		constexpr auto bAttachClothVertsToBaseBody = 0x4cc; // uint32_t : 1
		constexpr auto bIsClothOnStaticObject = 0x4cc; // uint32_t : 1
		constexpr auto bUpdatedFixedClothVerts = 0x4cc; // uint32_t : 1
		constexpr auto bClothPositionalDampening = 0x4cc; // uint32_t : 1
		constexpr auto bClothWindRelativeToOwner = 0x4cc; // uint32_t : 1
		constexpr auto bRecentlyRendered = 0x4cc; // uint32_t : 1
		constexpr auto bCacheAnimSequenceNodes = 0x4cc; // uint32_t : 1
		constexpr auto bNeedsInstanceWeightUpdate = 0x4cc; // uint32_t : 1
		constexpr auto bAlwaysUseInstanceWeights = 0x4cc; // uint32_t : 1
		constexpr auto bUpdateComposeSkeletonPasses = 0x4cc; // uint32_t : 1
		constexpr auto bValidTemporarySavedAnimSets = 0x4cc; // uint32_t : 1
		constexpr auto InstanceVertexWeightBones = 0x4d0; // TArray<FBonePair>
		constexpr auto LODInfo = 0x4e0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto FrozenLocalToWorldPos = 0x4f0; // FVector
		constexpr auto FrozenLocalToWorldRot = 0x4fc; // FRotator
		constexpr auto ClothExternalForce = 0x508; // FVector
		constexpr auto ClothWind = 0x514; // FVector
		constexpr auto ClothBaseVelClampRange = 0x520; // FVector
		constexpr auto ClothBlendWeight = 0x52c; // float
		constexpr auto ClothDynamicBlendWeight = 0x530; // float
		constexpr auto ClothBlendMinDistanceFactor = 0x534; // float
		constexpr auto ClothBlendMaxDistanceFactor = 0x538; // float
		constexpr auto MinPosDampRange = 0x53c; // FVector
		constexpr auto MaxPosDampRange = 0x548; // FVector
		constexpr auto MinPosDampScale = 0x554; // FVector
		constexpr auto MaxPosDampScale = 0x560; // FVector
		constexpr auto ClothSim = 0x56c; // FPointer
		constexpr auto SceneIndex = 0x574; // int32_t
		constexpr auto ClothMeshPosData = 0x578; // TArray<FVector>
		constexpr auto ClothMeshNormalData = 0x588; // TArray<FVector>
		constexpr auto ClothMeshIndexData = 0x598; // TArray<int32_t>
		constexpr auto NumClothMeshVerts = 0x5a8; // int32_t
		constexpr auto NumClothMeshIndices = 0x5ac; // int32_t
		constexpr auto ClothMeshParentData = 0x5b0; // TArray<int32_t>
		constexpr auto NumClothMeshParentIndices = 0x5c0; // int32_t
		constexpr auto ClothMeshWeldedPosData = 0x5c4; // TArray<FVector>
		constexpr auto ClothMeshWeldedNormalData = 0x5d4; // TArray<FVector>
		constexpr auto ClothMeshWeldedIndexData = 0x5e4; // TArray<int32_t>
		constexpr auto ClothDirtyBufferFlag = 0x5f4; // int32_t
		constexpr auto ClothRBChannel = 0x5f8; // ERBCollisionChannel
		constexpr auto ClothRBCollideWithChannels = 0x5fc; // FRBCollisionChannelContainer
		constexpr auto ClothForceScale = 0x600; // float
		constexpr auto ClothImpulseScale = 0x604; // float
		constexpr auto ClothAttachmentTearFactor = 0x608; // float
		constexpr auto bClothUseCompartment = 0x60c; // uint32_t : 1
		constexpr auto MinDistanceForClothReset = 0x610; // float
		constexpr auto LastClothLocation = 0x614; // FVector
		constexpr auto ApexClothingRBChannel = 0x620; // ERBCollisionChannel
		constexpr auto ApexClothingRBCollideWithChannels = 0x624; // FRBCollisionChannelContainer
		constexpr auto ApexClothingCollisionRBChannel = 0x628; // ERBCollisionChannel
		constexpr auto bAutoFreezeApexClothingWhenNotRendered = 0x62c; // uint32_t : 1
		constexpr auto bLocalSpaceWind = 0x62c; // uint32_t : 1
		constexpr auto WindVelocity = 0x630; // FVector
		constexpr auto WindVelocityBlendTime = 0x63c; // float
		constexpr auto bSkipInitClothing = 0x640; // uint32_t : 1
		constexpr auto SoftBodySim = 0x644; // FPointer
		constexpr auto SoftBodySceneIndex = 0x64c; // int32_t
		constexpr auto bEnableSoftBodySimulation = 0x650; // uint32_t : 1
		constexpr auto SoftBodyTetraPosData = 0x654; // TArray<FVector>
		constexpr auto SoftBodyTetraIndexData = 0x664; // TArray<int32_t>
		constexpr auto NumSoftBodyTetraVerts = 0x674; // int32_t
		constexpr auto NumSoftBodyTetraIndices = 0x678; // int32_t
		constexpr auto SoftBodyImpulseScale = 0x67c; // float
		constexpr auto bSoftBodyFrozen = 0x680; // uint32_t : 1
		constexpr auto bAutoFreezeSoftBodyWhenNotRendered = 0x680; // uint32_t : 1
		constexpr auto bSoftBodyAwakeOnStartup = 0x680; // uint32_t : 1
		constexpr auto bSoftBodyUseCompartment = 0x680; // uint32_t : 1
		constexpr auto SoftBodyRBChannel = 0x684; // ERBCollisionChannel
		constexpr auto SoftBodyRBCollideWithChannels = 0x688; // FRBCollisionChannelContainer
		constexpr auto SoftBodyASVPlane = 0x68c; // FPointer
		constexpr auto LimitMaterial = 0x694; // ObjectProperty
		constexpr auto RootMotionDelta = 0x6a0; // FBoneAtom
		constexpr auto RootMotionVelocity = 0x6c0; // FVector
		constexpr auto RootBoneTranslation = 0x6cc; // FVector
		constexpr auto RootMotionAccelScale = 0x6d8; // FVector
		constexpr auto RootMotionMode = 0x6e4; // ERootMotionMode
		constexpr auto PreviousRMM = 0x6e5; // ERootMotionMode
		constexpr auto PendingRMM = 0x6e6; // ERootMotionMode
		constexpr auto OldPendingRMM = 0x6e7; // ERootMotionMode
		constexpr auto bRMMOneFrameDelay = 0x6e8; // int32_t
		constexpr auto RootMotionRotationMode = 0x6ec; // ERootMotionRotationMode
		constexpr auto AnimRotationOnly = 0x6ed; // EAnimRotationOnly
		constexpr auto FaceFXBlendMode = 0x6ee; // EFaceFXBlendMode
		constexpr auto FaceFXActorInstance = 0x6f0; // FPointer
		constexpr auto CachedFaceFXAudioComp = 0x6f8; // ComponentProperty
		constexpr auto BoneVisibilityStates = 0x700; // TArray<char>
		constexpr auto LocalToWorldBoneAtom = 0x710; // FBoneAtom
		constexpr auto ProgressiveDrawingFraction = 0x730; // float
		constexpr auto CustomSortAlternateIndexMode = 0x734; // char
		constexpr auto MaxMipMapOffset = 0x735; // char
		constexpr auto NumberOfAsyncLoadingMaterial = 0x736; // char
		constexpr auto MorphTargetsQueried = 0x738; // TArray<FName>
		constexpr auto PoolSMComponents = 0x748; // TArray<ComponentProperty>
		constexpr auto bUseTickOptimization = 0x758; // uint32_t : 1
		constexpr auto bAsyncLoadingForMaterial = 0x758; // uint32_t : 1
		constexpr auto TickCount = 0x75c; // int32_t
		constexpr auto LastDropRate = 0x760; // int32_t
		constexpr auto LastDropRateChange = 0x764; // float
		constexpr auto AccumulatedDroppedDeltaTime = 0x768; // float
		constexpr auto ComponentDroppedDeltaTime = 0x76c; // float
	}

	namespace n_USeqAct_CombatTutorial_Dialogue {
		constexpr auto Dialogues = 0x108; // TArray<FTutorial_Dialogue>
		constexpr auto Cnt = 0x118; // int32_t
	}

	namespace n_ACombatSeizeGameBase {
		constexpr auto MaxTeamOccupationNum = 0x788; // int32_t
		constexpr auto PhasedOccupyTimeInterval = 0x78c; // float [0x3]
	}

	namespace n_UActorFactoryFracturedStaticMesh {
		constexpr auto FracturedStaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0xa0; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0xb0; // FName
	}

	namespace n_ACombatTrigger_Bomb {
		constexpr auto C4ExactLocation = 0x258; // FSExactLocationInfo
		constexpr auto BombID = 0x264; // int32_t
		constexpr auto StateName = 0x268; // FName
		constexpr auto BombPlantTime = 0x270; // int32_t
		constexpr auto BombPlantTimeCount = 0x274; // int32_t
		constexpr auto BombDefuseTime = 0x278; // WordProperty
		constexpr auto BombDefuseTimeCount = 0x27a; // WordProperty
		constexpr auto BombTimeLimit = 0x27c; // WordProperty
		constexpr auto DroppedPickupCoolTime = 0x280; // float
		constexpr auto BombClass = 0x284; // ACombatWeapon*
		constexpr auto SpawnLocation = 0x28c; // FVector
		constexpr auto SpawnRotation = 0x298; // FRotator
		constexpr auto PlanterID = 0x2a4; // int32_t
		constexpr auto PlanterTeam = 0x2a8; // ObjectProperty
		constexpr auto Planter = 0x2b0; // ObjectProperty
		constexpr auto PlanterController = 0x2b8; // ObjectProperty
		constexpr auto BombMesh = 0x2c0; // ComponentProperty
		constexpr auto PlantedIndicatorMITV = 0x2c8; // ObjectProperty
		constexpr auto DefusedIndicatorMITV = 0x2d0; // ObjectProperty
		constexpr auto LensFlareMITV = 0x2d8; // ObjectProperty
		constexpr auto DefaultIndicatorMaterial = 0x2e0; // ObjectProperty
		constexpr auto LEDLensFEffect = 0x2e8; // ComponentProperty
		constexpr auto IndicatorInfo = 0x2f0; // FBombIndicatorInfo [0x4]
		constexpr auto IndicatorState = 0x3b0; // EBombIndicatorState
		constexpr auto LastTickState = 0x3b1; // EBombTickState
		constexpr auto ObtainableTeam = 0x3b2; // Team
		constexpr auto TicTacCycleIntervalTime = 0x3b4; // float
		constexpr auto TicTacCycleDeltaTime = 0x3b8; // float
		constexpr auto ExplosionTemplate = 0x3bc; // ObjectProperty
		constexpr auto DroppedSound = 0x3c4; // ObjectProperty
		constexpr auto PickupSound = 0x3cc; // ObjectProperty
		constexpr auto DefuseAC = 0x3d4; // ComponentProperty
		constexpr auto DefuseStartSoundCue = 0x3dc; // ObjectProperty
		constexpr auto DefuseSuccessSoundCue = 0x3e4; // ObjectProperty
		constexpr auto BombWeaponID = 0x3ec; // int32_t
		constexpr auto CylinderRadiusOnFalling = 0x3f0; // float
		constexpr auto TossSpeed = 0x3f4; // float
		constexpr auto TossZ = 0x3f8; // float
		constexpr auto OutlineColorForComrade = 0x3fc; // FOutlineProperty
		constexpr auto OutlineColorForEnemy = 0x438; // FOutlineProperty
		constexpr auto OutlineColorWhenPlanted = 0x474; // FOutlineProperty
		constexpr auto SavedInstigator = 0x4b0; // ObjectProperty
	}

	namespace n_UCombatAnimNotify_MaterialParam {
		constexpr auto ScalarConstantParam = 0x60; // FAnimNotifyScalarParameter
		constexpr auto VectorConstantParam = 0x70; // FAnimNotifyVectorParameter
		constexpr auto TextureConstantParam = 0x98; // FTextureParameterValue
		constexpr auto SavedMICParam = 0xb8; // TArray<FMICParam>
		constexpr auto AnimStartTime = 0xc8; // float
		constexpr auto NotifyDuration = 0xcc; // float
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto BoolProp = 0x70; // FPointer
		constexpr auto BitMask = 0x78; // int32_t
		constexpr auto ResetBool = 0x7c; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_AwaitList {
		constexpr auto ShowType = 0xd0; // int32_t
		constexpr auto ShowPageNum = 0xd4; // int32_t
		constexpr auto TotalPage = 0xd8; // int32_t
		constexpr auto TitleId = 0xdc; // int32_t
		constexpr auto L_NoUserID = 0xe0; // int32_t
		constexpr auto M_NoUserID = 0xe4; // int32_t
		constexpr auto RegisterID = 0xe8; // int32_t
		constexpr auto UnRegisterID = 0xec; // int32_t
		constexpr auto AwaitListPopUpInfo = 0xf0; // FAwaitListPopUpItem [0x4]
		constexpr auto OptionType = 0x110; // char
		constexpr auto Invite_UserID_List = 0x114; // TArray<int32_t>
	}

	namespace n_AAccessControl {
		constexpr auto IPPolicies = 0x244; // TArray<FString>
		constexpr auto BannedIDs = 0x254; // TArray<FUniqueNetId>
		constexpr auto IPBanned = 0x264; // FString
		constexpr auto WrongPassword = 0x274; // FString
		constexpr auto NeedPassword = 0x284; // FString
		constexpr auto SessionBanned = 0x294; // FString
		constexpr auto KickedMsg = 0x2a4; // FString
		constexpr auto DefaultKickReason = 0x2b4; // FString
		constexpr auto IdleKickReason = 0x2c4; // FString
		constexpr auto AdminClass = 0x2d4; // AAdmin*
		constexpr auto AdminPassword = 0x2dc; // FString
		constexpr auto GamePassword = 0x2ec; // FString
		constexpr auto ACDisplayText = 0x2fc; // FString [0x3]
		constexpr auto ACDescText = 0x32c; // FString [0x3]
		constexpr auto bDontAddDefaultAdmin = 0x35c; // uint32_t : 1
		constexpr auto bAuthenticateClients = 0x35c; // uint32_t : 1
		constexpr auto bAuthenticateServer = 0x35c; // uint32_t : 1
		constexpr auto bAuthenticateListenHost = 0x35c; // uint32_t : 1
		constexpr auto bAuthDelegatesRegistered = 0x35c; // uint32_t : 1
		constexpr auto bPendingListenAuth = 0x35c; // uint32_t : 1
		constexpr auto MaxAuthRetryCount = 0x360; // int32_t
		constexpr auto AuthRetryDelay = 0x364; // int32_t
		constexpr auto OnlineSub = 0x368; // ObjectProperty
		constexpr auto CachedAuthInt = 0x370; // TScriptInterface<Class>
		constexpr auto ClientsPendingAuth = 0x380; // TArray<FPendingClientAuth>
		constexpr auto ServerAuthRetries = 0x390; // TArray<FServerAuthRetry>
		constexpr auto ListenAuthTicketUID = 0x3a0; // int32_t
		constexpr auto ListenAuthRetryCount = 0x3a4; // int32_t
	}

	namespace n_UParticleModuleKillVolume {
		constexpr auto VolumeName = 0x68; // FString
		constexpr auto LowerLeftCorner = 0x78; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x9c; // FRawDistributionVector
		constexpr auto Height = 0xc0; // FRawDistributionFloat
		constexpr auto bAbsolute = 0xe4; // uint32_t : 1
		constexpr auto bKillInside = 0xe4; // uint32_t : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xe4; // uint32_t : 1
		constexpr auto bFloor = 0xe4; // uint32_t : 1
		constexpr auto bApplyPSysScale = 0xe4; // uint32_t : 1
		constexpr auto KillVolumeType = 0xe8; // ParticleKillVolumeType
	}

	namespace n_UCombatDialogManager {
		constexpr auto OwnerMovie = 0x60; // TScriptInterface<Class>
		constexpr auto DefaultOKBtnLabelID = 0x70; // int32_t
		constexpr auto DefaultCancelBtnLabelID = 0x74; // int32_t
		constexpr auto DefaultTitleLabelID = 0x78; // int32_t
		constexpr auto DefaultOKBtnLabel = 0x7c; // FString
		constexpr auto DefaultCancelBtnLabel = 0x8c; // FString
		constexpr auto DefaultTitleLabel = 0x9c; // FString
		constexpr auto DialogInfos = 0xac; // TArray<FDialogInfo>
		constexpr auto DialogUseInfos = 0xbc; // TArray<char>
		constexpr auto bIgnoreCreateDailog = 0xcc; // uint32_t : 1
	}

	namespace n_UApexAsset {
		constexpr auto OriginalApexName = 0x60; // FString
		constexpr auto ApexComponents = 0x70; // TArray<ComponentProperty>
	}

	namespace n_UNavMeshPath_AlongLine {
		constexpr auto Direction = 0x78; // FVector
	}

	namespace n_UCombatFrontEnd_Help {
		constexpr auto MaxSubTabNum = 0xd0; // int32_t
		constexpr auto bIsFirstOpen = 0xd4; // uint32_t : 1
		constexpr auto FirstEverPlay = 0xd4; // uint32_t : 1
	}

	namespace n_UAnimNodeCrossfader {
		constexpr auto DefaultAnimSeqName = 0x110; // FName
		constexpr auto bDontBlendOutOneShot = 0x118; // uint32_t : 1
		constexpr auto PendingBlendOutTimeOneShot = 0x11c; // float
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
		constexpr auto A = 0xbc; // float
	}

	namespace n_UAnimationCompressionAlgorithm_Automatic {
		constexpr auto MaxEndEffectorError = 0x78; // float
		constexpr auto bTryFixedBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryPerTrackBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryLinearKeyRemovalCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryIntervalKeyRemoval = 0x7c; // uint32_t : 1
		constexpr auto bRunCurrentDefaultCompressor = 0x7c; // uint32_t : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x7c; // uint32_t : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x7c; // uint32_t : 1
	}

	namespace n_UApexComponentBase {
		constexpr auto ComponentBaseResources = 0x260; // FPointer
		constexpr auto ReleaseResourcesFence = 0x268; // FRenderCommandFence_Mirror
		constexpr auto Asset = 0x26c; // ObjectProperty
		constexpr auto WireframeColor = 0x274; // FColor
		constexpr auto bAssetChanged = 0x278; // uint32_t : 1
	}

	namespace n_UCombatHUD_MagazineState {
		constexpr auto LastMagazineState = 0xc0; // int32_t
		constexpr auto bInitLabels = 0xc4; // uint32_t : 1
		constexpr auto StateString = 0xc8; // FString [0x4]
		constexpr auto StateFontColor = 0x108; // FString [0x4]
	}

	namespace n_UMaterialExpressionDepthBiasedAlpha {
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto Alpha = 0xb8; // FExpressionInput
		constexpr auto Bias = 0xec; // FExpressionInput
	}

	namespace n_UGameUISceneClient {
		constexpr auto LatestDeltaTime = 0x11c; // float
		constexpr auto DoubleClickStartTime = 0x120; // FDouble
		constexpr auto DoubleClickStartPosition = 0x128; // FIntPoint
		constexpr auto InitialPressedKeys = 0x130; // FMap_Mirror
		constexpr auto bUpdateInputProcessingStatus = 0x178; // uint32_t : 1
		constexpr auto bUpdateSceneViewportSizes = 0x178; // uint32_t : 1
		constexpr auto bEnableDebugInput = 0x178; // uint32_t : 1
		constexpr auto bRenderDebugInfo = 0x178; // uint32_t : 1
		constexpr auto bCaptureUnprocessedInput = 0x178; // uint32_t : 1
		constexpr auto NavAliases = 0x17c; // TArray<FName>
		constexpr auto AxisInputKeys = 0x18c; // TArray<FName>
	}

	namespace n_ADebugCameraHUD {
		constexpr auto bDrawDebugText = 0x564; // uint32_t : 1
	}

	namespace n_UAnimNodeFrame {
		constexpr auto SizeX = 0x68; // int32_t
		constexpr auto SizeY = 0x6c; // int32_t
		constexpr auto BorderWidth = 0x70; // int32_t
		constexpr auto bDrawBox = 0x74; // uint32_t : 1
		constexpr auto bFilled = 0x74; // uint32_t : 1
		constexpr auto bTileFill = 0x74; // uint32_t : 1
		constexpr auto BorderColor = 0x78; // FColor
		constexpr auto FillColor = 0x7c; // FColor
	}

	namespace n_UCombatDataTableRefItemOption {
		constexpr auto OPCode = 0x6c; // FString
		constexpr auto OPSlot = 0x7c; // int32_t
		constexpr auto OPTypeCode = 0x80; // FString
		constexpr auto OPTP = 0x90; // int32_t
		constexpr auto OPItemCode = 0x94; // FString
		constexpr auto OPItemCount = 0xa4; // int32_t
		constexpr auto OPRetryType = 0xa8; // int32_t
		constexpr auto OPRetryValue = 0xac; // int32_t
		constexpr auto OPRetryValue2 = 0xb0; // int32_t
	}

	namespace n_UAnimObject {
		constexpr auto SkelComponent = 0x60; // ComponentProperty
	}

	namespace n_USeqCond_CompareInt {
		constexpr auto ValueA = 0xec; // int32_t
		constexpr auto ValueB = 0xf0; // int32_t
	}

	namespace n_UCombatSkelCtrl_Hinge {
		constexpr auto bInitialized = 0x100; // uint32_t : 1
		constexpr auto OwnerPawn = 0x104; // ObjectProperty
		constexpr auto AttachedBoneName = 0x10c; // FName
		constexpr auto BodyInstance = 0x114; // ObjectProperty
		constexpr auto MaxAngle = 0x11c; // float
		constexpr auto PivotAxis = 0x120; // EAxis
		constexpr auto AVModifier = 0x124; // float
		constexpr auto CurrentAngle = 0x128; // float
		constexpr auto SpringStiffness = 0x12c; // float
	}

	namespace n_ACombatDroppedSupplies_MediKit {
		constexpr auto HealRate = 0x35c; // int32_t
	}

	namespace n_UCombatDataTableRefAIRewardRank {
		constexpr auto ModeCodeName = 0x6c; // FString
		constexpr auto GRADE = 0x7c; // char
		constexpr auto Object_Min = 0x80; // int32_t
		constexpr auto Object_Max = 0x84; // int32_t
	}

	namespace n_UMaterialExpressionFluidNormal {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto bIsLayerThumbnail = 0x2dc; // uint32_t : 1
		constexpr auto DataWeightmapIndex = 0x2e0; // int32_t
		constexpr auto DataWeightmapSize = 0x2e4; // int32_t
	}

	namespace n_UCombatDataTableRefGameChannel {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Level_Block = 0x80; // int32_t
		constexpr auto Level_Low = 0x84; // int32_t
		constexpr auto Level_High = 0x88; // int32_t
		constexpr auto KAD_Block = 0x8c; // int32_t
		constexpr auto KAD_Min = 0x90; // int32_t
		constexpr auto KAD_Max = 0x94; // int32_t
		constexpr auto Clan_Block = 0x98; // int32_t
		constexpr auto Championship_Block = 0x9c; // int32_t
		constexpr auto ChampionshipTF = 0xa0; // int32_t
		constexpr auto OpenChannel = 0xa4; // int32_t
		constexpr auto OpenWorld = 0xa8; // int32_t
		constexpr auto TitleId = 0xac; // int32_t
		constexpr auto DescriptionID = 0xb0; // int32_t
		constexpr auto Ping_Block = 0xb4; // int32_t
		constexpr auto PingCount = 0xb8; // int32_t
		constexpr auto PingTolerance = 0xbc; // int32_t
		constexpr auto OpenPublisher = 0xc0; // int32_t
		constexpr auto DesignType = 0xc4; // int32_t
		constexpr auto Server = 0xc8; // int32_t
		constexpr auto ChannelState = 0xcc; // int32_t
	}

	namespace n_ACombatHUD {
		constexpr auto MovieClass = 0x564; // UCombatGFxMoviePlayer*
		constexpr auto Movie = 0x56c; // ObjectProperty
		constexpr auto HUDSoundGroupClass = 0x574; // UCombatHUDSoundGroup*
		constexpr auto HUDSoundGroup = 0x57c; // ObjectProperty
		constexpr auto bDrawPauser = 0x584; // uint32_t : 1
		constexpr auto bTick = 0x584; // uint32_t : 1
		constexpr auto bDebugAI = 0x584; // uint32_t : 1
		constexpr auto bShowServerTime = 0x584; // uint32_t : 1
		constexpr auto ChangeListVersion = 0x588; // FString
		constexpr auto AudioChannelSystem = 0x598; // ObjectProperty
		constexpr auto ServerTimePositionInfo = 0x5a0; // TArray<FServerTimePositionInfoStruct>
		constexpr auto ServerTimePosition = 0x5b0; // int32_t
	}

	namespace n_AGamePlayerCamera {
		constexpr auto ThirdPersonCam = 0x594; // ObjectProperty
		constexpr auto ThirdPersonCameraClass = 0x59c; // UGameCameraBase*
		constexpr auto FixedCam = 0x5a4; // ObjectProperty
		constexpr auto FixedCameraClass = 0x5ac; // UGameCameraBase*
		constexpr auto CurrentCamera = 0x5b4; // ObjectProperty
		constexpr auto bUseForcedCamFOV = 0x5bc; // uint32_t : 1
		constexpr auto bInterpolateCamChanges = 0x5bc; // uint32_t : 1
		constexpr auto bResetInterp = 0x5bc; // uint32_t : 1
		constexpr auto ForcedCamFOV = 0x5c0; // float
		constexpr auto LastViewTarget = 0x5c4; // ObjectProperty
		constexpr auto SplitScreenShakeScale = 0x5cc; // float
		constexpr auto LastTargetBase = 0x5d0; // ObjectProperty
		constexpr auto LastTargetBaseTM = 0x5e0; // FMatrix
	}

	namespace n_UCombatUIDataProvider_MenuOption {
		constexpr auto GameModeCodenameSet = 0x94; // TArray<FName>
		constexpr auto OptionMarkUp = 0xa4; // MATCHROOM_MODE_OPTION_TYPE
		constexpr auto OptionType = 0xa8; // FName
		constexpr auto UIType = 0xb0; // FName
		constexpr auto UILocationType = 0xb8; // FName
		constexpr auto IniName = 0xc0; // FString
	}

	namespace n_UCombatAnimNodeAdditveBlending {
		constexpr auto PlaySequenceOnRelevant = 0x114; // uint32_t : 1
	}

	namespace n_UUIWeaponSummary {
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto FriendlyName = 0xa4; // FString
		constexpr auto WeaponDescription = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
	}

	namespace n_UInteractiveFoliageComponent {
		constexpr auto FoliageSceneProxy = 0x2f4; // FPointer
	}

	namespace n_UCombatDataTableRefHelpTab {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto Category = 0x7c; // int32_t
		constexpr auto TabNameID = 0x80; // int32_t
		constexpr auto SubCodeName = 0x84; // FString [0x14]
	}

	namespace n_UInput {
		constexpr auto Bindings = 0xb0; // TArray<FKeyBind>
		constexpr auto PressedKeys = 0xc0; // TArray<FName>
		constexpr auto CurrentControllerId = 0xd0; // int32_t
		constexpr auto CurrentEvent = 0xd4; // EInputEvent
		constexpr auto CurrentDelta = 0xd8; // float
		constexpr auto CurrentDeltaTime = 0xdc; // float
		constexpr auto NameToPtr = 0xe0; // TMap<None, None>
		constexpr auto AxisArray = 0x128; // TArray<FPointer>
		constexpr auto CachedInputEvents = 0x138; // TArray<ObjectProperty>
		constexpr auto CachedAnalogInputEvents = 0x148; // TArray<ObjectProperty>
		constexpr auto CachedTouchInputEvents = 0x158; // TArray<ObjectProperty>
		constexpr auto CachedCheckInputEvent = 0x168; // ObjectProperty
		constexpr auto CachedIgnoreKeys = 0x170; // TArray<FName>
		constexpr auto EscapeKeyName = 0x180; // FString
		constexpr auto CurrentTouches = 0x190; // TArray<FTouchTracker>
	}

	namespace n_USeqAct_AttachToActor {
		constexpr auto bDetach = 0x108; // uint32_t : 1
		constexpr auto bHardAttach = 0x108; // uint32_t : 1
		constexpr auto bUseRelativeOffset = 0x108; // uint32_t : 1
		constexpr auto bUseRelativeRotation = 0x108; // uint32_t : 1
		constexpr auto BoneName = 0x10c; // FName
		constexpr auto RelativeOffset = 0x114; // FVector
		constexpr auto RelativeRotation = 0x120; // FRotator
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x68; // ObjectProperty
		constexpr auto CastShadows = 0x70; // uint32_t : 1
		constexpr auto DoCollisions = 0x70; // uint32_t : 1
		constexpr auto bAllowMotionBlur = 0x70; // uint32_t : 1
		constexpr auto bOverrideMaterial = 0x70; // uint32_t : 1
		constexpr auto bCameraFacing = 0x70; // uint32_t : 1
		constexpr auto bApplyParticleRotationAsSpin = 0x70; // uint32_t : 1
		constexpr auto MeshAlignment = 0x74; // EMeshScreenAlignment
		constexpr auto AxisLockOption = 0x75; // EParticleAxisLock
		constexpr auto CameraFacingUpAxisOption = 0x76; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x77; // EMeshCameraFacingOptions
		constexpr auto Pitch = 0x78; // float
		constexpr auto Roll = 0x7c; // float
		constexpr auto Yaw = 0x80; // float
	}

	namespace n_UGameEngine {
		constexpr auto GPendingLevel = 0x9bc; // ObjectProperty
		constexpr auto PendingLevelPlayerControllerClassName = 0x9c4; // FString
		constexpr auto LastURL = 0x9d4; // FURL
		constexpr auto LastRemoteURL = 0xa2c; // FURL
		constexpr auto ServerActors = 0xa84; // TArray<FString>
		constexpr auto TravelURL = 0xa94; // FString
		constexpr auto TravelType = 0xaa4; // char
		constexpr auto bWorldWasLoadedThisTick = 0xaa8; // uint32_t : 1
		constexpr auto bSystemSettingChangeTiming = 0xaa8; // uint32_t : 1
		constexpr auto bCheckForMovieCapture = 0xaa8; // uint32_t : 1
		constexpr auto bTriggerPostLoadMap = 0xaa8; // uint32_t : 1
		constexpr auto bStartedLoadMapMovie = 0xaa8; // uint32_t : 1
		constexpr auto bShouldCommitPendingMapChange = 0xaa8; // uint32_t : 1
		constexpr auto bClearAnimSetLinkupCachesOnLoadMap = 0xaa8; // uint32_t : 1
		constexpr auto bEnableSecondaryDisplay = 0xaa8; // uint32_t : 1
		constexpr auto bEnableSecondaryViewport = 0xaa8; // uint32_t : 1
		constexpr auto OnlineSubsystem = 0xaac; // ObjectProperty
		constexpr auto DLCEnumerator = 0xab4; // ObjectProperty
		constexpr auto DownloadableContentEnumeratorClassName = 0xabc; // FString
		constexpr auto DLCManager = 0xacc; // ObjectProperty
		constexpr auto DownloadableContentManagerClassName = 0xad4; // FString
		constexpr auto LevelsToLoadForPendingMapChange = 0xae4; // TArray<FName>
		constexpr auto LoadedLevelsForPendingMapChange = 0xaf4; // TArray<ObjectProperty>
		constexpr auto PendingMapChangeFailureDescription = 0xb04; // FString
		constexpr auto MaxDeltaTime = 0xb14; // float
		constexpr auto SecondaryViewportClientClassName = 0xb18; // FString
		constexpr auto SecondaryViewportClients = 0xb28; // TArray<ObjectProperty>
		constexpr auto SecondaryViewportFrames = 0xb38; // TArray<FPointer>
		constexpr auto PendingLevelStreamingStatusUpdates = 0xb48; // TArray<FLevelStreamingStatus>
		constexpr auto ObjectReferencers = 0xb58; // TArray<ObjectProperty>
		constexpr auto PackagesToFullyLoad = 0xb68; // TArray<FFullyLoadedPackagesInfo>
		constexpr auto NamedNetDrivers = 0xb78; // TArray<FNamedNetDriver>
		constexpr auto AnimTags = 0xb88; // TArray<FAnimTag>
	}

	namespace n_UCombatPracticeGameMovie {
		constexpr auto PracticeGameHelpMC = 0xad0; // ObjectProperty
		constexpr auto PracticeGameRoundStatusMC = 0xad8; // ObjectProperty
		constexpr auto PracticeGameMessage = 0xae0; // ObjectProperty
	}

	namespace n_UAnimNodeRandom {
		constexpr auto RandomInfo = 0x120; // TArray<FRandomAnimInfo>
		constexpr auto PlayingSeqNode = 0x130; // ObjectProperty
		constexpr auto PendingChildIndex = 0x138; // int32_t
		constexpr auto bPickedPendingChildIndex = 0x13c; // uint32_t : 1
	}

	namespace n_USoundNodeAmbient {
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto DistanceModel = 0x7c; // SoundDistanceModel
		constexpr auto RadiusMin = 0x80; // float
		constexpr auto RadiusMax = 0x84; // float
		constexpr auto LPFRadiusMin = 0x88; // float
		constexpr auto LPFRadiusMax = 0x8c; // float
		constexpr auto PitchMin = 0x90; // float
		constexpr auto PitchMax = 0x94; // float
		constexpr auto VolumeMin = 0x98; // float
		constexpr auto VolumeMax = 0x9c; // float
		constexpr auto SoundSlots = 0xa0; // TArray<FAmbientSoundSlot>
	}

	namespace n_UCombatDataTableRefClanColor {
		constexpr auto Idx = 0x6c; // int32_t
		constexpr auto R = 0x70; // int32_t
		constexpr auto G = 0x74; // int32_t
		constexpr auto B = 0x78; // int32_t
	}

	namespace n_UInterpTrackHeadTracking {
		constexpr auto HeadTrackingTrack = 0xa0; // TArray<FHeadTrackingKey>
		constexpr auto TrackControllerName = 0xb0; // TArray<FName>
		constexpr auto LookAtActorRadius = 0xc0; // float
		constexpr auto bDisableBeyondLimit = 0xc4; // uint32_t : 1
		constexpr auto bLookAtPawns = 0xc4; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xc8; // float
		constexpr auto MinLookAtTime = 0xcc; // float
		constexpr auto MaxInterestTime = 0xd0; // float
		constexpr auto ActorClassesToLookAt = 0xd4; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xe4; // TArray<FName>
	}

	namespace n_UCBUIDataStore_ETC {
		constexpr auto InputExpireGoalScene = 0x98; // eFrontEndScene
		constexpr auto ModeCodenameSetForSingleRoundUI = 0x9c; // TArray<FString>
		constexpr auto ModeCodenameSetForMultiRoundUI = 0xac; // TArray<FString>
		constexpr auto LoadingUI_Title = 0xbc; // FString
		constexpr auto LoadingUI_DefaultBGImage = 0xcc; // FString
		constexpr auto LoadingUI_DefaultBGImagePath = 0xdc; // FString
		constexpr auto LoadingUI_DefaultMinimapImage = 0xec; // FString
		constexpr auto LoadingUI_DefaultMinimapImagePath = 0xfc; // FString
		constexpr auto LoadingUIInfos = 0x10c; // FLoadingUIInfo
		constexpr auto ClanRankGradePoint = 0x288; // int32_t
		constexpr auto IntrudeState = 0x28c; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefKillCombo {
		constexpr auto ModeCodeName = 0x6c; // FString
		constexpr auto ComboTime = 0x7c; // int32_t
		constexpr auto Count = 0x80; // int32_t
		constexpr auto Description = 0x84; // int32_t
		constexpr auto SoundCue = 0x88; // FString
		constexpr auto BonusPoint = 0x98; // int32_t
		constexpr auto ModeID = 0x9c; // int32_t
	}

	namespace n_USeqEvent_MobileButton {
		constexpr auto bWasActiveLastFrame = 0x138; // uint32_t : 1
		constexpr auto bSendPressedOnlyOnTouchDown = 0x138; // uint32_t : 1
		constexpr auto bSendPressedOnlyOnTouchUp = 0x138; // uint32_t : 1
	}

	namespace n_UWebRequest {
		constexpr auto RemoteAddr = 0x60; // FString
		constexpr auto URI = 0x70; // FString
		constexpr auto UserName = 0x80; // FString
		constexpr auto Password = 0x90; // FString
		constexpr auto ContentLength = 0xa0; // int32_t
		constexpr auto ContentType = 0xa4; // FString
		constexpr auto RequestType = 0xb4; // ERequestType
		constexpr auto HeaderMap = 0xb8; // FMap_Mirror
		constexpr auto VariableMap = 0x100; // FMap_Mirror
	}

	namespace n_UGameStateObject {
		constexpr auto TeamStates = 0x88; // FArray_Mirror
		constexpr auto PlayerStates = 0x98; // FArray_Mirror
		constexpr auto SessionType = 0xa8; // GameSessionType
		constexpr auto bIsMatchStarted = 0xac; // uint32_t : 1
		constexpr auto bIsRoundStarted = 0xac; // uint32_t : 1
		constexpr auto RoundNumber = 0xb0; // int32_t
		constexpr auto MaxRoundNumber = 0xb4; // int32_t
	}

	namespace n_ALensFlareSource {
		constexpr auto LensFlareComp = 0x244; // ComponentProperty
		constexpr auto bCurrentlyActive = 0x24c; // uint32_t : 1
	}

	namespace n_UParticleModuleTypeDataPhysX {
		constexpr auto PhysXParSys = 0x68; // ObjectProperty
		constexpr auto VerticalLod = 0x70; // FPhysXEmitterVerticalLodProperties
	}

	namespace n_UCombatAnim_AimOffset {
		constexpr auto CombatPawnOwner = 0x160; // ObjectProperty
		constexpr auto bOnlyUpdateIn360Aiming = 0x168; // uint32_t : 1
		constexpr auto bTurnOffWhenReloadingWeapon = 0x168; // uint32_t : 1
		constexpr auto bOnlyUpdateOnBecomeRelevant = 0x168; // uint32_t : 1
		constexpr auto bDoingWeaponReloadInterp = 0x168; // uint32_t : 1
		constexpr auto ReloadingBlendTime = 0x16c; // float
		constexpr auto ReloadingBlendTimeToGo = 0x170; // float
		constexpr auto LastAimOffset = 0x174; // FVector2D
		constexpr auto LastPostProcessedAimOffset = 0x17c; // FVector2D
		constexpr auto TurnAroundTimeToGo = 0x184; // float
		constexpr auto TurnAroundBlendTime = 0x188; // float
	}

	namespace n_UCombatHUD_HitDamageBoard {
		constexpr auto BoardList = 0xc0; // TArray<ObjectProperty>
		constexpr auto BoardList_DamageTF = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_USequence {
		constexpr auto LogFile = 0xec; // FPointer
		constexpr auto SequenceObjects = 0xf4; // TArray<ObjectProperty>
		constexpr auto ActiveSequenceOps = 0x104; // TArray<ObjectProperty>
		constexpr auto NestedSequences = 0x114; // TArray<ObjectProperty>
		constexpr auto UnregisteredEvents = 0x124; // TArray<ObjectProperty>
		constexpr auto DelayedActivatedOps = 0x134; // TArray<FActivateOp>
		constexpr auto DelayedLatentOps = 0x144; // TArray<ObjectProperty>
		constexpr auto bEnabled = 0x154; // uint32_t : 1
		constexpr auto QueuedActivations = 0x158; // TArray<FQueuedActivationInfo>
		constexpr auto DefaultViewX = 0x168; // int32_t
		constexpr auto DefaultViewY = 0x16c; // int32_t
		constexpr auto DefaultViewZoom = 0x170; // float
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x60; // FString
		constexpr auto HelpUsage = 0x70; // FString
		constexpr auto HelpWebLink = 0x80; // FString
		constexpr auto HelpParamNames = 0x90; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0xa0; // TArray<FString>
		constexpr auto IsServer = 0xb0; // uint32_t : 1
		constexpr auto IsClient = 0xb0; // uint32_t : 1
		constexpr auto IsEditor = 0xb0; // uint32_t : 1
		constexpr auto LogToConsole = 0xb0; // uint32_t : 1
		constexpr auto ShowErrorCount = 0xb0; // uint32_t : 1
	}

	namespace n_USeqAct_SwitchWeapon {
		constexpr auto WeaponNumber = 0x108; // int32_t
	}

	namespace n_UActorFactoryDynamicSM {
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
		constexpr auto bNoEncroachCheck = 0xb0; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xb0; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0xb0; // uint32_t : 1
		constexpr auto bUseCompartment = 0xb0; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xb0; // uint32_t : 1
		constexpr auto CollisionType = 0xb4; // ECollisionType
	}

	namespace n_UNavMeshGoalFilter_OutSideOfDotProductWedge {
		constexpr auto Location = 0x6c; // FVector
		constexpr auto Rotation = 0x78; // FVector
		constexpr auto Epsilon = 0x84; // float
	}

	namespace n_USeqEvent_TakeDamage {
		constexpr auto MinDamageAmount = 0x128; // float
		constexpr auto DamageThreshold = 0x12c; // float
		constexpr auto DamageTypes = 0x130; // TArray<UDamageType*>
		constexpr auto IgnoreDamageTypes = 0x140; // TArray<UDamageType*>
		constexpr auto CurrentDamage = 0x150; // float
		constexpr auto bResetDamageOnToggle = 0x154; // uint32_t : 1
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_UCombatImpactLight {
		constexpr auto StartBrightness = 0x240; // float
		constexpr auto Lifetime = 0x244; // float
		constexpr auto PassedTime = 0x248; // float
		constexpr auto __OnLightFinished__Delegate = 0x24c; // DelegateProperty
	}

	namespace n_UCombatDataTableRefLimitSale {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto Level = 0x7c; // int32_t
		constexpr auto LimitCount = 0x80; // int32_t
	}

	namespace n_UActorFactoryApexClothing {
		constexpr auto ClothingAssets = 0xb4; // TArray<ObjectProperty>
		constexpr auto ClothingRBChannel = 0xc4; // ERBCollisionChannel
		constexpr auto ClothingRBCollideWithChannels = 0xc8; // FRBCollisionChannelContainer
	}

	namespace n_UCombatExplosion {
		constexpr auto MinDamage = 0x148; // float
		constexpr auto FullDamageRadius = 0x14c; // float
		constexpr auto AmbientExploDamageRadius = 0x150; // float
		constexpr auto DecalData = 0x154; // FDecalData
		constexpr auto DecalTraceDistance = 0x184; // float
		constexpr auto RadialuBlurMaterial = 0x188; // ObjectProperty
		constexpr auto RadialBlurFallOffExponent = 0x190; // float
		constexpr auto RadialBlurScale = 0x194; // float
		constexpr auto ForceHitNormalCheckForDecal = 0x198; // uint32_t : 1
		constexpr auto bIgnoreBlock = 0x198; // uint32_t : 1
		constexpr auto bIgnoreBlockForCamShake = 0x198; // uint32_t : 1
		constexpr auto bIgnoreCamShake = 0x198; // uint32_t : 1
		constexpr auto IsPlantExplosion = 0x198; // uint32_t : 1
		constexpr auto DamageAdjustmentList = 0x19c; // TArray<FExplosionDamageAdjustment>
		constexpr auto DamageRatioForInstigator = 0x1ac; // float
		constexpr auto CheckOffSet = 0x1b0; // float
		constexpr auto AddParticleSpawnRotation = 0x1b4; // FRotator
	}

	namespace n_ACameraLocationPoint {
		constexpr auto CameraActorFOV = 0x244; // float
		constexpr auto CameraActorOverridePostProcess = 0x248; // FPostProcessSettings
	}

	namespace n_UCombatHUD_IFFObject {
		constexpr auto Container = 0xbc; // ObjectProperty
		constexpr auto BombMC = 0xc4; // ObjectProperty
		constexpr auto RadioMC = 0xcc; // ObjectProperty
		constexpr auto KillerMC = 0xd4; // ObjectProperty
		constexpr auto RankIconMC = 0xdc; // ObjectProperty
		constexpr auto HPMC = 0xe4; // ObjectProperty
		constexpr auto AggroMC = 0xec; // ObjectProperty
		constexpr auto FriendlyNameMC = 0xf4; // ObjectProperty
		constexpr auto EnemyNameMC = 0xfc; // ObjectProperty
		constexpr auto FlashIconMC = 0x104; // ObjectProperty
		constexpr auto bIsDisplayRadio = 0x10c; // uint32_t : 1
		constexpr auto bIsDisplayKiller = 0x10c; // uint32_t : 1
		constexpr auto bFlashIconVisible = 0x10c; // uint32_t : 1
		constexpr auto bCurrentIFFEnemy = 0x10c; // uint32_t : 1
		constexpr auto LastRankIcon = 0x110; // FString
		constexpr auto LastClanName = 0x120; // FString
		constexpr auto LastClanColor = 0x130; // FString
		constexpr auto LastRankIconImageID = 0x140; // int32_t
		constexpr auto LastClanColorID = 0x144; // int32_t
		constexpr auto MinLocatorScale = 0x148; // float
		constexpr auto MaxLocatorScale = 0x14c; // float
		constexpr auto DistanceForMinScale = 0x150; // float
		constexpr auto LocatorScale = 0x154; // float
		constexpr auto LastLocatorScale = 0x158; // int32_t
		constexpr auto CurrentIFFInfo = 0x15c; // FIFFInfo
		constexpr auto IFFUpdateTime = 0x1b8; // float
	}

	namespace n_UCombatFrontEnd_Event_MissionTab {
		constexpr auto MissionState_TextColor = 0x6c; // FString [0x2]
		constexpr auto QuestGroupList = 0x8c; // TArray<QUEST_GROUP>
	}

	namespace n_UDrawConeComponent {
		constexpr auto ConeColor = 0x250; // FColor
		constexpr auto ConeRadius = 0x254; // float
		constexpr auto ConeAngle = 0x258; // float
		constexpr auto ConeSides = 0x25c; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb4; // uint32_t : 1
		constexpr auto bAdjustForWorldSpace = 0xb4; // uint32_t : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xdc; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x100; // CylinderHeightAxis
	}

	namespace n_USeqAct_SetObject {
		constexpr auto DefaultValue = 0x108; // ObjectProperty
		constexpr auto Value = 0x110; // ObjectProperty
	}

	namespace n_UCombatSkill {
		constexpr auto Skilltype = 0x60; // ESkillType
		constexpr auto SkillGroup = 0x61; // char
		constexpr auto SkillOwner = 0x64; // ObjectProperty
		constexpr auto SkillCodeName = 0x6c; // FString
		constexpr auto refIndex = 0x7c; // int32_t
	}

	namespace n_UPhysXParticleSystem {
		constexpr auto MaxParticles = 0x60; // int32_t
		constexpr auto ParticleSpawnReserve = 0x64; // int32_t
		constexpr auto RBChannel = 0x68; // ERBCollisionChannel
		constexpr auto SimulationMethod = 0x69; // ESimulationMethod
		constexpr auto PacketSizeMultiplier = 0x6a; // EPacketSizeMultiplier
		constexpr auto RBCollideWithChannels = 0x6c; // FRBCollisionChannelContainer
		constexpr auto CollisionDistance = 0x70; // float
		constexpr auto RestitutionWithStaticShapes = 0x74; // float
		constexpr auto RestitutionWithDynamicShapes = 0x78; // float
		constexpr auto FrictionWithStaticShapes = 0x7c; // float
		constexpr auto FrictionWithDynamicShapes = 0x80; // float
		constexpr auto StaticFrictionWithStaticShapes = 0x84; // float
		constexpr auto StaticFrictionWithDynamicShapes = 0x88; // float
		constexpr auto bDynamicCollision = 0x8c; // uint32_t : 1
		constexpr auto bDisableGravity = 0x8c; // uint32_t : 1
		constexpr auto bStaticCollision = 0x8c; // uint32_t : 1
		constexpr auto bTwoWayCollision = 0x8c; // uint32_t : 1
		constexpr auto bDestroy = 0x8c; // uint32_t : 1
		constexpr auto bSyncFailed = 0x8c; // uint32_t : 1
		constexpr auto bIsInGame = 0x8c; // uint32_t : 1
		constexpr auto MaxMotionDistance = 0x90; // float
		constexpr auto Damping = 0x94; // float
		constexpr auto ExternalAcceleration = 0x98; // FVector
		constexpr auto RestParticleDistance = 0xa4; // float
		constexpr auto RestDensity = 0xa8; // float
		constexpr auto KernelRadiusMultiplier = 0xac; // float
		constexpr auto Stiffness = 0xb0; // float
		constexpr auto Viscosity = 0xb4; // float
		constexpr auto CollisionResponseCoefficient = 0xb8; // float
		constexpr auto CascadeScene = 0xbc; // FPointer
		constexpr auto PSys = 0xc4; // FPointer
	}

	namespace n_UMaterialExpressionConstantClamp {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // float
		constexpr auto Max = 0xe8; // float
	}

	namespace n_ACombatSuicideVolume {
		constexpr auto DamageType = 0x280; // UDamageType*
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x90; // uint32_t : 1
		constexpr auto bLockAxes2 = 0x90; // uint32_t : 1
		constexpr auto bUseExtremes = 0x90; // uint32_t : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x96; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_UGFxAction_SetCaptureKeys {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto CaptureKeys = 0x110; // TArray<FName>
	}

	namespace n_UCombatDataTableRefPingGroup {
		constexpr auto GroupID = 0x6c; // int32_t
		constexpr auto PingUpper = 0x70; // int32_t
	}

	namespace n_USeqEvent_Console {
		constexpr auto ConsoleEventName = 0x128; // FName
		constexpr auto EventDesc = 0x130; // FString
	}

	namespace n_USeqEvent_HudRenderImage {
		constexpr auto DisplayColor = 0x140; // FLinearColor
		constexpr auto DisplayLocation = 0x150; // FVector
		constexpr auto DisplayTexture = 0x15c; // ObjectProperty
		constexpr auto XL = 0x164; // float
		constexpr auto YL = 0x168; // float
		constexpr auto U = 0x16c; // float
		constexpr auto V = 0x170; // float
		constexpr auto UL = 0x174; // float
		constexpr auto VL = 0x178; // float
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
	}

	namespace n_ACombatPawn {
		constexpr auto CustomGravityScaling = 0x558; // float
		constexpr auto bUseBotWeaponMovement = 0x55c; // uint32_t : 1
		constexpr auto bAllowDiagonalLadderClimb = 0x55c; // uint32_t : 1
		constexpr auto bCheckVelocityLotation = 0x55c; // uint32_t : 1
		constexpr auto bInitSavedLocation = 0x55c; // uint32_t : 1
		constexpr auto bRotationFollowsVelocity = 0x55c; // uint32_t : 1
		constexpr auto bUpdateEyeheight = 0x55c; // uint32_t : 1
		constexpr auto bApplyInstanceItem = 0x55c; // uint32_t : 1
		constexpr auto PowerBullet_Buff = 0x55c; // uint32_t : 1
		constexpr auto bIsBlockedByPawnCollision = 0x55c; // uint32_t : 1
		constexpr auto bIsInvulnerable = 0x55c; // uint32_t : 1
		constexpr auto bJustLanded = 0x55c; // uint32_t : 1
		constexpr auto bLandRecovery = 0x55c; // uint32_t : 1
		constexpr auto bCanDisplayIconInTacticalMap = 0x55c; // uint32_t : 1
		constexpr auto bIgnorePitch = 0x55c; // uint32_t : 1
		constexpr auto DoDeathAnimPhysBlend = 0x55c; // uint32_t : 1
		constexpr auto bPlayDamageAnim = 0x55c; // uint32_t : 1
		constexpr auto IsMoving = 0x55c; // uint32_t : 1
		constexpr auto bIsLocalPawn = 0x55c; // uint32_t : 1
		constexpr auto bIsCheatPawn = 0x55c; // uint32_t : 1
		constexpr auto bCheckPhysWalkingLedges = 0x55c; // uint32_t : 1
		constexpr auto bWeaponImpactAttenuate = 0x55c; // uint32_t : 1
		constexpr auto bSaveSkill = 0x55c; // uint32_t : 1
		constexpr auto bLeftFootDown = 0x55c; // uint32_t : 1
		constexpr auto bRespawnAction = 0x55c; // uint32_t : 1
		constexpr auto IgnoreKillZ = 0x55c; // uint32_t : 1
		constexpr auto DeathCertificate = 0x55c; // uint32_t : 1
		constexpr auto WasCrouchedOnDeath = 0x55c; // uint32_t : 1
		constexpr auto bStuckHandsOnDeath = 0x55c; // uint32_t : 1
		constexpr auto bPotentialWallSmash = 0x55c; // uint32_t : 1
		constexpr auto bFinishedPrePlayDyingCheck = 0x55c; // uint32_t : 1
		constexpr auto IgnoreAimoffset = 0x55c; // uint32_t : 1
		constexpr auto UpdateHandGripPos = 0x55c; // uint32_t : 1
		constexpr auto bDirtyWeaponAmmo = 0x560; // uint32_t : 1
		constexpr auto bGodMode = 0x560; // uint32_t : 1
		constexpr auto bProcessFellOutOfWorld = 0x560; // uint32_t : 1
		constexpr auto OnParachute = 0x560; // uint32_t : 1
		constexpr auto bNeedToUpdateSkelpose = 0x560; // uint32_t : 1
		constexpr auto bAIIgnoreAimDir = 0x560; // uint32_t : 1
		constexpr auto bIgnoreDamagedDecelerationRatio = 0x560; // uint32_t : 1
		constexpr auto bCanStaminaRecover = 0x560; // uint32_t : 1
		constexpr auto bBlockCrouch = 0x560; // uint32_t : 1
		constexpr auto bSetForceSpamGrade = 0x560; // uint32_t : 1
		constexpr auto bOnFlashInability = 0x560; // uint32_t : 1
		constexpr auto CachedPRI = 0x564; // ObjectProperty
		constexpr auto DyingLocation = 0x56c; // FVector
		constexpr auto FlyingAirSpeed = 0x578; // float
		constexpr auto LadderClimbType = 0x57c; // ELadderClimbType
		constexpr auto PawnBuffState = 0x57d; // EPawnBuffState
		constexpr auto AccessoryEnableSlot = 0x57e; // char [0x6]
		constexpr auto IFFDisplayType = 0x584; // EIFFDisplayType
		constexpr auto RecoilCount = 0x585; // char
		constexpr auto VelocityState = 0x586; // EVelocityState
		constexpr auto RotationYaw = 0x587; // ERotationStep
		constexpr auto IKHand = 0x588; // EHand
		constexpr auto CombatPawnTeamNum = 0x589; // char
		constexpr auto PenetrateBeforeHit = 0x58a; // char
		constexpr auto CrouchSpamGrade = 0x58b; // char
		constexpr auto LadderStrafingSpeed = 0x58c; // float
		constexpr auto StrafeAllowDegreeOnLadder = 0x590; // float
		constexpr auto StrafeAllowValueOnLadder = 0x594; // float
		constexpr auto AttachingDegreeOnLadder = 0x598; // float
		constexpr auto AttachingValueOnLadder = 0x59c; // float
		constexpr auto AllowedClimbUpDegreeOnLadder = 0x5a0; // float
		constexpr auto AllowedClimbUpValueOnLadder = 0x5a4; // float
		constexpr auto AllowedClimbDownDegreeOnLadder = 0x5a8; // float
		constexpr auto AllowedClimbDownValueOnLadder = 0x5ac; // float
		constexpr auto VelocityReduceRatioForLanding = 0x5b0; // float
		constexpr auto VelocityReduceRatioOnWalkingJump = 0x5b4; // float
		constexpr auto DialogObj = 0x5b8; // ObjectProperty
		constexpr auto PrevLocation = 0x5c0; // FVector
		constexpr auto LastTakeHitInfo = 0x5cc; // FCBTakeHitInfo
		constexpr auto LastTakeHitInfoByLocalPlayer = 0x614; // FCBTakeHitInfo
		constexpr auto MeshTranslationOffset = 0x65c; // FVector
		constexpr auto MeshTranslationIntegralOffset = 0x668; // FVector2D
		constexpr auto FixedMeshTranslationOffset = 0x670; // FVector
		constexpr auto CrouchTranslationOffset = 0x67c; // float
		constexpr auto CrouchStartTime = 0x680; // float
		constexpr auto CrouchLength = 0x684; // float
		constexpr auto MeshTranslationKpAmt = 0x688; // float
		constexpr auto MeshTranslationKiAmt = 0x68c; // float
		constexpr auto MeshTranslationFallingSpeed = 0x690; // float
		constexpr auto MeshTranslationZSpeed = 0x694; // float
		constexpr auto CombatSavedLocation = 0x698; // FVector
		constexpr auto OldZ = 0x6a4; // float
		constexpr auto TossWeaponSpeed = 0x6a8; // float
		constexpr auto TossSwappedWeaponSpeed = 0x6ac; // float
		constexpr auto RootRotControl = 0x6b0; // ObjectProperty
		constexpr auto AimNode = 0x6b8; // ObjectProperty
		constexpr auto CrouchNode = 0x6c0; // ObjectProperty
		constexpr auto RecoilNodes = 0x6c8; // TArray<ObjectProperty>
		constexpr auto LookAtCtrl = 0x6d8; // ObjectProperty
		constexpr auto MyCombatWeapon = 0x6e0; // ObjectProperty
		constexpr auto PassiveWeaponList = 0x6e8; // TArray<ObjectProperty>
		constexpr auto MyGrenadeWeapon = 0x6f8; // TArray<ObjectProperty>
		constexpr auto MyPrimaryWeapon = 0x708; // TArray<ObjectProperty>
		constexpr auto SlopeBoostFriction = 0x718; // float
		constexpr auto CurrentSkelAim = 0x71c; // FVector2D
		constexpr auto BackwardSpeedPct = 0x724; // float
		constexpr auto StandardGroundSpeed = 0x728; // float
		constexpr auto AddMainAmmo_Buff = 0x72c; // float
		constexpr auto AddSubAmmo_Buff = 0x730; // float
		constexpr auto AddMainMagazineAmmo_Buff = 0x734; // float
		constexpr auto AddSubMagazineAmmo_Buff = 0x738; // float
		constexpr auto MaxMainMagazineAmmo_Buff = 0x73c; // float
		constexpr auto MaxSubMagazineAmmo_Buff = 0x740; // float
		constexpr auto ReloadingRate_Buff = 0x744; // float
		constexpr auto WeaponChangeRate_Buff = 0x748; // float
		constexpr auto MaxHealthRate_Buff = 0x74c; // float
		constexpr auto HealthCureRate_Buff = 0x750; // float
		constexpr auto MaxAutoCureHealthModifier_Buff = 0x754; // float
		constexpr auto GroundCrouchSpeedRate_Buff = 0x758; // float
		constexpr auto GroundAccelationRate_Buff = 0x75c; // float
		constexpr auto GroundRunSpeedRate_Buff = 0x760; // float
		constexpr auto GroundWalkingSpeedRate_Buff = 0x764; // float
		constexpr auto DetailedRadarDistance_Buff = 0x768; // float
		constexpr auto RadarRange_Buff = 0x76c; // float
		constexpr auto GunAttackRate_Buff = 0x770; // float
		constexpr auto GunGuardRate_Buff = 0x774; // float
		constexpr auto MeleeAttackRate_Buff = 0x778; // float
		constexpr auto MeleeGuardRate_Buff = 0x77c; // float
		constexpr auto ExplosiveAttackRate_Buff = 0x780; // float
		constexpr auto ExplosiveGuardRate_Buff = 0x784; // float
		constexpr auto AddGrenade_Buff = 0x788; // int32_t
		constexpr auto InstanceItem_GroundCrouchSpeedRate_Buff = 0x78c; // float
		constexpr auto InstanceItem_GroundAccelationRate_Buff = 0x790; // float
		constexpr auto InstanceItem_GroundRunSpeedRate_Buff = 0x794; // float
		constexpr auto InstanceItem_GroundWalkingSpeedRate_Buff = 0x798; // float
		constexpr auto AP_Buff = 0x79c; // FArmorPointStruct [0x12]
		constexpr auto APForExplosion_Buff = 0xa6c; // int32_t
		constexpr auto ShortenRespawnDelay_Buff = 0xa70; // float
		constexpr auto DamagedAccelerationRatio_Buff = 0xa74; // float
		constexpr auto GunAttackRateForAI = 0xa78; // float
		constexpr auto MeleeAttackRateForAI = 0xa7c; // float
		constexpr auto GrenadeAttackRateForAI = 0xa80; // float
		constexpr auto IgnoreCheckExpose = 0xa84; // int32_t
		constexpr auto RepFootStepSoundMultiplier = 0xa88; // float
		constexpr auto SoundGroupClass = 0xa8c; // UCBPawnSoundGroup*
		constexpr auto CurrCharClassInfo = 0xa94; // UCBFamilyInfo*
		constexpr auto CurrInstanceItemClassInfo = 0xa9c; // UCombatInstanceItem_ArmorBase*
		constexpr auto Left_Armor = 0xaa4; // ComponentProperty
		constexpr auto Right_Armor = 0xaac; // ComponentProperty
		constexpr auto AccessoryClassInfo = 0xab4; // UCombatAccessory_Base* [0x6]
		constexpr auto AccessorySkeletalMeshComp = 0xae4; // ComponentProperty [0x6]
		constexpr auto DefaultMeshScale = 0xb14; // float
		constexpr auto FamiliInfoType = 0xb18; // FName
		constexpr auto RadioVoiceClass = 0xb20; // UCombatVoiceBase*
		constexpr auto LightEnvironment = 0xb28; // ComponentProperty
		constexpr auto Bob = 0xb30; // float
		constexpr auto Bob_Y = 0xb34; // float
		constexpr auto Bob_Y_Freq = 0xb38; // float
		constexpr auto BobSeperationFactor = 0xb3c; // float
		constexpr auto AppliedBob = 0xb40; // float
		constexpr auto bobtime = 0xb44; // float
		constexpr auto WalkBob = 0xb48; // FVector
		constexpr auto CameraScale = 0xb54; // float
		constexpr auto CurrentCameraScale = 0xb58; // float
		constexpr auto CameraScaleMin = 0xb5c; // float
		constexpr auto CameraScaleMax = 0xb60; // float
		constexpr auto CameraZOffset = 0xb64; // float
		constexpr auto FullBodyAnimSlot = 0xb68; // ObjectProperty
		constexpr auto TopHalfAnimSlot = 0xb70; // ObjectProperty
		constexpr auto TopHalfParentNode = 0xb78; // ObjectProperty
		constexpr auto PhysAssetForDeath = 0xb80; // ObjectProperty
		constexpr auto CamOffset = 0xb88; // FVector
		constexpr auto HeroCameraScale = 0xb94; // float
		constexpr auto HeroCameraPitch = 0xb98; // int32_t
		constexpr auto HealthGaugeStep = 0xb9c; // int32_t
		constexpr auto CameraShake_DecreaseByDepense = 0xba0; // TArray<FCameraShakeRotationFactor>
		constexpr auto HitRangeForCameraShake = 0xbb0; // TArray<int32_t>
		constexpr auto CameraShakeMinRange = 0xbc0; // FCameraShakeRotationFactor
		constexpr auto CameraShakeMaxRange = 0xbc8; // FCameraShakeRotationFactor
		constexpr auto CameraShakeSpeed = 0xbd0; // float
		constexpr auto CameraShakeRecoverSpeed = 0xbd4; // float
		constexpr auto CameraShakeRandom = 0xbd8; // float
		constexpr auto CameraShakeOffset = 0xbdc; // FRotator
		constexpr auto AutoCorrectCameraShakeOffset = 0xbe8; // FRotator
		constexpr auto DeltaCameraShake = 0xbf4; // FRotator
		constexpr auto MaxFootstepDistSq = 0xc00; // float
		constexpr auto MaxJumpSoundDistSq = 0xc04; // float
		constexpr auto NoLandedSoundVelZSize = 0xc08; // float
		constexpr auto MaxDistForBloodSplatter = 0xc0c; // float
		constexpr auto CrounchEyeHeight = 0xc10; // float
		constexpr auto DeathRagdollTime = 0xc14; // float
		constexpr auto CompressedLastImpactLocation = 0xc18; // FVectorWithFlag
		constexpr auto TurnInPlaceNode = 0xc28; // ObjectProperty
		constexpr auto ViewTargetRotationInterpolationSpeed = 0xc30; // float
		constexpr auto InterpolatedRemoteViewPitch = 0xc34; // int32_t
		constexpr auto YawInterpolationSpeed = 0xc38; // float
		constexpr auto InterpolatedYaw = 0xc3c; // int32_t
		constexpr auto EyeHeightInterpolationSpeed = 0xc40; // float
		constexpr auto InterpolatedEyeHeight = 0xc44; // float
		constexpr auto AimAssistDamageMultiplier = 0xc48; // float
		constexpr auto MeleeAssistDamageMultiplier = 0xc4c; // float
		constexpr auto LastAimRotationTime = 0xc50; // float
		constexpr auto LastAimRotation = 0xc54; // FRotator
		constexpr auto VelocityWithIsMoving = 0xc60; // FVectorWithFlag
		constexpr auto VelocityMutiplyRatioToCollideOtherPawn = 0xc70; // float
		constexpr auto SlideFriction = 0xc74; // float
		constexpr auto WeaponImpactUndampedSound = 0xc78; // ComponentProperty
		constexpr auto WeaponImpactUndampedVoice = 0xc80; // ComponentProperty
		constexpr auto PhysicCorpses = 0xc88; // float
		constexpr auto SpawnProtectionAmbientCycleTime = 0xc8c; // float
		constexpr auto SpawnProtectionAmbientGlow = 0xc90; // FLinearColor
		constexpr auto GetterPickupEffectComp = 0xca0; // ComponentProperty
		constexpr auto PawnCollision = 0xca8; // ComponentProperty
		constexpr auto ActiveTimeDilationAnim = 0xcb0; // ObjectProperty
		constexpr auto DyingExplosionActorsForTimeDilation = 0xcb8; // TArray<ObjectProperty>
		constexpr auto ViewTargetRotation = 0xcc8; // int32_t
		constexpr auto CBInvManager = 0xccc; // ObjectProperty
		constexpr auto ShadowDecal = 0xcd4; // ComponentProperty
		constexpr auto BelowFeetCheckDistance = 0xcdc; // float
		constexpr auto BelowFeetCheckDistanceSq = 0xce0; // float
		constexpr auto LastPhysMatBelowFeet = 0xce4; // FPhysMaterialBelowFeet
		constexpr auto FootDownBoneName = 0xcf8; // FName [0x2]
		constexpr auto FootExtent = 0xd08; // FVector
		constexpr auto CurrentTerminalVelocity = 0xd14; // float
		constexpr auto LeftDeathAnimTime = 0xd18; // float
		constexpr auto ReachedGoalSplineTime = 0xd1c; // float
		constexpr auto IFFObject = 0xd20; // ObjectProperty
		constexpr auto LocalHitBodyIndex = 0xd28; // int32_t
		constexpr auto LocalHitDir = 0xd2c; // FVector
		constexpr auto LastHitBone = 0xd38; // FName
		constexpr auto WallSmashMod = 0xd40; // float
		constexpr auto MomentumEff = 0xd44; // float
		constexpr auto OnDeathVelocity = 0xd48; // FVector
		constexpr auto RagdollPushEff = 0xd54; // float
		constexpr auto RagdollPushBone = 0xd58; // FName
		constexpr auto RagdollUpKick = 0xd60; // float
		constexpr auto NoRagdollVelocity = 0xd64; // float
		constexpr auto WallSmashDist = 0xd68; // float
		constexpr auto RagdollTraceStartOffset = 0xd6c; // float
		constexpr auto HandGripIKNode = 0xd70; // ObjectProperty [0x2]
		constexpr auto BanzaiImpulse = 0xd80; // float
		constexpr auto WallCheckSpreadYaw = 0xd84; // int32_t
		constexpr auto RollBob = 0xd88; // float
		constexpr auto AmmorPoint = 0xd8c; // FArmorPointStruct [0x12]
		constexpr auto AmmorPointForExplosion = 0x105c; // int32_t
		constexpr auto AmmorItemGrade = 0x1060; // int32_t
		constexpr auto PhysBodyImpulseMap = 0x1064; // TArray<FImpulseData>
		constexpr auto StoredHandGrip = 0x1074; // FVector
		constexpr auto fReplicatedCustomTimeD = 0x1080; // float
		constexpr auto CriticalDamagePitch = 0x1084; // int32_t
		constexpr auto LastApplyFamilyInfoTime = 0x1088; // float
		constexpr auto ChaFXUpperItem = 0x108c; // ObjectProperty
		constexpr auto ChaFXFootItem = 0x1094; // ObjectProperty
		constexpr auto TrophySkillObject = 0x109c; // ObjectProperty
		constexpr auto SentryGunSkillObject = 0x10a4; // ObjectProperty
		constexpr auto AdditionalDamagedDecelerationRatio = 0x10ac; // float
		constexpr auto MaxDamagedDecelerationRatio = 0x10b0; // float
		constexpr auto CrouchValue = 0x10b4; // TArray<FCrouchSpamValue>
		constexpr auto CrouchStamina = 0x10c4; // float
		constexpr auto CrouchStaminaMax = 0x10c8; // float
		constexpr auto CrouchStaminaRecoverForSec = 0x10cc; // float
		constexpr auto CrouchStaminaUseValue = 0x10d0; // float
		constexpr auto CrouchStaminaHoldTime = 0x10d4; // float
		constexpr auto CrouchSpamGradeZeroRange = 0x10d8; // float
		constexpr auto CrouchSpamGradeOneRange = 0x10dc; // float
		constexpr auto CrouchSpamGradeTwoRange = 0x10e0; // float
		constexpr auto CrouchSpamGradeThreeRange = 0x10e4; // float
		constexpr auto ForceSpamGradeLevel = 0x10e8; // int32_t
		constexpr auto FlashEffectInfo = 0x10ec; // FFlashEffectRepStruct
		constexpr auto CurrentFlashEffectInfo = 0x10f4; // FFlashEffectRepStruct
		constexpr auto FlashEffectSyncDeltaTime = 0x10fc; // float
		constexpr auto FlashEffectSyncDelay = 0x1100; // float
		constexpr auto FlashEffectMaxTime = 0x1104; // float
		constexpr auto FlashEffectStartTime = 0x1108; // float
		constexpr auto __OnDetachDroppedWeapon__Delegate = 0x110c; // DelegateProperty
	}

	namespace n_UOnlineTitleFileDownloadMcp {
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileMcp>
		constexpr auto DownloadCount = 0x114; // int32_t
	}

	namespace n_UCombatHUD_BattleLog {
		constexpr auto bDisplayed = 0xc0; // uint32_t : 1
	}

	namespace n_UTranslationContext {
		constexpr auto TranslatorTags = 0x60; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_SetDOFParams {
		constexpr auto FalloffExponent = 0x120; // float
		constexpr auto BlurKernelSize = 0x124; // float
		constexpr auto MaxNearBlurAmount = 0x128; // float
		constexpr auto MinBlurAmount = 0x12c; // float
		constexpr auto MaxFarBlurAmount = 0x130; // float
		constexpr auto FocusInnerRadius = 0x134; // float
		constexpr auto FocusDistance = 0x138; // float
		constexpr auto FocusPosition = 0x13c; // FVector
		constexpr auto InterpolateSeconds = 0x148; // float
		constexpr auto InterpolateElapsed = 0x14c; // float
		constexpr auto OldFalloffExponent = 0x150; // float
		constexpr auto OldBlurKernelSize = 0x154; // float
		constexpr auto OldMaxNearBlurAmount = 0x158; // float
		constexpr auto OldMinBlurAmount = 0x15c; // float
		constexpr auto OldMaxFarBlurAmount = 0x160; // float
		constexpr auto OldFocusInnerRadius = 0x164; // float
		constexpr auto OldFocusDistance = 0x168; // float
		constexpr auto OldFocusPosition = 0x16c; // FVector
	}

	namespace n_UNavMeshGoal_OutOfViewFrom {
		constexpr auto GoalPoly = 0x7c; // FPointer
		constexpr auto OutOfViewLocation = 0x84; // FVector
		constexpr auto bShowDebug = 0x90; // uint32_t : 1
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x7c; // FVector
		constexpr auto bLockAxes = 0x88; // uint32_t : 1
		constexpr auto LockedAxes = 0x8c; // EDistributionVectorLockFlags
	}

	namespace n_URB_RadialImpulseComponent {
		constexpr auto ImpulseFalloff = 0x250; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x254; // float
		constexpr auto ImpulseRadius = 0x258; // float
		constexpr auto bVelChange = 0x25c; // uint32_t : 1
		constexpr auto bCauseFracture = 0x25c; // uint32_t : 1
		constexpr auto PreviewSphere = 0x260; // ComponentProperty
	}

	namespace n_UNavMeshPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x78; // float
		constexpr auto MinDistance = 0x7c; // float
		constexpr auto bSoft = 0x80; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x80; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_USeqEvent_TouchInput {
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto AllowedTouchIndex = 0x130; // int32_t
		constexpr auto AllowedTouchpadIndex = 0x134; // int32_t
	}

	namespace n_UCombatDataTableRefPublisherWorld {
		constexpr auto PublisherID = 0x6c; // int32_t
		constexpr auto WorldID = 0x70; // int32_t
	}

	namespace n_UCodecMovie {
		constexpr auto PlaybackDuration = 0x60; // float
	}

	namespace n_UUIResourceCombinationProvider {
		constexpr auto StaticDataProvider = 0x70; // ObjectProperty
		constexpr auto ProfileProvider = 0x78; // ObjectProperty
	}

	namespace n_ANxGenericForceField {
		constexpr auto Coordinates = 0x298; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x29c; // FVector
		constexpr auto PositionMultiplierX = 0x2a8; // FVector
		constexpr auto PositionMultiplierY = 0x2b4; // FVector
		constexpr auto PositionMultiplierZ = 0x2c0; // FVector
		constexpr auto PositionTarget = 0x2cc; // FVector
		constexpr auto VelocityMultiplierX = 0x2d8; // FVector
		constexpr auto VelocityMultiplierY = 0x2e4; // FVector
		constexpr auto VelocityMultiplierZ = 0x2f0; // FVector
		constexpr auto VelocityTarget = 0x2fc; // FVector
		constexpr auto Noise = 0x308; // FVector
		constexpr auto FalloffLinear = 0x314; // FVector
		constexpr auto FalloffQuadratic = 0x320; // FVector
		constexpr auto TorusRadius = 0x32c; // float
		constexpr auto LinearKernel = 0x330; // FPointer
	}

	namespace n_UAnalyticEventsBase {
		constexpr auto bSessionInProgress = 0x80; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_Object {
		constexpr auto bPopUp = 0xcc; // uint32_t : 1
		constexpr auto bDisplayed = 0xcc; // uint32_t : 1
	}

	namespace n_UCombatCharacterTransaction {
		constexpr auto PlayerCompetitionPointInfo = 0x60; // TMap<None, None>
		constexpr auto NeedBackToCompetitionGame = 0xa8; // uint32_t : 1
		constexpr auto PlayerData = 0xac; // FCharacterTransactionData
		constexpr auto TempMyRecordRecentlyPlayed = 0x1cc; // TArray<FRecordRecentlyPlayed>
		constexpr auto MyRecordRecentlyPlayedList = 0x1dc; // TArray<FRecordRecentlyPlayedList>
		constexpr auto MAX_RECORD_RECENTLY_PLAYED = 0x1ec; // char
		constexpr auto UI_LevelData = 0x1f0; // FLevelExpData
		constexpr auto UI_Money = 0x1f8; // int32_t
		constexpr auto PlayerPageMatchOnOffInfoList = 0x1fc; // TArray<FMatchOnOffInfo>
		constexpr auto MyPageMatchOnOffInfoList = 0x20c; // TArray<FMatchOnOffInfo>
		constexpr auto ClanPageMatchOnOffInfoList = 0x21c; // TArray<FMatchOnOffInfo>
		constexpr auto CurrentCompetitiveModeList = 0x22c; // TArray<int32_t>
		constexpr auto RandomBoxOpenList = 0x23c; // TArray<FRandomBoxOpenData>
		constexpr auto QueuedReservedPeriodAttendIdx = 0x24c; // TArray<int32_t>
	}

	namespace n_UGameExplosion {
		constexpr auto bDirectionalExplosion = 0x60; // uint32_t : 1
		constexpr auto bIgnoreInstigator = 0x60; // uint32_t : 1
		constexpr auto bAllowTeammateCringes = 0x60; // uint32_t : 1
		constexpr auto bFullDamageToAttachee = 0x60; // uint32_t : 1
		constexpr auto bAttachExplosionEmitterToAttachee = 0x60; // uint32_t : 1
		constexpr auto bPerformRadialBlurRelevanceCheck = 0x60; // uint32_t : 1
		constexpr auto bCausesFracture = 0x60; // uint32_t : 1
		constexpr auto bAllowPerMaterialFX = 0x60; // uint32_t : 1
		constexpr auto bParticleSystemIsBeingOverriddenDontUsePhysMatVersion = 0x60; // uint32_t : 1
		constexpr auto bSkipDefaultPhysMatParticleSystem = 0x60; // uint32_t : 1
		constexpr auto bUseMapSpecificValues = 0x60; // uint32_t : 1
		constexpr auto bUseOverlapCheck = 0x60; // uint32_t : 1
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // uint32_t : 1
		constexpr auto bAutoControllerVibration = 0x60; // uint32_t : 1
		constexpr auto DirectionalExplosionAngleDeg = 0x64; // float
		constexpr auto DamageDelay = 0x68; // float
		constexpr auto Damage = 0x6c; // float
		constexpr auto DamageRadius = 0x70; // float
		constexpr auto DamageFalloffExponent = 0x74; // float
		constexpr auto ActorToIgnoreForDamage = 0x78; // ObjectProperty
		constexpr auto ActorClassToIgnoreForDamage = 0x80; // AActor*
		constexpr auto ActorClassToIgnoreForKnockdownsAndCringes = 0x88; // AActor*
		constexpr auto MyDamageType = 0x90; // UDamageType*
		constexpr auto KnockDownRadius = 0x98; // float
		constexpr auto KnockDownStrength = 0x9c; // float
		constexpr auto CringeRadius = 0xa0; // float
		constexpr auto CringeDuration = 0xa4; // FVector2D
		constexpr auto MomentumTransferScale = 0xac; // float
		constexpr auto ParticleEmitterTemplate = 0xb0; // ObjectProperty
		constexpr auto ExplosionEmitterScale = 0xb8; // float
		constexpr auto HitActor = 0xbc; // ObjectProperty
		constexpr auto HitLocation = 0xc4; // FVector
		constexpr auto HitNormal = 0xd0; // FVector
		constexpr auto ExplosionSound = 0xdc; // ObjectProperty
		constexpr auto ExplosionSoundHurtSomeone = 0xe4; // ObjectProperty
		constexpr auto ExploLight = 0xec; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xf4; // float
		constexpr auto ExploRadialBlur = 0xf8; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0x100; // float
		constexpr auto ExploRadialBlurMaxBlur = 0x104; // float
		constexpr auto FractureMeshRadius = 0x108; // float
		constexpr auto FracturePartVel = 0x10c; // float
		constexpr auto CamShake = 0x110; // ObjectProperty
		constexpr auto CamShake_Left = 0x118; // ObjectProperty
		constexpr auto CamShake_Right = 0x120; // ObjectProperty
		constexpr auto CamShake_Rear = 0x128; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x130; // float
		constexpr auto CamShakeOuterRadius = 0x134; // float
		constexpr auto CamShakeFalloff = 0x138; // float
		constexpr auto CameraLensEffect = 0x13c; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0x144; // float
	}

	namespace n_UGripCondNode_TargetDirection {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto Op = 0xed; // BTConditionOperator
		constexpr auto dotValue = 0xf0; // float
	}

	namespace n_UParticleModuleColorScaleOverDensity {
		constexpr auto ColorScaleOverDensity = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverDensity = 0x8c; // FRawDistributionFloat
	}

	namespace n_USeqEvent_MobileObjectPicker {
		constexpr auto TraceDistance = 0x13c; // float
		constexpr auto bCheckonTouch = 0x140; // uint32_t : 1
		constexpr auto FinalTouchLocation = 0x144; // FVector
		constexpr auto FinalTouchNormal = 0x150; // FVector
		constexpr auto FinalTouchObject = 0x15c; // ObjectProperty
		constexpr auto Targets = 0x164; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x68; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_USeqVar_Group {
		constexpr auto GroupName = 0xc4; // FName
		constexpr auto bCachedList = 0xcc; // uint32_t : 1
		constexpr auto Actors = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UCombatFrontEnd_ItemSellPopup {
		constexpr auto SellItemInfo = 0xd0; // FInvenItemInfo
		constexpr auto SellSlotList = 0x108; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionTextureSampleParameterCubeLOD {
		constexpr auto TextureLODFactor = 0x140; // float
		constexpr auto LODFactor = 0x144; // FExpressionInput
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0xa0; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x6c; // FRawDistributionVector
	}

	namespace n_USeqEvent_Touch {
		constexpr auto ClassProximityTypes = 0x128; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x138; // TArray<AActor*>
		constexpr auto bForceOverlapping = 0x148; // uint32_t : 1
		constexpr auto bUseInstigator = 0x148; // uint32_t : 1
		constexpr auto bAllowDeadPawns = 0x148; // uint32_t : 1
		constexpr auto TouchedList = 0x14c; // TArray<ObjectProperty>
	}

	namespace n_ATrigger_LOS {
		constexpr auto PCsWithLOS = 0x254; // TArray<ObjectProperty>
	}

	namespace n_UOnlineImageDownloaderWeb {
		constexpr auto DownloadImages = 0x60; // TArray<FOnlineImageDownload>
		constexpr auto MaxSimultaneousDownloads = 0x70; // int32_t
		constexpr auto __OnOnlineImageDownloaded__Delegate = 0x74; // DelegateProperty
	}

	namespace n_UGripBTEventCondition {
		constexpr auto Lifetime = 0xc0; // EventLifetime
		constexpr auto EventType = 0xc4; // FString
	}

	namespace n_UCombatDataTableRefPreset {
		constexpr auto PresetNum = 0x6c; // int32_t
		constexpr auto PresetNameID = 0x70; // int32_t
		constexpr auto PrimaryWeapon = 0x74; // FString
		constexpr auto SubWeapon = 0x84; // FString
		constexpr auto MeleeWeapon = 0x94; // FString
		constexpr auto GrenadeA = 0xa4; // FString
		constexpr auto GrenadeB = 0xb4; // FString
		constexpr auto GrenadeC = 0xc4; // FString
		constexpr auto Chip_A = 0xd4; // FString
		constexpr auto Chip_B = 0xe4; // FString
		constexpr auto Chip_C = 0xf4; // FString
		constexpr auto Chip_D = 0x104; // FString
	}

	namespace n_USeqAct_ApplySoundNode {
		constexpr auto PlaySound = 0x108; // ObjectProperty
		constexpr auto ApplyNode = 0x110; // ObjectProperty
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0xb0; // FExpressionInput
	}

	namespace n_ACombatWeapAttachMeshActor {
		constexpr auto WeaponClass = 0x2b4; // ACombatWeapon*
		constexpr auto SubPartList = 0x2bc; // TArray<FMeshPart>
		constexpr auto SubPartCompList = 0x2cc; // TArray<ComponentProperty>
		constexpr auto bShowSilence = 0x2dc; // uint32_t : 1
		constexpr auto bShowLaserSite = 0x2dc; // uint32_t : 1
		constexpr auto bUseFirstWeaponMesh = 0x2dc; // uint32_t : 1
		constexpr auto LaserSitePSC = 0x2e0; // ComponentProperty
	}

	namespace n_ACombatDroppedSupplies_AmmoKit {
		constexpr auto MainAmmoRate = 0x35c; // int32_t
		constexpr auto SubAmmoRate = 0x360; // int32_t
		constexpr auto GrenadeRate_A = 0x364; // int32_t
		constexpr auto GrenadeRate_B = 0x368; // int32_t
		constexpr auto GrenadeRate_C = 0x36c; // int32_t
	}

	namespace n_AScout {
		constexpr auto PathSizes = 0x558; // TArray<FPathSizeInfo>
		constexpr auto TestJumpZ = 0x568; // float
		constexpr auto TestGroundSpeed = 0x56c; // float
		constexpr auto TestMaxFallSpeed = 0x570; // float
		constexpr auto TestFallSpeed = 0x574; // float
		constexpr auto MaxLandingVelocity = 0x578; // float
		constexpr auto MinNumPlayerStarts = 0x57c; // int32_t
		constexpr auto DefaultReachSpecClass = 0x580; // UReachSpec*
		constexpr auto EdgePathColors = 0x588; // TArray<FColor>
		constexpr auto NavMeshGen_StepSize = 0x598; // float
		constexpr auto NavMeshGen_EntityHalfHeight = 0x59c; // float
		constexpr auto NavMeshGen_StartingHeightOffset = 0x5a0; // float
		constexpr auto NavMeshGen_MaxDropHeight = 0x5a4; // float
		constexpr auto NavMeshGen_MaxStepHeight = 0x5a8; // float
		constexpr auto NavMeshGen_VertZDeltaSnapThresh = 0x5ac; // float
		constexpr auto NavMeshGen_MinPolyArea = 0x5b0; // float
		constexpr auto NavMeshGen_BorderBackfill_CheckDist = 0x5b4; // float
		constexpr auto NavMeshGen_MinMergeDotAreaThreshold = 0x5b8; // float
		constexpr auto NavMeshGen_MinMergeDotSmallArea = 0x5bc; // float
		constexpr auto NavMeshGen_MinMergeDotLargeArea = 0x5c0; // float
		constexpr auto NavMeshGen_MaxPolyHeight = 0x5c4; // float
		constexpr auto NavMeshGen_HeightMergeThreshold = 0x5c8; // float
		constexpr auto NavMeshGen_EdgeMaxDelta = 0x5cc; // float
		constexpr auto NavMeshGen_MaxGroundCheckSize = 0x5d0; // float
		constexpr auto NavMeshGen_MinEdgeLength = 0x5d4; // float
		constexpr auto NavMeshGen_ExpansionDoObstacleMeshSimplification = 0x5d8; // uint32_t : 1
		constexpr auto bHightlightOneWayReachSpecs = 0x5d8; // uint32_t : 1
		constexpr auto MinMantleFallDist = 0x5dc; // float
		constexpr auto MaxMantleFallDist = 0x5e0; // float
		constexpr auto MinMantleLateralDist = 0x5e4; // float
		constexpr auto MaxMantleLateralDist = 0x5e8; // float
		constexpr auto MaxMantleFallTime = 0x5ec; // float
	}

	namespace n_USeqAct_ModifyHealth {
		constexpr auto DamageType = 0x108; // UDamageType*
		constexpr auto Momentum = 0x110; // float
		constexpr auto Amount = 0x114; // float
		constexpr auto Radius = 0x118; // float
		constexpr auto bHeal = 0x11c; // uint32_t : 1
		constexpr auto bRadial = 0x11c; // uint32_t : 1
		constexpr auto bFalloff = 0x11c; // uint32_t : 1
		constexpr auto Instigator = 0x120; // ObjectProperty
	}

	namespace n_UCombatHUD_ObserverRevivalWeapon {
		constexpr auto LastReservedPreset = 0xc0; // char
		constexpr auto TitleMessage = 0xc4; // FString
		constexpr auto PresetKeyName = 0xd4; // FString [0x3]
	}

	namespace n_UGripBTRaiseEvent {
		constexpr auto EventType = 0xbc; // FString
	}

	namespace n_UActorFactoryStaticMesh {
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x6c; // FRawDistributionVector
		constexpr auto Absolute = 0x90; // uint32_t : 1
	}

	namespace n_ACombatBusterModePRI {
		constexpr auto BusterDamage = 0x520; // WordProperty
		constexpr auto LastBusterDamage = 0x522; // WordProperty
	}

	namespace n_AGravityVolume {
		constexpr auto GravityZ = 0x2d0; // float
	}

	namespace n_UGameSkelCtrl_Recoil {
		constexpr auto bBoneSpaceRecoil = 0xd0; // uint32_t : 1
		constexpr auto bPlayRecoil = 0xd0; // uint32_t : 1
		constexpr auto bOldPlayRecoil = 0xd0; // uint32_t : 1
		constexpr auto bApplyControl = 0xd0; // uint32_t : 1
		constexpr auto Recoil = 0xd4; // FRecoilDef
		constexpr auto Aim = 0x144; // FVector2D
	}

	namespace n_UCombatDataTableRefClanMark {
		constexpr auto Idx = 0x6c; // int32_t
		constexpr auto ClanTier = 0x70; // int32_t
		constexpr auto NameString = 0x74; // int32_t
	}

	namespace n_USplineComponent {
		constexpr auto SplineInfo = 0x250; // FInterpCurveVector
		constexpr auto SplineCurviness = 0x264; // float
		constexpr auto SplineColor = 0x268; // FColor
		constexpr auto SplineDrawRes = 0x26c; // float
		constexpr auto SplineArrowSize = 0x270; // float
		constexpr auto bSplineDisabled = 0x274; // uint32_t : 1
		constexpr auto SplineReparamTable = 0x278; // FInterpCurveFloat
	}

	namespace n_UCombatFrontEnd_ClanJoinPopup {
		constexpr auto bNeedInitClanPasswordLabel = 0xd0; // uint32_t : 1
		constexpr auto nClanID = 0xd4; // int32_t
		constexpr auto PopupMode = 0xd8; // ClanPopupMode
	}

	namespace n_ULensFlareComponent {
		constexpr auto Template = 0x250; // ObjectProperty
		constexpr auto PreviewInnerCone = 0x258; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x260; // ComponentProperty
		constexpr auto PreviewRadius = 0x268; // ComponentProperty
		constexpr auto bAutoActivate = 0x270; // uint32_t : 1
		constexpr auto bIsActive = 0x270; // uint32_t : 1
		constexpr auto bHasTranslucency = 0x270; // uint32_t : 1
		constexpr auto bHasUnlitTranslucency = 0x270; // uint32_t : 1
		constexpr auto bHasUnlitDistortion = 0x270; // uint32_t : 1
		constexpr auto bUsesSceneColor = 0x270; // uint32_t : 1
		constexpr auto bHasSeparateTranslucency = 0x270; // uint32_t : 1
		constexpr auto bUseTrueConeCalculation = 0x270; // uint32_t : 1
		constexpr auto bVisibleForMobile = 0x270; // uint32_t : 1
		constexpr auto bForceRendering = 0x270; // uint32_t : 1
		constexpr auto OuterCone = 0x274; // float
		constexpr auto InnerCone = 0x278; // float
		constexpr auto ConeFudgeFactor = 0x27c; // float
		constexpr auto Radius = 0x280; // float
		constexpr auto MinStrength = 0x284; // float
		constexpr auto SourceColor = 0x288; // FLinearColor
		constexpr auto Materials = 0x298; // TArray<FLensFlareElementMaterials>
		constexpr auto ReleaseResourcesFence = 0x2a8; // FPointer
		constexpr auto NextTraceTime = 0x2b0; // float
	}

	namespace n_ACombatVolumetricsActor {
		constexpr auto VolumetricsMI = 0x244; // ObjectProperty
		constexpr auto ParentVolumetricsMat = 0x24c; // ObjectProperty
		constexpr auto StaticMeshComponent = 0x254; // ComponentProperty
		constexpr auto EffectColor = 0x25c; // FColor
		constexpr auto Distance = 0x260; // float
		constexpr auto FalloffExponent = 0x264; // float
		constexpr auto Opacity = 0x268; // float
	}

	namespace n_UUIDataProvider_PlayerAchievements {
		constexpr auto Achievements = 0x74; // TArray<FAchievementDetails>
	}

	namespace n_USeqAct_SetDamageInstigator {
		constexpr auto DamageInstigator = 0x108; // ObjectProperty
	}

	namespace n_ACombatWeapon {
		constexpr auto VfTable_IInterface_CombatWeaponType = 0x3a4; // FPointer
		constexpr auto SlideNode = 0x3ac; // ObjectProperty
		constexpr auto bPlayAmmoChat = 0x3b4; // uint32_t : 1
		constexpr auto bPlayFireSound = 0x3b4; // uint32_t : 1
		constexpr auto bPlayingFiringSound = 0x3b4; // uint32_t : 1
		constexpr auto bAutofire = 0x3b4; // uint32_t : 1
		constexpr auto bNotAutofireReFireCheck = 0x3b4; // uint32_t : 1
		constexpr auto bAutoSwitchEmptyWeapon = 0x3b4; // uint32_t : 1
		constexpr auto bAutoDestroyEmptyWeapon = 0x3b4; // uint32_t : 1
		constexpr auto bCanEquipEmptyWeapon = 0x3b4; // uint32_t : 1
		constexpr auto bIgnorePutdownEmptyWeapon = 0x3b4; // uint32_t : 1
		constexpr auto bRestoreZoomStatebyFire = 0x3b4; // uint32_t : 1
		constexpr auto EnableSoonZoom = 0x3b4; // uint32_t : 1
		constexpr auto bCrosshairinZOOM = 0x3b4; // uint32_t : 1
		constexpr auto bUseActualSpreadUI = 0x3b4; // uint32_t : 1
		constexpr auto bIgnoreFiringStateOnRadar = 0x3b4; // uint32_t : 1
		constexpr auto bAutoReload = 0x3b4; // uint32_t : 1
		constexpr auto bCancelReloadingByFire = 0x3b4; // uint32_t : 1
		constexpr auto bClearPendingFire = 0x3b4; // uint32_t : 1
		constexpr auto bShowReloadingUI = 0x3b4; // uint32_t : 1
		constexpr auto UseHitpriority = 0x3b4; // uint32_t : 1
		constexpr auto bMagType = 0x3b4; // uint32_t : 1
		constexpr auto bSilencerSupport = 0x3b4; // uint32_t : 1
		constexpr auto bRealTimeRecoilRecover = 0x3b4; // uint32_t : 1
		constexpr auto bRoundTrip = 0x3b4; // uint32_t : 1
		constexpr auto bAddBlendOutTimeAtAnimDuration = 0x3b4; // uint32_t : 1
		constexpr auto bClearFireDelayOnEndFire = 0x3b4; // uint32_t : 1
		constexpr auto bGetFromPickupFactory = 0x3b4; // uint32_t : 1
		constexpr auto bUseCameraShake = 0x3b4; // uint32_t : 1
		constexpr auto IsVerticalRecoilMax = 0x3b4; // uint32_t : 1
		constexpr auto IsSilencerAttached = 0x3b4; // uint32_t : 1
		constexpr auto bTrySilencerAttach = 0x3b4; // uint32_t : 1
		constexpr auto bRemoveVerticalRecoil = 0x3b4; // uint32_t : 1
		constexpr auto bRemoveHorizonRecoil = 0x3b4; // uint32_t : 1
		constexpr auto bNoSpread = 0x3b8; // uint32_t : 1
		constexpr auto bMaxSpread = 0x3b8; // uint32_t : 1
		constexpr auto bLastRightRecoil = 0x3b8; // uint32_t : 1
		constexpr auto bSuppressSounds = 0x3b8; // uint32_t : 1
		constexpr auto bEnableFirstPersonMuzzleFlash = 0x3b8; // uint32_t : 1
		constexpr auto bTargetFrictionEnabled = 0x3b8; // uint32_t : 1
		constexpr auto bInfiniteSpareAmmo = 0x3b8; // uint32_t : 1
		constexpr auto bInfiniteExtraAmmo = 0x3b8; // uint32_t : 1
		constexpr auto bInfiniteWeaponReload = 0x3b8; // uint32_t : 1
		constexpr auto AllowShellEjectPerBullet = 0x3b8; // uint32_t : 1
		constexpr auto bZoomDisabled = 0x3b8; // uint32_t : 1
		constexpr auto bPreloadTextures = 0x3b8; // uint32_t : 1
		constexpr auto bInitWeaponMesh = 0x3b8; // uint32_t : 1
		constexpr auto bIsLocalWeapon = 0x3b8; // uint32_t : 1
		constexpr auto bIsAIWeapon = 0x3b8; // uint32_t : 1
		constexpr auto bReceiveOwnerEvents = 0x3b8; // uint32_t : 1
		constexpr auto bisDropped = 0x3b8; // uint32_t : 1
		constexpr auto AcceptPendingFire = 0x3b8; // uint32_t : 1
		constexpr auto bUseTickIsDisabled = 0x3b8; // uint32_t : 1
		constexpr auto bAsyncLoadedActor = 0x3b8; // uint32_t : 1
		constexpr auto bEnableHackCheck = 0x3b8; // uint32_t : 1
		constexpr auto bEnableNotifyHitTime = 0x3b8; // uint32_t : 1
		constexpr auto bIsFullReloading = 0x3b8; // uint32_t : 1
		constexpr auto bNeedNotifyWeaponAmmoChanged = 0x3b8; // uint32_t : 1
		constexpr auto WeaponMeshFilpped = 0x3b8; // uint32_t : 1
		constexpr auto CannotBeFilpped = 0x3b8; // uint32_t : 1
		constexpr auto EnableBoneTransform = 0x3b8; // uint32_t : 1
		constexpr auto IsIronSight = 0x3b8; // uint32_t : 1
		constexpr auto bSpawnGunTrail = 0x3b8; // uint32_t : 1
		constexpr auto bRepFlipMesh = 0x3b8; // uint32_t : 1
		constexpr auto bHoldmode = 0x3b8; // uint32_t : 1
		constexpr auto bEnableRecoilRandom = 0x3b8; // uint32_t : 1
		constexpr auto MinDamage = 0x3bc; // int32_t
		constexpr auto MaxDamage = 0x3c0; // int32_t
		constexpr auto MinDamageRate = 0x3c4; // float
		constexpr auto SilencerDamagePenalty = 0x3c8; // int32_t
		constexpr auto DamageAdjustment = 0x3cc; // TArray<FsDamageAdjustment>
		constexpr auto DamageAdjustmentVSPowerBullet = 0x3dc; // TArray<FsDamageAdjustment>
		constexpr auto MaxDamageRange = 0x3ec; // float
		constexpr auto MinDamageRange = 0x3f0; // float
		constexpr auto PenetrationDamageRate = 0x3f4; // float
		constexpr auto DamagedDecelerationRatio = 0x3f8; // float
		constexpr auto ZoomCancelDelaybyFire = 0x3fc; // float
		constexpr auto LastZoomStateByFire = 0x400; // EZoomState
		constexpr auto MainCrosshair = 0x401; // ECrosshairType
		constexpr auto UnderBarrelCrosshair = 0x402; // ECrosshairType
		constexpr auto SubAmmoCount = 0x403; // char
		constexpr auto ServerSubAmmoCount = 0x404; // char
		constexpr auto ServerSubMagazineAmmo = 0x405; // char
		constexpr auto MaxSubAmmoCount = 0x406; // char
		constexpr auto SubMagazineAmmo = 0x407; // char
		constexpr auto SubMaxMagazineAmmo = 0x408; // char
		constexpr auto SubAmmoPerReload = 0x409; // char
		constexpr auto ChangingRISSlot = 0x40a; // RISSlot
		constexpr auto ObjectGrade = 0x40b; // EObjectGradeType
		constexpr auto LeftrightStart = 0x40c; // EFirstRecoilDir
		constexpr auto ObjectPenetrationNum = 0x40d; // char
		constexpr auto PersonPenetrationNum = 0x40e; // char
		constexpr auto CurrObjectPenetrationNum = 0x40f; // char
		constexpr auto CurrPersonPenetrationNum = 0x410; // char
		constexpr auto bLastRecoilDir = 0x411; // EFirstRecoilDir
		constexpr auto InventoryGroup = 0x412; // EWeaponGroup
		constexpr auto SlotIndex = 0x413; // char
		constexpr auto WeaponType = 0x414; // WEAPON_TYPES
		constexpr auto MeshSlideIndex = 0x415; // char
		constexpr auto MeshSlideBlendType = 0x416; // AlphaBlendType
		constexpr auto RotLagBlendType = 0x417; // AlphaBlendType
		constexpr auto ZoomState = 0x418; // EZoomState
		constexpr auto PreviousZoomState = 0x419; // EZoomState
		constexpr auto WeaponState = 0x41a; // char
		constexpr auto PreWeaponState = 0x41b; // EWeaponState
		constexpr auto ActiveRISSlot = 0x41c; // char
		constexpr auto PreviousActiveRISSlot = 0x41d; // char
		constexpr auto DeactivatedRISSlot = 0x41e; // char
		constexpr auto GimmickType = 0x41f; // EBoneGimmickType
		constexpr auto BloodTexStatus = 0x420; // EBloodTexOnWeaponStatus
		constexpr auto AltFireBlock = 0x421; // char [0x5]
		constexpr auto HUDDroppedPickupIconType = 0x426; // EObjectIconType
		constexpr auto BulletDropDelay = 0x428; // float
		constexpr auto Durability = 0x42c; // float
		constexpr auto ControlAccuracy = 0x430; // float
		constexpr auto SpreadRateForUI = 0x434; // float
		constexpr auto SpreadMaxForUI = 0x438; // float
		constexpr auto MaxActualSpreadForCrosshairLength = 0x43c; // int32_t
		constexpr auto MaxRecoilForCrosshairLegnth = 0x440; // int32_t
		constexpr auto AmmoCount = 0x444; // WordProperty
		constexpr auto ShardNumber = 0x448; // int32_t
		constexpr auto ServerAmmoCount = 0x44c; // WordProperty
		constexpr auto ServerMagazineAmmo = 0x44e; // WordProperty
		constexpr auto ModeMaxAmmoCount = 0x450; // WordProperty
		constexpr auto MaxAmmoCount = 0x452; // WordProperty
		constexpr auto WeaponAmmoStart = 0x454; // WordProperty
		constexpr auto MagazineAmmo = 0x456; // WordProperty
		constexpr auto OldMagazineAmmo = 0x458; // WordProperty
		constexpr auto MaxMagazineAmmo = 0x45a; // WordProperty
		constexpr auto AmmoPerReload = 0x45c; // WordProperty
		constexpr auto ClientShotCountOnFiring = 0x460; // TArray<char>
		constexpr auto ServerShotCountOnFiring = 0x470; // TArray<char>
		constexpr auto LastFiringTime = 0x480; // float
		constexpr auto ReloadTime = 0x484; // float
		constexpr auto ReloadingActionTime = 0x488; // float
		constexpr auto PreReloadingActionTime = 0x48c; // float
		constexpr auto PreReloadTime = 0x490; // float
		constexpr auto PostReloadTime = 0x494; // float
		constexpr auto RevertMagazineAmmoTime = 0x498; // float
		constexpr auto ActivePartTimeList = 0x49c; // float [0x5]
		constexpr auto DeactivePartTimeList = 0x4b0; // float [0x5]
		constexpr auto CurrentFireDelayTime = 0x4c4; // float
		constexpr auto ScreenShakePitchAdhustment = 0x4c8; // int32_t
		constexpr auto ScreenShakeYawAdhustment = 0x4cc; // int32_t
		constexpr auto RecoilTime = 0x4d0; // float
		constexpr auto RecoilAutoCorrectDelay = 0x4d4; // float
		constexpr auto SilencerBoneName = 0x4d8; // FName
		constexpr auto LaserBoneName = 0x4e0; // FName
		constexpr auto LaserSiteBoneName = 0x4e8; // FName
		constexpr auto ScopeBoneName = 0x4f0; // FName
		constexpr auto SilencerEquipTime = 0x4f8; // float
		constexpr auto Decalstring = 0x4fc; // FString
		constexpr auto DecalTexture = 0x50c; // ObjectProperty
		constexpr auto FireDelayTime = 0x514; // float
		constexpr auto PreFireDelayTime = 0x518; // TArray<float>
		constexpr auto InstantProjectile = 0x528; // AProjectile*
		constexpr auto BP = 0x530; // int32_t [0xa]
		constexpr auto InstantProjectileHitNormalAddScale = 0x558; // float
		constexpr auto FirstpersonTracerSpawnDistance = 0x55c; // float
		constexpr auto RecoilFactorForHipShotView = 0x560; // TArray<FRecoilFactor>
		constexpr auto RecoilFactorForFirstZoomedView = 0x570; // TArray<FRecoilFactor>
		constexpr auto RecoilFactorForSecZoomedView = 0x580; // TArray<FRecoilFactor>
		constexpr auto RecoilInterpSpeed = 0x590; // float
		constexpr auto RecoilAutoCorrectSpeed = 0x594; // float
		constexpr auto Leftrightreactionswitch = 0x598; // int32_t
		constexpr auto RecoilSpeedDownFirstRadius = 0x59c; // int32_t
		constexpr auto RecoilSpeedDownSecondRadius = 0x5a0; // int32_t
		constexpr auto SpreadCorrectInterpOuterSpeed = 0x5a4; // float
		constexpr auto SpreadCorrectInterpInnerSpeed = 0x5a8; // float
		constexpr auto SpreadOuterSpeedAccuracy = 0x5ac; // float
		constexpr auto LastFiredTimeSeconds = 0x5b0; // float
		constexpr auto LastProjectileTimeSeconds = 0x5b4; // float
		constexpr auto ValidRefireToleranceTime = 0x5b8; // float
		constexpr auto AddedPitchVerticalRecoilSum = 0x5bc; // int32_t
		constexpr auto WeaponRecoilOffset = 0x5c0; // FRotator
		constexpr auto LastFiredRecoilOffset = 0x5cc; // FRotator
		constexpr auto AutoCorrectWeaponRecoilOffset = 0x5d8; // FRotator
		constexpr auto RecoilAutoCorrectTime = 0x5e4; // float
		constexpr auto fPitch = 0x5e8; // float
		constexpr auto fYaw = 0x5ec; // float
		constexpr auto FiredAmmo = 0x5f0; // int32_t
		constexpr auto ValidFiredNum = 0x5f4; // int32_t
		constexpr auto Accuracy = 0x5f8; // float
		constexpr auto CurrentRecoilFactorType = 0x5fc; // int32_t
		constexpr auto CurRecoilFactor = 0x600; // FRecoilFactor
		constexpr auto DeltaRecoil = 0x644; // FRotator
		constexpr auto ShotCost = 0x650; // TArray<int32_t>
		constexpr auto CameraShake_IncreaseByWeapon = 0x660; // TArray<FCameraShakeRotationFactor>
		constexpr auto CameraShake_HitBodyAdjust = 0x670; // TArray<float>
		constexpr auto AttachmentClass = 0x680; // ACBWeaponAttachment*
		constexpr auto WeaponAttachment = 0x688; // ObjectProperty
		constexpr auto SoundCueIndex = 0x690; // int32_t
		constexpr auto WeaponFireSnd3rd = 0x694; // TArray<ObjectProperty>
		constexpr auto WeaponFireSnd = 0x6a4; // TArray<ObjectProperty>
		constexpr auto WeaponDryFireSnd = 0x6b4; // ObjectProperty
		constexpr auto ZoomInSound = 0x6bc; // ObjectProperty
		constexpr auto ZoomOutSound = 0x6c4; // ObjectProperty
		constexpr auto ZoomInSound3rd = 0x6cc; // ObjectProperty
		constexpr auto ZoomOutSound3rd = 0x6d4; // ObjectProperty
		constexpr auto WeaponBulletDropSnd = 0x6dc; // ObjectProperty
		constexpr auto WeaponChangeSnd = 0x6e4; // ObjectProperty
		constexpr auto BobDamping = 0x6ec; // TArray<float>
		constexpr auto BobDampingZ = 0x6fc; // TArray<float>
		constexpr auto WeaponBobSoundRatio = 0x70c; // TArray<float>
		constexpr auto MaxPitchLag = 0x71c; // float
		constexpr auto MaxYawLag = 0x720; // float
		constexpr auto LastRotUpdate = 0x724; // float
		constexpr auto LastRotation = 0x728; // FRotator
		constexpr auto LastLocation = 0x734; // FVector
		constexpr auto OldLeadMag = 0x740; // float [0x2]
		constexpr auto OldRotDiff = 0x748; // int32_t [0x2]
		constexpr auto OldMaxDiff = 0x750; // float [0x2]
		constexpr auto RotChgSpeed = 0x758; // float
		constexpr auto ReturnChgSpeed = 0x75c; // float
		constexpr auto MuzzleFlashSocket = 0x760; // FName
		constexpr auto SilencerMuzzleFlashSocket = 0x768; // FName
		constexpr auto LauncherMuzzleFlashSocket = 0x770; // FName
		constexpr auto HeadBloodSocket = 0x778; // FName
		constexpr auto BloodSocket = 0x780; // FName
		constexpr auto ExtraEffectSocket = 0x788; // FName
		constexpr auto ShellEjectSocket = 0x790; // FName
		constexpr auto MuzzleFlashPSC = 0x798; // ComponentProperty
		constexpr auto MuzzleFlashPSCTemplate = 0x7a0; // ObjectProperty
		constexpr auto MuzzleFlashPSCTemplateForSilencer = 0x7a8; // ObjectProperty
		constexpr auto MuzzleFlashPSCTemplateForGrenade = 0x7b0; // ObjectProperty
		constexpr auto MuzzleFlashPSCTemplateForGrenade3rd = 0x7b8; // ObjectProperty
		constexpr auto MuzzleFlashLight = 0x7c0; // ComponentProperty
		constexpr auto MuzzleFlashLightClass = 0x7c8; // UCombatFPMuzzleFlashLight*
		constexpr auto MuzzleFlashDuration = 0x7d0; // float
		constexpr auto PlayerViewOffset = 0x7d4; // TArray<FVector>
		constexpr auto CurrentPlayerViewOffset = 0x7e4; // FVector
		constexpr auto CurrentRating = 0x7f0; // float
		constexpr auto AIWeaponSpreadRandom = 0x7f4; // int32_t
		constexpr auto AIModeDamageRate = 0x7f8; // float
		constexpr auto TargetFrictionDistanceMin = 0x7fc; // float
		constexpr auto TargetFrictionDistanceMax = 0x800; // float
		constexpr auto TargetFrictionOffset = 0x804; // FVector
		constexpr auto TargetAdhesionAimDistZ = 0x810; // float
		constexpr auto TargetAdhesionAimDistY = 0x814; // float
		constexpr auto AimAssistSpreadMultiplier = 0x818; // float
		constexpr auto RunSpeed = 0x81c; // float
		constexpr auto WalkingPct = 0x820; // float
		constexpr auto CrouchedPct = 0x824; // float
		constexpr auto AccelRate = 0x828; // float
		constexpr auto JumpZ = 0x82c; // float
		constexpr auto MaxGroundSpeed = 0x830; // float
		constexpr auto PickAddAmmo = 0x834; // int32_t
		constexpr auto WeaponStatType = 0x838; // FString
		constexpr auto PSC_ShellEject = 0x848; // ComponentProperty
		constexpr auto ShotInBurstCount = 0x850; // int32_t
		constexpr auto ShotPerFireBurst = 0x854; // TArray<int32_t>
		constexpr auto FiredBulletNum = 0x864; // int32_t
		constexpr auto PitchControl = 0x868; // ObjectProperty [0x2]
		constexpr auto YawControl = 0x878; // ObjectProperty [0x2]
		constexpr auto TransControl = 0x888; // ObjectProperty [0x4]
		constexpr auto PitchControlName = 0x8a8; // TArray<FName>
		constexpr auto YawControlName = 0x8b8; // TArray<FName>
		constexpr auto TransControlName = 0x8c8; // TArray<FName>
		constexpr auto WeaponCodeName = 0x8d8; // FString
		constexpr auto WeaponName = 0x8e8; // FString
		constexpr auto RefItem = 0x8f8; // ObjectProperty
		constexpr auto WeaponID = 0x900; // int32_t
		constexpr auto OriginalWeaponID = 0x904; // int32_t
		constexpr auto MeshSlide = 0x908; // FVector2D
		constexpr auto MeshSlideSpeed = 0x910; // FVector2D
		constexpr auto MeshSlideComebackSpeed = 0x918; // FVector2D
		constexpr auto MeshSlideComebackThreshold = 0x920; // FVector2D
		constexpr auto MeshSlideStartThreshold = 0x928; // FVector2D
		constexpr auto ForegroundFOV = 0x930; // TArray<float>
		constexpr auto WorldFOV = 0x940; // TArray<float>
		constexpr auto LastForegroundFOV = 0x950; // float
		constexpr auto LastWorldFOV = 0x954; // float
		constexpr auto ForegroundFOVAppliedRISList = 0x958; // float
		constexpr auto WeaponBobRatio = 0x95c; // TArray<float>
		constexpr auto WeaponLagRatio = 0x96c; // TArray<float>
		constexpr auto WeaponZoomDuration = 0x97c; // TArray<float>
		constexpr auto WeaponFOVDelayRatio = 0x98c; // TArray<float>
		constexpr auto ZoomRotLagRatio = 0x99c; // TArray<float>
		constexpr auto FOVInterpSpeed = 0x9ac; // float
		constexpr auto ZoomAnimBlendTimes = 0x9b0; // TArray<float>
		constexpr auto ZoomStateChangedTime = 0x9c0; // float
		constexpr auto ZoomStateChangeDurationRatio = 0x9c4; // float
		constexpr auto CurrentWeaponZoomDuration = 0x9c8; // float
		constexpr auto WeaponStateChangedTime = 0x9cc; // float
		constexpr auto WeaponStateName = 0x9d0; // FName [0x1e]
		constexpr auto StateInfo = 0xac0; // FCustomAnimData [0x1e]
		constexpr auto OverrideStateInfo = 0x13a8; // FCustomAnimData [0x1e]
		constexpr auto CurrentStateInfo = 0x1c90; // FCustomAnimData
		constexpr auto CustomAnim = 0x1cdc; // ObjectProperty
		constexpr auto CustomAnimOnIdle = 0x1ce4; // ObjectProperty
		constexpr auto CustomAnimOnIdleData = 0x1cec; // TArray<FCustomAnimOnIdleData>
		constexpr auto RISList = 0x1cfc; // TArray<ObjectProperty>
		constexpr auto TickableRISList = 0x1d0c; // TArray<ObjectProperty>
		constexpr auto DefaultRISList = 0x1d1c; // UCombatWeaponRISBase* [0x5]
		constexpr auto HideBoneDataByWeapState = 0x1d44; // TArray<FHideBoneDataByWeaponState>
		constexpr auto HideBoneDataByZoomState = 0x1d54; // TArray<FHideBoneDataByZoomState>
		constexpr auto HideBoneDataByScreenPos = 0x1d64; // TArray<FHideBoneDataByScreenPos>
		constexpr auto CachedHideBoneData = 0x1d74; // TArray<FName>
		constexpr auto SavedDeactiveParts = 0x1d84; // TArray<RISSlot>
		constexpr auto MeshParts = 0x1d94; // TArray<FMeshPart>
		constexpr auto AlwaysHideBoneName = 0x1da4; // TArray<FName>
		constexpr auto FirstMuzzleFlashLoc = 0x1db4; // FSocketLocation
		constexpr auto ThirdMuzzleFlashLoc = 0x1dc4; // FSocketLocation
		constexpr auto RelatedSkillGroupID = 0x1dd4; // int32_t
		constexpr auto IdleVel = 0x1dd8; // float
		constexpr auto IdleVelocitySquareForRecoil = 0x1ddc; // float
		constexpr auto CombatInstigator = 0x1de0; // ObjectProperty
		constexpr auto WeaponMesh = 0x1de8; // ComponentProperty
		constexpr auto ZoomLv1MouseSensRatio = 0x1df0; // float
		constexpr auto ZoomLv2MouseSensRatio = 0x1df4; // float
		constexpr auto ExposuredBulletNum = 0x1df8; // int32_t
		constexpr auto BulletNames = 0x1dfc; // TArray<FName>
		constexpr auto BulletHeadNames = 0x1e0c; // TArray<FName>
		constexpr auto LastReloadedNum = 0x1e1c; // int32_t
		constexpr auto HideBoneNum = 0x1e20; // int32_t
		constexpr auto Last_PV = 0x1e24; // FVector
		constexpr auto MeshBob_WalkingMod = 0x1e30; // FVector2D
		constexpr auto CurrentBloodTexValue = 0x1e38; // float
		constexpr auto BloodTexDuration = 0x1e3c; // float
		constexpr auto StartBloodTexTime = 0x1e40; // float
		constexpr auto CurrentBloodTexBlendTime = 0x1e44; // float
		constexpr auto BloodTexBlendTotalTime = 0x1e48; // float
		constexpr auto BloodScalarParam = 0x1e4c; // FName
		constexpr auto AllowedDelayTimeFromLastFiringTime = 0x1e54; // float
		constexpr auto ValidFiringDistance = 0x1e58; // float
		constexpr auto ValidHitBoundScale = 0x1e5c; // float
		constexpr auto AllowTraceRangeRatio = 0x1e60; // float
		constexpr auto ValidShotGunFiringDistance = 0x1e64; // float
		constexpr auto ValidShotGunNumHits = 0x1e68; // int32_t
		constexpr auto ProjectileFireDelay = 0x1e6c; // float
		constexpr auto ValidNotifyHitTimeMag = 0x1e70; // float
		constexpr auto LastNotifyHitTime = 0x1e74; // float
		constexpr auto LastNotifyHitActorName = 0x1e78; // FName
		constexpr auto killcount = 0x1e80; // int32_t
		constexpr auto ABoneTransforms = 0x1e84; // TArray<FsBoneTransform>
		constexpr auto BoneTransformNode = 0x1e94; // ObjectProperty
		constexpr auto IronSightNodeRear = 0x1e9c; // ObjectProperty
		constexpr auto IronSightNodeFront = 0x1ea4; // ObjectProperty
		constexpr auto IronSightRotRear = 0x1eac; // FRotator
		constexpr auto IronSightRotFront = 0x1eb8; // FRotator
		constexpr auto DroppedCount = 0x1ec4; // int32_t
	}

	namespace n_UCombatClassSystem {
		constexpr auto OwnerActor = 0x60; // ObjectProperty
		constexpr auto bTestMode = 0x68; // uint32_t : 1
		constexpr auto bAlreadySeverChangeClassNotify = 0x68; // uint32_t : 1
		constexpr auto bAlreadySelectMilitaryClass = 0x68; // uint32_t : 1
		constexpr auto bSelectMilitaryClass = 0x68; // uint32_t : 1
		constexpr auto BeforGroupIndex = 0x6c; // char
		constexpr auto AutoSelectMilitaryClassTime = 0x70; // float
	}

	namespace n_USeqAct_DivideInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UPBRuleNodeLODQuad {
		constexpr auto MassiveLODDistanceScale = 0x70; // float
	}

	namespace n_UCombatCommon_Base {
		constexpr auto Owner = 0xa0; // ObjectProperty
		constexpr auto bNeedInit = 0xa8; // uint32_t : 1
		constexpr auto bPopUp = 0xa8; // uint32_t : 1
		constexpr auto bDisplayed = 0xa8; // uint32_t : 1
	}

	namespace n_USeqEvent_Used {
		constexpr auto bAimToInteract = 0x128; // uint32_t : 1
		constexpr auto InteractDistance = 0x12c; // float
		constexpr auto InteractText = 0x130; // FString
		constexpr auto InteractIcon = 0x140; // ObjectProperty
		constexpr auto ClassProximityTypes = 0x148; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x158; // TArray<AActor*>
	}

	namespace n_UGameplayEventsHandler {
		constexpr auto EventIDFilter = 0x60; // TArray<int32_t>
		constexpr auto GroupFilter = 0x70; // TArray<FGameStatGroup>
		constexpr auto Reader = 0x80; // ObjectProperty
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0xb0; // FString
		constexpr auto Description = 0xc0; // FString
		constexpr auto SortPriority = 0xd0; // int32_t
		constexpr auto A = 0xd4; // FExpressionInput
		constexpr auto bLastPreviewed = 0x108; // uint32_t : 1
		constexpr auto Id = 0x10c; // FGuid
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x6c; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x90; // FRawDistributionFloat
	}

	namespace n_USeqAct_GameInfo {
		constexpr auto Instigator = 0x108; // TArray<ObjectProperty>
	}

	namespace n_USVehicleSimCar {
		constexpr auto ChassisTorqueScale = 0xc0; // float
		constexpr auto MaxSteerAngleCurve = 0xc4; // FInterpCurveFloat
		constexpr auto SteerSpeed = 0xd8; // float
		constexpr auto ReverseThrottle = 0xdc; // float
		constexpr auto EngineBrakeFactor = 0xe0; // float
		constexpr auto MaxBrakeTorque = 0xe4; // float
		constexpr auto StopThreshold = 0xe8; // float
		constexpr auto bIsDriving = 0xec; // uint32_t : 1
		constexpr auto ActualSteering = 0xf0; // float
		constexpr auto TimeSinceThrottle = 0xf4; // float
	}

	namespace n_UPrefab {
		constexpr auto PrefabVersion = 0x60; // int32_t
		constexpr auto PrefabArchetypes = 0x64; // TArray<ObjectProperty>
		constexpr auto RemovedArchetypes = 0x74; // TArray<ObjectProperty>
		constexpr auto PrefabSequence = 0x84; // ObjectProperty
	}

	namespace n_UAnimNodeScaleRateBySpeed {
		constexpr auto BaseSpeed = 0x104; // float
	}

	namespace n_UTextureFlipBook {
		constexpr auto VfTable_FTickableObject = 0x214; // FPointer
		constexpr auto TimeIntoMovie = 0x21c; // float
		constexpr auto TimeSinceLastFrame = 0x220; // float
		constexpr auto HorizontalScale = 0x224; // float
		constexpr auto VerticalScale = 0x228; // float
		constexpr auto bPaused = 0x22c; // uint32_t : 1
		constexpr auto bStopped = 0x22c; // uint32_t : 1
		constexpr auto bLooping = 0x22c; // uint32_t : 1
		constexpr auto bAutoPlay = 0x22c; // uint32_t : 1
		constexpr auto HorizontalImages = 0x230; // int32_t
		constexpr auto VerticalImages = 0x234; // int32_t
		constexpr auto FBMethod = 0x238; // TextureFlipBookMethod
		constexpr auto FrameRate = 0x23c; // float
		constexpr auto FrameTime = 0x240; // float
		constexpr auto CurrentRow = 0x244; // int32_t
		constexpr auto CurrentColumn = 0x248; // int32_t
		constexpr auto RenderOffsetU = 0x24c; // float
		constexpr auto RenderOffsetV = 0x250; // float
		constexpr auto ReleaseResourcesFence = 0x254; // FPointer
	}

	namespace n_UCombatDataTableRefCallingCard {
		constexpr auto NAME_TEXT = 0x6c; // int32_t
		constexpr auto Id = 0x70; // int32_t
		constexpr auto ImageID = 0x74; // int32_t
		constexpr auto CCard_AssetName = 0x78; // FString
		constexpr auto CodeName = 0x88; // FString
	}

	namespace n_UMobileMenuImage {
		constexpr auto Image = 0xdc; // ObjectProperty
		constexpr auto ImageDrawStyle = 0xe4; // MenuImageDrawStyle
		constexpr auto ImageUVs = 0xe8; // FUVCoords
		constexpr auto ImageColor = 0xfc; // FLinearColor
	}

	namespace n_UCombatAIDecisionComponent {
		constexpr auto bTriggered = 0x88; // uint32_t : 1
	}

	namespace n_UCombatHUD_KillMark {
		constexpr auto KMStringList = 0xc0; // TArray<FKillMarkStringStruct>
		constexpr auto ImagePath = 0xd0; // FString
		constexpr auto SoundPath = 0xe0; // FString
	}

	namespace n_UAnimNodeBlendDirectional {
		constexpr auto DirDegreesPerSecond = 0x100; // float
		constexpr auto DirAngle = 0x104; // float
		constexpr auto SingleAnimAtOrAboveLOD = 0x108; // int32_t
		constexpr auto RotationOffset = 0x10c; // FRotator
		constexpr auto bUseAcceleration = 0x118; // uint32_t : 1
	}

	namespace n_ALandscape {
		constexpr auto LayerNames = 0x368; // TArray<FName>
		constexpr auto LayerInfos = 0x378; // TArray<FLandscapeLayerInfo>
	}

	namespace n_UCombatHUD_HitIndicator {
		constexpr auto Direction = 0xc0; // ObjectProperty [0x7]
	}

	namespace n_UCombatFrontEnd_Exchange {
		constexpr auto bNeedCheckFocusBack = 0xd0; // uint32_t : 1
		constexpr auto PriceIconImage = 0xd4; // FString
		constexpr auto BuyMoneyType = 0xe4; // int32_t
		constexpr auto BuySelectIndex = 0xe8; // int32_t
		constexpr auto LastRequestMin = 0xec; // int32_t
		constexpr auto PublisherCash = 0xf0; // int32_t
		constexpr auto BulletSaleList = 0xf4; // TArray<int32_t>
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x60; // TArray<FDelegateArray>
		constexpr auto __PlatformInterfaceDelegate__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x80; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x90; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_Exit {
		constexpr auto ShowRewardRank = 0xd0; // int32_t
		constexpr auto __CallSetMission__Delegate = 0xd4; // DelegateProperty
	}

	namespace n_UCombatAnimNotify_SpawnKActor {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto TargetBoneName = 0x68; // FName
		constexpr auto StaticMesh = 0x70; // ObjectProperty
		constexpr auto LifeSpan = 0x78; // float
		constexpr auto bSkipIfLowFrameRate = 0x7c; // uint32_t : 1
		constexpr auto KActorClass = 0x80; // AKActorSpawnable*
		constexpr auto KActorLinearVelocity = 0x88; // FVector
		constexpr auto KActorAngularVelocity = 0x94; // FVector
		constexpr auto TargetBoneIndex = 0xa0; // int32_t
		constexpr auto SocketMatrix = 0xb0; // FMatrix
		constexpr auto PreviewKActor = 0xf0; // ObjectProperty
		constexpr auto PreviewSMC = 0xf8; // ComponentProperty
	}

	namespace n_UInterpGroupTimeDilation {
		constexpr auto TimeDilationAnimInst = 0x98; // ObjectProperty
		constexpr auto CompressTolerance = 0xa0; // float
	}

	namespace n_UGFxEvent_FSCommand {
		constexpr auto Movie = 0x128; // ObjectProperty
		constexpr auto FSCommand = 0x130; // FString
		constexpr auto Handler = 0x140; // ObjectProperty
	}

	namespace n_AFracturedStaticMeshActor {
		constexpr auto MaxPartsToSpawnAtOnce = 0x244; // int32_t
		constexpr auto FracturedStaticMeshComponent = 0x248; // ComponentProperty
		constexpr auto SkinnedComponent = 0x250; // ComponentProperty
		constexpr auto ChunkHealth = 0x258; // TArray<int32_t>
		constexpr auto bHasShownMissingSoundWarning = 0x268; // uint32_t : 1
		constexpr auto bBreakChunksOnActorTouch = 0x268; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x268; // uint32_t : 1
		constexpr auto FracturedByDamageType = 0x26c; // TArray<UDamageType*>
		constexpr auto ChunkHealthScale = 0x27c; // float
		constexpr auto OverrideFragmentDestroyEffects = 0x280; // TArray<ObjectProperty>
		constexpr auto FractureCullMinDistance = 0x290; // float
		constexpr auto FractureCullMaxDistance = 0x294; // float
		constexpr auto DeferredPartsToSpawn = 0x298; // TArray<FDeferredPartToSpawn>
		constexpr auto PartImpactEffect = 0x2a8; // FPhysEffectInfo
		constexpr auto ExplosionFractureSound = 0x2c0; // ObjectProperty
		constexpr auto SingleChunkFractureSound = 0x2c8; // ObjectProperty
		constexpr auto MI_LoseChunkPreviousMaterial = 0x2d0; // ObjectProperty
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x98; // ObjectProperty
		constexpr auto CompressTolerance = 0xa0; // float
		constexpr auto VelocityRate = 0xa4; // float
	}

	namespace n_UHeightFogComponent {
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto Low = 0x88; // uint32_t : 1
		constexpr auto Medium = 0x88; // uint32_t : 1
		constexpr auto High = 0x88; // uint32_t : 1
		constexpr auto Height = 0x8c; // float
		constexpr auto Density = 0x90; // float
		constexpr auto LightBrightness = 0x94; // float
		constexpr auto LightColor = 0x98; // FColor
		constexpr auto ExtinctionDistance = 0x9c; // float
		constexpr auto StartDistance = 0xa0; // float
		constexpr auto DetailMode = 0xa4; // EDetailMode
	}

	namespace n_UGameCrowdBehavior_WaitInQueue {
		constexpr auto bStoppingBehavior = 0x9c; // uint32_t : 1
		constexpr auto QueuePosition = 0xa0; // ObjectProperty
	}

	namespace n_AApexDestructibleActor {
		constexpr auto LightEnvironment = 0x244; // ComponentProperty
		constexpr auto bFractureMaterialOverride = 0x24c; // uint32_t : 1
		constexpr auto FractureMaterials = 0x250; // TArray<ObjectProperty>
		constexpr auto StaticDestructibleComponent = 0x260; // ComponentProperty
		constexpr auto LOD = 0x268; // int32_t
		constexpr auto VisibilityFactors = 0x26c; // TArray<char>
		constexpr auto FractureSounds = 0x27c; // TArray<ObjectProperty>
		constexpr auto FractureParticleEffects = 0x28c; // TArray<ObjectProperty>
	}

	namespace n_UUIDataProvider_OnlineFriendMessages {
		constexpr auto Messages = 0x74; // TArray<FOnlineFriendMessage>
		constexpr auto SendingPlayerNameCol = 0x84; // FString
		constexpr auto bIsFriendInviteCol = 0x94; // FString
		constexpr auto bWasAcceptedCol = 0xa4; // FString
		constexpr auto bWasDeniedCol = 0xb4; // FString
		constexpr auto MessageCol = 0xc4; // FString
		constexpr auto LastInviteFrom = 0xd4; // FString
	}

	namespace n_UInterpTrackInstSkelControlStrength {
		constexpr auto bSavedControlledByAnimMetaData = 0x60; // uint32_t : 1
	}

	namespace n_ASkeletalMeshActorMAT {
		constexpr auto SlotNodes = 0x2a4; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UParticleModuleUberBase {
		constexpr auto RequiredModules = 0x68; // TArray<FName>
	}

	namespace n_UCombatFrontEnd_SeasonPassPopup {
		constexpr auto CurrentPassType = 0xd0; // int32_t
		constexpr auto CurrentPassUpgradeItem = 0xd4; // int32_t
	}

	namespace n_ACombatMapPoint {
		constexpr auto iconType = 0x244; // EObjectIconType
		constexpr auto DesStringID = 0x248; // int32_t
		constexpr auto Priority = 0x24c; // int32_t
		constexpr auto MapPointName = 0x250; // FName
	}

	namespace n_UParticleModuleTypeDataTrail2 {
		constexpr auto TessellationFactor = 0x68; // int32_t
		constexpr auto TessellationFactorDistance = 0x6c; // float
		constexpr auto TessellationStrength = 0x70; // float
		constexpr auto TextureTile = 0x74; // int32_t
		constexpr auto Sheets = 0x78; // int32_t
		constexpr auto MaxTrailCount = 0x7c; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x80; // int32_t
		constexpr auto bClipSourceSegement = 0x84; // uint32_t : 1
		constexpr auto bClearTangents = 0x84; // uint32_t : 1
		constexpr auto RenderGeometry = 0x84; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x84; // uint32_t : 1
		constexpr auto RenderLines = 0x84; // uint32_t : 1
		constexpr auto RenderTessellation = 0x84; // uint32_t : 1
	}

	namespace n_UAnimNodeBlendMultiBone {
		constexpr auto BlendTargetList = 0x100; // TArray<FChildBoneBlendInfo>
		constexpr auto SourceRequiredBones = 0x110; // TArray<char>
	}

	namespace n_UMcpClashMobManager {
		constexpr auto ChallengeListUrl = 0xe8; // FString
		constexpr auto ChallengeStatusUrl = 0xf8; // FString
		constexpr auto ChallengeMultiStatusUrl = 0x108; // FString
		constexpr auto AcceptChallengeUrl = 0x118; // FString
		constexpr auto UpdateChallengeProgressUrl = 0x128; // FString
		constexpr auto UpdateRewardProgressUrl = 0x138; // FString
		constexpr auto HTTPRequestChallengeList = 0x148; // ObjectProperty
		constexpr auto ChallengeUserRequests = 0x150; // TArray<FMcpChallengeUserRequest>
		constexpr auto ChallengeEvents = 0x160; // TArray<FMcpClashMobChallengeEvent>
		constexpr auto ChallengeUserStatus = 0x170; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto TempChallengeUserStatus = 0x180; // FMcpClashMobChallengeUserStatus
		constexpr auto TempChallengeUserStatusArray = 0x1fc; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto FileCache = 0x20c; // TScriptInterface<Class>
		constexpr auto FileDownloader = 0x21c; // ObjectProperty
	}

	namespace n_USeqAct_SetMesh {
		constexpr auto NewSkeletalMesh = 0x108; // ObjectProperty
		constexpr auto NewStaticMesh = 0x110; // ObjectProperty
		constexpr auto MeshType = 0x118; // EMeshType
		constexpr auto bIsAllowedToMove = 0x11c; // uint32_t : 1
		constexpr auto bAllowDecalsToReattach = 0x11c; // uint32_t : 1
	}

	namespace n_ACombatBarricade {
		constexpr auto StaticMeshComponent = 0x254; // ComponentProperty
		constexpr auto Health = 0x25c; // int32_t
		constexpr auto OldHealth = 0x260; // int32_t
		constexpr auto HealthMax = 0x264; // int32_t
		constexpr auto CurrentHealth = 0x268; // int32_t
		constexpr auto LastSubObjectIndex = 0x26c; // int32_t
		constexpr auto bIsActive = 0x270; // uint32_t : 1
		constexpr auto OldbIsActive = 0x270; // uint32_t : 1
		constexpr auto bIgnoreSameTeamDamage = 0x270; // uint32_t : 1
		constexpr auto bGod = 0x270; // uint32_t : 1
		constexpr auto OwnerTeam = 0x274; // Team
		constexpr auto UIState = 0x275; // MissionActorUIState
		constexpr auto OutlineColorForComrade = 0x278; // FOutlineProperty
		constexpr auto OutlineColorForEnemy = 0x2b4; // FOutlineProperty
		constexpr auto ExplosionTemplate = 0x2f0; // ObjectProperty
		constexpr auto SubObjectInfos = 0x2f8; // TArray<FSubObjectInfo>
		constexpr auto DamageInfoList = 0x308; // TArray<FDamageInfo>
		constexpr auto LightEnvironment = 0x318; // ComponentProperty
		constexpr auto DestinationList = 0x320; // TArray<ObjectProperty>
		constexpr auto OccupyDestination = 0x330; // TArray<FSOccupyPawnInfo>
		constexpr auto CurOccupyDestIndex = 0x340; // int32_t
	}

	namespace n_USeqAct_RangeSwitch {
		constexpr auto Ranges = 0x108; // TArray<FSwitchRange>
	}

	namespace n_UCombatUIDataStore_StringAliasMap {
		constexpr auto FakePlatform = 0xf4; // int32_t
	}

	namespace n_UActorFactorySkeletalMesh {
		constexpr auto SkeletalMesh = 0x9c; // ObjectProperty
		constexpr auto AnimSet = 0xa4; // ObjectProperty
		constexpr auto AnimSequenceName = 0xac; // FName
	}

	namespace n_UAnimNodeSequenceBlendBase {
		constexpr auto Anims = 0x158; // TArray<FAnimBlendInfo>
	}

	namespace n_UCombatAnimNotify_HideBoneForAttachedMesh {
		constexpr auto AttachedBoneName = 0x70; // FName
		constexpr auto AttachedSocketName = 0x78; // FName
	}

	namespace n_UAnimNodeBlendByBase {
		constexpr auto Type = 0x120; // EBaseBlendType
		constexpr auto ActorTag = 0x124; // FName
		constexpr auto ActorClass = 0x12c; // AActor*
		constexpr auto BlendTime = 0x134; // float
		constexpr auto CachedBase = 0x138; // ObjectProperty
	}

	namespace n_UTerrainWeightMapTexture {
		constexpr auto ParentTerrain = 0x214; // ObjectProperty
		constexpr auto WeightedMaterials = 0x21c; // TArray<FPointer>
	}

	namespace n_UNxForceFieldTornadoComponent {
		constexpr auto RadialStrength = 0x2c0; // float
		constexpr auto RotationalStrength = 0x2c4; // float
		constexpr auto LiftStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceTopRadius = 0x2d0; // float
		constexpr auto LiftFalloffHeight = 0x2d4; // float
		constexpr auto EscapeVelocity = 0x2d8; // float
		constexpr auto ForceHeight = 0x2dc; // float
		constexpr auto HeightOffset = 0x2e0; // float
		constexpr auto BSpecialRadialForceMode = 0x2e4; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2e8; // float
		constexpr auto Kernel = 0x2ec; // FPointer
	}

	namespace n_UAnimNotify_Kismet {
		constexpr auto NotifyName = 0x60; // FName
	}

	namespace n_ACombatPlayerReplicationInfoBase {
		constexpr auto CachedPawn = 0x324; // ObjectProperty
		constexpr auto KillerForOutline = 0x32c; // ObjectProperty
		constexpr auto bIsLive = 0x334; // uint32_t : 1
		constexpr auto bClientExposedByLocalPlayer = 0x334; // uint32_t : 1
		constexpr auto bClientExposedByUAV = 0x334; // uint32_t : 1
		constexpr auto BasePlayerStateForHUDList = 0x338; // FBasePlayerStateForHUDInfo [0x5]
		constexpr auto CurrentHUDPlayerStateList = 0x374; // FCurrentPlayerStateForHUDInfo [0x5]
		constexpr auto KillerOutlineManagedID = 0x39c; // int32_t
		constexpr auto KillerCachedPawn = 0x3a0; // ObjectProperty
	}

	namespace n_USeqAct_ProjectileFactory {
		constexpr auto PSTemplate = 0x178; // ObjectProperty
		constexpr auto SocketName = 0x180; // FName
		constexpr auto BoneName = 0x188; // FName
	}

	namespace n_UColorGradingEffect {
		constexpr auto PreviousLUTBlender = 0x88; // FLUTBlender
	}

	namespace n_ULevelStreamingAlwaysLoaded {
		constexpr auto bIsProceduralBuildingLODLevel = 0x100; // uint32_t : 1
	}

	namespace n_UAnimNotify_Trails {
		constexpr auto PSTemplate = 0x60; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x68; // uint32_t : 1
		constexpr auto bPreview = 0x68; // uint32_t : 1
		constexpr auto bPreviewForceExplicit = 0x68; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x68; // uint32_t : 1
		constexpr auto bResampleRequired = 0x68; // uint32_t : 1
		constexpr auto FirstEdgeSocketName = 0x6c; // FName
		constexpr auto ControlPointSocketName = 0x74; // FName
		constexpr auto SecondEdgeSocketName = 0x7c; // FName
		constexpr auto LastStartTime = 0x84; // float
		constexpr auto EndTime = 0x88; // float
		constexpr auto SampleTimeStep = 0x8c; // float
		constexpr auto TrailSampleData = 0x90; // TArray<FTrailSamplePoint>
		constexpr auto SamplesPerSecond = 0xa0; // float
		constexpr auto TrailSampledData = 0xa4; // TArray<FTrailSample>
		constexpr auto CurrentTime = 0xb4; // float
		constexpr auto TimeStep = 0xb8; // float
		constexpr auto AnimNodeSeq = 0xbc; // ObjectProperty
	}

	namespace n_UCombatStatisticsTransaction {
		constexpr auto MissionList = 0x60; // ObjectProperty
		constexpr auto ResultData = 0x68; // FMatchResultData
		constexpr auto UI_GrainData = 0xa8; // FGrainInfoData
		constexpr auto Quest_InfoMap = 0xc4; // TMap<None, None>
		constexpr auto MatchResultMap_InfoData = 0x10c; // FMatchResultMapInfoData
		constexpr auto CombatDBManager = 0x124; // ObjectProperty
		constexpr auto CachedClanName = 0x12c; // FString [0x2]
		constexpr auto CachedClanID = 0x14c; // int32_t [0x2]
		constexpr auto AttendID = 0x154; // int32_t
		constexpr auto bNeedPlayStampAnimation = 0x158; // uint32_t : 1
		constexpr auto bNeedForceGotoEventScene = 0x158; // uint32_t : 1
		constexpr auto InternetCafe_Benefit = 0x15c; // char
		constexpr auto DisperseRematchReason = 0x160; // int32_t
	}

	namespace n_USettings {
		constexpr auto LocalizedSettings = 0x60; // TArray<FLocalizedStringSetting>
		constexpr auto Properties = 0x70; // TArray<FSettingsProperty>
		constexpr auto LocalizedSettingsMappings = 0x80; // TArray<FLocalizedStringSettingMetaData>
		constexpr auto PropertyMappings = 0x90; // TArray<FSettingsPropertyPropertyMetaData>
	}

	namespace n_UJsonObject {
		constexpr auto ValueMap = 0x60; // FMap_Mirror
		constexpr auto ObjectMap = 0xa8; // FMap_Mirror
		constexpr auto ValueArray = 0xf0; // TArray<FString>
		constexpr auto ObjectArray = 0x100; // TArray<ObjectProperty>
	}

	namespace n_UInterpGroup {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto InterpTracks = 0x68; // TArray<ObjectProperty>
		constexpr auto GroupName = 0x78; // FName
		constexpr auto GroupColor = 0x80; // FColor
		constexpr auto GroupAnimSets = 0x84; // TArray<ObjectProperty>
		constexpr auto bCollapsed = 0x94; // uint32_t : 1
		constexpr auto bVisible = 0x94; // uint32_t : 1
		constexpr auto bIsFolder = 0x94; // uint32_t : 1
		constexpr auto bIsParented = 0x94; // uint32_t : 1
		constexpr auto bIsSelected = 0x94; // uint32_t : 1
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x6c; // FRawDistributionFloat
		constexpr auto Velocity = 0x90; // FRawDistributionFloat
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_ACombatFrontEndPC {
		constexpr auto MyComBatHUD = 0x908; // ObjectProperty
		constexpr auto TableDepot = 0x910; // ObjectProperty
		constexpr auto bShopZoom = 0x918; // uint32_t : 1
		constexpr auto bInvenZoom = 0x918; // uint32_t : 1
		constexpr auto bCameraZoom = 0x918; // uint32_t : 1
		constexpr auto bNeedOverridePostProcess = 0x918; // uint32_t : 1
		constexpr auto StartPosition = 0x91c; // TArray<ObjectProperty>
		constexpr auto PawnDisplayPositionName = 0x92c; // FString
		constexpr auto PawnShopDisplayPositionName = 0x93c; // FString
		constexpr auto PawnRandomBoxShopDisplayPositionName = 0x94c; // FString
		constexpr auto FEPlayerActor = 0x95c; // ObjectProperty
		constexpr auto InputExpireTime = 0x964; // TArray<FInputExpireTimeInfo>
		constexpr auto DisconnectMatchServerTime = 0x974; // float
		constexpr auto FrontEndCameraActorInfos = 0x978; // TArray<FFrontEndCameraActorInfo>
		constexpr auto CameraZoomState = 0x988; // int32_t
		constexpr auto LastMouseScrollTime = 0x98c; // float
		constexpr auto CameraOverridePostProcess = 0x990; // FPostProcessSettings
		constexpr auto ZoomInCameraLocationActorName = 0xaf4; // FName
		constexpr auto ZoomOutCameraLocationActorName = 0xafc; // FName
		constexpr auto ZoomInCameraLocationActor = 0xb04; // ObjectProperty
		constexpr auto ZoomOutCameraLocationActor = 0xb0c; // ObjectProperty
		constexpr auto ZoomInShopCameraLocationActorName = 0xb14; // FName
		constexpr auto ZoomOutShopCameraLocationActorName = 0xb1c; // FName
		constexpr auto ChannelCameraLocationActorName = 0xb24; // FName
		constexpr auto ZoomInShopCameraLocationActor = 0xb2c; // ObjectProperty
		constexpr auto ZoomOutShopCameraLocationActor = 0xb34; // ObjectProperty
		constexpr auto ChannelCameraLocationActor = 0xb3c; // ObjectProperty
		constexpr auto ZoomInRandomBoxShopCameraLocationActorName = 0xb44; // FName
		constexpr auto ZoomInRandomBoxShopCameraLocationActor = 0xb4c; // ObjectProperty
		constexpr auto AccumDeltaTime = 0xb54; // float
		constexpr auto MouseWheelDeltaTime = 0xb58; // float
		constexpr auto LerpAmount = 0xb5c; // float
		constexpr auto TutorialModeIndex = 0xb60; // int32_t
		constexpr auto TutorialMapIndex = 0xb64; // int32_t
	}

	namespace n_ANxGenericForceFieldBrush {
		constexpr auto ExcludeChannel = 0x280; // int32_t
		constexpr auto CollideWithChannels = 0x284; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x288; // ERBCollisionChannel
		constexpr auto Coordinates = 0x289; // FFB_ForceFieldCoordinates
		constexpr auto Constant = 0x28c; // FVector
		constexpr auto PositionMultiplierX = 0x298; // FVector
		constexpr auto PositionMultiplierY = 0x2a4; // FVector
		constexpr auto PositionMultiplierZ = 0x2b0; // FVector
		constexpr auto PositionTarget = 0x2bc; // FVector
		constexpr auto VelocityMultiplierX = 0x2c8; // FVector
		constexpr auto VelocityMultiplierY = 0x2d4; // FVector
		constexpr auto VelocityMultiplierZ = 0x2e0; // FVector
		constexpr auto VelocityTarget = 0x2ec; // FVector
		constexpr auto Noise = 0x2f8; // FVector
		constexpr auto FalloffLinear = 0x304; // FVector
		constexpr auto FalloffQuadratic = 0x310; // FVector
		constexpr auto TorusRadius = 0x31c; // float
		constexpr auto ForceField = 0x320; // FPointer
		constexpr auto ConvexMeshes = 0x328; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x338; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x348; // TArray<FPointer>
		constexpr auto LinearKernel = 0x358; // FPointer
	}

	namespace n_UInterpGroupInstAI {
		constexpr auto AIGroup = 0x88; // ObjectProperty
		constexpr auto SavedPhysics = 0x90; // EPhysics
		constexpr auto bSavedNoEncroachCheck = 0x94; // uint32_t : 1
		constexpr auto bSavedCollideActors = 0x94; // uint32_t : 1
		constexpr auto bSavedBlockActors = 0x94; // uint32_t : 1
		constexpr auto StageMarkActor = 0x98; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0xd0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xd0; // uint32_t : 1
		constexpr auto InstanceOverride = 0xd4; // FPointer
	}

	namespace n_ACombatDemolitionGame {
		constexpr auto PlantedBomb = 0x788; // ObjectProperty
	}

	namespace n_UMaterialExpression {
		constexpr auto EditorX = 0x60; // int32_t
		constexpr auto EditorY = 0x64; // int32_t
		constexpr auto bRealtimePreview = 0x68; // uint32_t : 1
		constexpr auto bNeedToUpdatePreview = 0x68; // uint32_t : 1
		constexpr auto bIsParameterExpression = 0x68; // uint32_t : 1
		constexpr auto bShowOutputNameOnPin = 0x68; // uint32_t : 1
		constexpr auto bHidePreviewWindow = 0x68; // uint32_t : 1
		constexpr auto bShowInputs = 0x68; // uint32_t : 1
		constexpr auto bShowOutputs = 0x68; // uint32_t : 1
		constexpr auto bUsedByStaticParameterSet = 0x68; // uint32_t : 1
		constexpr auto Material = 0x6c; // ObjectProperty
		constexpr auto Function = 0x74; // ObjectProperty
		constexpr auto Desc = 0x7c; // FString
		constexpr auto BorderColor = 0x8c; // FColor
		constexpr auto MenuCategories = 0x90; // TArray<FName>
		constexpr auto Outputs = 0xa0; // TArray<FExpressionOutput>
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x60; // ObjectProperty
		constexpr auto Surfaces = 0x68; // TArray<int32_t>
	}

	namespace n_UActorFactoryEmitter {
		constexpr auto ParticleSystem = 0x9c; // ObjectProperty
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0xa0; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0xb0; // uint32_t : 1
	}

	namespace n_USeqEvent_AnimNotify {
		constexpr auto NotifyName = 0x128; // FName
	}

	namespace n_USeqAct_MultiplyInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_USeqAct_SetString {
		constexpr auto Target = 0x108; // FString
		constexpr auto Value = 0x118; // FString
	}

	namespace n_UMeshBeaconClient {
		constexpr auto HostPendingRequest = 0xa4; // FOnlineGameSearchResult
		constexpr auto ClientPendingRequest = 0xb4; // FClientConnectionRequest
		constexpr auto CurrentBandwidthTest = 0xdc; // FClientBandwidthTestData
		constexpr auto ClientBeaconState = 0xf0; // EMeshBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xf1; // EMeshBeaconPacketType
		constexpr auto ConnectionRequestTimeout = 0xf4; // float
		constexpr auto ConnectionRequestElapsedTime = 0xf8; // float
		constexpr auto ResolverClassName = 0xfc; // FString
		constexpr auto ResolverClass = 0x10c; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0x114; // ObjectProperty
		constexpr auto bUsingRegisteredAddr = 0x11c; // uint32_t : 1
		constexpr auto __OnConnectionRequestResult__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestRequest__Delegate = 0x130; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestResults__Delegate = 0x140; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x150; // DelegateProperty
		constexpr auto __OnCreateNewSessionRequestReceived__Delegate = 0x160; // DelegateProperty
	}

	namespace n_AWeapon {
		constexpr auto CurrentFireMode = 0x2c0; // char
		constexpr auto FiringStatesArray = 0x2c4; // TArray<FName>
		constexpr auto WeaponFireTypes = 0x2d4; // TArray<EWeaponFireType>
		constexpr auto WeaponFirePickup = 0x2e4; // TArray<ADroppedPickup*>
		constexpr auto RecoilSeed = 0x2f4; // WordProperty
		constexpr auto WeaponProjectiles = 0x2f8; // TArray<AProjectile*>
		constexpr auto FireInterval = 0x308; // TArray<float>
		constexpr auto Spread = 0x318; // TArray<float>
		constexpr auto InstantHitDamage = 0x328; // TArray<float>
		constexpr auto InstantHitMomentum = 0x338; // TArray<float>
		constexpr auto InstantHitDamageTypes = 0x348; // TArray<UDamageType*>
		constexpr auto EquipTime = 0x358; // float
		constexpr auto PutDownTime = 0x35c; // float
		constexpr auto FireOffset = 0x360; // FVector
		constexpr auto bWeaponPutDown = 0x36c; // uint32_t : 1
		constexpr auto bCanThrow = 0x36c; // uint32_t : 1
		constexpr auto bWasOptionalSet = 0x36c; // uint32_t : 1
		constexpr auto bWasDoNotActivate = 0x36c; // uint32_t : 1
		constexpr auto bInstantHit = 0x36c; // uint32_t : 1
		constexpr auto bMeleeWeapon = 0x36c; // uint32_t : 1
		constexpr auto WeaponRange = 0x370; // float
		constexpr auto Mesh = 0x374; // ComponentProperty
		constexpr auto DefaultAnimSpeed = 0x37c; // float
		constexpr auto Priority = 0x380; // float
		constexpr auto AIController = 0x384; // ObjectProperty
		constexpr auto ShouldFireOnRelease = 0x38c; // TArray<char>
		constexpr auto AIRating = 0x39c; // float
		constexpr auto CachedMaxRange = 0x3a0; // float
	}

	namespace n_UScriptViewportClient {
		constexpr auto VfTable_FViewportClient = 0x60; // FPointer
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb0; // uint32_t : 1
	}

	namespace n_UParticleModuleUberRainSplashB {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto ColorOverLife = 0xc0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0xe4; // FRawDistributionFloat
		constexpr auto LifeMultiplier = 0x108; // FRawDistributionVector
		constexpr auto MultiplyX = 0x12c; // uint32_t : 1
		constexpr auto MultiplyY = 0x12c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x12c; // uint32_t : 1
		constexpr auto StartRotationRate = 0x130; // FRawDistributionFloat
	}

	namespace n_ALadder {
		constexpr auto MyLadder = 0x33c; // ObjectProperty
		constexpr auto LadderList = 0x344; // ObjectProperty
	}

	namespace n_UPointLightComponent {
		constexpr auto ShadowRadiusMultiplier = 0x1a8; // float
		constexpr auto Radius = 0x1ac; // float
		constexpr auto FalloffExponent = 0x1b0; // float
		constexpr auto ShadowFalloffExponent = 0x1b4; // float
		constexpr auto MinShadowFalloffRadius = 0x1b8; // float
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto ShadowPlane = 0x210; // FPlane
		constexpr auto PreviewLightRadius = 0x220; // ComponentProperty
		constexpr auto LightmassSettings = 0x228; // FLightmassPointLightSettings
		constexpr auto PreviewLightSourceRadius = 0x238; // ComponentProperty
	}

	namespace n_AGameCrowdReplicationActor {
		constexpr auto Spawner = 0x244; // ObjectProperty
		constexpr auto bSpawningActive = 0x24c; // uint32_t : 1
		constexpr auto DestroyAllCount = 0x250; // int32_t
	}

	namespace n_USeqEvent_ParticleEvent {
		constexpr auto EventType = 0x128; // EParticleEventOutputType
		constexpr auto EventPosition = 0x12c; // FVector
		constexpr auto EventEmitterTime = 0x138; // float
		constexpr auto EventVelocity = 0x13c; // FVector
		constexpr auto EventParticleTime = 0x148; // float
		constexpr auto EventNormal = 0x14c; // FVector
		constexpr auto UseRelfectedImpactVector = 0x158; // uint32_t : 1
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x60; // int32_t
		constexpr auto bEnabled = 0x64; // uint32_t : 1
		constexpr auto ConvertedModules = 0x64; // uint32_t : 1
		constexpr auto RequiredModule = 0x68; // ObjectProperty
		constexpr auto Modules = 0x70; // TArray<ObjectProperty>
		constexpr auto TypeDataModule = 0x80; // ObjectProperty
		constexpr auto SpawnModule = 0x88; // ObjectProperty
		constexpr auto EventGenerator = 0x90; // ObjectProperty
		constexpr auto SpawningModules = 0x98; // TArray<ObjectProperty>
		constexpr auto SpawnModules = 0xa8; // TArray<ObjectProperty>
		constexpr auto UpdateModules = 0xb8; // TArray<ObjectProperty>
		constexpr auto OrbitModules = 0xc8; // TArray<ObjectProperty>
		constexpr auto EventReceiverModules = 0xd8; // TArray<ObjectProperty>
		constexpr auto PeakActiveParticles = 0xe8; // int32_t
	}

	namespace n_ACoverReplicator {
		constexpr auto CoverReplicationData = 0x244; // TArray<FCoverReplicationInfo>
	}

	namespace n_ANxForceFieldTornado {
		constexpr auto Shape = 0x298; // ObjectProperty
		constexpr auto DrawComponent = 0x2a0; // ComponentProperty
		constexpr auto RadialStrength = 0x2a8; // float
		constexpr auto RotationalStrength = 0x2ac; // float
		constexpr auto LiftStrength = 0x2b0; // float
		constexpr auto ForceRadius = 0x2b4; // float
		constexpr auto ForceTopRadius = 0x2b8; // float
		constexpr auto LiftFalloffHeight = 0x2bc; // float
		constexpr auto EscapeVelocity = 0x2c0; // float
		constexpr auto ForceHeight = 0x2c4; // float
		constexpr auto HeightOffset = 0x2c8; // float
		constexpr auto BSpecialRadialForceMode = 0x2cc; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2d0; // float
		constexpr auto Kernel = 0x2d4; // FPointer
	}

	namespace n_USeqAct_Log {
		constexpr auto bOutputToScreen = 0x108; // uint32_t : 1
		constexpr auto bIncludeObjComment = 0x108; // uint32_t : 1
		constexpr auto TargetDuration = 0x10c; // float
		constexpr auto TargetOffset = 0x110; // FVector
		constexpr auto LogMessage = 0x11c; // FString
	}

	namespace n_UWindPointSourceComponent {
		constexpr auto PreviewRadiusComponent = 0xa0; // ComponentProperty
		constexpr auto Radius = 0xa8; // float
	}

	namespace n_UCombatHUD_CTFPointArea {
		constexpr auto AreaVolume = 0x1b0; // ObjectProperty
		constexpr auto flag = 0x1b8; // ObjectProperty
		constexpr auto TargetIndex = 0x1c0; // int32_t
		constexpr auto IsArea = 0x1c4; // uint32_t : 1
	}

	namespace n_AWebServer {
		constexpr auto ServerName = 0x29c; // FString
		constexpr auto Applications = 0x2ac; // FString [0xa]
		constexpr auto ApplicationPaths = 0x34c; // FString [0xa]
		constexpr auto bEnabled = 0x3ec; // uint32_t : 1
		constexpr auto ListenPort = 0x3f0; // int32_t
		constexpr auto MaxConnections = 0x3f4; // int32_t
		constexpr auto DefaultApplication = 0x3f8; // int32_t
		constexpr auto ExpirationSeconds = 0x3fc; // int32_t
		constexpr auto ServerURL = 0x400; // FString
		constexpr auto ApplicationObjects = 0x410; // ObjectProperty [0xa]
		constexpr auto ConnectionCount = 0x460; // int32_t
		constexpr auto ConnID = 0x464; // int32_t
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto CollisionHeightData = 0x250; // FUntypedBulkData_Mirror
		constexpr auto ComponentLayers = 0x290; // TArray<FName>
		constexpr auto DominantLayerData = 0x2a0; // FUntypedBulkData_Mirror
		constexpr auto SectionBaseX = 0x2e0; // int32_t
		constexpr auto SectionBaseY = 0x2e4; // int32_t
		constexpr auto CollisionSizeQuads = 0x2e8; // int32_t
		constexpr auto CollisionScale = 0x2ec; // float
		constexpr auto CollisionQuadFlags = 0x2f0; // TArray<char>
		constexpr auto PhysicalMaterials = 0x300; // TArray<ObjectProperty>
		constexpr auto RBHeightfield = 0x310; // FPointer
		constexpr auto CachedBoxSphereBounds = 0x318; // FBoxSphereBounds
		constexpr auto bIncludeHoles = 0x334; // uint32_t : 1
		constexpr auto bHeightFieldDataHasHole = 0x334; // uint32_t : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0xb0; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0xc0; // FGuid
	}

	namespace n_ACombatDemolitionPC {
		constexpr auto TriggerUsedList = 0xbe4; // TArray<ObjectProperty>
		constexpr auto PawnExactLocation = 0xbf4; // FSExactLocationInfo
	}

	namespace n_ACombatEvolveGunPRI {
		constexpr auto CurrentPoint = 0x520; // int32_t
		constexpr auto CurrentWeaponIndex = 0x524; // int32_t
		constexpr auto CurrentGrade = 0x528; // int32_t
		constexpr auto AllEvolvePoint = 0x52c; // int32_t
		constexpr auto LastAllEvolvePoint = 0x530; // int32_t
	}

	namespace n_UMaterialExpressionTextureObject {
		constexpr auto Texture = 0xb0; // ObjectProperty
	}

	namespace n_USeqCond_SwitchObject {
		constexpr auto SupportedValues = 0xec; // TArray<FSwitchObjectCase>
	}

	namespace n_UCombatHUD_TacticalMapAndScoreboard {
		constexpr auto Radar_LPIconMC = 0xc0; // ObjectProperty
		constexpr auto CompassMC = 0xc8; // ObjectProperty
		constexpr auto TopDepthIconContainerMC = 0xd0; // ObjectProperty
		constexpr auto FriendlyIconContainerMC = 0xd8; // ObjectProperty
		constexpr auto EnemyIconContainerMC = 0xe0; // ObjectProperty
		constexpr auto ObjectIconContainerMC = 0xe8; // ObjectProperty
		constexpr auto NameplateContainerMC = 0xf0; // ObjectProperty
		constexpr auto NameplateLocDelta_X = 0xf8; // int32_t
		constexpr auto NameplateLocDelta_Y = 0xfc; // int32_t
		constexpr auto ChampionshipObserverNameplateLocDelta_X = 0x100; // int32_t
		constexpr auto ChampionshipObserverNameplateLocDelta_Y = 0x104; // int32_t
		constexpr auto MapMC = 0x108; // ObjectProperty
		constexpr auto IconMatrix = 0x110; // FMatrix
		constexpr auto IconDatas = 0x150; // FIconData [0x6]
		constexpr auto NameplateIconDatas = 0x270; // FNameplateData
		constexpr auto bIgnoreMinimap = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreWholeMap = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreScoreboard = 0x2a0; // uint32_t : 1
		constexpr auto scoreboardType = 0x2a4; // EScoreboardType
		constexpr auto LastModeName = 0x2a8; // FString
		constexpr auto __OnUpdateTacticalMap__Delegate = 0x2b8; // DelegateProperty
	}

	namespace n_USeqAct_IsInObjectList {
		constexpr auto bCheckForAllObjects = 0x108; // uint32_t : 1
		constexpr auto bObjectFound = 0x108; // uint32_t : 1
	}

	namespace n_USeqEvent_InGameClientEvent {
		constexpr auto EventName = 0x128; // FName
		constexpr auto TeamIndex = 0x130; // Team
	}

	namespace n_UCombatAnimNodeSequence {
		constexpr auto bAutoStart = 0x158; // uint32_t : 1
		constexpr auto bLoopLastSequence = 0x158; // uint32_t : 1
		constexpr auto SeqStack = 0x15c; // TArray<FName>
	}

	namespace n_USeqAct_GetVectorComponents {
		constexpr auto InVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x74; // float
		constexpr auto PitchMax = 0x78; // float
		constexpr auto VolumeMin = 0x7c; // float
		constexpr auto VolumeMax = 0x80; // float
		constexpr auto PitchModulation = 0x84; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0xa8; // FRawDistributionFloat
	}

	namespace n_UCCSBTSelectTarget {
		constexpr auto TargetSelectionAlgorithm = 0xbc; // ECCSSelectTargetAlgorithm
	}

	namespace n_UCombatDataTableRefGameServer {
		constexpr auto Server = 0x6c; // int32_t
		constexpr auto TitleId = 0x70; // int32_t
		constexpr auto DescriptionID = 0x74; // int32_t
	}

	namespace n_AUSSWeaponAttachment {
		constexpr auto WeapMeshComp = 0x244; // ComponentProperty
		constexpr auto MuzzleFlashSocketName = 0x24c; // FName
		constexpr auto MuzzleFlashMesh = 0x254; // ComponentProperty
		constexpr auto MuzzleFlashAttached = 0x25c; // uint32_t : 1
		constexpr auto MuzzleFlashDuration = 0x260; // float
		constexpr auto DefaultImpactEffect = 0x264; // FUSSMaterialImpactEffect
	}

	namespace n_UIniLocPatcher {
		constexpr auto Files = 0x60; // TArray<FIniLocFileEntry>
		constexpr auto bRequestEmsFileList = 0x70; // uint32_t : 1
		constexpr auto MaxCachedFileAge = 0x74; // int32_t
		constexpr auto TitleFileInterface = 0x78; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x88; // TScriptInterface<Class>
		constexpr auto ReadTitleFileCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnAllTitleFilesCompleted__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x68; // uint32_t : 1
	}

	namespace n_USeqAct_CastToFloat {
		constexpr auto Value = 0x108; // int32_t
		constexpr auto FloatResult = 0x10c; // float
	}

	namespace n_UAnimNodeAimOffset {
		constexpr auto Aim = 0x100; // FVector2D
		constexpr auto AngleOffset = 0x108; // FVector2D
		constexpr auto bForceAimDir = 0x110; // uint32_t : 1
		constexpr auto bBakeFromAnimations = 0x110; // uint32_t : 1
		constexpr auto bPassThroughWhenNotRendered = 0x110; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x110; // uint32_t : 1
		constexpr auto PassThroughAtOrAboveLOD = 0x114; // int32_t
		constexpr auto ForcedAimDir = 0x118; // EAnimAimDir
		constexpr auto RequiredBones = 0x11c; // TArray<char>
		constexpr auto AimCpntIndexLUT = 0x12c; // TArray<char>
		constexpr auto TemplateNode = 0x13c; // ObjectProperty
		constexpr auto Profiles = 0x144; // TArray<FAimOffsetProfile>
		constexpr auto CurrentProfileIndex = 0x154; // int32_t
		constexpr auto RefPoseForBake = 0x158; // FName
	}

	namespace n_UFogVolumeSphericalDensityComponent {
		constexpr auto MaxDensity = 0xd4; // float
		constexpr auto SphereCenter = 0xd8; // FVector
		constexpr auto SphereRadius = 0xe4; // float
		constexpr auto PreviewSphereRadius = 0xe8; // ComponentProperty
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_ACombatFrontEndInfo {
		constexpr auto SceneList = 0x4c0; // TArray<FSceneInfo>
		constexpr auto CurrentScene = 0x4d0; // eFrontEndScene
		constexpr auto CurrentMainScene = 0x4d1; // eFrontEndScene
		constexpr auto CurrentCameraName = 0x4d4; // FName
		constexpr auto bShowSceneMessege = 0x4dc; // uint32_t : 1
		constexpr auto GameTitleDisplaySec = 0x4e0; // float
		constexpr auto GameTitleDisplaySec_WithoutAge = 0x4e4; // float
		constexpr auto LoadingSceneTime = 0x4e8; // float
		constexpr auto LoadingSceneTimeLimit = 0x4ec; // float
	}

	namespace n_UOnlinePlaylistProvider {
		constexpr auto PlaylistId = 0x94; // int32_t
		constexpr auto PlaylistGameTypeNames = 0x98; // TArray<FName>
		constexpr auto DisplayName = 0xa8; // FString
		constexpr auto Priority = 0xb8; // int32_t
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Alpha = 0x118; // FExpressionInput
	}

	namespace n_UMcpUserCloudFileDownload {
		constexpr auto EnumerateCloudFilesUrl = 0x78; // FString
		constexpr auto ReadCloudFileUrl = 0x88; // FString
		constexpr auto WriteCloudFileUrl = 0x98; // FString
		constexpr auto DeleteCloudFileUrl = 0xa8; // FString
		constexpr auto UserCloudFileRequests = 0xb8; // TArray<FMcpUserCloudFilesEntry>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0x128; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0x138; // DelegateProperty
	}

	namespace n_ACombatPC {
		constexpr auto CameraActorTag = 0x908; // FName
		constexpr auto CameraStyle = 0x910; // FName
		constexpr auto SprayUseDelay = 0x918; // float
		constexpr auto SprayDistance = 0x91c; // float
		constexpr auto SprayCount = 0x920; // int32_t
		constexpr auto SprayLifeSpan = 0x924; // float
		constexpr auto SpraySound_Fail = 0x928; // ObjectProperty
		constexpr auto SprayDecalActors = 0x930; // TArray<ObjectProperty>
		constexpr auto SprayLastUseIndex = 0x940; // int32_t
		constexpr auto SprayLastUseTime = 0x944; // float
		constexpr auto bSprayPreview = 0x948; // uint32_t : 1
		constexpr auto bNoCrosshair = 0x948; // uint32_t : 1
		constexpr auto bInitializedPresetList = 0x948; // uint32_t : 1
		constexpr auto bKeepSpectatingCamMode = 0x948; // uint32_t : 1
		constexpr auto bReadyForFlashbang = 0x948; // uint32_t : 1
		constexpr auto bCaptureFlashbang = 0x948; // uint32_t : 1
		constexpr auto bLastSendCrouched = 0x948; // uint32_t : 1
		constexpr auto bLastSendMoving = 0x948; // uint32_t : 1
		constexpr auto bCanDisplayHitInfomation = 0x948; // uint32_t : 1
		constexpr auto bCanDisplayGainAward = 0x948; // uint32_t : 1
		constexpr auto bCanDisplayScoring = 0x948; // uint32_t : 1
		constexpr auto bCanDisplayPreset = 0x948; // uint32_t : 1
		constexpr auto bQuickPresetChange = 0x948; // uint32_t : 1
		constexpr auto BeDamaged = 0x948; // uint32_t : 1
		constexpr auto UISoundPlaying = 0x948; // uint32_t : 1
		constexpr auto bForceRestart = 0x948; // uint32_t : 1
		constexpr auto bHideTeamIFF = 0x948; // uint32_t : 1
		constexpr auto bVivoxSet = 0x948; // uint32_t : 1
		constexpr auto SprayPreviewDecalActor = 0x94c; // ObjectProperty
		constexpr auto SprayPreviewDelay = 0x954; // float
		constexpr auto SprayLastPreviewTime = 0x958; // float
		constexpr auto CachedSprayID = 0x95c; // int32_t
		constexpr auto NetworkDisconnectCheckTime = 0x960; // float
		constexpr auto NetworkDisconnectAllowTime = 0x964; // float
		constexpr auto HighPingShootAllowTime = 0x968; // float
		constexpr auto HighPingShootMaxTime = 0x96c; // float
		constexpr auto HighPingValue = 0x970; // int32_t
		constexpr auto HighPingDetectTime = 0x974; // float
		constexpr auto LocalPresetList_First = 0x978; // int32_t [0x9]
		constexpr auto LocalPresetList_Sec = 0x99c; // int32_t [0x9]
		constexpr auto LocalPresetList_Third = 0x9c0; // int32_t [0x9]
		constexpr auto CurrentPreset = 0x9e4; // char
		constexpr auto ReservedPreset = 0x9e5; // char
		constexpr auto LastSendPhysics = 0x9e6; // EPhysics
		constexpr auto CurrentMouseSensMode = 0x9e7; // EMouseSensMode
		constexpr auto LockedPresetSceneCount = 0x9e8; // char
		constexpr auto LockedPresetSceneCountMax = 0x9e9; // char
		constexpr auto PlayerStartType = 0x9ea; // PLAYERSTART_TYPE
		constexpr auto LogoutReason = 0x9eb; // char
		constexpr auto LastPresetPressTime = 0x9ec; // float
		constexpr auto PresetInputDelay = 0x9f0; // float
		constexpr auto EntryPostProcessChain = 0x9f4; // ObjectProperty
		constexpr auto OldPostProcessChain = 0x9fc; // TArray<ObjectProperty>
		constexpr auto CBLocalPlayer = 0xa0c; // ObjectProperty
		constexpr auto CheckSpectatorDelay = 0xa14; // float
		constexpr auto DefaultSpectatingCamMode = 0xa18; // FName
		constexpr auto SavedSpectatingCamMode = 0xa20; // FName
		constexpr auto StatStorage = 0xa28; // ObjectProperty
		constexpr auto CombatLogData = 0xa30; // ObjectProperty
		constexpr auto NetMoveDeltaWhenNotMoved = 0xa38; // float
		constexpr auto LastSentRotation = 0xa3c; // FRotator
		constexpr auto InputExpireTime = 0xa48; // float
		constexpr auto CombatPawn = 0xa4c; // ObjectProperty
		constexpr auto DropClaymoreCount = 0xa54; // int32_t
		constexpr auto DroppedWeapon = 0xa58; // ObjectProperty
		constexpr auto DroppedSupplies = 0xa60; // ObjectProperty [0x2]
		constexpr auto DropClaymoreList = 0xa70; // TArray<ObjectProperty>
		constexpr auto PresetManager = 0xa80; // ObjectProperty
		constexpr auto presetUI = 0xa88; // ObjectProperty
		constexpr auto myCombatTeamGameHUD = 0xa90; // ObjectProperty
		constexpr auto KillerIFFObject = 0xa98; // ObjectProperty
		constexpr auto AdjustPositionCounter = 0xaa0; // int32_t
		constexpr auto AdjustPositionUpdateCounter = 0xaa4; // int32_t
		constexpr auto SpectatingMouseSens = 0xaa8; // float
		constexpr auto CurrentMinimapActor = 0xaac; // ObjectProperty
		constexpr auto LastClientOnlineTime = 0xab4; // float
		constexpr auto LastInvalidNetworkTime = 0xab8; // float
		constexpr auto AliveDisplayPawnList = 0xabc; // TArray<FDisplayPawnInfo>
		constexpr auto DeadDisplayPawnList = 0xacc; // TArray<FDisplayPawnInfo>
		constexpr auto CriticalDamageamount = 0xadc; // int32_t
		constexpr auto UAVActorList = 0xae0; // TArray<ObjectProperty>
		constexpr auto SentrygunList = 0xaf0; // TArray<ObjectProperty>
		constexpr auto TrophyturretList = 0xb00; // TArray<ObjectProperty>
		constexpr auto OutlineManager = 0xb10; // ObjectProperty
		constexpr auto GlobalOutlineEventList = 0xb18; // TArray<FGlobalOutlineEvent>
		constexpr auto CheckViewTargetLookAtDuration = 0xb28; // float
		constexpr auto LockedPresetScene = 0xb2c; // ObjectProperty
		constexpr auto LockedPresetSceneState = 0xb34; // FName
		constexpr auto DeployedSkillActors = 0xb3c; // ObjectProperty [0x2]
		constexpr auto Redeploying = 0xb4c; // TArray<char>
		constexpr auto spawnPointUI = 0xb5c; // ObjectProperty
		constexpr auto InGameBattleLog = 0xb64; // ObjectProperty
		constexpr auto AdvancedColorIndex = 0xb6c; // int32_t
		constexpr auto CheckMouseSensStartTime = 0xb70; // float
		constexpr auto CheckMouseSensLoopDelay = 0xb74; // float
		constexpr auto CheckMouseSensEndTime = 0xb78; // float
		constexpr auto LoginTokenPartA = 0xb7c; // FString
		constexpr auto LoginTokenPartB = 0xb8c; // FString
		constexpr auto JoinTokenPartA = 0xb9c; // FString
		constexpr auto JoinTokenPartB = 0xbac; // FString
		constexpr auto PresetSlotStateArray = 0xbbc; // TArray<FPresetSlotState>
		constexpr auto RestoreKillData = 0xbcc; // FCombatPC_RestoreGameKillData
	}

	namespace n_ACombatRescuePC {
		constexpr auto SpawnAreaIndex = 0xbe4; // char
		constexpr auto bIsRepair = 0xbe8; // uint32_t : 1
		constexpr auto bIsReporting = 0xbe8; // uint32_t : 1
	}

	namespace n_UCombatAICond_TargetExistenceDetail {
		constexpr auto Target = 0xd4; // ETargetType
		constexpr auto DistanceOperator = 0xd5; // BTConditionOperator
		constexpr auto EnableDistanceCheck = 0xd8; // uint32_t : 1
		constexpr auto EnableVisibleCheck = 0xd8; // uint32_t : 1
		constexpr auto Visible = 0xd8; // uint32_t : 1
		constexpr auto Distance = 0xdc; // float
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x74; // uint32_t : 1
		constexpr auto bModulatePitch = 0x74; // uint32_t : 1
		constexpr auto AmplitudeMin = 0x78; // float
		constexpr auto AmplitudeMax = 0x7c; // float
		constexpr auto FrequencyMin = 0x80; // float
		constexpr auto FrequencyMax = 0x84; // float
		constexpr auto OffsetMin = 0x88; // float
		constexpr auto OffsetMax = 0x8c; // float
		constexpr auto CenterMin = 0x90; // float
		constexpr auto CenterMax = 0x94; // float
		constexpr auto Amplitude = 0x98; // FRawDistributionFloat
		constexpr auto Frequency = 0xbc; // FRawDistributionFloat
		constexpr auto Offset = 0xe0; // FRawDistributionFloat
		constexpr auto Center = 0x104; // FRawDistributionFloat
	}

	namespace n_AReverbVolume {
		constexpr auto Priority = 0x280; // float
		constexpr auto bEnabled = 0x284; // uint32_t : 1
		constexpr auto Settings = 0x288; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x298; // FInteriorSettings
		constexpr auto NextLowerPriorityVolume = 0x2bc; // ObjectProperty
	}

	namespace n_AUSSPawn {
		constexpr auto VfTable_ICCSPawn = 0x558; // FPointer
		constexpr auto MovementType = 0x560; // ECCSMovementType
		constexpr auto AlertnessState = 0x561; // ECCSAlertnessState
		constexpr auto WantedCoverPose = 0x562; // ECCSCoverPose
		constexpr auto CurrentCoverPose = 0x563; // ECCSCoverPose
		constexpr auto bInCrouchedPosture = 0x564; // uint32_t : 1
		constexpr auto bShouldCover = 0x564; // uint32_t : 1
		constexpr auto bInCover = 0x564; // uint32_t : 1
		constexpr auto CoverPct = 0x568; // float
		constexpr auto CoverPoseBlendTimeOverride = 0x56c; // float
		constexpr auto AimCurrentSkel = 0x570; // FVector2D
		constexpr auto AimPitchRange = 0x578; // FVector2D
		constexpr auto AimYawRange = 0x580; // FVector2D
		constexpr auto MaxPitchSpeed = 0x588; // float
		constexpr auto MaxYawSpeed = 0x58c; // float
		constexpr auto CurrentWeaponAttachmentClass = 0x590; // AUSSWeaponAttachment*
		constexpr auto CurrentWeaponAttachment = 0x598; // ObjectProperty
		constexpr auto WeaponHeight = 0x5a0; // float
		constexpr auto BloodParticleSystem = 0x5a4; // ObjectProperty
		constexpr auto AimNodes = 0x5ac; // TArray<ObjectProperty>
	}

	namespace n_UCombatActiveSkill {
		constexpr auto GivenWeaponClassName = 0x80; // TArray<FGivenWeaponInfo>
		constexpr auto GivenWeaponClassNameOnFinished = 0x90; // TArray<FString>
		constexpr auto bDiscardInventoryOnFinished = 0xa0; // uint32_t : 1
		constexpr auto bActivatedSkill = 0xa0; // uint32_t : 1
		constexpr auto StartUpResources = 0xa4; // TArray<FString>
		constexpr auto ActiveActionVoiceName = 0xb4; // FName
		constexpr auto WeaponIndex = 0xbc; // int32_t
		constexpr auto ActiveSkillType = 0xc0; // FName
	}

	namespace n_ACombatDummyClientController {
		constexpr auto GripControllerManagerClassPath = 0x5e8; // FString
		constexpr auto GripControllerManagerHolder = 0x5f8; // ObjectProperty
	}

	namespace n_UGameAICommand {
		constexpr auto ChildCommand = 0x60; // ObjectProperty
		constexpr auto ChildStatus = 0x68; // FName
		constexpr auto GameAIOwner = 0x70; // ObjectProperty
		constexpr auto Status = 0x78; // FName
		constexpr auto bAllowNewSameClassInstance = 0x80; // uint32_t : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // uint32_t : 1
		constexpr auto bAborted = 0x80; // uint32_t : 1
		constexpr auto bIgnoreNotifies = 0x80; // uint32_t : 1
		constexpr auto bIgnoreStepAside = 0x80; // uint32_t : 1
		constexpr auto bPendingPop = 0x80; // uint32_t : 1
	}

	namespace n_APlayerStartGroup {
		constexpr auto SpawnGroupIndex = 0x33c; // char
		constexpr auto NavPointList = 0x340; // TArray<ObjectProperty>
	}

	namespace n_AMobileDebugCameraController {
		constexpr auto OldMobileGroup = 0x79c; // int32_t
		constexpr auto MPI = 0x7a0; // ObjectProperty
	}

	namespace n_ACombatEvolveGunGame {
		constexpr auto AddAmmoRatioByRankLower = 0x78c; // TArray<float>
		constexpr auto EvolvePointClass = 0x79c; // ADroppedPickup*
		constexpr auto AllWeaponScriptName = 0x7a4; // TArray<FString>
		constexpr auto SupplyManager = 0x7b4; // ObjectProperty
		constexpr auto WeaponLevelList = 0x7bc; // TArray<FEvolveLevelInfo>
	}

	namespace n_ANxTornadoAngularForceFieldCapsule {
		constexpr auto RenderComponent = 0x2cc; // ComponentProperty
	}

	namespace n_UAnimNodeBlendList {
		constexpr auto TargetWeight = 0x100; // TArray<float>
		constexpr auto BlendTimeToGo = 0x110; // float
		constexpr auto ActiveChildIndex = 0x114; // int32_t
		constexpr auto bPlayActiveChild = 0x118; // uint32_t : 1
		constexpr auto bForceChildFullWeightWhenBecomingRelevant = 0x118; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x118; // uint32_t : 1
		constexpr auto SliderPosition = 0x11c; // float
	}

	namespace n_APlayerReplicationInfo {
		constexpr auto Score = 0x244; // float
		constexpr auto Deaths = 0x248; // WordProperty
		constexpr auto Ping = 0x24a; // char
		constexpr auto TTSSpeaker = 0x24b; // ETTSSpeaker
		constexpr auto RealPing = 0x24c; // char
		constexpr auto NumLives = 0x250; // int32_t
		constexpr auto PlayerName = 0x254; // FString
		constexpr auto OldName = 0x264; // FString
		constexpr auto PlayerID = 0x274; // int32_t
		constexpr auto Team = 0x278; // ObjectProperty
		constexpr auto bAdmin = 0x280; // uint32_t : 1
		constexpr auto bIsSpectator = 0x280; // uint32_t : 1
		constexpr auto bOnlySpectator = 0x280; // uint32_t : 1
		constexpr auto bWaitingPlayer = 0x280; // uint32_t : 1
		constexpr auto bReadyToPlay = 0x280; // uint32_t : 1
		constexpr auto bOutOfLives = 0x280; // uint32_t : 1
		constexpr auto bBot = 0x280; // uint32_t : 1
		constexpr auto bHasBeenWelcomed = 0x280; // uint32_t : 1
		constexpr auto bIsInactive = 0x280; // uint32_t : 1
		constexpr auto bFromPreviousLevel = 0x280; // uint32_t : 1
		constexpr auto StartTime = 0x284; // int32_t
		constexpr auto StringSpectating = 0x288; // FString
		constexpr auto StringUnknown = 0x298; // FString
		constexpr auto Kills = 0x2a8; // int32_t
		constexpr auto GameMessageClass = 0x2ac; // UGameMessage*
		constexpr auto ExactPing = 0x2b4; // float
		constexpr auto ExactRealPing = 0x2b8; // float
		constexpr auto SavedNetworkAddress = 0x2bc; // FString
		constexpr auto UniqueId = 0x2cc; // FUniqueNetId
		constexpr auto SteamId = 0x2d4; // FUniqueNetId
		constexpr auto SessionName = 0x2dc; // FName
		constexpr auto AutomatedTestingData = 0x2e4; // FAutomatedTestingDatum
		constexpr auto StatConnectionCounts = 0x2ec; // int32_t
		constexpr auto StatPingTotals = 0x2f0; // int32_t
		constexpr auto StatPingMin = 0x2f4; // int32_t
		constexpr auto StatPingMax = 0x2f8; // int32_t
		constexpr auto StatPKLTotal = 0x2fc; // int32_t
		constexpr auto StatPKLMin = 0x300; // int32_t
		constexpr auto StatPKLMax = 0x304; // int32_t
		constexpr auto StatMaxInBPS = 0x308; // int32_t
		constexpr auto StatAvgInBPS = 0x30c; // int32_t
		constexpr auto StatMaxOutBPS = 0x310; // int32_t
		constexpr auto StatAvgOutBPS = 0x314; // int32_t
		constexpr auto RecoilSetCount = 0x318; // int32_t
		constexpr auto Avatar = 0x31c; // ObjectProperty
	}

	namespace n_UGripActionNode_Shoot {
		constexpr auto CurAITarget = 0xf4; // ECurAITarget
		constexpr auto FireCountPerBurst = 0xf8; // int32_t
		constexpr auto BurstCount = 0xfc; // int32_t
		constexpr auto DelayBetweenBursts = 0x100; // float
		constexpr auto CurBurstCount = 0x104; // int32_t
		constexpr auto LastBurstTime = 0x108; // float
	}

	namespace n_USubsystem {
		constexpr auto VfTable_FExec = 0x60; // FPointer
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x60; // float
		constexpr auto PlayAudioComp = 0x64; // ComponentProperty
	}

	namespace n_UCombatHUD_VoiceChatTalking {
		constexpr auto CurrentTalkingUsers = 0xc0; // TArray<FString>
	}

	namespace n_ACombatSEIGamePC {
		constexpr auto bGainOccupiedPoint = 0xbe4; // uint32_t : 1
		constexpr auto bShowLogSeizeScore = 0xbe4; // uint32_t : 1
		constexpr auto CombatSEIPRI = 0xbe8; // ObjectProperty
	}

	namespace n_UUIDataStore_MenuItems {
		constexpr auto CurrentGameSettingsTag = 0xf0; // FName
		constexpr auto OptionProviders = 0xf8; // FMultiMap_Mirror
		constexpr auto DynamicProviders = 0x140; // TArray<ObjectProperty>
	}

	namespace n_UModelComponent {
		constexpr auto Model = 0x250; // ObjectProperty
		constexpr auto ZoneIndex = 0x258; // int32_t
		constexpr auto ComponentIndex = 0x25c; // int32_t
		constexpr auto Nodes = 0x260; // TArray<FPointer>
		constexpr auto Elements = 0x270; // TArray<FPointer>
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x60; // float
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x140; // float
		constexpr auto Channel = 0x144; // ETextureColorChannel
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // uint32_t : 1
	}

	namespace n_UCombatAnimBlendByDeath {
		constexpr auto Owner = 0x144; // ObjectProperty
		constexpr auto bIsDeadOld = 0x14c; // uint32_t : 1
		constexpr auto UndeadTime = 0x150; // float
		constexpr auto NoAnimTheshold = 0x154; // float
	}

	namespace n_UActorComponent {
		constexpr auto Scene = 0x70; // FPointer
		constexpr auto Owner = 0x78; // ObjectProperty
		constexpr auto bAttached = 0x80; // uint32_t : 1
		constexpr auto bTickInEditor = 0x80; // uint32_t : 1
		constexpr auto bNeedsReattach = 0x80; // uint32_t : 1
		constexpr auto bNeedsUpdateTransform = 0x80; // uint32_t : 1
		constexpr auto TickGroup = 0x84; // ETickingGroup
	}

	namespace n_USeqAct_ToggleHidden {
		constexpr auto bToggleBasedActors = 0x108; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_UCCSBTOrientTowardTarget {
		constexpr auto Alertness = 0xbc; // ECCSAlertnessState
	}

	namespace n_ACombatBusterActor {
		constexpr auto HealthRatio = 0x254; // float
		constexpr auto Health = 0x258; // int32_t
		constexpr auto bIsActive = 0x25c; // uint32_t : 1
		constexpr auto bIgnoreSameTeamDamage = 0x25c; // uint32_t : 1
		constexpr auto HealthMax = 0x260; // int32_t
		constexpr auto CurrentHealth = 0x264; // int32_t
		constexpr auto LastSubObjectIndex = 0x268; // int32_t
		constexpr auto MissionActorArrayIndex = 0x26c; // int32_t
		constexpr auto OwnerTeam = 0x270; // Team
		constexpr auto UIState = 0x271; // MissionActorUIState
		constexpr auto OutlineColorForComrade = 0x274; // FOutlineProperty
		constexpr auto OutlineColorForEnemy = 0x2b0; // FOutlineProperty
		constexpr auto ExplosionTemplate = 0x2ec; // ObjectProperty
		constexpr auto SubObjectInfos = 0x2f4; // TArray<FSubObjectInfo>
		constexpr auto UISortPriority = 0x304; // int32_t
		constexpr auto LightEnvironment = 0x308; // ComponentProperty
		constexpr auto DamageInfoList = 0x310; // TArray<FDamageInfo>
		constexpr auto HumanReadableName = 0x320; // FString
	}

	namespace n_UCombatSkelCtrl_WeaponLag {
		constexpr auto PreviewIdx = 0x100; // int32_t
		constexpr auto Translations = 0x104; // TArray<FTranslationPack>
		constexpr auto Rotations = 0x114; // TArray<FRotationPack>
	}

	namespace n_UMaterialExpressionScreenPosition {
		constexpr auto ScreenAlign = 0xb0; // uint32_t : 1
	}

	namespace n_AMatineeActor {
		constexpr auto InterpAction = 0x244; // ObjectProperty
		constexpr auto bIsPlaying = 0x24c; // uint32_t : 1
		constexpr auto bReversePlayback = 0x24c; // uint32_t : 1
		constexpr auto bPaused = 0x24c; // uint32_t : 1
		constexpr auto AllAIGroupsInitialized = 0x24c; // uint32_t : 1
		constexpr auto PlayRate = 0x250; // float
		constexpr auto Position = 0x254; // float
		constexpr auto AIGroupNames = 0x258; // FName [0xa]
		constexpr auto AIGroupPawns = 0x2a8; // ObjectProperty [0xa]
		constexpr auto AIGroupInitStage = 0x2f8; // int32_t [0xa]
		constexpr auto ClientSidePositionErrorTolerance = 0x320; // float
	}

	namespace n_USeqAct_SetPhysics {
		constexpr auto newPhysics = 0x108; // EPhysics
	}

	namespace n_APostProcessVolume {
		constexpr auto Priority = 0x280; // float
		constexpr auto bOverrideWorldPostProcessChain = 0x284; // uint32_t : 1
		constexpr auto bEnabled = 0x284; // uint32_t : 1
		constexpr auto Settings = 0x288; // FPostProcessSettings
		constexpr auto NextLowerPriorityVolume = 0x3ec; // ObjectProperty
	}

	namespace n_AVolumeTimer {
		constexpr auto V = 0x244; // ObjectProperty
	}

	namespace n_USoundNodeLooping {
		constexpr auto bLoopIndefinitely = 0x74; // uint32_t : 1
		constexpr auto LoopCountMin = 0x78; // float
		constexpr auto LoopCountMax = 0x7c; // float
		constexpr auto LoopCount = 0x80; // FRawDistributionFloat
	}

	namespace n_UGripBTClearState {
		constexpr auto StateName = 0xbc; // FString
	}

	namespace n_USeqAct_ToggleOutLine {
		constexpr auto OutlineColor = 0x108; // FColor
		constexpr auto OutlineWidth = 0x10c; // char
		constexpr auto OutlineMinWidth = 0x10d; // char
		constexpr auto OutlineBlendMode = 0x10e; // EBlendMode
		constexpr auto StencilID = 0x10f; // char
		constexpr auto OutLineColorIntense = 0x110; // float
		constexpr auto OutLineIntenseCycleTime = 0x114; // float
		constexpr auto OutLineCullDistance = 0x118; // float
		constexpr auto OutlineWidthMaxDistance = 0x11c; // float
		constexpr auto DrawOnlyHidden = 0x120; // uint32_t : 1
		constexpr auto DisableDepthTest = 0x120; // uint32_t : 1
		constexpr auto EnableDepthWriteOutline = 0x120; // uint32_t : 1
		constexpr auto OutlineMaterialOverride = 0x124; // ObjectProperty
	}

	namespace n_UGripBlackboard {
		constexpr auto BB = 0x60; // FPointer
	}

	namespace n_UCombatDataTableRefMatchMakingOption {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto ServiceRegionID = 0x7c; // int32_t
		constexpr auto PingCodeName = 0x80; // FString
		constexpr auto RatingCodeName = 0x90; // FString
	}

	namespace n_UCombatWeaponRISBase {
		constexpr auto OwnerWeapon = 0x60; // ObjectProperty
		constexpr auto bIsFirstPersonCam = 0x68; // uint32_t : 1
		constexpr auto bIsAttachedToWeapon = 0x68; // uint32_t : 1
		constexpr auto bAutoAttachToWeapon = 0x68; // uint32_t : 1
		constexpr auto bCallTickFunction = 0x68; // uint32_t : 1
		constexpr auto FunctionTableForWeaponState = 0x6c; // FFunctionTable [0x1e]
		constexpr auto FunctionTableForRISState = 0x24c; // FFunctionTable [0xa]
		constexpr auto RISSlotIndex = 0x2ec; // RISSlot
		constexpr auto PartStateInfo = 0x2f0; // FCustomAnimData [0x1e]
		constexpr auto ActivePartTime = 0xbd8; // float
		constexpr auto DeactivePartTime = 0xbdc; // float
		constexpr auto SavedWeaponPropery = 0xbe0; // TArray<char>
	}

	namespace n_ACoverLink {
		constexpr auto GLOBAL_bUseSlotMarkers = 0x33c; // uint32_t : 1
		constexpr auto bDisabled = 0x33c; // uint32_t : 1
		constexpr auto bClaimAllSlots = 0x33c; // uint32_t : 1
		constexpr auto bAutoSort = 0x33c; // uint32_t : 1
		constexpr auto bAutoAdjust = 0x33c; // uint32_t : 1
		constexpr auto bCircular = 0x33c; // uint32_t : 1
		constexpr auto bLooped = 0x33c; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x33c; // uint32_t : 1
		constexpr auto bDynamicCover = 0x33c; // uint32_t : 1
		constexpr auto bFractureOnTouch = 0x33c; // uint32_t : 1
		constexpr auto bDebug_FireLinks = 0x33c; // uint32_t : 1
		constexpr auto bDebug_ExposedLinks = 0x33c; // uint32_t : 1
		constexpr auto bDebug_CoverGen = 0x33c; // uint32_t : 1
		constexpr auto bDoAutoSlotDensityFixup = 0x33c; // uint32_t : 1
		constexpr auto LeanTraceDist = 0x340; // float
		constexpr auto Slots = 0x344; // TArray<FCoverSlot>
		constexpr auto DynamicLinkInfos = 0x354; // TArray<FDynamicLinkInfo>
		constexpr auto Claims = 0x364; // TArray<ObjectProperty>
		constexpr auto InvalidateDistance = 0x374; // float
		constexpr auto MaxFireLinkDist = 0x378; // float
		constexpr auto CircularOrigin = 0x37c; // FVector
		constexpr auto CircularRadius = 0x388; // float
		constexpr auto AlignDist = 0x38c; // float
		constexpr auto AutoCoverSlotInterval = 0x390; // float
		constexpr auto StandHeight = 0x394; // float
		constexpr auto MidHeight = 0x398; // float
		constexpr auto StandingLeanOffset = 0x39c; // FVector
		constexpr auto CrouchLeanOffset = 0x3a8; // FVector
		constexpr auto PopupOffset = 0x3b4; // FVector
		constexpr auto SlipDist = 0x3c0; // float
		constexpr auto TurnDist = 0x3c4; // float
		constexpr auto DangerScale = 0x3c8; // float
		constexpr auto NextCoverLink = 0x3cc; // ObjectProperty
		constexpr auto LocationDescription = 0x3d4; // ECoverLocationDescription
	}

	namespace n_UApexDestructibleAsset {
		constexpr auto MApexAsset = 0x80; // FPointer
		constexpr auto Materials = 0x88; // TArray<ObjectProperty>
		constexpr auto FractureMaterials = 0x98; // TArray<ObjectProperty>
		constexpr auto DefaultPhysMaterial = 0xa8; // ObjectProperty
		constexpr auto MDestructibleThumbnailComponent = 0xb0; // FPointer
		constexpr auto bHasUniqueAssetMaterialNames = 0xb8; // uint32_t : 1
		constexpr auto bDynamic = 0xb8; // uint32_t : 1
		constexpr auto CrumbleEmitterName = 0xbc; // FString
		constexpr auto DustEmitterName = 0xcc; // FString
		constexpr auto DestructibleParameters = 0xdc; // FNxDestructibleParameters
	}

	namespace n_USeqAct_SetVector {
		constexpr auto DefaultValue = 0x108; // FVector
	}

	namespace n_UActorFactoryApexDestructible {
		constexpr auto bStartAwake = 0x9c; // uint32_t : 1
		constexpr auto RBChannel = 0xa0; // ERBCollisionChannel
		constexpr auto CollideWithChannels = 0xa4; // FRBCollisionChannelContainer
		constexpr auto DestructibleAsset = 0xa8; // ObjectProperty
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x68; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x8c; // FRawDistributionVector
		constexpr auto bAbsolute = 0xb0; // uint32_t : 1
		constexpr auto bKillInside = 0xb0; // uint32_t : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xb0; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefCompetitiveSeason {
		constexpr auto SeasonCodeName = 0x6c; // FString
		constexpr auto ModeGroupCodename = 0x7c; // FString
	}

	namespace n_UCombatHUD_PickupItemLocator {
		constexpr auto PickupItemObject = 0x1b0; // ObjectProperty
		constexpr auto PickupIconType = 0x1b8; // EObjectIconType
	}

	namespace n_UCombatAIActionNode_MoveToward {
		constexpr auto bIsWalking = 0xf4; // uint32_t : 1
	}

	namespace n_AMobileTouchInputVolume {
		constexpr auto bEnabled = 0x280; // uint32_t : 1
	}

	namespace n_ARB_ForceFieldExcludeVolume {
		constexpr auto ForceFieldChannel = 0x280; // int32_t
		constexpr auto SceneIndex = 0x284; // int32_t
	}

	namespace n_UAnimNodeBlend {
		constexpr auto Child2Weight = 0x100; // float
		constexpr auto Child2WeightTarget = 0x104; // float
		constexpr auto BlendTimeToGo = 0x108; // float
		constexpr auto bSkipBlendWhenNotRendered = 0x10c; // uint32_t : 1
	}

	namespace n_USeqAct_PlaySound {
		constexpr auto PlaySound = 0x120; // ObjectProperty
		constexpr auto ExtraDelay = 0x128; // float
		constexpr auto bDelayReached = 0x12c; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0x12c; // uint32_t : 1
		constexpr auto bStopped = 0x12c; // uint32_t : 1
		constexpr auto SoundDuration = 0x130; // float
		constexpr auto FadeInTime = 0x134; // float
		constexpr auto FadeOutTime = 0x138; // float
		constexpr auto VolumeMultiplier = 0x13c; // float
		constexpr auto PitchMultiplier = 0x140; // float
		constexpr auto BeforeEndTime = 0x144; // float
	}

	namespace n_UCombatAnimBlendDirectional {
		constexpr auto TorsoControllers = 0x11c; // TArray<ObjectProperty>
		constexpr auto TorsoControllerNames = 0x12c; // TArray<FName>
		constexpr auto EditorPreview = 0x13c; // uint32_t : 1
		constexpr auto FullBwdThreshold = 0x140; // float
		constexpr auto SkelBlendOutTime = 0x144; // float
		constexpr auto Owner = 0x148; // ObjectProperty
	}

	namespace n_USeqAct_StreamInTextures {
		constexpr auto bLocationBased = 0x120; // uint32_t : 1
		constexpr auto bStreamingActive = 0x120; // uint32_t : 1
		constexpr auto bHasTriggeredAllLoaded = 0x120; // uint32_t : 1
		constexpr auto Seconds = 0x124; // float
		constexpr auto StreamingDistanceMultiplier = 0x128; // float
		constexpr auto NumWantingResourcesID = 0x12c; // int32_t
		constexpr auto StopTimestamp = 0x130; // float
		constexpr auto LocationActors = 0x134; // TArray<ObjectProperty>
		constexpr auto ForceMaterials = 0x144; // TArray<ObjectProperty>
		constexpr auto CinematicTextureGroups = 0x154; // FTextureGroupContainer
		constexpr auto SelectedCinematicTextureGroups = 0x158; // int32_t
	}

	namespace n_UCombatSceneCapture2DComponent {
		constexpr auto SurfaceWidth = 0x170; // float
		constexpr auto SurfaceHeight = 0x174; // float
		constexpr auto bUseMainSceneProjectionMatrix = 0x178; // uint32_t : 1
		constexpr auto bCaptureSceneOnce = 0x178; // uint32_t : 1
	}

	namespace n_UPostProcessChain {
		constexpr auto Effects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataRefAttend {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Day = 0x80; // int32_t
		constexpr auto RewardTableCodeName = 0x84; // FString
	}

	namespace n_UCombatHUD_Base {
		constexpr auto Owner = 0xa0; // ObjectProperty
		constexpr auto FontHTMLString = 0xa8; // FString
		constexpr auto bIsDisplayed = 0xb8; // uint32_t : 1
		constexpr auto bOn = 0xb8; // uint32_t : 1
		constexpr auto bMiniHUDMode = 0xb8; // uint32_t : 1
	}

	namespace n_USeqAct_AssignController {
		constexpr auto ControllerClass = 0x108; // AController*
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x74; // TArray<FDistanceDatum>
	}

	namespace n_UCombatHandGripController {
		constexpr auto WeaponBoneName = 0x100; // FName
		constexpr auto WeaponBoneName_Left = 0x108; // FName
		constexpr auto GripSocketName = 0x110; // FName
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto BoneName = 0x68; // FName
		constexpr auto RelativeLocation = 0x70; // FVector
		constexpr auto RelativeRotation = 0x7c; // FRotator
		constexpr auto RelativeScale = 0x88; // FVector
		constexpr auto PreviewSkelComp = 0x94; // ComponentProperty
	}

	namespace n_ACombatDroppedWeapon {
		constexpr auto bUseMeshInterpolation = 0x320; // uint32_t : 1
		constexpr auto bClearRemainAmmo = 0x320; // uint32_t : 1
		constexpr auto bShowPickupWeaponUI = 0x320; // uint32_t : 1
		constexpr auto Weapon = 0x324; // ObjectProperty
		constexpr auto KillerPRI = 0x32c; // ObjectProperty
		constexpr auto RemainAmmoCount = 0x334; // WordProperty
		constexpr auto RemainSubAmmoCount = 0x336; // char
		constexpr auto RemainSubMagazineAmmo = 0x337; // char
		constexpr auto RemainMagazineAmmo = 0x338; // WordProperty
	}

	namespace n_AMobileDebugCameraHUD {
		constexpr auto bDrawDebugText = 0x680; // uint32_t : 1
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x8c; // float
		constexpr auto DistributeThreshold = 0x90; // float
	}

	namespace n_ARoute {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x244; // FPointer
		constexpr auto RouteType = 0x24c; // ERouteType
		constexpr auto RouteList = 0x250; // TArray<FActorReference>
		constexpr auto FudgeFactor = 0x260; // float
		constexpr auto RouteIndexOffset = 0x264; // int32_t
	}

	namespace n_UCombatDataTableRefMatchMaking {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto MaxUser = 0x70; // int32_t
		constexpr auto StartableMinUser = 0x74; // int32_t
		constexpr auto SupportGroupCodeName = 0x78; // FString
		constexpr auto ReturnBackPlayedGame = 0x88; // uint32_t : 1
		constexpr auto RatingLowLock = 0x8c; // int32_t
		constexpr auto RatingHighLock = 0x90; // int32_t
		constexpr auto SearchTimeOut = 0x94; // int32_t
		constexpr auto RefusePrevMatch = 0x98; // int32_t
		constexpr auto RefuseCommunityGroupMatchup = 0x9c; // int32_t
		constexpr auto TeamGroupLimit = 0xa0; // int32_t
		constexpr auto OptionCodename = 0xa4; // FString
		constexpr auto RematchOptionCodeName = 0xb4; // FString
		constexpr auto PingID = 0xc4; // int32_t
	}

	namespace n_USeqEvent_MobileRawInput {
		constexpr auto TouchIndex = 0x128; // int32_t
		constexpr auto TouchpadIndex = 0x12c; // int32_t
		constexpr auto TouchLocationX = 0x130; // float
		constexpr auto TouchLocationY = 0x134; // float
		constexpr auto TimeStamp = 0x138; // float
	}

	namespace n_UMeshBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MeshBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // uint32_t : 1
		constexpr auto bShouldTick = 0x74; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto SocketSendBufferSize = 0x88; // int32_t
		constexpr auto SocketReceiveBufferSize = 0x8c; // int32_t
		constexpr auto MaxBandwidthTestBufferSize = 0x90; // int32_t
		constexpr auto MinBandwidthTestBufferSize = 0x94; // int32_t
		constexpr auto MaxBandwidthTestSendTime = 0x98; // float
		constexpr auto MaxBandwidthTestReceiveTime = 0x9c; // float
		constexpr auto MaxBandwidthHistoryEntries = 0xa0; // int32_t
	}

	namespace n_UCombatAwesomium {
		constexpr auto AwesomiumList = 0x60; // TArray<FAwesomiumInfo>
		constexpr auto AwesomiumDurationTime = 0x70; // float
		constexpr auto AwesomiumLastTime = 0x74; // float
	}

	namespace n_ASceneCaptureReflectActor {
		constexpr auto StaticMesh = 0x24c; // ComponentProperty
		constexpr auto ReflectMaterialInst = 0x254; // ObjectProperty
	}

	namespace n_UTerrainLayerSetup {
		constexpr auto Materials = 0x60; // TArray<FTerrainFilteredMaterial>
	}

	namespace n_ATcpLink {
		constexpr auto LinkState = 0x268; // ELinkState
		constexpr auto RemoteAddr = 0x26c; // FIpAddr
		constexpr auto AcceptClass = 0x274; // ATcpLink*
		constexpr auto SendFIFO = 0x27c; // TArray<char>
		constexpr auto RecvBuf = 0x28c; // FString
	}

	namespace n_UPlayer {
		constexpr auto VfTable_FExec = 0x60; // FPointer
		constexpr auto Actor = 0x68; // ObjectProperty
		constexpr auto CurrentNetSpeed = 0x70; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x74; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x78; // int32_t
		constexpr auto PP_DesaturationMultiplier = 0x7c; // float
		constexpr auto PP_HighlightsMultiplier = 0x80; // float
		constexpr auto PP_MidTonesMultiplier = 0x84; // float
		constexpr auto PP_ShadowsMultiplier = 0x88; // float
	}

	namespace n_UCombatDataTableRefStat {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto StatName = 0x80; // int32_t
		constexpr auto StatDesc = 0x84; // int32_t
		constexpr auto RecordType = 0x88; // int32_t
		constexpr auto GameSetTableKey = 0x8c; // char
		constexpr auto DataSetTableKey = 0x8d; // char
		constexpr auto ConstValueKey = 0x8e; // char
		constexpr auto Event = 0x90; // WordProperty
		constexpr auto RefModeCodeName = 0x94; // FString
		constexpr auto RefMapCodeName = 0xa4; // FString
		constexpr auto RefStatGroupCodeName = 0xb4; // FString
		constexpr auto RefItemCodeName = 0xc4; // FString
		constexpr auto RefRankCodeName = 0xd4; // FString
		constexpr auto RefScoringCodeName = 0xe4; // FString
	}

	namespace n_UAnimNodeBlendPerBone {
		constexpr auto bForceLocalSpaceBlend = 0x110; // uint32_t : 1
		constexpr auto BranchStartBoneName = 0x114; // TArray<FName>
		constexpr auto Child2PerBoneWeight = 0x124; // TArray<float>
		constexpr auto LocalToCompReqBones = 0x134; // TArray<char>
	}

	namespace n_UCombatChampionshipObserverInput {
		constexpr auto ObserverKeyBindings = 0x2ec; // TArray<FKeyBind>
		constexpr auto CameraData = 0x2fc; // ObjectProperty
		constexpr auto FOV_Min = 0x304; // float
		constexpr auto FOV_Max = 0x308; // float
		constexpr auto SpectatorCameraSpeed_Min = 0x30c; // float
		constexpr auto SpectatorCameraSpeed_Max = 0x310; // float
		constexpr auto LastSelectedFreeCamPoint = 0x314; // int32_t
	}

	namespace n_UDrawCylinderComponent {
		constexpr auto CylinderColor = 0x250; // FColor
		constexpr auto CylinderMaterial = 0x254; // ObjectProperty
		constexpr auto CylinderRadius = 0x25c; // float
		constexpr auto CylinderTopRadius = 0x260; // float
		constexpr auto CylinderHeight = 0x264; // float
		constexpr auto CylinderHeightOffset = 0x268; // float
		constexpr auto CylinderSides = 0x26c; // int32_t
		constexpr auto bDrawWireCylinder = 0x270; // uint32_t : 1
		constexpr auto bDrawLitCylinder = 0x270; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x270; // uint32_t : 1
	}

	namespace n_ACBInventoryManager {
		constexpr auto bInfiniteAmmo = 0x270; // uint32_t : 1
		constexpr auto PreviousWeapon = 0x274; // ObjectProperty
	}

	namespace n_UGripBTSetState {
		constexpr auto StateName = 0xbc; // FString
	}

	namespace n_UGripActionNode_AimingFocus {
		constexpr auto bReleaseAimingFocus = 0xf4; // uint32_t : 1
		constexpr auto CurAITarget = 0xf8; // ECurAITarget
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x68; // uint32_t : 1
		constexpr auto bProcessBurstList = 0x68; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_Scene {
		constexpr auto bShowTopBar = 0xcc; // uint32_t : 1
		constexpr auto bNeedBGM = 0xcc; // uint32_t : 1
		constexpr auto bUseMouse = 0xcc; // uint32_t : 1
		constexpr auto bWhiteListCheck = 0xcc; // uint32_t : 1
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x68; // FRawDistributionVector
		constexpr auto EnableX = 0x8c; // uint32_t : 1
		constexpr auto EnableY = 0x8c; // uint32_t : 1
		constexpr auto EnableZ = 0x8c; // uint32_t : 1
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0xa0; // TArray<FParticleReplayTrackKey>
		constexpr auto bIsCapturingReplay = 0xb0; // uint32_t : 1
	}

	namespace n_ACombatTeamOwnedInfo {
		constexpr auto Team = 0x244; // ObjectProperty
	}

	namespace n_UAnimNotify_Footstep {
		constexpr auto FootDown = 0x60; // int32_t
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x68; // EBeam2Method
		constexpr auto TaperMethod = 0x69; // EBeamTaperMethod
		constexpr auto TextureTile = 0x6c; // int32_t
		constexpr auto TextureTileDistance = 0x70; // float
		constexpr auto Sheets = 0x74; // int32_t
		constexpr auto MaxBeamCount = 0x78; // int32_t
		constexpr auto Speed = 0x7c; // float
		constexpr auto InterpolationPoints = 0x80; // int32_t
		constexpr auto bAlwaysOn = 0x84; // uint32_t : 1
		constexpr auto RenderGeometry = 0x84; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x84; // uint32_t : 1
		constexpr auto RenderLines = 0x84; // uint32_t : 1
		constexpr auto RenderTessellation = 0x84; // uint32_t : 1
		constexpr auto UpVectorStepSize = 0x88; // int32_t
		constexpr auto BranchParentName = 0x8c; // FName
		constexpr auto Distance = 0x94; // FRawDistributionFloat
		constexpr auto TaperFactor = 0xb8; // FRawDistributionFloat
		constexpr auto TaperScale = 0xdc; // FRawDistributionFloat
	}

	namespace n_USeqCond_SwitchClass {
		constexpr auto ClassArray = 0xec; // TArray<FSwitchClassInfo>
	}

	namespace n_UCombatTeamGameMovie {
		constexpr auto myPC = 0x308; // ObjectProperty
		constexpr auto myPRI = 0x310; // ObjectProperty
		constexpr auto currentGRI = 0x318; // ObjectProperty
		constexpr auto CharacterInfoMC = 0x320; // ObjectProperty
		constexpr auto LastCredit = 0x328; // int32_t
		constexpr auto WeaponInfoMC = 0x32c; // ObjectProperty
		constexpr auto AimClass = 0x334; // ObjectProperty
		constexpr auto bIsReloading = 0x33c; // uint32_t : 1
		constexpr auto bIsChangingWeapon = 0x33c; // uint32_t : 1
		constexpr auto bNeedTimeLimitUI = 0x33c; // uint32_t : 1
		constexpr auto bIsDisplayedTimeLimit = 0x33c; // uint32_t : 1
		constexpr auto bNeedClearRoundStatus = 0x33c; // uint32_t : 1
		constexpr auto bShowRoundWinCount = 0x33c; // uint32_t : 1
		constexpr auto bShowRoundPoint = 0x33c; // uint32_t : 1
		constexpr auto bSupportRespawn = 0x33c; // uint32_t : 1
		constexpr auto bIsDead = 0x33c; // uint32_t : 1
		constexpr auto bIsMatchHasFinished = 0x33c; // uint32_t : 1
		constexpr auto HitIndicatorMC = 0x340; // ObjectProperty
		constexpr auto DirHits = 0x348; // FDirHit [0x7]
		constexpr auto MaxDrawDirHitTime = 0x3f0; // float
		constexpr auto UpdateDirHitTime = 0x3f4; // float
		constexpr auto RoundStatusMC = 0x3f8; // ObjectProperty
		constexpr auto LastTeamPoint = 0x400; // int32_t [0x2]
		constexpr auto LastTeamMemeber = 0x408; // int32_t [0x2]
		constexpr auto LastWinRounds = 0x410; // int32_t [0x2]
		constexpr auto LastRemainTime_Min = 0x418; // int32_t
		constexpr auto LastRemainTime_Sec = 0x41c; // int32_t
		constexpr auto RespawnProgressBarMC = 0x420; // ObjectProperty
		constexpr auto GlobalMessageMC = 0x428; // ObjectProperty
		constexpr auto Message_PersonalMC = 0x430; // ObjectProperty
		constexpr auto Message_Personal_AutoMC = 0x438; // ObjectProperty
		constexpr auto IFFContainerClass = 0x440; // ObjectProperty
		constexpr auto KillDeathListMC = 0x448; // ObjectProperty
		constexpr auto OptionMenuClass = 0x450; // ObjectProperty
		constexpr auto BlockAndReportClass = 0x458; // ObjectProperty
		constexpr auto GameModeHelpClass = 0x460; // ObjectProperty
		constexpr auto CachedWeaponSimpleInfos = 0x468; // TArray<FWeaponSimpleInfo>
		constexpr auto ScoringListMC = 0x478; // ObjectProperty
		constexpr auto ScoringRightMC = 0x480; // ObjectProperty
		constexpr auto HelpImageMC = 0x488; // ObjectProperty
		constexpr auto KillMarkMC = 0x490; // ObjectProperty
		constexpr auto DamageBoardContainer = 0x498; // ObjectProperty
		constexpr auto HitDamageInfos = 0x4a0; // FHitDamageInfo [0x14]
		constexpr auto BombsiteContainer = 0x6d0; // ObjectProperty
		constexpr auto MarkerContainer = 0x6d8; // ObjectProperty
		constexpr auto DeviceCoolTimerMC = 0x6e0; // ObjectProperty
		constexpr auto BombProgressBar = 0x6e8; // ObjectProperty
		constexpr auto PresetWindowMC = 0x6f0; // ObjectProperty
		constexpr auto PresetHelpMC = 0x6f8; // ObjectProperty
		constexpr auto PresetTimerMC = 0x700; // ObjectProperty
		constexpr auto PresetSelectWaitingMC = 0x708; // ObjectProperty
		constexpr auto ShowRervPresetTime = 0x710; // int32_t
		constexpr auto SpawnPointMC = 0x714; // ObjectProperty
		constexpr auto ChattingMC = 0x71c; // ObjectProperty
		constexpr auto LastChatType = 0x724; // EUIChatType
		constexpr auto HUD_TickGroup = 0x725; // char
		constexpr auto RoundCountType = 0x726; // ERoundCountType
		constexpr auto RoundStartMC = 0x728; // ObjectProperty
		constexpr auto CountDownMC = 0x730; // ObjectProperty
		constexpr auto RoundOverMC = 0x738; // ObjectProperty
		constexpr auto RadioMessageMC = 0x740; // ObjectProperty
		constexpr auto MarkerMenuMC = 0x748; // ObjectProperty
		constexpr auto WarmUpMC = 0x750; // ObjectProperty
		constexpr auto CompetitionWarmUpMC = 0x758; // ObjectProperty
		constexpr auto GrenadeIndicatorMC = 0x760; // ObjectProperty
		constexpr auto GI_DISPLAY_DISTANCE_MAX = 0x768; // int32_t
		constexpr auto GrenadeIndicator_Display_Update_Cycle = 0x76c; // float
		constexpr auto GrenadeIndicator_Display_AccumulationTime = 0x770; // float
		constexpr auto ObserverInfoMC = 0x774; // ObjectProperty
		constexpr auto ObserverHelpMC = 0x77c; // ObjectProperty
		constexpr auto DeathCamRecordMC = 0x784; // ObjectProperty
		constexpr auto ChampionshipPlayerInfoListContainerMC = 0x78c; // ObjectProperty
		constexpr auto ChampionshipSpectatedPlayerInfoMC = 0x794; // ObjectProperty
		constexpr auto BattleLogMC = 0x79c; // ObjectProperty
		constexpr auto SurrenderMC = 0x7a4; // ObjectProperty
		constexpr auto KickUserSelectMC = 0x7ac; // ObjectProperty
		constexpr auto SurrenderSelectPopupMC = 0x7b4; // ObjectProperty
		constexpr auto TestTF_Right = 0x7bc; // ObjectProperty
		constexpr auto RankUpMessageMC = 0x7c4; // ObjectProperty
		constexpr auto TestMessageBoxMC = 0x7cc; // ObjectProperty
		constexpr auto NoticeHotKeyMC = 0x7d4; // ObjectProperty
		constexpr auto MagazineStateMC = 0x7dc; // ObjectProperty
		constexpr auto SelectPositionMC = 0x7e4; // ObjectProperty
		constexpr auto SelectSkillListMC = 0x7ec; // ObjectProperty
		constexpr auto OccupationMsgMC = 0x7f4; // ObjectProperty
		constexpr auto NoticePositionMC = 0x7fc; // ObjectProperty
		constexpr auto ChangeTeamMC = 0x804; // ObjectProperty
		constexpr auto VoiceChatPlayerMC = 0x80c; // ObjectProperty
		constexpr auto MAXPLAYERNUM = 0x814; // int32_t
		constexpr auto MaxPlayerOfTeam = 0x818; // int32_t
		constexpr auto DamageBoardOffsetX = 0x81c; // float
		constexpr auto DamageBoardOffsetY = 0x820; // float
		constexpr auto ControlUIObjects = 0x824; // TArray<ObjectProperty>
		constexpr auto PlayerStateEffects = 0x834; // FPlayerStateEffectType [0x7]
		constexpr auto InputExpireMsg = 0x9a0; // FString
		constexpr auto GlogbalMapSymbolDescriptionInfos = 0x9b0; // TArray<FMapSymbolDescriptionInfo>
		constexpr auto ForModeMapSymbolDescriptionInfos = 0x9c0; // TArray<FMapSymbolDescriptionInfo>
		constexpr auto ClassIconList = 0x9d0; // FClassIconStruct [0x4]
		constexpr auto FriendlyIFFMaxDistance = 0xa70; // int32_t
		constexpr auto TestBigTextField = 0xa74; // ObjectProperty
		constexpr auto CrosshairLegthMaxPercent = 0xa7c; // int32_t
		constexpr auto RoundConditionAudioComponents = 0xa80; // TArray<FRoundConditionAudioComponentInfo>
		constexpr auto ChampionshipObserverDebugField = 0xa90; // ObjectProperty
		constexpr auto TutorialDialog = 0xa98; // ObjectProperty
		constexpr auto TutorialHelp = 0xaa0; // ObjectProperty
		constexpr auto TutorialQuest = 0xaa8; // ObjectProperty
		constexpr auto TutorialMessage = 0xab0; // ObjectProperty
		constexpr auto StatusEffectMC = 0xab8; // ObjectProperty
		constexpr auto __StateEffectVoid__Delegate = 0xac0; // DelegateProperty
	}

	namespace n_UCombatFrontEnd_MakeRoom {
		constexpr auto Makeroom_MissionInfos = 0xd0; // TArray<FMakeroom_MissionInfo>
		constexpr auto Makeroom_ModeInfos = 0xe0; // TArray<FMakeroom_ModeInfo>
		constexpr auto Makeroom_MapInfos = 0xf0; // TArray<FMakeroom_MapInfo>
		constexpr auto MissionLabelID = 0x100; // int32_t
		constexpr auto ModeLabelID = 0x104; // int32_t
		constexpr auto DescLabelID = 0x108; // int32_t
		constexpr auto ModeSetupLabelID = 0x10c; // int32_t
		constexpr auto MapSetupLabelID = 0x110; // int32_t
		constexpr auto CurretMapLabelID = 0x114; // int32_t
		constexpr auto BrandNewLabelID = 0x118; // int32_t
		constexpr auto PopularityLabelID = 0x11c; // int32_t
		constexpr auto EventLabelID = 0x120; // int32_t
		constexpr auto MaxUserCountLabelID = 0x124; // int32_t
		constexpr auto ChangeModeLabelID = 0x128; // int32_t
		constexpr auto ChangeMapLabelID = 0x12c; // int32_t
		constexpr auto ModeSetupLabel = 0x130; // FString
		constexpr auto MapSetupLabel = 0x140; // FString
		constexpr auto ButtonInfo = 0x150; // FFrontEndButtonStruct [0x7]
		constexpr auto SelectedMissionIndex = 0x1f8; // int32_t
		constexpr auto SelectedModeIndex = 0x1fc; // int32_t
		constexpr auto SelectedMapIndex = 0x200; // int32_t
		constexpr auto SelectedModeGroupIndex = 0x204; // int32_t
		constexpr auto bRandomMode = 0x208; // uint32_t : 1
		constexpr auto bNeedUpdatePassword = 0x208; // uint32_t : 1
		constexpr auto IsPracticeRoom = 0x208; // uint32_t : 1
		constexpr auto SelectedMissionName = 0x20c; // FString
		constexpr auto SelectedModeName = 0x21c; // FString
		constexpr auto SelectedMapName = 0x22c; // FString
		constexpr auto SelectedMapMaxPlayerCount = 0x23c; // FString
		constexpr auto SelectedMapBGPath = 0x24c; // FString
		constexpr auto LastPassword = 0x25c; // int32_t
		constexpr auto CurrentUIMode = 0x260; // EMakeRoomMode
		constexpr auto CurrentSetupType = 0x261; // EMakeRoomScene
		constexpr auto CurrentCompetitiveType = 0x262; // E_COMPETITIVE_MATCH_TYPE
		constexpr auto DataStoreMission = 0x264; // ObjectProperty
		constexpr auto nChannel = 0x26c; // int32_t
		constexpr auto RefChannelID = 0x270; // int32_t
		constexpr auto RegionID = 0x274; // int32_t
	}

	namespace n_UCombatLocalPlayer {
		constexpr auto CurrentCombatPostProcess = 0x434; // eCombatPostProcess
		constexpr auto MotionBlurPPSettings = 0x438; // FPostProcessSettings
		constexpr auto ExposedPPSettings = 0x59c; // FPostProcessSettings
		constexpr auto FlashbangPPSettings = 0x700; // FPostProcessSettings
		constexpr auto WarmupPPSettings = 0x864; // FPostProcessSettings
		constexpr auto CountdownPPSettings = 0x9c8; // FPostProcessSettings
		constexpr auto RoundPPSettings = 0xb2c; // FPostProcessSettings
		constexpr auto RoundOverPPSettings = 0xc90; // FPostProcessSettings
		constexpr auto MatchOverPPSettings = 0xdf4; // FPostProcessSettings
		constexpr auto bEnableMotionBlur = 0xf58; // uint32_t : 1
		constexpr auto FullMotionBlur = 0xf58; // uint32_t : 1
		constexpr auto MatrialOverlap = 0xf58; // uint32_t : 1
		constexpr auto RunMaxVelocity = 0xf5c; // float
		constexpr auto RunMotionBlurAmount = 0xf60; // float
		constexpr auto RunMotionBlurSoftEdge = 0xf64; // float
		constexpr auto RunCamRotationThreshold = 0xf68; // float
		constexpr auto RunCamTranslationThreshold = 0xf6c; // float
		constexpr auto RunInterpolationDuration = 0xf70; // float
		constexpr auto ExposedBlendInTime = 0xf74; // float
		constexpr auto ExposedDuration = 0xf78; // float
		constexpr auto ExposedBlendOutTime = 0xf7c; // float
		constexpr auto ExposedInterpolationDuration = 0xf80; // float
		constexpr auto ExposedDesaturation = 0xf84; // float
		constexpr auto ExposedHighLights = 0xf88; // FVector
		constexpr auto ExposedMidTones = 0xf94; // FVector
		constexpr auto ExposedShadows = 0xfa0; // FVector
		constexpr auto FlashbangBlendInTime = 0xfac; // float
		constexpr auto FlashbangDuration = 0xfb0; // float
		constexpr auto FlashbangBlendOutTime = 0xfb4; // float
		constexpr auto FlashbangInterpolationDuration = 0xfb8; // float
		constexpr auto FlashbangDesaturation = 0xfbc; // float
		constexpr auto FlashbangHighLights = 0xfc0; // FVector
		constexpr auto FlashbangMidTones = 0xfcc; // FVector
		constexpr auto FlashbangShadows = 0xfd8; // FVector
		constexpr auto BlendTotalTime = 0xfe4; // float
		constexpr auto CurrentBlendTime = 0xfe8; // float
		constexpr auto MatFlashbang = 0xfec; // ObjectProperty
		constexpr auto texCaptureFlashbang = 0xff4; // ObjectProperty
		constexpr auto WarmupBlendInTime = 0xffc; // float
		constexpr auto WarmupDuration = 0x1000; // float
		constexpr auto WarmupBlendOutTime = 0x1004; // float
		constexpr auto WarmupInterpolationDuration = 0x1008; // float
		constexpr auto WarmupDesaturation = 0x100c; // float
		constexpr auto WarmupHighLights = 0x1010; // FVector
		constexpr auto WarmupMidTones = 0x101c; // FVector
		constexpr auto WarmupShadows = 0x1028; // FVector
		constexpr auto CountdownBlendInTime = 0x1034; // float
		constexpr auto CountdownDuration = 0x1038; // float
		constexpr auto CountdownBlendOutTime = 0x103c; // float
		constexpr auto CountdownInterpolationDuration = 0x1040; // float
		constexpr auto CountdownDesaturation = 0x1044; // float
		constexpr auto CountdownHighLights = 0x1048; // FVector
		constexpr auto CountdownMidTones = 0x1054; // FVector
		constexpr auto CountdownShadows = 0x1060; // FVector
		constexpr auto RoundBlendInTime = 0x106c; // float
		constexpr auto RoundDuration = 0x1070; // float
		constexpr auto RoundBlendOutTime = 0x1074; // float
		constexpr auto RoundInterpolationDuration = 0x1078; // float
		constexpr auto RoundDesaturation = 0x107c; // float
		constexpr auto RoundHighLights = 0x1080; // FVector
		constexpr auto RoundMidTones = 0x108c; // FVector
		constexpr auto RoundShadows = 0x1098; // FVector
		constexpr auto RoundOverBlendInTime = 0x10a4; // float
		constexpr auto RoundOverDuration = 0x10a8; // float
		constexpr auto RoundOverBlendOutTime = 0x10ac; // float
		constexpr auto RoundOverInterpolationDuration = 0x10b0; // float
		constexpr auto RoundOverDesaturation = 0x10b4; // float
		constexpr auto RoundOverHighLights = 0x10b8; // FVector
		constexpr auto RoundOverMidTones = 0x10c4; // FVector
		constexpr auto RoundOverShadows = 0x10d0; // FVector
		constexpr auto MatchOverBlendInTime = 0x10dc; // float
		constexpr auto MatchOverDuration = 0x10e0; // float
		constexpr auto MatchOverBlendOutTime = 0x10e4; // float
		constexpr auto MatchOverInterpolationDuration = 0x10e8; // float
		constexpr auto MatchOverDesaturation = 0x10ec; // float
		constexpr auto MatchOverHighLights = 0x10f0; // FVector
		constexpr auto MatchOverMidTones = 0x10fc; // FVector
		constexpr auto MatchOverShadows = 0x1108; // FVector
		constexpr auto FPMaxVelocity = 0x1114; // float
		constexpr auto FPMotionBlurAmount = 0x1118; // float
		constexpr auto FPMotionBlurSoftEdge = 0x111c; // float
		constexpr auto FPCamRotationThreshold = 0x1120; // float
		constexpr auto FPCamTranslationThreshold = 0x1124; // float
		constexpr auto FPInterpolationDuration = 0x1128; // float
		constexpr auto AdvancedColorSense = 0x112c; // TArray<FAdvancedColorSenseStruct>
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0xb0; // ObjectProperty
		constexpr auto DefaultTexture_Black = 0xb8; // ObjectProperty
		constexpr auto DefaultTexture_White = 0xc0; // ObjectProperty
		constexpr auto ConsoleKey = 0xc8; // FName
		constexpr auto TypeKey = 0xd0; // FName
		constexpr auto MaxScrollbackSize = 0xd8; // int32_t
		constexpr auto Scrollback = 0xdc; // TArray<FString>
		constexpr auto SBHead = 0xec; // int32_t
		constexpr auto SBPos = 0xf0; // int32_t
		constexpr auto HistoryTop = 0xf4; // int32_t
		constexpr auto HistoryBot = 0xf8; // int32_t
		constexpr auto HistoryCur = 0xfc; // int32_t
		constexpr auto History = 0x100; // FString [0x10]
		constexpr auto bNavigatingHistory = 0x200; // uint32_t : 1
		constexpr auto bCaptureKeyInput = 0x200; // uint32_t : 1
		constexpr auto bCtrl = 0x200; // uint32_t : 1
		constexpr auto bEnableUI = 0x200; // uint32_t : 1
		constexpr auto bAutoCompleteLocked = 0x200; // uint32_t : 1
		constexpr auto bRequireCtrlToNavigateAutoComplete = 0x200; // uint32_t : 1
		constexpr auto bIsRuntimeAutoCompleteUpToDate = 0x200; // uint32_t : 1
		constexpr auto TypedStr = 0x204; // FString
		constexpr auto TypedStrPos = 0x214; // int32_t
		constexpr auto ManualAutoCompleteList = 0x218; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteList = 0x228; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteIndex = 0x238; // int32_t
		constexpr auto AutoCompleteTree = 0x23c; // FAutoCompleteNode
		constexpr auto AutoCompleteIndices = 0x260; // TArray<int32_t>
	}

	namespace n_UGameplayEvents {
		constexpr auto Archive = 0x60; // FPointer
		constexpr auto StatsFileName = 0x68; // FString
		constexpr auto Header = 0x78; // FGameplayEventsHeader
		constexpr auto CurrentSessionInfo = 0xa8; // FGameSessionInformation
		constexpr auto PlayerList = 0x130; // TArray<FPlayerInformation>
		constexpr auto TeamList = 0x140; // TArray<FTeamInformation>
		constexpr auto SupportedEvents = 0x150; // TArray<FGameplayEventMetaData>
		constexpr auto WeaponClassArray = 0x160; // TArray<FWeaponClassEventData>
		constexpr auto DamageClassArray = 0x170; // TArray<FDamageClassEventData>
		constexpr auto ProjectileClassArray = 0x180; // TArray<FProjectileClassEventData>
		constexpr auto PawnClassArray = 0x190; // TArray<FPawnClassEventData>
		constexpr auto ActorArray = 0x1a0; // TArray<FString>
		constexpr auto SoundCueArray = 0x1b0; // TArray<FString>
	}

	namespace n_UCombatGameEventBase {
		constexpr auto __OnGetReward__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UCombatAIAction_Roamming {
		constexpr auto ActionNode = 0x78; // ObjectProperty
		constexpr auto Goal = 0x80; // ObjectProperty
		constexpr auto NextActor = 0x88; // ObjectProperty
	}

	namespace n_AGamePlayEvent_Kill {
		constexpr auto KillPacketCount = 0x244; // int32_t
		constexpr auto SavedTakeDamageData = 0x248; // FTakeDamageData
		constexpr auto LastKillTimeResetTime = 0x2c0; // float
		constexpr auto LongShotCondition = 0x2c4; // int32_t
		constexpr auto AssistCondition = 0x2c8; // float
		constexpr auto DangerousKillCondition = 0x2cc; // float
		constexpr auto RescueConditionTime = 0x2d0; // float
		constexpr auto RescueCondition = 0x2d4; // float
		constexpr auto MultiKillConditon = 0x2d8; // int32_t
		constexpr auto ComeBackCondition = 0x2dc; // int32_t
		constexpr auto EnemyKillCondition = 0x2e0; // int32_t
		constexpr auto TeamRevengeCondition = 0x2e4; // float
		constexpr auto ConsecutiveAssistCondition = 0x2e8; // int32_t
		constexpr auto ConsecutiveKillCondition = 0x2ec; // int32_t
		constexpr auto TableDataList = 0x2f0; // TArray<FKillTableDataType>
		constexpr auto TableInfoList = 0x300; // TArray<FTableInfoContainer>
		constexpr auto RegisteredStates = 0x310; // TArray<FName>
		constexpr auto bSuicide = 0x320; // uint32_t : 1
		constexpr auto OtherPlayerRewardMask = 0x324; // TArray<int32_t>
		constexpr auto ProcessingStateIndex = 0x334; // char
		constexpr auto Achievement = 0x338; // TMap<None, None>
		constexpr auto CurrentMissionNameOfVictim = 0x380; // FString
		constexpr auto VictimPawn = 0x390; // ObjectProperty
		constexpr auto KillerPawn = 0x398; // ObjectProperty
		constexpr auto VictimCombatPawn = 0x3a0; // ObjectProperty
		constexpr auto KillerCombatPawn = 0x3a8; // ObjectProperty
		constexpr auto VictimController = 0x3b0; // ObjectProperty
		constexpr auto KillerController = 0x3b8; // ObjectProperty
		constexpr auto KillerPRI = 0x3c0; // ObjectProperty
		constexpr auto VictimPRI = 0x3c8; // ObjectProperty
		constexpr auto VictimCombatPRI = 0x3d0; // ObjectProperty
		constexpr auto KillerCombatPRI = 0x3d8; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_MatchroomPopup {
		constexpr auto bNeedInitChangeRoomLabel = 0xd0; // uint32_t : 1
		constexpr auto ChangeRoomLabelID = 0xd4; // int32_t
		constexpr auto OKBtnLabelID = 0xd8; // int32_t
		constexpr auto CancelBtnLabelID = 0xdc; // int32_t
		constexpr auto ChangeRoomLabel = 0xe0; // FString
		constexpr auto OKBtnLabel = 0xf0; // FString
		constexpr auto CancelBtnLabel = 0x100; // FString
	}

	namespace n_UCoverMeshComponent {
		constexpr auto Meshes = 0x2f4; // TArray<FCoverMeshes>
		constexpr auto LocationOffset = 0x304; // FVector
		constexpr auto AutoAdjustOn = 0x310; // ObjectProperty
		constexpr auto AutoAdjustOff = 0x318; // ObjectProperty
		constexpr auto Disabled = 0x320; // ObjectProperty
		constexpr auto bShowWhenNotSelected = 0x328; // uint32_t : 1
	}

	namespace n_UTextureMovie {
		constexpr auto SizeX = 0x11c; // int32_t
		constexpr auto SizeY = 0x120; // int32_t
		constexpr auto Format = 0x124; // EPixelFormat
		constexpr auto AddressX = 0x125; // TextureAddress
		constexpr auto AddressY = 0x126; // TextureAddress
		constexpr auto MovieStreamSource = 0x127; // EMovieStreamSource
		constexpr auto DecoderClass = 0x128; // UCodecMovie*
		constexpr auto Decoder = 0x130; // ObjectProperty
		constexpr auto Paused = 0x138; // uint32_t : 1
		constexpr auto Stopped = 0x138; // uint32_t : 1
		constexpr auto Looping = 0x138; // uint32_t : 1
		constexpr auto ResetOnLastFrame = 0x138; // uint32_t : 1
		constexpr auto AutoPlay = 0x138; // uint32_t : 1
		constexpr auto Data = 0x13c; // FUntypedBulkData_Mirror
		constexpr auto ReleaseCodecFence = 0x17c; // FPointer
	}

	namespace n_UCombatDataTableRefEvolveEquip {
		constexpr auto GroupCodeName = 0x6c; // FString
		constexpr auto PrimaryWeapon = 0x7c; // FString
		constexpr auto SubWeapon = 0x8c; // FString
		constexpr auto MeleeWeapon = 0x9c; // FString
		constexpr auto ETCWeapon = 0xac; // FString
		constexpr auto ChipA = 0xbc; // FString
	}

	namespace n_AHUD {
		constexpr auto WhiteColor = 0x244; // FColor
		constexpr auto GreenColor = 0x248; // FColor
		constexpr auto RedColor = 0x24c; // FColor
		constexpr auto PlayerOwner = 0x250; // ObjectProperty
		constexpr auto bLostFocusPaused = 0x258; // uint32_t : 1
		constexpr auto bShowHUD = 0x258; // uint32_t : 1
		constexpr auto bShowScores = 0x258; // uint32_t : 1
		constexpr auto bShowDebugInfo = 0x258; // uint32_t : 1
		constexpr auto bShowBadConnectionAlert = 0x258; // uint32_t : 1
		constexpr auto bShowDirectorInfoDebug = 0x258; // uint32_t : 1
		constexpr auto bShowDirectorInfoHUD = 0x258; // uint32_t : 1
		constexpr auto bMessageBeep = 0x258; // uint32_t : 1
		constexpr auto bShowOverlays = 0x258; // uint32_t : 1
		constexpr auto HudCanvasScale = 0x25c; // float
		constexpr auto PostRenderedActors = 0x260; // TArray<ObjectProperty>
		constexpr auto ConsoleMessages = 0x270; // TArray<FConsoleMessage>
		constexpr auto ConsoleColor = 0x280; // FColor
		constexpr auto ConsoleMessageCount = 0x284; // int32_t
		constexpr auto ConsoleFontSize = 0x288; // int32_t
		constexpr auto MessageFontOffset = 0x28c; // int32_t
		constexpr auto MaxHUDAreaMessageCount = 0x290; // int32_t
		constexpr auto LocalMessages = 0x294; // FHudLocalizedMessage [0x8]
		constexpr auto ConsoleMessagePosX = 0x514; // float
		constexpr auto ConsoleMessagePosY = 0x518; // float
		constexpr auto Canvas = 0x51c; // ObjectProperty
		constexpr auto LastHUDRenderTime = 0x524; // float
		constexpr auto RenderDelta = 0x528; // float
		constexpr auto SizeX = 0x52c; // float
		constexpr auto SizeY = 0x530; // float
		constexpr auto CenterX = 0x534; // float
		constexpr auto CenterY = 0x538; // float
		constexpr auto RatioX = 0x53c; // float
		constexpr auto RatioY = 0x540; // float
		constexpr auto DebugDisplay = 0x544; // TArray<FName>
		constexpr auto KismetTextInfo = 0x554; // TArray<FKismetDrawTextInfo>
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x68; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x78; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x78; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x7c; // FName
		constexpr auto ValidAssociatedBones = 0x84; // TArray<FName>
		constexpr auto NormalToCompare = 0x94; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0xa0; // float
		constexpr auto NormalCheckTolerance = 0xa4; // float
		constexpr auto ValidMaterialIndices = 0xa8; // TArray<int32_t>
	}

	namespace n_USeqAct_CombatGameOver {
		constexpr auto Winner = 0x108; // Team
		constexpr auto Reason = 0x109; // ERoundResultReason
	}

	namespace n_USeqAct_PlayAgentAnimation {
		constexpr auto AnimationList = 0x120; // TArray<FName>
		constexpr auto BlendInTime = 0x130; // float
		constexpr auto BlendOutTime = 0x134; // float
		constexpr auto bUseRootMotion = 0x138; // uint32_t : 1
		constexpr auto bFaceActionTargetFirst = 0x138; // uint32_t : 1
		constexpr auto bLooping = 0x138; // uint32_t : 1
		constexpr auto bBlendBetweenAnims = 0x138; // uint32_t : 1
		constexpr auto LoopIndex = 0x13c; // int32_t
		constexpr auto LoopTime = 0x140; // float
		constexpr auto ActionTarget = 0x144; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_MainLobby {
		constexpr auto SortButtonList = 0xd0; // FButtonInfo [0x7]
		constexpr auto RoomButtonList = 0x15c; // FButtonInfo [0x5]
		constexpr auto LobbyTran = 0x1c0; // ObjectProperty
		constexpr auto MatchMemberClass = 0x1c8; // ObjectProperty
		constexpr auto SelectMatchRoomNumber = 0x1d0; // int32_t
		constexpr auto EnterMatchRoomNumber = 0x1d4; // int32_t
	}

	namespace n_AStaticMeshActorBasedOnExtremeContent {
		constexpr auto StaticMeshComponent = 0x244; // ComponentProperty
		constexpr auto ExtremeContent = 0x24c; // TArray<FSMMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x25c; // TArray<FSMMaterialSetterDatum>
	}

	namespace n_USoundMode {
		constexpr auto bApplyEQ = 0x60; // uint32_t : 1
		constexpr auto EQSettings = 0x64; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x88; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x98; // float
		constexpr auto FadeInTime = 0x9c; // float
		constexpr auto Duration = 0xa0; // float
		constexpr auto FadeOutTime = 0xa4; // float
	}

	namespace n_UCombatLogData {
		constexpr auto FireDataList = 0x60; // TArray<FWeaponFireData>
		constexpr auto DataOwner = 0x70; // ObjectProperty
		constexpr auto TransientFireCount = 0x78; // int32_t
	}

	namespace n_ACombatTutorialLevelObject {
		constexpr auto HideOnHUD = 0x254; // uint32_t : 1
		constexpr auto DisplaynameID = 0x258; // int32_t
		constexpr auto LevelObjectType = 0x25c; // Tutorial_LO_Type
	}

	namespace n_USeqAct_CombatPlayRandomBoxScene {
		constexpr auto RandomBoxGrade = 0x108; // int32_t
	}

	namespace n_ACameraActor {
		constexpr auto bConstrainAspectRatio = 0x244; // uint32_t : 1
		constexpr auto bCamOverridePostProcess = 0x244; // uint32_t : 1
		constexpr auto AspectRatio = 0x248; // float
		constexpr auto FOVAngle = 0x24c; // float
		constexpr auto CamOverridePostProcessAlpha = 0x250; // float
		constexpr auto CamOverridePostProcess = 0x254; // FPostProcessSettings
		constexpr auto DrawFrustum = 0x3b8; // ComponentProperty
		constexpr auto MeshComp = 0x3c0; // ComponentProperty
		constexpr auto AspectRatioAxisConstraint = 0x3c8; // EAspectRatioAxisConstraint
	}

	namespace n_USeqAct_CombatSetGravity {
		constexpr auto Gravity = 0x108; // float
	}

	namespace n_ACombatWeapon_Bomb {
		constexpr auto PlantAnimDuraion = 0x1ec8; // float
		constexpr auto BombLightColor = 0x1ecc; // FLinearColor
		constexpr auto IndicatorMIC = 0x1edc; // ObjectProperty
		constexpr auto ThirdIndicatorMIC = 0x1ee4; // ObjectProperty
		constexpr auto bNeedToSwitchWeapon = 0x1eec; // uint32_t : 1
		constexpr auto bIgnoreMove = 0x1eec; // uint32_t : 1
		constexpr auto Bomb = 0x1ef0; // ObjectProperty
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FLinearColor
	}

	namespace n_ALandscapeGizmoActiveActor {
		constexpr auto SelectedData = 0x244; // TMap<None, None>
	}

	namespace n_UNavMeshPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto MaxPathVisits = 0x68; // int32_t
		constexpr auto bAlwaysCallEvaluateGoal = 0x6c; // uint32_t : 1
		constexpr auto bDoPartialAStar = 0x6c; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x70; // int32_t
		constexpr auto NumNodesProcessed = 0x74; // int32_t
		constexpr auto MaxOpenListSize = 0x78; // int32_t
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialPositionTransform
	}

	namespace n_UNavMeshGoal_Filter {
		constexpr auto bShowDebug = 0x60; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x64; // int32_t
		constexpr auto NumNodesProcessed = 0x68; // int32_t
	}

	namespace n_USeqAct_ForceFeedback {
		constexpr auto FFWaveform = 0x108; // ObjectProperty
		constexpr auto PredefinedWaveForm = 0x110; // UWaveFormBase*
	}

	namespace n_UCCSAFGetOutCover {
		constexpr auto CoverLink = 0x64; // ObjectProperty
		constexpr auto Target = 0x6c; // ObjectProperty
	}

	namespace n_UCombatHUD_GameObject {
		constexpr auto UI_GO_LOCATOR_LOCATION_Z = 0xbc; // float
		constexpr auto PC = 0xc0; // ObjectProperty
		constexpr auto GRI = 0xc8; // ObjectProperty
		constexpr auto LastGameObjectIconLabel = 0xd0; // FString
		constexpr auto LastGameObjectName = 0xe0; // FString
		constexpr auto LastLocatorUILocation = 0xf0; // FVector
		constexpr auto LastGameObjectDistance = 0xfc; // int32_t
		constexpr auto LastLevelObjectTeam = 0x100; // int32_t
		constexpr auto ScreenColBox = 0x104; // ObjectProperty
		constexpr auto RootMCWidth = 0x10c; // float
		constexpr auto RootMCHeight = 0x110; // float
		constexpr auto RootMC = 0x114; // ObjectProperty
		constexpr auto DistanceTF = 0x11c; // ObjectProperty
		constexpr auto NameTF = 0x124; // ObjectProperty
		constexpr auto DirectionMC = 0x12c; // ObjectProperty
		constexpr auto LastDirection = 0x134; // int32_t
		constexpr auto bIsInFront = 0x138; // uint32_t : 1
		constexpr auto bClampedLocation = 0x138; // uint32_t : 1
		constexpr auto bDirectionArrowDisplayed = 0x138; // uint32_t : 1
		constexpr auto AttackMC = 0x13c; // ObjectProperty
		constexpr auto LocatorCoord = 0x144; // FVector
		constexpr auto LocatorScale = 0x150; // int32_t
		constexpr auto LastLocatorScale = 0x154; // int32_t
		constexpr auto SubjectWorldDrawLocation = 0x158; // FVector
		constexpr auto MinLocatorScale = 0x164; // float
		constexpr auto MaxLocatorScale = 0x168; // float
		constexpr auto DistanceForMinScale = 0x16c; // float
		constexpr auto LocatorAreaRatio = 0x170; // FVector
		constexpr auto LastLocatorAlpha = 0x17c; // int32_t
		constexpr auto AlphaValue_CrosshairNearArea = 0x180; // float
		constexpr auto AlphaValue_CrosshairFarArea = 0x184; // float
		constexpr auto RadiusRatio_CrosshairNearArea = 0x188; // float
		constexpr auto RadiusRatio_CrosshairFarArea = 0x18c; // float
		constexpr auto RootMCInstanceName = 0x190; // FString
		constexpr auto SizeMCInstanceName = 0x1a0; // FString
	}

	namespace n_ACombatAssasinGame {
		constexpr auto bVIPMove = 0x788; // uint32_t : 1
		constexpr auto bVIPalive = 0x788; // uint32_t : 1
		constexpr auto GameStatus = 0x78c; // EGamePhase
		constexpr auto EVACRemainTime = 0x78e; // WordProperty
	}

	namespace n_UCCSBTCombatThrowGrenade {
		constexpr auto CAIP = 0xcc; // ObjectProperty
		constexpr auto CCSController = 0xd4; // ObjectProperty
		constexpr auto FireRor = 0xdc; // FRotator
		constexpr auto Target = 0xe8; // ObjectProperty
	}

	namespace n_ACombatTutorialGamePRI {
		constexpr auto bHasBomb = 0x534; // uint32_t : 1
	}

	namespace n_ABroadcastHandler {
		constexpr auto SentText = 0x244; // int32_t
		constexpr auto bMuteSpectators = 0x248; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefSkillLicense {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto GRADE = 0x70; // int32_t
		constexpr auto LicenseCodeName = 0x74; // FString
		constexpr auto ItemCodeName = 0x84; // FString
	}

	namespace n_USeqAct_LevelStreaming {
		constexpr auto Level = 0x124; // ObjectProperty
		constexpr auto LevelName = 0x12c; // FName
		constexpr auto bStatusIsOk = 0x134; // uint32_t : 1
	}

	namespace n_USeqAct_CCSTriggerEvent {
		constexpr auto EventType = 0x108; // FString
	}

	namespace n_UDominantSpotLightComponent {
		constexpr auto DominantLightShadowInfo = 0x270; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x320; // FArray_Mirror
	}

	namespace n_UEdCoordSystem {
		constexpr auto M = 0x60; // FMatrix
		constexpr auto Desc = 0xa0; // FString
	}

	namespace n_ACombatAmmoPickupFactory {
		constexpr auto MainAmmoRate = 0x44c; // int32_t
		constexpr auto SubAmmoRate = 0x450; // int32_t
		constexpr auto GrenadeRate_A = 0x454; // int32_t
		constexpr auto GrenadeRate_B = 0x458; // int32_t
		constexpr auto GrenadeRate_C = 0x45c; // int32_t
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x60; // FString
		constexpr auto ResponseCode = 0x70; // int32_t
		constexpr auto Tag = 0x74; // int32_t
		constexpr auto Headers = 0x78; // FMap_Mirror
		constexpr auto StringResponse = 0xc0; // FString
		constexpr auto BinaryResponse = 0xd0; // TArray<char>
	}

	namespace n_ACombatWeaponBase_MiniGunBase {
		constexpr auto BarrelSpinningStartCue = 0x1ec8; // ObjectProperty
		constexpr auto BarrelSpinningLoopCue = 0x1ed0; // ObjectProperty
		constexpr auto BarrelSpinningStopCue = 0x1ed8; // ObjectProperty
		constexpr auto SpinUpTime = 0x1ee0; // float
		constexpr auto SpinDownTime = 0x1ee4; // float
		constexpr auto SpinDownTime_ActiveCooling = 0x1ee8; // float
		constexpr auto CurrentBarrelRotAccel = 0x1eec; // float
		constexpr auto CurrentBarrelRotRate = 0x1ef0; // float
		constexpr auto BarrelRotRateFiringThreshold = 0x1ef4; // float
		constexpr auto MaxBarrelRotRate = 0x1ef8; // float
		constexpr auto BarrelSkelCtrl = 0x1efc; // ObjectProperty
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x74; // float
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x60; // FName
		constexpr auto SubUVDataOffset = 0x68; // int32_t
		constexpr auto EmitterRenderMode = 0x6c; // EEmitterRenderMode
		constexpr auto LODLevels = 0x70; // TArray<ObjectProperty>
		constexpr auto ConvertedModules = 0x80; // uint32_t : 1
		constexpr auto bCollapsed = 0x80; // uint32_t : 1
		constexpr auto bIsSoloing = 0x80; // uint32_t : 1
		constexpr auto bCookedOut = 0x80; // uint32_t : 1
		constexpr auto PeakActiveParticles = 0x84; // int32_t
		constexpr auto InitialAllocationCount = 0x88; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x8c; // TArray<float>
	}

	namespace n_UGameThirdPersonCamera {
		constexpr auto WorstLocBlockedPct = 0x6c; // float
		constexpr auto WorstLocPenetrationExtentScale = 0x70; // float
		constexpr auto PenetrationBlendOutTime = 0x74; // float
		constexpr auto PenetrationBlendInTime = 0x78; // float
		constexpr auto PenetrationBlockedPct = 0x7c; // float
		constexpr auto PenetrationExtentScale = 0x80; // float
		constexpr auto LastActualOriginOffset = 0x84; // FVector
		constexpr auto LastActualCameraOrigin = 0x90; // FVector
		constexpr auto LastActualCameraOriginRot = 0x9c; // FRotator
		constexpr auto OriginOffsetInterpSpeed = 0xa8; // float
		constexpr auto LastViewOffset = 0xac; // FVector
		constexpr auto LastCamFOV = 0xb8; // float
		constexpr auto LastIdealCameraOrigin = 0xbc; // FVector
		constexpr auto LastIdealCameraOriginRot = 0xc8; // FRotator
		constexpr auto ThirdPersonCamDefault = 0xd4; // ObjectProperty
		constexpr auto ThirdPersonCamDefaultClass = 0xdc; // UGameThirdPersonCameraMode*
		constexpr auto CurrentCamMode = 0xe4; // ObjectProperty
		constexpr auto LastHeightAdjustment = 0xec; // float
		constexpr auto LastPitchAdjustment = 0xf0; // float
		constexpr auto LastYawAdjustment = 0xf4; // float
		constexpr auto LeftoverPitchAdjustment = 0xf8; // float
		constexpr auto Focus_BackOffStrength = 0xfc; // float
		constexpr auto Focus_StepHeightAdjustment = 0x100; // float
		constexpr auto Focus_MaxTries = 0x104; // int32_t
		constexpr auto Focus_FastAdjustKickInTime = 0x108; // float
		constexpr auto LastFocusChangeTime = 0x10c; // float
		constexpr auto ActualFocusPointWorldLoc = 0x110; // FVector
		constexpr auto LastFocusPointLoc = 0x11c; // FVector
		constexpr auto FocusPoint = 0x128; // FCamFocusPointParams
		constexpr auto bFocusPointSet = 0x160; // uint32_t : 1
		constexpr auto bFocusPointSuccessful = 0x160; // uint32_t : 1
		constexpr auto bDoingACameraTurn = 0x160; // uint32_t : 1
		constexpr auto bTurnAlignTargetWhenFinished = 0x160; // uint32_t : 1
		constexpr auto bDrawDebug = 0x160; // uint32_t : 1
		constexpr auto bDoingDirectLook = 0x160; // uint32_t : 1
		constexpr auto bDebugChangedCameraMode = 0x160; // uint32_t : 1
		constexpr auto bDoSeamlessPivotTransition = 0x160; // uint32_t : 1
		constexpr auto TurnCurTime = 0x164; // float
		constexpr auto TurnStartAngle = 0x168; // int32_t
		constexpr auto TurnEndAngle = 0x16c; // int32_t
		constexpr auto TurnTotalTime = 0x170; // float
		constexpr auto TurnDelay = 0x174; // float
		constexpr auto LastPostCamTurnYaw = 0x178; // int32_t
		constexpr auto DirectLookYaw = 0x17c; // int32_t
		constexpr auto DirectLookInterpSpeed = 0x180; // float
		constexpr auto WorstLocInterpSpeed = 0x184; // float
		constexpr auto LastWorstLocationLocal = 0x188; // FVector
		constexpr auto LastWorstLocation = 0x194; // FVector
		constexpr auto LastPreModifierCameraLoc = 0x1a0; // FVector
		constexpr auto LastPreModifierCameraRot = 0x1ac; // FRotator
		constexpr auto PenetrationAvoidanceFeelers = 0x1b8; // TArray<FPenetrationAvoidanceFeeler>
		constexpr auto LastOffsetAdjustment = 0x1c8; // FVector
	}

	namespace n_UOnlineRecentPlayersList {
		constexpr auto RecentPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto RecentParties = 0x70; // TArray<FRecentParty>
		constexpr auto LastParty = 0x80; // FRecentParty
		constexpr auto MaxRecentPlayers = 0x98; // int32_t
		constexpr auto MaxRecentParties = 0x9c; // int32_t
		constexpr auto RecentPlayersAddIndex = 0xa0; // int32_t
		constexpr auto RecentPartiesAddIndex = 0xa4; // int32_t
		constexpr auto CurrentPlayers = 0xa8; // TArray<FCurrentPlayerMet>
	}

	namespace n_UCombatCCSActorFactory {
		constexpr auto AISpreadMin = 0x108; // int32_t
		constexpr auto AISpreadRandom = 0x10c; // int32_t
		constexpr auto Health = 0x110; // int32_t
		constexpr auto AIGroundSpeed = 0x114; // float
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
		constexpr auto MaxEffectorDiff = 0x80; // float
		constexpr auto MinEffectorDiff = 0x84; // float
		constexpr auto EffectorDiffSocket = 0x88; // float
		constexpr auto ParentKeyScale = 0x8c; // float
		constexpr auto bRetarget = 0x90; // uint32_t : 1
		constexpr auto bActuallyFilterLinearKeys = 0x90; // uint32_t : 1
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x2f4; // FSplineMeshParams
		constexpr auto SplineXDir = 0x34c; // FVector
		constexpr auto bSmoothInterpRollScale = 0x358; // uint32_t : 1
	}

	namespace n_USeqAct_CombatTutorial_PointAI {
		constexpr auto AIPawn = 0x108; // ObjectProperty
	}

	namespace n_UCBUIDataStore_HUD {
		constexpr auto myCachedWeaponInfo_BaseInfo = 0x98; // FCachedWeaponInfo_BaseInfo
		constexpr auto myCachedWeaponInfo_AmmoCntInfo = 0xb8; // FCachedWeaponInfo_AmmoCntInfo
		constexpr auto myCachedWeaponInfo_GrenadeInfo = 0xd4; // FCachedWeaponInfo_GrenadeInfo
		constexpr auto CachedPlayerInfoList = 0xe8; // TArray<FCachedPlayerInfo>
		constexpr auto MyInfo = 0xf8; // FCachedPlayerInfo
		constexpr auto bNeedUpdateMyInfo = 0x1d4; // uint32_t : 1
		constexpr auto bNeedUpdateScoreboard_VC = 0x1d4; // uint32_t : 1
		constexpr auto bNeedUpdateScoreboard_PM = 0x1d4; // uint32_t : 1
		constexpr auto bNeedUpdataScoreboard_FPS = 0x1d4; // uint32_t : 1
		constexpr auto bShowLog = 0x1d4; // uint32_t : 1
		constexpr auto LastFPS = 0x1d8; // int32_t
		constexpr auto LastAIPlayTime = 0x1dc; // int32_t
		constexpr auto KillerInfoForUI = 0x1e0; // FKillerInfoStruct
		constexpr auto CachedChampionshipPlayerInfoList = 0x218; // TArray<FCachedChampionshipPlayerInfoStruct>
		constexpr auto ObserverKeyState = 0x228; // FChampionshipObserverKeyState
		constexpr auto SuicideStateForUI = 0x22c; // FSuicideStateStruct
		constexpr auto RoundWinType = 0x230; // EWinType
	}

	namespace n_ACBWeaponAttachment_DualWeaponBase {
		constexpr auto DualMesh = 0x424; // ComponentProperty
		constexpr auto MuzzleFlashPSCForDual = 0x42c; // ComponentProperty
		constexpr auto TracerPSCTemplateForDual = 0x434; // ObjectProperty
		constexpr auto MuzzleFlashLightForDual = 0x43c; // ComponentProperty
		constexpr auto PSC_ShellEjectForDual = 0x444; // ComponentProperty
		constexpr auto bRightFired = 0x44c; // uint32_t : 1
		constexpr auto RightElbowPos = 0x450; // FVector
		constexpr auto LeftElbowPos = 0x45c; // FVector
		constexpr auto AttachmentSocket_Left = 0x468; // FName
	}

	namespace n_UCombatAIActionNode_SelectTarget {
		constexpr auto VisibleWeight = 0xf4; // float
		constexpr auto DistanceWeight = 0xf8; // float
		constexpr auto OrientWeight = 0xfc; // float
		constexpr auto RecentlyDamagedWeight = 0x100; // float
		constexpr auto ClassAgroScores = 0x104; // TArray<FSClassAgroScore>
	}

	namespace n_USkelControlSpline {
		constexpr auto SplineLength = 0xd0; // int32_t
		constexpr auto SplineBoneAxis = 0xd4; // EAxis
		constexpr auto BoneRotMode = 0xd5; // ESplineControlRotMode
		constexpr auto bInvertSplineBoneAxis = 0xd8; // uint32_t : 1
		constexpr auto EndSplineTension = 0xdc; // float
		constexpr auto StartSplineTension = 0xe0; // float
	}

	namespace n_UImageReflectionComponent {
		constexpr auto ReflectionTexture = 0x88; // ObjectProperty
	}

	namespace n_UGripBTLoop {
		constexpr auto TimesToLoop = 0xbc; // int32_t
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UGripActionNode_Sleep {
		constexpr auto Duration = 0xf4; // float
		constexpr auto StartTimeSeconds = 0xf8; // float
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_UPBRuleNodeTransform {
		constexpr auto Translation = 0x70; // ComponentProperty
		constexpr auto Rotation = 0x78; // ComponentProperty
		constexpr auto Scale = 0x80; // ComponentProperty
	}

	namespace n_UGripBTComment {
		constexpr auto bMoveNodesInBox = 0xbc; // uint32_t : 1
		constexpr auto bWrapped = 0xbc; // uint32_t : 1
		constexpr auto bLimitFontSize = 0xbc; // uint32_t : 1
		constexpr auto bDrawBox = 0xbc; // uint32_t : 1
		constexpr auto bFilled = 0xbc; // uint32_t : 1
		constexpr auto SizeX = 0xc0; // int32_t
		constexpr auto SizeY = 0xc4; // int32_t
		constexpr auto BorderWidth = 0xc8; // int32_t
		constexpr auto BorderColor = 0xcc; // FColor
		constexpr auto FillColor = 0xd0; // FColor
	}

	namespace n_UCombatDataTableRefBoosterItem {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto CHANNEL_CODENAME = 0x80; // FString
		constexpr auto ITEM_CODENAME = 0x90; // FString
		constexpr auto TOOLTIP_ID = 0xa0; // int32_t
		constexpr auto BUFF_EXP = 0xa4; // int32_t
		constexpr auto BUFF_GOLD = 0xa8; // int32_t
		constexpr auto BUFF_ATTEND_REWARD = 0xac; // int32_t
		constexpr auto DAY_INFO = 0xb0; // int32_t
		constexpr auto BOOSTER_START = 0xb4; // FTimeData
		constexpr auto BOOSTER_END = 0xbc; // FTimeData
		constexpr auto BOOSTER_TYPE = 0xc4; // char
		constexpr auto Level = 0xc5; // char
		constexpr auto UI_VISIBLE = 0xc6; // char
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto FloatProp = 0x70; // FPointer
		constexpr auto ResetFloat = 0x78; // float
		constexpr auto DistributionProp = 0x7c; // FPointer
	}

	namespace n_ATeleporter {
		constexpr auto URL = 0x33c; // FString
		constexpr auto ProductRequired = 0x34c; // FName
		constexpr auto bChangesVelocity = 0x354; // uint32_t : 1
		constexpr auto bChangesYaw = 0x354; // uint32_t : 1
		constexpr auto bReversesX = 0x354; // uint32_t : 1
		constexpr auto bReversesY = 0x354; // uint32_t : 1
		constexpr auto bReversesZ = 0x354; // uint32_t : 1
		constexpr auto bEnabled = 0x354; // uint32_t : 1
		constexpr auto bCanTeleportVehicles = 0x354; // uint32_t : 1
		constexpr auto TargetVelocity = 0x358; // FVector
		constexpr auto LastFired = 0x364; // float
	}

	namespace n_UStaticMeshComponentFactory {
		constexpr auto StaticMesh = 0x74; // ObjectProperty
	}

	namespace n_UCombatTDMMovie {
		constexpr auto PickupItemContainer = 0xad0; // ObjectProperty
		constexpr auto PickupLocatorNum = 0xad8; // int32_t
	}

	namespace n_AGameCrowdDestinationQueuePoint {
		constexpr auto NextQueuePosition = 0x250; // ObjectProperty
		constexpr auto PreviousQueuePosition = 0x258; // ObjectProperty
		constexpr auto QueuedAgent = 0x260; // ObjectProperty
		constexpr auto QueueDestination = 0x268; // ObjectProperty
		constexpr auto bClearingQueue = 0x270; // uint32_t : 1
		constexpr auto bPendingAdvance = 0x270; // uint32_t : 1
		constexpr auto AverageReactionTime = 0x274; // float
		constexpr auto QueueBehaviorClass = 0x278; // UGameCrowdBehavior_WaitInQueue*
	}

	namespace n_ACombatPawn_SentryGun {
		constexpr auto Reloading = 0x1274; // uint32_t : 1
		constexpr auto ReloadAnim = 0x1278; // FName
		constexpr auto BaseControl = 0x1280; // ObjectProperty
	}

	namespace n_AGameCrowdAgentSM {
		constexpr auto Mesh = 0x4c4; // ComponentProperty
		constexpr auto MeshColor = 0x4cc; // ObjectProperty
	}

	namespace n_ASVehicle {
		constexpr auto SimObj = 0x5d8; // ComponentProperty
		constexpr auto Wheels = 0x5e0; // TArray<ComponentProperty>
		constexpr auto COMOffset = 0x5f0; // FVector
		constexpr auto InertiaTensorMultiplier = 0x5fc; // FVector
		constexpr auto bStayUpright = 0x608; // uint32_t : 1
		constexpr auto bUseSuspensionAxis = 0x608; // uint32_t : 1
		constexpr auto bUpdateWheelShapes = 0x608; // uint32_t : 1
		constexpr auto bVehicleOnGround = 0x608; // uint32_t : 1
		constexpr auto bVehicleOnWater = 0x608; // uint32_t : 1
		constexpr auto bIsInverted = 0x608; // uint32_t : 1
		constexpr auto bChassisTouchingGround = 0x608; // uint32_t : 1
		constexpr auto bWasChassisTouchingGroundLastTick = 0x608; // uint32_t : 1
		constexpr auto bCanFlip = 0x608; // uint32_t : 1
		constexpr auto bFlipRight = 0x608; // uint32_t : 1
		constexpr auto bIsUprighting = 0x608; // uint32_t : 1
		constexpr auto bOutputHandbrake = 0x608; // uint32_t : 1
		constexpr auto bHoldingDownHandbrake = 0x608; // uint32_t : 1
		constexpr auto StayUprightRollResistAngle = 0x60c; // float
		constexpr auto StayUprightPitchResistAngle = 0x610; // float
		constexpr auto StayUprightStiffness = 0x614; // float
		constexpr auto StayUprightDamping = 0x618; // float
		constexpr auto StayUprightConstraintSetup = 0x61c; // ObjectProperty
		constexpr auto StayUprightConstraintInstance = 0x624; // ObjectProperty
		constexpr auto HeavySuspensionShiftPercent = 0x62c; // float
		constexpr auto MaxSpeed = 0x630; // float
		constexpr auto MaxAngularVelocity = 0x634; // float
		constexpr auto TimeOffGround = 0x638; // float
		constexpr auto UprightLiftStrength = 0x63c; // float
		constexpr auto UprightTorqueStrength = 0x640; // float
		constexpr auto UprightTime = 0x644; // float
		constexpr auto UprightStartTime = 0x648; // float
		constexpr auto EngineSound = 0x64c; // ComponentProperty
		constexpr auto SquealSound = 0x654; // ComponentProperty
		constexpr auto CollisionSound = 0x65c; // ObjectProperty
		constexpr auto EnterVehicleSound = 0x664; // ObjectProperty
		constexpr auto ExitVehicleSound = 0x66c; // ObjectProperty
		constexpr auto CollisionIntervalSecs = 0x674; // float
		constexpr auto SquealThreshold = 0x678; // float
		constexpr auto SquealLatThreshold = 0x67c; // float
		constexpr auto LatAngleVolumeMult = 0x680; // float
		constexpr auto EngineStartOffsetSecs = 0x684; // float
		constexpr auto EngineStopOffsetSecs = 0x688; // float
		constexpr auto LastCollisionSoundTime = 0x68c; // float
		constexpr auto OutputBrake = 0x690; // float
		constexpr auto OutputGas = 0x694; // float
		constexpr auto OutputSteering = 0x698; // float
		constexpr auto OutputRise = 0x69c; // float
		constexpr auto ForwardVel = 0x6a0; // float
		constexpr auto NumPoweredWheels = 0x6a4; // int32_t
		constexpr auto BaseOffset = 0x6a8; // FVector
		constexpr auto CamDist = 0x6b4; // float
		constexpr auto DriverViewPitch = 0x6b8; // int32_t
		constexpr auto DriverViewYaw = 0x6bc; // int32_t
		constexpr auto VState = 0x6c0; // FVehicleState
		constexpr auto AngErrorAccumulator = 0x710; // float
		constexpr auto RadialImpulseScaling = 0x714; // float
	}

	namespace n_AGameReplicationInfo {
		constexpr auto GameClass = 0x244; // AGameInfo*
		constexpr auto bStopCountDown = 0x24c; // uint32_t : 1
		constexpr auto bMatchHasBegun = 0x24c; // uint32_t : 1
		constexpr auto bMatchIsOver = 0x24c; // uint32_t : 1
		constexpr auto bIsMatchInProgress = 0x24c; // uint32_t : 1
		constexpr auto RemainingTime = 0x250; // WordProperty
		constexpr auto ElapsedTime = 0x252; // WordProperty
		constexpr auto RemainingMinute = 0x254; // WordProperty
		constexpr auto GoalScore = 0x258; // int32_t
		constexpr auto TimeLimit = 0x25c; // int32_t
		constexpr auto Teams = 0x260; // TArray<ObjectProperty>
		constexpr auto ServerName = 0x270; // FString
		constexpr auto Winner = 0x280; // ObjectProperty
		constexpr auto PRIArray = 0x288; // TArray<ObjectProperty>
		constexpr auto InactivePRIArray = 0x298; // TArray<ObjectProperty>
	}

	namespace n_UCombatBusterMovie {
		constexpr auto BusterContainer = 0xad0; // ObjectProperty
		constexpr auto BusterMovie = 0xad8; // ObjectProperty
		constexpr auto bUpdate = 0xae0; // uint32_t : 1
	}

	namespace n_UMobileMenuLabel {
		constexpr auto Caption = 0xdc; // FString
		constexpr auto TextFont = 0xec; // ObjectProperty
		constexpr auto TextColor = 0xf4; // FColor
		constexpr auto TouchedColor = 0xf8; // FColor
		constexpr auto TextXScale = 0xfc; // float
		constexpr auto TextYScale = 0x100; // float
		constexpr auto bAutoSize = 0x104; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefAchievement {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Stat = 0x80; // FString
		constexpr auto Type = 0x90; // int32_t
		constexpr auto Activation = 0x94; // int32_t
		constexpr auto Level = 0x98; // int32_t
		constexpr auto RelativeGoal = 0x9c; // int32_t
		constexpr auto Goal = 0xa0; // int32_t
		constexpr auto Money = 0xa4; // int32_t
		constexpr auto ExpPoint = 0xa8; // int32_t
		constexpr auto AchievementPoint = 0xac; // int32_t
		constexpr auto Param = 0xb0; // int32_t [0x3]
		constexpr auto NameCode = 0xbc; // int32_t
		constexpr auto Step = 0xc0; // int32_t
		constexpr auto ImagePath = 0xc4; // FString
		constexpr auto StatNumber = 0xd4; // int32_t
	}

	namespace n_AKActor {
		constexpr auto bDamageAppliesImpulse = 0x294; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x294; // uint32_t : 1
		constexpr auto bCurrentSlide = 0x294; // uint32_t : 1
		constexpr auto bSlideActive = 0x294; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0x294; // uint32_t : 1
		constexpr auto bLimitMaxPhysicsVelocity = 0x294; // uint32_t : 1
		constexpr auto bNeedsRBStateReplication = 0x294; // uint32_t : 1
		constexpr auto bDisableClientSidePawnInteractions = 0x294; // uint32_t : 1
		constexpr auto ImpactEffectComponent = 0x298; // ComponentProperty
		constexpr auto ImpactSoundComponent = 0x2a0; // ComponentProperty
		constexpr auto ImpactSoundComponent2 = 0x2a8; // ComponentProperty
		constexpr auto LastImpactTime = 0x2b0; // float
		constexpr auto ImpactEffectInfo = 0x2b4; // FPhysEffectInfo
		constexpr auto SlideEffectComponent = 0x2cc; // ComponentProperty
		constexpr auto SlideSoundComponent = 0x2d4; // ComponentProperty
		constexpr auto LastSlideTime = 0x2dc; // float
		constexpr auto SlideEffectInfo = 0x2e0; // FPhysEffectInfo
		constexpr auto StayUprightTorqueFactor = 0x2f8; // float
		constexpr auto StayUprightMaxTorque = 0x2fc; // float
		constexpr auto MaxPhysicsVelocity = 0x300; // float
		constexpr auto RBState = 0x310; // FRigidBodyState
		constexpr auto AngErrorAccumulator = 0x350; // float
		constexpr auto ReplicatedDrawScale3D = 0x354; // FVector
		constexpr auto InitialLocation = 0x360; // FVector
		constexpr auto InitialRotation = 0x36c; // FRotator
	}

	namespace n_ULightComponent {
		constexpr auto SceneInfo = 0x88; // FPointer
		constexpr auto WorldToLight = 0x90; // FMatrix
		constexpr auto LightToWorld = 0xd0; // FMatrix
		constexpr auto LightGuid = 0x110; // FGuid
		constexpr auto LightmapGuid = 0x120; // FGuid
		constexpr auto Brightness = 0x130; // float
		constexpr auto LightColor = 0x134; // FColor
		constexpr auto Function = 0x138; // ObjectProperty
		constexpr auto bEnabled = 0x140; // uint32_t : 1
		constexpr auto CastShadows = 0x140; // uint32_t : 1
		constexpr auto CastStaticShadows = 0x140; // uint32_t : 1
		constexpr auto CastDynamicShadows = 0x140; // uint32_t : 1
		constexpr auto bCastCompositeShadow = 0x140; // uint32_t : 1
		constexpr auto bAffectCompositeShadowDirection = 0x140; // uint32_t : 1
		constexpr auto bNonModulatedSelfShadowing = 0x140; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x140; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0x140; // uint32_t : 1
		constexpr auto bForceDynamicLight = 0x140; // uint32_t : 1
		constexpr auto UseDirectLightMap = 0x140; // uint32_t : 1
		constexpr auto bHasLightEverBeenBuiltIntoLightMap = 0x140; // uint32_t : 1
		constexpr auto bCanAffectDynamicPrimitivesOutsideDynamicChannel = 0x140; // uint32_t : 1
		constexpr auto bRenderLightShafts = 0x140; // uint32_t : 1
		constexpr auto bUseImageReflectionSpecular = 0x140; // uint32_t : 1
		constexpr auto bPrecomputedLightingIsValid = 0x140; // uint32_t : 1
		constexpr auto bExplicitlyAssignedLight = 0x140; // uint32_t : 1
		constexpr auto bAllowCompositingIntoDLE = 0x140; // uint32_t : 1
		constexpr auto LightEnvironment = 0x144; // ComponentProperty
		constexpr auto LightingChannels = 0x14c; // FLightingChannelContainer
		constexpr auto LightAffectsClassification = 0x150; // ELightAffectsClassification
		constexpr auto LightShadowMode = 0x151; // ELightShadowMode
		constexpr auto ModShadowColor = 0x154; // FLinearColor
		constexpr auto ModShadowFadeoutTime = 0x164; // float
		constexpr auto ModShadowFadeoutExponent = 0x168; // float
		constexpr auto LightListIndex = 0x16c; // int32_t
		constexpr auto ShadowProjectionTechnique = 0x170; // EShadowProjectionTechnique
		constexpr auto ShadowFilterQuality = 0x171; // EShadowFilterQuality
		constexpr auto MinShadowResolution = 0x174; // int32_t
		constexpr auto MaxShadowResolution = 0x178; // int32_t
		constexpr auto ShadowFadeResolution = 0x17c; // int32_t
		constexpr auto OcclusionDepthRange = 0x180; // float
		constexpr auto BloomScale = 0x184; // float
		constexpr auto BloomThreshold = 0x188; // float
		constexpr auto BloomScreenBlendThreshold = 0x18c; // float
		constexpr auto BloomTint = 0x190; // FColor
		constexpr auto RadialBlurPercent = 0x194; // float
		constexpr auto OcclusionMaskDarkness = 0x198; // float
		constexpr auto ReflectionSpecularBrightness = 0x19c; // float
		constexpr auto DetailMode = 0x1a0; // EDetailMode
		constexpr auto Low = 0x1a4; // uint32_t : 1
		constexpr auto Medium = 0x1a4; // uint32_t : 1
		constexpr auto High = 0x1a4; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefPickUpDisplay {
		constexpr auto Min = 0x6c; // int32_t
		constexpr auto Max = 0x70; // int32_t
		constexpr auto String_ID = 0x74; // int32_t
	}

	namespace n_ACombatSEIModePRI {
		constexpr auto OccupyingAreaID = 0x520; // int32_t
		constexpr auto OccupationScore = 0x524; // int32_t
	}

	namespace n_USeqAct_AttachToEvent {
		constexpr auto bPreferController = 0x108; // uint32_t : 1
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataTableRefCrosshair {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto DotOnly = 0x70; // uint32_t : 1
		constexpr auto UseCenterDot = 0x70; // uint32_t : 1
		constexpr auto BasicCrosshairType = 0x74; // char
		constexpr auto Thickness = 0x75; // char
	}

	namespace n_UCombatFrontEnd_Inventory {
		constexpr auto MainTabInfo = 0xe4; // FInvenTabStruct [0x4]
		constexpr auto SubTabAllInfo = 0x144; // FInvenTabStruct
		constexpr auto SubTabWeaponInfo = 0x15c; // FInvenTabStruct [0x6]
		constexpr auto SubTabCharInfo = 0x1ec; // FInvenTabStruct [0x2]
		constexpr auto SubTabItemInfo = 0x21c; // FInvenTabStruct [0x5]
		constexpr auto ItemTabInfo = 0x294; // FInfoTabStruct [0x3]
		constexpr auto SelectedMainTab = 0x2c4; // int32_t
		constexpr auto SelectedSubTab = 0x2c8; // int32_t
		constexpr auto SelectedInfoTabType = 0x2cc; // int32_t
		constexpr auto SelectedInfoTab = 0x2d0; // int32_t
		constexpr auto PresetItemlist = 0x2d4; // TArray<FS_BaseItemInfo>
		constexpr auto bInvenOpen = 0x2e4; // uint32_t : 1
		constexpr auto bWaitforChangeStateActiveItem = 0x2e4; // uint32_t : 1
		constexpr auto bSelectAscending = 0x2e4; // uint32_t : 1
		constexpr auto CurrentPresetTab = 0x2e8; // int32_t
		constexpr auto CurrentPresetSlotIndex = 0x2ec; // int32_t
		constexpr auto CurrentSelectedItemListSlotIndex = 0x2f0; // int32_t
		constexpr auto CurrentClothItemRefIndex = 0x2f4; // int32_t
		constexpr auto ItemPresetClass = 0x2f8; // ObjectProperty
		constexpr auto ItemListClass = 0x300; // ObjectProperty
		constexpr auto ItemDetailinfoClass = 0x308; // ObjectProperty
		constexpr auto PendingConsumeItemRefIndex = 0x310; // int32_t
		constexpr auto CurrentSearchtext = 0x314; // FString
		constexpr auto PendingDecompoisitionSlot = 0x324; // TArray<int32_t>
		constexpr auto InvenItemList = 0x334; // TArray<FInvenItemInfo>
		constexpr auto SelectSortType = 0x344; // int32_t
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FVectorMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_UUIDataStore {
		constexpr auto Tag = 0x70; // FName
		constexpr auto RefreshSubscriberNotifies = 0x78; // TArray<DelegateProperty>
		constexpr auto __OnDataStoreValueUpdated__Delegate = 0x88; // DelegateProperty
	}

	namespace n_ULensFlare {
		constexpr auto SourceElement = 0x60; // FLensFlareElement
		constexpr auto SourceMesh = 0x1f8; // ObjectProperty
		constexpr auto SourceDPG = 0x200; // ESceneDepthPriorityGroup
		constexpr auto ReflectionsDPG = 0x201; // ESceneDepthPriorityGroup
		constexpr auto Reflections = 0x204; // TArray<FLensFlareElement>
		constexpr auto OuterCone = 0x214; // float
		constexpr auto InnerCone = 0x218; // float
		constexpr auto ConeFudgeFactor = 0x21c; // float
		constexpr auto Radius = 0x220; // float
		constexpr auto bUseTrueConeCalculation = 0x224; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x224; // uint32_t : 1
		constexpr auto bRenderDebugLines = 0x224; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0x224; // uint32_t : 1
		constexpr auto MinStrength = 0x228; // float
		constexpr auto ScreenPercentageMap = 0x22c; // FRawDistributionFloat
		constexpr auto FixedRelativeBoundingBox = 0x250; // FBox
		constexpr auto CurveEdSetup = 0x26c; // ObjectProperty
		constexpr auto ReflectionCount = 0x274; // int32_t
		constexpr auto ThumbnailAngle = 0x278; // FRotator
		constexpr auto ThumbnailDistance = 0x284; // float
		constexpr auto ThumbnailImage = 0x288; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlineStats {
		constexpr auto StatsReadClasses = 0x98; // TArray<UOnlineStatsRead*>
		constexpr auto StatsReadName = 0xa8; // FName
		constexpr auto PlayerNickData = 0xb0; // FPlayerNickMetaData
		constexpr auto RankNameMetaData = 0xc8; // FRankMetaData
		constexpr auto TotalRowsName = 0xe0; // FName
		constexpr auto StatsReadObjects = 0xe8; // TArray<ObjectProperty>
		constexpr auto StatsRead = 0xf8; // ObjectProperty
		constexpr auto CurrentReadType = 0x100; // EStatsFetchType
		constexpr auto StatsInterface = 0x104; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x114; // TScriptInterface<Class>
	}

	namespace n_UCombatProfileSettings {
		constexpr auto DigitalButtonActionsToCommandMapping = 0xd4; // TArray<FString>
		constexpr auto KeyMappingArray = 0xe4; // TArray<FName>
		constexpr auto OptionMappingArray = 0xf4; // TArray<FString>
		constexpr auto KeymapData = 0x104; // TArray<FKeymapDatum>
		constexpr auto FiexdKeyCommandInfos = 0x114; // TArray<FFiexdKeyCommandInfo>
		constexpr auto ReservedData = 0x124; // TArray<int32_t>
	}

	namespace n_UDrawCapsuleComponent {
		constexpr auto CapsuleColor = 0x250; // FColor
		constexpr auto CapsuleMaterial = 0x254; // ObjectProperty
		constexpr auto CapsuleHeight = 0x25c; // float
		constexpr auto CapsuleRadius = 0x260; // float
		constexpr auto bDrawWireCapsule = 0x264; // uint32_t : 1
		constexpr auto bDrawLitCapsule = 0x264; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x264; // uint32_t : 1
	}

	namespace n_UGripCondNode_TargetReachable {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto bNegative = 0xf0; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefEvolveLevelup {
		constexpr auto WeaponRank = 0x6c; // int32_t
		constexpr auto RankPointMin = 0x70; // int32_t
		constexpr auto RankPointMax = 0x74; // int32_t
		constexpr auto AmmoRatio = 0x78; // float
		constexpr auto AutoTime = 0x7c; // float
		constexpr auto AutoScore = 0x80; // int32_t
		constexpr auto RespawnWeaponGroupCodename = 0x84; // FString
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0xb080; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataTableRefPenalty {
		constexpr auto Idx = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto ApplyRunawayCount = 0x80; // int32_t
		constexpr auto CountAlleviationMinute = 0x84; // int32_t
	}

	namespace n_ACombatArmsRaceGame {
		constexpr auto WeaponLevelList = 0x78c; // TArray<FWeaponLevelInfo>
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x60; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x6c; // FRawDistributionVector
	}

	namespace n_UGFxClikWidget {
		constexpr auto __EventListener__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UPMESTG_LeaveADecalBase {
		constexpr auto PhysicalMaterialPropertyClass = 0x60; // UPhysicalMaterialPropertyBase*
	}

	namespace n_UMultiFont {
		constexpr auto ResolutionTestTable = 0x1a0; // TArray<float>
	}

	namespace n_ACombatEvolveGunSupplyPointActor {
		constexpr auto CurrentState = 0x254; // int32_t
		constexpr auto bIsInvulnerable = 0x258; // uint32_t : 1
		constexpr auto bCreatedSupply = 0x258; // uint32_t : 1
		constexpr auto bFirstSpawn = 0x258; // uint32_t : 1
		constexpr auto bJackpotSupply = 0x258; // uint32_t : 1
		constexpr auto Health = 0x25c; // int32_t
		constexpr auto HealthJackpot = 0x260; // int32_t
		constexpr auto HealthMax = 0x264; // int32_t
		constexpr auto CurrentHealth = 0x268; // int32_t
		constexpr auto LastSubObjectIndex = 0x26c; // int32_t
		constexpr auto OutlineColor_Default = 0x270; // FOutlineProperty
		constexpr auto OutlineColor_Jackpot = 0x2ac; // FOutlineProperty
		constexpr auto SubObjectInfos = 0x2e8; // TArray<FSubObjectInfo>
		constexpr auto ExplosionTemplate = 0x2f8; // ObjectProperty
		constexpr auto LightEnvironment = 0x300; // ComponentProperty
		constexpr auto SpawnProtectTime = 0x308; // float
		constexpr auto SpawnProtectionAmbientGlow = 0x30c; // FLinearColor
		constexpr auto SpawnProtectionAmbientCycleTime = 0x31c; // float
		constexpr auto CreateDamageType = 0x320; // UDamageType*
		constexpr auto UISortPriority = 0x328; // int32_t
		constexpr auto MissionActorArrayIndex = 0x32c; // int32_t
		constexpr auto CurrentMakeTime = 0x330; // int32_t
		constexpr auto SupplyPointArray = 0x334; // TArray<FEvolveSupplyPointInfos>
		constexpr auto SupplyItemArray = 0x344; // TArray<FEvolveSupplyItemInfos>
		constexpr auto TossSpeed = 0x354; // float
		constexpr auto SupplyPointArrayJackpot = 0x358; // TArray<FEvolveSupplyPointInfos>
		constexpr auto SupplyItemArrayJackpot = 0x368; // TArray<FEvolveSupplyItemInfos>
		constexpr auto TossSpeedJackpot = 0x378; // float
		constexpr auto UIState = 0x37c; // MissionActorUIState
		constexpr auto HumanReadableName = 0x380; // FString
	}

	namespace n_UCombatFrontEndLocalSoundGroup_Base {
		constexpr auto EnterScene = 0x70; // ObjectProperty [0x18]
		constexpr auto WarnInvalidNickName = 0x130; // ObjectProperty
		constexpr auto MainLobby_SearchRoom = 0x138; // ObjectProperty
		constexpr auto MainLobby_OptionMenu = 0x140; // ObjectProperty
		constexpr auto MatchRoom_Intrude = 0x148; // ObjectProperty
		constexpr auto MatchRoom_ChangeTeam = 0x150; // TArray<ObjectProperty>
		constexpr auto MatchRoom_RoomState = 0x160; // ObjectProperty [0x7]
		constexpr auto Matchroom_StartMatch = 0x198; // ObjectProperty
		constexpr auto Matchroom_StartMatchCountDown = 0x1a0; // ObjectProperty
		constexpr auto AlramFriendSuggestion = 0x1a8; // ObjectProperty
		constexpr auto MailBox_NewMail = 0x1b0; // ObjectProperty
		constexpr auto MailBox_UnreadMail = 0x1b8; // ObjectProperty
	}

	namespace n_UNavMeshGoal_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x7c; // float
		constexpr auto MinDistance = 0x80; // float
		constexpr auto MinTraversalDist = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_UCombatHUD_Bombsite {
		constexpr auto BombsiteObject = 0x1b0; // ObjectProperty
	}

	namespace n_ACombatTeamGame {
		constexpr auto TeamInfoClass = 0x67c; // ACBTeamInfo*
		constexpr auto Teams = 0x684; // TArray<ObjectProperty>
		constexpr auto ParticipatingTeamCount = 0x694; // int32_t
		constexpr auto PlayerStartCount = 0x698; // TArray<int32_t>
		constexpr auto InvulnerableTime = 0x6a8; // TArray<float>
		constexpr auto InvulnerableTimeInTheAir = 0x6b8; // TArray<float>
		constexpr auto DefaultInventory = 0x6c8; // FDefaultInventoryInfo [0x2]
		constexpr auto DefaultInventorySpawnInTheAir = 0x708; // FDefaultInventoryInfo [0x2]
		constexpr auto RoundOverPointType = 0x748; // EUIRoundPoint
		constexpr auto MatchEndResultType = 0x749; // char
		constexpr auto ClanMemberCheckCount = 0x74c; // int32_t
		constexpr auto bCheckClanMemberCount = 0x750; // uint32_t : 1
		constexpr auto VivoxTeamKeyword = 0x754; // TArray<FString>
		constexpr auto VCMarkerUserList = 0x764; // TArray<int32_t>
		constexpr auto PMMarkerUserList = 0x774; // TArray<int32_t>
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x74; // uint32_t : 1
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
	}

	namespace n_USeqAct_Latent {
		constexpr auto LatentActors = 0x108; // TArray<ObjectProperty>
		constexpr auto bAborted = 0x118; // uint32_t : 1
		constexpr auto LatentActivationTime = 0x11c; // float
	}

	namespace n_ALandscapeProxy {
		constexpr auto LandscapeGuid = 0x244; // FGuid
		constexpr auto MaxLODLevel = 0x254; // int32_t
		constexpr auto DefaultPhysMaterial = 0x258; // ObjectProperty
		constexpr auto StreamingDistanceMultiplier = 0x260; // float
		constexpr auto LandscapeMaterial = 0x264; // ObjectProperty
		constexpr auto LODDistanceFactor = 0x26c; // float
		constexpr auto LandscapeComponents = 0x270; // TArray<ComponentProperty>
		constexpr auto CollisionComponents = 0x280; // TArray<ComponentProperty>
		constexpr auto MaterialInstanceConstantMap = 0x290; // TMap<None, None>
		constexpr auto WeightmapUsageMap = 0x2d8; // TMap<None, None>
		constexpr auto StaticLightingResolution = 0x320; // float
		constexpr auto LandscapeActor = 0x324; // ObjectProperty
		constexpr auto bIsProxy = 0x32c; // uint32_t : 1
		constexpr auto bIsSetup = 0x32c; // uint32_t : 1
		constexpr auto bResetup = 0x32c; // uint32_t : 1
		constexpr auto bIsMovingToLevel = 0x32c; // uint32_t : 1
		constexpr auto LightmassSettings = 0x330; // FLightmassPrimitiveSettings
		constexpr auto LayerInfoObjs = 0x34c; // TArray<FLandscapeLayerStruct>
		constexpr auto ComponentSizeQuads = 0x35c; // int32_t
		constexpr auto SubsectionSizeQuads = 0x360; // int32_t
		constexpr auto NumSubsections = 0x364; // int32_t
	}

	namespace n_UCombatAnimBlendByDamage {
		constexpr auto Owner = 0x144; // ObjectProperty
		constexpr auto DamageAnimBlendOutTime = 0x14c; // float
		constexpr auto DamageAnimBlendInTime = 0x150; // float
		constexpr auto MinDamageAnimDuration = 0x154; // float
		constexpr auto DamageAnimLength = 0x158; // float
		constexpr auto ElapsedDamageAnimTime = 0x15c; // float
	}

	namespace n_UTitleFileDownloadCache {
		constexpr auto TitleFiles = 0x80; // TArray<FTitleFileCacheEntry>
		constexpr auto LoadCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto SaveCompleteDelegates = 0xa0; // TArray<DelegateProperty>
		constexpr auto __OnLoadTitleFileComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnSaveTitleFileComplete__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x80; // FName
		constexpr auto MinInput = 0x88; // float
		constexpr auto MaxInput = 0x8c; // float
		constexpr auto MinOutput = 0x90; // float
		constexpr auto MaxOutput = 0x94; // float
		constexpr auto ParamMode = 0x98; // DistributionParamMode
	}

	namespace n_UParticleModuleAttractorBoneSocket {
		constexpr auto FalloffType = 0x68; // EBoneSocketAttractorFalloffType
		constexpr auto DestinationType = 0x69; // ELocationBoneSocketDestination
		constexpr auto SelectionMethod = 0x6a; // ELocationBoneSocketDestSelectionMethod
		constexpr auto bParticleLifeRelative = 0x6c; // uint32_t : 1
		constexpr auto bAttractAlongLengthOfBone = 0x6c; // uint32_t : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SourceLocations = 0x154; // TArray<FAttractLocationBoneSocketInfo>
		constexpr auto SkelMeshActorParamName = 0x164; // FName
	}

	namespace n_UParticleModuleUberRainSplashA {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // uint32_t : 1
		constexpr auto MultiplyX = 0xe4; // uint32_t : 1
		constexpr auto MultiplyY = 0xe4; // uint32_t : 1
		constexpr auto MultiplyZ = 0xe4; // uint32_t : 1
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto ColorOverLife = 0x10c; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x130; // FRawDistributionFloat
	}

	namespace n_UCombatGFxMoviePlayer {
		constexpr auto CBTableDepot = 0x1e4; // ObjectProperty
		constexpr auto OSS = 0x1ec; // ObjectProperty
		constexpr auto ChannelTran = 0x1f4; // ObjectProperty
		constexpr auto LobbyChatTran = 0x1fc; // ObjectProperty
		constexpr auto CTran = 0x204; // ObjectProperty
		constexpr auto ITran = 0x20c; // ObjectProperty
		constexpr auto STran = 0x214; // ObjectProperty
		constexpr auto LTran = 0x21c; // ObjectProperty
		constexpr auto CommuTran = 0x224; // ObjectProperty
		constexpr auto ClanTran = 0x22c; // ObjectProperty
		constexpr auto MailTran = 0x234; // ObjectProperty
		constexpr auto AwaitTran = 0x23c; // ObjectProperty
		constexpr auto RandomBoxTran = 0x244; // ObjectProperty
		constexpr auto GameOptionTran = 0x24c; // ObjectProperty
		constexpr auto UserInfoTran = 0x254; // ObjectProperty
		constexpr auto MainContainer = 0x25c; // ObjectProperty
		constexpr auto CommandMC = 0x264; // ObjectProperty
		constexpr auto SystemCounterMC = 0x26c; // ObjectProperty
		constexpr auto NoticeMC = 0x274; // ObjectProperty
		constexpr auto MoviePath = 0x27c; // FString
		constexpr auto myHUD = 0x28c; // ObjectProperty
		constexpr auto IconImageHeadPath = 0x294; // FString
		constexpr auto EmptyImageName = 0x2a4; // FString
		constexpr auto PreLoadPackagePath = 0x2b4; // FString
		constexpr auto DialogManager = 0x2c4; // ObjectProperty
		constexpr auto ChatManager = 0x2cc; // ObjectProperty
		constexpr auto ChatManagerClass = 0x2d4; // UCombatChatManager*
		constexpr auto OptionClass = 0x2dc; // ObjectProperty
		constexpr auto OverImmersionGuardClass = 0x2e4; // ObjectProperty
		constexpr auto VoiceChatOptionClass = 0x2ec; // ObjectProperty
		constexpr auto bIsChatFocus = 0x2f4; // uint32_t : 1
		constexpr auto URLList = 0x2f8; // TArray<FURLInfo>
	}

	namespace n_ACombatBusterHUD {
		constexpr auto BusterActorDamageStateDelay = 0x62c; // float
		constexpr auto BusterDamageScoreLocalizedID = 0x630; // int32_t
	}

	namespace n_UCombatAnimNodeSeqWeap {
		constexpr auto DefaultAnim = 0x16c; // FName
		constexpr auto DualPistolAnim = 0x174; // FName
		constexpr auto SinglePistolAnim = 0x17c; // FName
		constexpr auto ShoulderRocketAnim = 0x184; // FName
		constexpr auto StingerAnim = 0x18c; // FName
	}

	namespace n_UCombatHUD_ChampionshipPlayerInfoListContainer {
		constexpr auto DefenseTeamListMC = 0xc0; // ObjectProperty
		constexpr auto AttackTeamListMC = 0xc8; // ObjectProperty
		constexpr auto bStopTimer = 0xd0; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefResultReward {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto ItemCodeName = 0x70; // FString
		constexpr auto EffectType = 0x80; // int32_t
		constexpr auto StringID = 0x84; // int32_t
		constexpr auto SmallIconID = 0x88; // int32_t
	}

	namespace n_UCombatHUD_ExitObject {
		constexpr auto iconType = 0x1b0; // char
		constexpr auto LastVIPIconType = 0x1b1; // EVIPIconType
		constexpr auto LastVIPHealthPercent = 0x1b4; // int32_t
	}

	namespace n_UForceFieldShapeBox {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_AActor {
		constexpr auto Components = 0x60; // TArray<ComponentProperty>
		constexpr auto AllComponents = 0x70; // TArray<ComponentProperty>
		constexpr auto Location = 0x80; // FVector
		constexpr auto Rotation = 0x8c; // FRotator
		constexpr auto DrawScale = 0x98; // float
		constexpr auto DrawScale3D = 0x9c; // FVector
		constexpr auto PrePivot = 0xa8; // FVector
		constexpr auto DetachFence = 0xb4; // FRenderCommandFence
		constexpr auto CustomTimeDilation = 0xb8; // float
		constexpr auto Physics = 0xbc; // EPhysics
		constexpr auto RemoteRole = 0xbd; // ENetRole
		constexpr auto Role = 0xbe; // ENetRole
		constexpr auto CollisionType = 0xbf; // ECollisionType
		constexpr auto ReplicatedCollisionType = 0xc0; // ECollisionType
		constexpr auto TickGroup = 0xc1; // ETickingGroup
		constexpr auto Owner = 0xc4; // ObjectProperty
		constexpr auto Base = 0xcc; // ObjectProperty
		constexpr auto Timers = 0xd4; // TArray<FTimerData>
		constexpr auto bStatic = 0xe4; // uint32_t : 1
		constexpr auto bHidden = 0xe4; // uint32_t : 1
		constexpr auto bNoDelete = 0xe4; // uint32_t : 1
		constexpr auto bDeleteMe = 0xe4; // uint32_t : 1
		constexpr auto bTicked = 0xe4; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0xe4; // uint32_t : 1
		constexpr auto bTickIsDisabled = 0xe4; // uint32_t : 1
		constexpr auto bWorldGeometry = 0xe4; // uint32_t : 1
		constexpr auto bIgnoreRigidBodyPawns = 0xe4; // uint32_t : 1
		constexpr auto bOrientOnSlope = 0xe4; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0xe4; // uint32_t : 1
		constexpr auto bPushedByEncroachers = 0xe4; // uint32_t : 1
		constexpr auto bDestroyedByInterpActor = 0xe4; // uint32_t : 1
		constexpr auto bRouteBeginPlayEvenIfStatic = 0xe4; // uint32_t : 1
		constexpr auto bIsMoving = 0xe4; // uint32_t : 1
		constexpr auto bAlwaysEncroachCheck = 0xe4; // uint32_t : 1
		constexpr auto bHasAlternateTargetLocation = 0xe4; // uint32_t : 1
		constexpr auto bCanStepUpOn = 0xe4; // uint32_t : 1
		constexpr auto bNetTemporary = 0xe4; // uint32_t : 1
		constexpr auto bOnlyRelevantToOwner = 0xe4; // uint32_t : 1
		constexpr auto bNetDirty = 0xe4; // uint32_t : 1
		constexpr auto bAlwaysRelevant = 0xe4; // uint32_t : 1
		constexpr auto bReplicateInstigator = 0xe4; // uint32_t : 1
		constexpr auto bReplicateMovement = 0xe4; // uint32_t : 1
		constexpr auto bReplicateCollision = 0xe4; // uint32_t : 1
		constexpr auto bReplicateHidden = 0xe4; // uint32_t : 1
		constexpr auto bReplicateVelocity = 0xe4; // uint32_t : 1
		constexpr auto bReplicateRotation = 0xe4; // uint32_t : 1
		constexpr auto bSkipActorPropertyReplication = 0xe4; // uint32_t : 1
		constexpr auto bUpdateSimulatedPosition = 0xe4; // uint32_t : 1
		constexpr auto bTearOff = 0xe4; // uint32_t : 1
		constexpr auto bOnlyDirtyReplication = 0xe4; // uint32_t : 1
		constexpr auto bAllowFluidSurfaceInteraction = 0xe8; // uint32_t : 1
		constexpr auto bDemoRecording = 0xe8; // uint32_t : 1
		constexpr auto bDemoOwner = 0xe8; // uint32_t : 1
		constexpr auto bForceDemoRelevant = 0xe8; // uint32_t : 1
		constexpr auto bNetInitialRotation = 0xe8; // uint32_t : 1
		constexpr auto bReplicateRigidBodyLocation = 0xe8; // uint32_t : 1
		constexpr auto bKillDuringLevelTransition = 0xe8; // uint32_t : 1
		constexpr auto bExchangedRoles = 0xe8; // uint32_t : 1
		constexpr auto bConsiderAllStaticMeshComponentsForStreaming = 0xe8; // uint32_t : 1
		constexpr auto bDebug = 0xe8; // uint32_t : 1
		constexpr auto bPostRenderIfNotVisible = 0xe8; // uint32_t : 1
		constexpr auto bUseHighNetUpdateFrequency = 0xe8; // uint32_t : 1
		constexpr auto bForceNetUpdate = 0xe8; // uint32_t : 1
		constexpr auto bPendingNetUpdate = 0xe8; // uint32_t : 1
		constexpr auto bHardAttach = 0xe8; // uint32_t : 1
		constexpr auto bIgnoreBaseRotation = 0xe8; // uint32_t : 1
		constexpr auto bShadowParented = 0xe8; // uint32_t : 1
		constexpr auto bSkipAttachedMoves = 0xe8; // uint32_t : 1
		constexpr auto bCanBeAdheredTo = 0xe8; // uint32_t : 1
		constexpr auto bCanBeFrictionedTo = 0xe8; // uint32_t : 1
		constexpr auto bHurtEntry = 0xe8; // uint32_t : 1
		constexpr auto bGameRelevant = 0xe8; // uint32_t : 1
		constexpr auto bMovable = 0xe8; // uint32_t : 1
		constexpr auto bDestroyInPainVolume = 0xe8; // uint32_t : 1
		constexpr auto bCanBeDamaged = 0xe8; // uint32_t : 1
		constexpr auto bShouldBaseAtStartup = 0xe8; // uint32_t : 1
		constexpr auto bPendingDelete = 0xe8; // uint32_t : 1
		constexpr auto bCanTeleport = 0xe8; // uint32_t : 1
		constexpr auto bAlwaysTick = 0xe8; // uint32_t : 1
		constexpr auto bBlocksNavigation = 0xe8; // uint32_t : 1
		constexpr auto BlockRigidBody = 0xe8; // uint32_t : 1
		constexpr auto bCollideWhenPlacing = 0xe8; // uint32_t : 1
		constexpr auto bCollideActors = 0xec; // uint32_t : 1
		constexpr auto bCollideWorld = 0xec; // uint32_t : 1
		constexpr auto bCollideComplex = 0xec; // uint32_t : 1
		constexpr auto bBlockActors = 0xec; // uint32_t : 1
		constexpr auto bProjTarget = 0xec; // uint32_t : 1
		constexpr auto bBlocksTeleport = 0xec; // uint32_t : 1
		constexpr auto bMoveIgnoresDestruction = 0xec; // uint32_t : 1
		constexpr auto bProjectileMoveSingleBlocking = 0xec; // uint32_t : 1
		constexpr auto bNoEncroachCheck = 0xec; // uint32_t : 1
		constexpr auto bCollideAsEncroacher = 0xec; // uint32_t : 1
		constexpr auto bPhysRigidBodyOutOfWorldCheck = 0xec; // uint32_t : 1
		constexpr auto bComponentOutsideWorld = 0xec; // uint32_t : 1
		constexpr auto bForceOctreeSNFilter = 0xec; // uint32_t : 1
		constexpr auto bForceOctreeMNFilter = 0xec; // uint32_t : 1
		constexpr auto bRigidBodyWasAwake = 0xec; // uint32_t : 1
		constexpr auto bCallRigidBodyWakeEvents = 0xec; // uint32_t : 1
		constexpr auto bBounce = 0xec; // uint32_t : 1
		constexpr auto bJustTeleported = 0xec; // uint32_t : 1
		constexpr auto bEnableMobileTouch = 0xec; // uint32_t : 1
		constexpr auto bNetInitial = 0xec; // uint32_t : 1
		constexpr auto bNetOwner = 0xec; // uint32_t : 1
		constexpr auto bHiddenEd = 0xec; // uint32_t : 1
		constexpr auto bEditable = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdGroup = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdLayer = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdCustom = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdTemporary = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdLevel = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdScene = 0xec; // uint32_t : 1
		constexpr auto bEdShouldSnap = 0xec; // uint32_t : 1
		constexpr auto bTempEditor = 0xec; // uint32_t : 1
		constexpr auto bPathColliding = 0xec; // uint32_t : 1
		constexpr auto bPathTemp = 0xf0; // uint32_t : 1
		constexpr auto bScriptInitialized = 0xf0; // uint32_t : 1
		constexpr auto bLockLocation = 0xf0; // uint32_t : 1
		constexpr auto bForceAllowKismetModification = 0xf0; // uint32_t : 1
		constexpr auto bDebugEffectIsRelevant = 0xf0; // uint32_t : 1
		constexpr auto SkelMeshCompTickTag = 0xf4; // int32_t
		constexpr auto NetTag = 0xf8; // int32_t
		constexpr auto NetUpdateTime = 0xfc; // float
		constexpr auto NetUpdateFrequency = 0x100; // float
		constexpr auto InvNetUpdateFrequency = 0x104; // float
		constexpr auto HighNetUpdateFrequency = 0x108; // float
		constexpr auto NetPriority = 0x10c; // float
		constexpr auto LastNetUpdateTime = 0x110; // float
		constexpr auto TimeSinceLastTick = 0x114; // float
		constexpr auto Instigator = 0x118; // ObjectProperty
		constexpr auto WorldInfo = 0x120; // ObjectProperty
		constexpr auto LifeSpan = 0x128; // float
		constexpr auto CreationTime = 0x12c; // float
		constexpr auto LastRenderTime = 0x130; // float
		constexpr auto Tag = 0x134; // FName
		constexpr auto InitialState = 0x13c; // FName
		constexpr auto Layer = 0x144; // FName
		constexpr auto Group = 0x14c; // FName
		constexpr auto HiddenEditorViews = 0x154; // FQWord
		constexpr auto Touching = 0x15c; // TArray<ObjectProperty>
		constexpr auto Children = 0x16c; // TArray<ObjectProperty>
		constexpr auto LatentFloat = 0x17c; // float
		constexpr auto LatentSeqNode = 0x180; // ObjectProperty
		constexpr auto PhysicsVolume = 0x188; // ObjectProperty
		constexpr auto Velocity = 0x190; // FVector
		constexpr auto Acceleration = 0x19c; // FVector
		constexpr auto AngularVelocity = 0x1a8; // FVector
		constexpr auto BaseSkelComponent = 0x1b4; // ComponentProperty
		constexpr auto BaseBoneName = 0x1bc; // FName
		constexpr auto Attached = 0x1c4; // TArray<ObjectProperty>
		constexpr auto RelativeLocation = 0x1d4; // FVector
		constexpr auto RelativeRotation = 0x1e0; // FRotator
		constexpr auto CollisionComponent = 0x1ec; // ComponentProperty
		constexpr auto OverlapTag = 0x1f4; // int32_t
		constexpr auto RotationRate = 0x1f8; // FRotator
		constexpr auto PendingTouch = 0x204; // ObjectProperty
		constexpr auto MessageClass = 0x20c; // ULocalMessage*
		constexpr auto SupportedEvents = 0x214; // TArray<USequenceEvent*>
		constexpr auto GeneratedEvents = 0x224; // TArray<ObjectProperty>
		constexpr auto LatentActions = 0x234; // TArray<ObjectProperty>
	}

	namespace n_USeqVar_ObjectList {
		constexpr auto RandomObjectCount = 0xc4; // char
		constexpr auto ObjList = 0xc8; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_Interp {
		constexpr auto SavedActorTransforms = 0x120; // TMap<None, None>
		constexpr auto SavedActorVisibilities = 0x168; // TMap<None, None>
		constexpr auto PlayRate = 0x1b0; // float
		constexpr auto Position = 0x1b4; // float
		constexpr auto ForceStartPosition = 0x1b8; // float
		constexpr auto bIsPlaying = 0x1bc; // uint32_t : 1
		constexpr auto bPaused = 0x1bc; // uint32_t : 1
		constexpr auto bIsBeingEdited = 0x1bc; // uint32_t : 1
		constexpr auto bLooping = 0x1bc; // uint32_t : 1
		constexpr auto bRewindOnPlay = 0x1bc; // uint32_t : 1
		constexpr auto bNoResetOnRewind = 0x1bc; // uint32_t : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x1bc; // uint32_t : 1
		constexpr auto bReversePlayback = 0x1bc; // uint32_t : 1
		constexpr auto bInterpForPathBuilding = 0x1bc; // uint32_t : 1
		constexpr auto bForceStartPos = 0x1bc; // uint32_t : 1
		constexpr auto bDisableRadioFilter = 0x1bc; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x1bc; // uint32_t : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x1bc; // uint32_t : 1
		constexpr auto bIsSkippable = 0x1bc; // uint32_t : 1
		constexpr auto bShouldShowGore = 0x1bc; // uint32_t : 1
		constexpr auto LinkedCover = 0x1c0; // TArray<ObjectProperty>
		constexpr auto InterpData = 0x1d0; // ObjectProperty
		constexpr auto GroupInst = 0x1d8; // TArray<ObjectProperty>
		constexpr auto ReplicatedActorClass = 0x1e8; // AMatineeActor*
		constexpr auto ReplicatedActor = 0x1f0; // ObjectProperty
		constexpr auto PreferredSplitScreenNum = 0x1f8; // int32_t
		constexpr auto CameraCuts = 0x1fc; // TArray<FCameraCutInfo>
		constexpr auto TerminationTime = 0x20c; // float
		constexpr auto RenderingOverrides = 0x210; // FRenderingPerformanceOverrides
		constexpr auto ConstantCameraAnim = 0x214; // char
		constexpr auto ConstantCameraAnimRate = 0x218; // float
	}

	namespace n_ACombatAIGame {
		constexpr auto PlayerLifeCount = 0x784; // int32_t
		constexpr auto PlayerMaxLifeCount = 0x788; // int32_t
		constexpr auto RespawnWaitTime = 0x78c; // int32_t
		constexpr auto BOT_TEAM = 0x790; // Team
		constexpr auto PLAYER_TEAM = 0x791; // Team
		constexpr auto CurrentSequence = 0x794; // ObjectProperty
		constexpr auto WaveStartTime = 0x79c; // int32_t
		constexpr auto PlayerHealthForNoLife = 0x7a0; // int32_t
	}

	namespace n_UCombatDataTableRefRank {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto RankName = 0x80; // int32_t
		constexpr auto BigIconName = 0x84; // FString
		constexpr auto SmallIconName = 0x94; // FString
		constexpr auto ImageID_Big = 0xa4; // int32_t
		constexpr auto ImageID_Small = 0xa8; // int32_t
	}

	namespace n_UActorFactoryVehicle {
		constexpr auto VehicleClass = 0x9c; // AVehicle*
	}

	namespace n_USpeedTreeActorFactory {
		constexpr auto SpeedTree = 0x9c; // ObjectProperty
	}

	namespace n_UCombatGameTableDepot {
		constexpr auto LocalizedTextTable = 0x60; // ObjectProperty
		constexpr auto LocalizedChatCommandDataTable = 0x68; // ObjectProperty
		constexpr auto refTable = 0x70; // TArray<ObjectProperty>
		constexpr auto MapCodeNameMap = 0x80; // TMap<None, None>
		constexpr auto ModeCodeNameMap = 0xc8; // TMap<None, None>
		constexpr auto ModeGroupCodeNameMap = 0x110; // TMap<None, None>
		constexpr auto MissionCodeNameMap = 0x158; // TMap<None, None>
		constexpr auto InitItemCodeNameMap = 0x1a0; // TMap<None, None>
		constexpr auto ItemCodeNameMap = 0x1e8; // TMap<None, None>
		constexpr auto ShopCodeNameMap = 0x230; // TMap<None, None>
		constexpr auto ShopCategoryTabMap = 0x278; // TMap<None, None>
		constexpr auto ShopCategoryCodeNameMap = 0x2c0; // TMap<None, None>
		constexpr auto ShopItemCodeNameMap = 0x308; // TMap<None, None>
		constexpr auto ShopItemGroupMap = 0x350; // TMap<None, None>
		constexpr auto ShopItemShortcutMap = 0x398; // TMap<None, None>
		constexpr auto AchievementCodeNameMap = 0x3e0; // TMap<None, None>
		constexpr auto GameScoringCodeNameMap = 0x428; // TMap<None, None>
		constexpr auto StatCodeNameMap = 0x470; // TMap<None, None>
		constexpr auto PickupCodeNameMap = 0x4b8; // TMap<None, None>
		constexpr auto DropCodeNameMap = 0x500; // TMap<None, None>
		constexpr auto GroupSkillCodeNameMap = 0x548; // TMap<None, None>
		constexpr auto SkillLicenseCodeNameMap = 0x590; // TMap<None, None>
		constexpr auto RankCodeNameMap = 0x5d8; // TMap<None, None>
		constexpr auto ModeOptionCodeNameMap = 0x620; // TMap<None, None>
		constexpr auto ItemDetailinfoMap = 0x668; // TMap<None, None>
		constexpr auto ItemClassNameMap = 0x6b0; // TMap<None, None>
		constexpr auto ItemAttachmentWeaponNameMap = 0x6f8; // TMap<None, None>
		constexpr auto CallingCardNameMap = 0x740; // TMap<None, None>
		constexpr auto ShopSellItemMap = 0x788; // TMap<None, None>
		constexpr auto EmblemNameMap = 0x7d0; // TMap<None, None>
		constexpr auto QuestNameMap = 0x818; // TMap<None, None>
		constexpr auto HelpTabCodeNameMap = 0x860; // TMap<None, None>
		constexpr auto HelpDetailInfoCodeNameMap = 0x8a8; // TMap<None, None>
		constexpr auto StatWeaponGroupNameMap = 0x8f0; // TMap<None, None>
		constexpr auto SystemImageMap = 0x938; // TMap<None, None>
		constexpr auto BoostCodeNameMap = 0x980; // TMap<None, None>
		constexpr auto ShopItemPriceMap = 0x9c8; // TMap<None, None>
		constexpr auto RewardCodeNameMap = 0xa10; // TMap<None, None>
		constexpr auto ModeGuideCodeNameMap = 0xa58; // TMap<None, None>
		constexpr auto FrontEndModeMap = 0xaa0; // TMap<None, None>
		constexpr auto ModeTipCodeNameMap = 0xae8; // TMap<None, None>
		constexpr auto BGMNameMap = 0xb30; // TMap<None, None>
		constexpr auto AttendCodeNameMap = 0xb78; // TMap<None, None>
		constexpr auto DefineCodeNameMap = 0xbc0; // TMap<None, None>
		constexpr auto KillComboCodeNameMap = 0xc08; // TMap<None, None>
		constexpr auto AIRewardRankCodeNameMap = 0xc50; // TMap<None, None>
		constexpr auto TypeDefineDataMap = 0xc98; // TMap<None, None>
		constexpr auto RandomBoxCubeCodeNameMap = 0xce0; // TMap<None, None>
		constexpr auto RematchOptionCodeNameMap = 0xd28; // TMap<None, None>
		constexpr auto GameChannelMap = 0xd70; // TMap<None, None>
		constexpr auto GameChannelPropertyMap = 0xdb8; // TMap<None, None>
		constexpr auto SystemTextColorMap = 0xe00; // TMap<None, None>
		constexpr auto LimitSaleMap = 0xe48; // TMap<None, None>
		constexpr auto SteamItemMap = 0xe90; // TMap<None, None>
		constexpr auto TierMap = 0xed8; // TMap<None, None>
		constexpr auto TierSeasonMap = 0xf20; // TMap<None, None>
		constexpr auto PenaltyMap = 0xf68; // TMap<None, None>
		constexpr auto PenaltyBindMap = 0xfb0; // TMap<None, None>
		constexpr auto FormulaMap = 0xff8; // TMap<None, None>
		constexpr auto QuestShortcutMap = 0x1040; // TMap<None, None>
		constexpr auto ExchangeCashMap = 0x1088; // TMap<None, None>
		constexpr auto TodayGameMap = 0x10d0; // TMap<None, None>
		constexpr auto TodayGameBindModeMap = 0x1118; // TMap<None, None>
		constexpr auto CompetitivePenaltyMap = 0x1160; // TMap<None, None>
		constexpr auto MaxRank = 0x11a8; // int32_t
		constexpr auto bFinishedLoadAllTables = 0x11ac; // uint32_t : 1
		constexpr auto ItemUnLockRecipeMap = 0x11b0; // TMap<None, None>
		constexpr auto CompetitiveBindModeSeasonMap = 0x11f8; // TMap<None, None>
		constexpr auto CompetitiveSeasonMap = 0x1240; // TMap<None, None>
		constexpr auto PingGroupMap = 0x1288; // TMap<None, None>
		constexpr auto PingGroupRegionMap = 0x12d0; // TMap<None, None>
		constexpr auto NationTableMap = 0x1318; // TMap<None, None>
		constexpr auto SupportUserGroupMap = 0x1360; // TMap<None, None>
		constexpr auto PeriodAttendRewardMap = 0x13a8; // TMap<None, None>
		constexpr auto MatchMakingRatingMap = 0x13f0; // TMap<None, None>
		constexpr auto MatchMakingOptionMap = 0x1438; // TMap<None, None>
		constexpr auto MarkerOptionMap = 0x1480; // TMap<None, None>
		constexpr auto ARaceEquipMap = 0x14c8; // TMap<None, None>
		constexpr auto ShopRotationMap = 0x1510; // TMap<None, None>
		constexpr auto EvolveModeEquipMap = 0x1558; // TMap<None, None>
		constexpr auto EvolveModeOptionMap = 0x15a0; // TMap<None, None>
		constexpr auto ExtendPeriodBindMap = 0x15e8; // TMap<None, None>
		constexpr auto SeasonPassMap = 0x1630; // TMap<None, None>
		constexpr auto ClanColorMap = 0x1678; // TMap<None, None>
		constexpr auto ClanMarkMap = 0x16c0; // TMap<None, None>
		constexpr auto ItemOptionMap = 0x1708; // TMap<None, None>
		constexpr auto ItemOptionBindMap = 0x1750; // TMap<None, None>
		constexpr auto ClanTierEmblemMap = 0x1798; // TMap<None, None>
		constexpr auto DataTableList = 0x17e0; // TArray<FDataTableInfo>
		constexpr auto UnnecessaryDataTableListOnDedi = 0x17f0; // TArray<RefTableType>
		constexpr auto StatTableEventKeyList = 0x1800; // TArray<FName>
	}

	namespace n_UReachSpec {
		constexpr auto NavOctreeObject = 0x60; // FPointer
		constexpr auto Distance = 0x68; // int32_t
		constexpr auto Direction = 0x6c; // FVector
		constexpr auto Start = 0x78; // ObjectProperty
		constexpr auto End = 0x80; // FActorReference
		constexpr auto CollisionRadius = 0x98; // int32_t
		constexpr auto CollisionHeight = 0x9c; // int32_t
		constexpr auto reachFlags = 0xa0; // int32_t
		constexpr auto MaxLandingVelocity = 0xa4; // int32_t
		constexpr auto bPruned = 0xa8; // char
		constexpr auto PathColorIndex = 0xa9; // char
		constexpr auto bAddToNavigationOctree = 0xac; // uint32_t : 1
		constexpr auto bCanCutCorners = 0xac; // uint32_t : 1
		constexpr auto bCheckForObstructions = 0xac; // uint32_t : 1
		constexpr auto bSkipPrune = 0xac; // uint32_t : 1
		constexpr auto bDisabled = 0xac; // uint32_t : 1
		constexpr auto PruneSpecList = 0xb0; // TArray<UReachSpec*>
		constexpr auto BlockedBy = 0xc0; // ObjectProperty
	}

	namespace n_UCombatDataTableRefDecomposition {
		constexpr auto DecompositionType = 0x6c; // int32_t
		constexpr auto TypeTime = 0x70; // int32_t
		constexpr auto Type1 = 0x74; // int32_t
		constexpr auto Type2 = 0x78; // int32_t
		constexpr auto Type3 = 0x7c; // int32_t
		constexpr auto Type4 = 0x80; // int32_t
		constexpr auto DefaultTP = 0x84; // int32_t
		constexpr auto TPMultiply = 0x88; // int32_t
		constexpr auto OptionConefficient = 0x8c; // int32_t
		constexpr auto OptionPlus = 0x90; // int32_t
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0xb0; // FExpressionInput
		constexpr auto InputName = 0xe4; // FString
		constexpr auto Description = 0xf4; // FString
		constexpr auto Id = 0x104; // FGuid
		constexpr auto InputType = 0x114; // EFunctionInputType
		constexpr auto PreviewValue = 0x120; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0x130; // uint32_t : 1
		constexpr auto bCompilingFunctionPreview = 0x130; // uint32_t : 1
		constexpr auto SortPriority = 0x134; // int32_t
	}

	namespace n_USeqAct_PlayMusicTrack {
		constexpr auto MusicTrack = 0x108; // FMusicTrackStruct
	}

	namespace n_ACombatLCTFModePRI {
		constexpr auto CTFFlag = 0x520; // ObjectProperty
		constexpr auto TakeCount = 0x528; // int32_t
		constexpr auto TakeFlagSpawnID = 0x52c; // int32_t
		constexpr auto AddScoreCountList = 0x530; // TArray<FLimitAddScoreCountStruct>
		constexpr auto bHaveCTFFlag = 0x540; // uint32_t : 1
		constexpr auto bFirstExtortion = 0x540; // uint32_t : 1
		constexpr auto TotalCTFScore = 0x544; // WordProperty
	}

	namespace n_USequenceFrame {
		constexpr auto SizeX = 0x98; // int32_t
		constexpr auto SizeY = 0x9c; // int32_t
		constexpr auto BorderWidth = 0xa0; // int32_t
		constexpr auto bDrawBox = 0xa4; // uint32_t : 1
		constexpr auto bFilled = 0xa4; // uint32_t : 1
		constexpr auto bTileFill = 0xa4; // uint32_t : 1
		constexpr auto BorderColor = 0xa8; // FColor
		constexpr auto FillColor = 0xac; // FColor
	}

	namespace n_ADynamicSMActor {
		constexpr auto StaticMeshComponent = 0x244; // ComponentProperty
		constexpr auto LightEnvironment = 0x24c; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x254; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x25c; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x264; // ObjectProperty
		constexpr auto bForceStaticDecals = 0x26c; // uint32_t : 1
		constexpr auto bPawnCanBaseOn = 0x26c; // uint32_t : 1
		constexpr auto bSafeBaseIfAsleep = 0x26c; // uint32_t : 1
		constexpr auto ReplicatedMeshTranslation = 0x270; // FVector
		constexpr auto ReplicatedMeshRotation = 0x27c; // FRotator
		constexpr auto ReplicatedMeshScale3D = 0x288; // FVector
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // FExpressionInput
		constexpr auto Max = 0x118; // FExpressionInput
	}

	namespace n_UActorFactoryPhysicsAsset {
		constexpr auto PhysicsAsset = 0x9c; // ObjectProperty
		constexpr auto SkeletalMesh = 0xa4; // ObjectProperty
		constexpr auto bStartAwake = 0xac; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xac; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xac; // uint32_t : 1
		constexpr auto bUseCompartment = 0xac; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xac; // uint32_t : 1
		constexpr auto InitialVelocity = 0xb0; // FVector
		constexpr auto DrawScale3D = 0xbc; // FVector
	}

	namespace n_UNavMeshPath_Toward {
		constexpr auto bBiasAgainstHighLevelPath = 0x78; // uint32_t : 1
		constexpr auto OutOfHighLevelPathBias = 0x7c; // float
		constexpr auto GoalActor = 0x80; // ObjectProperty
		constexpr auto GoalPoint = 0x88; // FVector
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto AnimSets = 0xb8; // TArray<ObjectProperty>
		constexpr auto SlotName = 0xc8; // FName
		constexpr auto AnimSeqs = 0xd0; // TArray<FAnimControlTrackKey>
		constexpr auto bEnableRootMotion = 0xe0; // uint32_t : 1
		constexpr auto bSkipAnimNotifiers = 0xe0; // uint32_t : 1
		constexpr auto bSkipAnimNotifiersOnDediServer = 0xe0; // uint32_t : 1
	}

	namespace n_UCombatAnimNodeSeqDirection {
		constexpr auto BlendSpeed = 0x170; // float
		constexpr auto Use8WayBlend = 0x174; // uint32_t : 1
		constexpr auto bInterpolateWeights = 0x174; // uint32_t : 1
		constexpr auto DirAngle = 0x178; // float
		constexpr auto LastDirAngle = 0x17c; // float
		constexpr auto LastRelevantTime = 0x180; // float
		constexpr auto FullBwdThreshold = 0x184; // float
		constexpr auto TooSlowSpeed = 0x188; // float
		constexpr auto TargetPlayRateData = 0x18c; // TArray<float>
		constexpr auto AOwner = 0x19c; // ObjectProperty
	}

	namespace n_UMeshComponentFactory {
		constexpr auto Materials = 0x64; // TArray<ObjectProperty>
	}

	namespace n_AAmbientSoundSimpleToggleable {
		constexpr auto bCurrentlyPlaying = 0x270; // uint32_t : 1
		constexpr auto bFadeOnToggle = 0x270; // uint32_t : 1
		constexpr auto bIgnoreAutoPlay = 0x270; // uint32_t : 1
		constexpr auto FadeInDuration = 0x274; // float
		constexpr auto FadeInVolumeLevel = 0x278; // float
		constexpr auto FadeOutDuration = 0x27c; // float
		constexpr auto FadeOutVolumeLevel = 0x280; // float
	}

	namespace n_UGripBTDummyCondition {
		constexpr auto PreConditionResult = 0xc0; // uint32_t : 1
	}

	namespace n_USkelControlSingleBone {
		constexpr auto bApplyTranslation = 0xd0; // uint32_t : 1
		constexpr auto bApplyRotation = 0xd0; // uint32_t : 1
		constexpr auto bAddTranslation = 0xd0; // uint32_t : 1
		constexpr auto bAddRotation = 0xd0; // uint32_t : 1
		constexpr auto bRemoveMeshRotation = 0xd0; // uint32_t : 1
		constexpr auto BoneTranslation = 0xd4; // FVector
		constexpr auto BoneTranslationSpace = 0xe0; // EBoneControlSpace
		constexpr auto BoneRotationSpace = 0xe1; // EBoneControlSpace
		constexpr auto TranslationSpaceBoneName = 0xe4; // FName
		constexpr auto BoneRotation = 0xec; // FRotator
		constexpr auto RotationSpaceBoneName = 0xf8; // FName
	}

	namespace n_ACombatLCTFFlagPoint {
		constexpr auto OwnerTeam = 0x33c; // Team
		constexpr auto PointType = 0x33d; // EFlagPointType
		constexpr auto SpawnID = 0x33e; // char
		constexpr auto PointID = 0x33f; // char
		constexpr auto MaxHoistedCount = 0x340; // int32_t
		constexpr auto Mesh = 0x344; // ComponentProperty
		constexpr auto StaticMeshComp = 0x34c; // ComponentProperty
		constexpr auto FlagPointStaticMesh = 0x354; // ObjectProperty
		constexpr auto AreaNameID = 0x35c; // int32_t
		constexpr auto MissionGoalArrayIndex = 0x360; // int32_t
		constexpr auto IsStayFlag = 0x364; // uint32_t : 1
		constexpr auto HoistedID = 0x368; // TArray<int32_t>
	}

	namespace n_USeqCond_Increment {
		constexpr auto IncrementAmount = 0xec; // int32_t
		constexpr auto ValueA = 0xf0; // int32_t
		constexpr auto ValueB = 0xf4; // int32_t
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FFloatMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_UCombatDataTableRefExtendPeriodBind {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto PeriodCode = 0x7c; // FString
		constexpr auto TotalProb = 0x8c; // int32_t
		constexpr auto Type = 0x90; // int32_t
	}

	namespace n_UCombatDataTableRefHelpDetailInfo {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto TabNameID = 0x7c; // int32_t
		constexpr auto HighlightTextID = 0x80; // int32_t
		constexpr auto DetailInfoTextID = 0x84; // int32_t
		constexpr auto ImageName = 0x88; // FString
		constexpr auto ImageID = 0x98; // int32_t
	}

	namespace n_AEmitterPool {
		constexpr auto PSCTemplate = 0x244; // ComponentProperty
		constexpr auto PoolComponents = 0x24c; // TArray<ComponentProperty>
		constexpr auto ActiveComponents = 0x25c; // TArray<ComponentProperty>
		constexpr auto MaxActiveEffects = 0x26c; // int32_t
		constexpr auto bLogPoolOverflow = 0x270; // uint32_t : 1
		constexpr auto bLogPoolOverflowList = 0x270; // uint32_t : 1
		constexpr auto RelativePSCs = 0x274; // TArray<FEmitterBaseInfo>
		constexpr auto SMC_MIC_ReductionTime = 0x284; // float
		constexpr auto SMC_MIC_CurrentReductionTime = 0x288; // float
		constexpr auto IdealStaticMeshComponents = 0x28c; // int32_t
		constexpr auto IdealMaterialInstanceConstants = 0x290; // int32_t
		constexpr auto FreeSMComponents = 0x294; // TArray<ComponentProperty>
		constexpr auto FreeMatInstConsts = 0x2a4; // TArray<ObjectProperty>
	}

	namespace n_UCCSBTScriptCover {
		constexpr auto CurrHandle = 0xd4; // ObjectProperty
		constexpr auto EnterHandle = 0xdc; // ObjectProperty
		constexpr auto GetOutHandle = 0xe4; // ObjectProperty
		constexpr auto FireHandle = 0xec; // ObjectProperty
		constexpr auto ExitHandle = 0xf4; // ObjectProperty
		constexpr auto Cover = 0xfc; // FCCSCoverData
		constexpr auto CoverState = 0x124; // ScriptCoverState
	}

	namespace n_UCombatHUDSoundGroup {
		constexpr auto GameOverQuestion = 0x60; // ObjectProperty
		constexpr auto Target = 0x68; // ObjectProperty
	}

	namespace n_UPath_AvoidActor {
		constexpr auto AvoidTarget = 0x6c; // ObjectProperty
	}

	namespace n_UActorFactoryRigidBody {
		constexpr auto bStartAwake = 0xb8; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xb8; // uint32_t : 1
		constexpr auto bLocalSpaceInitialVelocity = 0xb8; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0xb8; // uint32_t : 1
		constexpr auto InitialVelocity = 0xbc; // FVector
		constexpr auto AdditionalVelocity = 0xc8; // ComponentProperty
		constexpr auto InitialAngularVelocity = 0xd0; // ComponentProperty
		constexpr auto RBChannel = 0xd8; // ERBCollisionChannel
		constexpr auto StayUprightTorqueFactor = 0xdc; // float
		constexpr auto StayUprightMaxTorque = 0xe0; // float
	}

	namespace n_UGameThirdPersonCameraMode {
		constexpr auto ThirdPersonCam = 0x60; // ObjectProperty
		constexpr auto FOVAngle = 0x68; // float
		constexpr auto BlendTime = 0x6c; // float
		constexpr auto bLockedToViewTarget = 0x70; // uint32_t : 1
		constexpr auto bDirectLook = 0x70; // uint32_t : 1
		constexpr auto bFollowTarget = 0x70; // uint32_t : 1
		constexpr auto bInterpLocation = 0x70; // uint32_t : 1
		constexpr auto bUsePerAxisOriginLocInterp = 0x70; // uint32_t : 1
		constexpr auto bInterpRotation = 0x70; // uint32_t : 1
		constexpr auto bRotInterpSpeedConstant = 0x70; // uint32_t : 1
		constexpr auto bDoPredictiveAvoidance = 0x70; // uint32_t : 1
		constexpr auto bValidateWorstLoc = 0x70; // uint32_t : 1
		constexpr auto bSkipCameraCollision = 0x70; // uint32_t : 1
		constexpr auto bSmoothViewOffsetPitchChanges = 0x70; // uint32_t : 1
		constexpr auto bApplyDeltaViewOffset = 0x70; // uint32_t : 1
		constexpr auto bAdjustDOF = 0x70; // uint32_t : 1
		constexpr auto bDOFUpdated = 0x70; // uint32_t : 1
		constexpr auto bNoFOVPostProcess = 0x70; // uint32_t : 1
		constexpr auto bInterpViewOffsetOnlyForCamTransition = 0x70; // uint32_t : 1
		constexpr auto FollowingInterpSpeed_Pitch = 0x74; // float
		constexpr auto FollowingInterpSpeed_Yaw = 0x78; // float
		constexpr auto FollowingInterpSpeed_Roll = 0x7c; // float
		constexpr auto FollowingCameraVelThreshold = 0x80; // float
		constexpr auto OriginLocInterpSpeed = 0x84; // float
		constexpr auto PerAxisOriginLocInterpSpeed = 0x88; // FVector
		constexpr auto OriginRotInterpSpeed = 0x94; // float
		constexpr auto StrafeLeftAdjustment = 0x98; // FVector
		constexpr auto StrafeRightAdjustment = 0xa4; // FVector
		constexpr auto StrafeOffsetScalingThreshold = 0xb0; // float
		constexpr auto StrafeOffsetInterpSpeedIn = 0xb4; // float
		constexpr auto StrafeOffsetInterpSpeedOut = 0xb8; // float
		constexpr auto LastStrafeOffset = 0xbc; // FVector
		constexpr auto RunFwdAdjustment = 0xc8; // FVector
		constexpr auto RunBackAdjustment = 0xd4; // FVector
		constexpr auto RunOffsetScalingThreshold = 0xe0; // float
		constexpr auto RunOffsetInterpSpeedIn = 0xe4; // float
		constexpr auto RunOffsetInterpSpeedOut = 0xe8; // float
		constexpr auto LastRunOffset = 0xec; // FVector
		constexpr auto WorstLocOffset = 0xf8; // FVector
		constexpr auto TargetRelativeCameraOriginOffset = 0x104; // FVector
		constexpr auto ViewOffset = 0x110; // FViewOffsetData
		constexpr auto ViewOffset_ViewportAdjustments = 0x134; // FViewOffsetData [0x6]
		constexpr auto DOF_FalloffExponent = 0x20c; // float
		constexpr auto DOF_BlurKernelSize = 0x210; // float
		constexpr auto DOF_FocusInnerRadius = 0x214; // float
		constexpr auto DOF_MaxNearBlurAmount = 0x218; // float
		constexpr auto DOF_MaxFarBlurAmount = 0x21c; // float
		constexpr auto LastDOFRadius = 0x220; // float
		constexpr auto LastDOFDistance = 0x224; // float
		constexpr auto DOFDistanceInterpSpeed = 0x228; // float
		constexpr auto DOFTraceExtent = 0x22c; // FVector
		constexpr auto DOF_RadiusFalloff = 0x238; // float
		constexpr auto DOF_RadiusRange = 0x23c; // FVector2D
		constexpr auto DOF_RadiusDistRange = 0x244; // FVector2D
		constexpr auto ViewOffsetInterp = 0x24c; // float
		constexpr auto OffsetAdjustmentInterpSpeed = 0x250; // float
		constexpr auto CurrentViewportType = 0x254; // ECameraViewportTypes
	}

	namespace n_UCombatAnimNotify_CameraEffect {
		constexpr auto PS_CameraEffect = 0x68; // FString
		constexpr auto PS_CameraEffectNonExtremeContent = 0x78; // FString
		constexpr auto LifeSpan = 0x88; // float
		constexpr auto DistFromCamera = 0x8c; // float
		constexpr auto BaseFOV = 0x90; // float
		constexpr auto DepthGroup = 0x94; // ESceneDepthPriorityGroup
		constexpr auto bClearCameraEffectOnStopAnim = 0x98; // uint32_t : 1
	}

	namespace n_ACombatLCTFGame {
		constexpr auto EnableTouchTime = 0x788; // float
		constexpr auto CarriedObjectBouns = 0x78c; // FCarriedObjectBounsInfo
		constexpr auto AddedFlagPointID = 0x794; // TArray<char>
	}

	namespace n_USimpleSplineNonLoopAudioComponent {
		constexpr auto DelayMin = 0x2f0; // float
		constexpr auto DelayMax = 0x2f4; // float
		constexpr auto PitchMin = 0x2f8; // float
		constexpr auto PitchMax = 0x2fc; // float
		constexpr auto VolumeMin = 0x300; // float
		constexpr auto VolumeMax = 0x304; // float
		constexpr auto CurrentSlotIndex = 0x308; // int32_t
		constexpr auto UsedVolumeModulation = 0x30c; // float
		constexpr auto UsedPitchModulation = 0x310; // float
		constexpr auto NextSoundTime = 0x314; // float
	}

	namespace n_UParticleLightEnvironmentComponent {
		constexpr auto ReferenceCount = 0x168; // int32_t
		constexpr auto NumPooledReuses = 0x16c; // int32_t
		constexpr auto SharedInstigator = 0x170; // ObjectProperty
		constexpr auto SharedParticleSystem = 0x178; // ObjectProperty
		constexpr auto bAllowDLESharing = 0x180; // uint32_t : 1
	}

	namespace n_UCombatDemolitionMovie {
		constexpr auto BombContainer = 0xad0; // ObjectProperty
		constexpr auto BombsiteCount = 0xad8; // int32_t
		constexpr auto BombCount = 0xadc; // int32_t
		constexpr auto bUpdateEquippedBomb = 0xae0; // uint32_t : 1
		constexpr auto bUpdateEquippedBombSite = 0xae0; // uint32_t : 1
		constexpr auto bIsDisplayedBombLimitTime = 0xae0; // uint32_t : 1
		constexpr auto bStartSpectDefuseUI = 0xae0; // uint32_t : 1
		constexpr auto LastBombDefuseTimeCount = 0xae4; // int32_t
	}

	namespace n_USystem {
		constexpr auto StaleCacheDays = 0x68; // int32_t
		constexpr auto MaxStaleCacheSize = 0x6c; // int32_t
		constexpr auto MaxOverallCacheSize = 0x70; // int32_t
		constexpr auto PackageSizeSoftLimit = 0x74; // int32_t
		constexpr auto AsyncIOBandwidthLimit = 0x78; // float
		constexpr auto SavePath = 0x7c; // FString
		constexpr auto CachePath = 0x8c; // FString
		constexpr auto CacheExt = 0x9c; // FString
		constexpr auto Paths = 0xac; // TArray<FString>
		constexpr auto SeekFreePCPaths = 0xbc; // TArray<FString>
		constexpr auto ScriptPaths = 0xcc; // TArray<FString>
		constexpr auto FRScriptPaths = 0xdc; // TArray<FString>
		constexpr auto CutdownPaths = 0xec; // TArray<FString>
		constexpr auto Suppress = 0xfc; // TArray<FName>
		constexpr auto Extensions = 0x10c; // TArray<FString>
		constexpr auto SeekFreePCExtensions = 0x11c; // TArray<FString>
		constexpr auto LocalizationPaths = 0x12c; // TArray<FString>
		constexpr auto TextureFileCacheExtension = 0x13c; // FString
		constexpr auto KorScriptPaths = 0x14c; // TArray<FString>
		constexpr auto ForceServerSideOnlyPaths = 0x15c; // TArray<FString>
	}

	namespace n_AEnvironmentVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x280; // FPointer
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x288; // FPointer
		constexpr auto bSplitNavMesh = 0x290; // uint32_t : 1
	}

	namespace n_UCCSBTCombatSwitchWeapon {
		constexpr auto WeaponSlotIndex = 0xcc; // EWeaponGroup
		constexpr auto bc = 0xd0; // ObjectProperty
	}

	namespace n_UCombatSkill_UAVPatrol {
		constexpr auto PatrolTime = 0xc8; // float
		constexpr auto FlightHeight = 0xcc; // float
		constexpr auto UAV = 0xd0; // ObjectProperty
		constexpr auto UAV_ClassName = 0xd8; // FString
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector
		constexpr auto bLockAxes = 0x90; // uint32_t : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags
	}

	namespace n_USeqAct_LevelStreamingBase {
		constexpr auto bMakeVisibleAfterLoad = 0x120; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0x120; // uint32_t : 1
	}

	namespace n_UGameCameraBase {
		constexpr auto PlayerCamera = 0x60; // ObjectProperty
		constexpr auto bResetCameraInterpolation = 0x68; // uint32_t : 1
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x104; // FParticleRandomSeedInfo
	}

	namespace n_UWaveFormBase {
		constexpr auto TheWaveForm = 0x60; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_AttendanceEvent {
		constexpr auto CurrentAttendID = 0xd0; // int32_t
		constexpr auto bShow = 0xd4; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_BaseShop {
		constexpr auto ItemListClass = 0xe4; // ObjectProperty
		constexpr auto ItemDetailinfoClass = 0xec; // ObjectProperty
		constexpr auto SelectedMainTab = 0xf4; // int32_t
		constexpr auto SelectedSubTab = 0xf8; // int32_t
		constexpr auto SelectedInfoTab = 0xfc; // int32_t
		constexpr auto SelectedInfoTabType = 0x100; // int32_t
		constexpr auto CashUnit = 0x104; // int32_t
		constexpr auto priceID = 0x108; // int32_t
		constexpr auto CurrentCodeName = 0x10c; // FString
		constexpr auto CurrentSearchtext = 0x11c; // FString
		constexpr auto CurrentPresetTab = 0x12c; // char
		constexpr auto CurrentClothItemRefIndex = 0x130; // int32_t
		constexpr auto CurrentSelectedItemID = 0x134; // int32_t
		constexpr auto AutoSelectItemID = 0x138; // int32_t
		constexpr auto AutoSelectMainTab = 0x13c; // int32_t
		constexpr auto bSortRepurchaseItems = 0x140; // uint32_t : 1
		constexpr auto bSelectedHotItem = 0x140; // uint32_t : 1
		constexpr auto bSelectedNewItem = 0x140; // uint32_t : 1
		constexpr auto bSelectedCashItem = 0x140; // uint32_t : 1
		constexpr auto bMoveShop = 0x140; // uint32_t : 1
		constexpr auto ShopCodename = 0x144; // FString
		constexpr auto MainTabInfo = 0x154; // TArray<FShopTabStruct>
		constexpr auto SubTabAllInfo = 0x164; // FShopTabStruct
		constexpr auto SubTabWeaponInfo = 0x18c; // TArray<FShopTabStruct>
		constexpr auto SubTabCharInfo = 0x19c; // TArray<FShopTabStruct>
		constexpr auto SubTabItemInfo = 0x1ac; // TArray<FShopTabStruct>
		constexpr auto SubTabPackageInfo = 0x1bc; // TArray<FShopTabStruct>
		constexpr auto ItemTabInfo = 0x1cc; // FInfoTabStruct [0x3]
	}

	namespace n_ACombatAIModePRI {
		constexpr auto LifeCount = 0x520; // int32_t
		constexpr auto MaxLifeCount = 0x524; // int32_t
		constexpr auto bGiveRewardLife = 0x528; // uint32_t : 1
		constexpr auto ConsecutiveCombo = 0x52c; // int32_t
		constexpr auto CurrentStep = 0x530; // int32_t
	}

	namespace n_UCombatFrontEnd_CreateCharacter {
		constexpr auto SendNickList = 0xd0; // TArray<FSendNickInfo>
		constexpr auto SendNick = 0xe0; // FString
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x240; // float
		constexpr auto OuterConeAngle = 0x244; // float
		constexpr auto LightShaftConeAngle = 0x248; // float
		constexpr auto PreviewInnerCone = 0x24c; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x254; // ComponentProperty
		constexpr auto Rotation = 0x25c; // FRotator
	}

	namespace n_UMcpServiceConfig {
		constexpr auto Protocol = 0x60; // FString
		constexpr auto Domain = 0x70; // FString
		constexpr auto TitleId = 0x80; // FString
		constexpr auto AppKey = 0x90; // FString
		constexpr auto AppSecret = 0xa0; // FString
	}

	namespace n_UNxForceFieldComponent {
		constexpr auto Shape = 0x250; // ObjectProperty
		constexpr auto DrawComponent = 0x258; // ComponentProperty
		constexpr auto ExcludeChannel = 0x260; // int32_t
		constexpr auto bForceActive = 0x264; // uint32_t : 1
		constexpr auto bDestroyWhenInactive = 0x264; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x268; // FRBCollisionChannelContainer
		constexpr auto Duration = 0x26c; // float
		constexpr auto ForceField = 0x270; // FPointer
		constexpr auto ConvexMeshes = 0x278; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x288; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x298; // TArray<FPointer>
		constexpr auto SceneIndex = 0x2a8; // int32_t
		constexpr auto ElapsedTime = 0x2ac; // float
		constexpr auto RenderComponent = 0x2b0; // ComponentProperty
		constexpr auto RBPhysScene = 0x2b8; // FPointer
	}

	namespace n_ACombatPVPGame {
		constexpr auto IsPracticeGame = 0x784; // uint32_t : 1
	}

	namespace n_UFracturedStaticMesh {
		constexpr auto CoreMeshScale = 0x1e8; // float
		constexpr auto bSliceUsingCoreCollision = 0x21c; // uint32_t : 1
		constexpr auto FragmentDestroyEffect = 0x220; // ObjectProperty
		constexpr auto FragmentDestroyEffects = 0x228; // TArray<ObjectProperty>
		constexpr auto FragmentDestroyEffectScale = 0x238; // float
		constexpr auto FragmentHealthScale = 0x23c; // float
		constexpr auto FragmentMinHealth = 0x240; // float
		constexpr auto FragmentMaxHealth = 0x244; // float
		constexpr auto bUniformFragmentHealth = 0x248; // uint32_t : 1
		constexpr auto ChunkLinVel = 0x24c; // float
		constexpr auto ChunkAngVel = 0x250; // float
		constexpr auto ChunkLinHorizontalScale = 0x254; // float
		constexpr auto ExplosionVelScale = 0x258; // float
		constexpr auto bCompositeChunksExplodeOnImpact = 0x25c; // uint32_t : 1
		constexpr auto bFixIsolatedChunks = 0x260; // uint32_t : 1
		constexpr auto bAlwaysBreakOffIsolatedIslands = 0x264; // uint32_t : 1
		constexpr auto bSpawnPhysicsChunks = 0x268; // uint32_t : 1
		constexpr auto ChanceOfPhysicsChunk = 0x26c; // float
		constexpr auto ExplosionChanceOfPhysicsChunk = 0x270; // float
		constexpr auto NormalPhysicsChunkScaleMin = 0x274; // float
		constexpr auto NormalPhysicsChunkScaleMax = 0x278; // float
		constexpr auto ExplosionPhysicsChunkScaleMin = 0x27c; // float
		constexpr auto ExplosionPhysicsChunkScaleMax = 0x280; // float
		constexpr auto MinConnectionSupportArea = 0x284; // float
		constexpr auto DynamicOutsideMaterial = 0x288; // ObjectProperty
		constexpr auto LoseChunkOutsideMaterial = 0x290; // ObjectProperty
		constexpr auto OutsideMaterialIndex = 0x298; // int32_t
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto DistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto DistanceType = 0x81; // ESoundDistanceCalc
		constexpr auto RadiusMin = 0x84; // float
		constexpr auto RadiusMax = 0x88; // float
		constexpr auto LPFRadiusMin = 0x8c; // float
		constexpr auto LPFRadiusMax = 0x90; // float
	}

	namespace n_UUIDataStore_GameState {
		constexpr auto __OnRefreshDataFieldValue__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UInteraction {
		constexpr auto __OnReceivedNativeInputKey__Delegate = 0x70; // DelegateProperty
		constexpr auto __OnReceivedNativeInputAxis__Delegate = 0x80; // DelegateProperty
		constexpr auto __OnReceivedNativeInputChar__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnInitialize__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_ARB_LineImpulseActor {
		constexpr auto ImpulseStrength = 0x244; // float
		constexpr auto ImpulseRange = 0x248; // float
		constexpr auto bVelChange = 0x24c; // uint32_t : 1
		constexpr auto bStopAtFirstHit = 0x24c; // uint32_t : 1
		constexpr auto bCauseFracture = 0x24c; // uint32_t : 1
		constexpr auto Arrow = 0x250; // ComponentProperty
		constexpr auto ImpulseCount = 0x258; // char
	}

	namespace n_UAudioComponent {
		constexpr auto SoundCue = 0x88; // ObjectProperty
		constexpr auto CueFirstNode = 0x90; // ObjectProperty
		constexpr auto InstanceParameters = 0x98; // TArray<FAudioComponentParam>
		constexpr auto bUseOwnerLocation = 0xa8; // uint32_t : 1
		constexpr auto bAutoPlay = 0xa8; // uint32_t : 1
		constexpr auto bAutoDestroy = 0xa8; // uint32_t : 1
		constexpr auto bStopWhenOwnerDestroyed = 0xa8; // uint32_t : 1
		constexpr auto bShouldRemainActiveIfDropped = 0xa8; // uint32_t : 1
		constexpr auto bWasOccluded = 0xa8; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xa8; // uint32_t : 1
		constexpr auto bWasPlaying = 0xa8; // uint32_t : 1
		constexpr auto bAllowSpatialization = 0xa8; // uint32_t : 1
		constexpr auto bFinished = 0xa8; // uint32_t : 1
		constexpr auto bApplyRadioFilter = 0xa8; // uint32_t : 1
		constexpr auto bRadioFilterSelected = 0xa8; // uint32_t : 1
		constexpr auto bPreviewComponent = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreForFlushing = 0xa8; // uint32_t : 1
		constexpr auto StereoBleed = 0xac; // float
		constexpr auto LFEBleed = 0xb0; // float
		constexpr auto bEQFilterApplied = 0xb4; // uint32_t : 1
		constexpr auto bAlwaysPlay = 0xb4; // uint32_t : 1
		constexpr auto bIsUISound = 0xb4; // uint32_t : 1
		constexpr auto bIsMusic = 0xb4; // uint32_t : 1
		constexpr auto bReverb = 0xb4; // uint32_t : 1
		constexpr auto bCenterChannelOnly = 0xb4; // uint32_t : 1
		constexpr auto WaveInstances = 0xb8; // TArray<FPointer>
		constexpr auto SoundNodeData = 0xc8; // TArray<char>
		constexpr auto SoundNodeOffsetMap = 0xd8; // TMap<None, None>
		constexpr auto SoundNodeResetWaveMap = 0x120; // FMultiMap_Mirror
		constexpr auto Listener = 0x168; // FPointer
		constexpr auto PlaybackTime = 0x170; // float
		constexpr auto PortalVolume = 0x174; // ObjectProperty
		constexpr auto Location = 0x17c; // FVector
		constexpr auto ComponentLocation = 0x188; // FVector
		constexpr auto LastOwner = 0x194; // ObjectProperty
		constexpr auto SubtitlePriority = 0x19c; // float
		constexpr auto FadeInStartTime = 0x1a0; // float
		constexpr auto FadeInStopTime = 0x1a4; // float
		constexpr auto FadeInTargetVolume = 0x1a8; // float
		constexpr auto FadeOutStartTime = 0x1ac; // float
		constexpr auto FadeOutStopTime = 0x1b0; // float
		constexpr auto FadeOutTargetVolume = 0x1b4; // float
		constexpr auto AdjustVolumeStartTime = 0x1b8; // float
		constexpr auto AdjustVolumeStopTime = 0x1bc; // float
		constexpr auto AdjustVolumeTargetVolume = 0x1c0; // float
		constexpr auto CurrAdjustVolumeTargetVolume = 0x1c4; // float
		constexpr auto CurrentNotifyBufferFinishedHook = 0x1c8; // ObjectProperty
		constexpr auto CurrentLocation = 0x1d0; // FVector
		constexpr auto CurrentVelocity = 0x1dc; // FVector
		constexpr auto CurrentVolume = 0x1e8; // float
		constexpr auto CurrentPitch = 0x1ec; // float
		constexpr auto CurrentHighFrequencyGain = 0x1f0; // float
		constexpr auto CurrentUseSpatialization = 0x1f4; // int32_t
		constexpr auto CurrentNotifyOnLoop = 0x1f8; // int32_t
		constexpr auto OmniRadius = 0x1fc; // float
		constexpr auto CurrentVolumeMultiplier = 0x200; // float
		constexpr auto CurrentPitchMultiplier = 0x204; // float
		constexpr auto CurrentHighFrequencyGainMultiplier = 0x208; // float
		constexpr auto CurrentVoiceCenterChannelVolume = 0x20c; // float
		constexpr auto CurrentRadioFilterVolume = 0x210; // float
		constexpr auto CurrentRadioFilterVolumeThreshold = 0x214; // float
		constexpr auto LastUpdateTime = 0x218; // FDouble
		constexpr auto SourceInteriorVolume = 0x220; // float
		constexpr auto SourceInteriorLPF = 0x224; // float
		constexpr auto CurrentInteriorVolume = 0x228; // float
		constexpr auto CurrentInteriorLPF = 0x22c; // float
		constexpr auto LastLocation = 0x230; // FVector
		constexpr auto LastInteriorSettings = 0x23c; // FInteriorSettings
		constexpr auto LastReverbVolumeIndex = 0x260; // int32_t
		constexpr auto VolumeMultiplier = 0x264; // float
		constexpr auto PitchMultiplier = 0x268; // float
		constexpr auto HighFrequencyGainMultiplier = 0x26c; // float
		constexpr auto OcclusionCheckInterval = 0x270; // float
		constexpr auto LastOcclusionCheckTime = 0x274; // float
		constexpr auto PreviewSoundRadius = 0x278; // ComponentProperty
		constexpr auto __OnAudioFinished__Delegate = 0x280; // DelegateProperty
		constexpr auto __OnQueueSubtitles__Delegate = 0x290; // DelegateProperty
	}

	namespace n_USeqEvent_AISeeEnemy {
		constexpr auto MaxSightDistance = 0x128; // float
	}

	namespace n_ACombatBombsiteVolume {
		constexpr auto BombsiteName = 0x280; // FString
		constexpr auto MapIconType = 0x290; // EObjectIconType
		constexpr auto SiteEffect = 0x294; // ObjectProperty
		constexpr auto SiteEffectSizeRatio = 0x29c; // float
		constexpr auto PlantedBombID = 0x2a0; // int32_t
	}

	namespace n_AKAsset {
		constexpr auto SkeletalMeshComponent = 0x244; // ComponentProperty
		constexpr auto bDamageAppliesImpulse = 0x24c; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x24c; // uint32_t : 1
		constexpr auto bBlockPawns = 0x24c; // uint32_t : 1
		constexpr auto ReplicatedMesh = 0x250; // ObjectProperty
		constexpr auto ReplicatedPhysAsset = 0x258; // ObjectProperty
	}

	namespace n_ACombatProj_Plant {
		constexpr auto Health = 0x3e4; // int32_t
		constexpr auto TeamNumIndex = 0x3e8; // char
		constexpr auto StateName = 0x3ec; // FName
		constexpr auto PlayerID = 0x3f4; // int32_t
		constexpr auto ExplosionDelayTime = 0x3f8; // float
		constexpr auto DirectionalExplosionAngle = 0x3fc; // float
		constexpr auto AmbientExploDamageRadius = 0x400; // float
		constexpr auto DropRotation = 0x404; // FRotator
		constexpr auto VolumeRadius = 0x410; // float
		constexpr auto VolumeOffSetX = 0x414; // float
		constexpr auto VolumeTouchHegiht = 0x418; // float
		constexpr auto LastPawnCheckTime = 0x41c; // float
		constexpr auto bExplosionAngleDrawDebug = 0x420; // uint32_t : 1
		constexpr auto bStartExplosionTimer = 0x420; // uint32_t : 1
		constexpr auto bChangedLocation = 0x420; // uint32_t : 1
		constexpr auto AllyLensFEffect = 0x424; // ComponentProperty
		constexpr auto EnemyLensFEffect = 0x42c; // ComponentProperty
		constexpr auto EffectSocketName = 0x434; // FName
		constexpr auto DetectSound = 0x43c; // ObjectProperty
		constexpr auto TouchCylinder = 0x444; // ComponentProperty
		constexpr auto CheckPawnList = 0x44c; // TArray<ObjectProperty>
	}

	namespace n_AGameCrowdAgentSkeletal {
		constexpr auto SkeletalMeshComponent = 0x4c4; // ComponentProperty
		constexpr auto SpeedBlendNode = 0x4cc; // ObjectProperty
		constexpr auto FullBodySlot = 0x4d4; // ObjectProperty
		constexpr auto ActionSeqNode = 0x4dc; // ObjectProperty
		constexpr auto WalkSeqNode = 0x4e4; // ObjectProperty
		constexpr auto RunSeqNode = 0x4ec; // ObjectProperty
		constexpr auto AgentTree = 0x4f4; // ObjectProperty
		constexpr auto WalkAnimNames = 0x4fc; // TArray<FName>
		constexpr auto RunAnimNames = 0x50c; // TArray<FName>
		constexpr auto IdleAnimNames = 0x51c; // TArray<FName>
		constexpr auto DeathAnimNames = 0x52c; // TArray<FName>
		constexpr auto SpeedBlendStart = 0x53c; // float
		constexpr auto SpeedBlendEnd = 0x540; // float
		constexpr auto AnimVelRate = 0x544; // float
		constexpr auto MaxSpeedBlendChangeSpeed = 0x548; // float
		constexpr auto MoveSyncGroupName = 0x54c; // FName
		constexpr auto Attachments = 0x554; // TArray<FGameCrowdAttachmentList>
		constexpr auto MaxTargetAcquireTime = 0x564; // float
		constexpr auto bUseRootMotionVelocity = 0x568; // uint32_t : 1
		constexpr auto bAllowSkeletonUpdateChangeBasedOnTickResult = 0x568; // uint32_t : 1
		constexpr auto bTickWhenNotVisible = 0x568; // uint32_t : 1
		constexpr auto bIsPlayingIdleAnimation = 0x568; // uint32_t : 1
		constexpr auto bIsPlayingDeathAnimation = 0x568; // uint32_t : 1
		constexpr auto bIsPlayingImportantAnimation = 0x568; // uint32_t : 1
		constexpr auto bAnimateThisTick = 0x568; // uint32_t : 1
		constexpr auto NotVisibleDisableTickTime = 0x56c; // float
		constexpr auto MaxAnimationDistance = 0x570; // float
		constexpr auto MaxAnimationDistanceSq = 0x574; // float
	}

	namespace n_UMobilePlayerInput {
		constexpr auto Touches = 0x2ec; // FTouchData [0x5]
		constexpr auto InteractiveObject = 0x47c; // ObjectProperty
		constexpr auto InteractiveObjectLastTime = 0x484; // FDouble
		constexpr auto MobileInputGroups = 0x48c; // TArray<FMobileInputGroup>
		constexpr auto CurrentMobileGroup = 0x49c; // int32_t
		constexpr auto MobileInputZones = 0x4a0; // TArray<ObjectProperty>
		constexpr auto MobileInputZoneClasses = 0x4b0; // TArray<FMobileInputZoneClassMap>
		constexpr auto MobilePitch = 0x4c0; // float
		constexpr auto MobilePitchCenter = 0x4c4; // float
		constexpr auto MobilePitchMultiplier = 0x4c8; // float
		constexpr auto MobileYaw = 0x4cc; // float
		constexpr auto MobileYawCenter = 0x4d0; // float
		constexpr auto MobileYawMultiplier = 0x4d4; // float
		constexpr auto MobilePitchDeadzoneSize = 0x4d8; // float
		constexpr auto MobileYawDeadzoneSize = 0x4dc; // float
		constexpr auto MobileDoubleTapTime = 0x4e0; // float
		constexpr auto MobileMinHoldForTap = 0x4e4; // float
		constexpr auto MobileTapRepeatTime = 0x4e8; // float
		constexpr auto bAllowTouchesInCinematic = 0x4ec; // uint32_t : 1
		constexpr auto bDisableTouchInput = 0x4ec; // uint32_t : 1
		constexpr auto bAbsoluteTouchLocations = 0x4ec; // uint32_t : 1
		constexpr auto bFakeMobileTouches = 0x4ec; // uint32_t : 1
		constexpr auto bDisableSceneRender = 0x4ec; // uint32_t : 1
		constexpr auto ZoneTimeout = 0x4f0; // float
		constexpr auto MobileMenuStack = 0x4f4; // TArray<ObjectProperty>
		constexpr auto NativeDebugString = 0x504; // FString
		constexpr auto MobileInactiveTime = 0x514; // float
		constexpr auto MobileSeqEventHandlers = 0x518; // TArray<ObjectProperty>
		constexpr auto MobileRawInputSeqEventHandlers = 0x528; // TArray<ObjectProperty>
		constexpr auto MobileViewportOffset = 0x538; // FVector2D
		constexpr auto MobileViewportSize = 0x540; // FVector2D
		constexpr auto __OnTouchNotHandledInMenu__Delegate = 0x548; // DelegateProperty
		constexpr auto __OnPreviewTouch__Delegate = 0x558; // DelegateProperty
		constexpr auto __OnInputTouch__Delegate = 0x568; // DelegateProperty
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x60; // ObjectProperty
		constexpr auto AnimLength = 0x68; // float
		constexpr auto BoundingBox = 0x6c; // FBox
		constexpr auto BasePPSettings = 0x88; // FPostProcessSettings
		constexpr auto BasePPSettingsAlpha = 0x1ec; // float
		constexpr auto BaseFOV = 0x1f0; // float
	}

	namespace n_UCombatStatStorage {
		constexpr auto StatSaveCondition_ClanMode = 0x94; // FStatSaveCondition [0x4]
		constexpr auto StatSaveCondition_Competitive = 0xa4; // FStatSaveCondition [0x4]
	}

	namespace n_UHttpRequestWindows {
		constexpr auto Request = 0x70; // FPointer
		constexpr auto RequestVerb = 0x78; // FString
		constexpr auto RequestURL = 0x88; // FPointer
		constexpr auto Payload = 0x90; // TArray<char>
	}

	namespace n_UShadowMap2D {
		constexpr auto Texture = 0x60; // ObjectProperty
		constexpr auto CoordinateScale = 0x68; // FVector2D
		constexpr auto CoordinateBias = 0x70; // FVector2D
		constexpr auto LightGuid = 0x78; // FGuid
		constexpr auto bIsShadowFactorTexture = 0x88; // uint32_t : 1
		constexpr auto Component = 0x8c; // ComponentProperty
		constexpr auto InstanceIndex = 0x94; // int32_t
	}

	namespace n_UCBUIDataStore_QuickstartSetting {
		constexpr auto CurrentSelections = 0x98; // int32_t [0x5]
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefShopCategory {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto IndexType = 0x80; // int32_t
		constexpr auto ShopCodename = 0x84; // FString
		constexpr auto ServiceType = 0x94; // int32_t
		constexpr auto SubCategoryType = 0x98; // int32_t
		constexpr auto DisplaynameID = 0x9c; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb4; // FRawDistributionFloat
	}

	namespace n_UFractureMaterial {
		constexpr auto FractureEffect = 0x60; // ObjectProperty
		constexpr auto FractureSound = 0x68; // ObjectProperty
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto Exponent = 0xb0; // float
		constexpr auto Normal = 0xb4; // FExpressionInput
	}

	namespace n_UCombatServerRewardData {
		constexpr auto AssistInLife = 0x1b8; // int32_t
		constexpr auto LastMultiKillTime = 0x1bc; // float
		constexpr auto MultiKillCount = 0x1c0; // char
		constexpr auto DamagePerPlayers = 0x1c4; // TArray<FDamagePerPlayer>
		constexpr auto ConsecutiveDeathCount = 0x1d4; // int32_t
		constexpr auto LastDeathTime = 0x1d8; // float
		constexpr auto BestKillCount = 0x1dc; // int32_t
		constexpr auto LastLifeKillCount = 0x1e0; // int32_t
		constexpr auto TeamRevengeTarget = 0x1e4; // ObjectProperty
		constexpr auto RevengeTarget = 0x1ec; // ObjectProperty
	}

	namespace n_ASceneCaptureActor {
		constexpr auto SceneCapture = 0x244; // ComponentProperty
	}

	namespace n_UFracturedSkinnedMeshComponent {
		constexpr auto ComponentSkinResources = 0x31c; // FPointer
		constexpr auto FragmentTransforms = 0x324; // TArray<FMatrix>
		constexpr auto DependentComponents = 0x334; // TArray<ComponentProperty>
		constexpr auto bBecameVisible = 0x344; // uint32_t : 1
		constexpr auto bFragmentTransformsChanged = 0x344; // uint32_t : 1
	}

	namespace n_UCombatHUD_SelectPosition {
		constexpr auto CurrentStatus = 0xc0; // EUIGameStatus
		constexpr auto LastUpdateTime = 0xc4; // float
		constexpr auto bTryShowSelectposition = 0xc8; // uint32_t : 1
		constexpr auto CurrentSelectPositionIndex = 0xcc; // int32_t
		constexpr auto SelectInfo = 0xd0; // ObjectProperty
	}

	namespace n_UCCSBTMoveTo {
		constexpr auto DummyVarToAvoidUnrealScriptCompilerErrorWhenDeclaringAnEnumVarAsFirstVariable = 0xbc; // uint32_t : 1
		constexpr auto Speed = 0xc0; // ECCSMovementSpeed
		constexpr auto Alertness = 0xc1; // ECCSAlertnessState
		constexpr auto MovementType = 0xc2; // ECCSMovementType
	}

	namespace n_UCombatDataTableRefModeGroupBindMode {
		constexpr auto ModeCodeName = 0x6c; // FString
		constexpr auto ModeGroupCodename = 0x7c; // FString
		constexpr auto BetaVersion = 0x8c; // int32_t
	}

	namespace n_ADebugCameraController {
		constexpr auto PrimaryKey = 0x750; // FName
		constexpr auto SecondaryKey = 0x758; // FName
		constexpr auto UnselectKey = 0x760; // FName
		constexpr auto bShowSelectedInfo = 0x768; // uint32_t : 1
		constexpr auto bDrawDebugText = 0x768; // uint32_t : 1
		constexpr auto bIsFrozenRendering = 0x768; // uint32_t : 1
		constexpr auto HUDClass = 0x76c; // AHUD*
		constexpr auto OriginalControllerRef = 0x774; // ObjectProperty
		constexpr auto OriginalPlayer = 0x77c; // ObjectProperty
		constexpr auto DrawFrustum = 0x784; // ComponentProperty
		constexpr auto SelectedActor = 0x78c; // ObjectProperty
		constexpr auto SelectedComponent = 0x794; // ComponentProperty
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x80; // uint32_t : 1
	}

	namespace n_ACombatWeapon_ETC {
		constexpr auto AttachedCameraAnim = 0x1ec8; // FCameraAnimData
	}

	namespace n_AVehicle {
		constexpr auto Driver = 0x558; // ObjectProperty
		constexpr auto bDriving = 0x560; // uint32_t : 1
		constexpr auto bDriverIsVisible = 0x560; // uint32_t : 1
		constexpr auto bAttachDriver = 0x560; // uint32_t : 1
		constexpr auto bTurnInPlace = 0x560; // uint32_t : 1
		constexpr auto bSeparateTurretFocus = 0x560; // uint32_t : 1
		constexpr auto bFollowLookDir = 0x560; // uint32_t : 1
		constexpr auto bHasHandbrake = 0x560; // uint32_t : 1
		constexpr auto bScriptedRise = 0x560; // uint32_t : 1
		constexpr auto bDuckObstacles = 0x560; // uint32_t : 1
		constexpr auto bAvoidReversing = 0x560; // uint32_t : 1
		constexpr auto bRetryPathfindingWithDriver = 0x560; // uint32_t : 1
		constexpr auto bIgnoreStallZ = 0x560; // uint32_t : 1
		constexpr auto bDoExtraNetRelevancyTraces = 0x560; // uint32_t : 1
		constexpr auto ExitPositions = 0x564; // TArray<FVector>
		constexpr auto ExitRadius = 0x574; // float
		constexpr auto ExitOffset = 0x578; // FVector
		constexpr auto Steering = 0x584; // float
		constexpr auto Throttle = 0x588; // float
		constexpr auto Rise = 0x58c; // float
		constexpr auto TargetLocationAdjustment = 0x590; // FVector
		constexpr auto DriverDamageMult = 0x59c; // float
		constexpr auto MomentumMult = 0x5a0; // float
		constexpr auto CrushedDamageType = 0x5a4; // UDamageType*
		constexpr auto MinCrushSpeed = 0x5ac; // float
		constexpr auto ForceCrushPenetration = 0x5b0; // float
		constexpr auto StuckCount = 0x5b4; // char
		constexpr auto ThrottleTime = 0x5b8; // float
		constexpr auto StuckTime = 0x5bc; // float
		constexpr auto OldSteering = 0x5c0; // float
		constexpr auto OnlySteeringStartTime = 0x5c4; // float
		constexpr auto OldThrottle = 0x5c8; // float
		constexpr auto AIMoveCheckTime = 0x5cc; // float
		constexpr auto VehicleMovingTime = 0x5d0; // float
		constexpr auto TurnTime = 0x5d4; // float
	}

	namespace n_USeqAct_SetActiveAnimChild {
		constexpr auto NodeName = 0x108; // FName
		constexpr auto ChildIndex = 0x110; // int32_t
		constexpr auto BlendTime = 0x114; // float
	}

	namespace n_USeqAct_SetWorldAttractorParam {
		constexpr auto Attractor = 0x108; // TArray<ObjectProperty>
		constexpr auto bEnabledField = 0x118; // uint32_t : 1
		constexpr auto bFalloffTypeField = 0x118; // uint32_t : 1
		constexpr auto bFalloffExponentField = 0x118; // uint32_t : 1
		constexpr auto bRangeField = 0x118; // uint32_t : 1
		constexpr auto bStrengthField = 0x118; // uint32_t : 1
		constexpr auto bEnabled = 0x118; // uint32_t : 1
		constexpr auto FalloffType = 0x11c; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x120; // FRawDistributionFloat
		constexpr auto Range = 0x144; // FRawDistributionFloat
		constexpr auto Strength = 0x168; // FRawDistributionFloat
	}

	namespace n_UForceFieldShapeSphere {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_ANavMeshObstacle {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x244; // FPointer
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
		constexpr auto bPreserveInternalGeo = 0x24c; // uint32_t : 1
	}

	namespace n_UCombatItemFXBase {
		constexpr auto ItemFX = 0x60; // FSItemFX [0x2]
	}

	namespace n_UActorFactoryAmbientSound {
		constexpr auto AmbientSoundCue = 0x9c; // ObjectProperty
	}

	namespace n_UGripCondNode_TargetHealth {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto Op = 0xed; // BTConditionOperator
		constexpr auto Health = 0xf0; // int32_t
	}

	namespace n_APlayerStart {
		constexpr auto bEnabled = 0x33c; // uint32_t : 1
		constexpr auto bPrimaryStart = 0x33c; // uint32_t : 1
		constexpr auto bBestStart = 0x33c; // uint32_t : 1
		constexpr auto TeamIndex = 0x340; // int32_t
		constexpr auto Score = 0x344; // int32_t
		constexpr auto SelectionIndex = 0x348; // int32_t
	}

	namespace n_UCombatAnimBlendBaseByZoom {
		constexpr auto Weapon = 0x144; // ObjectProperty
	}

	namespace n_ACombatEvolveGunSupplyPointActorManager {
		constexpr auto InitMakeTime = 0x244; // int32_t
		constexpr auto MakeTime = 0x248; // int32_t
		constexpr auto AlertMakeTime = 0x24c; // int32_t
		constexpr auto JackpotMinTime = 0x250; // int32_t
		constexpr auto JackpotMaxTime = 0x254; // int32_t
		constexpr auto JackpotMinPercent = 0x258; // int32_t
		constexpr auto JackpotMaxPercent = 0x25c; // int32_t
		constexpr auto SupplyActorList = 0x260; // TArray<ObjectProperty>
		constexpr auto nextIndex = 0x270; // int32_t
		constexpr auto bNextJackpot = 0x274; // uint32_t : 1
	}

	namespace n_UMcpClashMobBase {
		constexpr auto McpClashMobClassName = 0x78; // FString
		constexpr auto __OnQueryChallengeListComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDownloadChallengeFileComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnAcceptChallengeComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryChallengeUserStatusComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserProgressComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserRewardComplete__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UCombatDataTableRefDrop {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto RefPickupCodeName = 0x80; // FString [0x5]
		constexpr auto DropRate = 0xd0; // int32_t [0x5]
	}

	namespace n_AAIDebugCameraHUD {
		constexpr auto CrossHairLength = 0x568; // int32_t
		constexpr auto LadderVolumeArray = 0x56c; // TArray<ObjectProperty>
		constexpr auto bInit = 0x57c; // uint32_t : 1
	}

	namespace n_USeqEvent_HudRenderText {
		constexpr auto DisplayFont = 0x140; // ObjectProperty
		constexpr auto DisplayColor = 0x148; // FColor
		constexpr auto DisplayLocation = 0x14c; // FVector
		constexpr auto DisplayText = 0x158; // FString
		constexpr auto TextDrawMethod = 0x168; // ETextDrawMethod
	}

	namespace n_UGFxAction_GetVariable {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // uint32_t : 1
	}

	namespace n_UForceFieldShapeCapsule {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UCombatHUD_TutorialLeveObject {
		constexpr auto TargetObject = 0x1b0; // ObjectProperty
		constexpr auto IconFrameLabels = 0x1b8; // TArray<FString>
	}

	namespace n_UCombatHUD_AIMissionActor {
		constexpr auto TargetActor = 0x1b0; // ObjectProperty
		constexpr auto LastDisplayHealth = 0x1b8; // int32_t
		constexpr auto LastUIState = 0x1bc; // MissionActorUIState
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0xb0; // ObjectProperty
		constexpr auto FunctionInputs = 0xb8; // TArray<FFunctionExpressionInput>
		constexpr auto FunctionOutputs = 0xc8; // TArray<FFunctionExpressionOutput>
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0xa0; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0xb0; // uint32_t : 1
		constexpr auto bActivateWithJustAttachedFlag = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_ACombatDemGameReplicationInfo {
		constexpr auto Bombsites = 0x380; // TArray<ObjectProperty>
		constexpr auto Bombs = 0x390; // TArray<ObjectProperty>
		constexpr auto TotalBombsites = 0x3a0; // int32_t
		constexpr auto TotalBombs = 0x3a4; // int32_t
		constexpr auto PlantedBombSettingTime = 0x3a8; // WordProperty
	}

	namespace n_UMaterialExpressionTextureSampleLOD {
		constexpr auto TextureLODFactor = 0x120; // float
		constexpr auto LODFactor = 0x124; // FExpressionInput
	}

	namespace n_UProcBuildingRuleset {
		constexpr auto RootRule = 0x60; // ObjectProperty
		constexpr auto bBeingEdited = 0x68; // uint32_t : 1
		constexpr auto bEnableInteriorTexture = 0x68; // uint32_t : 1
		constexpr auto bLODOnlyRoof = 0x68; // uint32_t : 1
		constexpr auto bPickRandomSwatch = 0x68; // uint32_t : 1
		constexpr auto DefaultRoofMaterial = 0x6c; // ObjectProperty
		constexpr auto DefaultFloorMaterial = 0x74; // ObjectProperty
		constexpr auto DefaultNonRectWallMaterial = 0x7c; // ObjectProperty
		constexpr auto RoofZOffset = 0x84; // float
		constexpr auto NotRoofZOffset = 0x88; // float
		constexpr auto FloorZOffset = 0x8c; // float
		constexpr auto NotFloorZOffset = 0x90; // float
		constexpr auto RoofPolyInset = 0x94; // float
		constexpr auto FloorPolyInset = 0x98; // float
		constexpr auto BuildingLODSpecular = 0x9c; // float
		constexpr auto RoofEdgeScopeRaise = 0xa0; // float
		constexpr auto LODCubemap = 0xa4; // ObjectProperty
		constexpr auto InteriorTexture = 0xac; // ObjectProperty
		constexpr auto Variations = 0xb4; // TArray<FPBVariationInfo>
		constexpr auto ParamSwatches = 0xc4; // TArray<FPBParamSwatch>
	}

	namespace n_UCameraModifier {
		constexpr auto bDisabled = 0x60; // uint32_t : 1
		constexpr auto bPendingDisable = 0x60; // uint32_t : 1
		constexpr auto bExclusive = 0x60; // uint32_t : 1
		constexpr auto bDebug = 0x60; // uint32_t : 1
		constexpr auto CameraOwner = 0x64; // ObjectProperty
		constexpr auto Priority = 0x6c; // char
		constexpr auto AlphaInTime = 0x70; // float
		constexpr auto AlphaOutTime = 0x74; // float
		constexpr auto Alpha = 0x78; // float
		constexpr auto TargetAlpha = 0x7c; // float
	}

	namespace n_UCombatDataTableRefMatchMakingByRating {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto SectionStartRating = 0x7c; // int32_t
		constexpr auto RatingAllowRange = 0x80; // int32_t
		constexpr auto RatingAllowTime = 0x84; // int32_t
		constexpr auto ExtendRating = 0x88; // int32_t
		constexpr auto ExtendMaxRating = 0x8c; // int32_t
		constexpr auto ExtendInterval = 0x90; // int32_t
		constexpr auto EmergencyTime = 0x94; // int32_t
		constexpr auto ShowStringTime = 0x98; // int32_t
	}

	namespace n_AGameCheatManager {
		constexpr auto DebugCameraControllerRef = 0x27c; // ObjectProperty
		constexpr auto DebugCameraControllerClass = 0x284; // ADebugCameraController*
		constexpr auto DebugCameraControllerClassName = 0x28c; // FString
	}

	namespace n_UMultiCueSplineAudioComponent {
		constexpr auto SoundSlots = 0x2b8; // TArray<FMultiCueSplineSoundSlot>
		constexpr auto CurrentSlotIndex = 0x2c8; // int32_t
	}

	namespace n_UParticleModuleTypeDataTrail {
		constexpr auto RenderGeometry = 0x68; // uint32_t : 1
		constexpr auto RenderLines = 0x68; // uint32_t : 1
		constexpr auto RenderTessellation = 0x68; // uint32_t : 1
		constexpr auto Tapered = 0x68; // uint32_t : 1
		constexpr auto SpawnByDistance = 0x68; // uint32_t : 1
		constexpr auto TessellationFactor = 0x6c; // int32_t
		constexpr auto Tension = 0x70; // FRawDistributionFloat
		constexpr auto SpawnDistance = 0x94; // FVector
	}

	namespace n_USeqAct_ActorFactory {
		constexpr auto bEnabled = 0x120; // uint32_t : 1
		constexpr auto bIsSpawning = 0x120; // uint32_t : 1
		constexpr auto bCheckSpawnCollision = 0x120; // uint32_t : 1
		constexpr auto Factory = 0x124; // ObjectProperty
		constexpr auto PointSelection = 0x12c; // EPointSelection
		constexpr auto SpawnPoints = 0x130; // TArray<ObjectProperty>
		constexpr auto SpawnLocations = 0x140; // TArray<FVector>
		constexpr auto SpawnOrientations = 0x150; // TArray<FVector>
		constexpr auto SpawnCount = 0x160; // int32_t
		constexpr auto SpawnDelay = 0x164; // float
		constexpr auto LastSpawnIdx = 0x168; // int32_t
		constexpr auto CurrentSpawnIdx = 0x16c; // int32_t
		constexpr auto SpawnedCount = 0x170; // int32_t
		constexpr auto RemainingDelay = 0x174; // float
	}

	namespace n_UDOFEffect {
		constexpr auto FalloffExponent = 0x88; // float
		constexpr auto BlurKernelSize = 0x8c; // float
		constexpr auto MaxNearBlurAmount = 0x90; // float
		constexpr auto MinBlurAmount = 0x94; // float
		constexpr auto MaxFarBlurAmount = 0x98; // float
		constexpr auto FocusType = 0x9c; // EFocusType
		constexpr auto FocusInnerRadius = 0xa0; // float
		constexpr auto FocusDistance = 0xa4; // float
		constexpr auto FocusPosition = 0xa8; // FVector
	}

	namespace n_UCombatHUD_MarkerContainer {
		constexpr auto AttachLayerMC = 0xc0; // ObjectProperty
		constexpr auto Markers = 0xc8; // TArray<FMarkerObjectData>
		constexpr auto PendingMarkerList = 0xd8; // TArray<FPendingMarkerData>
	}

	namespace n_UAnimationCompressionAlgorithm {
		constexpr auto ApplyChanges = 0x60; // uint32_t : 1
		constexpr auto bNeedsSkeleton = 0x60; // uint32_t : 1
		constexpr auto Description = 0x64; // FString
		constexpr auto TranslationCompressionFormat = 0x74; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x75; // AnimationCompressionFormat
	}

	namespace n_UCombatOnlineMetaphors {
		constexpr auto BUFF_ADDMAINAMMO_MIN = 0x60; // float
		constexpr auto BUFF_ADDMAINAMMO_MAX = 0x64; // float
		constexpr auto BUFF_ADDSUBAMMO_MIN = 0x68; // float
		constexpr auto BUFF_ADDSUBAMMO_MAX = 0x6c; // float
		constexpr auto BUFF_RELOADING_RATE_MIN = 0x70; // float
		constexpr auto BUFF_RELOADING_RATE_MAX = 0x74; // float
		constexpr auto BUFF_WEAPONCHANGE_RATE_MIN = 0x78; // float
		constexpr auto BUFF_WEAPONCHANGE_RATE_MAX = 0x7c; // float
		constexpr auto BUFF_MAXAUTOCUREHEALTH_MIN = 0x80; // float
		constexpr auto BUFF_MAXAUTOCUREHEALTH_MAX = 0x84; // float
		constexpr auto BUFF_HEALTHCURE_RATE_MIN = 0x88; // float
		constexpr auto BUFF_HEALTHCURE_RATE_MAX = 0x8c; // float
		constexpr auto BUFF_CROUCHSPEED_RATE_MIN = 0x90; // float
		constexpr auto BUFF_CROUCHSPEED_RATE_MAX = 0x94; // float
		constexpr auto BUFF_FPSSPEED_RATE_MIN = 0x98; // float
		constexpr auto BUFF_FPSSPEED_RATE_MAX = 0x9c; // float
		constexpr auto BUFF_ACCELATION_RATE_MIN = 0xa0; // float
		constexpr auto BUFF_ACCELATION_RATE_MAX = 0xa4; // float
		constexpr auto BUFF_RUNSPEED_RATE_MIN = 0xa8; // float
		constexpr auto BUFF_RUNSPEED_RATE_MAX = 0xac; // float
		constexpr auto BUFF_SPRINTSPEED_RATE_MIN = 0xb0; // float
		constexpr auto BUFF_SPRINTSPEED_RATE_MAX = 0xb4; // float
		constexpr auto BUFF_DETAILEDRADAR_DISTANCE_MIN = 0xb8; // float
		constexpr auto BUFF_DETAILEDRADAR_DISTANCE_MAX = 0xbc; // float
		constexpr auto BUFF_RADAR_RANGE_MIN = 0xc0; // float
		constexpr auto BUFF_RADAR_RANGE_MAX = 0xc4; // float
		constexpr auto BUFF_GUNATTACK_RATE_MIN = 0xc8; // float
		constexpr auto BUFF_GUNATTACK_RATE_MAX = 0xcc; // float
		constexpr auto BUFF_GUNGUARD_RATE_MIN = 0xd0; // float
		constexpr auto BUFF_GUNGUARD_RATE_MAX = 0xd4; // float
		constexpr auto BUFF_MELEEATTACK_RATE_MIN = 0xd8; // float
		constexpr auto BUFF_MELEEATTACK_RATE_MAX = 0xdc; // float
		constexpr auto BUFF_MELEEGUARD_RATE_MIN = 0xe0; // float
		constexpr auto BUFF_MELEEGUARD_RATE_MAX = 0xe4; // float
		constexpr auto BUFF_EXPLOSIVEATTACK_RATE_MIN = 0xe8; // float
		constexpr auto BUFF_EXPLOSIVEATTACK_RATE_MAX = 0xec; // float
		constexpr auto BUFF_EXPLOSIVEGUARD_RATE_MIN = 0xf0; // float
		constexpr auto BUFF_EXPLOSIVEGUARD_RATE_MAX = 0xf4; // float
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto SourceTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto bSourceAbsolute = 0x74; // uint32_t : 1
		constexpr auto bLockSource = 0x74; // uint32_t : 1
		constexpr auto bLockSourceTangent = 0x74; // uint32_t : 1
		constexpr auto bLockSourceStength = 0x74; // uint32_t : 1
		constexpr auto Source = 0x78; // FRawDistributionVector
		constexpr auto SourceTangent = 0x9c; // FRawDistributionVector
		constexpr auto SourceStrength = 0xc0; // FRawDistributionFloat
	}

	namespace n_AGameAIController {
		constexpr auto CommandList = 0x454; // ObjectProperty
		constexpr auto bHasRunawayCommandList = 0x45c; // uint32_t : 1
		constexpr auto bAILogging = 0x45c; // uint32_t : 1
		constexpr auto bAILogToWindow = 0x45c; // uint32_t : 1
		constexpr auto bFlushAILogEachLine = 0x45c; // uint32_t : 1
		constexpr auto bMapBasedLogName = 0x45c; // uint32_t : 1
		constexpr auto bAIDrawDebug = 0x45c; // uint32_t : 1
		constexpr auto bAIBroken = 0x45c; // uint32_t : 1
		constexpr auto AILogFile = 0x460; // ObjectProperty
		constexpr auto DebugTextMaxLen = 0x468; // float
		constexpr auto CommandHistory = 0x46c; // TArray<FAICmdHistoryItem>
		constexpr auto CommandHistoryNum = 0x47c; // int32_t
		constexpr auto AILogFilter = 0x480; // TArray<FName>
		constexpr auto DemoActionString = 0x490; // FString
	}

	namespace n_UAnimNodeScalePlayRate {
		constexpr auto ScaleByValue = 0x100; // float
	}

	namespace n_UCombatLobbyTransaction {
		constexpr auto ChannelIndex = 0x60; // int32_t
		constexpr auto ChannelPropertyNumber = 0x64; // int32_t
		constexpr auto MatchRoomInfoMap = 0x68; // TMap<None, None>
		constexpr auto UpdateMatchRoom = 0xb0; // FUpdateMatchRoomInfo
		constexpr auto LookInMatchRoomUserList = 0xe0; // TArray<FLookInMatchRoomUserInfo>
	}

	namespace n_ACombatAIGameReplicationInfo {
		constexpr auto MissionActor = 0x380; // ObjectProperty
		constexpr auto WaveCount = 0x388; // int32_t
		constexpr auto WaveStartTime = 0x38c; // int32_t
		constexpr auto PlayTime = 0x390; // int32_t
		constexpr auto CurrentWaveRemainBotCount = 0x394; // int32_t
		constexpr auto RepAimRocket = 0x398; // FSAimRocket
		constexpr auto SeqAct_ProjAttackArray = 0x3d4; // TArray<ObjectProperty>
		constexpr auto bInitProjAttackSequence = 0x3e4; // uint32_t : 1
		constexpr auto RewardRank = 0x3e8; // EAIRewardRank
		constexpr auto ValidComboTime = 0x3ec; // int32_t
		constexpr auto ComboList = 0x3f0; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_UApexGenericAsset {
		constexpr auto MApexAsset = 0x80; // FPointer
	}

	namespace n_USeqAct_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x108; // ObjectProperty
		constexpr auto FaceFXGroupName = 0x110; // FString
		constexpr auto FaceFXAnimName = 0x120; // FString
		constexpr auto SoundCueToPlay = 0x130; // ObjectProperty
	}

	namespace n_ANxForceFieldRadial {
		constexpr auto Shape = 0x298; // ObjectProperty
		constexpr auto DrawComponent = 0x2a0; // ComponentProperty
		constexpr auto ForceStrength = 0x2a8; // float
		constexpr auto ForceRadius = 0x2ac; // float
		constexpr auto SelfRotationStrength = 0x2b0; // float
		constexpr auto ForceFalloff = 0x2b4; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2b8; // FPointer
	}

	namespace n_USeqEvent_AnalogInput {
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_AAIBeacon {
		constexpr auto EnableAITypeIndex = 0x33c; // char
		constexpr auto EnableTeamIndex = 0x33d; // EAITeamInfo
		constexpr auto EnableMaxClaim = 0x340; // int32_t
		constexpr auto ClaimAIArray = 0x344; // TArray<ObjectProperty>
	}

	namespace n_UCombatAudioChannelSystem {
		constexpr auto ChannelMap = 0x60; // TMap<None, None>
		constexpr auto Channels = 0xa8; // TArray<FChannelData>
	}

	namespace n_UCombatAIGameMovie {
		constexpr auto WaveModePlayerList = 0xad0; // ObjectProperty
		constexpr auto WaveModePlayTime = 0xad8; // ObjectProperty
		constexpr auto Message_WarningMC = 0xae0; // ObjectProperty
		constexpr auto LastPlayTime = 0xae8; // int32_t
		constexpr auto bCanUpdateOrder = 0xaec; // uint32_t : 1
		constexpr auto bNeedUpdateOrder = 0xaec; // uint32_t : 1
		constexpr auto PlayerListData = 0xaf0; // TArray<FPlayerListInfo>
		constexpr auto RoundStatusOption = 0xb00; // ObjectProperty
		constexpr auto LevelObjectContainer = 0xb08; // ObjectProperty
		constexpr auto AIDefenseKillComboMC = 0xb10; // ObjectProperty
	}

	namespace n_UUIMapSummary {
		constexpr auto MapName = 0x94; // FString
		constexpr auto ScreenshotPathName = 0xa4; // FString
		constexpr auto DisplayName = 0xb4; // FString
		constexpr auto Description = 0xc4; // FString
	}

	namespace n_UCombatDataTableRefFrontEndMode {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto ActivationType = 0x7c; // char
	}

	namespace n_UCombatMeshBuilder {
		constexpr auto MeshCompositionType = 0x60; // EMeshCompositionType
	}

	namespace n_UCombatHUD_IFFContainer {
		constexpr auto AttachLayerMC = 0xc0; // ObjectProperty
		constexpr auto IFFs = 0xc8; // TArray<FIFFObjectData>
		constexpr auto IFFObjectCreateRange = 0xd8; // int32_t
	}

	namespace n_UGameCrowdAgentBehavior {
		constexpr auto MyEventType = 0x60; // ECrowdBehaviorEvent
		constexpr auto ViralBehaviorEvent = 0x61; // ECrowdBehaviorEvent
		constexpr auto DurationOfBehavior = 0x64; // float
		constexpr auto TimeUntilStopBehavior = 0x68; // float
		constexpr auto bIdleBehavior = 0x6c; // uint32_t : 1
		constexpr auto bFaceActionTargetFirst = 0x6c; // uint32_t : 1
		constexpr auto bIsViralBehavior = 0x6c; // uint32_t : 1
		constexpr auto bPassOnIsViralBehaviorFlag = 0x6c; // uint32_t : 1
		constexpr auto ActionTarget = 0x70; // ObjectProperty
		constexpr auto MaxPlayerDistance = 0x78; // float
		constexpr auto ViralRadius = 0x7c; // float
		constexpr auto DurationBeforeBecomesViral = 0x80; // float
		constexpr auto TimeToBecomeViral = 0x84; // float
		constexpr auto DurationOfViralBehaviorPropagation = 0x88; // float
		constexpr auto TimeToStopPropagatingViralBehavior = 0x8c; // float
		constexpr auto MyAgent = 0x90; // ObjectProperty
		constexpr auto DebugBehaviorColor = 0x98; // FColor
	}

	namespace n_UOnlineNewsInterfaceMcp {
		constexpr auto NewsItems = 0x80; // TArray<FNewsCacheEntry>
		constexpr auto ReadNewsDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto bNeedsTicking = 0xa0; // uint32_t : 1
		constexpr auto __OnReadNewsCompleted__Delegate = 0xa4; // DelegateProperty
	}

	namespace n_AGameCrowdDestination {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x250; // FPointer
		constexpr auto bKillWhenReached = 0x258; // uint32_t : 1
		constexpr auto bAllowAsPreviousDestination = 0x258; // uint32_t : 1
		constexpr auto bAvoidWhenPanicked = 0x258; // uint32_t : 1
		constexpr auto bSkipBehaviorIfPanicked = 0x258; // uint32_t : 1
		constexpr auto bFleeDestination = 0x258; // uint32_t : 1
		constexpr auto bMustReachExactly = 0x258; // uint32_t : 1
		constexpr auto bHasRestrictions = 0x258; // uint32_t : 1
		constexpr auto bAllowsSpawning = 0x258; // uint32_t : 1
		constexpr auto bAllowCloudSpawning = 0x258; // uint32_t : 1
		constexpr auto bAllowVisibleSpawning = 0x258; // uint32_t : 1
		constexpr auto bLineSpawner = 0x258; // uint32_t : 1
		constexpr auto bSpawnAtEdge = 0x258; // uint32_t : 1
		constexpr auto bSoftPerimeter = 0x258; // uint32_t : 1
		constexpr auto bIsVisible = 0x258; // uint32_t : 1
		constexpr auto bWillBeVisible = 0x258; // uint32_t : 1
		constexpr auto bCanSpawnHereNow = 0x258; // uint32_t : 1
		constexpr auto bIsBeyondSpawnDistance = 0x258; // uint32_t : 1
		constexpr auto bAdjacentToVisibleNode = 0x258; // uint32_t : 1
		constexpr auto bHasNavigationMesh = 0x258; // uint32_t : 1
		constexpr auto NextDestinations = 0x25c; // TArray<ObjectProperty>
		constexpr auto QueueHead = 0x26c; // ObjectProperty
		constexpr auto Capacity = 0x274; // int32_t
		constexpr auto Frequency = 0x278; // float
		constexpr auto CustomerCount = 0x27c; // int32_t
		constexpr auto SupportedAgentClasses = 0x280; // TArray<AGameCrowdAgent*>
		constexpr auto SupportedArchetypes = 0x290; // TArray<ObjectProperty>
		constexpr auto RestrictedAgentClasses = 0x2a0; // TArray<AGameCrowdAgent*>
		constexpr auto RestrictedArchetypes = 0x2b0; // TArray<ObjectProperty>
		constexpr auto ExactReachTolerance = 0x2c0; // float
		constexpr auto InteractionTag = 0x2c4; // FName
		constexpr auto InteractionDelay = 0x2cc; // float
		constexpr auto ReachedBehaviors = 0x2d0; // TArray<FBehaviorEntry>
		constexpr auto AgentEnRoute = 0x2e0; // ObjectProperty
		constexpr auto Priority = 0x2e8; // float
		constexpr auto LastSpawnTime = 0x2ec; // float
		constexpr auto MyPopMgr = 0x2f0; // ObjectProperty
	}

	namespace n_AGamePlayerController {
		constexpr auto bWarnCrowdMembers = 0x740; // uint32_t : 1
		constexpr auto bDebugCrowdAwareness = 0x740; // uint32_t : 1
		constexpr auto bIsWarmupPaused = 0x740; // uint32_t : 1
		constexpr auto AgentAwareRadius = 0x744; // float
		constexpr auto CurrentSoundMode = 0x748; // FName
	}

	namespace n_AComBatPC_AIGame {
		constexpr auto AIAggroMeSound = 0xbe4; // ObjectProperty
		constexpr auto AIAggroMeReleaseSound = 0xbec; // ObjectProperty
	}

	namespace n_UMaterialExpressionTextureSampleParameterEnvCube {
		constexpr auto BoundingType = 0x178; // EEnvCubeType
	}

	namespace n_ANxCylindricalForceFieldCapsule {
		constexpr auto RenderComponent = 0x2c8; // ComponentProperty
	}

	namespace n_UCombatDataTableRefItemDetailinfo {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Accuracy = 0x80; // int32_t
		constexpr auto Damage = 0x84; // int32_t
		constexpr auto Range = 0x88; // int32_t
		constexpr auto RateOfFire = 0x8c; // int32_t
		constexpr auto Recoil = 0x90; // int32_t
		constexpr auto Mobility = 0x94; // int32_t
		constexpr auto CurrentAmmo = 0x98; // int32_t
		constexpr auto ReserveAmmo = 0x9c; // int32_t
		constexpr auto AddImage_Path = 0xa0; // FString [0xa]
		constexpr auto AddImage_ID = 0x140; // int32_t [0xa]
		constexpr auto AddImage_NameID = 0x168; // int32_t [0xa]
		constexpr auto AddImage_DescID = 0x190; // int32_t [0xa]
	}

	namespace n_UUIDataStore_OnlineGameSettings {
		constexpr auto GameSettingsCfgList = 0x98; // TArray<FGameSettingsCfg>
		constexpr auto SettingsProviderClass = 0xa8; // UUIDataProvider_Settings*
		constexpr auto SelectedIndex = 0xb0; // int32_t
	}

	namespace n_ATerrain {
		constexpr auto Heights = 0x244; // TArray<FTerrainHeight>
		constexpr auto InfoData = 0x254; // TArray<FTerrainInfoData>
		constexpr auto Layers = 0x264; // TArray<FTerrainLayer>
		constexpr auto NormalMapLayer = 0x274; // int32_t
		constexpr auto DecoLayers = 0x278; // TArray<FTerrainDecoLayer>
		constexpr auto AlphaMaps = 0x288; // TArray<FAlphaMap>
		constexpr auto TerrainComponents = 0x298; // TArray<ComponentProperty>
		constexpr auto NumSectionsX = 0x2a8; // int32_t
		constexpr auto NumSectionsY = 0x2ac; // int32_t
		constexpr auto WeightedMaterials = 0x2b0; // TArray<FTerrainWeightedMaterial>
		constexpr auto WeightedTextureMaps = 0x2c0; // TArray<ObjectProperty>
		constexpr auto MaxTesselationLevel = 0x2d0; // int32_t
		constexpr auto MinTessellationLevel = 0x2d4; // int32_t
		constexpr auto TesselationDistanceScale = 0x2d8; // float
		constexpr auto TessellationCheckDistance = 0x2dc; // float
		constexpr auto CollisionTesselationLevel = 0x2e0; // int32_t
		constexpr auto CachedTerrainMaterials = 0x2e4; // FCachedTerrainMaterialArray [0x2]
		constexpr auto NumVerticesX = 0x304; // int32_t
		constexpr auto NumVerticesY = 0x308; // int32_t
		constexpr auto NumPatchesX = 0x30c; // int32_t
		constexpr auto NumPatchesY = 0x310; // int32_t
		constexpr auto MaxComponentSize = 0x314; // int32_t
		constexpr auto StaticLightingResolution = 0x318; // int32_t
		constexpr auto bIsOverridingLightResolution = 0x31c; // uint32_t : 1
		constexpr auto bBilinearFilterLightmapGeneration = 0x31c; // uint32_t : 1
		constexpr auto bCastShadow = 0x31c; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x31c; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x31c; // uint32_t : 1
		constexpr auto bEnableSpecular = 0x31c; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0x31c; // uint32_t : 1
		constexpr auto bAllowRigidBodyUnderneath = 0x31c; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x31c; // uint32_t : 1
		constexpr auto bMorphingEnabled = 0x31c; // uint32_t : 1
		constexpr auto bMorphingGradientsEnabled = 0x31c; // uint32_t : 1
		constexpr auto bLocked = 0x31c; // uint32_t : 1
		constexpr auto bHeightmapLocked = 0x31c; // uint32_t : 1
		constexpr auto bShowingCollision = 0x31c; // uint32_t : 1
		constexpr auto bUseWorldOriginTextureUVs = 0x31c; // uint32_t : 1
		constexpr auto bShowWireframe = 0x31c; // uint32_t : 1
		constexpr auto TerrainPhysMaterialOverride = 0x320; // ObjectProperty
		constexpr auto LightingChannels = 0x328; // FLightingChannelContainer
		constexpr auto LightmassSettings = 0x32c; // FLightmassPrimitiveSettings
		constexpr auto ReleaseResourcesFence = 0x348; // FPointer
		constexpr auto EditorTessellationLevel = 0x350; // int32_t
		constexpr auto SelectedVertices = 0x354; // TArray<FSelectedTerrainVertex>
		constexpr auto WireframeColor = 0x364; // FColor
	}

	namespace n_UPBRuleNodeSize {
		constexpr auto SizeAxis = 0x70; // EProcBuildingAxis
		constexpr auto DecisionSize = 0x74; // float
		constexpr auto bUseTopLevelScopeSize = 0x78; // uint32_t : 1
	}

	namespace n_UAnimNotify_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x60; // ObjectProperty
		constexpr auto GroupName = 0x68; // FString
		constexpr auto AnimName = 0x78; // FString
		constexpr auto SoundCueToPlay = 0x88; // ObjectProperty
		constexpr auto bOverridePlayingAnim = 0x90; // uint32_t : 1
		constexpr auto PlayFrequency = 0x94; // float
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UCombatInGameLocalSoundGroup_Base {
		constexpr auto CountDownSound = 0x70; // ObjectProperty
		constexpr auto RespawnSound = 0x78; // ObjectProperty
		constexpr auto PresetChangeInfo = 0x80; // ObjectProperty [0x3]
		constexpr auto TeamChangeSound = 0x98; // ObjectProperty
		constexpr auto TeamSoundDataList = 0xa0; // TArray<FTeamSoundData>
		constexpr auto RadioWindowOpenSound = 0xb0; // ObjectProperty
		constexpr auto RadioWindowCloseSound = 0xb8; // ObjectProperty
		constexpr auto SkillBuySound_Success = 0xc0; // ObjectProperty
		constexpr auto SkillBuySound_Fail = 0xc8; // ObjectProperty
		constexpr auto SelectPlayerClass = 0xd0; // ObjectProperty
		constexpr auto HostageVocieList = 0xd8; // ObjectProperty [0x6]
		constexpr auto AnnounceSoundList = 0x108; // ObjectProperty [0x3]
		constexpr auto C4BombPickupSound = 0x120; // ObjectProperty
		constexpr auto C4BombDropSound = 0x128; // ObjectProperty
		constexpr auto C4BombPlantBGM = 0x130; // ObjectProperty
		constexpr auto ModeScoreGettingSound = 0x138; // ObjectProperty
		constexpr auto SpearTacRespawn = 0x140; // ObjectProperty
		constexpr auto StartWaveSound = 0x148; // ObjectProperty
		constexpr auto SuccessedWaveSound = 0x150; // ObjectProperty
		constexpr auto FailedWaveSound = 0x158; // ObjectProperty
		constexpr auto WarningSound = 0x160; // ObjectProperty
		constexpr auto ExplotionBeepSound = 0x168; // ObjectProperty
		constexpr auto ExplosionBeepSoundComponent = 0x170; // ComponentProperty
		constexpr auto ChangedViewTargetOnSpectator = 0x178; // ObjectProperty
		constexpr auto AIRewardRankSound = 0x180; // TArray<ObjectProperty>
		constexpr auto SupplyDestroySound = 0x190; // ObjectProperty
		constexpr auto SupplyCreateSoonSound = 0x198; // ObjectProperty
		constexpr auto SupplyCreateSound = 0x1a0; // ObjectProperty
	}

	namespace n_UFluidSurfaceComponent {
		constexpr auto FluidMaterial = 0x250; // ObjectProperty
		constexpr auto LightMapResolution = 0x258; // int32_t
		constexpr auto LightmassSettings = 0x25c; // FLightmassPrimitiveSettings
		constexpr auto EnableSimulation = 0x278; // uint32_t : 1
		constexpr auto EnableDetail = 0x278; // uint32_t : 1
		constexpr auto bTiling = 0x278; // uint32_t : 1
		constexpr auto bPause = 0x278; // uint32_t : 1
		constexpr auto bShowSimulationNormals = 0x278; // uint32_t : 1
		constexpr auto bShowSimulationPosition = 0x278; // uint32_t : 1
		constexpr auto bShowDetailNormals = 0x278; // uint32_t : 1
		constexpr auto bShowDetailPosition = 0x278; // uint32_t : 1
		constexpr auto bShowFluidSimulation = 0x278; // uint32_t : 1
		constexpr auto bShowFluidDetail = 0x278; // uint32_t : 1
		constexpr auto bTestRipple = 0x278; // uint32_t : 1
		constexpr auto bTestRippleCenterOnDetail = 0x278; // uint32_t : 1
		constexpr auto SimulationQuadsX = 0x27c; // int32_t
		constexpr auto SimulationQuadsY = 0x280; // int32_t
		constexpr auto GridSpacing = 0x284; // float
		constexpr auto GridSpacingLowRes = 0x288; // float
		constexpr auto TargetSimulation = 0x28c; // ObjectProperty
		constexpr auto GPUTessellationFactor = 0x294; // float
		constexpr auto FluidDamping = 0x298; // float
		constexpr auto FluidTravelSpeed = 0x29c; // float
		constexpr auto FluidHeightScale = 0x2a0; // float
		constexpr auto FluidUpdateRate = 0x2a4; // float
		constexpr auto ForceImpact = 0x2a8; // float
		constexpr auto ForceContinuous = 0x2ac; // float
		constexpr auto LightingContrast = 0x2b0; // float
		constexpr auto TargetDetail = 0x2b4; // ObjectProperty
		constexpr auto DeactivationDistance = 0x2bc; // float
		constexpr auto DetailResolution = 0x2c0; // int32_t
		constexpr auto DetailSize = 0x2c4; // float
		constexpr auto DetailDamping = 0x2c8; // float
		constexpr auto DetailTravelSpeed = 0x2cc; // float
		constexpr auto DetailTransfer = 0x2d0; // float
		constexpr auto DetailHeightScale = 0x2d4; // float
		constexpr auto DetailUpdateRate = 0x2d8; // float
		constexpr auto NormalLength = 0x2dc; // float
		constexpr auto TestRippleSpeed = 0x2e0; // float
		constexpr auto TestRippleFrequency = 0x2e4; // float
		constexpr auto TestRippleRadius = 0x2e8; // float
		constexpr auto FluidWidth = 0x2ec; // float
		constexpr auto FluidHeight = 0x2f0; // float
		constexpr auto TestRippleTime = 0x2f4; // float
		constexpr auto TestRippleAngle = 0x2f8; // float
		constexpr auto DeactivationTimer = 0x2fc; // float
		constexpr auto ViewDistance = 0x300; // float
		constexpr auto SimulationPosition = 0x304; // FVector
		constexpr auto DetailPosition = 0x310; // FVector
		constexpr auto ClampMap = 0x31c; // TArray<char>
		constexpr auto ShadowMaps = 0x32c; // TArray<ObjectProperty>
		constexpr auto LightMap = 0x33c; // FLightMapRef
		constexpr auto FluidSimulation = 0x344; // FPointer
	}

	namespace n_UActorFactoryCombatWeapAttachMeshActor {
		constexpr auto DefaultSkeletalMesh = 0xb4; // FString
	}

	namespace n_UCombatMain_FrontEnd {
		constexpr auto bPwTextFocus = 0xac; // uint32_t : 1
		constexpr auto bShowWall = 0xac; // uint32_t : 1
	}

	namespace n_UGFxAction_Invoke {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MethodName = 0x110; // FString
		constexpr auto Arguments = 0x120; // TArray<FASValue>
	}

	namespace n_UCombatDataTableRefDefine {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto DefineName = 0x70; // FString
		constexpr auto ValueType = 0x80; // E_VALUE_TYPE
		constexpr auto Value = 0x84; // FString
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_ADemoRecSpectator {
		constexpr auto bFindPlayer = 0xbe4; // uint32_t : 1
		constexpr auto bLockRotationToViewTarget = 0xbe4; // uint32_t : 1
		constexpr auto bAutoSwitchPlayers = 0xbe4; // uint32_t : 1
		constexpr auto MyRealViewTarget = 0xbe8; // ObjectProperty
		constexpr auto LastViewTargetPawn = 0xbf0; // ObjectProperty
		constexpr auto AutoSwitchPlayerInterval = 0xbf8; // float
	}

	namespace n_USeqAct_DrawText {
		constexpr auto DisplayTimeSeconds = 0x108; // float
		constexpr auto bDisplayOnObject = 0x10c; // uint32_t : 1
		constexpr auto DrawTextInfo = 0x110; // FKismetDrawTextInfo
	}

	namespace n_UCombatAnimNotify_StopFrame {
		constexpr auto PassedTime = 0x60; // float
	}

	namespace n_UGripBTDummyAction {
		constexpr auto NextExecutionResult = 0xbc; // BTExecutionResult
		constexpr auto NextPreConditionResult = 0xc0; // uint32_t : 1
		constexpr auto Interruptible = 0xc0; // uint32_t : 1
		constexpr auto Duration = 0xc4; // float
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_USeqAct_LevelVisibility {
		constexpr auto Level = 0x120; // ObjectProperty
		constexpr auto LevelName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // uint32_t : 1
	}

	namespace n_USoundNodeWave {
		constexpr auto CompressionQuality = 0x74; // int32_t
		constexpr auto bForceRealTimeDecompression = 0x78; // uint32_t : 1
		constexpr auto bLoopingSound = 0x78; // uint32_t : 1
		constexpr auto bDynamicResource = 0x78; // uint32_t : 1
		constexpr auto bUseTTS = 0x78; // uint32_t : 1
		constexpr auto bProcedural = 0x78; // uint32_t : 1
		constexpr auto bMature = 0x78; // uint32_t : 1
		constexpr auto bManualWordWrap = 0x78; // uint32_t : 1
		constexpr auto bSingleLine = 0x78; // uint32_t : 1
		constexpr auto TTSSpeaker = 0x7c; // ETTSSpeaker
		constexpr auto DecompressionType = 0x7d; // EDecompressionType
		constexpr auto MobileDetailMode = 0x7e; // EDetailMode
		constexpr auto SpokenText = 0x80; // FString
		constexpr auto Volume = 0x90; // float
		constexpr auto Pitch = 0x94; // float
		constexpr auto Duration = 0x98; // float
		constexpr auto NumChannels = 0x9c; // int32_t
		constexpr auto SampleRate = 0xa0; // int32_t
		constexpr auto RawData = 0xa4; // FUntypedBulkData_Mirror
		constexpr auto VorbisDecompressor = 0xe4; // FPointer
		constexpr auto RawPCMData = 0xec; // FPointer
		constexpr auto RawPCMDataSize = 0xf4; // int32_t
		constexpr auto CompressedPCData = 0xf8; // FUntypedBulkData_Mirror
		constexpr auto CompressedXbox360Data = 0x138; // FUntypedBulkData_Mirror
		constexpr auto CompressedPS3Data = 0x178; // FUntypedBulkData_Mirror
		constexpr auto CompressedWiiUData = 0x1b8; // FUntypedBulkData_Mirror
		constexpr auto CompressedIPhoneData = 0x1f8; // FUntypedBulkData_Mirror
		constexpr auto CompressedFlashData = 0x238; // FUntypedBulkData_Mirror
		constexpr auto ResourceID = 0x278; // int32_t
		constexpr auto ResourceSize = 0x27c; // int32_t
		constexpr auto ResourceData = 0x280; // FPointer
		constexpr auto Subtitles = 0x288; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0x298; // TArray<FLocalizedSubtitle>
	}

	namespace n_ADynamicBlockingVolume {
		constexpr auto bEnabled = 0x284; // uint32_t : 1
	}

	namespace n_USequenceObject {
		constexpr auto ObjInstanceVersion = 0x60; // int32_t
		constexpr auto ParentSequence = 0x64; // ObjectProperty
		constexpr auto ObjName = 0x6c; // FString
		constexpr auto ObjComment = 0x7c; // FString
		constexpr auto bDeletable = 0x8c; // uint32_t : 1
		constexpr auto bDrawFirst = 0x8c; // uint32_t : 1
		constexpr auto bDrawLast = 0x8c; // uint32_t : 1
		constexpr auto bOutputObjCommentToScreen = 0x8c; // uint32_t : 1
		constexpr auto bSuppressAutoComment = 0x8c; // uint32_t : 1
		constexpr auto DrawWidth = 0x90; // int32_t
		constexpr auto DrawHeight = 0x94; // int32_t
	}

	namespace n_USeqAct_ToggleCinematicMode {
		constexpr auto bDisableMovement = 0x108; // uint32_t : 1
		constexpr auto bDisableTurning = 0x108; // uint32_t : 1
		constexpr auto bHidePlayer = 0x108; // uint32_t : 1
		constexpr auto bDisableInput = 0x108; // uint32_t : 1
		constexpr auto bHideHUD = 0x108; // uint32_t : 1
		constexpr auto bDeadBodies = 0x108; // uint32_t : 1
		constexpr auto bDroppedPickups = 0x108; // uint32_t : 1
	}

	namespace n_ACCSController {
		constexpr auto BehaviorTreeTemplate = 0x454; // ObjectProperty
		constexpr auto ScriptNodeCache = 0x45c; // ObjectProperty
		constexpr auto BTInterface = 0x464; // ObjectProperty
		constexpr auto Brain = 0x46c; // FPointer
		constexpr auto MeatPuppet = 0x474; // FPointer
		constexpr auto SystemConfig = 0x47c; // FCCSSystemConfigData
		constexpr auto TargetSelection = 0x4a8; // TArray<ETargetSelectionConfig>
		constexpr auto CCSPawn = 0x4b8; // TScriptInterface<Class>
		constexpr auto SecondaryNavigationHandle = 0x4c8; // ObjectProperty
		constexpr auto FireBurstCount = 0x4d0; // int32_t
		constexpr auto AimingFocus = 0x4d4; // ObjectProperty
		constexpr auto AimingRot = 0x4dc; // FRotator
		constexpr auto CCSTeam = 0x4e8; // char
		constexpr auto TargetType = 0x4e9; // ETargetSelectionConfig
		constexpr auto PathFindErrCount = 0x4ea; // char
		constexpr auto DebugVizComponent = 0x4ec; // ComponentProperty
		constexpr auto NoiseMakers = 0x4f4; // TArray<ObjectProperty>
		constexpr auto paramMoveTowardState = 0x504; // FSMoveTowardState
		constexpr auto bPauseBTWhenScriptedMove = 0x51c; // uint32_t : 1
		constexpr auto PathFindDestPosition = 0x520; // FVector
		constexpr auto PathFindPrevPathActor = 0x52c; // ObjectProperty
	}

	namespace n_ULineBatchComponent {
		constexpr auto FPrimitiveDrawInterfaceVfTable = 0x250; // FPointer
		constexpr auto FPrimitiveDrawInterfaceView = 0x258; // FPointer
		constexpr auto BatchedLines = 0x260; // TArray<FPointer>
		constexpr auto BatchedPoints = 0x270; // TArray<FPointer>
		constexpr auto DefaultLifeTime = 0x280; // float
	}

	namespace n_UOnlineSubsystem {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto AccountInterface = 0x68; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x78; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x88; // TScriptInterface<Class>
		constexpr auto SystemInterface = 0x98; // TScriptInterface<Class>
		constexpr auto GameInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0xb8; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0xc8; // TScriptInterface<Class>
		constexpr auto StatsInterface = 0xd8; // TScriptInterface<Class>
		constexpr auto NewsInterface = 0xe8; // TScriptInterface<Class>
		constexpr auto PartyChatInterface = 0xf8; // TScriptInterface<Class>
		constexpr auto TitleFileInterface = 0x108; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x118; // TScriptInterface<Class>
		constexpr auto UserCloudInterface = 0x128; // TScriptInterface<Class>
		constexpr auto SharedCloudInterface = 0x138; // TScriptInterface<Class>
		constexpr auto SocialInterface = 0x148; // TScriptInterface<Class>
		constexpr auto AuthInterface = 0x158; // TScriptInterface<Class>
		constexpr auto NamedInterfaces = 0x168; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x178; // TArray<FNamedInterfaceDef>
		constexpr auto Sessions = 0x188; // TArray<FNamedSession>
		constexpr auto bUseBuildIdOverride = 0x198; // uint32_t : 1
		constexpr auto IsProfileExist = 0x198; // uint32_t : 1
		constexpr auto BuildIdOverride = 0x19c; // int32_t
		constexpr auto IniLocPatcherClassName = 0x1a0; // FString
		constexpr auto Patcher = 0x1b0; // ObjectProperty
		constexpr auto AsyncMinCompletionTime = 0x1b8; // float
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x60; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x64; // float
		constexpr auto bSavedActiveState = 0x68; // uint32_t : 1
	}

	namespace n_UParticleModuleCollisionActor {
		constexpr auto ActorsToCollideWith = 0x140; // TArray<FName>
		constexpr auto bCheckPawnCollisions = 0x150; // uint32_t : 1
	}

	namespace n_UGripActionFramework { // : UObject
		constexpr auto NativeFramework = 0x60; // FPointer
	}

	namespace n_UNavMeshGoal_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x7c; // FVector
	}

	namespace n_USequenceEvent {
		constexpr auto DuplicateEvts = 0xec; // TArray<ObjectProperty>
		constexpr auto Originator = 0xfc; // ObjectProperty
		constexpr auto Instigator = 0x104; // ObjectProperty
		constexpr auto ActivationTime = 0x10c; // float
		constexpr auto TriggerCount = 0x110; // int32_t
		constexpr auto MaxTriggerCount = 0x114; // int32_t
		constexpr auto ReTriggerDelay = 0x118; // float
		constexpr auto bEnabled = 0x11c; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x11c; // uint32_t : 1
		constexpr auto bRegistered = 0x11c; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x11c; // uint32_t : 1
		constexpr auto Priority = 0x120; // char
		constexpr auto MaxWidth = 0x124; // int32_t
	}

	namespace n_USeqAct_SetMaterial {
		constexpr auto NewMaterial = 0x108; // ObjectProperty
		constexpr auto MaterialIndex = 0x110; // int32_t
	}

	namespace n_UCombatDataTableRefExchangeCash {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto item_idx = 0x70; // int32_t
		constexpr auto CashType = 0x74; // int32_t
		constexpr auto Group = 0x78; // int32_t
		constexpr auto Publisher = 0x7c; // int32_t
		constexpr auto Value = 0x80; // int32_t
		constexpr auto Price = 0x84; // int32_t
		constexpr auto ValueTitle = 0x88; // int32_t
		constexpr auto SalePrice = 0x8c; // int32_t
		constexpr auto LimitBuyCount = 0x90; // int32_t
		constexpr auto ItemCodeName = 0x94; // FString
		constexpr auto SaleCategoryString = 0xa4; // int32_t
		constexpr auto LobbyNotifierString = 0xa8; // int32_t
		constexpr auto PopupNotifier = 0xac; // uint32_t : 1
		constexpr auto SaleTimeStart = 0xb0; // FTimeData
		constexpr auto SaleTimeEnd = 0xb8; // FTimeData
		constexpr auto ReturnUserType = 0xc0; // int32_t
		constexpr auto ClientID = 0xc4; // int32_t
	}

	namespace n_UInterpTrackSkelControlStrength {
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_UCombatVoiceInterfaceVivox {
		constexpr auto KeyString = 0x60; // FString
		constexpr auto PlayerName = 0x70; // FString
		constexpr auto VivoxAccountName = 0x80; // FString
		constexpr auto VivoxAccountUri = 0x90; // FString
		constexpr auto VivoxEchoChannelUri = 0xa0; // FString
		constexpr auto VivoxTestChannelUri = 0xb0; // FString
		constexpr auto VivoxTeamChannelUri = 0xc0; // FString
		constexpr auto VivoxAccountNames = 0xd0; // TArray<FString>
		constexpr auto bCombineLogin = 0xe0; // uint32_t : 1
		constexpr auto bIsConnected = 0xe0; // uint32_t : 1
		constexpr auto bIsLoggedIn = 0xe0; // uint32_t : 1
		constexpr auto bIsChannelJoined = 0xe0; // uint32_t : 1
		constexpr auto SerialNumber = 0xe4; // int32_t
		constexpr auto CPC = 0xe8; // ObjectProperty
		constexpr auto RefuseVoiceMeterEnergy = 0xf0; // float
		constexpr auto CurrentRefuseVoiceMeterEnergy = 0xf4; // float
		constexpr auto DelayedCallbackFunctions = 0xf8; // TArray<FDelayedCallbackFunctionData>
		constexpr auto DelayedCallbackFunctionsCheckTimerDelta = 0x108; // float
		constexpr auto DelayedCallbackFunctionsCheckCycle = 0x10c; // float
		constexpr auto OSInputDeviceName = 0x110; // FString
		constexpr auto APPInputDeviceName = 0x120; // FString
		constexpr auto InputDeviceNameList = 0x130; // TArray<FString>
	}

	namespace n_UAnimMetaData_SkelControl {
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto bFullControlOverController = 0x70; // uint32_t : 1
		constexpr auto SkelControlName = 0x74; // FName
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0xa0; // FInterpCurveVector
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_ANxGenericForceFieldBox {
		constexpr auto RenderComponent = 0x338; // ComponentProperty
		constexpr auto BoxExtent = 0x340; // FVector
	}

	namespace n_UCombatDataTableRefMarkerOption {
		constexpr auto MarkerGroupID = 0x6c; // FString
		constexpr auto Id = 0x7c; // int32_t
		constexpr auto RadioMessageString = 0x80; // int32_t
		constexpr auto SoundID = 0x84; // int32_t
		constexpr auto MarkerUIImage = 0x88; // int32_t
		constexpr auto MarkerUIString = 0x8c; // int32_t
		constexpr auto MarkerIngameImage = 0x90; // int32_t
		constexpr auto MarkerType = 0x94; // int32_t
	}

	namespace n_UCombatDataTableRefShopItem {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto CategoryIndex = 0x80; // int32_t
		constexpr auto Service = 0x84; // int32_t
		constexpr auto LimitBuyType = 0x88; // int32_t
		constexpr auto LimitBuyCount = 0x8c; // int32_t
		constexpr auto OpenPublisher = 0x90; // int32_t
		constexpr auto ShowEndTime = 0x94; // uint32_t : 1
		constexpr auto SellStart = 0x98; // FTimeData
		constexpr auto SellEnd = 0xa0; // FTimeData
		constexpr auto RentalEndDate = 0xa8; // FTimeData
		constexpr auto RentalID = 0xb0; // int32_t
		constexpr auto SpecialGoods = 0xb4; // int32_t
		constexpr auto SpecialGoodsString = 0xb8; // int32_t
		constexpr auto DisplaynameID = 0xbc; // int32_t
		constexpr auto Thumbnail = 0xc0; // FString
		constexpr auto BackImage = 0xd0; // int32_t
		constexpr auto ImageID = 0xd4; // int32_t
		constexpr auto EffectDescID = 0xd8; // int32_t
		constexpr auto ItemDescID = 0xdc; // int32_t
		constexpr auto ItemTag = 0xe0; // int32_t
		constexpr auto GetType = 0xe4; // int32_t
		constexpr auto LobbyImage = 0xe8; // int32_t
		constexpr auto GroupName = 0xec; // FString
		constexpr auto GroupIdx = 0xfc; // int32_t
		constexpr auto ShopShortcut = 0x100; // FString
		constexpr auto ReturnUserType = 0x110; // int32_t
	}

	namespace n_UCombatAnimNodeSeq_Offset {
		constexpr auto bUseOffset = 0x158; // uint32_t : 1
		constexpr auto StartOffset = 0x15c; // float
		constexpr auto AlternativeAnimSeqName = 0x160; // FName
		constexpr auto Weapon = 0x168; // ObjectProperty
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto bNormalize = 0xe4; // uint32_t : 1
	}

	namespace n_UMcpIdMappingBase {
		constexpr auto McpIdMappingClassName = 0x78; // FString
		constexpr auto __OnAddMappingComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryMappingsComplete__Delegate = 0x98; // DelegateProperty
	}

	namespace n_ACombatOccupiedAreaData {
		constexpr auto TotalOccupierNum = 0x244; // int32_t
		constexpr auto UpdateOccupationTime = 0x248; // float
		constexpr auto OccupationScore = 0x24c; // int32_t
		constexpr auto Target = 0x250; // ObjectProperty
		constexpr auto Team = 0x258; // ObjectProperty
	}

	namespace n_UFaceFXAsset {
		constexpr auto FaceFXActor = 0x60; // FPointer
		constexpr auto RawFaceFXActorBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXSessionBytes = 0x78; // TArray<char>
		constexpr auto MountedFaceFXAnimSets = 0x88; // TArray<ObjectProperty>
		constexpr auto NumLoadErrors = 0x98; // int32_t
	}

	namespace n_UCombatAIActionBase {
		constexpr auto bUseScriptTick = 0x60; // uint32_t : 1
		constexpr auto LastExecuteResult = 0x64; // BTExecutionResult
		constexpr auto Bot = 0x68; // ObjectProperty
		constexpr auto DebugName = 0x70; // FName
	}

	namespace n_UPath_TowardGoal {
		constexpr auto GoalActor = 0x6c; // ObjectProperty
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x68; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x78; // int32_t
		constexpr auto bUsesVelocity = 0x7c; // uint32_t : 1
	}

	namespace n_USeqAct_GetProperty {
		constexpr auto PropertyName = 0x108; // FName
	}

	namespace n_ACombatDroppedBase {
		constexpr auto Mesh = 0x260; // ComponentProperty
		constexpr auto MyLightEnvironment = 0x268; // ComponentProperty
		constexpr auto CylinderComponent = 0x270; // ComponentProperty
		constexpr auto PickupableDist = 0x278; // float
		constexpr auto DropRotation = 0x27c; // FRotator
		constexpr auto LandedRotation = 0x288; // FRotator
		constexpr auto TossSpeed = 0x294; // float
		constexpr auto TossZ = 0x298; // float
		constexpr auto CylinderRadiusOnFalling = 0x29c; // float
		constexpr auto CustomGravityScaling = 0x2a0; // float
		constexpr auto PickupableDelayTime = 0x2a4; // float
		constexpr auto OutlineProperty = 0x2a8; // FOutlineProperty
		constexpr auto PickupSound = 0x2e4; // ObjectProperty
		constexpr auto EnemyPickupSound = 0x2ec; // ObjectProperty
		constexpr auto DroppedSound = 0x2f4; // ObjectProperty
		constexpr auto PickupableDistSq = 0x2fc; // float
		constexpr auto MeshHeightOffset = 0x300; // float
		constexpr auto InitialLifeSpan = 0x304; // float
		constexpr auto AdditionalHideBone = 0x308; // TArray<FName>
		constexpr auto bPickupable = 0x318; // uint32_t : 1
		constexpr auto bInitDroppedPickupMesh = 0x318; // uint32_t : 1
		constexpr auto bPickUpByTouching = 0x318; // uint32_t : 1
		constexpr auto bDropSameInventoryGroup = 0x318; // uint32_t : 1
		constexpr auto bDestroySameInventoryGroup = 0x318; // uint32_t : 1
		constexpr auto bGiveInventory = 0x318; // uint32_t : 1
		constexpr auto ValidTeamIndex = 0x31c; // char
	}

	namespace n_UDOFAndBloomEffect {
		constexpr auto BloomScale = 0xb4; // float
		constexpr auto BloomThreshold = 0xb8; // float
		constexpr auto BloomTint = 0xbc; // FColor
		constexpr auto BloomScreenBlendThreshold = 0xc0; // float
		constexpr auto SceneMultiplier = 0xc4; // float
		constexpr auto BlurBloomKernelSize = 0xc8; // float
		constexpr auto bEnableReferenceDOF = 0xcc; // uint32_t : 1
		constexpr auto DepthOfFieldType = 0xd0; // EDOFType
		constexpr auto DepthOfFieldQuality = 0xd1; // EDOFQuality
		constexpr auto BokehTexture = 0xd4; // ObjectProperty
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x74; // float
		constexpr auto DelayMax = 0x78; // float
		constexpr auto DelayDuration = 0x7c; // FRawDistributionFloat
	}

	namespace n_UCombatDialogCombiinationAudio {
		constexpr auto CombiinationSoundCues = 0x60; // TArray<ObjectProperty>
		constexpr auto TotalWords = 0x70; // int32_t
		constexpr auto nowPlayingWordNum = 0x74; // int32_t
		constexpr auto Owner = 0x78; // ObjectProperty
		constexpr auto DialogAC = 0x80; // ComponentProperty
	}

	namespace n_UInterpTrack {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto CurveEdVTable = 0x68; // FPointer
		constexpr auto SubTracks = 0x70; // TArray<ObjectProperty>
		constexpr auto TrackInstClass = 0x80; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x88; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x8c; // FString
		constexpr auto bOnePerGroup = 0x9c; // uint32_t : 1
		constexpr auto bDirGroupOnly = 0x9c; // uint32_t : 1
		constexpr auto bDisableTrack = 0x9c; // uint32_t : 1
		constexpr auto bIsAnimControlTrack = 0x9c; // uint32_t : 1
		constexpr auto bSubTrackOnly = 0x9c; // uint32_t : 1
		constexpr auto bVisible = 0x9c; // uint32_t : 1
		constexpr auto bIsSelected = 0x9c; // uint32_t : 1
		constexpr auto bIsRecording = 0x9c; // uint32_t : 1
		constexpr auto bIsCollapsed = 0x9c; // uint32_t : 1
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x68; // ETrail2SourceMethod
		constexpr auto SelectionMethod = 0x69; // EParticleSourceSelectionMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto SourceStrength = 0x74; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x98; // uint32_t : 1
		constexpr auto bInheritRotation = 0x98; // uint32_t : 1
		constexpr auto SourceOffsetCount = 0x9c; // int32_t
		constexpr auto SourceOffsetDefaults = 0xa0; // TArray<FVector>
	}

	namespace n_UCylinderComponent {
		constexpr auto CollisionHeight = 0x250; // float
		constexpr auto CollisionRadius = 0x254; // float
		constexpr auto CylinderColor = 0x258; // FColor
		constexpr auto bDrawBoundingBox = 0x25c; // uint32_t : 1
		constexpr auto bDrawNonColliding = 0x25c; // uint32_t : 1
		constexpr auto bAlwaysRenderIfSelected = 0x25c; // uint32_t : 1
	}

	namespace n_UCombatHUD_RadioMessage {
		constexpr auto LableData = 0xc0; // FLableDataType [0x2]
		constexpr auto __OnGetRadioMsgKeyBinding__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnSetRadioKeyBinding__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_USpriteComponent {
		constexpr auto Sprite = 0x250; // ObjectProperty
		constexpr auto bIsScreenSizeScaled = 0x258; // uint32_t : 1
		constexpr auto ScreenSize = 0x25c; // float
		constexpr auto U = 0x260; // float
		constexpr auto UL = 0x264; // float
		constexpr auto V = 0x268; // float
		constexpr auto VL = 0x26c; // float
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UActorFactoryTutorialAI {
		constexpr auto PawnNameLocalizationID = 0x108; // int32_t
	}

	namespace n_ALiftExit {
		constexpr auto MyLiftCenter = 0x33c; // ObjectProperty
		constexpr auto bExitOnly = 0x344; // uint32_t : 1
	}

	namespace n_USeqAct_GameCrowdPopulationManagerToggle {
		constexpr auto WarmupPopulationPct = 0x108; // float
		constexpr auto CrowdAgentList = 0x10c; // ObjectProperty
		constexpr auto bClearOldArchetypes = 0x114; // uint32_t : 1
		constexpr auto bEnableCrowdLightEnvironment = 0x114; // uint32_t : 1
		constexpr auto bCastShadows = 0x114; // uint32_t : 1
		constexpr auto bFillPotentialSpawnPoints = 0x114; // uint32_t : 1
		constexpr auto bForceObstacleChecking = 0x114; // uint32_t : 1
		constexpr auto bForceNavMeshPathing = 0x114; // uint32_t : 1
		constexpr auto bIndividualSpawner = 0x114; // uint32_t : 1
		constexpr auto MaxAgents = 0x118; // int32_t
		constexpr auto SpawnRate = 0x11c; // float
		constexpr auto AgentLightingChannel = 0x120; // FLightingChannelContainer
		constexpr auto MaxSpawnDist = 0x124; // float
		constexpr auto MinBehindSpawnDist = 0x128; // float
		constexpr auto PotentialSpawnPoints = 0x12c; // TArray<ObjectProperty>
		constexpr auto AgentWarmupTime = 0x13c; // float
		constexpr auto NumAgentsToTickPerFrame = 0x140; // int32_t
		constexpr auto LastSpawnedList = 0x144; // TArray<ObjectProperty>
	}

	namespace n_UCombatFrontEnd_Channel {
		constexpr auto ButtonList = 0xd0; // FButtonInfo [0x3]
		constexpr auto BoosterList = 0x10c; // int32_t [0x2]
		constexpr auto ChannelTran = 0x114; // ObjectProperty
		constexpr auto SelectChannelIndex = 0x11c; // int32_t
		constexpr auto BannerImgDownloadData = 0x120; // TArray<FOnlineBannerInfo>
		constexpr auto BannerImgURL = 0x130; // TArray<FBannerInfo>
		constexpr auto BannerDurationTime = 0x140; // int32_t
	}

	namespace n_ACombatSeizeFlagActor {
		constexpr auto FlagMesh = 0x244; // ComponentProperty
		constexpr auto LightEnvironment = 0x24c; // ComponentProperty
		constexpr auto FlagMaterialList_Unocuupied = 0x254; // FSkeletalMeshMaterialInfo
		constexpr auto FlagMaterialList_Battling = 0x260; // FSkeletalMeshMaterialInfo
		constexpr auto FlagMaterialList_OurTeam = 0x26c; // FSkeletalMeshMaterialInfo
		constexpr auto FlagMaterialList_Enemy = 0x278; // FSkeletalMeshMaterialInfo
	}

	namespace n_UCombatHUD_Preset {
		constexpr auto DescriptionStr = 0xc0; // FString
		constexpr auto DescriptionMC = 0xd0; // ObjectProperty
	}

	namespace n_UFont {
		constexpr auto Characters = 0x60; // TArray<FFontCharacter>
		constexpr auto Textures = 0x70; // TArray<ObjectProperty>
		constexpr auto CharRemap = 0x80; // TMap<None, None>
		constexpr auto IsRemapped = 0xc8; // int32_t
		constexpr auto EmScale = 0xcc; // float
		constexpr auto Ascent = 0xd0; // float
		constexpr auto Descent = 0xd4; // float
		constexpr auto Leading = 0xd8; // float
		constexpr auto Kerning = 0xdc; // int32_t
		constexpr auto ImportOptions = 0xe0; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x188; // int32_t
		constexpr auto MaxCharHeight = 0x18c; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x19c; // float
	}

	namespace n_UCombatHUD_CharacterInfo {
		constexpr auto LastHealth = 0xc0; // int32_t
		constexpr auto LastHealthMax = 0xc4; // int32_t
		constexpr auto LastRankName = 0xc8; // FString
		constexpr auto LastRankIconPath = 0xd8; // FString
		constexpr auto LastPositionType = 0xe8; // int32_t
	}

	namespace n_ANxForceFieldGeneric {
		constexpr auto Shape = 0x298; // ObjectProperty
		constexpr auto DrawComponent = 0x2a0; // ComponentProperty
		constexpr auto RoughExtentX = 0x2a8; // float
		constexpr auto RoughExtentY = 0x2ac; // float
		constexpr auto RoughExtentZ = 0x2b0; // float
		constexpr auto Coordinates = 0x2b4; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2b8; // FVector
		constexpr auto PositionMultiplierX = 0x2c4; // FVector
		constexpr auto PositionMultiplierY = 0x2d0; // FVector
		constexpr auto PositionMultiplierZ = 0x2dc; // FVector
		constexpr auto PositionTarget = 0x2e8; // FVector
		constexpr auto VelocityMultiplierX = 0x2f4; // FVector
		constexpr auto VelocityMultiplierY = 0x300; // FVector
		constexpr auto VelocityMultiplierZ = 0x30c; // FVector
		constexpr auto VelocityTarget = 0x318; // FVector
		constexpr auto Noise = 0x324; // FVector
		constexpr auto FalloffLinear = 0x330; // FVector
		constexpr auto FalloffQuadratic = 0x33c; // FVector
		constexpr auto TorusRadius = 0x348; // float
		constexpr auto LinearKernel = 0x34c; // FPointer
	}

	namespace n_USkyLightComponent {
		constexpr auto SelectLight = 0x1a8; // int32_t
		constexpr auto LowLowerBrightness = 0x1ac; // float
		constexpr auto LowLowerColor = 0x1b0; // FColor
		constexpr auto LowBrightness = 0x1b4; // float
		constexpr auto LowColor = 0x1b8; // FColor
		constexpr auto HighLowerBrightness = 0x1bc; // float
		constexpr auto HighLowerColor = 0x1c0; // FColor
		constexpr auto HighBrightness = 0x1c4; // float
		constexpr auto HighColor = 0x1c8; // FColor
		constexpr auto LowerBrightness = 0x1cc; // float
		constexpr auto LowerColor = 0x1d0; // FColor
	}

	namespace n_UCombatAnim_BlendList {
		constexpr auto ChildBlendInTime = 0x120; // TArray<float>
		constexpr auto BlockSetActiveChildWhenRelevant = 0x130; // TArray<char>
	}

	namespace n_UMobileMenuButton {
		constexpr auto Images = 0xdc; // ObjectProperty [0x2]
		constexpr auto ImagesUVs = 0xec; // FUVCoords [0x2]
		constexpr auto ImageColor = 0x114; // FLinearColor
		constexpr auto Caption = 0x124; // FString
		constexpr auto CaptionColor = 0x134; // FLinearColor
	}

	namespace n_AAIDebugCameraController {
		constexpr auto AIManager = 0x79c; // ObjectProperty
		constexpr auto SelectedPawn = 0x7a4; // ObjectProperty
		constexpr auto CameraType = 0x7ac; // EAIDebugCameraType
		constexpr auto PCCameraType = 0x7b0; // FName
		constexpr auto bPressUp = 0x7b8; // uint32_t : 1
		constexpr auto bPressDown = 0x7b8; // uint32_t : 1
		constexpr auto bPressLeft = 0x7b8; // uint32_t : 1
		constexpr auto bPressRight = 0x7b8; // uint32_t : 1
		constexpr auto RelativeRotMat = 0x7c0; // FMatrix
		constexpr auto RelativeLoc = 0x800; // FVector
		constexpr auto RelativeDist = 0x80c; // float
		constexpr auto RelativeDistZ = 0x810; // float
		constexpr auto RelativeRot = 0x814; // FRotator
		constexpr auto DebugCategories = 0x820; // TArray<FString>
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x68; // FRawDistributionVector
	}

	namespace n_ANxForceField {
		constexpr auto ExcludeChannel = 0x244; // int32_t
		constexpr auto bForceActive = 0x248; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x24c; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x250; // ERBCollisionChannel
		constexpr auto ForceField = 0x254; // FPointer
		constexpr auto ConvexMeshes = 0x25c; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x26c; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x27c; // TArray<FPointer>
		constexpr auto U2NRotation = 0x28c; // FPointer
		constexpr auto SceneIndex = 0x294; // int32_t
	}

	namespace n_UCombatRandomBoxTransaction {
		constexpr auto RandomBoxPickUpList = 0x60; // TArray<FRandomBoxPickUpInfo>
	}

	namespace n_UCombatAnimNotify_HideBone {
		constexpr auto TargetBoneName = 0x60; // FName
		constexpr auto bHideBone = 0x68; // uint32_t : 1
		constexpr auto NotifyDuration = 0x6c; // float
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x68; // uint32_t : 1
		constexpr auto bNRScaleEmitterTime = 0x68; // uint32_t : 1
		constexpr auto bSmooth = 0x68; // uint32_t : 1
		constexpr auto bNoiseLock = 0x68; // uint32_t : 1
		constexpr auto bOscillate = 0x68; // uint32_t : 1
		constexpr auto bUseNoiseTangents = 0x68; // uint32_t : 1
		constexpr auto bTargetNoise = 0x68; // uint32_t : 1
		constexpr auto bApplyNoiseScale = 0x68; // uint32_t : 1
		constexpr auto Frequency = 0x6c; // int32_t
		constexpr auto Frequency_LowRange = 0x70; // int32_t
		constexpr auto NoiseRange = 0x74; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x98; // FRawDistributionFloat
		constexpr auto NoiseSpeed = 0xbc; // FRawDistributionVector
		constexpr auto NoiseLockRadius = 0xe0; // float
		constexpr auto NoiseLockTime = 0xe4; // float
		constexpr auto NoiseTension = 0xe8; // float
		constexpr auto NoiseTangentStrength = 0xec; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x110; // int32_t
		constexpr auto FrequencyDistance = 0x114; // float
		constexpr auto NoiseScale = 0x118; // FRawDistributionFloat
	}

	namespace n_UOnlinePlaylistGameTypeProvider {
		constexpr auto PlaylistGameTypeName = 0x94; // FName
		constexpr auto DisplayName = 0x9c; // FString
		constexpr auto Description = 0xac; // FString
		constexpr auto GameTypeId = 0xbc; // int32_t
	}

	namespace n_ACombatGuy_NPC {
		constexpr auto VfTable_ICCSPawn = 0x1128; // FPointer
		constexpr auto MaxAccelRate = 0x1130; // float
		constexpr auto MaxAirSpeed = 0x1134; // float
		constexpr auto MaxGroundSpeed = 0x1138; // float
		constexpr auto MeshScale = 0x113c; // float
		constexpr auto PrimaryWeapon = 0x1140; // FString
		constexpr auto SecondaryWeapon = 0x1150; // FString
		constexpr auto MeleeWeapon = 0x1160; // FString
		constexpr auto MovementType = 0x1170; // ECCSMovementType
		constexpr auto AlertnessState = 0x1171; // ECCSAlertnessState
		constexpr auto WantedCoverPose = 0x1172; // ECCSCoverPose
		constexpr auto CurrentCoverPose = 0x1173; // ECCSCoverPose
		constexpr auto bShouldCover = 0x1174; // uint32_t : 1
		constexpr auto bInCover = 0x1174; // uint32_t : 1
		constexpr auto ThrowRecheck = 0x1174; // uint32_t : 1
		constexpr auto bIsReplicateCurTargetName = 0x1174; // uint32_t : 1
		constexpr auto CoverPct = 0x1178; // float
		constexpr auto CoverPoseBlendTimeOverride = 0x117c; // float
		constexpr auto AimPitchRange = 0x1180; // FVector2D
		constexpr auto AimYawRange = 0x1188; // FVector2D
		constexpr auto FollowAimingYawInterpSpeed = 0x1190; // float
		constexpr auto TurnToTargetYawInterpSpeed = 0x1194; // float
		constexpr auto DefaultRotationYawRate = 0x1198; // float
		constexpr auto LookAtCtrl2 = 0x119c; // ObjectProperty
		constexpr auto LookAtMount = 0x11a4; // ObjectProperty
		constexpr auto LookAtMount2 = 0x11ac; // ObjectProperty
		constexpr auto AITarget = 0x11b4; // ObjectProperty
		constexpr auto AINameStringIndex = 0x11bc; // int32_t
		constexpr auto AmbientSoundCue = 0x11c0; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x11c8; // ComponentProperty
		constexpr auto RepCurTargetName = 0x11d0; // FString
		constexpr auto OldCurTargetName = 0x11e0; // FString
	}

	namespace n_UCombatDataTableRefEvolveModeOption {
		constexpr auto MapCodeName = 0x6c; // FString
		constexpr auto FirstCreateTime = 0x7c; // int32_t
		constexpr auto RecreateTime = 0x80; // int32_t
		constexpr auto CreateImpactTime = 0x84; // int32_t
		constexpr auto JackpotStartTime = 0x88; // int32_t
		constexpr auto JackpotMaxTime = 0x8c; // int32_t
		constexpr auto JackpotMinProb = 0x90; // int32_t
		constexpr auto JackpotMaxProb = 0x94; // int32_t
	}

	namespace n_UUIDataStore_DynamicResource {
		constexpr auto ProfileProvider = 0x98; // ObjectProperty
		constexpr auto GameResourceDataStore = 0xa0; // ObjectProperty
		constexpr auto ResourceProviderDefinitions = 0xa8; // TArray<FDynamicResourceProviderDefinition>
		constexpr auto ResourceProviders = 0xb8; // FMultiMap_Mirror
	}

	namespace n_UCombatAnim_TurnInPlace_Player {
		constexpr auto TIP_Transitions = 0x168; // TArray<FTIP_Transition>
		constexpr auto TransitionBlendTime = 0x178; // float
		constexpr auto ActiveChildIndex = 0x17c; // int32_t
		constexpr auto BlendTimeToGo = 0x180; // float
	}

	namespace n_UCombatHUD_KillDeathList {
		constexpr auto KillDeathList_KillTypeIcons = 0xc0; // FString [0x7]
	}

	namespace n_UCombatHUD_RoundStatusBar {
		constexpr auto MinTF = 0xc0; // ObjectProperty
		constexpr auto SecTF = 0xc8; // ObjectProperty
		constexpr auto LastWinCondition = 0xd0; // int32_t
		constexpr auto C4Label = 0xd4; // FString
		constexpr auto Option = 0xe4; // ObjectProperty
		constexpr auto TimerState = 0xec; // int32_t
	}

	namespace n_AAutoTestManager {
		constexpr auto bAutomatedPerfTesting = 0x244; // uint32_t : 1
		constexpr auto bAutoContinueToNextRound = 0x244; // uint32_t : 1
		constexpr auto bUsingAutomatedTestingMapList = 0x244; // uint32_t : 1
		constexpr auto bAutomatedTestingWithOpen = 0x244; // uint32_t : 1
		constexpr auto bExitOnCyclesComplete = 0x244; // uint32_t : 1
		constexpr auto bCheckingForFragmentation = 0x244; // uint32_t : 1
		constexpr auto bCheckingForMemLeaks = 0x244; // uint32_t : 1
		constexpr auto bDoingASentinelRun = 0x244; // uint32_t : 1
		constexpr auto bSentinelStreamingLevelStillLoading = 0x244; // uint32_t : 1
		constexpr auto AutomatedPerfRemainingTime = 0x248; // int32_t
		constexpr auto AutomatedTestingMapIndex = 0x24c; // int32_t
		constexpr auto AutomatedMapTestingList = 0x250; // TArray<FString>
		constexpr auto NumAutomatedMapTestingCycles = 0x260; // int32_t
		constexpr auto NumberOfMatchesPlayed = 0x264; // int32_t
		constexpr auto NumMapListCyclesDone = 0x268; // int32_t
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatch = 0x26c; // FString
		constexpr auto AutomatedMapTestingTransitionMap = 0x27c; // FString
		constexpr auto SentinelTaskDescription = 0x28c; // FString
		constexpr auto SentinelTaskParameter = 0x29c; // FString
		constexpr auto SentinelTagDesc = 0x2ac; // FString
		constexpr auto SentinelPC = 0x2bc; // ObjectProperty
		constexpr auto SentinelTravelArray = 0x2c4; // TArray<FVector>
		constexpr auto SentinelNavigationIdx = 0x2d4; // int32_t
		constexpr auto SentinelIdx = 0x2d8; // int32_t
		constexpr auto NumRotationsIncrement = 0x2dc; // int32_t
		constexpr auto TravelPointsIncrement = 0x2e0; // int32_t
		constexpr auto NumMinutesPerMap = 0x2e4; // int32_t
		constexpr auto CommandsToRunAtEachTravelTheWorldNode = 0x2e8; // TArray<FString>
		constexpr auto CommandStringToExec = 0x2f8; // FString
	}

	namespace n_UFogVolumeConeDensityComponent {
		constexpr auto MaxDensity = 0xd4; // float
		constexpr auto ConeVertex = 0xd8; // FVector
		constexpr auto ConeRadius = 0xe4; // float
		constexpr auto ConeAxis = 0xe8; // FVector
		constexpr auto ConeMaxAngle = 0xf4; // float
		constexpr auto PreviewCone = 0xf8; // ComponentProperty
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0xb0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xb0; // uint32_t : 1
		constexpr auto A = 0xb4; // FExpressionInput
		constexpr auto B = 0xe8; // FExpressionInput
		constexpr auto Value = 0x11c; // FExpressionInput
	}

	namespace n_USeqAct_Timer {
		constexpr auto ActivationTime = 0x108; // float
		constexpr auto Time = 0x10c; // float
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x80; // TArray<FCameraShakeInstance>
		constexpr auto SplitScreenShakeScale = 0x90; // float
	}

	namespace n_UCombatDataTableRefModeOption {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Show = 0x80; // int32_t
		constexpr auto DefaultOption = 0x84; // int32_t
		constexpr auto OptionCount = 0x88; // int32_t
		constexpr auto Option = 0x8c; // TArray<int32_t>
		constexpr auto UsingStringAll = 0x9c; // int32_t
		constexpr auto StringAll = 0xa0; // int32_t
		constexpr auto String0 = 0xa4; // int32_t
		constexpr auto String1 = 0xa8; // int32_t
		constexpr auto String2 = 0xac; // int32_t
	}

	namespace n_USeqAct_RandomSwitch {
		constexpr auto AutoDisabledIndices = 0x124; // TArray<int32_t>
	}

	namespace n_UCombatSkill_AirStrike {
		constexpr auto AnnounceSkill = 0xc8; // EAnnounceableSkillType
	}

	namespace n_UCombatDataTableRefGear {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto Cost = 0x70; // int32_t
		constexpr auto NameID = 0x74; // int32_t
		constexpr auto TooltipDescID = 0x78; // int32_t
		constexpr auto IconName = 0x7c; // FString
		constexpr auto ScriptFile = 0x8c; // FString
	}

	namespace n_APawn {
		constexpr auto VfTable_IInterface_Speaker = 0x244; // FPointer
		constexpr auto MaxStepHeight = 0x24c; // float
		constexpr auto MaxJumpHeight = 0x250; // float
		constexpr auto WalkableFloorZ = 0x254; // float
		constexpr auto LedgeCheckThreshold = 0x258; // float
		constexpr auto PartialLedgeMoveDir = 0x25c; // FVector
		constexpr auto Controller = 0x268; // ObjectProperty
		constexpr auto NextPawn = 0x270; // ObjectProperty
		constexpr auto NetRelevancyTime = 0x278; // float
		constexpr auto LastRealViewer = 0x27c; // ObjectProperty
		constexpr auto LastViewer = 0x284; // ObjectProperty
		constexpr auto bScriptTickSpecial = 0x28c; // uint32_t : 1
		constexpr auto bUpAndOut = 0x28c; // uint32_t : 1
		constexpr auto bIsWalking = 0x28c; // uint32_t : 1
		constexpr auto bWantsToCrouch = 0x28c; // uint32_t : 1
		constexpr auto bIsCrouched = 0x28c; // uint32_t : 1
		constexpr auto bTryToUncrouch = 0x28c; // uint32_t : 1
		constexpr auto bCanCrouch = 0x28c; // uint32_t : 1
		constexpr auto bCrawler = 0x28c; // uint32_t : 1
		constexpr auto bReducedSpeed = 0x28c; // uint32_t : 1
		constexpr auto bJumpCapable = 0x28c; // uint32_t : 1
		constexpr auto bCanJump = 0x28c; // uint32_t : 1
		constexpr auto bCanWalk = 0x28c; // uint32_t : 1
		constexpr auto bCanSwim = 0x28c; // uint32_t : 1
		constexpr auto bCanFly = 0x28c; // uint32_t : 1
		constexpr auto bCanClimbLadders = 0x28c; // uint32_t : 1
		constexpr auto bCanStrafe = 0x28c; // uint32_t : 1
		constexpr auto bAvoidLedges = 0x28c; // uint32_t : 1
		constexpr auto bStopAtLedges = 0x28c; // uint32_t : 1
		constexpr auto bAllowLedgeOverhang = 0x28c; // uint32_t : 1
		constexpr auto bPartiallyOverLedge = 0x28c; // uint32_t : 1
		constexpr auto bSimulateGravity = 0x28c; // uint32_t : 1
		constexpr auto bIgnoreForces = 0x28c; // uint32_t : 1
		constexpr auto bCanWalkOffLedges = 0x28c; // uint32_t : 1
		constexpr auto bCanBeBaseForPawns = 0x28c; // uint32_t : 1
		constexpr auto bSimGravityDisabled = 0x28c; // uint32_t : 1
		constexpr auto bDirectHitWall = 0x28c; // uint32_t : 1
		constexpr auto bPushesRigidBodies = 0x28c; // uint32_t : 1
		constexpr auto bForceFloorCheck = 0x28c; // uint32_t : 1
		constexpr auto bForceKeepAnchor = 0x28c; // uint32_t : 1
		constexpr auto bCanMantle = 0x28c; // uint32_t : 1
		constexpr auto bCanClimbUp = 0x28c; // uint32_t : 1
		constexpr auto bCanClimbCeilings = 0x28c; // uint32_t : 1
		constexpr auto bCanSwatTurn = 0x290; // uint32_t : 1
		constexpr auto bCanLeap = 0x290; // uint32_t : 1
		constexpr auto bCanCoverSlip = 0x290; // uint32_t : 1
		constexpr auto bDisplayPathErrors = 0x290; // uint32_t : 1
		constexpr auto bCanPickupInventory = 0x290; // uint32_t : 1
		constexpr auto bAmbientCreature = 0x290; // uint32_t : 1
		constexpr auto bLOSHearing = 0x290; // uint32_t : 1
		constexpr auto bMuffledHearing = 0x290; // uint32_t : 1
		constexpr auto bDontPossess = 0x290; // uint32_t : 1
		constexpr auto bRollToDesired = 0x290; // uint32_t : 1
		constexpr auto bStationary = 0x290; // uint32_t : 1
		constexpr auto bCachedRelevant = 0x290; // uint32_t : 1
		constexpr auto bNoWeaponFiring = 0x290; // uint32_t : 1
		constexpr auto bModifyReachSpecCost = 0x290; // uint32_t : 1
		constexpr auto bModifyNavPointDest = 0x290; // uint32_t : 1
		constexpr auto bPathfindsAsVehicle = 0x290; // uint32_t : 1
		constexpr auto bPrevBypassSimulatedClientPhysics = 0x290; // uint32_t : 1
		constexpr auto bRunPhysicsWithNoController = 0x290; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x290; // uint32_t : 1
		constexpr auto bLimitFallAccel = 0x290; // uint32_t : 1
		constexpr auto bReplicateHealthToAll = 0x290; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x290; // uint32_t : 1
		constexpr auto bForceRegularVelocity = 0x290; // uint32_t : 1
		constexpr auto bPlayedDeath = 0x290; // uint32_t : 1
		constexpr auto bDesiredRotationSet = 0x290; // uint32_t : 1
		constexpr auto bLockDesiredRotation = 0x290; // uint32_t : 1
		constexpr auto bUnlockWhenReached = 0x290; // uint32_t : 1
		constexpr auto bNeedsBaseTickedFirst = 0x290; // uint32_t : 1
		constexpr auto bUsedByMatinee = 0x290; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x290; // uint32_t : 1
		constexpr auto bDebugShowCameraLocation = 0x290; // uint32_t : 1
		constexpr auto bFastAttachedMove = 0x290; // uint32_t : 1
		constexpr auto bSyncLocationToRigidbody = 0x294; // uint32_t : 1
		constexpr auto WalkingPhysics = 0x298; // EPhysics
		constexpr auto PathSearchType = 0x299; // EPathSearchType
		constexpr auto RemoteViewPitch = 0x29a; // char
		constexpr auto FlashCount = 0x29b; // char
		constexpr auto FiringMode = 0x29c; // char
		constexpr auto UncrouchTime = 0x2a0; // float
		constexpr auto CrouchHeight = 0x2a4; // float
		constexpr auto CrouchRadius = 0x2a8; // float
		constexpr auto FullHeight = 0x2ac; // int32_t
		constexpr auto NonPreferredVehiclePathMultiplier = 0x2b0; // float
		constexpr auto PathConstraintList = 0x2b4; // ObjectProperty
		constexpr auto PathGoalList = 0x2bc; // ObjectProperty
		constexpr auto DesiredSpeed = 0x2c4; // float
		constexpr auto MaxDesiredSpeed = 0x2c8; // float
		constexpr auto HearingThreshold = 0x2cc; // float
		constexpr auto Alertness = 0x2d0; // float
		constexpr auto SightRadius = 0x2d4; // float
		constexpr auto PeripheralVision = 0x2d8; // float
		constexpr auto AvgPhysicsTime = 0x2dc; // float
		constexpr auto Mass = 0x2e0; // float
		constexpr auto Buoyancy = 0x2e4; // float
		constexpr auto MeleeRange = 0x2e8; // float
		constexpr auto Anchor = 0x2ec; // ObjectProperty
		constexpr auto AnchorItem = 0x2f4; // int32_t
		constexpr auto LastAnchor = 0x2f8; // ObjectProperty
		constexpr auto FindAnchorFailedTime = 0x300; // float
		constexpr auto LastValidAnchorTime = 0x304; // float
		constexpr auto DestinationOffset = 0x308; // float
		constexpr auto NextPathRadius = 0x30c; // float
		constexpr auto SerpentineDir = 0x310; // FVector
		constexpr auto SerpentineDist = 0x31c; // float
		constexpr auto SerpentineTime = 0x320; // float
		constexpr auto SpawnTime = 0x324; // float
		constexpr auto MaxPitchLimit = 0x328; // int32_t
		constexpr auto GroundSpeed = 0x32c; // float
		constexpr auto WaterSpeed = 0x330; // float
		constexpr auto AirSpeed = 0x334; // float
		constexpr auto LadderSpeed = 0x338; // float
		constexpr auto AccelRate = 0x33c; // float
		constexpr auto JumpZ = 0x340; // float
		constexpr auto OutofWaterZ = 0x344; // float
		constexpr auto MaxOutOfWaterStepHeight = 0x348; // float
		constexpr auto AirControl = 0x34c; // float
		constexpr auto WalkingPct = 0x350; // float
		constexpr auto MovementSpeedModifier = 0x354; // float
		constexpr auto CrouchedPct = 0x358; // float
		constexpr auto MaxFallSpeed = 0x35c; // float
		constexpr auto AIMaxFallSpeedFactor = 0x360; // float
		constexpr auto BaseEyeHeight = 0x364; // float
		constexpr auto EyeHeight = 0x368; // float
		constexpr auto Floor = 0x36c; // FVector
		constexpr auto SplashTime = 0x378; // float
		constexpr auto HeadVolume = 0x37c; // ObjectProperty
		constexpr auto Health = 0x384; // WordProperty
		constexpr auto HealthMax = 0x386; // WordProperty
		constexpr auto BreathTime = 0x388; // float
		constexpr auto UnderWaterTime = 0x38c; // float
		constexpr auto LastPainTime = 0x390; // float
		constexpr auto KismetDeathDelayTime = 0x394; // float
		constexpr auto RMVelocity = 0x398; // FVector
		constexpr auto noise1spot = 0x3a4; // FVector
		constexpr auto noise1time = 0x3b0; // float
		constexpr auto noise1other = 0x3b4; // ObjectProperty
		constexpr auto noise1loudness = 0x3bc; // float
		constexpr auto noise2spot = 0x3c0; // FVector
		constexpr auto noise2time = 0x3cc; // float
		constexpr auto noise2other = 0x3d0; // ObjectProperty
		constexpr auto noise2loudness = 0x3d8; // float
		constexpr auto SoundDampening = 0x3dc; // float
		constexpr auto DamageScaling = 0x3e0; // float
		constexpr auto MenuName = 0x3e4; // FString
		constexpr auto ControllerClass = 0x3f4; // AAIController*
		constexpr auto PlayerReplicationInfo = 0x3fc; // ObjectProperty
		constexpr auto OnLadder = 0x404; // ObjectProperty
		constexpr auto LandMovementState = 0x40c; // FName
		constexpr auto WaterMovementState = 0x414; // FName
		constexpr auto LastStartSpot = 0x41c; // ObjectProperty
		constexpr auto LastStartTime = 0x424; // float
		constexpr auto TakeHitLocation = 0x428; // FVector
		constexpr auto HitDamageType = 0x434; // UDamageType*
		constexpr auto TearOffMomentum = 0x43c; // FVector
		constexpr auto Mesh = 0x448; // ComponentProperty
		constexpr auto CylinderComponent = 0x450; // ComponentProperty
		constexpr auto RBPushRadius = 0x458; // float
		constexpr auto RBPushStrength = 0x45c; // float
		constexpr auto DrivenVehicle = 0x460; // ObjectProperty
		constexpr auto AlwaysRelevantDistanceSquared = 0x468; // float
		constexpr auto BacksideAlwaysRelevantDistanceSquared = 0x46c; // float
		constexpr auto VehicleCheckRadius = 0x470; // float
		constexpr auto LastHitBy = 0x474; // ObjectProperty
		constexpr auto ViewPitchMin = 0x47c; // float
		constexpr auto ViewPitchMax = 0x480; // float
		constexpr auto AllowedYawError = 0x484; // int32_t
		constexpr auto DesiredRotation = 0x488; // FRotator
		constexpr auto InventoryManagerClass = 0x494; // AInventoryManager*
		constexpr auto InvManager = 0x49c; // ObjectProperty
		constexpr auto Weapon = 0x4a4; // ObjectProperty
		constexpr auto FlashLocation = 0x4ac; // FVector
		constexpr auto LastFiringFlashLocation = 0x4b8; // FVector
		constexpr auto ShotCount = 0x4c4; // int32_t
		constexpr auto PreRagdollCollisionComponent = 0x4c8; // ComponentProperty
		constexpr auto PhysicsPushBody = 0x4d0; // ObjectProperty
		constexpr auto FailedLandingCount = 0x4d8; // int32_t
		constexpr auto SlotNodes = 0x4dc; // TArray<ObjectProperty>
		constexpr auto InterpGroupList = 0x4ec; // TArray<ObjectProperty>
		constexpr auto FacialAudioComp = 0x4fc; // ComponentProperty
		constexpr auto MIC_PawnMat = 0x504; // ObjectProperty
		constexpr auto MIC_PawnHair = 0x50c; // ObjectProperty
		constexpr auto ScalarParameterInterpArray = 0x514; // TArray<FScalarParameterInterpStruct>
		constexpr auto RootMotionInterpCurve = 0x524; // FRootMotionCurve
		constexpr auto RootMotionInterpRate = 0x544; // float
		constexpr auto RootMotionInterpCurrentTime = 0x548; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x54c; // FVector
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0xb0; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0xb4; // FExpressionInput
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto High = 0xb0; // FExpressionInput
		constexpr auto Low = 0xe4; // FExpressionInput
	}

	namespace n_AStaticMeshCollectionActor {
		constexpr auto StaticMeshComponents = 0x244; // TArray<ComponentProperty>
		constexpr auto MaxStaticMeshComponents = 0x254; // int32_t
	}

	namespace n_UCombatWeaponRISBase_Scope {
		constexpr auto FPCustomAnim = 0xd08; // ObjectProperty
		constexpr auto FireAnimName = 0xd10; // FName
		constexpr auto ScopeMaterial = 0xd18; // ObjectProperty
		constexpr auto ReadyToFireParam = 0xd20; // FScopeMaterialVectorParameter
		constexpr auto UnavailableToFireParam = 0xd38; // FScopeMaterialVectorParameter
		constexpr auto bLastReadyToFire = 0xd50; // uint32_t : 1
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0xb0; // int32_t
		constexpr auto UTiling = 0xb4; // float
		constexpr auto VTiling = 0xb8; // float
		constexpr auto UnMirrorU = 0xbc; // uint32_t : 1
		constexpr auto UnMirrorV = 0xbc; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefPeriodAttendReward {
		constexpr auto AttendCodeName = 0x6c; // FString
		constexpr auto AttendDay = 0x7c; // int32_t
		constexpr auto RewardCodename = 0x80; // FString
	}

	namespace n_UCombatHUD_GrenadeIndicator {
		constexpr auto Indicators = 0xc0; // ObjectProperty [0x4]
		constexpr auto GrenadeIconMC = 0xe0; // ObjectProperty [0x4]
		constexpr auto bShowInit = 0x100; // uint32_t : 1
	}

	namespace n_ACombatPickupFactory {
		constexpr auto BaseMesh = 0x368; // ComponentProperty
		constexpr auto LightEnvironment = 0x370; // ComponentProperty
		constexpr auto bCheckTeam = 0x378; // uint32_t : 1
		constexpr auto bUpdatingPickup = 0x378; // uint32_t : 1
		constexpr auto bFloatingPickup = 0x378; // uint32_t : 1
		constexpr auto bRotatingPickup = 0x378; // uint32_t : 1
		constexpr auto bForceDelayedSpawn = 0x378; // uint32_t : 1
		constexpr auto bDelayedSpawn = 0x378; // uint32_t : 1
		constexpr auto bForceRespawn = 0x378; // uint32_t : 1
		constexpr auto TeamIndex = 0x37c; // Team
		constexpr auto RespawnSound = 0x380; // ObjectProperty
		constexpr auto PickupSound = 0x388; // ObjectProperty
		constexpr auto EnemyPickupSound = 0x390; // ObjectProperty
		constexpr auto BobTimer = 0x398; // float
		constexpr auto BobOffset = 0x39c; // float
		constexpr auto BobSpeed = 0x3a0; // float
		constexpr auto BobBaseOffset = 0x3a4; // float
		constexpr auto YawRotationRate = 0x3a8; // float
		constexpr auto SpinningParticleEffects = 0x3ac; // ComponentProperty
		constexpr auto SpinningParticleTemplate = 0x3b4; // ObjectProperty
		constexpr auto RespawnTime = 0x3bc; // float
	}

	namespace n_UCombatFrontEnd_Clan {
		constexpr auto ReqClanName = 0xd0; // FString
		constexpr auto RequiredMoney = 0xe0; // int32_t
		constexpr auto PopupClass = 0xe4; // ObjectProperty
	}

	namespace n_UParticleModuleSizeScaleByTime {
		constexpr auto SizeScaleByTime = 0x68; // FRawDistributionVector
		constexpr auto bEnableX = 0x8c; // uint32_t : 1
		constexpr auto bEnableY = 0x8c; // uint32_t : 1
		constexpr auto bEnableZ = 0x8c; // uint32_t : 1
	}

	namespace n_UMaterialFunction {
		constexpr auto StateId = 0x60; // FGuid
		constexpr auto Description = 0x70; // FString
		constexpr auto bExposeToLibrary = 0x80; // uint32_t : 1
		constexpr auto bReentrantFlag = 0x80; // uint32_t : 1
		constexpr auto LibraryCategories = 0x84; // TArray<FString>
		constexpr auto FunctionExpressions = 0x94; // TArray<ObjectProperty>
	}

	namespace n_UDrawQuadComponent {
		constexpr auto Texture = 0x250; // ObjectProperty
		constexpr auto Width = 0x258; // float
		constexpr auto Height = 0x25c; // float
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto PosX = 0xb0; // int32_t
		constexpr auto PosY = 0xb4; // int32_t
		constexpr auto SizeX = 0xb8; // int32_t
		constexpr auto SizeY = 0xbc; // int32_t
		constexpr auto Text = 0xc0; // FString
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x74; // FName
	}

	namespace n_AColorScaleVolume {
		constexpr auto ColorScale = 0x280; // FVector
		constexpr auto InterpTime = 0x28c; // float
	}

	namespace n_ACombatCTFGameReplicationInfo {
		constexpr auto VC_FlagScore = 0x380; // int32_t
		constexpr auto PM_FlagScore = 0x384; // int32_t
	}

	namespace n_ACombatAIPawn_TDMBase {
		constexpr auto AI_TDMBase = 0x11f0; // ObjectProperty
		constexpr auto AIGame_TDMBase = 0x11f8; // ObjectProperty
		constexpr auto BotArmorClass = 0x1200; // UCombatInstanceItem*
		constexpr auto bIsAIFemale = 0x1208; // uint32_t : 1
	}

	namespace n_ACombatSplineActor {
		constexpr auto bSpawnPoint = 0x2ac; // uint32_t : 1
		constexpr auto bMovementOnly = 0x2ac; // uint32_t : 1
		constexpr auto bFixedTrack = 0x2ac; // uint32_t : 1
		constexpr auto bSkipDestroy = 0x2ac; // uint32_t : 1
		constexpr auto bAddedSplineActorList = 0x2ac; // uint32_t : 1
		constexpr auto MovementSpeedModifier = 0x2b0; // float
		constexpr auto WaitingPeriod = 0x2b4; // float
		constexpr auto DefaultPointColor = 0x2b8; // FColor
		constexpr auto WaitingPointColor = 0x2bc; // FColor
		constexpr auto MovementPointColor = 0x2c0; // FColor
		constexpr auto TeamIndex = 0x2c4; // char
		constexpr auto MovementSpeedType = 0x2c5; // ESplineSpeedType
		constexpr auto SPawnActorType = 0x2c6; // ESplineActorType
		constexpr auto SpriteComp = 0x2c8; // ComponentProperty
		constexpr auto SphereComp = 0x2d0; // ComponentProperty
	}

	namespace n_UCombatAnimBlendByPhysics {
		constexpr auto POwner = 0x144; // ObjectProperty
		constexpr auto PhysicsMap = 0x14c; // int32_t [0xc]
		constexpr auto LastPhysics = 0x17c; // char
	}

	namespace n_UCombatDataTableRefMission {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto DefaultModeCodename = 0x80; // FString
		constexpr auto DisplayName = 0x90; // int32_t
		constexpr auto DefaultModeGroupCodename = 0x94; // FString
		constexpr auto OpenChannel = 0xa4; // int32_t
		constexpr auto ImageID_Bg = 0xa8; // int32_t
		constexpr auto OnlyChannelCodename = 0xac; // FString
	}

	namespace n_UCombatInstanceItem_ArmorBase {
		constexpr auto MeshInfo = 0x370; // FArmorMeshInfo [0x2]
	}

	namespace n_USeqEvent_MobileSwipe {
		constexpr auto Tolerance = 0x13c; // float
		constexpr auto MinDistance = 0x140; // float
		constexpr auto InitialTouch = 0x144; // FVector2D
		constexpr auto TouchedActors = 0x14c; // TArray<ObjectProperty>
		constexpr auto TraceDistance = 0x15c; // float
	}

	namespace n_AProjectile {
		constexpr auto Speed = 0x244; // float
		constexpr auto MaxSpeed = 0x248; // float
		constexpr auto bSwitchToZeroCollision = 0x24c; // uint32_t : 1
		constexpr auto bBlockedByInstigator = 0x24c; // uint32_t : 1
		constexpr auto bBegunPlay = 0x24c; // uint32_t : 1
		constexpr auto bRotationFollowsVelocity = 0x24c; // uint32_t : 1
		constexpr auto bIgnoreFoliageTouch = 0x24c; // uint32_t : 1
		constexpr auto ZeroCollider = 0x250; // ObjectProperty
		constexpr auto ZeroColliderComponent = 0x258; // ComponentProperty
		constexpr auto Damage = 0x260; // float
		constexpr auto DamageRadius = 0x264; // float
		constexpr auto MomentumTransfer = 0x268; // float
		constexpr auto MyDamageType = 0x26c; // UDamageType*
		constexpr auto SpawnSound = 0x274; // ObjectProperty
		constexpr auto ImpactSound = 0x27c; // ObjectProperty
		constexpr auto InstigatorController = 0x284; // ObjectProperty
		constexpr auto ImpactedActor = 0x28c; // ObjectProperty
		constexpr auto NetCullDistanceSquared = 0x294; // float
		constexpr auto CylinderComponent = 0x298; // ComponentProperty
	}

	namespace n_USeqAct_ProjAttack {
		constexpr auto ProjectileClass = 0x120; // ACombatProjectile*
		constexpr auto SpawnHegiht = 0x128; // float
		constexpr auto RandomRadius = 0x12c; // float
		constexpr auto InitDelay = 0x130; // float
		constexpr auto MaxSpawnCount = 0x134; // int32_t
		constexpr auto AimPS = 0x138; // ObjectProperty
		constexpr auto bUseWarningMessage = 0x140; // uint32_t : 1
		constexpr auto Instigator = 0x144; // ObjectProperty
		constexpr auto SpawnLocationList = 0x14c; // TArray<FVector>
		constexpr auto DestinationList = 0x15c; // TArray<FVector>
		constexpr auto AimPSLocList = 0x16c; // TArray<FVector>
		constexpr auto ProjSpawnCount = 0x17c; // int32_t
	}

	namespace n_UInterpTrackMorphWeight {
		constexpr auto MorphNodeName = 0xb8; // FName
	}

	namespace n_UCombatFrontEnd_CallingCardPage {
		constexpr auto CallingCardButtonInfo = 0xd0; // FFrontEndButtonStruct [0x2]
		constexpr auto CallingCardTabInfo = 0x100; // FFrontEndButtonStruct [0x2]
		constexpr auto CallingCardInfoList = 0x130; // TArray<FCallingCardInfo>
		constexpr auto SHOW_CALLINGCARD_COUNT = 0x140; // char
		constexpr auto selectID = 0x144; // int32_t
	}

	namespace n_UGripBTScriptNodeCache {
		constexpr auto ScriptNodes = 0x60; // TArray<ObjectProperty>
	}

	namespace n_USeqCond_CompareFloat {
		constexpr auto ValueA = 0xec; // float
		constexpr auto ValueB = 0xf0; // float
	}

	namespace n_APlayerCollectorGame {
		constexpr auto NumberOfClientsToWaitFor = 0x4c0; // int32_t
		constexpr auto URLToLoad = 0x4c4; // FString
	}

	namespace n_UFluidInfluenceComponent {
		constexpr auto bActive = 0x250; // uint32_t : 1
		constexpr auto RaindropFillEntireFluid = 0x250; // uint32_t : 1
		constexpr auto bIsToggleTriggered = 0x250; // uint32_t : 1
		constexpr auto FluidActor = 0x254; // ObjectProperty
		constexpr auto InfluenceType = 0x25c; // EInfluenceType
		constexpr auto MaxDistance = 0x260; // float
		constexpr auto WaveStrength = 0x264; // float
		constexpr auto WaveFrequency = 0x268; // float
		constexpr auto WavePhase = 0x26c; // float
		constexpr auto WaveRadius = 0x270; // float
		constexpr auto RaindropAreaRadius = 0x274; // float
		constexpr auto RaindropRadius = 0x278; // float
		constexpr auto RaindropStrength = 0x27c; // float
		constexpr auto RaindropRate = 0x280; // float
		constexpr auto FlowSpeed = 0x284; // float
		constexpr auto FlowNumRipples = 0x288; // int32_t
		constexpr auto FlowSideMotionRadius = 0x28c; // float
		constexpr auto FlowWaveRadius = 0x290; // float
		constexpr auto FlowStrength = 0x294; // float
		constexpr auto FlowFrequency = 0x298; // float
		constexpr auto SphereOuterRadius = 0x29c; // float
		constexpr auto SphereInnerRadius = 0x2a0; // float
		constexpr auto SphereStrength = 0x2a4; // float
		constexpr auto CurrentAngle = 0x2a8; // float
		constexpr auto CurrentTimer = 0x2ac; // float
		constexpr auto CurrentFluidActor = 0x2b0; // ObjectProperty
	}

	namespace n_UMcpMessageBase {
		constexpr auto McpMessageManagerClassName = 0x78; // FString
		constexpr auto CompressionType = 0x88; // EMcpMessageCompressionType
		constexpr auto MessageContentsList = 0x8c; // TArray<FMcpMessageContents>
		constexpr auto MessageLists = 0x9c; // TArray<FMcpMessageList>
		constexpr auto __OnCreateMessageComplete__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnDeleteMessageComplete__Delegate = 0xbc; // DelegateProperty
		constexpr auto __OnQueryMessagesComplete__Delegate = 0xcc; // DelegateProperty
		constexpr auto __OnQueryMessageContentsComplete__Delegate = 0xdc; // DelegateProperty
	}

	namespace n_ATestSplittingVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x280; // FPointer
	}

	namespace n_USeqAct_SetLocation {
		constexpr auto bSetLocation = 0x108; // uint32_t : 1
		constexpr auto bSetRotation = 0x108; // uint32_t : 1
		constexpr auto LocationValue = 0x10c; // FVector
		constexpr auto RotationValue = 0x118; // FRotator
		constexpr auto Target = 0x124; // ObjectProperty
	}

	namespace n_UInterpTrackFaceFX {
		constexpr auto FaceFXAnimSets = 0xa0; // TArray<ObjectProperty>
		constexpr auto FaceFXSeqs = 0xb0; // TArray<FFaceFXTrackKey>
		constexpr auto CachedActorFXAsset = 0xc0; // ObjectProperty
		constexpr auto FaceFXSoundCueKeys = 0xc8; // TArray<FFaceFXSoundCueKey>
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x68; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefShopTab {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto MainTab = 0x70; // FString
		constexpr auto SubTab = 0x80; // FString
	}

	namespace n_UCombatFrontEnd_MatchResult {
		constexpr auto DataStoreMission = 0xd0; // ObjectProperty
		constexpr auto UsedMilitaryBranchLabel = 0xd8; // FString
		constexpr auto InGameRankLabel = 0xe8; // FString
		constexpr auto CRPointLabel = 0xf8; // FString
		constexpr auto UsedCRPointLabel = 0x108; // FString
		constexpr auto AcquiredCRPointLabel = 0x118; // FString
		constexpr auto AIWaveLabel = 0x128; // FString
		constexpr auto RoundType = 0x138; // char
		constexpr auto MyTeamIndex = 0x139; // char
		constexpr auto WinnerTeamIndex = 0x13a; // char
		constexpr auto MyUsedMilitaryBranchType = 0x13b; // char
		constexpr auto PMScore = 0x13c; // int32_t
		constexpr auto VCScore = 0x140; // int32_t
		constexpr auto ModeNameString = 0x144; // FString
		constexpr auto MapNameString = 0x154; // FString
		constexpr auto GoalString = 0x164; // FString
		constexpr auto bBetaMode = 0x174; // uint32_t : 1
		constexpr auto bBetaMap = 0x174; // uint32_t : 1
		constexpr auto MyLevelUp = 0x174; // uint32_t : 1
		constexpr auto bClanMatch = 0x174; // uint32_t : 1
		constexpr auto bClanChange = 0x174; // uint32_t : 1
		constexpr auto bClanRankMatch = 0x174; // uint32_t : 1
		constexpr auto bCompSquadClan = 0x174; // uint32_t : 1
		constexpr auto bAiMatch = 0x174; // uint32_t : 1
		constexpr auto bHasModeScore = 0x174; // uint32_t : 1
		constexpr auto MyPlayedTimeString = 0x178; // FString
		constexpr auto MyNameString = 0x188; // FString
		constexpr auto ClanIconPathString = 0x198; // FString
		constexpr auto ClanEdgeIconPathString = 0x1a8; // FString
		constexpr auto ClanNameString = 0x1b8; // FString
		constexpr auto ClanColor = 0x1c8; // FString
		constexpr auto MyPrevLevel = 0x1d8; // int32_t
		constexpr auto MyCurLevel = 0x1dc; // int32_t
		constexpr auto MyGainExp = 0x1e0; // int32_t
		constexpr auto MyGainGameMoney = 0x1e4; // int32_t
		constexpr auto MyGainGameMedal = 0x1e8; // int32_t
		constexpr auto MyTeamRanking = 0x1ec; // int32_t
		constexpr auto MyTotalRanking = 0x1f0; // int32_t
		constexpr auto MyKillCount = 0x1f4; // int32_t
		constexpr auto MyDeathCount = 0x1f8; // int32_t
		constexpr auto MyAssistCount = 0x1fc; // int32_t
		constexpr auto MyLifeCount = 0x200; // int32_t
		constexpr auto MyScore = 0x204; // int32_t
		constexpr auto MyModeScore = 0x208; // int32_t
		constexpr auto MyUsedMilitaryBranchString = 0x20c; // FString
		constexpr auto MyRank = 0x21c; // int32_t
		constexpr auto MyRankNameString = 0x220; // FString
		constexpr auto MyUsedCRPoint = 0x230; // int32_t
		constexpr auto MyAcquiredCRPoint = 0x234; // int32_t
		constexpr auto MyCurrentLevelIconUrl = 0x238; // FString
		constexpr auto MyCurrentSalaryIconUrl = 0x248; // FString
		constexpr auto MyNextLevelIconUrl = 0x258; // FString
		constexpr auto MyNextSalaryIconUrl = 0x268; // FString
		constexpr auto MyPromotionName = 0x278; // FString
		constexpr auto MyClanPoint = 0x288; // FString
		constexpr auto MyClanLevel = 0x298; // FString
		constexpr auto MyClanLevelColor = 0x2a8; // FString
		constexpr auto nChannelType = 0x2b8; // int32_t
		constexpr auto ViperCircleClanName = 0x2bc; // FString
		constexpr auto PeaceMakerClanName = 0x2cc; // FString
		constexpr auto BestScorePlayerName = 0x2dc; // FString
		constexpr auto BestKillPlayerName = 0x2ec; // FString
		constexpr auto BestAssistPlayerName = 0x2fc; // FString
		constexpr auto BestMissionScorePlayerName = 0x30c; // FString
		constexpr auto BestScoreLevelUrl = 0x31c; // FString
		constexpr auto BestKillLevelUrl = 0x32c; // FString
		constexpr auto BestAssistLevelUrl = 0x33c; // FString
		constexpr auto BestMissionScoreLevelUrl = 0x34c; // FString
		constexpr auto BestScoreEmblemUrl = 0x35c; // FString
		constexpr auto BestKillEmblemUrl = 0x36c; // FString
		constexpr auto BestAssistEmblemUrl = 0x37c; // FString
		constexpr auto BestMissionScoreEmblemUrl = 0x38c; // FString
		constexpr auto BestScoreEmblemEdgeUrl = 0x39c; // FString
		constexpr auto BestKillEmblemEdgeUrl = 0x3ac; // FString
		constexpr auto BestAssistEmblemEdgeUrl = 0x3bc; // FString
		constexpr auto BestMissionScoreEmblemEdgeUrl = 0x3cc; // FString
		constexpr auto bestScoreClanName = 0x3dc; // FString
		constexpr auto bestKillClanName = 0x3ec; // FString
		constexpr auto BestAssistClanName = 0x3fc; // FString
		constexpr auto BestMissionScoreClanName = 0x40c; // FString
		constexpr auto BestScoreClanColor = 0x41c; // FString
		constexpr auto BestKillClanColor = 0x42c; // FString
		constexpr auto BestAssistClanColor = 0x43c; // FString
		constexpr auto BestMissionScoreClanColor = 0x44c; // FString
		constexpr auto BestScoreClanLevel = 0x45c; // FString
		constexpr auto BestKillClanLevel = 0x46c; // FString
		constexpr auto BestAssistClanLevel = 0x47c; // FString
		constexpr auto BestMissionScoreClanLevel = 0x48c; // FString
		constexpr auto BestScoreClanLevelColor = 0x49c; // FString
		constexpr auto BestKillClanLevelColor = 0x4ac; // FString
		constexpr auto BestAssistClanLevelColor = 0x4bc; // FString
		constexpr auto BestMissionScoreClanLevelColor = 0x4cc; // FString
		constexpr auto BestScoreTierUrl = 0x4dc; // FString
		constexpr auto BestKillTierUrl = 0x4ec; // FString
		constexpr auto BestAssistTierUrl = 0x4fc; // FString
		constexpr auto BestMissionScoreTierUrl = 0x50c; // FString
		constexpr auto bestScore = 0x51c; // int32_t
		constexpr auto bestKill = 0x520; // int32_t
		constexpr auto BestAssist = 0x524; // int32_t
		constexpr auto BestMissionScore = 0x528; // int32_t
		constexpr auto ModeUIType = 0x52c; // int32_t
		constexpr auto ScoreboardList = 0x530; // TArray<FUIScoreboardData>
		constexpr auto RETURN_TO_MATCHROOM_TIME_MAX = 0x540; // int32_t
		constexpr auto ReturnToMatchroomTime = 0x544; // int32_t
		constexpr auto SelectedIndex = 0x548; // int32_t
		constexpr auto CurrentModeGroupIndex = 0x54c; // int32_t
	}

	namespace n_UGripBTInterface {
		constexpr auto DeltaTime = 0x60; // float
		constexpr auto Time = 0x64; // float
		constexpr auto Blackboard = 0x68; // ObjectProperty
		constexpr auto ActionFramework = 0x70; // ObjectProperty
	}

	namespace n_UAnimNodeSlot {
		constexpr auto bIsPlayingCustomAnim = 0x100; // uint32_t : 1
		constexpr auto bEarlyAnimEndNotify = 0x100; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x100; // uint32_t : 1
		constexpr auto bAdditiveAnimationsOverrideSource = 0x100; // uint32_t : 1
		constexpr auto bIsBeingUsedByInterpGroup = 0x100; // uint32_t : 1
		constexpr auto bDontAddToAlwaysTickArray = 0x100; // uint32_t : 1
		constexpr auto PendingBlendOutTime = 0x104; // float
		constexpr auto CustomChildIndex = 0x108; // int32_t
		constexpr auto TargetChildIndex = 0x10c; // int32_t
		constexpr auto TargetWeight = 0x110; // TArray<float>
		constexpr auto BlendTimeToGo = 0x120; // float
	}

	namespace n_USeqVar_String {
		constexpr auto StrValue = 0xa0; // FString
	}

	namespace n_UCombatRadioSystem {
		constexpr auto RadioKeyBindings = 0x60; // TArray<FKeyBindingInfo>
		constexpr auto bIsBlockingRadioKey = 0x70; // uint32_t : 1
		constexpr auto bIsRadioKeyBinding = 0x70; // uint32_t : 1
		constexpr auto bSelectingSuccess = 0x70; // uint32_t : 1
		constexpr auto RadioKeyBlockTime = 0x74; // int32_t
		constexpr auto AutoHideTime = 0x78; // int32_t
		constexpr auto UIObject = 0x7c; // ObjectProperty
		constexpr auto MarkerMenuUIObject = 0x84; // ObjectProperty
		constexpr auto OwnerPC = 0x8c; // ObjectProperty
		constexpr auto LastSelectTabIndex = 0x94; // RadioKeyType
	}

	namespace n_UActorFactoryLensFlare {
		constexpr auto LensFlareObject = 0x9c; // ObjectProperty
	}

	namespace n_ASplineLoftActor {
		constexpr auto ScaleX = 0x2ac; // float
		constexpr auto ScaleY = 0x2b0; // float
		constexpr auto SplineMeshComps = 0x2b4; // TArray<ComponentProperty>
		constexpr auto DeformMesh = 0x2c4; // ObjectProperty
		constexpr auto DeformMeshMaterials = 0x2cc; // TArray<ObjectProperty>
		constexpr auto Roll = 0x2dc; // float
		constexpr auto WorldXDir = 0x2e0; // FVector
		constexpr auto Offset = 0x2ec; // FVector2D
		constexpr auto bSmoothInterpRollAndScale = 0x2f4; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x2f4; // uint32_t : 1
		constexpr auto MeshLightEnvironment = 0x2f8; // ComponentProperty
		constexpr auto MeshMaxDrawDistance = 0x300; // float
	}

	namespace n_USeqEvent_HudRender {
		constexpr auto Targets = 0x128; // TArray<ObjectProperty>
		constexpr auto bIsActive = 0x138; // uint32_t : 1
		constexpr auto AuthoredGlobalScale = 0x13c; // float
	}

	namespace n_UOnlineProfileSettings {
		constexpr auto ProfileSettingIds = 0xa4; // TArray<int32_t>
		constexpr auto DefaultSettings = 0xb4; // TArray<FOnlineProfileSetting>
		constexpr auto OwnerMappings = 0xc4; // TArray<FIdToStringMapping>
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto VectorProp = 0x70; // FPointer
		constexpr auto ResetVector = 0x78; // FVector
	}

	namespace n_UWindowsClient {
		constexpr auto AudioDeviceClass = 0x1e4; // UAudioDevice*
		constexpr auto AllowJoystickInput = 0x21c; // int32_t
	}

	namespace n_UPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenSpecTypes = 0x6c; // float
		constexpr auto InitLocation = 0x70; // FVector
		constexpr auto ReachSpecClass = 0x7c; // UReachSpec*
	}

	namespace n_UForceFeedbackManager {
		constexpr auto bAllowsForceFeedback = 0x60; // uint32_t : 1
		constexpr auto bIsPaused = 0x60; // uint32_t : 1
		constexpr auto FFWaveform = 0x64; // ObjectProperty
		constexpr auto CurrentSample = 0x6c; // int32_t
		constexpr auto ElapsedTime = 0x70; // float
		constexpr auto ScaleAllWaveformsBy = 0x74; // float
		constexpr auto WaveformInstigator = 0x78; // ObjectProperty
	}

	namespace n_UNavMeshGoalFilter_OutOfViewFrom {
		constexpr auto GoalPoly = 0x6c; // FPointer
		constexpr auto OutOfViewLocation = 0x74; // FVector
	}

	namespace n_USeqAct_SetCameraTarget {
		constexpr auto CameraTarget = 0x108; // ObjectProperty
		constexpr auto TransitionParams = 0x110; // FViewTargetTransitionParams
	}

	namespace n_UAnimNodeAdditiveBlending {
		constexpr auto bPassThroughWhenNotRendered = 0x110; // uint32_t : 1
	}

	namespace n_USeqAct_ConsoleCommand {
		constexpr auto Command = 0x108; // FString
		constexpr auto Commands = 0x118; // TArray<FString>
	}

	namespace n_UCombatDataTableRefCompetitiveRewardPopup {
		constexpr auto PopupTableType = 0x6c; // int32_t
		constexpr auto FirstTextID = 0x70; // int32_t
		constexpr auto RewardToken = 0x74; // int32_t
		constexpr auto RewardMedal = 0x78; // int32_t
		constexpr auto RewardCodename = 0x7c; // int32_t [0x4]
		constexpr auto RewardCallingCard = 0x8c; // uint32_t : 1
		constexpr auto RewardSpray = 0x8c; // uint32_t : 1
	}

	namespace n_USVehicleWheel {
		constexpr auto Steer = 0x70; // float
		constexpr auto MotorTorque = 0x74; // float
		constexpr auto BrakeTorque = 0x78; // float
		constexpr auto ChassisTorque = 0x7c; // float
		constexpr auto bPoweredWheel = 0x80; // uint32_t : 1
		constexpr auto bHoverWheel = 0x80; // uint32_t : 1
		constexpr auto bCollidesVehicles = 0x80; // uint32_t : 1
		constexpr auto bCollidesPawns = 0x80; // uint32_t : 1
		constexpr auto bIsSquealing = 0x80; // uint32_t : 1
		constexpr auto bWheelOnGround = 0x80; // uint32_t : 1
		constexpr auto SteerFactor = 0x84; // float
		constexpr auto SkelControlName = 0x88; // FName
		constexpr auto WheelControl = 0x90; // ObjectProperty
		constexpr auto BoneName = 0x98; // FName
		constexpr auto BoneOffset = 0xa0; // FVector
		constexpr auto WheelRadius = 0xac; // float
		constexpr auto SuspensionTravel = 0xb0; // float
		constexpr auto SuspensionSpeed = 0xb4; // float
		constexpr auto WheelParticleSystem = 0xb8; // ObjectProperty
		constexpr auto Side = 0xc0; // EWheelSide
		constexpr auto LongSlipFactor = 0xc4; // float
		constexpr auto LatSlipFactor = 0xc8; // float
		constexpr auto HandbrakeLongSlipFactor = 0xcc; // float
		constexpr auto HandbrakeLatSlipFactor = 0xd0; // float
		constexpr auto ParkedSlipFactor = 0xd4; // float
		constexpr auto WheelPosition = 0xd8; // FVector
		constexpr auto SpinVel = 0xe4; // float
		constexpr auto LongSlipRatio = 0xe8; // float
		constexpr auto LatSlipAngle = 0xec; // float
		constexpr auto ContactNormal = 0xf0; // FVector
		constexpr auto LongDirection = 0xfc; // FVector
		constexpr auto LatDirection = 0x108; // FVector
		constexpr auto ContactForce = 0x114; // float
		constexpr auto LongImpulse = 0x118; // float
		constexpr auto LatImpulse = 0x11c; // float
		constexpr auto DesiredSuspensionPosition = 0x120; // float
		constexpr auto SuspensionPosition = 0x124; // float
		constexpr auto CurrentRotation = 0x128; // float
		constexpr auto WheelShape = 0x12c; // FPointer
		constexpr auto WheelMaterialIndex = 0x134; // int32_t
		constexpr auto WheelPSCClass = 0x138; // UParticleSystemComponent*
		constexpr auto WheelParticleComp = 0x140; // ComponentProperty
		constexpr auto SlipParticleParamName = 0x148; // FName
	}

	namespace n_UStaticMesh {
		constexpr auto LODInfo = 0x70; // TArray<FStaticMeshLODInfo>
		constexpr auto LODDistanceRatio = 0x80; // float
		constexpr auto LODMaxRange = 0x84; // float
		constexpr auto LightMapResolution = 0x98; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x9c; // int32_t
		constexpr auto Sockets = 0xa0; // TArray<ObjectProperty>
		constexpr auto BodySetup = 0x108; // ObjectProperty
		constexpr auto UseSimpleLineCollision = 0x14c; // uint32_t : 1
		constexpr auto UseSimpleBoxCollision = 0x150; // uint32_t : 1
		constexpr auto UseSimpleRigidBodyCollision = 0x154; // uint32_t : 1
		constexpr auto UseFullPrecisionUVs = 0x158; // uint32_t : 1
		constexpr auto bUsedForInstancing = 0x15c; // uint32_t : 1
		constexpr auto ConsolePreallocateInstanceCount = 0x160; // int32_t
		constexpr auto bUseMaximumStreamingTexelRatio = 0x164; // uint32_t : 1
		constexpr auto bPartitionForEdgeGeometry = 0x168; // uint32_t : 1
		constexpr auto bCanBecomeDynamic = 0x16c; // uint32_t : 1
		constexpr auto bStripComplexCollisionForConsole = 0x174; // uint32_t : 1
		constexpr auto bPerLODStaticLightingForInstancing = 0x178; // uint32_t : 1
		constexpr auto StreamingDistanceMultiplier = 0x17c; // float
	}

	namespace n_UCombatFrontEnd_SpecialGoodsInfoPopup {
		constexpr auto __SpecialGoodsSort__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x68; // FRawDistributionVector
	}

	namespace n_UParticleModuleSizeScaleByDistance {
		constexpr auto SizeScaleByDistance = 0x68; // FRawDistributionVector
		constexpr auto bEnableX = 0x8c; // uint32_t : 1
		constexpr auto bEnableY = 0x8c; // uint32_t : 1
		constexpr auto bEnableZ = 0x8c; // uint32_t : 1
		constexpr auto bCalculatePerParticleDistance = 0x8c; // uint32_t : 1
	}

	namespace n_USeqAct_SetMatInstVectorParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto VectorValue = 0x118; // FLinearColor
	}

	namespace n_UNavMeshGoal_Random {
		constexpr auto MinDist = 0x7c; // int32_t
		constexpr auto BestRating = 0x80; // float
		constexpr auto PartialGoal = 0x84; // FPointer
	}

	namespace n_UWebApplication {
		constexpr auto WorldInfo = 0x60; // ObjectProperty
		constexpr auto WebServer = 0x68; // ObjectProperty
		constexpr auto Path = 0x70; // FString
	}

	namespace n_UCombatAnimBlendByFall {
		constexpr auto PreLandTime = 0x144; // float
		constexpr auto PreLandStartUprightTime = 0x148; // float
		constexpr auto FallState = 0x14c; // EBlendFallTypes
		constexpr auto LastFallingVelocity = 0x150; // float
		constexpr auto CachedLeanNode = 0x154; // ObjectProperty
	}

	namespace n_ACBWeaponAttachment {
		constexpr auto Mesh = 0x244; // ComponentProperty
		constexpr auto MeshParts = 0x24c; // TArray<FMeshPart>
		constexpr auto PhysicsAsset = 0x25c; // ObjectProperty
		constexpr auto BoundsScaleForHolster = 0x264; // float
		constexpr auto DefaultBoundsScale = 0x268; // float
		constexpr auto bAlwaysShowTheHolster = 0x26c; // uint32_t : 1
		constexpr auto UseGripIK = 0x26c; // uint32_t : 1
		constexpr auto bExistLauncherGripSocket = 0x26c; // uint32_t : 1
		constexpr auto bCalculateGripOffset = 0x26c; // uint32_t : 1
		constexpr auto bInitWeaponMesh = 0x26c; // uint32_t : 1
		constexpr auto ExtraEffectSocket = 0x270; // FName
		constexpr auto MuzzleFlashPSC = 0x278; // ComponentProperty
		constexpr auto MuzzleFlashPSCTemplate = 0x280; // ObjectProperty
		constexpr auto MuzzleFlashPSCSilencerTemplate = 0x288; // ObjectProperty
		constexpr auto ExtraPSC = 0x290; // ComponentProperty
		constexpr auto ExtraPSCTemplate = 0x298; // ObjectProperty
		constexpr auto TracerPSCTemplate = 0x2a0; // ObjectProperty
		constexpr auto TracerPSCTemplate3rd = 0x2a8; // ObjectProperty
		constexpr auto MuzzleFlashLightClass = 0x2b0; // UCombatExplosionLight*
		constexpr auto MuzzleLowDetailFlashLightClass = 0x2b8; // UCombatExplosionLight*
		constexpr auto MuzzleFlashLight = 0x2c0; // ComponentProperty
		constexpr auto MuzzleFlashDuration = 0x2c8; // float
		constexpr auto AttachmentSocket = 0x2cc; // FName
		constexpr auto AttachmentSocket_Inven = 0x2d4; // FName
		constexpr auto BulletWhip = 0x2dc; // ObjectProperty
		constexpr auto BulletWhipRadius = 0x2e4; // float
		constexpr auto BulletWhipAdditionalHeight = 0x2e8; // float
		constexpr auto MaxImpactEffectDistance = 0x2ec; // float
		constexpr auto MaxFireEffectDistance = 0x2f0; // float
		constexpr auto MaxDecalRangeSq = 0x2f4; // float
		constexpr auto SpawnTracerPerNum = 0x2f8; // int32_t
		constexpr auto SpawnTracerPerNumForFP = 0x2fc; // int32_t
		constexpr auto WeapAimProfileName = 0x300; // FName [0x2]
		constexpr auto CustomAnim = 0x310; // ObjectProperty
		constexpr auto WeaponMasterAnimSet = 0x318; // FString [0x2]
		constexpr auto WeaponSubAnimSet = 0x338; // FString [0x2]
		constexpr auto AttachmentAnimSet = 0x358; // FString [0x2]
		constexpr auto HandGripSocket = 0x378; // FName [0x2]
		constexpr auto LauncherGripSocket = 0x388; // FName [0x2]
		constexpr auto InvenAnimSeq = 0x398; // FString
		constexpr auto InvenAnimChances = 0x3a8; // float [0x3]
		constexpr auto FireAnimType = 0x3b4; // WeapFireAnimType
		constexpr auto HoldersGender = 0x3b5; // EGender
		constexpr auto bPendingToLoadAsyncAnimSet = 0x3b6; // char
		constexpr auto AnimNotifyData = 0x3b8; // TArray<FAnimNotifyObjectData>
		constexpr auto CharacterAnimSetBlendTime = 0x3c8; // float
		constexpr auto LastAnimSetBlendTime = 0x3cc; // float
		constexpr auto PSC_ShellEject = 0x3d0; // ComponentProperty
		constexpr auto RecoilIndex = 0x3d8; // int32_t
		constexpr auto HideBoneDataByWeapState = 0x3dc; // TArray<FHideBoneDataByWeaponState>
		constexpr auto CachedHideBoneData = 0x3ec; // TArray<FName>
		constexpr auto HolsterSocketName = 0x3fc; // FName
		constexpr auto HolsterBoneName = 0x404; // FName
		constexpr auto OwnerWeapon = 0x40c; // ObjectProperty
		constexpr auto IronSightTMNodeRear = 0x414; // ObjectProperty
		constexpr auto IronSightTMNodeFront = 0x41c; // ObjectProperty
	}

	namespace n_USeqAct_CombatTutorial_QuestOff {
		constexpr auto QuestID = 0x108; // FString
		constexpr auto ResetAll = 0x118; // uint32_t : 1
	}

	namespace n_UPBRuleNodeSubRuleset {
		constexpr auto SubRuleset = 0x70; // ObjectProperty
	}

	namespace n_ACombatPlayerControllerBase {
		constexpr auto AirSpeed = 0x750; // float
		constexpr auto CBHUD = 0x754; // ObjectProperty
		constexpr auto UIDataStore_PendingDialogMessage = 0x75c; // ObjectProperty
		constexpr auto UIDataStore_ETC = 0x764; // ObjectProperty
		constexpr auto CombatPRI = 0x76c; // ObjectProperty
		constexpr auto bAimAssistEnabled = 0x774; // uint32_t : 1
		constexpr auto bMeleeAssistEnabled = 0x774; // uint32_t : 1
		constexpr auto bIsLocalPC = 0x774; // uint32_t : 1
		constexpr auto bIgnoreWeaponInput = 0x774; // uint32_t : 1
		constexpr auto bIgnoreInput = 0x774; // uint32_t : 1
		constexpr auto bScreenShotRequest = 0x774; // uint32_t : 1
		constexpr auto CameraAnimPlayer = 0x778; // ObjectProperty
		constexpr auto CurrentCameraAnimInstant = 0x780; // ObjectProperty
		constexpr auto CamOverridePostProcess = 0x788; // FPostProcessSettings
		constexpr auto ZoomFOVRatio = 0x8ec; // float
		constexpr auto CombatCheatManager = 0x8f0; // ObjectProperty
		constexpr auto CurrentInputExpireTime = 0x8f8; // float
		constexpr auto MaxWallHackCaptureCounter = 0x8fc; // int32_t
		constexpr auto CurrentWallHackCaptureCounter = 0x900; // int32_t
		constexpr auto LastHackType = 0x904; // char
		constexpr auto GRADE = 0x905; // char
	}

	namespace n_UUIDataProvider_MenuItem {
		constexpr auto OptionType = 0x94; // EMenuOptionType
		constexpr auto OptionSet = 0x98; // TArray<FName>
		constexpr auto DataStoreMarkup = 0xa8; // FString
		constexpr auto DescriptionMarkup = 0xb8; // FString
		constexpr auto RequiredGameMode = 0xc8; // FName
		constexpr auto FriendlyName = 0xd0; // FString
		constexpr auto CustomFriendlyName = 0xe0; // FString
		constexpr auto Description = 0xf0; // FString
		constexpr auto bEditableCombo = 0x100; // uint32_t : 1
		constexpr auto bNumericCombo = 0x100; // uint32_t : 1
		constexpr auto bKeyboardOrMouseOption = 0x100; // uint32_t : 1
		constexpr auto bOnlineOnly = 0x100; // uint32_t : 1
		constexpr auto bOfflineOnly = 0x100; // uint32_t : 1
		constexpr auto bSearchAllInis = 0x100; // uint32_t : 1
		constexpr auto bRemoveOn360 = 0x100; // uint32_t : 1
		constexpr auto bRemoveOnPC = 0x100; // uint32_t : 1
		constexpr auto bRemoveOnPS3 = 0x100; // uint32_t : 1
		constexpr auto EditBoxMaxLength = 0x104; // int32_t
		constexpr auto RangeData = 0x108; // FUIRangeData
		constexpr auto SchemaCellFields = 0x11c; // TArray<FName>
		constexpr auto IniName = 0x12c; // FString
	}

	namespace n_ACombatTDMMeleeModePRI {
		constexpr auto bHasSpecialWeapon = 0x520; // uint32_t : 1
		constexpr auto bLastHasSpecialWeapon = 0x520; // uint32_t : 1
	}

	namespace n_USeqEvent_LOS {
		constexpr auto ScreenCenterDistance = 0x128; // float
		constexpr auto TriggerDistance = 0x12c; // float
		constexpr auto bCheckForObstructions = 0x130; // uint32_t : 1
	}

	namespace n_UFogVolumeLinearHalfspaceDensityComponent {
		constexpr auto PlaneDistanceFactor = 0xd4; // float
		constexpr auto HalfspacePlane = 0xe0; // FPlane
	}

	namespace n_UPartyBeaconClient {
		constexpr auto HostPendingRequest = 0x98; // FOnlineGameSearchResult
		constexpr auto PendingRequest = 0xa8; // FPartyReservation
		constexpr auto ClientBeaconState = 0xc4; // EPartyBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xc5; // EPartyBeaconClientRequest
		constexpr auto ReservationRequestTimeout = 0xc8; // float
		constexpr auto ReservationRequestElapsedTime = 0xcc; // float
		constexpr auto ResolverClassName = 0xd0; // FString
		constexpr auto ResolverClass = 0xe0; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0xe8; // ObjectProperty
		constexpr auto __OnReservationRequestComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __OnReservationCountUpdated__Delegate = 0x100; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnHostIsReady__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnHostHasCancelled__Delegate = 0x130; // DelegateProperty
	}

	namespace n_ACombatBotReplicationInfo {
		constexpr auto SpawnerID = 0x3a8; // int32_t
		constexpr auto Cost = 0x3ac; // int32_t
		constexpr auto BotGroupID = 0x3b0; // int32_t
		constexpr auto BotID = 0x3b4; // int32_t
	}

	namespace n_UNavMeshPath_SameCoverLink {
		constexpr auto TestLink = 0x78; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_CharacterInfo {
		constexpr auto TabList = 0xd0; // ObjectProperty [0x4]
	}

	namespace n_UCombatHUD_BlockAndReport {
		constexpr auto ImageReportURL = 0xc0; // FString
		constexpr auto BlockAndReportLabelSettingInfos = 0xd0; // TArray<FBlockAndReportLabelSettingInfo>
		constexpr auto BlockAndReportRadioButtonInfos = 0xe0; // TArray<FBlockAndReportLabelSettingInfo>
		constexpr auto ReportReceiptList = 0xf0; // TArray<FReportPlayerInfo>
		constexpr auto ReportPlayerID = 0x100; // int32_t
	}

	namespace n_UPBRuleNodeExtractTopBottom {
		constexpr auto ExtractTopZ = 0x70; // float
		constexpr auto ExtractNotTopZ = 0x74; // float
		constexpr auto ExtractBottomZ = 0x78; // float
		constexpr auto ExtractNotBottomZ = 0x7c; // float
	}

	namespace n_UCombatHUD_Chat {
		constexpr auto LastWhisperSenderName = 0xbc; // FString
	}

	namespace n_UCombatFirstAnimBlendByZoom {
		constexpr auto bUseBlendTime = 0x144; // uint32_t : 1
		constexpr auto Weapon = 0x148; // ObjectProperty
		constexpr auto LastZoomState = 0x150; // EZoomState
	}

	namespace n_UCombatDataTableRefExp {
		constexpr auto Level = 0x6c; // int32_t
		constexpr auto GoalExp = 0x70; // int32_t
		constexpr auto SmallImage = 0x74; // FString
		constexpr auto ImageID_Small = 0x84; // int32_t
		constexpr auto BigImage = 0x88; // FString
		constexpr auto ImageID_Big = 0x98; // int32_t
		constexpr auto LevelNameID = 0x9c; // int32_t
		constexpr auto LevelUpTopImage = 0xa0; // FString
		constexpr auto ImageID_LevelUpTop = 0xb0; // int32_t
		constexpr auto LevelUpBottomImage = 0xb4; // FString
		constexpr auto ImageID_LevelUpBottom = 0xc4; // int32_t
		constexpr auto RewardCodename = 0xc8; // FString
		constexpr auto ImageID_RewardCode = 0xd8; // int32_t
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0xa0; // FInterpCurveFloat
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_USeqEvent_MobileLook {
		constexpr auto Yaw = 0x138; // float
		constexpr auto StickStrength = 0x13c; // float
		constexpr auto RotationVector = 0x140; // FVector
	}

	namespace n_UTerrainComponent {
		constexpr auto ShadowMaps = 0x250; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x260; // TArray<FGuid>
		constexpr auto TerrainObject = 0x270; // FPointer
		constexpr auto SectionBaseX = 0x278; // int32_t
		constexpr auto SectionBaseY = 0x27c; // int32_t
		constexpr auto SectionSizeX = 0x280; // int32_t
		constexpr auto SectionSizeY = 0x284; // int32_t
		constexpr auto TrueSectionSizeX = 0x288; // int32_t
		constexpr auto TrueSectionSizeY = 0x28c; // int32_t
		constexpr auto LightMap = 0x290; // FLightMapRef
		constexpr auto PatchBounds = 0x298; // TArray<FTerrainPatchBounds>
		constexpr auto BatchMaterials = 0x2a8; // TArray<FTerrainMaterialMask>
		constexpr auto FullBatch = 0x2b8; // int32_t
		constexpr auto BVTree = 0x2bc; // FTerrainBVTree
		constexpr auto CollisionVertices = 0x2cc; // TArray<FVector>
		constexpr auto RBHeightfield = 0x2dc; // FPointer
		constexpr auto bDisplayCollisionLevel = 0x2e4; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefChannelBindRegion {
		constexpr auto ChannelCodeName = 0x6c; // FString
		constexpr auto ServiceRegionID = 0x7c; // int32_t
	}

	namespace n_USeqAct_IgnoreKeys {
		constexpr auto AllowedPlayerIndex = 0x108; // int32_t
		constexpr auto IgnoreKeyNames = 0x10c; // TArray<FName>
		constexpr auto bIsClearIgnoreKeys = 0x11c; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefModeGroup {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto Index = 0x7c; // int32_t
		constexpr auto BindMission = 0x80; // FString
		constexpr auto DefaultMode = 0x90; // FString
		constexpr auto SelectType = 0xa0; // int32_t
		constexpr auto DisplayName = 0xa4; // int32_t
		constexpr auto DisplayDescription = 0xa8; // int32_t
		constexpr auto DisplayModeName = 0xac; // int32_t
		constexpr auto ImageID_DisplayThumbnail = 0xb0; // int32_t
		constexpr auto ImageID_BGThumbnail = 0xb4; // int32_t
		constexpr auto ImageID_Title = 0xb8; // int32_t
		constexpr auto ImageID_ModeThumbnail = 0xbc; // int32_t
		constexpr auto MatchMakingID = 0xc0; // int32_t
		constexpr auto RegionPingGroupID = 0xc4; // int32_t
		constexpr auto ShowLevel = 0xc8; // uint32_t : 1
		constexpr auto ShowDeath = 0xc8; // uint32_t : 1
		constexpr auto ShowRevenge = 0xc8; // uint32_t : 1
	}

	namespace n_APhysicsVolume {
		constexpr auto ZoneVelocity = 0x280; // FVector
		constexpr auto bVelocityAffectsWalking = 0x28c; // uint32_t : 1
		constexpr auto bPainCausing = 0x28c; // uint32_t : 1
		constexpr auto bAIShouldIgnorePain = 0x28c; // uint32_t : 1
		constexpr auto bEntryPain = 0x28c; // uint32_t : 1
		constexpr auto BACKUP_bPainCausing = 0x28c; // uint32_t : 1
		constexpr auto bDestructive = 0x28c; // uint32_t : 1
		constexpr auto bNoInventory = 0x28c; // uint32_t : 1
		constexpr auto bMoveProjectiles = 0x28c; // uint32_t : 1
		constexpr auto bBounceVelocity = 0x28c; // uint32_t : 1
		constexpr auto bNeutralZone = 0x28c; // uint32_t : 1
		constexpr auto bCrowdAgentsPlayDeathAnim = 0x28c; // uint32_t : 1
		constexpr auto bPhysicsOnContact = 0x28c; // uint32_t : 1
		constexpr auto bWaterVolume = 0x28c; // uint32_t : 1
		constexpr auto GroundFriction = 0x290; // float
		constexpr auto TerminalVelocity = 0x294; // float
		constexpr auto DamagePerSec = 0x298; // float
		constexpr auto DamageType = 0x29c; // UDamageType*
		constexpr auto Priority = 0x2a4; // int32_t
		constexpr auto FluidFriction = 0x2a8; // float
		constexpr auto PainInterval = 0x2ac; // float
		constexpr auto RigidBodyDamping = 0x2b0; // float
		constexpr auto MaxDampingForce = 0x2b4; // float
		constexpr auto PainTimer = 0x2b8; // ObjectProperty
		constexpr auto DamageInstigator = 0x2c0; // ObjectProperty
		constexpr auto NextPhysicsVolume = 0x2c8; // ObjectProperty
	}

	namespace n_UUIResourceDataProvider {
		constexpr auto bSkipDuringEnumeration = 0x90; // uint32_t : 1
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x68; // FRawDistributionVector
		constexpr auto StartAlpha = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // uint32_t : 1
	}

	namespace n_UGFxAction_OpenMovie {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MoviePlayerClass = 0x110; // UGFxMoviePlayer*
		constexpr auto MoviePlayer = 0x118; // ObjectProperty
		constexpr auto bTakeFocus = 0x120; // uint32_t : 1
		constexpr auto bCaptureInput = 0x120; // uint32_t : 1
		constexpr auto bStartPaused = 0x120; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x120; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x120; // uint32_t : 1
		constexpr auto RenderTextureMode = 0x124; // GFxRenderTextureMode
		constexpr auto RenderTexture = 0x128; // ObjectProperty
		constexpr auto CaptureKeys = 0x130; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x140; // TArray<FName>
	}

	namespace n_ACombatDroppedEvolvePoint {
		constexpr auto GRADE = 0x320; // int32_t
		constexpr auto ForcePoint = 0x324; // int32_t
		constexpr auto TeamID = 0x328; // char
		constexpr auto Weapon = 0x32c; // ObjectProperty
		constexpr auto SavedWeapon = 0x334; // ObjectProperty
		constexpr auto EnemyWeaponEffect = 0x33c; // ObjectProperty
		constexpr auto WeaponParticleComponent = 0x344; // ComponentProperty
		constexpr auto bAddPrivatePoint = 0x34c; // uint32_t : 1
		constexpr auto bAddTeamPoint = 0x34c; // uint32_t : 1
	}

	namespace n_UNavMeshGoalFilter_NotNearOtherAI {
		constexpr auto DistanceToCheck = 0x6c; // float
	}

	namespace n_UDamageType {
		constexpr auto bArmorStops = 0x60; // uint32_t : 1
		constexpr auto bCausedByWorld = 0x60; // uint32_t : 1
		constexpr auto bExtraMomentumZ = 0x60; // uint32_t : 1
		constexpr auto bCausesFracture = 0x60; // uint32_t : 1
		constexpr auto bRadialDamageVelChange = 0x60; // uint32_t : 1
		constexpr auto KDamageImpulse = 0x64; // float
		constexpr auto KDeathVel = 0x68; // float
		constexpr auto KDeathUpKick = 0x6c; // float
		constexpr auto RadialDamageImpulse = 0x70; // float
		constexpr auto VehicleDamageScaling = 0x74; // float
		constexpr auto VehicleMomentumScaling = 0x78; // float
		constexpr auto DamagedFFWaveform = 0x7c; // ObjectProperty
		constexpr auto KilledFFWaveform = 0x84; // ObjectProperty
		constexpr auto FracturedMeshDamage = 0x8c; // float
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x68; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x8c; // uint32_t : 1
		constexpr auto bFloor = 0x8c; // uint32_t : 1
		constexpr auto bApplyPSysScale = 0x8c; // uint32_t : 1
	}

	namespace n_ACombatPawn_AttackSkillActor {
		constexpr auto ActorTypeIndex = 0x11f0; // ATTCK_SKILL_ACTOR
		constexpr auto HudIconPath = 0x11f4; // FString
		constexpr auto Lifetime = 0x1204; // float
		constexpr auto Summoner = 0x1208; // ObjectProperty
		constexpr auto Deployed = 0x1210; // uint32_t : 1
		constexpr auto SmokingHot = 0x1210; // uint32_t : 1
		constexpr auto DeployAnim = 0x1214; // FName
		constexpr auto DeployTime = 0x121c; // float
		constexpr auto IFF_Effect = 0x1220; // ComponentProperty
		constexpr auto IFF_FriendTemplate = 0x1228; // ObjectProperty
		constexpr auto IFF_FoeTemplate = 0x1230; // ObjectProperty
		constexpr auto IFF_CoolingTemplate = 0x1238; // ObjectProperty
		constexpr auto SmokePct = 0x1240; // float
		constexpr auto DamageEffectPSC = 0x1244; // ComponentProperty
		constexpr auto DamageEffectPSCTemplate = 0x124c; // ObjectProperty
		constexpr auto DamageEffectSocketName = 0x1254; // FName
		constexpr auto DamageSound = 0x125c; // ObjectProperty
		constexpr auto ExploEmitter = 0x1264; // ObjectProperty
		constexpr auto DeathSound = 0x126c; // ObjectProperty
	}

	namespace n_UInterpTrackInstTimeDilation {
		constexpr auto OldTimeDilation = 0x60; // float
	}

	namespace n_UCombatSkelCtrl_Recoil {
		constexpr auto TestRecoil = 0x14c; // uint32_t : 1
		constexpr auto GunIndex = 0x150; // int32_t
		constexpr auto RecoilArray = 0x154; // TArray<FRecoilProfileData>
	}

	namespace n_UMobileMenuBarItem {
		constexpr auto Width = 0x60; // int32_t
		constexpr auto Height = 0x64; // int32_t
		constexpr auto VpPos = 0x68; // FVector2D
	}

	namespace n_UUIDataProvider_OnlinePartyChatList {
		constexpr auto PartyMembersList = 0x74; // TArray<FOnlinePartyMember>
		constexpr auto NatTypes = 0x84; // TArray<FString>
		constexpr auto NickNameCol = 0x94; // FString
		constexpr auto NatTypeCol = 0xa4; // FString
		constexpr auto IsLocalCol = 0xb4; // FString
		constexpr auto IsInPartyVoiceCol = 0xc4; // FString
		constexpr auto IsTalkingCol = 0xd4; // FString
		constexpr auto IsInGameSessionCol = 0xe4; // FString
		constexpr auto IsPlayingThisGameCol = 0xf4; // FString
	}

	namespace n_ANxForceFieldSpawnable {
		constexpr auto ForceFieldComponent = 0x244; // ComponentProperty
	}

	namespace n_UCombatAnimNodeSequenceBlendBase {
		constexpr auto DominantIdx = 0x168; // int32_t
		constexpr auto DominanceThreshold = 0x16c; // float
	}

	namespace n_UCCSBTMoveIntoBestCover {
		constexpr auto IdealShootingDistance = 0xc4; // float
		constexpr auto ExcludeCurrentCover = 0xc8; // uint32_t : 1
	}

	namespace n_UOnlineSubsystemCombatDedicatedSvr {
		constexpr auto PresetWeaponTransition = 0x1bc; // TArray<FPresetItemInfo>
		constexpr auto AvatarItemTransition = 0x1cc; // TArray<FAvatarItemInfo>
		constexpr auto TuningDataTransition = 0x1dc; // TArray<FTuningData>
	}

	namespace n_UCBCharInfo {
		constexpr auto Characters = 0x60; // TArray<FCharacterInfo>
		constexpr auto Families = 0x70; // TArray<UCBFamilyInfo*>
		constexpr auto LOD1DisplayFactor = 0x80; // float
		constexpr auto LOD2DisplayFactor = 0x84; // float
		constexpr auto LOD3DisplayFactor = 0x88; // float
	}

	namespace n_UApexDestructibleDamageParameters {
		constexpr auto DamageMap = 0x60; // TArray<FDamagePair>
	}

	namespace n_UGameCrowdBehavior_RunFromPanic {
		constexpr auto PanicFocus = 0x9c; // ObjectProperty
	}

	namespace n_UDistributionVector {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_USeqAct_SetParticleSysParam {
		constexpr auto InstanceParameters = 0x108; // TArray<FParticleSysParam>
		constexpr auto bOverrideScalar = 0x118; // uint32_t : 1
		constexpr auto ScalarValue = 0x11c; // float
	}

	namespace n_UCombatWeaponRISBase_LaserPoint {
		constexpr auto TeamColor = 0xc44; // FLinearColor [0x2]
		constexpr auto FirstPersonBoneName = 0xc64; // FName
		constexpr auto TeamColorParameterName = 0xc6c; // FName
		constexpr auto ThirdPersonPSC = 0xc74; // ComponentProperty
		constexpr auto ThirdPersonPSCTemplate = 0xc7c; // ObjectProperty
		constexpr auto ThirdPersonSocketName = 0xc84; // FName
		constexpr auto ParticleLengthParameterName = 0xc8c; // FName
		constexpr auto ParticleLengthUpdateDelay = 0xc94; // float
		constexpr auto LaserSightOnSnd = 0xc98; // ObjectProperty
		constexpr auto LaserSightOffSnd = 0xca0; // ObjectProperty
		constexpr auto LaserPointMI = 0xca8; // ObjectProperty
		constexpr auto LastParticleLengthUpdateTime = 0xcb0; // float
	}

	namespace n_AAIController {
		constexpr auto bAdjustFromWalls = 0x430; // uint32_t : 1
		constexpr auto bReverseScriptedRoute = 0x430; // uint32_t : 1
		constexpr auto Skill = 0x434; // float
		constexpr auto ScriptedMoveTarget = 0x438; // ObjectProperty
		constexpr auto ScriptedRoute = 0x440; // ObjectProperty
		constexpr auto ScriptedRouteIndex = 0x448; // int32_t
		constexpr auto ScriptedFocus = 0x44c; // ObjectProperty
	}

	namespace n_UCombatMatchroomClanMatching {
		constexpr auto TeamRankingPoint = 0x7c; // int32_t
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x68; // TArray<ObjectProperty>
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CylinderComponent = 0x250; // ComponentProperty
		constexpr auto TouchingActorEntryPosition = 0x258; // FVector
		constexpr auto FoliageVelocity = 0x264; // FVector
		constexpr auto FoliageForce = 0x270; // FVector
		constexpr auto FoliagePosition = 0x27c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x288; // float
		constexpr auto FoliageTouchImpulseScale = 0x28c; // float
		constexpr auto FoliageStiffness = 0x290; // float
		constexpr auto FoliageStiffnessQuadratic = 0x294; // float
		constexpr auto FoliageDamping = 0x298; // float
		constexpr auto MaxDamageImpulse = 0x29c; // float
		constexpr auto MaxTouchImpulse = 0x2a0; // float
		constexpr auto MaxForce = 0x2a4; // float
		constexpr auto Mass = 0x2a8; // float
	}

	namespace n_ACombatBot {
		constexpr auto Squad = 0x454; // ObjectProperty
		constexpr auto DecisionComponent = 0x45c; // ComponentProperty
		constexpr auto TemporaryFocus = 0x464; // ObjectProperty
		constexpr auto bExecutingWhatToDoNext = 0x46c; // uint32_t : 1
		constexpr auto bScriptSpecialJumpCost = 0x46c; // uint32_t : 1
		constexpr auto bForceRefreshRoute = 0x46c; // uint32_t : 1
		constexpr auto bTargetAlternateLoc = 0x46c; // uint32_t : 1
		constexpr auto bEnemyInfoValid = 0x46c; // uint32_t : 1
		constexpr auto bEnemyIsVisible = 0x46c; // uint32_t : 1
		constexpr auto bLeadTarget = 0x46c; // uint32_t : 1
		constexpr auto bJumpOverWall = 0x46c; // uint32_t : 1
		constexpr auto bPlannedJump = 0x46c; // uint32_t : 1
		constexpr auto bInDodgeMove = 0x46c; // uint32_t : 1
		constexpr auto bEnemyAcquired = 0x46c; // uint32_t : 1
		constexpr auto bNeedDelayedLeaveVehicle = 0x46c; // uint32_t : 1
		constexpr auto bAllowRouteReuse = 0x46c; // uint32_t : 1
		constexpr auto bUsingSquadRoute = 0x46c; // uint32_t : 1
		constexpr auto bUsePreviousSquadRoute = 0x46c; // uint32_t : 1
		constexpr auto ScriptedFireMode = 0x470; // char
		constexpr auto EnemyVisibilityTime = 0x474; // float
		constexpr auto VisibleEnemy = 0x478; // ObjectProperty
		constexpr auto LastBlockingVehicle = 0x480; // ObjectProperty
		constexpr auto CurrentlyTrackedEnemy = 0x488; // ObjectProperty
		constexpr auto SavedPositions = 0x490; // TArray<FEnemyPosition>
		constexpr auto ImpactVelocity = 0x4a0; // FVector
		constexpr auto AcquisitionYawRate = 0x4ac; // int32_t
		constexpr auto HearingThreshold = 0x4b0; // float
		constexpr auto RespawnPredictionTime = 0x4b4; // float
		constexpr auto WarningDelay = 0x4b8; // float
		constexpr auto WarningProjectile = 0x4bc; // ObjectProperty
		constexpr auto MonitorStartLoc = 0x4c4; // FVector
		constexpr auto MonitoredPawn = 0x4d0; // ObjectProperty
		constexpr auto MonitorMaxDistSq = 0x4d8; // float
		constexpr auto LastSeenPos = 0x4dc; // FVector
		constexpr auto LastSeeingPos = 0x4e8; // FVector
		constexpr auto LastSeenTime = 0x4f4; // float
		constexpr auto TrackingReactionTime = 0x4f8; // float
		constexpr auto BaseTrackingReactionTime = 0x4fc; // float
		constexpr auto TrackedVelocity = 0x500; // FVector
		constexpr auto SquadRouteGoal = 0x50c; // ObjectProperty
		constexpr auto BlockedAimTarget = 0x514; // ObjectProperty
		constexpr auto LastIterativeCheck = 0x51c; // float
		constexpr auto AimUpdateFrequency = 0x520; // float
		constexpr auto LastAimUpdateTime = 0x524; // float
		constexpr auto ErrorUpdateFrequency = 0x528; // float
		constexpr auto LastErrorUpdateTime = 0x52c; // float
		constexpr auto CurrentAimError = 0x530; // float
		constexpr auto DodgeLandZ = 0x534; // float
		constexpr auto FearSpots = 0x538; // ObjectProperty [0x2]
		constexpr auto DodgeToGoalPct = 0x548; // float
		constexpr auto MultiJumpZ = 0x54c; // float
		constexpr auto PresetManager = 0x550; // ObjectProperty
	}

	namespace n_UCombatDataTableRefRankUp {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto Rank = 0x70; // int32_t
		constexpr auto GoalExp = 0x74; // int32_t
		constexpr auto UnlockSkillList = 0x78; // TArray<FUnlockSkillData>
		constexpr auto bLastRank = 0x88; // uint32_t : 1
		constexpr auto RankCodeName = 0x8c; // FString
	}

	namespace n_USeqAct_CombatBotSpawn {
		constexpr auto PawnClass = 0x120; // ACombatGuy_NPC*
		constexpr auto ControllerClass = 0x128; // ACombatBotController*
		constexpr auto SpawnCount = 0x130; // int32_t
		constexpr auto SpawnPoints = 0x134; // TArray<ObjectProperty>
		constexpr auto BehaviorTree = 0x144; // ObjectProperty
		constexpr auto bGiveDefaultInventory = 0x14c; // uint32_t : 1
		constexpr auto bIsSpawning = 0x14c; // uint32_t : 1
		constexpr auto InventoryList = 0x150; // TArray<AInventory*>
		constexpr auto SpawnedDelay = 0x160; // float
		constexpr auto LastSpawnedTime = 0x164; // float
		constexpr auto LastSpawnPointIndex = 0x168; // int32_t
		constexpr auto SpawnedCount = 0x16c; // int32_t
		constexpr auto DiedCount = 0x170; // int32_t
	}

	namespace n_UCombatDataTableRefInitItem {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto bActive = 0x7c; // int32_t
		constexpr auto PresetEquip = 0x80; // int32_t [0x3]
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto PropertyUpdateCallback = 0x60; // ObjectProperty
		constexpr auto PropertyOuterObjectInst = 0x68; // ObjectProperty
	}

	namespace n_UAnimNotify_Rumble {
		constexpr auto PredefinedWaveForm = 0x60; // UWaveFormBase*
		constexpr auto WaveForm = 0x68; // ObjectProperty
		constexpr auto bCheckForBasedPlayer = 0x70; // uint32_t : 1
		constexpr auto EffectRadius = 0x74; // float
	}

	namespace n_UParticleModuleUberLTISIVCLILIRSSBLIRR {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
		constexpr auto StartRotation = 0x174; // FRawDistributionFloat
		constexpr auto SizeLifeMultiplier = 0x198; // FRawDistributionVector
		constexpr auto SizeMultiplyX = 0x1bc; // uint32_t : 1
		constexpr auto SizeMultiplyY = 0x1bc; // uint32_t : 1
		constexpr auto SizeMultiplyZ = 0x1bc; // uint32_t : 1
		constexpr auto StartRotationRate = 0x1c0; // FRawDistributionFloat
	}

	namespace n_UNxForceFieldRadialComponent {
		constexpr auto ForceStrength = 0x2c0; // float
		constexpr auto ForceRadius = 0x2c4; // float
		constexpr auto SelfRotationStrength = 0x2c8; // float
		constexpr auto ForceFalloff = 0x2cc; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2d0; // FPointer
	}

	namespace n_UDynamicSpriteComponent {
		constexpr auto AnimatedScale = 0x270; // FInterpCurveFloat
		constexpr auto AnimatedColor = 0x284; // FInterpCurveLinearColor
		constexpr auto AnimatedPosition = 0x298; // FInterpCurveVector2D
		constexpr auto LocationOffset = 0x2ac; // FVector
		constexpr auto LoopCount = 0x2b8; // int32_t
	}

	namespace n_UCombatChatManager {
		constexpr auto MainChatUI = 0x60; // TScriptInterface<Class>
		constexpr auto MirrorChatUI = 0x70; // TScriptInterface<Class>
		constexpr auto ChattingDisplayInfoList = 0x80; // FChattingDisplayInfo [0x18]
		constexpr auto GameManagerChattingDisplayInfo = 0xb60; // FChattingDisplayInfo
		constexpr auto DefaultColor = 0xbd4; // FString
		constexpr auto ChattingType = 0xbe4; // char
		constexpr auto MsgColor = 0xbe8; // FString
		constexpr auto ChatUserColor = 0xbf8; // FString
		constexpr auto ClanNameColor = 0xc08; // FString
		constexpr auto ChatListInfo = 0xc18; // TArray<FChattingInfo>
	}

	namespace n_UCombatDataTableRefModeTip {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Reference = 0x80; // FString
		constexpr auto StringID_MIN = 0x90; // int32_t
		constexpr auto StringID_MAX = 0x94; // int32_t
	}

	namespace n_UCombatFrontEnd_Event_AttendanceCheckTab {
		constexpr auto RewardItemList = 0x6c; // TArray<FRewardItemStruct>
	}

	namespace n_ACombatRadarCore {
		constexpr auto CurrentMinimapActor = 0x244; // ObjectProperty
		constexpr auto MapPointList = 0x24c; // TArray<ObjectProperty>
		constexpr auto TacticalMapMode = 0x25c; // EMapScoreMode
		constexpr auto CachedMapModeBeforePressKey = 0x25d; // EMapScoreMode
		constexpr auto AllyIconNameList = 0x25e; // EObjectIconType [0x5]
		constexpr auto EnemyIconNameList = 0x263; // EObjectIconType [0x5]
		constexpr auto RadarRange = 0x268; // float
		constexpr auto MiniMapSize = 0x26c; // int32_t [0x3]
		constexpr auto MiniMapSizeType = 0x278; // int32_t
		constexpr auto WholeMapFrameSizeX = 0x27c; // int32_t
		constexpr auto WholeMapFrameSizeY = 0x280; // int32_t
		constexpr auto HalfWholeMapFrameSizeX = 0x284; // float
		constexpr auto HalfWholeMapFrameSizeY = 0x288; // float
		constexpr auto WholeMapHybridFrameSizeX = 0x28c; // int32_t
		constexpr auto WholeMapHybridFrameSizeY = 0x290; // int32_t
		constexpr auto HalfWholeMapHybridFrameSizeX = 0x294; // float
		constexpr auto HalfWholeMapHybridFrameSizeY = 0x298; // float
		constexpr auto BroadcastingMapFrameSizeX = 0x29c; // int32_t
		constexpr auto BroadcastingMapFrameSizeY = 0x2a0; // int32_t
		constexpr auto HalfBroadcastingMapFrameSizeX = 0x2a4; // float
		constexpr auto HalfBroadcastingMapFrameSizeY = 0x2a8; // float
		constexpr auto CurrentHalfMapFrameSizeX = 0x2ac; // float
		constexpr auto CurrentHalfMapFrameSizeY = 0x2b0; // float
		constexpr auto DefaultMapTextureSizeX = 0x2b4; // int32_t
		constexpr auto DefaultMapTextureSizeY = 0x2b8; // int32_t
		constexpr auto ObjectIconList = 0x2bc; // TArray<FObjectIconInfo>
		constexpr auto bFinishObjectIconList = 0x2cc; // uint32_t : 1
		constexpr auto bNeedUpdateMapSymbol = 0x2cc; // uint32_t : 1
		constexpr auto IngameMarkerList = 0x2d0; // TArray<FIngameMarkerInfo>
		constexpr auto LastLocationLabelID = 0x2e0; // int32_t
		constexpr auto TacticalMapUI = 0x2e4; // ObjectProperty
		constexpr auto AllyIconsInfoList = 0x2ec; // FTacticalMapPlayerIconInfo [0x5]
		constexpr auto EnemyIconsInfoList = 0x314; // FTacticalMapPlayerIconInfo [0x5]
		constexpr auto MinimapObjectIconinfos = 0x33c; // FMinimapObjectIconInfo [0x4a]
		constexpr auto OwnerMovie = 0x464; // ObjectProperty
	}

	namespace n_UMCPBase {
		constexpr auto VfTable_FTickableObject = 0x78; // FPointer
	}

	namespace n_USeqAct_MultiplyFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_ACombatWaitingServer {
		constexpr auto InitializeDelayTime = 0x4c0; // int32_t
	}

	namespace n_UParticleModuleTypeDataBeam {
		constexpr auto BeamMethod = 0x68; // EBeamMethod
		constexpr auto EndPointMethod = 0x69; // EBeamEndPointMethod
		constexpr auto Distance = 0x6c; // FRawDistributionFloat
		constexpr auto EndPoint = 0x90; // FRawDistributionVector
		constexpr auto TessellationFactor = 0xb4; // int32_t
		constexpr auto EmitterStrength = 0xb8; // FRawDistributionFloat
		constexpr auto TargetStrength = 0xdc; // FRawDistributionFloat
		constexpr auto EndPointDirection = 0x100; // FRawDistributionVector
		constexpr auto TextureTile = 0x124; // int32_t
		constexpr auto RenderGeometry = 0x128; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x128; // uint32_t : 1
		constexpr auto RenderLines = 0x128; // uint32_t : 1
		constexpr auto RenderTessellation = 0x128; // uint32_t : 1
	}

	namespace n_UTexture2DComposite {
		constexpr auto SourceRegions = 0x11c; // TArray<FSourceTexture2DRegion>
		constexpr auto MaxTextureSize = 0x12c; // int32_t
		constexpr auto DestSizeX = 0x130; // int32_t
		constexpr auto DestSizeY = 0x134; // int32_t
	}

	namespace n_UCombatAnimNodeCopyBoneTranslation {
		constexpr auto CachedAimNode = 0x100; // ObjectProperty
		constexpr auto OldAimProfileName = 0x108; // FName
		constexpr auto DefaultBoneCopyArray = 0x110; // TArray<FBoneCopyInfo>
		constexpr auto DualWieldBoneCopyArray = 0x120; // TArray<FBoneCopyInfo>
		constexpr auto ActiveBoneCopyArray = 0x130; // TArray<FBoneCopyInfo>
		constexpr auto RequiredBones = 0x140; // TArray<char>
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x68; // BeamModifierType
		constexpr auto PositionOptions = 0x6c; // FBeamModifierOptions
		constexpr auto Position = 0x70; // FRawDistributionVector
		constexpr auto TangentOptions = 0x94; // FBeamModifierOptions
		constexpr auto Tangent = 0x98; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xbc; // uint32_t : 1
		constexpr auto StrengthOptions = 0xc0; // FBeamModifierOptions
		constexpr auto Strength = 0xc4; // FRawDistributionFloat
	}

	namespace n_UCombatFrontEnd_ClausePopup {
		constexpr auto URL = 0xd0; // FString
	}

	namespace n_UUISoundTheme {
		constexpr auto SoundEventBindings = 0x60; // TArray<FSoundEventMapping>
	}

	namespace n_AComBatPC_AIGameTDMStandAlone {
		constexpr auto AllWeaponArray = 0xbe4; // TArray<AInventory*>
	}

	namespace n_UGameExplosionContent {
		constexpr auto bAutoControllerVibration = 0x60; // uint32_t : 1
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // uint32_t : 1
		constexpr auto ExplosionSound = 0x64; // ObjectProperty
		constexpr auto CamShake = 0x6c; // ObjectProperty
		constexpr auto CamShake_Left = 0x74; // ObjectProperty
		constexpr auto CamShake_Right = 0x7c; // ObjectProperty
		constexpr auto CamShake_Rear = 0x84; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x8c; // float
		constexpr auto CamShakeOuterRadius = 0x90; // float
		constexpr auto CamShakeFalloff = 0x94; // float
		constexpr auto CameraLensEffect = 0x98; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0xa0; // float
		constexpr auto ExploLight = 0xa4; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xac; // float
		constexpr auto ExploRadialBlur = 0xb0; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0xb8; // float
		constexpr auto ExploRadialBlurMaxBlur = 0xbc; // float
		constexpr auto ParticleEmitterTemplate = 0xc0; // ObjectProperty
		constexpr auto FogVolumeArchetype = 0xc8; // ObjectProperty
	}

	namespace n_UCombatAnimNodePreAnim {
		constexpr auto bSkipPlayingPreAnimWhenNotRendered = 0x110; // uint32_t : 1
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x7c; // float
	}

	namespace n_UTextureRenderTarget {
		constexpr auto bUpdateImmediate = 0x11c; // uint32_t : 1
		constexpr auto bNeedsTwoCopies = 0x11c; // uint32_t : 1
		constexpr auto bRenderOnce = 0x11c; // uint32_t : 1
		constexpr auto TargetGamma = 0x120; // float
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x60; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x70; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x68; // uint32_t : 1
		constexpr auto Positive_Y = 0x68; // uint32_t : 1
		constexpr auto Positive_Z = 0x68; // uint32_t : 1
		constexpr auto Negative_X = 0x68; // uint32_t : 1
		constexpr auto Negative_Y = 0x68; // uint32_t : 1
		constexpr auto Negative_Z = 0x68; // uint32_t : 1
		constexpr auto SurfaceOnly = 0x68; // uint32_t : 1
		constexpr auto Velocity = 0x68; // uint32_t : 1
		constexpr auto VelocityScale = 0x6c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x90; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_USeqAct_AddFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UKMeshProps {
		constexpr auto COMNudge = 0x60; // FVector
		constexpr auto AggGeom = 0x6c; // FKAggregateGeom
	}

	namespace n_ACombatASAGameReplicationInfo {
		constexpr auto GameStatus = 0x380; // char
	}

	namespace n_ASkeletalMeshActorBasedOnExtremeContent {
		constexpr auto ExtremeContent = 0x2a4; // TArray<FSkelMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x2b4; // TArray<FSkelMaterialSetterDatum>
	}

	namespace n_UUIDataProvider_OnlinePlayerStorage {
		constexpr auto Profile = 0x74; // ObjectProperty
		constexpr auto ProviderName = 0x7c; // FName
		constexpr auto bWasErrorLastRead = 0x84; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x84; // uint32_t : 1
		constexpr auto bNeedsDeferredRefresh = 0x84; // uint32_t : 1
		constexpr auto PlayerStorageArrayProviders = 0x88; // TArray<FPlayerStorageArrayProvider>
		constexpr auto DeviceStorageSizeNeeded = 0x98; // int32_t
	}

	namespace n_ACombatTutorialGameReplicationInfo {
		constexpr auto Bombsites = 0x400; // TArray<ObjectProperty>
		constexpr auto Bombs = 0x410; // TArray<ObjectProperty>
		constexpr auto TotalBombsites = 0x420; // int32_t
		constexpr auto TotalBombs = 0x424; // int32_t
		constexpr auto PlantedBombSettingTime = 0x428; // WordProperty
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x60; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x68; // uint32_t : 1
		constexpr auto bAttach = 0x68; // uint32_t : 1
		constexpr auto bPreview = 0x68; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x68; // uint32_t : 1
		constexpr auto PSNonExtremeContentTemplate = 0x6c; // ObjectProperty
		constexpr auto SocketName = 0x74; // FName
		constexpr auto BoneName = 0x7c; // FName
		constexpr auto BoneSocketModuleActorName = 0x84; // FName
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x78; // int32_t
		constexpr auto bStartAtSecondKey = 0x7c; // uint32_t : 1
	}

	namespace n_USimpleSplineAudioComponent {
		constexpr auto bAttenuateWithLPF = 0x2b8; // uint32_t : 1
		constexpr auto LPFRadiusMin = 0x2bc; // float
		constexpr auto LPFRadiusMax = 0x2c0; // float
		constexpr auto dBAttenuationAtMax = 0x2c4; // float
		constexpr auto FlattenAttenuationRadius = 0x2c8; // float
		constexpr auto DistanceAlgorithm = 0x2cc; // SoundDistanceModel
		constexpr auto RadiusMin = 0x2d0; // float
		constexpr auto RadiusMax = 0x2d4; // float
		constexpr auto SoundSlots = 0x2d8; // TArray<FSplineSoundSlot>
		constexpr auto NotifyBufferFinishedHook = 0x2e8; // ObjectProperty
	}

	namespace n_ALevelGridVolume {
		constexpr auto LevelGridVolumeName = 0x280; // FString
		constexpr auto CellShape = 0x290; // LevelGridCellShape
		constexpr auto Subdivisions = 0x294; // int32_t [0x3]
		constexpr auto LoadingDistance = 0x2a0; // float
		constexpr auto KeepLoadedRange = 0x2a4; // float
		constexpr auto CellConvexElem = 0x2a8; // FKConvexElem
	}

	namespace n_USeqCond_IsLoggedIn {
		constexpr auto NumNeededLoggedIn = 0xec; // int32_t
	}

	namespace n_UCombatAnim_TurnInPlace_Rotator {
		constexpr auto CombatPawnOwner = 0x100; // ObjectProperty
		constexpr auto TurnInPlaceNode = 0x108; // ObjectProperty
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_USeqAct_AIMoveToActor {
		constexpr auto bPauseBT = 0x120; // uint32_t : 1
		constexpr auto bInterruptable = 0x120; // uint32_t : 1
		constexpr auto bPickClosest = 0x120; // uint32_t : 1
		constexpr auto Destination = 0x124; // TArray<ObjectProperty>
		constexpr auto MovementSpeedModifier = 0x134; // float
		constexpr auto LookAt = 0x138; // ObjectProperty
		constexpr auto LastDestinationChoice = 0x140; // int32_t
	}

	namespace n_USeqAct_CastToInt {
		constexpr auto bTruncate = 0x108; // uint32_t : 1
		constexpr auto Value = 0x10c; // float
		constexpr auto IntResult = 0x110; // int32_t
	}

	namespace n_UCombatHUD_Bomb {
		constexpr auto BombObject = 0x1b0; // ObjectProperty
		constexpr auto LastBombStateName = 0x1b8; // FName
	}

	namespace n_UDownloadableContentManager {
		constexpr auto DLCConfigCacheChanges = 0x60; // TArray<FPointer>
		constexpr auto InstalledDLC = 0x70; // TArray<FString>
		constexpr auto NonPackageFilePathMap = 0x80; // FMap_Mirror
		constexpr auto ClassesToReload = 0xc8; // TArray<UObject*>
		constexpr auto ObjectsToReload = 0xd8; // TArray<ObjectProperty>
		constexpr auto QueuedFullyLoadPackageInis = 0xe8; // TArray<FString>
		constexpr auto GameEngine = 0xf8; // ObjectProperty
		constexpr auto __OnRefreshComplete__Delegate = 0x100; // DelegateProperty
	}

	namespace n_ACombatDroppedSupplies {
		constexpr auto SuppliesType = 0x320; // EDroppedSuppliesType
		constexpr auto CurrentIdentifyState = 0x321; // ETeamIdentifyState
		constexpr auto TeamIdentifyColor = 0x324; // FLinearColor [0x3]
		constexpr auto TeamIdentifyMIC = 0x354; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_Event {
		constexpr auto CurrentViewTabIndex = 0xd0; // int32_t
		constexpr auto EventTabList = 0xd4; // TArray<FEventTabStruct>
		constexpr auto TabList = 0xe4; // ObjectProperty [0xa]
	}

	namespace n_UCombatFrontEnd_Maintenance {
		constexpr auto ShopType = 0xd0; // int32_t
		constexpr auto RISInfoList = 0xd4; // TArray<FRISListDescStruct>
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Height = 0xe4; // FExpressionInput
		constexpr auto HeightRatioInput = 0x118; // FExpressionInput
		constexpr auto HeightRatio = 0x14c; // float
		constexpr auto ReferencePlane = 0x150; // float
	}

	namespace n_AWaterVolume {
		constexpr auto EntrySound = 0x2d0; // ObjectProperty
		constexpr auto EntryActor = 0x2d8; // AActor*
		constexpr auto ExitSound = 0x2e0; // ObjectProperty
		constexpr auto ExitActor = 0x2e8; // AActor*
	}

	namespace n_UCombatAnimNodeJumpLeanOffset {
		constexpr auto JumpLeanStrength = 0x160; // float
		constexpr auto MaxLeanChangeSpeed = 0x164; // float
		constexpr auto LeanBackRatio = 0x168; // float
		constexpr auto bMultiplyByZVelocity = 0x16c; // uint32_t : 1
		constexpr auto CachedAimNode = 0x170; // ObjectProperty
		constexpr auto OldAimProfileName = 0x178; // FName
		constexpr auto PreBlendAim = 0x180; // FVector2D
		constexpr auto LeanWeight = 0x188; // float
		constexpr auto LeanWeightTarget = 0x18c; // float
		constexpr auto BlendTimeToGo = 0x190; // float
		constexpr auto LastYaw = 0x194; // int32_t
		constexpr auto IgnoredLateralVelThreshold = 0x198; // float
		constexpr auto StandardSpeed = 0x19c; // float
	}

	namespace n_UCCSAFGetInCover {
		constexpr auto CoverLink = 0x64; // ObjectProperty
		constexpr auto Target = 0x6c; // ObjectProperty
	}

	namespace n_UMorphTarget {
		constexpr auto MorphLODModels = 0x60; // TArray<int32_t>
		constexpr auto MaterialSlotId = 0x70; // int32_t
		constexpr auto ScalarParameterName = 0x74; // FName
	}

	namespace n_UAnimNotify_ForceField {
		constexpr auto ForceFieldComponent = 0x60; // ComponentProperty
		constexpr auto bAttach = 0x68; // uint32_t : 1
		constexpr auto SocketName = 0x6c; // FName
		constexpr auto BoneName = 0x74; // FName
	}

	namespace n_UParticleModuleLocationStaticVertSurface {
		constexpr auto SourceType = 0x68; // ELocationStaticVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x78; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x78; // uint32_t : 1
		constexpr auto StaticMeshActorParamName = 0x7c; // FName
		constexpr auto NormalToCompare = 0x84; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x90; // float
		constexpr auto NormalCheckTolerance = 0x94; // float
		constexpr auto ValidMaterialIndices = 0x98; // TArray<int32_t>
	}

	namespace n_ACombatProj_SmokeGrenade {
		constexpr auto SmokeTemplate = 0x3f4; // ObjectProperty
		constexpr auto SmokePSC = 0x3fc; // ComponentProperty
		constexpr auto SmokeDuration = 0x404; // float
		constexpr auto VolumeHeight = 0x408; // float
		constexpr auto VolumeRadius = 0x40c; // float
		constexpr auto StartSound = 0x410; // ObjectProperty
		constexpr auto SmokeLoopingSound = 0x418; // ObjectProperty
		constexpr auto SmokeLoopingSoundCom = 0x420; // ComponentProperty
		constexpr auto Is = 0x428; // uint32_t : 1
	}

	namespace n_AFrameworkGame {
		constexpr auto RequiredMobileInputConfigs = 0x4c0; // TArray<FRequiredMobileInputConfig>
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0xb0; // FExpressionInput
	}

	namespace n_UCombatClanTransaction {
		constexpr auto ClanListMap = 0x60; // TMap<None, None>
		constexpr auto ClanListTotalPage = 0xa8; // int32_t
		constexpr auto ClanJoinMap = 0xac; // TMap<None, None>
		constexpr auto ClanListDetailInfo = 0xf4; // FClanListDetailData
	}

	namespace n_UMcpIdMappingManager {
		constexpr auto AccountMappings = 0xa8; // TArray<FMcpIdMapping>
		constexpr auto AddMappingUrl = 0xb8; // FString
		constexpr auto QueryMappingUrl = 0xc8; // FString
		constexpr auto AddMappingRequests = 0xd8; // TArray<FAddMappingRequest>
		constexpr auto QueryMappingRequests = 0xe8; // TArray<FQueryMappingRequest>
	}

	namespace n_UParticleModuleTrailTaper {
		constexpr auto TaperMethod = 0x68; // ETrailTaperMethod
		constexpr auto TaperFactor = 0x6c; // FRawDistributionFloat
	}

	namespace n_UGFxAction_CloseMovie {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto bUnload = 0x110; // uint32_t : 1
	}

	namespace n_USeqAct_SetSkelControlTarget {
		constexpr auto SkelControlName = 0x108; // FName
		constexpr auto TargetActors = 0x110; // TArray<ObjectProperty>
	}

	namespace n_UPBRuleNodeWindowWall {
		constexpr auto CellMaxSizeX = 0x70; // float
		constexpr auto CellMaxSizeZ = 0x74; // float
		constexpr auto WindowSizeX = 0x78; // float
		constexpr auto WindowSizeZ = 0x7c; // float
		constexpr auto WindowPosX = 0x80; // float
		constexpr auto WindowPosZ = 0x84; // float
		constexpr auto bScaleWindowWithCell = 0x88; // uint32_t : 1
		constexpr auto YOffset = 0x8c; // float
		constexpr auto Material = 0x90; // ObjectProperty
	}

	namespace n_ACombatFrontEndActor {
		constexpr auto CharacterMesh = 0x244; // ComponentProperty
		constexpr auto Char_InfoClass = 0x24c; // UCBFamilyInfo*
		constexpr auto Char_RootRotControl = 0x254; // ObjectProperty
		constexpr auto Char_FullBodyAnimSlot = 0x25c; // ObjectProperty
		constexpr auto Char_TopHalfAnimSlot = 0x264; // ObjectProperty
		constexpr auto Char_TopHalfParentNode = 0x26c; // ObjectProperty
		constexpr auto Char_GenderType = 0x274; // EGender
		constexpr auto Char_TeamIndex = 0x275; // Team
		constexpr auto IKHand = 0x276; // char
		constexpr auto PhysUnFreezeCounter = 0x277; // char
		constexpr auto CurrentCharacterRefItemIndex = 0x278; // int32_t
		constexpr auto Char_PhysicAsset = 0x27c; // ObjectProperty
		constexpr auto WeaponMesh = 0x284; // ComponentProperty
		constexpr auto WP_WeaponClass = 0x28c; // ACombatWeapon*
		constexpr auto WP_CustomAnim = 0x294; // ObjectProperty
		constexpr auto CurrentWeaponRefItemIndex = 0x29c; // int32_t
		constexpr auto LeftArmorMesh = 0x2a0; // ComponentProperty
		constexpr auto RightArmorMesh = 0x2a8; // ComponentProperty
		constexpr auto ArmorClass = 0x2b0; // UCombatInstanceItem_ArmorBase*
		constexpr auto CurrentArmorItemIndex = 0x2b8; // int32_t
		constexpr auto FXUpperPSC = 0x2bc; // ComponentProperty
		constexpr auto FXFootPSC = 0x2c4; // ComponentProperty
		constexpr auto FXUpperClass = 0x2cc; // UCombatItemFXBase*
		constexpr auto FXFootClass = 0x2d4; // UCombatItemFXBase*
		constexpr auto AccessoryInfo = 0x2dc; // TArray<FFrontendActorAccessoryInfo>
		constexpr auto bShowActor = 0x2ec; // uint32_t : 1
		constexpr auto bDoRotation = 0x2ec; // uint32_t : 1
		constexpr auto DefaultMouseInputDuration = 0x2f0; // float
		constexpr auto DefaultMouseMovementPixel = 0x2f4; // int32_t
		constexpr auto DefaultRotationDegree = 0x2f8; // float
		constexpr auto DefaultRotationInterpolationSpeed = 0x2fc; // float
		constexpr auto DefaultRotationInterpolationSpeed_Max = 0x300; // float
		constexpr auto LastMouseInput_X = 0x304; // int32_t
		constexpr auto LastMouseInputTime = 0x308; // float
		constexpr auto YawInterpolationSpeed = 0x30c; // float
		constexpr auto TargetRot = 0x310; // FRotator
		constexpr auto HandGripIKNode = 0x31c; // ObjectProperty [0x2]
		constexpr auto InvenAnimset = 0x32c; // ObjectProperty [0x2]
		constexpr auto InvenAnimSetName = 0x33c; // FString [0x2]
		constexpr auto RandomNode = 0x35c; // ObjectProperty
		constexpr auto UnfixedBoneNames = 0x364; // TArray<FName>
	}

	namespace n_UCombatDataTableRefTierSeason {
		constexpr auto ModeCodeName = 0x6c; // FString
		constexpr auto TierCodeName = 0x7c; // FString
		constexpr auto SeasonStringID = 0x8c; // int32_t
		constexpr auto SeasonNumber = 0x90; // FString
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x68; // FName
	}

	namespace n_UNxForceFieldCylindricalComponent {
		constexpr auto RadialStrength = 0x2c0; // float
		constexpr auto RotationalStrength = 0x2c4; // float
		constexpr auto LiftStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceTopRadius = 0x2d0; // float
		constexpr auto LiftFalloffHeight = 0x2d4; // float
		constexpr auto EscapeVelocity = 0x2d8; // float
		constexpr auto ForceHeight = 0x2dc; // float
		constexpr auto HeightOffset = 0x2e0; // float
		constexpr auto UseSpecialRadialForce = 0x2e4; // uint32_t : 1
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_UCombatMailTransaction {
		constexpr auto MailBoxListMap = 0x60; // TMap<None, None>
		constexpr auto TotalPage = 0xa8; // int32_t
		constexpr auto NewCount = 0xac; // int32_t [0x3]
		constexpr auto ExpiresCount = 0xb8; // int32_t
	}

	namespace n_UMaterialExpressionDepthBiasedBlend {
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto RGB = 0xb8; // FExpressionInput
		constexpr auto Alpha = 0xec; // FExpressionInput
		constexpr auto Bias = 0x120; // FExpressionInput
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_ACombatAIPawn_SelfDestuctBase {
		constexpr auto PS_DeathExplosion = 0x1238; // ObjectProperty
		constexpr auto SC_DeathExplosion = 0x1240; // ObjectProperty
		constexpr auto DamageType_DeathExplosion = 0x1248; // UDamageType*
		constexpr auto Momentum_DeathExplosion = 0x1250; // float
		constexpr auto Damage_DeathExplosion = 0x1254; // int32_t
		constexpr auto DamageRadius_DeathExplosion = 0x1258; // float
		constexpr auto WeaponCodeName = 0x125c; // FString
		constexpr auto WeaponID = 0x126c; // int32_t
	}

	namespace n_UCombatDataTableRefReward {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto ShowItemImage = 0x80; // int32_t
		constexpr auto RewardGameMoney = 0x84; // int32_t
		constexpr auto RewardDataList = 0x88; // TArray<FRewardData>
		constexpr auto MailFormCodename = 0x98; // FString
		constexpr auto Medal = 0xa8; // int32_t
		constexpr auto BSCoin = 0xac; // int32_t
		constexpr auto MCoin = 0xb0; // int32_t
		constexpr auto GCoin = 0xb4; // int32_t
		constexpr auto WinCoin = 0xb8; // int32_t
		constexpr auto BattlePassExp = 0xbc; // int32_t
	}

	namespace n_UFracturedStaticMeshComponent {
		constexpr auto FragmentNeighborsVisible = 0x31c; // TArray<char>
		constexpr auto VisibleBox = 0x32c; // FBox
		constexpr auto bUseSkinnedRendering = 0x348; // uint32_t : 1
		constexpr auto bUseVisibleVertsForBounds = 0x348; // uint32_t : 1
		constexpr auto bTopFragmentsRootNonDestroyable = 0x348; // uint32_t : 1
		constexpr auto bBottomFragmentsRootNonDestroyable = 0x348; // uint32_t : 1
		constexpr auto TopBottomFragmentDistThreshold = 0x34c; // float
		constexpr auto LoseChunkOutsideMaterialOverride = 0x350; // ObjectProperty
		constexpr auto FragmentBoundsMaxZ = 0x358; // float
		constexpr auto FragmentBoundsMinZ = 0x35c; // float
		constexpr auto SkinnedComponent = 0x360; // ComponentProperty
	}

	namespace n_ACombatExplosionActor {
		constexpr auto ActiveTimeDilationAnim = 0x2bc; // ObjectProperty
		constexpr auto ExplosionParticleComponent = 0x2c4; // ComponentProperty
		constexpr auto ExplosionParticleSystemRotation = 0x2cc; // FRotator
		constexpr auto ShowDebugLines = 0x2d8; // uint32_t : 1
	}

	namespace n_AVolumePathNode {
		constexpr auto StartingRadius = 0x33c; // float
		constexpr auto StartingHeight = 0x340; // float
	}

	namespace n_USeqAct_SetMatInstScalarParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto ScalarValue = 0x118; // float
	}

	namespace n_USequenceAction {
		constexpr auto HandlerName = 0xec; // FName
		constexpr auto bCallHandler = 0xf4; // uint32_t : 1
		constexpr auto Targets = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_USeqVar_Named {
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto FindVarName = 0xa8; // FName
		constexpr auto bStatusIsOk = 0xb0; // uint32_t : 1
	}

	namespace n_UGripBTStateCondition {
		constexpr auto StateName = 0xc0; // FString
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0xb0ac; // ObjectProperty
	}

	namespace n_UCombatHUD_CompetitionWarmUp {
		constexpr auto UI_ReaminSecond = 0xc0; // int32_t
	}

	namespace n_UCombatCommon_Option {
		constexpr auto OptionMode = 0xac; // E_OPTION_MODE_Index
		constexpr auto SelectedTab = 0xad; // E_OPTION_TAB_Index
		constexpr auto SelectedGamePlaySubTab = 0xae; // E_GAMEPLAY_SUBTAB_Index
		constexpr auto SelectedControlSubTab = 0xaf; // E_Control_SUBTAB_Index
		constexpr auto LabelSettingInfoIndex = 0xb0; // int32_t
		constexpr auto LabelSettingInfos = 0xb4; // TArray<FLabelSettingInfo>
		constexpr auto ButtonEnableInfoIndex = 0xc4; // int32_t
		constexpr auto ButtonEnableInfos = 0xc8; // TArray<FButtonEnableInfo>
		constexpr auto VideoOptionInfos = 0xd8; // TArray<FVideoOptionItemInfo>
		constexpr auto VideoOptionInitDataIndex = 0xe8; // int32_t
		constexpr auto VideoOptionSetValueIndex = 0xec; // int32_t
		constexpr auto VideoPresets = 0xf0; // TArray<FVideoOptionPresetInfo>
		constexpr auto ControlValueSettingInfoIndex = 0x100; // int32_t
		constexpr auto ControlOptionInfos = 0x104; // TArray<FControlOptionItemInfo>
		constexpr auto SoundValueSettingInfoIndex = 0x114; // int32_t
		constexpr auto SoundOptionInfos = 0x118; // TArray<FSoundOptionItemInfo>
		constexpr auto SoundOptionInitDataIndex = 0x128; // int32_t
		constexpr auto SoundOptionSetValueIndex = 0x12c; // int32_t
		constexpr auto VoiceInputModBindingKeyString = 0x130; // FString
		constexpr auto GamePlayValueSettingInfoIndex = 0x140; // int32_t
		constexpr auto GamePlayOptionInfos = 0x144; // TArray<FGamePlayOptionItemInfo>
		constexpr auto CrosshairOptionItemInfoIndex = 0x154; // int32_t
		constexpr auto CrosshairOptionItemInfos = 0x158; // TArray<FCrosshairOptionItemInfo>
		constexpr auto KeyBindingInfos = 0x168; // TArray<FOptionKeyBindingInfo>
		constexpr auto SelectedKeySlotIndex = 0x178; // int32_t
		constexpr auto OldSelectedKeySlotIndex = 0x17c; // int32_t
		constexpr auto UnbindingKeys = 0x180; // TArray<FKeymapDatum>
		constexpr auto RatingStrings = 0x190; // TArray<FString>
		constexpr auto CrosshairSettingsChanged = 0x1a0; // uint32_t : 1
		constexpr auto VivoxDeviceIndex = 0x1a4; // int32_t
		constexpr auto VivoxOldDeviceIndex = 0x1a8; // int32_t
	}

	namespace n_UMaterialEffect {
		constexpr auto Material = 0x88; // ObjectProperty
	}

	namespace n_UNavMeshGoal_At {
		constexpr auto Goal = 0x7c; // FVector
		constexpr auto GoalDist = 0x88; // float
		constexpr auto bKeepPartial = 0x8c; // uint32_t : 1
		constexpr auto bWeightPartialByDist = 0x8c; // uint32_t : 1
		constexpr auto bGoalInSamePolyAsAnchor = 0x8c; // uint32_t : 1
		constexpr auto PartialDistSq = 0x90; // float
		constexpr auto GoalPoly = 0x94; // FPointer
		constexpr auto PartialGoal = 0x9c; // FPointer
	}

	namespace n_UCombatRadialBlurComponent {
		constexpr auto LifeSpan = 0xf8; // float
		constexpr auto Translation = 0xfc; // FVector
		constexpr auto AbsoluteTranslation = 0x108; // uint32_t : 1
		constexpr auto CurrentLifeSpan = 0x10c; // float
		constexpr auto InitialBlurScale = 0x110; // float
		constexpr auto __OnBlurFinished__Delegate = 0x114; // DelegateProperty
	}

	namespace n_UCombatFrontEnd_ClanInfoChangePopup {
		constexpr auto SavedClanName = 0xd0; // FString
		constexpr auto SavedID = 0xe0; // int32_t
	}

	namespace n_USequenceOp {
		constexpr auto bIsActivated = 0x98; // uint32_t : 1
		constexpr auto bIsCurrentDebuggerOp = 0x98; // uint32_t : 1
		constexpr auto bActive = 0x98; // uint32_t : 1
		constexpr auto bLatentExecution = 0x98; // uint32_t : 1
		constexpr auto bAutoActivateOutputLinks = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingVarConnector = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingInputConnector = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingOutputConnector = 0x98; // uint32_t : 1
		constexpr auto bPendingVarConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bPendingInputConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bPendingOutputConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bIsBreakpointSet = 0x98; // uint32_t : 1
		constexpr auto bIsHiddenBreakpointSet = 0x98; // uint32_t : 1
		constexpr auto InputLinks = 0x9c; // TArray<FSeqOpInputLink>
		constexpr auto OutputLinks = 0xac; // TArray<FSeqOpOutputLink>
		constexpr auto VariableLinks = 0xbc; // TArray<FSeqVarLink>
		constexpr auto EventLinks = 0xcc; // TArray<FSeqEventLink>
		constexpr auto PlayerIndex = 0xdc; // int32_t
		constexpr auto GamepadID = 0xe0; // char
		constexpr auto ActivateCount = 0xe4; // int32_t
		constexpr auto SearchTag = 0xe8; // int32_t
	}

	namespace n_ACombatDemolitionRadarCore {
		constexpr auto AllyWithC4IconNameList = 0x46c; // EObjectIconType [0x5]
		constexpr auto ExplosionAreaIconOffset = 0x471; // char
	}

	namespace n_UCombatDataTableRefMailForm {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto WriterStringID = 0x80; // int32_t
		constexpr auto TitleStringID = 0x84; // int32_t
		constexpr auto DescStringID = 0x88; // int32_t
	}

	namespace n_USeqVar_Int {
		constexpr auto IntValue = 0xa0; // int32_t
	}

	namespace n_UMaterialExpressionTerrainLayerSwitch {
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto LayerUsed = 0xb8; // FExpressionInput
		constexpr auto LayerNotUsed = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewUsed = 0x128; // uint32_t : 1
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_USeqAct_CombatTutorial_HideBombIconsOnHUD {
		constexpr auto HideBombs = 0x108; // uint32_t : 1
		constexpr auto HideBombSites = 0x108; // uint32_t : 1
	}

	namespace n_UCombatSkillSoundGroup {
		constexpr auto AnnounceSkillTeamSounds = 0x60; // TArray<FSkillTeamAnnounceSound>
	}

	namespace n_UCombatAnimNotify_MITVParam {
		constexpr auto bOverride_AutoActiveAll = 0x60; // uint32_t : 1
		constexpr auto bAutoActivateAll = 0x60; // uint32_t : 1
		constexpr auto bApplyPlayRate = 0x60; // uint32_t : 1
		constexpr auto ScalarParam = 0x64; // TArray<FAnimNotifyMITVScalarParam>
		constexpr auto VectorParam = 0x74; // TArray<FAnimNotifyMITVVectorParam>
		constexpr auto LinearColorParam = 0x84; // TArray<FAnimNotifyMITVLinearColorParam>
		constexpr auto TextureParam = 0x94; // TArray<FAnimNotifyMITVTextureParam>
		constexpr auto SavedMITVParam = 0xa4; // TArray<FMITVParam>
		constexpr auto AnimStartTime = 0xb4; // float
		constexpr auto NotifyDuration = 0xb8; // float
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto TraceDistance = 0x1a8; // float
		constexpr auto WholeSceneDynamicShadowRadius = 0x1ac; // float
		constexpr auto NumWholeSceneDynamicShadowCascades = 0x1b0; // int32_t
		constexpr auto CascadeDistributionExponent = 0x1b4; // float
		constexpr auto LightmassSettings = 0x1b8; // FLightmassDirectionalLightSettings
	}

	namespace n_UCombatHUDOption_AIWaveRoundStatus {
		constexpr auto RoundStatus = 0x60; // FRoundStatusInfo
		constexpr auto ObjectHealthWarningCondition = 0x74; // int32_t
	}

	namespace n_USeqAct_SetVectorComponents {
		constexpr auto OutVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_UCombatDataTableRefMap {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Filename = 0x80; // FString
		constexpr auto DisplayName = 0x90; // int32_t
		constexpr auto MapSize = 0x94; // MATCHROOM_MAP_OPTION_SIZE
		constexpr auto DescAi = 0x98; // int32_t
		constexpr auto ImageID_DisplayThumbnail = 0x9c; // int32_t
		constexpr auto ImageID_Title = 0xa0; // int32_t
		constexpr auto ImageID_Loading = 0xa4; // int32_t
		constexpr auto ImageID_Minimap = 0xa8; // int32_t
		constexpr auto ImageID_BGThumbnail = 0xac; // int32_t
	}

	namespace n_UCombatDataTableRefShopRotation {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto ItemNameID = 0x7c; // int32_t
		constexpr auto ItemImageID = 0x80; // int32_t
		constexpr auto ItemPriceType = 0x84; // int32_t
		constexpr auto ItemPriceValue = 0x88; // int32_t
		constexpr auto RotationGroup = 0x8c; // int32_t
		constexpr auto Tier = 0x90; // int32_t
		constexpr auto RotationStart = 0x94; // FTimeData
		constexpr auto RotationEnd = 0x9c; // FTimeData
	}

	namespace n_USeqAct_CombatDelay {
		constexpr auto bDisplayHUD = 0x134; // uint32_t : 1
		constexpr auto NotifyTime = 0x138; // int32_t
	}

	namespace n_UActorFactoryAmbientSoundSimple {
		constexpr auto SoundNodeWave = 0x9c; // ObjectProperty
	}

	namespace n_UCombatHUD_BombsitesContainer {
		constexpr auto GoMsgUpdateTime = 0xd8; // float
	}

	namespace n_USeqCond_IncrementFloat {
		constexpr auto IncrementAmount = 0xec; // float
		constexpr auto ValueA = 0xf0; // float
		constexpr auto ValueB = 0xf4; // float
	}

	namespace n_UPath_AlongLine {
		constexpr auto Direction = 0x6c; // FVector
	}

	namespace n_UCombatAccessory_Base {
		constexpr auto SlotNumber = 0x370; // ETuningCostumeSlot
		constexpr auto MeshInfo = 0x374; // FAccessoryMeshInfo
		constexpr auto AttachSocketName = 0x380; // FName
	}

	namespace n_UCombatFrontEnd_RandomBox {
		constexpr auto FromOpenedScene = 0xd0; // eFrontEndScene
		constexpr auto ActionState = 0xd1; // RandomBoxActionState
		constexpr auto bContinueOpening = 0xd4; // uint32_t : 1
		constexpr auto bHasCardCover = 0xd4; // uint32_t : 1
		constexpr auto RemainReOpenCountX10 = 0xd4; // uint32_t : 1
		constexpr auto bReOpenProcessing = 0xd4; // uint32_t : 1
		constexpr auto RemainReOpenCount = 0xd8; // int32_t
		constexpr auto ReOpenDelay = 0xdc; // float
	}

	namespace n_UAnimNotify_Script {
		constexpr auto NotifyName = 0x60; // FName
		constexpr auto NotifyTickName = 0x68; // FName
		constexpr auto NotifyEndName = 0x70; // FName
	}

	namespace n_ACombatSquadAI {
		constexpr auto RouteObjective = 0x24c; // ObjectProperty
		constexpr auto ObjectiveRouteCache = 0x254; // TArray<ObjectProperty>
		constexpr auto PreviousObjectiveRouteCache = 0x264; // TArray<ObjectProperty>
		constexpr auto PendingSquadRouteMaker = 0x274; // ObjectProperty
		constexpr auto SquadRouteIteration = 0x27c; // int32_t
		constexpr auto SquadRoutes = 0x280; // TArray<FAlternateRoute>
		constexpr auto MaxSquadRoutes = 0x290; // int32_t
	}

	namespace n_ANxCylindricalForceField {
		constexpr auto RadialStrength = 0x298; // float
		constexpr auto RotationalStrength = 0x29c; // float
		constexpr auto LiftStrength = 0x2a0; // float
		constexpr auto ForceRadius = 0x2a4; // float
		constexpr auto ForceTopRadius = 0x2a8; // float
		constexpr auto LiftFalloffHeight = 0x2ac; // float
		constexpr auto EscapeVelocity = 0x2b0; // float
		constexpr auto ForceHeight = 0x2b4; // float
		constexpr auto HeightOffset = 0x2b8; // float
		constexpr auto UseSpecialRadialForce = 0x2bc; // uint32_t : 1
		constexpr auto Kernel = 0x2c0; // FPointer
	}

	namespace n_UCombatGameMessage {
		constexpr auto RegisteredMessage = 0x74; // TArray<FName>
	}

	namespace n_UGripConditionNode {
		constexpr auto ScriptBlackBoard = 0xd4; // ObjectProperty
		constexpr auto Bot = 0xdc; // ObjectProperty
		constexpr auto BotPawn = 0xe4; // ObjectProperty
	}

	namespace n_USeqAct_CombatTutorial_MessageOn {
		constexpr auto MessageTextID = 0x108; // int32_t
		constexpr auto GBA_Commnads = 0x10c; // TArray<FString>
	}

	namespace n_URB_ConstraintSetup {
		constexpr auto JointName = 0x60; // FName
		constexpr auto ConstraintBone1 = 0x68; // FName
		constexpr auto ConstraintBone2 = 0x70; // FName
		constexpr auto Pos1 = 0x78; // FVector
		constexpr auto PriAxis1 = 0x84; // FVector
		constexpr auto SecAxis1 = 0x90; // FVector
		constexpr auto Pos2 = 0x9c; // FVector
		constexpr auto PriAxis2 = 0xa8; // FVector
		constexpr auto SecAxis2 = 0xb4; // FVector
		constexpr auto PulleyPivot1 = 0xc0; // FVector
		constexpr auto PulleyPivot2 = 0xcc; // FVector
		constexpr auto bEnableProjection = 0xd8; // uint32_t : 1
		constexpr auto bLinearLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bLinearBreakable = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimited = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimited = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bAngularBreakable = 0xd8; // uint32_t : 1
		constexpr auto bIsPulley = 0xd8; // uint32_t : 1
		constexpr auto bMaintainMinDistance = 0xd8; // uint32_t : 1
		constexpr auto LinearXSetup = 0xdc; // FLinearDOFSetup
		constexpr auto LinearYSetup = 0xe4; // FLinearDOFSetup
		constexpr auto LinearZSetup = 0xec; // FLinearDOFSetup
		constexpr auto LinearLimitStiffness = 0xf4; // float
		constexpr auto LinearLimitDamping = 0xf8; // float
		constexpr auto LinearBreakThreshold = 0xfc; // float
		constexpr auto Swing1LimitAngle = 0x100; // float
		constexpr auto Swing2LimitAngle = 0x104; // float
		constexpr auto TwistLimitAngle = 0x108; // float
		constexpr auto SwingLimitStiffness = 0x10c; // float
		constexpr auto SwingLimitDamping = 0x110; // float
		constexpr auto TwistLimitStiffness = 0x114; // float
		constexpr auto TwistLimitDamping = 0x118; // float
		constexpr auto AngularBreakThreshold = 0x11c; // float
		constexpr auto PulleyRatio = 0x120; // float
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x60; // FLightmassPrimitiveSettings
	}

	namespace n_AGameCrowdInfoVolume {
		constexpr auto PotentialSpawnPoints = 0x280; // TArray<ObjectProperty>
	}

	namespace n_UPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto GeneratedGoal = 0x68; // ObjectProperty
		constexpr auto MaxPathVisits = 0x70; // int32_t
		constexpr auto CacheIdx = 0x74; // int32_t
	}

	namespace n_UCombatInstanceItem {
		constexpr auto AmmorGrade = 0x60; // int32_t
		constexpr auto AP = 0x64; // FArmorPointStruct [0x12]
		constexpr auto APForExplosion = 0x334; // int32_t
		constexpr auto ShortenRespawnDelay = 0x338; // float
		constexpr auto DamagedAccelerationRatio = 0x33c; // float
		constexpr auto RankExpUpRatio = 0x340; // float
		constexpr auto HudIconName = 0x344; // FString
		constexpr auto PowerBullet = 0x354; // uint32_t : 1
		constexpr auto GroundCrouchSpeedRate_Buff = 0x358; // float
		constexpr auto GroundWalkingSpeedRate_Buff = 0x35c; // float
		constexpr auto GroundRunSpeedRate_Buff = 0x360; // float
		constexpr auto GroundAccelationRate_Buff = 0x364; // float
		constexpr auto ItemFXClass = 0x368; // UCombatItemFXBase*
	}

	namespace n_UMorphTargetSet {
		constexpr auto Targets = 0x60; // TArray<ObjectProperty>
		constexpr auto BaseSkelMesh = 0x70; // ObjectProperty
		constexpr auto RawWedgePointIndices = 0x78; // FArray_Mirror
	}

	namespace n_UCombatAnimBlend_SimpleJump {
		constexpr auto OwnerPawn = 0x144; // ObjectProperty
	}

	namespace n_UOnlineEventsInterfaceMcp {
		constexpr auto EventUploadConfigs = 0x80; // TArray<FEventUploadConfig>
		constexpr auto MCPEventPostObjects = 0x90; // TArray<FPointer>
		constexpr auto DisabledUploadTypes = 0xa0; // TArray<EEventUploadType>
		constexpr auto bBinaryStats = 0xb0; // uint32_t : 1
	}

	namespace n_AWorldAttractor {
		constexpr auto bEnabled = 0x244; // uint32_t : 1
		constexpr auto LoopDuration = 0x248; // float
		constexpr auto CurrentTime = 0x24c; // float
		constexpr auto FalloffType = 0x250; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x254; // FMatineeRawDistributionFloat
		constexpr auto Range = 0x280; // FMatineeRawDistributionFloat
		constexpr auto Strength = 0x2ac; // FMatineeRawDistributionFloat
		constexpr auto CollisionRadius = 0x2d8; // float
		constexpr auto DragCoefficient = 0x2dc; // FMatineeRawDistributionFloat
		constexpr auto DragRadius = 0x308; // FMatineeRawDistributionFloat
	}

	namespace n_AController {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x244; // FPointer
		constexpr auto Pawn = 0x24c; // ObjectProperty
		constexpr auto PlayerReplicationInfo = 0x254; // ObjectProperty
		constexpr auto PlayerNum = 0x25c; // int32_t
		constexpr auto NextController = 0x260; // ObjectProperty
		constexpr auto bIsPlayer = 0x268; // uint32_t : 1
		constexpr auto bGodMode = 0x268; // uint32_t : 1
		constexpr auto bSoaking = 0x268; // uint32_t : 1
		constexpr auto bSlowerZAcquire = 0x268; // uint32_t : 1
		constexpr auto bNotifyPostLanded = 0x268; // uint32_t : 1
		constexpr auto bNotifyApex = 0x268; // uint32_t : 1
		constexpr auto bOverrideSearchStart = 0x268; // uint32_t : 1
		constexpr auto bAdvancedTactics = 0x268; // uint32_t : 1
		constexpr auto bCanDoSpecial = 0x268; // uint32_t : 1
		constexpr auto bAdjusting = 0x268; // uint32_t : 1
		constexpr auto bPreparingMove = 0x268; // uint32_t : 1
		constexpr auto bForceStrafe = 0x268; // uint32_t : 1
		constexpr auto bLOSflag = 0x268; // uint32_t : 1
		constexpr auto bSkipExtraLOSChecks = 0x268; // uint32_t : 1
		constexpr auto bNotifyFallingHitWall = 0x268; // uint32_t : 1
		constexpr auto bEarlyOutOfSighTestsForSameType = 0x268; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x268; // uint32_t : 1
		constexpr auto bSeeFriendly = 0x268; // uint32_t : 1
		constexpr auto bUsingPathLanes = 0x268; // uint32_t : 1
		constexpr auto bFire = 0x26c; // char
		constexpr auto bAltFire = 0x26d; // char
		constexpr auto MinHitWall = 0x270; // float
		constexpr auto NavigationHandleClass = 0x274; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x27c; // ObjectProperty
		constexpr auto OverrideSearchStart = 0x284; // FVector
		constexpr auto MoveTimer = 0x290; // float
		constexpr auto MoveTarget = 0x294; // ObjectProperty
		constexpr auto DestinationPosition = 0x29c; // FBasedPosition
		constexpr auto FocalPosition = 0x2d4; // FBasedPosition
		constexpr auto Focus = 0x30c; // ObjectProperty
		constexpr auto GoalList = 0x314; // ObjectProperty [0x4]
		constexpr auto AdjustPosition = 0x334; // FBasedPosition
		constexpr auto StartSpot = 0x36c; // ObjectProperty
		constexpr auto RouteCache = 0x374; // TArray<ObjectProperty>
		constexpr auto CurrentPath = 0x384; // ObjectProperty
		constexpr auto NextRoutePath = 0x38c; // ObjectProperty
		constexpr auto CurrentPathDir = 0x394; // FVector
		constexpr auto RouteGoal = 0x3a0; // ObjectProperty
		constexpr auto RouteDist = 0x3a8; // float
		constexpr auto LastRouteFind = 0x3ac; // float
		constexpr auto PendingMover = 0x3b0; // ObjectProperty
		constexpr auto FailedMoveTarget = 0x3b8; // ObjectProperty
		constexpr auto MoveFailureCount = 0x3c0; // int32_t
		constexpr auto GroundPitchTime = 0x3c4; // float
		constexpr auto ShotTarget = 0x3c8; // ObjectProperty
		constexpr auto LastFailedReach = 0x3d0; // ObjectProperty
		constexpr auto FailedReachTime = 0x3d8; // float
		constexpr auto FailedReachLocation = 0x3dc; // FVector
		constexpr auto SightCounter = 0x3e8; // float
		constexpr auto SightCounterInterval = 0x3ec; // float
		constexpr auto InUseNodeCostMultiplier = 0x3f0; // float
		constexpr auto HighJumpNodeCostModifier = 0x3f4; // int32_t
		constexpr auto MaxMoveTowardPawnTargetTime = 0x3f8; // float
		constexpr auto Enemy = 0x3fc; // ObjectProperty
		constexpr auto VisiblePortals = 0x404; // TArray<FVisiblePortalInfo>
		constexpr auto LaneOffset = 0x414; // float
		constexpr auto OldBasedRotation = 0x418; // FRotator
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x424; // FVector
	}

	namespace n_USeqAct_DelaySwitch {
		constexpr auto LinkCount = 0x120; // int32_t
		constexpr auto CurrentIdx = 0x124; // int32_t
		constexpr auto SwitchDelay = 0x128; // float
		constexpr auto NextLinkTime = 0x12c; // float
	}

	namespace n_AGripAIManagerHolder {
		constexpr auto AIManager = 0x244; // FPointer
	}

	namespace n_UHTTPDownload {
		constexpr auto RedirectToURL = 0x74; // FString
		constexpr auto UseCompression = 0x84; // uint32_t : 1
		constexpr auto ProxyServerHost = 0xaa4; // FString
		constexpr auto ProxyServerPort = 0xab4; // int32_t
		constexpr auto MaxRedirection = 0xab8; // uint32_t : 1
		constexpr auto ConnectionTimeout = 0xabc; // float
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x60; // float
		constexpr auto Location = 0x64; // FIntPoint
	}

	namespace n_USkelControlFootPlacement {
		constexpr auto FootOffset = 0x128; // float
		constexpr auto FootUpAxis = 0x12c; // EAxis
		constexpr auto FootRotOffset = 0x130; // FRotator
		constexpr auto bInvertFootUpAxis = 0x13c; // uint32_t : 1
		constexpr auto bOrientFootToGround = 0x13c; // uint32_t : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0x13c; // uint32_t : 1
		constexpr auto MaxUpAdjustment = 0x140; // float
		constexpr auto MaxDownAdjustment = 0x144; // float
		constexpr auto MaxFootOrientAdjust = 0x148; // float
	}

	namespace n_ACBWeaponAttachment_ParachuteBase {
		constexpr auto TranslationOffset = 0x424; // float
	}

	namespace n_USeqAct_ConvertToString {
		constexpr auto bIncludeVarComment = 0x108; // uint32_t : 1
		constexpr auto VarSeparator = 0x10c; // FString
		constexpr auto NumberOfInputs = 0x11c; // int32_t
	}

	namespace n_ARB_RadialImpulseActor {
		constexpr auto RenderComponent = 0x244; // ComponentProperty
		constexpr auto ImpulseComponent = 0x24c; // ComponentProperty
		constexpr auto ImpulseCount = 0x254; // char
	}

	namespace n_UCombatDataTableRefShop {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto ShopNameID = 0x80; // int32_t
	}

	namespace n_ARB_Thruster {
		constexpr auto bThrustEnabled = 0x244; // uint32_t : 1
		constexpr auto ThrustStrength = 0x248; // float
	}

	namespace n_UCombatFrontEnd_Dashboard {
		constexpr auto DashBoardButtonList = 0xd0; // FDashBoardButtonInfo [0xe]
		constexpr auto TopBar = 0x370; // ObjectProperty
		constexpr auto LastPlayerName = 0x378; // FString
		constexpr auto LastCCardID = 0x388; // int32_t
		constexpr auto LastCCardIconPath = 0x38c; // FString
		constexpr auto LastClanName = 0x39c; // FString
		constexpr auto LastClanIconName = 0x3ac; // FString
		constexpr auto LastClanIconPath = 0x3bc; // FString
		constexpr auto LastClanLevel = 0x3cc; // FString
		constexpr auto LastClanLevelColor = 0x3dc; // FString
		constexpr auto LastLevel = 0x3ec; // int32_t
		constexpr auto LastExpGuage = 0x3f0; // int32_t
		constexpr auto LastLevelIconPath = 0x3f4; // FString
		constexpr auto LastCurExp = 0x404; // int32_t
		constexpr auto LastNextExp = 0x408; // int32_t
		constexpr auto LastTierPoint = 0x40c; // int32_t
		constexpr auto LastTierIconPath = 0x410; // FString
		constexpr auto LastMyMoneyInfo = 0x420; // TArray<FMyMoneyStruct>
		constexpr auto LastOnlineFriendCount = 0x430; // int32_t
		constexpr auto bLastNewSuggestionFriend = 0x434; // uint32_t : 1
		constexpr auto bLastNewMail = 0x434; // uint32_t : 1
		constexpr auto bLastExpiresMail = 0x434; // uint32_t : 1
		constexpr auto bLastNoManner = 0x434; // uint32_t : 1
		constexpr auto LastNewMailCount = 0x438; // int32_t
		constexpr auto BulletSaleEffectTimeOut = 0x43c; // int32_t
		constexpr auto BulletSaleEffectLineCount = 0x440; // int32_t
		constexpr auto PenaltyTimeMinute_UI = 0x444; // int32_t
		constexpr auto PenaltyPoint_UI = 0x448; // int32_t
		constexpr auto DashBoardPopup = 0x44c; // TArray<FPopupItemInfo>
	}

	namespace n_UCombatDataTableRefGameScoring {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Score = 0x80; // int32_t
		constexpr auto SeizeScore = 0x84; // int32_t
		constexpr auto CreditPoint = 0x88; // int32_t
		constexpr auto RankExp = 0x8c; // int32_t
		constexpr auto ScoreName = 0x90; // int32_t
		constexpr auto ImagePath = 0x94; // FString
		constexpr auto ImageID = 0xa4; // int32_t
		constexpr auto BGImgType = 0xa8; // int32_t
		constexpr auto CountImgType = 0xac; // int32_t
		constexpr auto Count = 0xb0; // int32_t
		constexpr auto Type = 0xb4; // EScoringDisplayType
		constexpr auto GRADE = 0xb5; // EScoringGradeType
		constexpr auto ScoringDisplayLocation = 0xb6; // char
		constexpr auto ScoringTextColorNumber = 0xb7; // char
		constexpr auto SoundPath = 0xb8; // FString
	}

	namespace n_UCombatGameViewportClient {
		constexpr auto HintLocFileName = 0x1a0; // FString
		constexpr auto ScreenResList = 0x1b0; // TArray<F__ASPECT>
		constexpr auto bShowReflectionsOnly = 0x1c0; // uint32_t : 1
		constexpr auto bShowSpawnGroupIndex = 0x1c0; // uint32_t : 1
		constexpr auto BitMapForScreenShot = 0x1c4; // TArray<FColor>
		constexpr auto FlushkeyInputNames = 0x1d4; // TArray<FName>
	}

	namespace n_UUberPostProcessEffect {
		constexpr auto SceneShadows = 0xf0; // FVector
		constexpr auto SceneHighLights = 0xfc; // FVector
		constexpr auto SceneMidTones = 0x108; // FVector
		constexpr auto SceneDesaturation = 0x114; // float
		constexpr auto SceneColorize = 0x118; // FVector
		constexpr auto TonemapperType = 0x124; // ETonemapperType
		constexpr auto PostProcessAAType = 0x125; // EPostProcessAAType
		constexpr auto TonemapperRange = 0x128; // float
		constexpr auto TonemapperToeFactor = 0x12c; // float
		constexpr auto TonemapperScale = 0x130; // float
		constexpr auto MotionBlurSoftEdgeKernelSize = 0x134; // float
		constexpr auto bEnableImageGrain = 0x138; // uint32_t : 1
		constexpr auto bScaleEffectsWithViewSize = 0x138; // uint32_t : 1
		constexpr auto bUseColorEdgeDetectionForSMAA = 0x138; // uint32_t : 1
		constexpr auto bEnableHDRTonemapper = 0x138; // uint32_t : 1
		constexpr auto SceneImageGrainScale = 0x13c; // float
		constexpr auto BloomWeightSmall = 0x140; // float
		constexpr auto BloomWeightMedium = 0x144; // float
		constexpr auto BloomWeightLarge = 0x148; // float
		constexpr auto BloomSizeScaleSmall = 0x14c; // float
		constexpr auto BloomSizeScaleMedium = 0x150; // float
		constexpr auto BloomSizeScaleLarge = 0x154; // float
		constexpr auto EdgeDetectionThreshold = 0x158; // float
		constexpr auto SMAAEdgeDetectionThreshold = 0x15c; // float
		constexpr auto PreviousLUTBlender = 0x160; // FLUTBlender
		constexpr auto SceneHDRTonemapperScale = 0x184; // float
	}

	namespace n_ULocalPlayer {
		constexpr auto VfTable_FObserverInterface = 0x8c; // FPointer
		constexpr auto ControllerId = 0x94; // int32_t
		constexpr auto ViewportClient = 0x98; // ObjectProperty
		constexpr auto Origin = 0xa0; // FVector2D
		constexpr auto Size = 0xa8; // FVector2D
		constexpr auto PlayerPostProcess = 0xb0; // ObjectProperty
		constexpr auto PlayerPostProcessChains = 0xb8; // TArray<ObjectProperty>
		constexpr auto bForceDefaultPostProcessChain = 0xc8; // uint32_t : 1
		constexpr auto bWantToResetToMapDefaultPP = 0xc8; // uint32_t : 1
		constexpr auto bSentSplitJoin = 0xc8; // uint32_t : 1
		constexpr auto bPendingServerAuth = 0xc8; // uint32_t : 1
		constexpr auto ViewState = 0xcc; // FPointer
		constexpr auto ViewState2 = 0xd4; // FPointer
		constexpr auto ActorVisibilityHistory = 0xdc; // FSynchronizedActorVisibilityHistory
		constexpr auto LastViewLocation = 0xec; // FVector
		constexpr auto CurrentPPInfo = 0xf8; // FCurrentPostProcessVolumeInfo
		constexpr auto LevelPPInfo = 0x26c; // FCurrentPostProcessVolumeInfo
		constexpr auto ActivePPOverrides = 0x3e0; // TArray<FPostProcessSettingsOverride>
		constexpr auto AspectRatioAxisConstraint = 0x3f0; // EAspectRatioAxisConstraint
		constexpr auto LastMap = 0x3f4; // FString
		constexpr auto TagContext = 0x404; // ObjectProperty
		constexpr auto CachedAuthInt = 0x40c; // TScriptInterface<Class>
		constexpr auto ServerAuthTimestamp = 0x41c; // float
		constexpr auto ServerAuthTimeout = 0x420; // int32_t
		constexpr auto ServerAuthRetryCount = 0x424; // int32_t
		constexpr auto MaxServerAuthRetryCount = 0x428; // int32_t
		constexpr auto ServerAuthUID = 0x42c; // FUniqueNetId
	}

	namespace n_ACombatTrigger {
		constexpr auto InteractDistance = 0x254; // float
	}

	namespace n_ADynamicTriggerVolume {
		constexpr auto bEnabled = 0x280; // uint32_t : 1
	}

	namespace n_UCCSAFMoveToActor {
		constexpr auto Target = 0x64; // ObjectProperty
		constexpr auto MovementType = 0x6c; // ECCSMovementType
		constexpr auto Alertness = 0x6d; // ECCSAlertnessState
	}

	namespace n_ACombatDestructibleSMActor {
		constexpr auto MeshInfoList = 0x254; // TArray<FMeshInfo>
		constexpr auto CurrentMeshInfoIndex = 0x264; // char
		constexpr auto CurrentDamage = 0x268; // int32_t
	}

	namespace n_UTexture2D {
		constexpr auto Mips = 0x11c; // FIndirectArray_Mirror
		constexpr auto CachedPVRTCMips = 0x12c; // FIndirectArray_Mirror
		constexpr auto CachedATITCMips = 0x13c; // FIndirectArray_Mirror
		constexpr auto CachedFlashMipsMaxResolution = 0x14c; // int32_t
		constexpr auto CachedFlashMips = 0x150; // FUntypedBulkData_Mirror
		constexpr auto SizeX = 0x190; // int32_t
		constexpr auto SizeY = 0x194; // int32_t
		constexpr auto OriginalSizeX = 0x198; // int32_t
		constexpr auto OriginalSizeY = 0x19c; // int32_t
		constexpr auto Format = 0x1a0; // EPixelFormat
		constexpr auto AddressX = 0x1a1; // TextureAddress
		constexpr auto AddressY = 0x1a2; // TextureAddress
		constexpr auto bIsStreamable = 0x1a4; // uint32_t : 1
		constexpr auto bHasCancelationPending = 0x1a4; // uint32_t : 1
		constexpr auto bHasBeenLoadedFromPersistentArchive = 0x1a4; // uint32_t : 1
		constexpr auto bForceMiplevelsToBeResident = 0x1a4; // uint32_t : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x1a4; // uint32_t : 1
		constexpr auto bIsCompositingSource = 0x1a4; // uint32_t : 1
		constexpr auto bHasBeenPaintedInEditor = 0x1a4; // uint32_t : 1
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x1a8; // float
		constexpr auto TextureFileCacheName = 0x1ac; // FName
		constexpr auto TextureFileCacheGuid = 0x1b4; // FGuid
		constexpr auto RequestedMips = 0x1c4; // int32_t
		constexpr auto ResidentMips = 0x1c8; // int32_t
		constexpr auto MipsToRemoveOnCompress = 0x1cc; // int32_t
		constexpr auto PendingMipChangeRequestStatus = 0x1d0; // FThreadSafeCounter
		constexpr auto SystemMemoryData = 0x1d4; // TArray<char>
		constexpr auto StreamableTexturesLink = 0x1e4; // FTextureLinkedListMirror
		constexpr auto StreamingIndex = 0x1fc; // int32_t
		constexpr auto MipTailBaseIdx = 0x200; // int32_t
		constexpr auto ResourceMem = 0x204; // FPointer
		constexpr auto FirstResourceMemMip = 0x20c; // int32_t
		constexpr auto Timer = 0x210; // float
	}

	namespace n_UGripBTScriptNode {
		constexpr auto Owner = 0xbc; // ObjectProperty
		constexpr auto ConditionCache = 0xc4; // uint32_t : 1
		constexpr auto NodeTitleOverride = 0xc8; // int32_t
	}

	namespace n_UAnimSequence {
		constexpr auto SequenceName = 0x60; // FName
		constexpr auto Notifies = 0x68; // TArray<FAnimNotifyEvent>
		constexpr auto MetaData = 0x78; // TArray<ObjectProperty>
		constexpr auto BoneControlModifiers = 0x88; // TArray<FSkelControlModifier>
		constexpr auto SequenceLength = 0x98; // float
		constexpr auto NumFrames = 0x9c; // int32_t
		constexpr auto RateScale = 0xa0; // float
		constexpr auto TargetLength = 0xa4; // float
		constexpr auto bNoLoopingInterpolation = 0xa8; // uint32_t : 1
		constexpr auto ShowMeshFlippedInEditor = 0xa8; // uint32_t : 1
		constexpr auto bIsAdditive = 0xa8; // uint32_t : 1
		constexpr auto bAdditiveBuiltLooping = 0xa8; // uint32_t : 1
		constexpr auto bDoNotOverrideCompression = 0xa8; // uint32_t : 1
		constexpr auto bHasBeenUsed = 0xa8; // uint32_t : 1
		constexpr auto bWasCompressedWithoutTranslations = 0xa8; // uint32_t : 1
		constexpr auto bRotationOnly = 0xa8; // uint32_t : 1
		constexpr auto RawAnimData = 0xac; // TArray<FRawAnimSequenceTrack>
		constexpr auto RawAnimationData = 0xbc; // TArray<FRawAnimSequenceTrack>
		constexpr auto TranslationData = 0xcc; // TArray<FTranslationTrack>
		constexpr auto RotationData = 0xdc; // TArray<FRotationTrack>
		constexpr auto CurveData = 0xec; // TArray<FCurveTrack>
		constexpr auto TranslationCompressionFormat = 0xfc; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0xfd; // AnimationCompressionFormat
		constexpr auto KeyEncodingFormat = 0xfe; // AnimationKeyFormat
		constexpr auto CompressedTrackOffsets = 0x100; // TArray<int32_t>
		constexpr auto CompressedByteStream = 0x110; // TArray<char>
		constexpr auto TranslationCodec = 0x120; // FPointer
		constexpr auto RotationCodec = 0x128; // FPointer
		constexpr auto AdditiveRefPose = 0x130; // TArray<FBoneAtom>
		constexpr auto AdditiveBasePose = 0x140; // TArray<FRawAnimSequenceTrack>
		constexpr auto EncodingPkgVersion = 0x150; // int32_t
		constexpr auto UseScore = 0x154; // float
	}

	namespace n_UActorFactoryDecal {
		constexpr auto DecalMaterial = 0x9c; // ObjectProperty
	}

	namespace n_USkelControl_TwistBone {
		constexpr auto SourceBoneName = 0xd0; // FName
		constexpr auto TwistAngleScale = 0xd8; // float
	}

	namespace n_UCombatInstanceItemManager {
		constexpr auto InstanceItemList = 0x60; // UCombatInstanceItem* [0x4]
		constexpr auto AccessoryItemInfo = 0x80; // UCombatAccessory_Base*
	}

	namespace n_UGripActionNode_SwitchWeapon {
		constexpr auto WeaponGroup = 0xf4; // EWeaponGroup
	}

	namespace n_APotentialClimbWatcher {
		constexpr auto OwnerPawn = 0x244; // ObjectProperty
	}

	namespace n_ACombatWavePawn_JuggernautBase {
		constexpr auto bUseChainSawEffect = 0x1238; // uint32_t : 1
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x430; // ObjectProperty
		constexpr auto PlayerCamera = 0x438; // ObjectProperty
		constexpr auto CameraClass = 0x440; // ACamera*
		constexpr auto bFrozen = 0x448; // uint32_t : 1
		constexpr auto bPressedJump = 0x448; // uint32_t : 1
		constexpr auto bDoubleJump = 0x448; // uint32_t : 1
		constexpr auto bUpdatePosition = 0x448; // uint32_t : 1
		constexpr auto bUpdating = 0x448; // uint32_t : 1
		constexpr auto bNeverSwitchOnPickup = 0x448; // uint32_t : 1
		constexpr auto bCheatFlying = 0x448; // uint32_t : 1
		constexpr auto bCameraPositionLocked = 0x448; // uint32_t : 1
		constexpr auto bShortConnectTimeOut = 0x448; // uint32_t : 1
		constexpr auto bPendingDestroy = 0x448; // uint32_t : 1
		constexpr auto bWasSpeedHack = 0x448; // uint32_t : 1
		constexpr auto bWasSaturated = 0x448; // uint32_t : 1
		constexpr auto bAimingHelp = 0x448; // uint32_t : 1
		constexpr auto bCameraCut = 0x448; // uint32_t : 1
		constexpr auto bClientSimulatingViewTarget = 0x448; // uint32_t : 1
		constexpr auto bHasVoiceHandshakeCompleted = 0x448; // uint32_t : 1
		constexpr auto bCinematicMode = 0x448; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x448; // uint32_t : 1
		constexpr auto bCinemaDisableInputMove = 0x448; // uint32_t : 1
		constexpr auto bCinemaDisableInputLook = 0x448; // uint32_t : 1
		constexpr auto bRenderHUDFullScreen = 0x448; // uint32_t : 1
		constexpr auto bIgnoreNetworkMessages = 0x448; // uint32_t : 1
		constexpr auto bShowKismetDrawText = 0x448; // uint32_t : 1
		constexpr auto bReplicateAllPawns = 0x448; // uint32_t : 1
		constexpr auto bIsUsingStreamingVolumes = 0x448; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x448; // uint32_t : 1
		constexpr auto bIsControllerConnected = 0x448; // uint32_t : 1
		constexpr auto bCheckSoundOcclusion = 0x448; // uint32_t : 1
		constexpr auto bDebugCameraAnims = 0x448; // uint32_t : 1
		constexpr auto bBlockCameraAnimsFromOverridingPostProcess = 0x448; // uint32_t : 1
		constexpr auto bLogHearSoundOverflow = 0x448; // uint32_t : 1
		constexpr auto bCheckRelevancyThroughPortals = 0x448; // uint32_t : 1
		constexpr auto bDebugClientAdjustPosition = 0x44c; // uint32_t : 1
		constexpr auto MaxResponseTime = 0x450; // float
		constexpr auto WaitDelay = 0x454; // float
		constexpr auto AcknowledgedPawn = 0x458; // ObjectProperty
		constexpr auto DoubleClickDir = 0x460; // EDoubleClickDir
		constexpr auto bIgnoreMoveInput = 0x461; // char
		constexpr auto bIgnoreLookInput = 0x462; // char
		constexpr auto bRun = 0x463; // char
		constexpr auto bDuck = 0x464; // char
		constexpr auto NetPlayerIndex = 0x465; // char
		constexpr auto ViewTarget = 0x468; // ObjectProperty
		constexpr auto RealViewTarget = 0x470; // ObjectProperty
		constexpr auto ControllingDirTrackInst = 0x478; // ObjectProperty
		constexpr auto FOVAngle = 0x480; // float
		constexpr auto DesiredFOV = 0x484; // float
		constexpr auto DefaultFOV = 0x488; // float
		constexpr auto LODDistanceFactor = 0x48c; // float
		constexpr auto TargetViewRotation = 0x490; // FRotator
		constexpr auto TargetEyeHeight = 0x49c; // float
		constexpr auto BlendedTargetViewRotation = 0x4a0; // FRotator
		constexpr auto myHUD = 0x4ac; // ObjectProperty
		constexpr auto mySecondaryHUD = 0x4b4; // ObjectProperty
		constexpr auto SavedMoveClass = 0x4bc; // USavedMove*
		constexpr auto SavedMoves = 0x4c4; // ObjectProperty
		constexpr auto FreeMoves = 0x4cc; // ObjectProperty
		constexpr auto PendingMove = 0x4d4; // ObjectProperty
		constexpr auto LastAckedAccel = 0x4dc; // FVector
		constexpr auto CurrentTimeStamp = 0x4e8; // float
		constexpr auto LastUpdateTime = 0x4ec; // float
		constexpr auto ServerTimeStamp = 0x4f0; // float
		constexpr auto TimeMargin = 0x4f4; // float
		constexpr auto ClientUpdateTime = 0x4f8; // float
		constexpr auto MaxTimeMargin = 0x4fc; // float
		constexpr auto LastActiveTime = 0x500; // float
		constexpr auto ClientCap = 0x504; // int32_t
		constexpr auto DynamicPingThreshold = 0x508; // float
		constexpr auto LastPingUpdate = 0x50c; // float
		constexpr auto LastRealPingUpdate = 0x510; // float
		constexpr auto LastSpeedHackLog = 0x514; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x518; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x51c; // float
		constexpr auto PendingAdjustment = 0x520; // FClientAdjustment
		constexpr auto GroundPitch = 0x558; // int32_t
		constexpr auto CheatManager = 0x55c; // ObjectProperty
		constexpr auto CheatClass = 0x564; // ACheatManager*
		constexpr auto PlayerInput = 0x56c; // ObjectProperty
		constexpr auto InputClass = 0x574; // UPlayerInput*
		constexpr auto FailedPathStart = 0x57c; // FVector
		constexpr auto CylinderComponent = 0x588; // ComponentProperty
		constexpr auto ForceFeedbackManagerClassName = 0x590; // FString
		constexpr auto ForceFeedbackManager = 0x5a0; // ObjectProperty
		constexpr auto Interactions = 0x5a8; // TArray<ObjectProperty>
		constexpr auto VoiceMuteList = 0x5b8; // TArray<FUniqueNetId>
		constexpr auto GameplayVoiceMuteList = 0x5c8; // TArray<FUniqueNetId>
		constexpr auto VoicePacketFilter = 0x5d8; // TArray<FUniqueNetId>
		constexpr auto ConnectedPeers = 0x5e8; // TArray<FConnectedPeerInfo>
		constexpr auto BestNextHostPeers = 0x5f8; // TArray<FUniqueNetId>
		constexpr auto MigratedSearchToJoin = 0x608; // ObjectProperty
		constexpr auto OnlineSub = 0x610; // ObjectProperty
		constexpr auto VoiceInterface = 0x618; // TScriptInterface<Class>
		constexpr auto OnlinePlayerData = 0x628; // ObjectProperty
		constexpr auto InteractDistance = 0x630; // float
		constexpr auto DelayedJoinSessionName = 0x634; // FName
		constexpr auto InputRequests = 0x63c; // TArray<FInputMatchRequest>
		constexpr auto LastBroadcastTime = 0x64c; // float
		constexpr auto LastBroadcastString = 0x650; // FString [0x4]
		constexpr auto PendingMapChangeLevelNames = 0x690; // TArray<FName>
		constexpr auto MyCoverReplicator = 0x6a0; // ObjectProperty
		constexpr auto DebugTextList = 0x6a8; // TArray<FDebugTextInfo>
		constexpr auto SpectatorCameraSpeed = 0x6b8; // float
		constexpr auto PendingSwapConnection = 0x6bc; // ObjectProperty
		constexpr auto MinRespawnDelay = 0x6c4; // float
		constexpr auto MaxConcurrentHearSounds = 0x6c8; // int32_t
		constexpr auto HearSoundActiveComponents = 0x6cc; // TArray<ComponentProperty>
		constexpr auto HearSoundPoolComponents = 0x6dc; // TArray<ComponentProperty>
		constexpr auto HiddenActors = 0x6ec; // TArray<ObjectProperty>
		constexpr auto LastSpectatorStateSynchTime = 0x6fc; // float
		constexpr auto SingleChannelSounds = 0x700; // TArray<FSingleChannelSound>
		constexpr auto __OnMissingPeersUnregistered__Delegate = 0x710; // DelegateProperty
		constexpr auto __CanUnpause__Delegate = 0x720; // DelegateProperty
		constexpr auto __InputMatchDelegate__Delegate = 0x730; // DelegateProperty
	}

	namespace n_UCombatDataTableRefShopValue {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto RentalID = 0x70; // int32_t
		constexpr auto ValueType = 0x74; // int32_t
		constexpr auto ValueRange = 0x78; // int32_t [0x5]
		constexpr auto PriceType = 0x8c; // int32_t
		constexpr auto ItemPrice = 0x90; // int32_t [0x5]
		constexpr auto Mainprice = 0xa4; // int32_t
		constexpr auto SalePrice = 0xa8; // int32_t [0x5]
		constexpr auto AddPriceType = 0xbc; // int32_t
		constexpr auto AddPrice = 0xc0; // int32_t [0x5]
		constexpr auto SellStart = 0xd4; // FTimeData
		constexpr auto SellEnd = 0xdc; // FTimeData
		constexpr auto AddReplaceItem = 0xe4; // FString
		constexpr auto MailFormCodename = 0xf4; // FString
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x60; // ObjectProperty
		constexpr auto InterpGroupInst = 0x68; // ObjectProperty
		constexpr auto CurTime = 0x70; // float
		constexpr auto bLooping = 0x74; // uint32_t : 1
		constexpr auto bFinished = 0x74; // uint32_t : 1
		constexpr auto bAutoReleaseWhenFinished = 0x74; // uint32_t : 1
		constexpr auto bBlendingIn = 0x74; // uint32_t : 1
		constexpr auto bBlendingOut = 0x74; // uint32_t : 1
		constexpr auto BlendInTime = 0x78; // float
		constexpr auto BlendOutTime = 0x7c; // float
		constexpr auto CurBlendInTime = 0x80; // float
		constexpr auto CurBlendOutTime = 0x84; // float
		constexpr auto PlayRate = 0x88; // float
		constexpr auto BasePlayScale = 0x8c; // float
		constexpr auto TransientScaleModifier = 0x90; // float
		constexpr auto CurrentBlendWeight = 0x94; // float
		constexpr auto RemainingTime = 0x98; // float
		constexpr auto MoveTrack = 0x9c; // ObjectProperty
		constexpr auto MoveInst = 0xa4; // ObjectProperty
		constexpr auto SourceAnimNode = 0xac; // ObjectProperty
		constexpr auto PlaySpace = 0xb4; // ECameraAnimPlaySpace
		constexpr auto UserPlaySpaceMatrix = 0xc0; // FMatrix
		constexpr auto LastPPSettings = 0x100; // FPostProcessSettings
		constexpr auto LastPPSettingsAlpha = 0x264; // float
		constexpr auto LastCameraLoc = 0x268; // FVector
		constexpr auto VelocityRate = 0x274; // float
	}

	namespace n_UObject {
		constexpr auto VfTableObject = 0x0; // FPointer
		constexpr auto HashNext = 0x8; // FPointer
		constexpr auto ObjectFlags = 0x10; // FQWord
		constexpr auto HashOuterNext = 0x18; // FPointer
		constexpr auto StateFrame = 0x20; // FPointer
		constexpr auto Linker = 0x28; // ObjectProperty
		constexpr auto LinkerIndex = 0x30; // FPointer
		constexpr auto ObjectInternalInteger = 0x38; // int32_t
		constexpr auto NetIndex = 0x3c; // int32_t
		constexpr auto Outer = 0x40; // ObjectProperty
		constexpr auto Name = 0x48; // FName
		constexpr auto Class = 0x50; // UObject*
		constexpr auto ObjectArchetype = 0x58; // ObjectProperty
	}

	namespace n_UCombatDataTableRefModeMap {
		constexpr auto ModeCodeName = 0x6c; // FString
		constexpr auto ModeGroupName = 0x7c; // FString
		constexpr auto MapCodeName = 0x8c; // FString
		constexpr auto ImageID_Minimap = 0x9c; // int32_t
		constexpr auto BetaVersion = 0xa0; // int32_t
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x244; // ComponentProperty
		constexpr auto LightEnvironment = 0x24c; // ComponentProperty
		constexpr auto bDestroyOnSystemFinish = 0x254; // uint32_t : 1
		constexpr auto bPostUpdateTickGroup = 0x254; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x254; // uint32_t : 1
		constexpr auto bCurrentlyActive = 0x254; // uint32_t : 1
	}

	namespace n_UCombatAIAction_Sleep {
		constexpr auto ActionNode = 0x78; // ObjectProperty
	}

	namespace n_AInternetLink {
		constexpr auto LinkMode = 0x244; // ELinkMode
		constexpr auto InLineMode = 0x245; // ELineMode
		constexpr auto OutLineMode = 0x246; // ELineMode
		constexpr auto ReceiveMode = 0x247; // EReceiveMode
		constexpr auto Socket = 0x248; // FPointer
		constexpr auto Port = 0x250; // int32_t
		constexpr auto RemoteSocket = 0x254; // FPointer
		constexpr auto PrivateResolveInfo = 0x25c; // FPointer
		constexpr auto DataPending = 0x264; // int32_t
	}

	namespace n_UPBRuleNodeMesh {
		constexpr auto BuildingMeshes = 0x70; // TArray<FBuildingMeshInfo>
		constexpr auto PartialOccludedBuildingMesh = 0x80; // FBuildingMeshInfo
		constexpr auto bDoOcclusionTest = 0xcc; // uint32_t : 1
		constexpr auto bBlockAll = 0xcc; // uint32_t : 1
	}

	namespace n_UCombatTutorialGameMovie {
		constexpr auto BombContainer = 0xad0; // ObjectProperty
		constexpr auto TutorialLOContainer = 0xad8; // ObjectProperty
		constexpr auto BombsiteCount = 0xae0; // int32_t
		constexpr auto BombCount = 0xae4; // int32_t
		constexpr auto LOCount = 0xae8; // int32_t
		constexpr auto bUpdateEquippedBomb = 0xaec; // uint32_t : 1
		constexpr auto bUpdateEquippedBombSite = 0xaec; // uint32_t : 1
		constexpr auto bIsDisplayedBombLimitTime = 0xaec; // uint32_t : 1
		constexpr auto bStartSpectDefuseUI = 0xaec; // uint32_t : 1
		constexpr auto LastBombDefuseTimeCount = 0xaf0; // int32_t
	}

	namespace n_UCombatDataTableRefARaceLevelUp {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto Rank = 0x70; // int32_t
		constexpr auto LevelPoint = 0x74; // int32_t
		constexpr auto GroupCodeName = 0x78; // FString
		constexpr auto UIItemCodeName = 0x88; // FString
		constexpr auto ArrivalEquipType = 0x98; // int32_t
		constexpr auto FirstArrivalCodeName = 0x9c; // FString
		constexpr auto ScriptFilePri = 0xac; // FString
	}

	namespace n_USeqEvent_SequenceActivated {
		constexpr auto InputLabel = 0x128; // FString
	}

	namespace n_UPlayerInput {
		constexpr auto bUsingGamepad = 0x1a0; // uint32_t : 1
		constexpr auto bInvertMouse = 0x1a0; // uint32_t : 1
		constexpr auto bInvertTurn = 0x1a0; // uint32_t : 1
		constexpr auto bWasForward = 0x1a0; // uint32_t : 1
		constexpr auto bWasBack = 0x1a0; // uint32_t : 1
		constexpr auto bWasLeft = 0x1a0; // uint32_t : 1
		constexpr auto bWasRight = 0x1a0; // uint32_t : 1
		constexpr auto bEdgeForward = 0x1a0; // uint32_t : 1
		constexpr auto bEdgeBack = 0x1a0; // uint32_t : 1
		constexpr auto bEdgeLeft = 0x1a0; // uint32_t : 1
		constexpr auto bEdgeRight = 0x1a0; // uint32_t : 1
		constexpr auto bEnableMouseSmoothing = 0x1a0; // uint32_t : 1
		constexpr auto bEnableFOVScaling = 0x1a0; // uint32_t : 1
		constexpr auto bLockTurnUntilRelease = 0x1a0; // uint32_t : 1
		constexpr auto LastAxisKeyName = 0x1a4; // FName
		constexpr auto DoubleClickTimer = 0x1ac; // float
		constexpr auto DoubleClickTime = 0x1b0; // float
		constexpr auto DoubleClickDelay = 0x1b4; // float
		constexpr auto MouseSensitivity = 0x1b8; // float
		constexpr auto aBaseX = 0x1bc; // float
		constexpr auto aBaseY = 0x1c0; // float
		constexpr auto aBaseZ = 0x1c4; // float
		constexpr auto aMouseX = 0x1c8; // float
		constexpr auto aMouseY = 0x1cc; // float
		constexpr auto aForward = 0x1d0; // float
		constexpr auto aTurn = 0x1d4; // float
		constexpr auto aStrafe = 0x1d8; // float
		constexpr auto aUp = 0x1dc; // float
		constexpr auto aLookUp = 0x1e0; // float
		constexpr auto aRightAnalogTrigger = 0x1e4; // float
		constexpr auto aLeftAnalogTrigger = 0x1e8; // float
		constexpr auto aPS3AccelX = 0x1ec; // float
		constexpr auto aPS3AccelY = 0x1f0; // float
		constexpr auto aPS3AccelZ = 0x1f4; // float
		constexpr auto aPS3Gyro = 0x1f8; // float
		constexpr auto aWiiUPointerX = 0x1fc; // float
		constexpr auto aWiiUPointerY = 0x200; // float
		constexpr auto aTilt = 0x204; // FVector
		constexpr auto aRotationRate = 0x210; // FVector
		constexpr auto aGravity = 0x21c; // FVector
		constexpr auto aAcceleration = 0x228; // FVector
		constexpr auto aTouch = 0x234; // FVector [0x5]
		constexpr auto aBackTouch = 0x270; // FVector [0x5]
		constexpr auto RawJoyUp = 0x2ac; // float
		constexpr auto RawJoyRight = 0x2b0; // float
		constexpr auto RawJoyLookRight = 0x2b4; // float
		constexpr auto RawJoyLookUp = 0x2b8; // float
		constexpr auto MoveForwardSpeed = 0x2bc; // float
		constexpr auto MoveStrafeSpeed = 0x2c0; // float
		constexpr auto LookRightScale = 0x2c4; // float
		constexpr auto LookUpScale = 0x2c8; // float
		constexpr auto bStrafe = 0x2cc; // char
		constexpr auto bXAxis = 0x2cd; // char
		constexpr auto bYAxis = 0x2ce; // char
		constexpr auto ZeroTime = 0x2d0; // float [0x2]
		constexpr auto SmoothedMouse = 0x2d8; // float [0x2]
		constexpr auto MouseSamples = 0x2e0; // int32_t
		constexpr auto MouseSamplingTotal = 0x2e4; // float
		constexpr auto AutoUnlockTurnTime = 0x2e8; // float
	}

	namespace n_ACombatTDMGameBase {
		constexpr auto SuddenDeathTime = 0x788; // WordProperty
	}

	namespace n_UMaterialExpressionTextureSampleParameterFlipbook {
		constexpr auto CoordinateIndex = 0x140; // int32_t
	}

	namespace n_AAISwitchablePylon {
		constexpr auto bOpen = 0x454; // uint32_t : 1
	}

	namespace n_UNavMeshGoalFilter_MinPathDistance {
		constexpr auto MinDistancePathShouldBe = 0x6c; // int32_t
	}

	namespace n_USwatTurnReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_ALiftCenter {
		constexpr auto MyLift = 0x33c; // ObjectProperty
		constexpr auto MaxDist2D = 0x344; // float
		constexpr auto LiftOffset = 0x348; // FVector
		constexpr auto bJumpLift = 0x354; // uint32_t : 1
		constexpr auto CollisionHeight = 0x358; // float
		constexpr auto LiftTrigger = 0x35c; // ObjectProperty
	}

	namespace n_UParticleModuleColorByParameter {
		constexpr auto ColorParam = 0x68; // FName
		constexpr auto DefaultColor = 0x70; // FColor
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x60; // FName
		constexpr auto PhysMaterial = 0x68; // ObjectProperty
		constexpr auto Hardness = 0x70; // float
		constexpr auto bNoWeightBlend = 0x74; // uint32_t : 1
	}

	namespace n_UOnlineTitleFileDownloadBase {
		constexpr auto ReadTitleFileCompleteDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto RequestTitleFileListCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto BaseUrl = 0xa0; // FString
		constexpr auto RequestFileListURL = 0xb0; // FString
		constexpr auto RequestFileURL = 0xc0; // FString
		constexpr auto TimeOut = 0xd0; // float
		constexpr auto FilesToUrls = 0xd4; // TArray<FFileNameToURLMapping>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnRequestTitleFileListComplete__Delegate = 0xf4; // DelegateProperty
	}

	namespace n_UGripBTObject {
		constexpr auto dummyVarJustSoTheClassDoesNotStartWithAnEnum = 0x60; // int32_t
		constexpr auto childrenCollapsed = 0x64; // uint32_t : 1
	}

	namespace n_USeqAct_CameraLookAt {
		constexpr auto bAffectCamera = 0x108; // uint32_t : 1
		constexpr auto bAlwaysFocus = 0x108; // uint32_t : 1
		constexpr auto bAdjustCamera = 0x108; // uint32_t : 1
		constexpr auto bTurnInPlace = 0x108; // uint32_t : 1
		constexpr auto bIgnoreTrace = 0x108; // uint32_t : 1
		constexpr auto bAffectHead = 0x108; // uint32_t : 1
		constexpr auto bRotatePlayerWithCamera = 0x108; // uint32_t : 1
		constexpr auto bToggleGodMode = 0x108; // uint32_t : 1
		constexpr auto bLeaveCameraRotation = 0x108; // uint32_t : 1
		constexpr auto bDisableInput = 0x108; // uint32_t : 1
		constexpr auto bUsedTimer = 0x108; // uint32_t : 1
		constexpr auto bCheckLineOfSight = 0x108; // uint32_t : 1
		constexpr auto InterpSpeedRange = 0x10c; // FVector2D
		constexpr auto InFocusFOV = 0x114; // FVector2D
		constexpr auto FocusBoneName = 0x11c; // FName
		constexpr auto TextDisplay = 0x124; // FString
		constexpr auto TotalTime = 0x134; // float
		constexpr auto CameraFOV = 0x138; // float
		constexpr auto RemainingTime = 0x13c; // float
	}

	namespace n_UParticleModuleSizeScaleOverDensity {
		constexpr auto SizeScaleOverDensity = 0x68; // FRawDistributionVector
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto ControlEdgeName = 0x68; // FName
		constexpr auto SheetsPerTrail = 0x70; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x74; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x74; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x74; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x74; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x74; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x74; // uint32_t : 1
		constexpr auto bRenderTangents = 0x74; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x74; // uint32_t : 1
		constexpr auto TilingDistance = 0x78; // float
		constexpr auto DistanceTessellationStepSize = 0x7c; // float
		constexpr auto TangentTessellationScalar = 0x80; // float
	}

	namespace n_UCombatAnimMetaData_SkelControl {
		constexpr auto AccumulatedWeight = 0x7c; // float
	}

	namespace n_UAnimNodePlayCustomAnim {
		constexpr auto bIsPlayingCustomAnim = 0x110; // uint32_t : 1
		constexpr auto CustomPendingBlendOutTime = 0x114; // float
	}

	namespace n_ACombatWeapon_Skill_Weapon {
		constexpr auto FireActionVoiceName = 0x1ec8; // FName
		constexpr auto TargetActor = 0x1ed0; // ObjectProperty
		constexpr auto TargetLoc = 0x1ed8; // FVector
		constexpr auto bForceFireAmmunition = 0x1ee4; // uint32_t : 1
	}

	namespace n_ACombatPawn_PracticeGame {
		constexpr auto ProjectileCameraInfo = 0x1164; // FSProjectileCamera
		constexpr auto ProjStartTime = 0x117c; // float
		constexpr auto ProjCameraLocation = 0x1180; // FVector
		constexpr auto ProjCameraRotation = 0x118c; // FRotator
		constexpr auto FirstFollowSpeed = 0x1198; // float
		constexpr auto RecoverStartTime = 0x119c; // float
		constexpr auto ProjViewTarget = 0x11a0; // ObjectProperty
		constexpr auto bIsPlayingProjCamera = 0x11a8; // uint32_t : 1
		constexpr auto SavedCameraLocation = 0x11ac; // FVector
		constexpr auto SavedCameraRotation = 0x11b8; // FRotator
	}

	namespace n_APortalMarker {
		constexpr auto MyPortal = 0x33c; // ObjectProperty
	}

	namespace n_USeqAct_GetLocationAndRotation {
		constexpr auto Location = 0x108; // FVector
		constexpr auto RotationVector = 0x114; // FVector
		constexpr auto Rotation = 0x120; // FVector
		constexpr auto SocketOrBoneName = 0x12c; // FName
	}

	namespace n_UCombatChampionshipManager {
		constexpr auto ChampionshipTeamList = 0x60; // TArray<FChampionshipTeamData>
	}

	namespace n_UCombatWeaponRISBase_modifiedIronSight {
		constexpr auto IronSight = 0xd08; // uint32_t : 1
	}

	namespace n_UCombatHUD_GameModeHelp {
		constexpr auto bShow = 0xc0; // uint32_t : 1
	}

	namespace n_UTexture2DDynamic {
		constexpr auto SizeX = 0x11c; // int32_t
		constexpr auto SizeY = 0x120; // int32_t
		constexpr auto Format = 0x124; // EPixelFormat
		constexpr auto NumMips = 0x128; // int32_t
		constexpr auto bIsResolveTarget = 0x12c; // uint32_t : 1
		constexpr auto PixelData = 0x130; // TArray<char>
	}

	namespace n_UCombatFrontEnd_UserInfo {
		constexpr auto MainTabIDList = 0xd0; // TArray<int32_t>
		constexpr auto SubTabList = 0xe0; // FSubTabInfo [0x9]
		constexpr auto _CompetitionStringIDInfo = 0x1b8; // FCompetitionStringIDInfo [0x3]
		constexpr auto _RecordInfo = 0x1f4; // FRecordInfo [0xd]
		constexpr auto UserInfoTran = 0x3c8; // ObjectProperty
		constexpr auto MissionList = 0x3d0; // ObjectProperty
	}

	namespace n_USeqVar_ObjectVolume {
		constexpr auto LastUpdateTime = 0xc4; // float
		constexpr auto ContainedObjects = 0xc8; // TArray<ObjectProperty>
		constexpr auto ExcludeClassList = 0xd8; // TArray<UObject*>
		constexpr auto bCollidingOnly = 0xe8; // uint32_t : 1
	}

	namespace n_UPBRuleNodeEdgeAngle {
		constexpr auto Edge = 0x70; // EProcBuildingEdge
		constexpr auto Angles = 0x74; // TArray<FRBEdgeAngleInfo>
	}

	namespace n_AUIDisplayPoint {
		constexpr auto NameText = 0x244; // FString
	}

	namespace n_ACombatProj_Decoy {
		constexpr auto RadarExposeRange = 0x3f8; // float
		constexpr auto EnemyAttachPSC = 0x3fc; // ComponentProperty
		constexpr auto FriendlyAttachPSC = 0x404; // ComponentProperty
	}

	namespace n_UCombatDataTableRefClanTierEmblem {
		constexpr auto ClanTier = 0x6c; // int32_t
		constexpr auto outlineImg = 0x70; // int32_t
	}

	namespace n_USeqAct_ControlMovieTexture {
		constexpr auto MovieTexture = 0x108; // ObjectProperty
	}

	namespace n_UCCSBTIdle {
		constexpr auto Alertness = 0xbc; // ECCSAlertnessState
	}

	namespace n_UGameplayEventsWriterBase {
		constexpr auto Game = 0x1c0; // ObjectProperty
	}

	namespace n_UParticleModuleMaterialByParameter {
		constexpr auto MaterialParameters = 0x68; // TArray<FName>
		constexpr auto DefaultMaterials = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UUIDataProvider_OnlinePlayerStorageArray {
		constexpr auto PlayerStorage = 0x70; // ObjectProperty
		constexpr auto PlayerStorageId = 0x78; // int32_t
		constexpr auto ColumnHeaderText = 0x7c; // FString
		constexpr auto Values = 0x8c; // TArray<FName>
	}

	namespace n_USeqAct_MultiLevelStreaming {
		constexpr auto Levels = 0x124; // TArray<FLevelStreamingNameCombo>
		constexpr auto bUnloadAllOtherLevels = 0x134; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x134; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDepthBiasBlend {
		constexpr auto bNormalize = 0x120; // uint32_t : 1
		constexpr auto BiasScale = 0x124; // float
		constexpr auto Bias = 0x128; // FExpressionInput
	}

	namespace n_UGFxMoviePlayer {
		constexpr auto pMovie = 0x60; // FPointer
		constexpr auto pCaptureKeys = 0x68; // FPointer
		constexpr auto pFocusIgnoreKeys = 0x70; // FPointer
		constexpr auto ASUClasses = 0x78; // TMap<None, None>
		constexpr auto ASUObjects = 0xc0; // TMap<None, None>
		constexpr auto NextASUObject = 0x108; // int32_t
		constexpr auto MovieInfo = 0x10c; // ObjectProperty
		constexpr auto bMovieIsOpen = 0x114; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x114; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x114; // uint32_t : 1
		constexpr auto bWidgetsInitializedThisFrame = 0x114; // uint32_t : 1
		constexpr auto bLogUnhandedWidgetInitializations = 0x114; // uint32_t : 1
		constexpr auto bAllowInput = 0x114; // uint32_t : 1
		constexpr auto bAllowFocus = 0x114; // uint32_t : 1
		constexpr auto bAutoPlay = 0x114; // uint32_t : 1
		constexpr auto bPauseGameWhileActive = 0x114; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x114; // uint32_t : 1
		constexpr auto bCloseOnLevelChange = 0x114; // uint32_t : 1
		constexpr auto bOnlyOwnerFocusable = 0x114; // uint32_t : 1
		constexpr auto bForceFullViewport = 0x114; // uint32_t : 1
		constexpr auto bDiscardNonOwnerInput = 0x114; // uint32_t : 1
		constexpr auto bCaptureInput = 0x114; // uint32_t : 1
		constexpr auto bCaptureMouseInput = 0x114; // uint32_t : 1
		constexpr auto bIgnoreMouseInput = 0x114; // uint32_t : 1
		constexpr auto bIsSplitscreenLayoutModified = 0x114; // uint32_t : 1
		constexpr auto bShowHardwareMouseCursor = 0x114; // uint32_t : 1
		constexpr auto bBlurLesserMovies = 0x114; // uint32_t : 1
		constexpr auto bHideLesserMovies = 0x114; // uint32_t : 1
		constexpr auto bIsPriorityBlurred = 0x114; // uint32_t : 1
		constexpr auto bIsPriorityHidden = 0x114; // uint32_t : 1
		constexpr auto bIgnoreVisibilityEffect = 0x114; // uint32_t : 1
		constexpr auto bIgnoreBlurEffect = 0x114; // uint32_t : 1
		constexpr auto RenderTexture = 0x118; // ObjectProperty
		constexpr auto LocalPlayerOwnerIndex = 0x120; // int32_t
		constexpr auto ExternalInterface = 0x124; // ObjectProperty
		constexpr auto CaptureKeys = 0x12c; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x13c; // TArray<FName>
		constexpr auto ExternalTextures = 0x14c; // TArray<FExternalTexture>
		constexpr auto SoundThemes = 0x15c; // TArray<FSoundThemeBinding>
		constexpr auto TimingMode = 0x16c; // GFxTimingMode
		constexpr auto RenderTextureMode = 0x16d; // GFxRenderTextureMode
		constexpr auto Priority = 0x16e; // char
		constexpr auto WidgetBindings = 0x170; // TArray<FGFxWidgetBinding>
		constexpr auto WidgetPathBindings = 0x180; // TMap<None, None>
		constexpr auto SplitscreenLayoutObject = 0x1c8; // ObjectProperty
		constexpr auto SplitscreenLayoutYAdjust = 0x1d0; // int32_t
		constexpr auto __OnPostAdvance__Delegate = 0x1d4; // DelegateProperty
	}

	namespace n_UCombatDataTableRefItem {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto ItemStringID = 0x70; // int32_t
		constexpr auto ChaNameID = 0x74; // int32_t
		constexpr auto ExclusiveMode = 0x78; // int32_t
		constexpr auto RequireLevel = 0x7c; // int32_t
		constexpr auto DetailOverall = 0x80; // int32_t
		constexpr auto ItemGrade = 0x84; // int32_t
		constexpr auto Decomposition = 0x88; // int32_t
		constexpr auto ImageID_HUDWeaapon = 0x8c; // int32_t
		constexpr auto ImageID_Lobby = 0x90; // int32_t
		constexpr auto ImageID_Preset = 0x94; // int32_t
		constexpr auto AbilityDescriptionID = 0x98; // int32_t
		constexpr auto DescriptionID = 0x9c; // int32_t
		constexpr auto ExtendPeriod = 0xa0; // int32_t
		constexpr auto Service = 0xa4; // char
		constexpr auto Type1 = 0xa5; // char
		constexpr auto Type2 = 0xa6; // char
		constexpr auto Type3 = 0xa7; // char
		constexpr auto Type4 = 0xa8; // char
		constexpr auto RequireTarget = 0xa9; // char
		constexpr auto StackCount = 0xaa; // char
		constexpr auto CodeName = 0xac; // FString
		constexpr auto OriginalCodeName = 0xbc; // FString
		constexpr auto PRIScriptFile = 0xcc; // FString
		constexpr auto SUBScriptFile = 0xdc; // FString
		constexpr auto PRIVoiceFile = 0xec; // FString
		constexpr auto SUBVoiceFile = 0xfc; // FString
		constexpr auto StackViewCodeName = 0x10c; // FString
		constexpr auto OptionCode = 0x11c; // FString
		constexpr auto PRIAttachmentWeapon = 0x12c; // FName
		constexpr auto SUBAttachmentWeapon = 0x134; // FName
		constexpr auto bSteamItem = 0x13c; // uint32_t : 1
		constexpr auto ScriptPrePix = 0x140; // FString
	}

	namespace n_AHeightFog {
		constexpr auto Component = 0x244; // ComponentProperty
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
	}

	namespace n_UCombatMapInfo {
		constexpr auto VisibilityModifier = 0x60; // float
	}

	namespace n_UParticleModulePhysicsVolumes {
		constexpr auto GlobalInfluence = 0x68; // FRawDistributionFloat
		constexpr auto LevelInfluenceType = 0x8c; // EParticleLevelInfluenceType
	}

	namespace n_ACombatWeapon_Shotgun_Base {
		constexpr auto TransientShotgunDamage = 0x1ec8; // int32_t
	}

	namespace n_ACombatBombardActor {
		constexpr auto BombardDelay = 0x244; // float
		constexpr auto BombardNum = 0x248; // int32_t
		constexpr auto PerBombNum = 0x24c; // int32_t
		constexpr auto PClass = 0x250; // ACombatProjectile*
		constexpr auto CurBombardNum = 0x258; // int32_t
		constexpr auto BombardX = 0x25c; // float
		constexpr auto BombardY = 0x260; // float
		constexpr auto BombardHeight = 0x264; // float
		constexpr auto StartDelay = 0x268; // float
		constexpr auto PreDelay = 0x26c; // float
		constexpr auto AddedHeight = 0x270; // float
		constexpr auto Mesh = 0x274; // ComponentProperty
		constexpr auto BombardSound = 0x27c; // ObjectProperty
		constexpr auto WarnigSound = 0x284; // ObjectProperty
		constexpr auto AirWhipSound = 0x28c; // ObjectProperty
		constexpr auto LocalizedMSGIndex = 0x294; // int32_t
		constexpr auto DustTemplate = 0x298; // ObjectProperty
		constexpr auto DustPSC = 0x2a0; // ComponentProperty
		constexpr auto LockOnPSC = 0x2a8; // ComponentProperty
		constexpr auto StartDustDelay = 0x2b0; // float
		constexpr auto bShowLockOnEffectOnSameTeam = 0x2b4; // uint32_t : 1
		constexpr auto AlreadyExcute = 0x2b4; // uint32_t : 1
		constexpr auto CallerTeam = 0x2b8; // char
		constexpr auto WeaponIndex = 0x2bc; // int32_t
		constexpr auto EventName = 0x2c0; // FName
	}

	namespace n_UOnlineSubsystemCombat {
		constexpr auto IPAddress = 0x1bc; // FString
		constexpr auto PortNumber = 0x1cc; // int32_t
		constexpr auto IPAddressPmang = 0x1d0; // FString
		constexpr auto PortNumberPmang = 0x1e0; // int32_t
		constexpr auto CharacterTransaction = 0x1e4; // ObjectProperty
		constexpr auto ItemTransaction = 0x1ec; // ObjectProperty
		constexpr auto StatisticsTransaction = 0x1f4; // ObjectProperty
		constexpr auto ChannelTransaction = 0x1fc; // ObjectProperty
		constexpr auto LobbyTransaction = 0x204; // ObjectProperty
		constexpr auto ClanTransaction = 0x20c; // ObjectProperty
		constexpr auto CommunityTransaction = 0x214; // ObjectProperty
		constexpr auto MailTransaction = 0x21c; // ObjectProperty
		constexpr auto AwaitTransaction = 0x224; // ObjectProperty
		constexpr auto RandomBoxTransaction = 0x22c; // ObjectProperty
		constexpr auto GameOptionTransaction = 0x234; // ObjectProperty
		constexpr auto UserInfoTransaction = 0x23c; // ObjectProperty
		constexpr auto wantScene = 0x244; // eFrontEndScene
		constexpr auto LoggedInStatus = 0x245; // ELoginStatus
		constexpr auto CachedProfile = 0x248; // ObjectProperty
		constexpr auto AsyncTasks = 0x250; // TArray<FPointer>
		constexpr auto ProfileDataDirectory = 0x260; // FString
		constexpr auto ProfileDataExtension = 0x270; // FString
		constexpr auto ProfileMessageDataExtension = 0x280; // FString
		constexpr auto LoggedInPlayerName = 0x290; // FString
		constexpr auto LoggedInPlayerSteamIDStr = 0x2a0; // FString
		constexpr auto ReadProfileSettingsDelegates = 0x2b0; // TArray<DelegateProperty>
		constexpr auto WriteProfileSettingsDelegates = 0x2c0; // TArray<DelegateProperty>
		constexpr auto bShowProtocolLogToChat = 0x2d0; // uint32_t : 1
		constexpr auto bImmersionDisplayed = 0x2d0; // uint32_t : 1
		constexpr auto bNotifyDelayedPreMTSReset = 0x2d0; // uint32_t : 1
		constexpr auto bJustBecameClanMaster = 0x2d0; // uint32_t : 1
		constexpr auto bNeedBackToGame = 0x2d0; // uint32_t : 1
		constexpr auto bIsUsingSpeechRecognition = 0x2d0; // uint32_t : 1
		constexpr auto CurrentComplaintReceiptInfo = 0x2d4; // FComplaintReceiptInfo
		constexpr auto GameSerialNumber = 0x2f8; // FString
		constexpr auto ImmersionCylcleTime = 0x308; // float
		constexpr auto ImmersionElapsedTime = 0x30c; // float
		constexpr auto ImmersionLifeTime = 0x310; // float
		constexpr auto ImmersionHourCount = 0x314; // int32_t
		constexpr auto ClanNotice = 0x318; // FString
		constexpr auto ClanIntroduce = 0x328; // FString
		constexpr auto WebServerIPAddress = 0x338; // FString
		constexpr auto MACAddress = 0x348; // FString
		constexpr auto WarnetKey = 0x358; // FString
		constexpr auto MaxLocalTalkers = 0x368; // int32_t
		constexpr auto MaxRemoteTalkers = 0x36c; // int32_t
		constexpr auto MuteList = 0x370; // TArray<FUniqueNetId>
		constexpr auto VoiceEngine = 0x380; // FPointer
		constexpr auto TalkingDelegates = 0x388; // TArray<DelegateProperty>
		constexpr auto SpeechRecognitionCompleteDelegates = 0x398; // TArray<DelegateProperty>
		constexpr auto LoggedInPlayerNum = 0x3a8; // int32_t
		constexpr auto LoggedInPlayerId = 0x3ac; // FUniqueNetId
		constexpr auto CurrentLocalTalker = 0x3b4; // FLocalTalkerSteam
		constexpr auto RemoteTalkers = 0x3bc; // TArray<FRemoteTalker>
		constexpr auto ListenerList = 0x3cc; // TArray<FUniqueNetId>
		constexpr auto BannerImageDownloader = 0x3dc; // ObjectProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x3e4; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x3f4; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x404; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x414; // DelegateProperty
	}

	namespace n_USeqAct_ModifyCover {
		constexpr auto Slots = 0x108; // TArray<int32_t>
		constexpr auto ManualCoverType = 0x118; // ECoverType
		constexpr auto bManualAdjustPlayersOnly = 0x11c; // uint32_t : 1
	}

	namespace n_USeqAct_MobileAddInputZones {
		constexpr auto ZoneName = 0x108; // FName
		constexpr auto NewZone = 0x110; // ObjectProperty
	}

	namespace n_USeqAct_CameraShake {
		constexpr auto Shake = 0x108; // ObjectProperty
		constexpr auto ShakeScale = 0x110; // float
		constexpr auto bDoControllerVibration = 0x114; // uint32_t : 1
		constexpr auto bRadialShake = 0x114; // uint32_t : 1
		constexpr auto bOrientTowardRadialEpicenter = 0x114; // uint32_t : 1
		constexpr auto RadialShake_InnerRadius = 0x118; // float
		constexpr auto RadialShake_OuterRadius = 0x11c; // float
		constexpr auto RadialShake_Falloff = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto LocationActor = 0x128; // ObjectProperty
	}

	namespace n_USceneCaptureReflectComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
	}

	namespace n_UCombatSkillManager {
		constexpr auto AcceptSkillList = 0x60; // TArray<FString>
		constexpr auto CombatActiveSkillList = 0x70; // TArray<ObjectProperty>
		constexpr auto CombatPassiveSkillList = 0x80; // TArray<ObjectProperty>
		constexpr auto ActiveSkillSaveData = 0x90; // TArray<FSkillSaveInfo>
		constexpr auto OwnerPRI = 0xa0; // ObjectProperty
		constexpr auto LastSkillGroupNum = 0xa8; // char
		constexpr auto LastCheckTime = 0xac; // int32_t [0x4]
		constexpr auto SavedActiveSkillList = 0xbc; // TArray<FSavedSkillInfo>
		constexpr auto SavedPassiveSkillList = 0xcc; // TArray<FSavedSkillInfo>
		constexpr auto SkipCooltime = 0xdc; // uint32_t : 1
		constexpr auto bInfiniteSkill = 0xdc; // uint32_t : 1
		constexpr auto SkillSoundGroup = 0xe0; // UCombatSkillSoundGroup*
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevels = 0x280; // TArray<ObjectProperty>
		constexpr auto bEditorPreVisOnly = 0x290; // uint32_t : 1
		constexpr auto bDisabled = 0x290; // uint32_t : 1
		constexpr auto bTestDistanceToVolume = 0x290; // uint32_t : 1
		constexpr auto StreamingUsage = 0x294; // EStreamingVolumeUsage
		constexpr auto Usage = 0x295; // EStreamingVolumeUsage
		constexpr auto TestVolumeDistance = 0x298; // float
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x250; // ObjectProperty
		constexpr auto Width = 0x258; // float
		constexpr auto Height = 0x25c; // float
		constexpr auto TileX = 0x260; // float
		constexpr auto TileY = 0x264; // float
		constexpr auto OffsetX = 0x268; // float
		constexpr auto OffsetY = 0x26c; // float
		constexpr auto DecalRotation = 0x270; // float
		constexpr auto FieldOfView = 0x274; // float
		constexpr auto NearPlane = 0x278; // float
		constexpr auto FarPlane = 0x27c; // float
		constexpr auto Location = 0x280; // FVector
		constexpr auto Orientation = 0x28c; // FRotator
		constexpr auto HitLocation = 0x298; // FVector
		constexpr auto HitNormal = 0x2a4; // FVector
		constexpr auto HitTangent = 0x2b0; // FVector
		constexpr auto HitBinormal = 0x2bc; // FVector
		constexpr auto bNoClip = 0x2c8; // uint32_t : 1
		constexpr auto bStaticDecal = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnBackfaces = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnHidden = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnBSP = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnStaticMeshes = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnSkeletalMeshes = 0x2c8; // uint32_t : 1
		constexpr auto bProjectOnTerrain = 0x2c8; // uint32_t : 1
		constexpr auto bFlipBackfaceDirection = 0x2c8; // uint32_t : 1
		constexpr auto bMovableDecal = 0x2c8; // uint32_t : 1
		constexpr auto bHasBeenAttached = 0x2c8; // uint32_t : 1
		constexpr auto bDecalMaterialSetAtRunTime = 0x2c8; // uint32_t : 1
		constexpr auto bUseForShadow = 0x2c8; // uint32_t : 1
		constexpr auto bForceAllowedlInGame = 0x2c8; // uint32_t : 1
		constexpr auto HitComponent = 0x2cc; // ComponentProperty
		constexpr auto HitBone = 0x2d4; // FName
		constexpr auto HitNodeIndex = 0x2dc; // int32_t
		constexpr auto HitLevelIndex = 0x2e0; // int32_t
		constexpr auto FracturedStaticMeshComponentIndex = 0x2e4; // int32_t
		constexpr auto HitNodeIndices = 0x2e8; // TArray<int32_t>
		constexpr auto DecalReceivers = 0x2f8; // TArray<FDecalReceiver>
		constexpr auto StaticReceivers = 0x308; // TArray<FPointer>
		constexpr auto ReleaseResourcesFence = 0x318; // FPointer
		constexpr auto Planes = 0x320; // TArray<FPlane>
		constexpr auto DepthBias = 0x330; // float
		constexpr auto SlopeScaleDepthBias = 0x334; // float
		constexpr auto SortOrder = 0x338; // int32_t
		constexpr auto BackfaceAngle = 0x33c; // float
		constexpr auto BlendRange = 0x340; // FVector2D
		constexpr auto StreamingDistanceMultiplier = 0x348; // float
		constexpr auto DecalTransform = 0x34c; // EDecalTransform
		constexpr auto FilterMode = 0x34d; // EFilterMode
		constexpr auto Filter = 0x350; // TArray<ObjectProperty>
		constexpr auto ReceiverImages = 0x360; // TArray<ComponentProperty>
		constexpr auto ParentRelativeLocation = 0x370; // FVector
		constexpr auto ParentRelativeOrientation = 0x37c; // FRotator
		constexpr auto ParentRelLocRotMatrix = 0x390; // FMatrix
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0xa0; // float
		constexpr auto PathBuildTime = 0xa4; // float
		constexpr auto InterpGroups = 0xa8; // TArray<ObjectProperty>
		constexpr auto CurveEdSetup = 0xb8; // ObjectProperty
		constexpr auto EdSectionStart = 0xc0; // float
		constexpr auto EdSectionEnd = 0xc4; // float
		constexpr auto bShouldBakeAndPrune = 0xc8; // uint32_t : 1
		constexpr auto BakeAndPruneStatus = 0xcc; // TArray<FAnimSetBakeAndPruneStatus>
		constexpr auto CachedDirectorGroup = 0xdc; // ObjectProperty
	}

	namespace n_UCombatAnim_TurnInPlace {
		constexpr auto bInitialized = 0x110; // uint32_t : 1
		constexpr auto bDelayBlendOutToPlayAnim = 0x110; // uint32_t : 1
		constexpr auto bPlayingTurnTransition = 0x110; // uint32_t : 1
		constexpr auto bNoTransitionForInstantTurn = 0x110; // uint32_t : 1
		constexpr auto PawnJustSeen = 0x110; // uint32_t : 1
		constexpr auto PawnNotSeen = 0x110; // uint32_t : 1
		constexpr auto bDoingInstantTurn = 0x110; // uint32_t : 1
		constexpr auto LastPawnYaw = 0x114; // int32_t
		constexpr auto PawnRotationRate = 0x118; // float
		constexpr auto YawOffset = 0x11c; // int32_t
		constexpr auto CombatPawnOwner = 0x120; // ObjectProperty
		constexpr auto CachedBaseCombatPawn = 0x128; // ObjectProperty
		constexpr auto CachedBase = 0x130; // ObjectProperty
		constexpr auto RotTransitions = 0x138; // TArray<FRotTransitionInfo>
		constexpr auto TransitionBlendInTime = 0x148; // float
		constexpr auto TransitionBlendOutTime = 0x14c; // float
		constexpr auto CurrentTransitionIndex = 0x150; // int32_t
		constexpr auto TransitionThresholdAngle = 0x154; // float
		constexpr auto PlayerNodes = 0x158; // TArray<ObjectProperty>
		constexpr auto BlendNodes = 0x168; // TArray<ObjectProperty>
		constexpr auto BlendNodesNameList = 0x178; // TArray<FName>
		constexpr auto BlendNodesBlendInTime = 0x188; // float
		constexpr auto BlendNodesBlendOutTime = 0x18c; // float
	}

	namespace n_UCCSAFFireBurst {
		constexpr auto Target = 0x64; // ObjectProperty
	}

	namespace n_ACombatRepairingArea {
		constexpr auto Mesh = 0x244; // ComponentProperty
	}

	namespace n_UCombatItemTransaction {
		constexpr auto InventoryItemInfos = 0x60; // TArray<FInventoryItemInfo>
		constexpr auto EquipItemInfos = 0x70; // TArray<FEquipItemInfo>
		constexpr auto SimulatedEquipItemInfos = 0x80; // TArray<FEquipItemInfo>
		constexpr auto SendEuipItemInfos = 0x90; // TArray<FEquipItemInfo>
		constexpr auto UnchangedEquipItemInfos = 0xa0; // TArray<FEquipItemInfo>
		constexpr auto OriShopItemInfos = 0xb0; // TArray<FShopItemInfo>
		constexpr auto ShopItemInfos = 0xc0; // TArray<FShopItemInfo>
		constexpr auto ServiceOffShopItemList = 0xd0; // TArray<int32_t>
		constexpr auto ExpiredItems = 0xe0; // TArray<FExpiredItem>
		constexpr auto SelectedRepurchaseItems = 0xf0; // TArray<FRepurchaseItem>
		constexpr auto bShopItemsSorting = 0x100; // uint32_t : 1
		constexpr auto bExpiredEquipItem = 0x100; // uint32_t : 1
		constexpr auto BaseItemList = 0x104; // TArray<FS_BaseItemInfo>
		constexpr auto DefaultPresetName = 0x114; // TArray<FString>
		constexpr auto SendActiveItemInventorySlotIndex = 0x124; // int32_t
		constexpr auto FilterList = 0x128; // TArray<FFilterInfo>
		constexpr auto BoosterItemList = 0x138; // TArray<FBoosterItem>
		constexpr auto SelectedGearSetIndex = 0x148; // char
		constexpr auto ItemBuyAfterList = 0x14c; // TArray<ObjectProperty>
		constexpr auto PendingSlotID = 0x15c; // int32_t
		constexpr auto CallingCardInfoList = 0x160; // TArray<FCallingCardInfo>
		constexpr auto RandomBoxGainResult = 0x170; // FRandomBoxGainResultInfo
		constexpr auto ReservedOpenRandomBoxShopItem = 0x184; // FRandomBoxShopItemInfo
		constexpr auto UseLockedItem = 0x190; // FUseLockedItemInfo
		constexpr auto CurSendConsumeItemInfo = 0x1c0; // FSendConsumeItemInfo
		constexpr auto BuyLimitSaleItems = 0x1c8; // TMap<None, None>
		constexpr auto BulletSaleTimeDate = 0x210; // TMap<None, None>
		constexpr auto InitActiveRefItemList = 0x258; // TArray<ObjectProperty>
		constexpr auto LimitBuyItemMap = 0x268; // TMap<None, None>
		constexpr auto SeasonPassArray = 0x2b0; // TArray<FSeasonPassData>
		constexpr auto CurrentSeasonPassSeason = 0x2c0; // int32_t
		constexpr auto TuningMap = 0x2c4; // TMap<None, None>
	}

	namespace n_ULightmassLevelSettings {
		constexpr auto NumIndirectLightingBounces = 0x60; // int32_t
		constexpr auto EnvironmentColor = 0x64; // FColor
		constexpr auto EnvironmentIntensity = 0x68; // float
		constexpr auto EmissiveBoost = 0x6c; // float
		constexpr auto DiffuseBoost = 0x70; // float
		constexpr auto SpecularBoost = 0x74; // float
		constexpr auto bUseAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto bVisualizeAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto DirectIlluminationOcclusionFraction = 0x7c; // float
		constexpr auto IndirectIlluminationOcclusionFraction = 0x80; // float
		constexpr auto OcclusionExponent = 0x84; // float
		constexpr auto FullyOccludedSamplesFraction = 0x88; // float
		constexpr auto MaxOcclusionDistance = 0x8c; // float
	}

	namespace n_AFogVolumeDensityInfo {
		constexpr auto DensityComponent = 0x244; // ComponentProperty
		constexpr auto AutomaticMeshComponent = 0x24c; // ComponentProperty
		constexpr auto bEnabled = 0x254; // uint32_t : 1
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0xb8; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xc8; // uint32_t : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xc8; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xc8; // uint32_t : 1
		constexpr auto bTreatAsDialogue = 0xc8; // uint32_t : 1
	}

	namespace n_UPBRuleNodeCorner {
		constexpr auto CornerSize = 0x70; // float
		constexpr auto Angles = 0x74; // TArray<FRBCornerAngleInfo>
		constexpr auto FlatThreshold = 0x84; // float
		constexpr auto bNoMeshForConcaveCorners = 0x88; // uint32_t : 1
		constexpr auto bUseAdjacentRulesetForRightGap = 0x88; // uint32_t : 1
		constexpr auto CornerType = 0x8c; // EPBCornerType
		constexpr auto CornerShapeOffset = 0x90; // float
		constexpr auto RoundTesselation = 0x94; // int32_t
		constexpr auto RoundCurvature = 0x98; // float
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Scale = 0x8c; // uint32_t : 1
	}

	namespace n_APortalTeleporter {
		constexpr auto SisterPortal = 0x25c; // ObjectProperty
		constexpr auto TextureResolutionX = 0x264; // int32_t
		constexpr auto TextureResolutionY = 0x268; // int32_t
		constexpr auto MyMarker = 0x26c; // ObjectProperty
		constexpr auto bMovablePortal = 0x274; // uint32_t : 1
		constexpr auto bAlwaysTeleportNonPawns = 0x274; // uint32_t : 1
		constexpr auto bCanTeleportVehicles = 0x274; // uint32_t : 1
	}

	namespace n_UCombatAIActionNodeBase {
		constexpr auto AIActionClass = 0xd4; // UCombatAIActionBase*
		constexpr auto Bot = 0xdc; // ObjectProperty
		constexpr auto AIAction = 0xe4; // ObjectProperty
		constexpr auto Blackboard = 0xec; // ObjectProperty
	}

	namespace n_UGripCondNode_WeaponPossession {
		constexpr auto WeaponGroup = 0xec; // EWeaponGroup
		constexpr auto bNegative = 0xf0; // uint32_t : 1
	}

	namespace n_UCombatAIAction_SelectTarget {
		constexpr auto ActionNode = 0x78; // ObjectProperty
	}

	namespace n_ACombatEffectKillZoneVolume {
		constexpr auto ZoneName = 0x280; // FString
	}

	namespace n_UOnlineTitleFileDownloadWeb {
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileWeb>
	}

	namespace n_UUIDataStore_OnlinePlayerData {
		constexpr auto FriendsProvider = 0x98; // ObjectProperty
		constexpr auto PlayerControllerId = 0xa0; // int32_t
		constexpr auto PlayerNick = 0xa4; // FString
		constexpr auto ProfileSettingsClassName = 0xb4; // FString
		constexpr auto ProfileSettingsClass = 0xc4; // UOnlineProfileSettings*
		constexpr auto ProfileProvider = 0xcc; // ObjectProperty
		constexpr auto ProfileProviderClassName = 0xd4; // FString
		constexpr auto ProfileProviderClass = 0xe4; // UUIDataProvider_OnlineProfileSettings*
		constexpr auto PlayerStorageClassName = 0xec; // FString
		constexpr auto PlayerStorageClass = 0xfc; // UOnlinePlayerStorage*
		constexpr auto StorageProvider = 0x104; // ObjectProperty
		constexpr auto StorageProviderClassName = 0x10c; // FString
		constexpr auto StorageProviderClass = 0x11c; // UUIDataProvider_OnlinePlayerStorage*
		constexpr auto FriendMessagesProvider = 0x124; // ObjectProperty
		constexpr auto AchievementsProvider = 0x12c; // ObjectProperty
		constexpr auto FriendsProviderClassName = 0x134; // FString
		constexpr auto FriendsProviderClass = 0x144; // UUIDataProvider_OnlineFriends*
		constexpr auto FriendMessagesProviderClassName = 0x14c; // FString
		constexpr auto FriendMessagesProviderClass = 0x15c; // UUIDataProvider_OnlineFriendMessages*
		constexpr auto AchievementsProviderClassName = 0x164; // FString
		constexpr auto AchievementsProviderClass = 0x174; // UUIDataProvider_PlayerAchievements*
		constexpr auto PartyChatProviderClassName = 0x17c; // FString
		constexpr auto PartyChatProviderClass = 0x18c; // UUIDataProvider_OnlinePartyChatList*
		constexpr auto PartyChatProvider = 0x194; // ObjectProperty
	}

	namespace n_AMutator {
		constexpr auto NextMutator = 0x244; // ObjectProperty
		constexpr auto GroupNames = 0x24c; // TArray<FString>
		constexpr auto bUserAdded = 0x25c; // uint32_t : 1
	}

	namespace n_USkelControlLimb {
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto JointTargetLocationSpace = 0xdd; // EBoneControlSpace
		constexpr auto JointOffsetSpace = 0xde; // EBoneControlSpace
		constexpr auto BoneAxis = 0xdf; // EAxis
		constexpr auto JointAxis = 0xe0; // EAxis
		constexpr auto EffectorSpaceBoneName = 0xe4; // FName
		constexpr auto JointTargetLocation = 0xec; // FVector
		constexpr auto JointTargetSpaceBoneName = 0xf8; // FName
		constexpr auto JointOffset = 0x100; // FVector
		constexpr auto JointOffsetBoneName = 0x10c; // FName
		constexpr auto bInvertBoneAxis = 0x114; // uint32_t : 1
		constexpr auto bInvertJointAxis = 0x114; // uint32_t : 1
		constexpr auto bRotateJoint = 0x114; // uint32_t : 1
		constexpr auto bMaintainEffectorRelRot = 0x114; // uint32_t : 1
		constexpr auto bTakeRotationFromEffectorSpace = 0x114; // uint32_t : 1
		constexpr auto bAllowStretching = 0x114; // uint32_t : 1
		constexpr auto StretchLimits = 0x118; // FVector2D
		constexpr auto StretchRollBoneName = 0x120; // FName
	}

	namespace n_UCombatDataTableRefRandomBox {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto CubeCodeName = 0x7c; // FString
		constexpr auto DrawType = 0x8c; // int32_t
		constexpr auto CubeGivePercent = 0x90; // int32_t
		constexpr auto JackpotGuranteeCount = 0x94; // int32_t
		constexpr auto JackpotGuranteeReset = 0x98; // int32_t
		constexpr auto JackpotBonusCount = 0x9c; // int32_t
		constexpr auto JackpotBonusReset = 0xa0; // int32_t
	}

	namespace n_ASplineActor {
		constexpr auto Connections = 0x244; // TArray<FSplineConnection>
		constexpr auto SplineActorTangent = 0x254; // FVector
		constexpr auto SplineColor = 0x260; // FColor
		constexpr auto bDisableDestination = 0x264; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x264; // uint32_t : 1
		constexpr auto LinksFrom = 0x268; // TArray<ObjectProperty>
		constexpr auto nextOrdered = 0x278; // ObjectProperty
		constexpr auto prevOrdered = 0x280; // ObjectProperty
		constexpr auto previousPath = 0x288; // ObjectProperty
		constexpr auto bestPathWeight = 0x290; // int32_t
		constexpr auto visitedWeight = 0x294; // int32_t
		constexpr auto SplineVelocityOverTime = 0x298; // FInterpCurveFloat
	}

	namespace n_UCombatDataTableRefSupportUserGroup {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto UserCount = 0x7c; // int32_t
	}

	namespace n_UCombatAnimNodeScaleRateBySpeed {
		constexpr auto FallingScale = 0x108; // float
		constexpr auto RigidBodyScale = 0x10c; // float
		constexpr auto UsePawnGroundSpeed = 0x110; // uint32_t : 1
		constexpr auto Owner = 0x114; // ObjectProperty
	}

	namespace n_UCombatHUD_ExitContainer {
		constexpr auto MapPointActor = 0xd8; // ObjectProperty
	}

	namespace n_USoundNodeWaveStreaming {
		constexpr auto QueuedAudio = 0x2a8; // TArray<char>
		constexpr auto InactiveDuration = 0x2b8; // float
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto MatInst = 0x244; // ObjectProperty
	}

	namespace n_UCombatDataTableRefQuest {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto QuestNameID = 0x70; // int32_t
		constexpr auto QuestObjectiveID = 0x74; // int32_t
		constexpr auto QuestDescriptionID = 0x78; // int32_t
		constexpr auto ShortCutCodeName = 0x7c; // FString
		constexpr auto TotalCount = 0x8c; // int32_t
		constexpr auto TotalCountType = 0x90; // int32_t
		constexpr auto TotalStep = 0x94; // int32_t
		constexpr auto MissionProgressStringID = 0x98; // int32_t
		constexpr auto QuestGroup = 0x9c; // char
		constexpr auto QuestType = 0x9d; // char
		constexpr auto OpenPublisher = 0xa0; // int32_t
		constexpr auto ShowGauge = 0xa4; // uint32_t : 1
		constexpr auto QuestTab = 0xa8; // int32_t
		constexpr auto ReturnUserType = 0xac; // int32_t
		constexpr auto StepByStepReward = 0xb0; // TArray<FStepByStepRewardType>
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto MinInput = 0x98; // FVector
		constexpr auto MaxInput = 0xa4; // FVector
		constexpr auto MinOutput = 0xb0; // FVector
		constexpr auto MaxOutput = 0xbc; // FVector
		constexpr auto ParamModes = 0xc8; // DistributionParamMode [0x3]
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x68; // ObjectProperty
		constexpr auto TinyFontName = 0x70; // FString
		constexpr auto SmallFont = 0x80; // ObjectProperty
		constexpr auto SmallFontName = 0x88; // FString
		constexpr auto MediumFont = 0x98; // ObjectProperty
		constexpr auto MediumFontName = 0xa0; // FString
		constexpr auto LargeFont = 0xb0; // ObjectProperty
		constexpr auto LargeFontName = 0xb8; // FString
		constexpr auto SubtitleFont = 0xc8; // ObjectProperty
		constexpr auto SubtitleFontName = 0xd0; // FString
		constexpr auto AdditionalFonts = 0xe0; // TArray<ObjectProperty>
		constexpr auto AdditionalFontNames = 0xf0; // TArray<FString>
		constexpr auto ConsoleClass = 0x100; // UConsole*
		constexpr auto ConsoleClassName = 0x108; // FString
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FString
		constexpr auto DataStoreClientClass = 0x130; // UDataStoreClient*
		constexpr auto DataStoreClientClassName = 0x138; // FString
		constexpr auto LocalPlayerClass = 0x148; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x150; // FString
		constexpr auto DefaultMaterial = 0x160; // ObjectProperty
		constexpr auto DefaultMaterialName = 0x168; // FString
		constexpr auto DefaultDecalMaterial = 0x178; // ObjectProperty
		constexpr auto DefaultDecalMaterialName = 0x180; // FString
		constexpr auto DefaultTexture = 0x190; // ObjectProperty
		constexpr auto DefaultTextureName = 0x198; // FString
		constexpr auto WireframeMaterial = 0x1a8; // ObjectProperty
		constexpr auto WireframeMaterialName = 0x1b0; // FString
		constexpr auto EmissiveTexturedMaterial = 0x1c0; // ObjectProperty
		constexpr auto EmissiveTexturedMaterialName = 0x1c8; // FString
		constexpr auto GeomMaterial = 0x1d8; // ObjectProperty
		constexpr auto GeomMaterialName = 0x1e0; // FString
		constexpr auto DefaultFogVolumeMaterial = 0x1f0; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterialName = 0x1f8; // FString
		constexpr auto TickMaterial = 0x208; // ObjectProperty
		constexpr auto TickMaterialName = 0x210; // FString
		constexpr auto CrossMaterial = 0x220; // ObjectProperty
		constexpr auto CrossMaterialName = 0x228; // FString
		constexpr auto LevelColorationLitMaterial = 0x238; // ObjectProperty
		constexpr auto LevelColorationLitMaterialName = 0x240; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x250; // ObjectProperty
		constexpr auto LevelColorationUnlitMaterialName = 0x258; // FString
		constexpr auto LightingTexelDensityMaterial = 0x268; // ObjectProperty
		constexpr auto LightingTexelDensityName = 0x270; // FString
		constexpr auto LevelMipmapMaterial = 0x280; // ObjectProperty
		constexpr auto LevelMipmapName = 0x288; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x298; // ObjectProperty
		constexpr auto ShadedLevelColorationLitMaterialName = 0x2a0; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x2b0; // ObjectProperty
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x2b8; // FString
		constexpr auto RemoveSurfaceMaterial = 0x2c8; // ObjectProperty
		constexpr auto RemoveSurfaceMaterialName = 0x2d0; // FString
		constexpr auto VertexColorMaterial = 0x2e0; // ObjectProperty
		constexpr auto VertexColorMaterialName = 0x2e8; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x2f8; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x300; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x310; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x318; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x328; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x330; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x340; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x348; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x358; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x360; // FString
		constexpr auto HeatmapMaterial = 0x370; // ObjectProperty
		constexpr auto HeatmapMaterialName = 0x378; // FString
		constexpr auto BoneWeightMaterial = 0x388; // ObjectProperty
		constexpr auto BoneWeightMaterialName = 0x390; // FString
		constexpr auto TangentColorMaterial = 0x3a0; // ObjectProperty
		constexpr auto TangentColorMaterialName = 0x3a8; // FString
		constexpr auto MobileEmulationMasterMaterial = 0x3b8; // ObjectProperty
		constexpr auto MobileEmulationMasterMaterialName = 0x3c0; // FString
		constexpr auto ProcBuildingSimpleMaterial = 0x3d0; // ObjectProperty
		constexpr auto ProcBuildingSimpleMaterialName = 0x3d8; // FString
		constexpr auto BuildingQuadStaticMesh = 0x3e8; // ObjectProperty
		constexpr auto BuildingQuadStaticMeshName = 0x3f0; // FString
		constexpr auto ProcBuildingLODColorTexelsPerWorldUnit = 0x400; // float
		constexpr auto ProcBuildingLODLightingTexelsPerWorldUnit = 0x404; // float
		constexpr auto MaxProcBuildingLODColorTextureSize = 0x408; // int32_t
		constexpr auto MaxProcBuildingLODLightingTextureSize = 0x40c; // int32_t
		constexpr auto UseProcBuildingLODTextureCropping = 0x410; // uint32_t : 1
		constexpr auto ForcePowerOfTwoProcBuildingLODTextures = 0x410; // uint32_t : 1
		constexpr auto bCombineSimilarMappings = 0x410; // uint32_t : 1
		constexpr auto bRenderLightMapDensityGrayscale = 0x410; // uint32_t : 1
		constexpr auto bUseSound = 0x410; // uint32_t : 1
		constexpr auto bUseBackgroundLevelStreaming = 0x410; // uint32_t : 1
		constexpr auto bSubtitlesEnabled = 0x410; // uint32_t : 1
		constexpr auto bSubtitlesForcedOff = 0x410; // uint32_t : 1
		constexpr auto bSmoothFrameRate = 0x410; // uint32_t : 1
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x410; // uint32_t : 1
		constexpr auto bShouldGenerateSimpleLightmaps = 0x410; // uint32_t : 1
		constexpr auto bForceStaticTerrain = 0x410; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x410; // uint32_t : 1
		constexpr auto bUsePostProcessEffects = 0x410; // uint32_t : 1
		constexpr auto bOnScreenKismetWarnings = 0x410; // uint32_t : 1
		constexpr auto bEnableKismetLogging = 0x410; // uint32_t : 1
		constexpr auto bAllowMatureLanguage = 0x410; // uint32_t : 1
		constexpr auto bDisablePhysXHardwareSupport = 0x410; // uint32_t : 1
		constexpr auto bPauseOnLossOfFocus = 0x410; // uint32_t : 1
		constexpr auto bCheckParticleRenderSize = 0x410; // uint32_t : 1
		constexpr auto bEnableColorClear = 0x410; // uint32_t : 1
		constexpr auto bAreConstraintsDirty = 0x410; // uint32_t : 1
		constexpr auto bHasPendingGlobalReattach = 0x410; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessages = 0x410; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x410; // uint32_t : 1
		constexpr auto bSuppressMapWarnings = 0x410; // uint32_t : 1
		constexpr auto bCookSeparateSharedMPGameContent = 0x410; // uint32_t : 1
		constexpr auto bUseRecastNavMesh = 0x410; // uint32_t : 1
		constexpr auto bDisableAILogging = 0x410; // uint32_t : 1
		constexpr auto bUseNormalMapsForSimpleLightMaps = 0x410; // uint32_t : 1
		constexpr auto bStartWithMatineeCapture = 0x410; // uint32_t : 1
		constexpr auto bCompressMatineeCapture = 0x410; // uint32_t : 1
		constexpr auto bUseLagarithCodec = 0x414; // uint32_t : 1
		constexpr auto bLockReadOnlyLevels = 0x414; // uint32_t : 1
		constexpr auto bUseRelevantDelay = 0x414; // uint32_t : 1
		constexpr auto bShaderDebugDump = 0x414; // uint32_t : 1
		constexpr auto MaxRMSDForCombiningMappings = 0x418; // float
		constexpr auto ImageReflectionTextureSize = 0x41c; // int32_t
		constexpr auto LightingOnlyBrightness = 0x420; // FLinearColor
		constexpr auto LightComplexityColors = 0x430; // TArray<FColor>
		constexpr auto ShaderComplexityColors = 0x440; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x450; // float
		constexpr auto MinTextureDensity = 0x454; // float
		constexpr auto IdealTextureDensity = 0x458; // float
		constexpr auto MaxTextureDensity = 0x45c; // float
		constexpr auto MinLightMapDensity = 0x460; // float
		constexpr auto IdealLightMapDensity = 0x464; // float
		constexpr auto MaxLightMapDensity = 0x468; // float
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x46c; // float
		constexpr auto RenderLightMapDensityColorScale = 0x470; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x474; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x484; // FLinearColor
		constexpr auto StatColorMappings = 0x494; // TArray<FStatColorMapping>
		constexpr auto EditorBrushMaterial = 0x4a4; // ObjectProperty
		constexpr auto EditorBrushMaterialName = 0x4ac; // FString
		constexpr auto DefaultPhysMaterial = 0x4bc; // ObjectProperty
		constexpr auto DefaultPhysMaterialName = 0x4c4; // FString
		constexpr auto LandscapeHolePhysMaterial = 0x4d4; // ObjectProperty
		constexpr auto LandscapeHolePhysMaterialName = 0x4dc; // FString
		constexpr auto ApexDamageParams = 0x4ec; // ObjectProperty
		constexpr auto ApexDamageParamsName = 0x4f4; // FString
		constexpr auto TerrainErrorMaterial = 0x504; // ObjectProperty
		constexpr auto TerrainErrorMaterialName = 0x50c; // FString
		constexpr auto TerrainMaterialMaxTextureCount = 0x51c; // int32_t
		constexpr auto TerrainTessellationCheckCount = 0x520; // int32_t
		constexpr auto TerrainTessellationCheckDistance = 0x524; // float
		constexpr auto OnlineSubsystemClass = 0x528; // UOnlineSubsystem*
		constexpr auto DefaultOnlineSubsystemName = 0x530; // FString
		constexpr auto DefaultPostProcess = 0x540; // ObjectProperty
		constexpr auto DefaultPostProcessName = 0x548; // FString
		constexpr auto ThumbnailSkeletalMeshPostProcess = 0x558; // ObjectProperty
		constexpr auto ThumbnailSkeletalMeshPostProcessName = 0x560; // FString
		constexpr auto ThumbnailParticleSystemPostProcess = 0x570; // ObjectProperty
		constexpr auto ThumbnailParticleSystemPostProcessName = 0x578; // FString
		constexpr auto ThumbnailMaterialPostProcess = 0x588; // ObjectProperty
		constexpr auto ThumbnailMaterialPostProcessName = 0x590; // FString
		constexpr auto DefaultUIScenePostProcess = 0x5a0; // ObjectProperty
		constexpr auto DefaultUIScenePostProcessName = 0x5a8; // FString
		constexpr auto DefaultUICaretMaterial = 0x5b8; // ObjectProperty
		constexpr auto DefaultUICaretMaterialName = 0x5c0; // FString
		constexpr auto SceneCaptureReflectActorMaterial = 0x5d0; // ObjectProperty
		constexpr auto SceneCaptureReflectActorMaterialName = 0x5d8; // FString
		constexpr auto SceneCaptureCubeActorMaterial = 0x5e8; // ObjectProperty
		constexpr auto SceneCaptureCubeActorMaterialName = 0x5f0; // FString
		constexpr auto ScreenDoorNoiseTexture = 0x600; // ObjectProperty
		constexpr auto ScreenDoorNoiseTextureName = 0x608; // FString
		constexpr auto ImageGrainNoiseTexture = 0x618; // ObjectProperty
		constexpr auto ImageGrainNoiseTextureName = 0x620; // FString
		constexpr auto RandomAngleTexture = 0x630; // ObjectProperty
		constexpr auto RandomAngleTextureName = 0x638; // FString
		constexpr auto RandomNormalTexture = 0x648; // ObjectProperty
		constexpr auto RandomNormalTextureName = 0x650; // FString
		constexpr auto RandomMirrorDiscTexture = 0x660; // ObjectProperty
		constexpr auto RandomMirrorDiscTextureName = 0x668; // FString
		constexpr auto WeightMapPlaceholderTexture = 0x678; // ObjectProperty
		constexpr auto WeightMapPlaceholderTextureName = 0x680; // FString
		constexpr auto LightMapDensityTexture = 0x690; // ObjectProperty
		constexpr auto LightMapDensityTextureName = 0x698; // FString
		constexpr auto TextureMipmapTexture = 0x6a8; // ObjectProperty
		constexpr auto TextureMipmapTextureName = 0x6b0; // FString
		constexpr auto LightMapDensityNormal = 0x6c0; // ObjectProperty
		constexpr auto LightMapDensityNormalName = 0x6c8; // FString
		constexpr auto SMAASearchTexture = 0x6d8; // ObjectProperty
		constexpr auto SMAASearchTextureName = 0x6e0; // FString
		constexpr auto SMAAAreaTexture = 0x6f0; // ObjectProperty
		constexpr auto SMAAAreaTextureName = 0x6f8; // FString
		constexpr auto DefaultSound = 0x708; // ObjectProperty
		constexpr auto DefaultSoundName = 0x710; // FString
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x720; // float
		constexpr auto GarbageLimitMemorySize = 0x724; // int32_t
		constexpr auto GarbageLimitMemorySize_x64 = 0x728; // FString
		constexpr auto LoadObjAsyncDelayTimeForIntruder = 0x738; // float
		constexpr auto Client = 0x73c; // ObjectProperty
		constexpr auto GamePlayers = 0x744; // TArray<ObjectProperty>
		constexpr auto GameViewport = 0x754; // ObjectProperty
		constexpr auto DeferredCommands = 0x75c; // TArray<FString>
		constexpr auto TickCycles = 0x76c; // int32_t
		constexpr auto GameCycles = 0x770; // int32_t
		constexpr auto ClientCycles = 0x774; // int32_t
		constexpr auto MaxSmoothedFrameRate = 0x778; // float
		constexpr auto MinSmoothedFrameRate = 0x77c; // float
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x780; // int32_t
		constexpr auto RemoteControlExec = 0x784; // FPointer
		constexpr auto MobileMaterialEmulator = 0x78c; // FPointer
		constexpr auto C_WorldBox = 0x794; // FColor
		constexpr auto C_BrushWire = 0x798; // FColor
		constexpr auto C_AddWire = 0x79c; // FColor
		constexpr auto C_SubtractWire = 0x7a0; // FColor
		constexpr auto C_SemiSolidWire = 0x7a4; // FColor
		constexpr auto C_NonSolidWire = 0x7a8; // FColor
		constexpr auto C_WireBackground = 0x7ac; // FColor
		constexpr auto C_ScaleBoxHi = 0x7b0; // FColor
		constexpr auto C_VolumeCollision = 0x7b4; // FColor
		constexpr auto C_BSPCollision = 0x7b8; // FColor
		constexpr auto C_OrthoBackground = 0x7bc; // FColor
		constexpr auto C_Volume = 0x7c0; // FColor
		constexpr auto C_BrushShape = 0x7c4; // FColor
		constexpr auto StreamingDistanceFactor = 0x7c8; // float
		constexpr auto ScoutClassName = 0x7cc; // FString
		constexpr auto TransitionType = 0x7dc; // ETransitionType
		constexpr auto LUTState = 0x7dd; // LUT_STATE
		constexpr auto TransitionDescription = 0x7e0; // FString
		constexpr auto TransitionGameType = 0x7f0; // FString
		constexpr auto MeshLODRange = 0x800; // float
		constexpr auto CameraRotationThreshold = 0x804; // float
		constexpr auto CameraTranslationThreshold = 0x808; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x80c; // float
		constexpr auto PercentUnoccludedRequeries = 0x810; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x814; // float
		constexpr auto MaxFluidNumVerts = 0x818; // int32_t
		constexpr auto FluidSimulationTimeLimit = 0x81c; // float
		constexpr auto MaxParticleResize = 0x820; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x824; // int32_t
		constexpr auto MaxParticleVertexMemory = 0x828; // int32_t
		constexpr auto MaxParticleSpriteCount = 0x82c; // int32_t
		constexpr auto MaxParticleSubUVCount = 0x830; // int32_t
		constexpr auto BeginUPTryCount = 0x834; // int32_t
		constexpr auto PendingDroppedNotes = 0x838; // TArray<FDropNoteInfo>
		constexpr auto DynamicCoverMeshComponentName = 0x848; // FString
		constexpr auto NetClientTicksPerSecond = 0x858; // float
		constexpr auto MaxTrackedOcclusionIncrement = 0x85c; // float
		constexpr auto TrackedOcclusionStepSize = 0x860; // float
		constexpr auto DefaultSelectedMaterialColor = 0x864; // FLinearColor
		constexpr auto DefaultHoveredMaterialColor = 0x874; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x884; // FLinearColor
		constexpr auto UnselectedMaterialColor = 0x894; // FLinearColor
		constexpr auto IgnoreSimulatedFuncWarnings = 0x8a4; // TArray<FName>
		constexpr auto ScreenSaverInhibitorSemaphore = 0x8b4; // int32_t
		constexpr auto ScreenSaverInhibitor = 0x8b8; // FPointer
		constexpr auto GlobalTranslationContext = 0x8c0; // ObjectProperty
		constexpr auto LoadingMovieStartTime = 0x8c8; // FDouble
		constexpr auto MatineeCaptureName = 0x8d0; // FString
		constexpr auto MatineePackageCaptureName = 0x8e0; // FString
		constexpr auto VisibleLevelsForMatineeCapture = 0x8f0; // FString
		constexpr auto MatineeCaptureFPS = 0x900; // int32_t
		constexpr auto MatineeCaptureType = 0x904; // int32_t
		constexpr auto RimShader_Color = 0x908; // FLinearColor
		constexpr auto RimShader_InterpolationDuration = 0x918; // float
		constexpr auto PresetLUT = 0x91c; // TArray<FString>
		constexpr auto PresetLUTTexture = 0x92c; // ObjectProperty
		constexpr auto OldPresetLUTTexture = 0x934; // ObjectProperty
		constexpr auto GrayLUT = 0x93c; // FString
		constexpr auto GrayLUTTexture = 0x94c; // ObjectProperty
		constexpr auto MatchWinLUT = 0x954; // FString
		constexpr auto MatchWinLUTTexture = 0x964; // ObjectProperty
		constexpr auto MatchLoseLUT = 0x96c; // FString
		constexpr auto MatchLoseLUTTexture = 0x97c; // ObjectProperty
		constexpr auto CurrentLUTTexture = 0x984; // ObjectProperty
		constexpr auto LUT_FadeIn_Time = 0x98c; // float
		constexpr auto LUT_FadeOut_Time = 0x990; // float
		constexpr auto LUT_Duration_Time = 0x994; // float
		constexpr auto GoreLevel = 0x998; // int32_t
		constexpr auto BucketScore = 0x99c; // TArray<int32_t>
		constexpr auto VRAMQuantity = 0x9ac; // TArray<int32_t>
	}

	namespace n_UCombatHUD_Hostage {
		constexpr auto Target = 0x1b0; // ObjectProperty
		constexpr auto HPStateBarMC = 0x1b8; // ObjectProperty
		constexpr auto HPMC = 0x1c0; // ObjectProperty
		constexpr auto LastDisplayHealth = 0x1c8; // int32_t
		constexpr auto LastGodMode = 0x1cc; // uint32_t : 1
	}

	namespace n_UImageBasedReflectionComponent {
		constexpr auto bEnabled = 0x2f4; // uint32_t : 1
		constexpr auto bTwoSided = 0x2f4; // uint32_t : 1
		constexpr auto ReflectionTexture = 0x2f8; // ObjectProperty
		constexpr auto ReflectionColor = 0x300; // FLinearColor
	}

	namespace n_ACombatCubeMapActor {
		constexpr auto CapturedTextureCube = 0x25c; // ObjectProperty
	}

	namespace n_USeqVar_External {
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto VariableLabel = 0xa8; // FString
	}

	namespace n_UPBRuleNodeRandom {
		constexpr auto NumOutputs = 0x70; // int32_t
		constexpr auto MinNumExecuted = 0x74; // int32_t
		constexpr auto MaxNumExecuted = 0x78; // int32_t
	}

	namespace n_AFracturedStaticMeshPart {
		constexpr auto DestroyPartRadiusFactor = 0x2d8; // float
		constexpr auto BaseFracturedMeshActor = 0x2dc; // ObjectProperty
		constexpr auto bHasBeenRecycled = 0x2e4; // uint32_t : 1
		constexpr auto bChangeRBChannelWhenAsleep = 0x2e4; // uint32_t : 1
		constexpr auto bCompositeThatExplodesOnImpact = 0x2e4; // uint32_t : 1
		constexpr auto LastSpawnTime = 0x2e8; // float
		constexpr auto PartPoolIndex = 0x2ec; // int32_t
		constexpr auto FracPartGravScale = 0x2f0; // float
		constexpr auto AsleepRBChannel = 0x2f4; // ERBCollisionChannel
		constexpr auto OldVelocity = 0x2f8; // FVector
		constexpr auto CurrentVibrationLevel = 0x304; // float
		constexpr auto LastImpactSoundTime = 0x308; // float
	}

	namespace n_AInterpActor {
		constexpr auto bShouldSaveForCheckpoint = 0x294; // uint32_t : 1
		constexpr auto bMonitorMover = 0x294; // uint32_t : 1
		constexpr auto bMonitorZVelocity = 0x294; // uint32_t : 1
		constexpr auto bDestroyProjectilesOnEncroach = 0x294; // uint32_t : 1
		constexpr auto bContinueOnEncroachPhysicsObject = 0x294; // uint32_t : 1
		constexpr auto bStopOnEncroach = 0x294; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x294; // uint32_t : 1
		constexpr auto bIsLift = 0x294; // uint32_t : 1
		constexpr auto MyMarker = 0x298; // ObjectProperty
		constexpr auto MaxZVelocity = 0x2a0; // float
		constexpr auto StayOpenTime = 0x2a4; // float
		constexpr auto OpenSound = 0x2a8; // ObjectProperty
		constexpr auto OpeningAmbientSound = 0x2b0; // ObjectProperty
		constexpr auto OpenedSound = 0x2b8; // ObjectProperty
		constexpr auto CloseSound = 0x2c0; // ObjectProperty
		constexpr auto ClosingAmbientSound = 0x2c8; // ObjectProperty
		constexpr auto ClosedSound = 0x2d0; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x2d8; // ComponentProperty
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x68; // FRawDistributionVector
		constexpr auto LocationOffset = 0x8c; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xb0; // FRawDistributionVector
		constexpr auto Direction = 0xd4; // FRawDistributionVector
	}

	namespace n_ACombatWeapon_Supplies {
		constexpr auto SuppliesSKillClass = 0x1ee8; // UCombatSkill_Supplies*
		constexpr auto DropType = 0x1ef0; // EDroppedSuppliesType
	}

	namespace n_UGripAFActionHandle {
		constexpr auto Handle = 0x60; // int32_t
	}

	namespace n_USeqAct_Deproject {
		constexpr auto ScreenX = 0x108; // float
		constexpr auto ScreenY = 0x10c; // float
		constexpr auto TraceDistance = 0x110; // float
		constexpr auto HitObject = 0x114; // ObjectProperty
		constexpr auto HitLocation = 0x11c; // FVector
		constexpr auto HitNormal = 0x128; // FVector
	}

	namespace n_UHeadTrackingComponent {
		constexpr auto TrackControllerName = 0x88; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x98; // float
		constexpr auto bDisableBeyondLimit = 0x9c; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xa0; // float
		constexpr auto MinLookAtTime = 0xa4; // float
		constexpr auto MaxInterestTime = 0xa8; // float
		constexpr auto ActorClassesToLookAt = 0xac; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xbc; // TArray<FName>
		constexpr auto CurrentActorMap = 0xcc; // TMap<None, None>
		constexpr auto SkeletalMeshComp = 0x114; // ComponentProperty
		constexpr auto TrackControls = 0x11c; // TArray<ObjectProperty>
		constexpr auto RootMeshLocation = 0x12c; // FVector
		constexpr auto RootMeshRotation = 0x138; // FRotator
	}

	namespace n_ACombatGuyBase {
		constexpr auto Client_DistanceOfCorsshairTargetForUI = 0x111c; // float
		constexpr auto CheckTargetedForUI_DotMin = 0x1120; // float
		constexpr auto CheckTargetedForUI_DotMax = 0x1124; // float
	}

	namespace n_URB_BodySetup {
		constexpr auto SleepFamily = 0xb8; // ESleepFamily
		constexpr auto BoneName = 0xbc; // FName
		constexpr auto bFixed = 0xc4; // uint32_t : 1
		constexpr auto bNoCollision = 0xc4; // uint32_t : 1
		constexpr auto bBlockZeroExtent = 0xc4; // uint32_t : 1
		constexpr auto bBlockNonZeroExtent = 0xc4; // uint32_t : 1
		constexpr auto bEnableContinuousCollisionDetection = 0xc4; // uint32_t : 1
		constexpr auto bAlwaysFullAnimWeight = 0xc4; // uint32_t : 1
		constexpr auto bConsiderForBounds = 0xc4; // uint32_t : 1
		constexpr auto PhysMaterial = 0xc8; // ObjectProperty
		constexpr auto MassScale = 0xd0; // float
		constexpr auto CollisionGeom = 0xd4; // TArray<FPointer>
		constexpr auto CollisionGeomScale3D = 0xe4; // TArray<FVector>
		constexpr auto PreCachedPhysScale = 0xf4; // TArray<FVector>
		constexpr auto PreCachedPhysData = 0x104; // TArray<FKCachedConvexData>
		constexpr auto PreCachedPhysDataVersion = 0x114; // int32_t
	}

	namespace n_UParticleModuleUberLTISIVCL {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
	}

	namespace n_ACombatPatrolPoint {
		constexpr auto Priority = 0x33c; // int32_t
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0xb0; // ObjectProperty
		constexpr auto FontTexturePage = 0xb8; // int32_t
	}

	namespace n_AMaterialInstanceTimeVaryingActor {
		constexpr auto MatInst = 0x244; // ObjectProperty
	}

	namespace n_ACombatPlayerReplicationInfo {
		constexpr auto InGameCR = 0x3a8; // float
		constexpr auto TotalGameCR = 0x3ac; // float
		constexpr auto bChangedCR = 0x3b0; // uint32_t : 1
		constexpr auto bAllSkillReady = 0x3b0; // uint32_t : 1
		constexpr auto bIsLastman = 0x3b0; // uint32_t : 1
		constexpr auto bSkillTest = 0x3b0; // uint32_t : 1
		constexpr auto bDelayApplySkill = 0x3b0; // uint32_t : 1
		constexpr auto bDelayApplyCooltime = 0x3b0; // uint32_t : 1
		constexpr auto bChangedSkillOption = 0x3b0; // uint32_t : 1
		constexpr auto bActiveUAV = 0x3b0; // uint32_t : 1
		constexpr auto bSelectedMilitaryClass = 0x3b0; // uint32_t : 1
		constexpr auto bClientReadyToPlay = 0x3b0; // uint32_t : 1
		constexpr auto bNeedLoadGameKillCount = 0x3b0; // uint32_t : 1
		constexpr auto bBestScorePlayer = 0x3b0; // uint32_t : 1
		constexpr auto bBestKillPlayer = 0x3b0; // uint32_t : 1
		constexpr auto bBestAssistPlayer = 0x3b0; // uint32_t : 1
		constexpr auto bBestModeScorePlayer = 0x3b0; // uint32_t : 1
		constexpr auto bChampionshipSettingDone = 0x3b0; // uint32_t : 1
		constexpr auto bEnableChaFXItem = 0x3b0; // uint32_t : 1
		constexpr auto bSessionConnected = 0x3b0; // uint32_t : 1
		constexpr auto AccumulatedAssist = 0x3b4; // WordProperty
		constexpr auto pendingAssistCount = 0x3b8; // int32_t
		constexpr auto ScoreKills = 0x3bc; // WordProperty
		constexpr auto SuicideCount = 0x3be; // WordProperty
		constexpr auto HeadShotCount = 0x3c0; // WordProperty
		constexpr auto RewardData = 0x3c4; // ObjectProperty
		constexpr auto LastKillTime = 0x3cc; // int32_t
		constexpr auto RespawnCount = 0x3d0; // int32_t
		constexpr auto Rank = 0x3d4; // char
		constexpr auto SavedActiveSkillOption = 0x3d5; // char [0x4]
		constexpr auto bRepNotifySavedSkillOption = 0x3d9; // char
		constexpr auto RepNotifyApplyInstanceItem = 0x3da; // char
		constexpr auto RepNotifyApplyAccessoryItem = 0x3db; // char
		constexpr auto RepNotifyAcceptSkillList = 0x3dc; // char
		constexpr auto RepNotifyCoolTime = 0x3dd; // char
		constexpr auto NotifySkillReset = 0x3de; // char
		constexpr auto MilitaryClass = 0x3df; // MilitaryClassType
		constexpr auto SortOrder = 0x3e0; // char
		constexpr auto ChampionshipIndex = 0x3e1; // char
		constexpr auto AccountGrade = 0x3e2; // char
		constexpr auto WinRounds = 0x3e3; // char
		constexpr auto LoseRounds = 0x3e4; // char
		constexpr auto ActionAchievement = 0x3e5; // char [0xa]
		constexpr auto ActionAchievement_StartIndex = 0x3ef; // char
		constexpr auto ActionAchievement_EndIndex = 0x3f0; // char
		constexpr auto RankExp = 0x3f4; // float
		constexpr auto RankName = 0x3f8; // FString
		constexpr auto RankBigIconName = 0x408; // FString
		constexpr auto RankSmallIconName = 0x418; // FString
		constexpr auto RankBigIconImageID = 0x428; // int32_t
		constexpr auto RankSmallIconImageID = 0x42c; // int32_t
		constexpr auto OldRankBigIconName = 0x430; // FString
		constexpr auto OldRankBigIconImageID = 0x440; // int32_t
		constexpr auto CombatClassSystem = 0x444; // ObjectProperty
		constexpr auto SkillManager = 0x44c; // ObjectProperty
		constexpr auto InstanceItemManager = 0x454; // ObjectProperty
		constexpr auto SkillManagerClassName = 0x45c; // FString
		constexpr auto InstanceItems = 0x46c; // UCombatInstanceItem* [0x4]
		constexpr auto AccessoryItem = 0x48c; // UCombatAccessory_Base*
		constexpr auto AcceptSkillItemIndexList = 0x494; // int32_t [0x10]
		constexpr auto RepNotifyPassiveSkillIndex = 0x4d4; // int32_t
		constexpr auto SkillCoolTimeCodeName = 0x4d8; // FString
		constexpr auto CharClassInfoData = 0x4e8; // TArray<FString>
		constexpr auto CurrCharClassInfo = 0x4f8; // UCBFamilyInfo*
		constexpr auto ChaFXUpperItemID = 0x500; // int32_t
		constexpr auto ChaFXFootItemID = 0x504; // int32_t
		constexpr auto RepC4TimeReduceItemID = 0x508; // int32_t
		constexpr auto C4TimeReduceItemClass = 0x50c; // UCombatInstanceItem_C4TimeReduceKitBase*
		constexpr auto ClanID = 0x514; // int32_t
		constexpr auto PingWarnningCount = 0x518; // int32_t
		constexpr auto MarkerID = 0x51c; // int32_t
	}

	namespace n_UCCSBTCombatTargetExistence {
		constexpr auto CurrentTarget = 0xc0; // uint32_t : 1
		constexpr auto ClosestEnemy = 0xc0; // uint32_t : 1
		constexpr auto VisibleEnemy = 0xc0; // uint32_t : 1
		constexpr auto LowestLKPAgeEnemy = 0xc0; // uint32_t : 1
		constexpr auto EnemyAware = 0xc0; // uint32_t : 1
		constexpr auto CheckMethod = 0xc4; // ETargetCheckMethods
	}

	namespace n_APylon {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x33c; // FPointer
		constexpr auto VfTable_IInterface_NavigationHandle = 0x344; // FPointer
		constexpr auto NavMeshPtr = 0x34c; // FPointer
		constexpr auto ObstacleMesh = 0x354; // FPointer
		constexpr auto DynamicObstacleMesh = 0x35c; // FPointer
		constexpr auto WorkingSetPtr = 0x364; // FPointer
		constexpr auto PathObjectsThatAffectThisPylon = 0x36c; // FPointer
		constexpr auto NextPassSeedList = 0x374; // TArray<FVector>
		constexpr auto OctreeId = 0x384; // FOctreeElementId
		constexpr auto OctreeIWasAddedTo = 0x390; // FPointer
		constexpr auto NextPylon = 0x398; // ObjectProperty
		constexpr auto ExpansionVolumes = 0x3a0; // TArray<ObjectProperty>
		constexpr auto ExpansionRadius = 0x3b0; // float
		constexpr auto MaxExpansionRadius = 0x3b4; // float
		constexpr auto PylonRadiusPreview = 0x3b8; // ComponentProperty
		constexpr auto bImportedMesh = 0x3c0; // uint32_t : 1
		constexpr auto bUseExpansionSphereOverride = 0x3c0; // uint32_t : 1
		constexpr auto bNeedsCostCheck = 0x3c0; // uint32_t : 1
		constexpr auto bPylonInHighLevelPath = 0x3c0; // uint32_t : 1
		constexpr auto bUseRecast = 0x3c0; // uint32_t : 1
		constexpr auto bAllowRecastGenerator = 0x3c0; // uint32_t : 1
		constexpr auto bDrawEdgePolys = 0x3c0; // uint32_t : 1
		constexpr auto bDrawPolyBounds = 0x3c0; // uint32_t : 1
		constexpr auto bRenderInShowPaths = 0x3c0; // uint32_t : 1
		constexpr auto bDrawWalkableSurface = 0x3c0; // uint32_t : 1
		constexpr auto bDrawObstacleSurface = 0x3c0; // uint32_t : 1
		constexpr auto bSolidObstaclesInGame = 0x3c0; // uint32_t : 1
		constexpr auto bBuildThisPylon = 0x3c0; // uint32_t : 1
		constexpr auto bDisabled = 0x3c0; // uint32_t : 1
		constexpr auto bForceObstacleMeshCollision = 0x3c0; // uint32_t : 1
		constexpr auto ExpansionSphereCenter = 0x3c4; // FVector
		constexpr auto RenderingComp = 0x3d0; // ComponentProperty
		constexpr auto BrokenSprite = 0x3d8; // ComponentProperty
		constexpr auto ImposterPylons = 0x3e0; // TArray<ObjectProperty>
		constexpr auto OnBuild_DisableCollisionForThese = 0x3f0; // TArray<ObjectProperty>
		constexpr auto OnBuild_EnableCollisionForThese = 0x400; // TArray<ObjectProperty>
		constexpr auto MaxPolyHeight_Optional = 0x410; // float
		constexpr auto NavMeshGenerator = 0x414; // char
		constexpr auto VoxelFilterBounds = 0x418; // TArray<FKAggregateGeom>
		constexpr auto VoxelFilterTM = 0x428; // TArray<FMatrix>
		constexpr auto DebugEdgeCount = 0x438; // int32_t
		constexpr auto DebugPathExtent = 0x43c; // FVector
		constexpr auto DebugPathStartLocation = 0x448; // FVector
	}

	namespace n_USVehicleSimBase {
		constexpr auto WheelSuspensionStiffness = 0x88; // float
		constexpr auto WheelSuspensionDamping = 0x8c; // float
		constexpr auto WheelSuspensionBias = 0x90; // float
		constexpr auto WheelLongExtremumSlip = 0x94; // float
		constexpr auto WheelLongExtremumValue = 0x98; // float
		constexpr auto WheelLongAsymptoteSlip = 0x9c; // float
		constexpr auto WheelLongAsymptoteValue = 0xa0; // float
		constexpr auto WheelLatExtremumSlip = 0xa4; // float
		constexpr auto WheelLatExtremumValue = 0xa8; // float
		constexpr auto WheelLatAsymptoteSlip = 0xac; // float
		constexpr auto WheelLatAsymptoteValue = 0xb0; // float
		constexpr auto WheelInertia = 0xb4; // float
		constexpr auto bWheelSpeedOverride = 0xb8; // uint32_t : 1
		constexpr auto bClampedFrictionModel = 0xb8; // uint32_t : 1
		constexpr auto bAutoDrive = 0xb8; // uint32_t : 1
		constexpr auto AutoDriveSteer = 0xbc; // float
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x68; // FRawDistributionVector
		constexpr auto bInheritParent = 0x8c; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_Community {
		constexpr auto MessengerListInfos = 0xd0; // FMessengerListStruct [0x6]
		constexpr auto MessengerPopupLabelIDList = 0x160; // int32_t [0x9]
		constexpr auto UserName_FriendWith = 0x184; // FString
		constexpr auto UserName_AddBlackList = 0x194; // FString
		constexpr auto UserID_BreakFriend = 0x1a4; // int32_t
		constexpr auto UserName_ClanInvite = 0x1a8; // FString
		constexpr auto Banish_UserID = 0x1b8; // int32_t
		constexpr auto Invite_ClanID = 0x1bc; // int32_t
		constexpr auto MessengerState = 0x1c0; // EMessengerStateType
		constexpr auto bDisplayedNoList = 0x1c4; // uint32_t : 1
		constexpr auto bDisplayedUserInfoTooltip = 0x1c4; // uint32_t : 1
		constexpr auto CurrentUserInfoTooltipInfo = 0x1c8; // FUserInfoTooltipInfo
		constexpr auto Items_FriendsRequestsPopup = 0x240; // TArray<FPopupItemInfo>
		constexpr auto Items_MyFriendsPopup = 0x250; // TArray<FPopupItemInfo>
		constexpr auto Items_ClanPopup = 0x260; // TArray<FPopupItemInfo>
		constexpr auto Items_BlockedUsersPopup = 0x270; // TArray<FPopupItemInfo>
		constexpr auto NoFriendLabel = 0x280; // FString
		constexpr auto NoClanLabel = 0x290; // FString
		constexpr auto NoClanMemberLabel = 0x2a0; // FString
	}

	namespace n_ACombatAIManager {
		constexpr auto AITypeList = 0x24c; // TArray<FAITypeInfo>
		constexpr auto DefaultBotControllerClassName = 0x25c; // FString
		constexpr auto bUseFlocking = 0x26c; // uint32_t : 1
		constexpr auto FlockingObj = 0x270; // ObjectProperty
		constexpr auto GameInfo = 0x278; // ObjectProperty
		constexpr auto DefaultBotControllerClass = 0x280; // ACombatBotController*
		constexpr auto DebugCategoryList = 0x288; // TArray<FString>
		constexpr auto CurDebugTarget = 0x298; // ObjectProperty
		constexpr auto BotList = 0x2a0; // TArray<ObjectProperty>
		constexpr auto AIBeaconArray = 0x2b0; // TArray<ObjectProperty>
	}

	namespace n_USeqVar_Player {
		constexpr auto Players = 0xc4; // TArray<ObjectProperty>
		constexpr auto bAllPlayers = 0xd4; // uint32_t : 1
		constexpr auto PlayerIdx = 0xd8; // int32_t
	}

	namespace n_UAnimNotify_ViewShake {
		constexpr auto Duration = 0x60; // float
		constexpr auto RotAmplitude = 0x64; // FVector
		constexpr auto RotFrequency = 0x70; // FVector
		constexpr auto LocAmplitude = 0x7c; // FVector
		constexpr auto LocFrequency = 0x88; // FVector
		constexpr auto FOVAmplitude = 0x94; // float
		constexpr auto FOVFrequency = 0x98; // float
		constexpr auto bDoControllerVibration = 0x9c; // uint32_t : 1
		constexpr auto bUseBoneLocation = 0x9c; // uint32_t : 1
		constexpr auto ShakeRadius = 0xa0; // float
		constexpr auto BoneName = 0xa4; // FName
		constexpr auto ShakeParams = 0xac; // ObjectProperty
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x74; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x98; // uint32_t : 1
		constexpr auto bUsePSysLocation = 0x98; // uint32_t : 1
		constexpr auto bInheritVelocity = 0x98; // uint32_t : 1
		constexpr auto InheritVelocityScale = 0x9c; // FRawDistributionVector
	}

	namespace n_UGripAction_MoveRightAndLeft {
		constexpr auto ActionNode = 0x78; // ObjectProperty
		constexpr auto CurDir = 0x80; // char
		constexpr auto MoveStartTime = 0x84; // float
	}

	namespace n_UPath_TowardPoint {
		constexpr auto GoalPoint = 0x6c; // FVector
	}

	namespace n_UCombatDataTable {
		constexpr auto EntryClass = 0x60; // UObject*
		constexpr auto table = 0x68; // TArray<FDataEntry>
		constexpr auto Description = 0x78; // FString
		constexpr auto XMLPath = 0x88; // FString
		constexpr auto ReferenceDataTablePath = 0x98; // FString
		constexpr auto CopyIndex = 0xa8; // int32_t
		constexpr auto bForcedProperty = 0xac; // uint32_t : 1
		constexpr auto AutoSortEnable = 0xac; // uint32_t : 1
		constexpr auto TableMap = 0xb0; // TMap<None, None>
		constexpr auto TypeAlias = 0xf8; // TArray<FTypeAliasInfo>
	}

	namespace n_UCombatFPMuzzleFlashLight {
		constexpr auto bInitialized = 0x240; // uint32_t : 1
		constexpr auto Lifetime = 0x244; // float
		constexpr auto TimeShiftIndex = 0x248; // int32_t
		constexpr auto TimeShift = 0x24c; // TArray<FLightValues>
		constexpr auto __OnLightFinished__Delegate = 0x25c; // DelegateProperty
	}

	namespace n_UGFxAction_SetVariable {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_ACombatProj_FlashBang {
		constexpr auto fFlashbangSoundTime = 0x3f4; // float
	}

	namespace n_UCombatFrontEnd_MatchRoom {
		constexpr auto PlayerListClass = 0xd0; // ObjectProperty
		constexpr auto RoomDetailInfoClass = 0xd8; // ObjectProperty
		constexpr auto PopupClass = 0xe0; // ObjectProperty
		constexpr auto TacticalGearClass = 0xe8; // ObjectProperty
		constexpr auto MissionList = 0xf0; // ObjectProperty
		constexpr auto BecameHostSound = 0xf8; // ObjectProperty
		constexpr auto MatchAbortedSound = 0x100; // ObjectProperty
		constexpr auto MatchroomClass = 0x108; // ObjectProperty [0x6]
		constexpr auto CurrentMatchroomClass = 0x138; // ObjectProperty
		constexpr auto CurrentMatchroomType = 0x140; // EMatchroomType
		constexpr auto bIgnoreShortKey = 0x144; // uint32_t : 1
		constexpr auto bHostMode = 0x144; // uint32_t : 1
		constexpr auto bLastDashboardDisable = 0x144; // uint32_t : 1
		constexpr auto nChannel = 0x148; // int32_t
		constexpr auto nSelectedId = 0x14c; // int32_t
		constexpr auto CompMatchDialogID = 0x150; // int32_t
		constexpr auto MatchroomButtonInfo = 0x154; // FMatchroomButtonStruct [0x9]
		constexpr auto ReadyButtonLabelIDList = 0x2e0; // int32_t [0x5]
		constexpr auto ReadyButtonLabelList = 0x2f4; // FString [0x5]
		constexpr auto PopupMenuSetup = 0x344; // FRClickPopupMenuItem [0x8]
		constexpr auto GameOptionUIInfos = 0x3a4; // TArray<FGameOptionUIInfo>
		constexpr auto ChangeOptionNotifyMessage_MaxUser = 0x3b4; // FString
		constexpr auto ChangeOptionNotifyMessage_GoalKill = 0x3c4; // FString
		constexpr auto ChangeOptionNotifyMessage_GoalPoint = 0x3d4; // FString
		constexpr auto ChangeOptionNotifyMessage_GoalWave = 0x3e4; // FString
		constexpr auto ChangeOptionNotifyMessage_LimitTime = 0x3f4; // FString
		constexpr auto ChangeOptionNotifyMessage_WinRound = 0x404; // FString
		constexpr auto ChangeOptionNotifyMessage_HalfChange = 0x414; // FString
		constexpr auto ChangeOptionNotifyMessage_AutoTeamBalance = 0x424; // FString
		constexpr auto ChangeOptionNotifyMessage_AllChat = 0x434; // FString
		constexpr auto ChangeOptionNotifyMessage_DeathChat = 0x444; // FString
		constexpr auto ChangeOptionNotifyMessage_ThirdCamera = 0x454; // FString
		constexpr auto OptionMaxUserLabel = 0x464; // FString
		constexpr auto OptionAIMaxUserLavel = 0x474; // FString
		constexpr auto OptionGoalKillLabel = 0x484; // FString
		constexpr auto OptionGoalPointLabel = 0x494; // FString
		constexpr auto OptionGoalWaveLabel = 0x4a4; // FString
		constexpr auto OptionRoundLabel = 0x4b4; // FString
		constexpr auto OptionMissionLabel = 0x4c4; // FString
		constexpr auto OptionPlayTimeMinLabel = 0x4d4; // FString
		constexpr auto OptionPlayTimeMinSecLabel = 0x4e4; // FString
		constexpr auto OptionHalfChangeOnLabel = 0x4f4; // FString
		constexpr auto OptionHalfChangeOffLabel = 0x504; // FString
		constexpr auto OptionAutoTeamBalanceOnLabel = 0x514; // FString
		constexpr auto OptionAutoTeamBalanceOffLabel = 0x524; // FString
		constexpr auto OptionAutoCampOnLabel = 0x534; // FString
		constexpr auto OptionAutoCampOffLabel = 0x544; // FString
		constexpr auto OptionSaveClanRecordLabel = 0x554; // FString
		constexpr auto OptionAllChatOnLabel = 0x564; // FString
		constexpr auto OptionAllChatOffLabel = 0x574; // FString
		constexpr auto OptionDeathChatOnLabel = 0x584; // FString
		constexpr auto OptionDeathChatOffLabel = 0x594; // FString
		constexpr auto OptionDifficultyEasyLabel = 0x5a4; // FString
		constexpr auto OptionDifficultyNormalLabel = 0x5b4; // FString
		constexpr auto OptionDifficultyHardLabel = 0x5c4; // FString
		constexpr auto OptionThirdCameraOnLabel = 0x5d4; // FString
		constexpr auto OptionThirdCameraOffLabel = 0x5e4; // FString
		constexpr auto TeamList_LeftTeamLabel = 0x5f4; // FString
		constexpr auto TeamList_RightTeamLabel = 0x604; // FString
		constexpr auto TeamList_AutoBalanceTeamLabel = 0x614; // FString
		constexpr auto TeamList_AutoCampTeamLabel = 0x624; // FString
	}

	namespace n_UCombatFrontEnd_TacticalGear {
		constexpr auto LastGearIndex = 0xd0; // int32_t
		constexpr auto EquipNoticeString = 0xd4; // FString
		constexpr auto PriceString = 0xe4; // FString
		constexpr auto ConditionString_Title = 0xf4; // FString
		constexpr auto ConditionString_EnoughMoney = 0x104; // FString
		constexpr auto ConditionString_AllowedMode = 0x114; // FString
	}

	namespace n_AGameCrowdBehaviorPoint {
		constexpr auto RadiusOfBehaviorEvent = 0x250; // float
		constexpr auto DurationOfBehaviorEvent = 0x254; // float
		constexpr auto EventType = 0x258; // ECrowdBehaviorEvent
		constexpr auto bRequireLOS = 0x25c; // uint32_t : 1
		constexpr auto Initiator = 0x260; // ObjectProperty
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0xb0; // FName
		constexpr auto ExpressionGUID = 0xb8; // FGuid
		constexpr auto Group = 0xc8; // FName
	}

	namespace n_UComponent {
		constexpr auto TemplateOwnerClass = 0x60; // UObject*
		constexpr auto TemplateName = 0x68; // FName
	}

	namespace n_UUIDataStore_InputAlias {
		constexpr auto InputAliases = 0x98; // TArray<FUIDataStoreInputAlias>
		constexpr auto InputAliasLookupMap = 0xa8; // TMap<None, None>
	}

	namespace n_UCCSAFIdle {
		constexpr auto Alertness = 0x64; // ECCSAlertnessState
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x68; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x8c; // uint32_t : 1
	}

	namespace n_USceneCapturePortalComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
		constexpr auto ViewDestination = 0xdc; // ObjectProperty
	}

	namespace n_UDemoRecDriver {
		constexpr auto DemoSpectatorClass = 0x20c; // FString
		constexpr auto MaxRewindPoints = 0x2b4; // int32_t
		constexpr auto RewindPointInterval = 0x2bc; // float
		constexpr auto NumRecentRewindPoints = 0x2c0; // int32_t
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x6c; // float
		constexpr auto SpawnPerUnit = 0x70; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongX = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongY = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongZ = 0x94; // uint32_t : 1
		constexpr auto MovementTolerance = 0x98; // float
		constexpr auto MaxFrameDistance = 0x9c; // float
		constexpr auto MinFrameDistance = 0xa0; // float
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0xb8; // FName
	}

	namespace n_USeqAct_ParticleEventGenerator {
		constexpr auto bEnabled = 0x108; // uint32_t : 1
		constexpr auto bUseEmitterLocation = 0x108; // uint32_t : 1
		constexpr auto Instigator = 0x10c; // ObjectProperty
		constexpr auto EventNames = 0x114; // TArray<FString>
		constexpr auto EventTime = 0x124; // float
		constexpr auto EventLocation = 0x128; // FVector
		constexpr auto EventDirection = 0x134; // FVector
		constexpr auto EventVelocity = 0x140; // FVector
		constexpr auto EventNormal = 0x14c; // FVector
	}

	namespace n_AFluidInfluenceActor {
		constexpr auto FlowDirection = 0x244; // ComponentProperty
		constexpr auto Sprite = 0x24c; // ComponentProperty
		constexpr auto InfluenceComponent = 0x254; // ComponentProperty
		constexpr auto bActive = 0x25c; // uint32_t : 1
		constexpr auto bToggled = 0x25c; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefQuestShortcut {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto ChannelCodeName = 0x7c; // FString
		constexpr auto ModeGroupCodename = 0x8c; // FString
		constexpr auto OpenWorld = 0x9c; // int32_t
	}

	namespace n_UCombatDataTableRefSystemImage {
		constexpr auto ImageID = 0x6c; // int32_t
		constexpr auto GRADE = 0x70; // int32_t
		constexpr auto ImageType = 0x74; // E_SYSTEM_IMAGE_TYPE
	}

	namespace n_UCombatAIActionNode_Roamming {
		constexpr auto bIsWalking = 0xf4; // uint32_t : 1
		constexpr auto MaxPathLength = 0xf8; // float
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x7c; // float
		constexpr auto Max = 0x80; // float
	}

	namespace n_UUIDataStore_StringAliasMap {
		constexpr auto MenuInputMapArray = 0x98; // TArray<FUIMenuInputMap>
		constexpr auto MenuInputSets = 0xa8; // FMap_Mirror
		constexpr auto PlayerIndex = 0xf0; // int32_t
	}

	namespace n_UCombatDataRefDecorationColor {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto Color_R = 0x70; // char
		constexpr auto Color_G = 0x71; // char
		constexpr auto Color_B = 0x72; // char
	}

	namespace n_ACombatParachuteVolume {
		constexpr auto UnTouchState = 0x280; // ParachuteState
	}

	namespace n_UMeshComponent {
		constexpr auto Materials = 0x250; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionFloat
	}

	namespace n_UCombatHUDEntity_Base {
		constexpr auto LastActivateType = 0xbc; // EActivateType
	}

	namespace n_UCombatCameraThirdPersonCameraMode_default {
		constexpr auto bResetInterpolationOnActive = 0x264; // uint32_t : 1
	}

	namespace n_ACombatDemModePRI {
		constexpr auto bHasBomb = 0x520; // uint32_t : 1
		constexpr auto BombPlantedCount = 0x524; // int32_t
		constexpr auto BombDefusedCount = 0x528; // int32_t
	}

	namespace n_UFracturedBaseComponent {
		constexpr auto ComponentBaseResources = 0x2f4; // FPointer
		constexpr auto ReleaseResourcesFence = 0x2fc; // FRenderCommandFence_Mirror
		constexpr auto VisibleFragments = 0x300; // TArray<char>
		constexpr auto bVisibilityHasChanged = 0x310; // uint32_t : 1
		constexpr auto bVisibilityReset = 0x310; // uint32_t : 1
		constexpr auto bInitialVisibilityValue = 0x310; // uint32_t : 1
		constexpr auto bUseDynamicIndexBuffer = 0x310; // uint32_t : 1
		constexpr auto bUseDynamicIBWithHiddenFragments = 0x310; // uint32_t : 1
		constexpr auto NumResourceIndices = 0x314; // int32_t
		constexpr auto bResetStaticMesh = 0x318; // int32_t
	}

	namespace n_UCombatDataTableRefItemOptionBind {
		constexpr auto OPTypeCode = 0x6c; // FString
		constexpr auto OptionType = 0x7c; // int32_t
		constexpr auto ValueMin = 0x80; // int32_t
		constexpr auto ValueMax = 0x84; // int32_t
		constexpr auto RandomValue = 0x88; // int32_t
		constexpr auto SpecialValue1 = 0x8c; // int32_t
		constexpr auto SpecialValue2 = 0x90; // int32_t
		constexpr auto StringID = 0x94; // int32_t
		constexpr auto UIIcon = 0x98; // FString
	}

	namespace n_UPartyBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto PartyBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // uint32_t : 1
		constexpr auto bShouldTick = 0x74; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto __OnDestroyComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UGripBTTimer {
		constexpr auto MinDuration = 0xbc; // float
		constexpr auto MaxDuration = 0xc0; // float
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x244; // ComponentProperty
		constexpr auto bDisableAutoBaseOnProcBuilding = 0x24c; // uint32_t : 1
		constexpr auto bProxy = 0x24c; // uint32_t : 1
		constexpr auto bHiddenByProxy = 0x24c; // uint32_t : 1
		constexpr auto OldCastShadow = 0x24c; // uint32_t : 1
		constexpr auto OldAcceptsLights = 0x24c; // uint32_t : 1
	}

	namespace n_USeqAct_SetVelocity {
		constexpr auto VelocityDir = 0x108; // FVector
		constexpr auto VelocityMag = 0x114; // float
		constexpr auto bVelocityRelativeToActorRotation = 0x118; // uint32_t : 1
	}

	namespace n_UMcpGroupsBase {
		constexpr auto McpGroupsManagerClassName = 0x78; // FString
		constexpr auto GroupLists = 0x88; // TArray<FMcpGroupList>
		constexpr auto __OnCreateGroupComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteGroupComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryGroupsComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnAddGroupMembersComplete__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnRemoveGroupMembersComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnDeleteAllGroupsComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnQueryGroupInvitesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteComplete__Delegate = 0x118; // DelegateProperty
	}

	namespace n_USeqAct_Gate {
		constexpr auto bOpen = 0x108; // uint32_t : 1
		constexpr auto AutoCloseCount = 0x10c; // int32_t
		constexpr auto CurrentCloseCount = 0x110; // int32_t
	}

	namespace n_UAnimNode {
		constexpr auto bRelevant = 0x68; // uint32_t : 1
		constexpr auto bJustBecameRelevant = 0x68; // uint32_t : 1
		constexpr auto bTickDuringPausedAnims = 0x68; // uint32_t : 1
		constexpr auto bEditorOnly = 0x68; // uint32_t : 1
		constexpr auto bDisableCaching = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnInit = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnBecomeRelevant = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnCeaseRelevant = 0x68; // uint32_t : 1
		constexpr auto NodeTickTag = 0x6c; // int32_t
		constexpr auto NodeInitTag = 0x70; // int32_t
		constexpr auto NodeEndEventTick = 0x74; // int32_t
		constexpr auto TickArrayIndex = 0x78; // int32_t
		constexpr auto NodeCachedAtomsTag = 0x7c; // int32_t
		constexpr auto NodeTotalWeight = 0x80; // float
		constexpr auto ParentNodes = 0x84; // TArray<ObjectProperty>
		constexpr auto NodeName = 0x94; // FName
		constexpr auto CachedBoneAtoms = 0x9c; // TArray<FBoneAtom>
		constexpr auto CachedNumDesiredBones = 0xac; // char
		constexpr auto CachedRootMotionDelta = 0xb0; // FBoneAtom
		constexpr auto bCachedHasRootMotion = 0xd0; // int32_t
		constexpr auto CachedCurveKeys = 0xd4; // TArray<FCurveKey>
		constexpr auto SearchTag = 0xe4; // int32_t
	}

	namespace n_USeqAct_MissionEvent {
		constexpr auto EventName = 0x118; // FName
		constexpr auto bValidMatchInProgress = 0x120; // uint32_t : 1
		constexpr auto fReservedProperty = 0x124; // float
		constexpr auto iReservedProperty = 0x128; // int32_t
	}

	namespace n_USeqEvent_RemoteEvent {
		constexpr auto EventName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // uint32_t : 1
	}

	namespace n_UGameAICmd_Hover_MoveToGoal {
		constexpr auto Path = 0x84; // ObjectProperty
		constexpr auto Find = 0x8c; // ObjectProperty
		constexpr auto Goal = 0x94; // ObjectProperty
		constexpr auto Radius = 0x9c; // float
		constexpr auto bWasFiring = 0xa0; // uint32_t : 1
		constexpr auto DesiredHoverHeight = 0xa4; // float
		constexpr auto CurrentHoverHeight = 0xa8; // float
		constexpr auto SubGoalReachDist = 0xac; // float
		constexpr auto GoalDistance = 0xb0; // float
		constexpr auto MoveVectDest = 0xb4; // FVector
		constexpr auto CurrentSpec = 0xc0; // ObjectProperty
	}

	namespace n_UGameCrowd_ListOfAgents {
		constexpr auto ListOfAgents = 0x60; // TArray<FAgentArchetypeInfo>
	}

	namespace n_UMcpMessageManager {
		constexpr auto VfTable_FTickableObject = 0xec; // FPointer
		constexpr auto CreateMessageUrl = 0xf4; // FString
		constexpr auto DeleteMessageUrl = 0x104; // FString
		constexpr auto QueryMessagesUrl = 0x114; // FString
		constexpr auto QueryMessageContentsUrl = 0x124; // FString
		constexpr auto DeleteAllMessagesUrl = 0x134; // FString
		constexpr auto CompressMessageRequests = 0x144; // TArray<FMcpCompressMessageRequest>
		constexpr auto UncompressMessageRequests = 0x154; // TArray<FMcpUncompressMessageRequest>
	}

	namespace n_USoundNode {
		constexpr auto NodeUpdateHint = 0x60; // int32_t
		constexpr auto ChildNodes = 0x64; // TArray<ObjectProperty>
	}

	namespace n_ACBTeamInfo {
		constexpr auto TeamMembers = 0x264; // TArray<ObjectProperty>
		constexpr auto Kills = 0x274; // WordProperty
		constexpr auto AssistCount = 0x276; // WordProperty
		constexpr auto DeathCount = 0x278; // WordProperty
		constexpr auto WinRounds = 0x27a; // char
		constexpr auto AliveMemberCount = 0x27b; // char
		constexpr auto SkillGlobalCooltime = 0x27c; // char [0x10]
		constexpr auto RepNotifyActiveSkilltime = 0x28c; // char
		constexpr auto bWasPlayerInRoundStart = 0x290; // uint32_t : 1
		constexpr auto bIsActiveSkillCooltime = 0x290; // uint32_t : 1
		constexpr auto bActiveTimer = 0x290; // uint32_t : 1
		constexpr auto bUseClassSystem = 0x290; // uint32_t : 1
		constexpr auto bIsSetGlobalSkill = 0x290; // uint32_t : 1
		constexpr auto CurrentMissionCount = 0x294; // WordProperty
		constexpr auto SkillOwnerplayerID = 0x298; // int32_t
		constexpr auto CurrentSkillGlobalCooltime = 0x29c; // WordProperty [0x10]
		constexpr auto CoolCheckTime = 0x2bc; // float
		constexpr auto MissionScore = 0x2c0; // float
		constexpr auto OriginalTeamIndex = 0x2c4; // int32_t
		constexpr auto LastUser = 0x2c8; // ObjectProperty
		constexpr auto ClanMatch_MainClanID = 0x2d0; // int32_t
		constexpr auto ClanMatch_ModeID = 0x2d4; // int32_t
		constexpr auto VoteManager = 0x2d8; // ObjectProperty
	}

	namespace n_UCombatHUD_Surrender {
		constexpr auto CurrentTeamIndex = 0xc0; // char
		constexpr auto UI_RemainSecond = 0xc4; // int32_t
		constexpr auto bCanVote = 0xc8; // uint32_t : 1
	}

	namespace n_UCombatAnimNotify_StopCustomAnim {
		constexpr auto BlendOutTime = 0x60; // float
	}

	namespace n_ANxTornadoAngularForceField {
		constexpr auto RadialStrength = 0x298; // float
		constexpr auto RotationalStrength = 0x29c; // float
		constexpr auto LiftStrength = 0x2a0; // float
		constexpr auto ForceRadius = 0x2a4; // float
		constexpr auto ForceTopRadius = 0x2a8; // float
		constexpr auto LiftFalloffHeight = 0x2ac; // float
		constexpr auto EscapeVelocity = 0x2b0; // float
		constexpr auto ForceHeight = 0x2b4; // float
		constexpr auto HeightOffset = 0x2b8; // float
		constexpr auto BSpecialRadialForceMode = 0x2bc; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2c0; // float
		constexpr auto Kernel = 0x2c4; // FPointer
	}

	namespace n_UUIDataStore_GameResource {
		constexpr auto ElementProviderTypes = 0x98; // TArray<FGameResourceDataProvider>
		constexpr auto ListElementProviders = 0xa8; // FMultiMap_Mirror
	}

	namespace n_UMobileMenuElement {
		constexpr auto VpPos = 0x60; // FVector2D
		constexpr auto VpSize = 0x68; // FVector2D
		constexpr auto bIsVisible = 0x70; // uint32_t : 1
		constexpr auto bIsActive = 0x70; // uint32_t : 1
	}

	namespace n_UMeshBeaconHost {
		constexpr auto ClientConnections = 0xa4; // TArray<FClientMeshBeaconConnection>
		constexpr auto PendingPlayerConnections = 0xb4; // TArray<FUniqueNetId>
		constexpr auto OwningPlayerId = 0xc4; // FUniqueNetId
		constexpr auto bAllowBandwidthTesting = 0xcc; // uint32_t : 1
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto __OnReceivedClientConnectionRequest__Delegate = 0xd4; // DelegateProperty
		constexpr auto __OnStartedBandwidthTest__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnFinishedBandwidthTest__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnAllPendingPlayersConnected__Delegate = 0x104; // DelegateProperty
		constexpr auto __OnReceivedClientCreateNewSessionResult__Delegate = 0x114; // DelegateProperty
	}

	namespace n_AFileWriter {
		constexpr auto ArchivePtr = 0x244; // FPointer
		constexpr auto Filename = 0x24c; // FString
		constexpr auto FileType = 0x25c; // FWFileType
		constexpr auto bFlushEachWrite = 0x260; // uint32_t : 1
		constexpr auto bWantsAsyncWrites = 0x260; // uint32_t : 1
	}

	namespace n_USeqAct_SetCRandEXP {
		constexpr auto CR = 0x108; // int32_t
		constexpr auto Exp = 0x10c; // int32_t
	}

	namespace n_ARB_CylindricalForceActor {
		constexpr auto RenderComponent = 0x244; // ComponentProperty
		constexpr auto RadialStrength = 0x24c; // float
		constexpr auto RotationalStrength = 0x250; // float
		constexpr auto LiftStrength = 0x254; // float
		constexpr auto LiftFalloffHeight = 0x258; // float
		constexpr auto EscapeVelocity = 0x25c; // float
		constexpr auto ForceRadius = 0x260; // float
		constexpr auto ForceTopRadius = 0x264; // float
		constexpr auto ForceHeight = 0x268; // float
		constexpr auto HeightOffset = 0x26c; // float
		constexpr auto bForceActive = 0x270; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x270; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x270; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x270; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x270; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x274; // FRBCollisionChannelContainer
	}

	namespace n_ACBGameReplicationInfo {
		constexpr auto InitGameStatus = 0x2a8; // FName
		constexpr auto CountDownTime = 0x2b0; // int32_t
		constexpr auto LastCountDownTime = 0x2b4; // int32_t
		constexpr auto GoalRound = 0x2b8; // int32_t
		constexpr auto GoalMission = 0x2bc; // int32_t
		constexpr auto CurrentRound = 0x2c0; // int32_t
		constexpr auto ModeID = 0x2c4; // int32_t
		constexpr auto RankSystemID = 0x2c8; // char
		constexpr auto SpawnGroupIndex = 0x2c9; // char
		constexpr auto BindRegion = 0x2ca; // char
		constexpr auto PCOwner = 0x2cc; // ObjectProperty
		constexpr auto bIsSuddenDeath = 0x2d4; // uint32_t : 1
		constexpr auto UseRigidBodyForInformation = 0x2d4; // uint32_t : 1
		constexpr auto bIsChampionship = 0x2d4; // uint32_t : 1
		constexpr auto bUseParachuteRespawn = 0x2d4; // uint32_t : 1
		constexpr auto bSkipSkillLicense = 0x2d4; // uint32_t : 1
		constexpr auto bSupportPickUpItem = 0x2d4; // uint32_t : 1
		constexpr auto DecoyActors = 0x2d8; // TArray<ObjectProperty>
		constexpr auto ResourcePool = 0x2e8; // ObjectProperty
		constexpr auto CombatGameClass = 0x2f0; // ACombatGame*
		constexpr auto TeamMissionActor = 0x2f8; // FMissionActorInfo [0x2]
		constexpr auto NeutralMissionActor = 0x318; // FMissionActorInfo
		constexpr auto PlayerPRIArray = 0x328; // TArray<ObjectProperty>
		constexpr auto ChampionshipManager = 0x338; // ObjectProperty
		constexpr auto CombatSMManager = 0x340; // ObjectProperty
		constexpr auto CurrentGameClassShortName = 0x348; // FName
		constexpr auto GamePlayKillEvent = 0x350; // ObjectProperty
		constexpr auto GamePlayActionEvent = 0x358; // ObjectProperty
		constexpr auto PickupItemActors = 0x360; // TArray<ObjectProperty>
		constexpr auto TotalPickupItemsCount = 0x370; // int32_t
		constexpr auto SeqAct_CombatDelayTime = 0x374; // int32_t
		constexpr auto CompetitiveWarmingUpReamainTime = 0x378; // int32_t
		constexpr auto RandomRecoilSeed = 0x37c; // int32_t
	}

	namespace n_UCombatDataTableRefClanExp {
		constexpr auto Level = 0x6c; // int32_t
		constexpr auto GoalExp = 0x70; // int32_t
		constexpr auto LevelColor = 0x74; // FString
		constexpr auto BoosterCodeName = 0x84; // FString
	}

	namespace n_UInterpGroupAI {
		constexpr auto StageMarkGroup = 0x98; // FName
		constexpr auto SnapToRootBoneLocationWhenFinished = 0xa0; // uint32_t : 1
		constexpr auto bNoEncroachmentCheck = 0xa0; // uint32_t : 1
		constexpr auto bDisableWorldCollision = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreLegacyHeightAdjust = 0xa0; // uint32_t : 1
		constexpr auto bRecreatePreviewPawn = 0xa0; // uint32_t : 1
		constexpr auto bRefreshStageMarkGroup = 0xa0; // uint32_t : 1
	}

	namespace n_UParticleModuleWorldAttractor {
		constexpr auto bParticleLifeRelative = 0x68; // uint32_t : 1
		constexpr auto AttractorInfluence = 0x6c; // FRawDistributionFloat
	}

	namespace n_UUISceneClient {
		constexpr auto VfTable_FExec = 0x70; // FPointer
		constexpr auto RenderViewport = 0x78; // FPointer
		constexpr auto MousePosition = 0x80; // FIntPoint
		constexpr auto DataStoreManager = 0x88; // ObjectProperty
		constexpr auto CanvasToScreen = 0x90; // FMatrix
		constexpr auto InvCanvasToScreen = 0xd0; // FMatrix
		constexpr auto UIScenePostProcess = 0x110; // ObjectProperty
		constexpr auto bEnablePostProcess = 0x118; // uint32_t : 1
	}

	namespace n_UParticleModuleUberRainImpacts {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // uint32_t : 1
		constexpr auto MultiplyX = 0xe4; // uint32_t : 1
		constexpr auto MultiplyY = 0xe4; // uint32_t : 1
		constexpr auto MultiplyZ = 0xe4; // uint32_t : 1
		constexpr auto bIsUsingCylinder = 0xe4; // uint32_t : 1
		constexpr auto bPositive_X = 0xe4; // uint32_t : 1
		constexpr auto bPositive_Y = 0xe4; // uint32_t : 1
		constexpr auto bPositive_Z = 0xe4; // uint32_t : 1
		constexpr auto bNegative_X = 0xe4; // uint32_t : 1
		constexpr auto bNegative_Y = 0xe4; // uint32_t : 1
		constexpr auto bNegative_Z = 0xe4; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xe4; // uint32_t : 1
		constexpr auto bVelocity = 0xe4; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xe4; // uint32_t : 1
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto PC_VelocityScale = 0x10c; // FRawDistributionFloat
		constexpr auto PC_StartLocation = 0x130; // FRawDistributionVector
		constexpr auto PC_StartRadius = 0x154; // FRawDistributionFloat
		constexpr auto PC_StartHeight = 0x178; // FRawDistributionFloat
		constexpr auto PC_HeightAxis = 0x19c; // CylinderHeightAxis
		constexpr auto ColorOverLife = 0x1a0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x1c4; // FRawDistributionFloat
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x244; // ComponentProperty
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
	}

	namespace n_UMobileMenuObjectProxy {
		constexpr auto __OnTouchEvent__Delegate = 0xdc; // DelegateProperty
		constexpr auto __OnRenderObject__Delegate = 0xec; // DelegateProperty
	}

	namespace n_USeqAct_FeatureTest {
		constexpr auto FreezeAtParameters = 0x12c; // FString
		constexpr auto ScreenShotDelay = 0x13c; // float
		constexpr auto ScreenShotName = 0x140; // FString
		constexpr auto RemainingScreenShotDelay = 0x150; // float
	}

	namespace n_UCombatFrontEnd_Sort {
		constexpr auto InvenSortList = 0xd0; // FSortInfo [0x5]
		constexpr auto ShopSortList = 0xf8; // FSortInfo [0x5]
		constexpr auto CurrentSceneType = 0x120; // int32_t
		constexpr auto SelectSortID = 0x124; // int32_t
		constexpr auto bAllSelect = 0x128; // uint32_t : 1
		constexpr auto FilterIDList = 0x12c; // TArray<int32_t>
	}

	namespace n_UGenericParamListStatEntry {
		constexpr auto StatEvent = 0x60; // FPointer
		constexpr auto Writer = 0x68; // ObjectProperty
	}

	namespace n_UNxForceFieldGenericComponent {
		constexpr auto RoughExtentX = 0x2c0; // float
		constexpr auto RoughExtentY = 0x2c4; // float
		constexpr auto RoughExtentZ = 0x2c8; // float
		constexpr auto Coordinates = 0x2cc; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2d0; // FVector
		constexpr auto PositionMultiplierX = 0x2dc; // FVector
		constexpr auto PositionMultiplierY = 0x2e8; // FVector
		constexpr auto PositionMultiplierZ = 0x2f4; // FVector
		constexpr auto PositionTarget = 0x300; // FVector
		constexpr auto VelocityMultiplierX = 0x30c; // FVector
		constexpr auto VelocityMultiplierY = 0x318; // FVector
		constexpr auto VelocityMultiplierZ = 0x324; // FVector
		constexpr auto VelocityTarget = 0x330; // FVector
		constexpr auto Noise = 0x33c; // FVector
		constexpr auto FalloffLinear = 0x348; // FVector
		constexpr auto FalloffQuadratic = 0x354; // FVector
		constexpr auto TorusRadius = 0x360; // float
		constexpr auto Kernel = 0x364; // FPointer
	}

	namespace n_UGripActionNode_MoveToward {
		constexpr auto DestinationType = 0xf4; // ECurAITarget
		constexpr auto bIsWalking = 0xf8; // uint32_t : 1
		constexpr auto RePathFindChangeDist = 0xfc; // float
	}

	namespace n_USpeechRecognition {
		constexpr auto Language = 0x60; // FString
		constexpr auto ConfidenceThreshhold = 0x70; // float
		constexpr auto Vocabularies = 0x74; // TArray<FRecogVocabulary>
		constexpr auto VoiceData = 0x84; // TArray<char>
		constexpr auto WorkingVoiceData = 0x94; // TArray<char>
		constexpr auto UserData = 0xa4; // TArray<char>
		constexpr auto InstanceData = 0xb4; // FRecogUserData [0x4]
		constexpr auto bDirty = 0x104; // uint32_t : 1
		constexpr auto bInitialised = 0x104; // uint32_t : 1
		constexpr auto FnxVoiceData = 0x108; // FPointer
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // uint32_t : 1
		constexpr auto MultiplyY = 0x8c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x8c; // uint32_t : 1
	}

	namespace n_USkelControl_CCD_IK {
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto EffectorSpaceBoneName = 0xe0; // FName
		constexpr auto EffectorTranslationFromBone = 0xe8; // FVector
		constexpr auto NumBones = 0xf4; // int32_t
		constexpr auto MaxPerBoneIterations = 0xf8; // int32_t
		constexpr auto IterationsCount = 0xfc; // int32_t
		constexpr auto Precision = 0x100; // float
		constexpr auto bStartFromTail = 0x104; // uint32_t : 1
		constexpr auto bNoTurnOptimization = 0x104; // uint32_t : 1
		constexpr auto AngleConstraint = 0x108; // TArray<float>
		constexpr auto MaxAngleSteps = 0x118; // float
	}

	namespace n_UCombatCommon_SystemCounter {
		constexpr auto SystemCountList = 0xac; // TArray<FSystemCountInfo>
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0xb0; // FExpressionInput
		constexpr auto Lightmass = 0xe4; // FExpressionInput
	}

	namespace n_AMobileHUD {
		constexpr auto bShowGameHud = 0x564; // uint32_t : 1
		constexpr auto bShowMobileHud = 0x564; // uint32_t : 1
		constexpr auto bForceMobileHUD = 0x564; // uint32_t : 1
		constexpr auto bShowMobileTilt = 0x564; // uint32_t : 1
		constexpr auto bDebugTouches = 0x564; // uint32_t : 1
		constexpr auto bDebugZones = 0x564; // uint32_t : 1
		constexpr auto bDebugZonePresses = 0x564; // uint32_t : 1
		constexpr auto bShowMotionDebug = 0x564; // uint32_t : 1
		constexpr auto JoystickBackground = 0x568; // ObjectProperty
		constexpr auto JoystickBackgroundUVs = 0x570; // FTextureUVs
		constexpr auto JoystickHat = 0x580; // ObjectProperty
		constexpr auto JoystickHatUVs = 0x588; // FTextureUVs
		constexpr auto ButtonImages = 0x598; // ObjectProperty [0x2]
		constexpr auto ButtonUVs = 0x5a8; // FTextureUVs [0x2]
		constexpr auto ButtonFont = 0x5c8; // ObjectProperty
		constexpr auto ButtonCaptionColor = 0x5d0; // FColor
		constexpr auto TrackballBackground = 0x5d4; // ObjectProperty
		constexpr auto TrackballBackgroundUVs = 0x5dc; // FTextureUVs
		constexpr auto TrackballTouchIndicator = 0x5ec; // ObjectProperty
		constexpr auto TrackballTouchIndicatorUVs = 0x5f4; // FTextureUVs
		constexpr auto SliderImages = 0x604; // ObjectProperty [0x4]
		constexpr auto SliderUVs = 0x624; // FTextureUVs [0x4]
		constexpr auto MobileTiltX = 0x664; // float
		constexpr auto MobileTiltY = 0x668; // float
		constexpr auto MobileTiltSize = 0x66c; // float
		constexpr auto KismetRenderEvents = 0x670; // TArray<ObjectProperty>
	}

	namespace n_URB_Spring {
		constexpr auto Component1 = 0x88; // ComponentProperty
		constexpr auto BoneName1 = 0x90; // FName
		constexpr auto Component2 = 0x98; // ComponentProperty
		constexpr auto BoneName2 = 0xa0; // FName
		constexpr auto SceneIndex = 0xa8; // int32_t
		constexpr auto bInHardware = 0xac; // uint32_t : 1
		constexpr auto bEnableForceMassRatio = 0xac; // uint32_t : 1
		constexpr auto SpringData = 0xb0; // FPointer
		constexpr auto TimeSinceActivation = 0xb8; // float
		constexpr auto MinBodyMass = 0xbc; // float
		constexpr auto SpringSaturateDist = 0xc0; // float
		constexpr auto SpringMaxForce = 0xc4; // float
		constexpr auto MaxForceMassRatio = 0xc8; // float
		constexpr auto SpringMaxForceTimeScale = 0xcc; // FInterpCurveFloat
		constexpr auto DampSaturateVel = 0xe0; // float
		constexpr auto DampMaxForce = 0xe4; // float
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto FontParameterValues = 0x29c; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x2ac; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0x2bc; // TArray<FTextureParameterValue>
		constexpr auto VectorParameterValues = 0x2cc; // TArray<FVectorParameterValue>
	}

	namespace n_UCombatDataTableRefPingGroupBindRegion {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto ServiceRegionID = 0x70; // int32_t
		constexpr auto PingGroupID = 0x74; // int32_t
	}

	namespace n_UCombatFrontEnd_Event_TabBase {
		constexpr auto ParentMoviePlayer = 0x60; // ObjectProperty
		constexpr auto bShowTab = 0x68; // uint32_t : 1
	}

	namespace n_ACombatProj_Rocket {
		constexpr auto RocketLifetime = 0x3e4; // float
	}

	namespace n_UCombatDataTableRefMailCategory {
		constexpr auto TabType = 0x6c; // int32_t
		constexpr auto MailType = 0x70; // int32_t
	}

	namespace n_UGameCrowdGroup {
		constexpr auto Members = 0x60; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_ModifyProperty {
		constexpr auto Properties = 0x108; // TArray<FPropertyInfo>
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Percent = 0xe4; // FExpressionInput
		constexpr auto LuminanceFactors = 0x118; // FLinearColor
	}

	namespace n_USeqAct_SubtractFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UCombatDataTableRefSeasonPass {
		constexpr auto Season = 0x6c; // int32_t
		constexpr auto PassType = 0x70; // int32_t
		constexpr auto Level = 0x74; // int32_t
		constexpr auto Exp = 0x78; // int32_t
		constexpr auto TotalExp = 0x7c; // int32_t
		constexpr auto CodenameRewardFree = 0x80; // FString
		constexpr auto CodenameRewardCharge = 0x90; // FString
	}

	namespace n_USeqEvent_Mover {
		constexpr auto StayOpenTime = 0x128; // float
	}

	namespace n_UMorphNodeBase {
		constexpr auto NodeName = 0x68; // FName
		constexpr auto bDrawSlider = 0x70; // uint32_t : 1
	}

	namespace n_ACombatProj_SpecialGrenade {
		constexpr auto Lifetime = 0x3f4; // float
	}

	namespace n_AAmbientSound {
		constexpr auto bAutoPlay = 0x24c; // uint32_t : 1
		constexpr auto bIsPlaying = 0x24c; // uint32_t : 1
		constexpr auto AudioComponent = 0x250; // ComponentProperty
	}

	namespace n_UCombatExplosionLight {
		constexpr auto bInitialized = 0x240; // uint32_t : 1
		constexpr auto Lifetime = 0x244; // float
		constexpr auto TimeShiftIndex = 0x248; // int32_t
		constexpr auto TimeShift = 0x24c; // TArray<FLightValues>
		constexpr auto __OnLightFinished__Delegate = 0x25c; // DelegateProperty
	}

	namespace n_ACombatTeamGameHUD {
		constexpr auto UIState = 0x5b4; // EUIGameStatus
		constexpr auto PrevUIPlayerState = 0x5b5; // EUIPlayerState
		constexpr auto CurrentUIPlayerState = 0x5b6; // EUIPlayerState
		constexpr auto CurrentUIGameStatus = 0x5b7; // EUIGameStatus
		constexpr auto RoundOverDisplayTime = 0x5b8; // float
		constexpr auto NavigationClass = 0x5bc; // ACombatRadarCore*
		constexpr auto NavigationActor = 0x5c4; // ObjectProperty
		constexpr auto RadioSystem = 0x5cc; // ObjectProperty
		constexpr auto HitAmount = 0x5d4; // float
		constexpr auto WeaponAmmoRedEffect = 0x5d8; // TArray<FName>
		constexpr auto LocationLabelUpdateTime = 0x5e8; // float
		constexpr auto IsDisplaySelectingWeapon = 0x5ec; // uint32_t : 1
		constexpr auto bPrintScoreboardDebugMsg = 0x5ec; // uint32_t : 1
		constexpr auto IsTeamChange = 0x5ec; // uint32_t : 1
		constexpr auto bDisplayViewTargetKillMark = 0x5ec; // uint32_t : 1
		constexpr auto TimerDuration_UpdatePlayerScore = 0x5f0; // float
		constexpr auto TimerDuration_ChampionshipPlayerInfoUI = 0x5f4; // float
		constexpr auto TacticalMapRankLabelID = 0x5f8; // int32_t
		constexpr auto pendingMarkerUI = 0x5fc; // ObjectProperty
		constexpr auto ModeNameList = 0x604; // TArray<FModeNameStruct>
		constexpr auto LastVictimName = 0x614; // FString
		constexpr auto UIDataStore_HUD = 0x624; // ObjectProperty
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0x124; // int32_t
		constexpr auto Format = 0x128; // EPixelFormat
	}

	namespace n_UMobileMenuObject {
		constexpr auto bHasBeenInitialized = 0x60; // uint32_t : 1
		constexpr auto bRelativeLeft = 0x60; // uint32_t : 1
		constexpr auto bRelativeTop = 0x60; // uint32_t : 1
		constexpr auto bRelativeWidth = 0x60; // uint32_t : 1
		constexpr auto bRelativeHeight = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleLeft = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleTop = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleWidth = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleHeight = 0x60; // uint32_t : 1
		constexpr auto bHeightRelativeToWidth = 0x60; // uint32_t : 1
		constexpr auto bXOffsetIsActual = 0x60; // uint32_t : 1
		constexpr auto bYOffsetIsActual = 0x60; // uint32_t : 1
		constexpr auto bIsActive = 0x60; // uint32_t : 1
		constexpr auto bIsHidden = 0x60; // uint32_t : 1
		constexpr auto bIsTouched = 0x60; // uint32_t : 1
		constexpr auto bIsHighlighted = 0x60; // uint32_t : 1
		constexpr auto bTellSceneBeforeRendering = 0x60; // uint32_t : 1
		constexpr auto Left = 0x64; // float
		constexpr auto Top = 0x68; // float
		constexpr auto Width = 0x6c; // float
		constexpr auto Height = 0x70; // float
		constexpr auto InitialLeft = 0x74; // float
		constexpr auto InitialTop = 0x78; // float
		constexpr auto InitialWidth = 0x7c; // float
		constexpr auto InitialHeight = 0x80; // float
		constexpr auto AuthoredGlobalScale = 0x84; // float
		constexpr auto TopLeeway = 0x88; // float
		constexpr auto BottomLeeway = 0x8c; // float
		constexpr auto LeftLeeway = 0x90; // float
		constexpr auto RightLeeway = 0x94; // float
		constexpr auto XOffset = 0x98; // float
		constexpr auto YOffset = 0x9c; // float
		constexpr auto Tag = 0xa0; // FString
		constexpr auto InputOwner = 0xb0; // ObjectProperty
		constexpr auto Opacity = 0xb8; // float
		constexpr auto OwnerScene = 0xbc; // ObjectProperty
		constexpr auto RelativeToTag = 0xc4; // FString
		constexpr auto RelativeTo = 0xd4; // ObjectProperty
	}

	namespace n_UCombatWeaponRISBase_Aiming {
		constexpr auto WorldFOVMagnification = 0xc44; // TArray<float>
		constexpr auto OverrideForegroundFOV = 0xc54; // TArray<float>
		constexpr auto OverrideWeaponBobRatio = 0xc64; // TArray<float>
		constexpr auto OverrideWeaponLagRatio = 0xc74; // TArray<float>
		constexpr auto OverrideWeaponZoomDuration = 0xc84; // TArray<float>
		constexpr auto OverrideWeaponFOVDelayRatio = 0xc94; // TArray<float>
		constexpr auto OverrideZoomRotLagRatio = 0xca4; // TArray<float>
		constexpr auto OverrideWeaponFOVInterpSpeed = 0xcb4; // float
		constexpr auto OverrideViewOffset = 0xcb8; // TArray<FVector>
		constexpr auto OverrideBobDamping = 0xcc8; // TArray<float>
		constexpr auto OverrideBobDampingZ = 0xcd8; // TArray<float>
		constexpr auto OverrideZoomAnimBlendTimes = 0xce8; // TArray<float>
		constexpr auto OverrideHideBoneDataByScreenPos = 0xcf8; // TArray<FHideBoneDataByScreenPos>
	}

	namespace n_UDominantDirectionalLightComponent {
		constexpr auto DominantLightShadowInfo = 0x1d0; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x280; // FArray_Mirror
	}

	namespace n_UCombatDataTableRefBasicChat {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Size = 0x80; // int32_t
		constexpr auto DisplayName = 0x84; // FString
	}

	namespace n_UCombatDataTableRefRandomBoxCost {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto BoxResourceIndex = 0x7c; // int32_t
		constexpr auto bChangeScene = 0x80; // uint32_t : 1
	}

	namespace n_UCombatLocaizedChatCommandData {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto StringVal_INT = 0x70; // FString
		constexpr auto StringVal_LOCAL = 0x80; // FString
	}

	namespace n_AGameExplosionActor {
		constexpr auto bHasExploded = 0x244; // uint32_t : 1
		constexpr auto bExplodeMoreThanOnce = 0x244; // uint32_t : 1
		constexpr auto bTrackExplosionParticleSystemLifespan = 0x244; // uint32_t : 1
		constexpr auto bDrawDebug = 0x244; // uint32_t : 1
		constexpr auto ExplosionLight = 0x248; // ComponentProperty
		constexpr auto ExplosionRadialBlur = 0x250; // ComponentProperty
		constexpr auto LightFadeTime = 0x258; // float
		constexpr auto LightFadeTimeRemaining = 0x25c; // float
		constexpr auto LightInitialBrightness = 0x260; // float
		constexpr auto RadialBlurFadeTime = 0x264; // float
		constexpr auto RadialBlurFadeTimeRemaining = 0x268; // float
		constexpr auto RadialBlurMaxBlurAmount = 0x26c; // float
		constexpr auto ExplosionTemplate = 0x270; // ObjectProperty
		constexpr auto RadialImpulseComponent = 0x278; // ComponentProperty
		constexpr auto InstigatorController = 0x280; // ObjectProperty
		constexpr auto HitActorFromPhysMaterialTrace = 0x288; // ObjectProperty
		constexpr auto HitLocationFromPhysMaterialTrace = 0x290; // FVector
		constexpr auto Attachee = 0x29c; // ObjectProperty
		constexpr auto AttacheeController = 0x2a4; // ObjectProperty
		constexpr auto DirectionalExplosionMinDot = 0x2ac; // float
		constexpr auto ExplosionDirection = 0x2b0; // FVector
	}

	namespace n_UCombatDynamicDecal {
		constexpr auto MITV_Decal = 0x3d0; // ObjectProperty
		constexpr auto MIC_Decal = 0x3d8; // ObjectProperty
		constexpr auto Lifetime = 0x3e0; // float
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x7c; // FVector
		constexpr auto Min = 0x88; // FVector
		constexpr auto bLockAxes = 0x94; // uint32_t : 1
		constexpr auto bUseExtremes = 0x94; // uint32_t : 1
		constexpr auto LockedAxes = 0x98; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x99; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_ATargetPoint {
		constexpr auto SpawnRefCount = 0x24c; // int32_t
	}

	namespace n_ULightFunction {
		constexpr auto SourceMaterial = 0x60; // ObjectProperty
		constexpr auto Scale = 0x68; // FVector
		constexpr auto DisabledBrightness = 0x74; // float
	}

	namespace n_UFacebookIntegration {
		constexpr auto AppID = 0x80; // FString
		constexpr auto Permissions = 0x90; // TArray<FString>
		constexpr auto UserName = 0xa0; // FString
		constexpr auto userID = 0xb0; // FString
		constexpr auto AccessToken = 0xc0; // FString
		constexpr auto FriendsList = 0xd0; // TArray<FFacebookFriend>
	}

	namespace n_ACamera {
		constexpr auto PCOwner = 0x244; // ObjectProperty
		constexpr auto CameraStyle = 0x24c; // FName
		constexpr auto DefaultFOV = 0x254; // float
		constexpr auto bLockedFOV = 0x258; // uint32_t : 1
		constexpr auto bConstrainAspectRatio = 0x258; // uint32_t : 1
		constexpr auto bEnableFading = 0x258; // uint32_t : 1
		constexpr auto bFadeAudio = 0x258; // uint32_t : 1
		constexpr auto bForceDisableTemporalAA = 0x258; // uint32_t : 1
		constexpr auto bEnableColorScaling = 0x258; // uint32_t : 1
		constexpr auto bEnableColorScaleInterp = 0x258; // uint32_t : 1
		constexpr auto bUseClientSideCameraUpdates = 0x258; // uint32_t : 1
		constexpr auto bDebugClientSideCamera = 0x258; // uint32_t : 1
		constexpr auto bShouldSendClientSideCameraUpdate = 0x258; // uint32_t : 1
		constexpr auto LockedFOV = 0x25c; // float
		constexpr auto ConstrainedAspectRatio = 0x260; // float
		constexpr auto DefaultAspectRatio = 0x264; // float
		constexpr auto OffAxisYawAngle = 0x268; // float
		constexpr auto OffAxisPitchAngle = 0x26c; // float
		constexpr auto FadeColor = 0x270; // FColor
		constexpr auto FadeAmount = 0x274; // float
		constexpr auto CamOverridePostProcessAlpha = 0x278; // float
		constexpr auto CamPostProcessSettings = 0x27c; // FPostProcessSettings
		constexpr auto RenderingOverrides = 0x3e0; // FRenderingPerformanceOverrides
		constexpr auto ColorScale = 0x3e4; // FVector
		constexpr auto DesiredColorScale = 0x3f0; // FVector
		constexpr auto OriginalColorScale = 0x3fc; // FVector
		constexpr auto ColorScaleInterpDuration = 0x408; // float
		constexpr auto ColorScaleInterpStartTime = 0x40c; // float
		constexpr auto CameraCache = 0x410; // FTCameraCache
		constexpr auto LastFrameCameraCache = 0x430; // FTCameraCache
		constexpr auto ViewTarget = 0x450; // FTViewTarget
		constexpr auto PendingViewTarget = 0x488; // FTViewTarget
		constexpr auto BlendTimeToGo = 0x4c0; // float
		constexpr auto BlendParams = 0x4c4; // FViewTargetTransitionParams
		constexpr auto ModifierList = 0x4d4; // TArray<ObjectProperty>
		constexpr auto FreeCamDistance = 0x4e4; // float
		constexpr auto FreeCamOffset = 0x4e8; // FVector
		constexpr auto FadeAlpha = 0x4f4; // FVector2D
		constexpr auto FadeTime = 0x4fc; // float
		constexpr auto FadeTimeRemaining = 0x500; // float
		constexpr auto FadeDelay = 0x504; // float
		constexpr auto CameraLensEffects = 0x508; // TArray<ObjectProperty>
		constexpr auto CameraShakeCamMod = 0x518; // ObjectProperty
		constexpr auto CameraShakeCamModClass = 0x520; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x528; // ObjectProperty [0x8]
		constexpr auto ActiveAnims = 0x568; // TArray<ObjectProperty>
		constexpr auto FreeAnims = 0x578; // TArray<ObjectProperty>
		constexpr auto AnimCameraActor = 0x588; // ObjectProperty
		constexpr auto AspectRatioAxisConstraint = 0x590; // EAspectRatioAxisConstraint
	}

	namespace n_UParticleModuleSubUVDirect {
		constexpr auto SubUVPosition = 0x68; // FRawDistributionVector
		constexpr auto SubUVSize = 0x8c; // FRawDistributionVector
	}

	namespace n_ACombatWeaponPickupFactory {
		constexpr auto WeaponPickupClass = 0x3c0; // ACombatWeapon*
		constexpr auto WeaponPickupScaling = 0x3c8; // float
		constexpr auto bIsActive = 0x3cc; // uint32_t : 1
		constexpr auto bDrawOutline = 0x3cc; // uint32_t : 1
		constexpr auto bDisplayHUDIcon = 0x3cc; // uint32_t : 1
		constexpr auto bDropSameInventoryGroup = 0x3cc; // uint32_t : 1
		constexpr auto bDestroySameInventoryGroup = 0x3cc; // uint32_t : 1
		constexpr auto OutlineColorForComrade = 0x3d0; // FOutlineProperty
		constexpr auto OutlineColorForEnemy = 0x40c; // FOutlineProperty
		constexpr auto HUDIconType = 0x448; // EObjectIconType
	}

	namespace n_USeqAct_ControlGameMovie {
		constexpr auto MovieName = 0x120; // FString
		constexpr auto StartOfRenderingMovieFrame = 0x130; // int32_t
		constexpr auto EndOfRenderingMovieFrame = 0x134; // int32_t
	}

	namespace n_AWindPointSource {
		constexpr auto Component = 0x244; // ComponentProperty
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x258; // ObjectProperty
		constexpr auto PS_CameraEffectNonExtremeContent = 0x260; // ObjectProperty
		constexpr auto BaseFOV = 0x268; // float
		constexpr auto DistFromCamera = 0x26c; // float
		constexpr auto bAllowMultipleInstances = 0x270; // uint32_t : 1
		constexpr auto EmittersToTreatAsSame = 0x274; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto BaseCamera = 0x284; // ObjectProperty
		constexpr auto DepthGroup = 0x28c; // ESceneDepthPriorityGroup
	}

	namespace n_USeqAct_SpawnGroupIndex {
		constexpr auto SpawnGroupIndex = 0x118; // char
	}

	namespace n_ANxTornadoForceFieldCapsule {
		constexpr auto RenderComponent = 0x2c8; // ComponentProperty
	}

	namespace n_UMaterialExpressionTerrainLayerWeight {
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto Base = 0xb8; // FExpressionInput
		constexpr auto Layer = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewWeight = 0x128; // float
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_UPBRuleNodeQuad {
		constexpr auto Material = 0x70; // ObjectProperty
		constexpr auto RepeatMaxSizeX = 0x78; // float
		constexpr auto RepeatMaxSizeZ = 0x7c; // float
		constexpr auto QuadLightmapRes = 0x80; // int32_t
		constexpr auto YOffset = 0x84; // float
		constexpr auto bDisableMaterialRepeat = 0x88; // uint32_t : 1
	}

	namespace n_ACoverGroup {
		constexpr auto CoverLinkRefs = 0x244; // TArray<FActorReference>
		constexpr auto AutoSelectRadius = 0x254; // float
		constexpr auto AutoSelectHeight = 0x258; // float
	}

	namespace n_UCombatDataTableRefServiceRegion {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto URL = 0x80; // FString
		constexpr auto Port = 0x90; // int32_t
		constexpr auto RegionNameID = 0x94; // int32_t
	}

	namespace n_UCombatTestRTMoviePlayer {
		constexpr auto MyRenderTarget = 0x308; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_Chat {
		constexpr auto LastWhisperSenderName = 0xd0; // FString
		constexpr auto TabLabelIDList = 0xe0; // int32_t [0x3]
		constexpr auto PopUpLabelIDList = 0xec; // int32_t [0x5]
		constexpr auto bPlayScrNotice = 0x100; // uint32_t : 1
		constexpr auto CurrentTabType = 0x104; // int32_t
		constexpr auto CurrentWhisperID = 0x108; // FString
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0xbc; // FName
		constexpr auto ExpressionGUID = 0xc4; // FGuid
		constexpr auto Group = 0xd4; // FName
	}

	namespace n_UCombatDataTableRefCubeBox {
		constexpr auto CubeCodeName = 0x6c; // FString
		constexpr auto GiveType = 0x7c; // int32_t
		constexpr auto ValueMin = 0x80; // int32_t
		constexpr auto ValueMax = 0x84; // int32_t
		constexpr auto OutputCodeName = 0x88; // FString
		constexpr auto JackpotValue = 0x98; // int32_t
		constexpr auto OutputGrade = 0x9c; // int32_t
		constexpr auto EffectType = 0xa0; // int32_t
		constexpr auto FrameType = 0xa4; // int32_t
		constexpr auto TagType = 0xa8; // int32_t
	}

	namespace n_UCombatDataTableRefARaceEquip {
		constexpr auto DataLoadType = 0x6c; // int32_t
		constexpr auto GroupCodeName = 0x70; // FString
		constexpr auto PrimaryWeapon = 0x80; // FString
		constexpr auto SubWeapon = 0x90; // FString
		constexpr auto MeleeWeapon = 0xa0; // FString
		constexpr auto ETCWeapon = 0xb0; // FString
		constexpr auto ChipA = 0xc0; // FString
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x60; // FSoundClassProperties
		constexpr auto ChildClassNames = 0x80; // TArray<FName>
		constexpr auto bIsChild = 0x90; // uint32_t : 1
		constexpr auto EditorData = 0x94; // TMap<None, None>
	}

	namespace n_USeqAct_SetSoundMode {
		constexpr auto SoundMode = 0x108; // ObjectProperty
		constexpr auto bTopPriority = 0x110; // uint32_t : 1
	}

	namespace n_UCombatGameOptionTransaction {
		constexpr auto Invite_Auto_Regist = 0x60; // char
		constexpr auto Friend_Invite_Refuse = 0x61; // char
		constexpr auto Minimap_Size_Step = 0x62; // char
		constexpr auto Save_Minimap_Size_Step = 0x63; // char
	}

	namespace n_UCCSActorFactory {
		constexpr auto ControllerClass = 0x9c; // ACCSController*
		constexpr auto BehaviorTree = 0xa4; // ObjectProperty
		constexpr auto PawnClass = 0xac; // APawn*
		constexpr auto PawnName = 0xb4; // FString
		constexpr auto Config = 0xc4; // FCCSSystemConfigData
		constexpr auto bGiveDefaultInventory = 0xf0; // uint32_t : 1
		constexpr auto InventoryList = 0xf4; // TArray<AInventory*>
		constexpr auto TeamIndex = 0x104; // int32_t
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0xb0; // float
	}

	namespace n_UGripAction_MoveToward {
		constexpr auto ActionNode = 0x78; // ObjectProperty
	}

	namespace n_UDistributionFloatUniformRange {
		constexpr auto MaxHigh = 0x7c; // float
		constexpr auto MaxLow = 0x80; // float
		constexpr auto MinHigh = 0x84; // float
		constexpr auto MinLow = 0x88; // float
		constexpr auto bMirrorMaxMin = 0x8c; // uint32_t : 1
	}

	namespace n_USoundNodeAmbientNonLoop {
		constexpr auto DelayMin = 0xb0; // float
		constexpr auto DelayMax = 0xb4; // float
		constexpr auto DelayTime = 0xb8; // FRawDistributionFloat
	}

	namespace n_UPBRuleNodeVariation {
		constexpr auto bVariationOfScopeOnLeft = 0x70; // uint32_t : 1
	}

	namespace n_UGameMessage {
		constexpr auto SwitchLevelMessage = 0x74; // FString
		constexpr auto LeftMessage = 0x84; // FString
		constexpr auto FailedTeamMessage = 0x94; // FString
		constexpr auto FailedPlaceMessage = 0xa4; // FString
		constexpr auto FailedSpawnMessage = 0xb4; // FString
		constexpr auto EnteredMessage = 0xc4; // FString
		constexpr auto MaxedOutMessage = 0xd4; // FString
		constexpr auto ArbitrationMessage = 0xe4; // FString
		constexpr auto OvertimeMessage = 0xf4; // FString
		constexpr auto GlobalNameChange = 0x104; // FString
		constexpr auto NewTeamMessage = 0x114; // FString
		constexpr auto NewTeamMessageTrailer = 0x124; // FString
		constexpr auto NoNameChange = 0x134; // FString
		constexpr auto VoteStarted = 0x144; // FString
		constexpr auto VotePassed = 0x154; // FString
		constexpr auto MustHaveStats = 0x164; // FString
		constexpr auto CantBeSpectator = 0x174; // FString
		constexpr auto CantBePlayer = 0x184; // FString
		constexpr auto BecameSpectator = 0x194; // FString
		constexpr auto NewPlayerMessage = 0x1a4; // FString
		constexpr auto KickWarning = 0x1b4; // FString
		constexpr auto NewSpecMessage = 0x1c4; // FString
		constexpr auto SpecEnteredMessage = 0x1d4; // FString
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UCombatAnimBlendByDamageType {
		constexpr auto Owner = 0x120; // ObjectProperty
	}

	namespace n_ACombatHUD_PracticeGame {
		constexpr auto PracticeGameMovie = 0x62c; // ObjectProperty
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x244; // ComponentProperty
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
	}

	namespace n_ACombatFlashExplosionActor {
		constexpr auto FlashEffectDataList = 0x2dc; // TArray<FFlashEffectDataStruct>
		constexpr auto DefaultFlashEffectPlayTime = 0x2ec; // float
		constexpr auto __RangeSort__Delegate = 0x2f0; // DelegateProperty
	}

	namespace n_AGamePawn {
		constexpr auto bLastHitWasHeadShot = 0x558; // uint32_t : 1
		constexpr auto bRespondToExplosions = 0x558; // uint32_t : 1
	}

	namespace n_USpeedTreeComponentFactory {
		constexpr auto SpeedTreeComponent = 0x64; // ComponentProperty
	}

	namespace n_UTexture {
		constexpr auto SRGB = 0x60; // uint32_t : 1
		constexpr auto RGBE = 0x60; // uint32_t : 1
		constexpr auto bIsSourceArtUncompressed = 0x60; // uint32_t : 1
		constexpr auto CompressionNoAlpha = 0x60; // uint32_t : 1
		constexpr auto CompressionNone = 0x60; // uint32_t : 1
		constexpr auto CompressionNoMipmaps = 0x60; // uint32_t : 1
		constexpr auto CompressionFullDynamicRange = 0x60; // uint32_t : 1
		constexpr auto DeferCompression = 0x60; // uint32_t : 1
		constexpr auto NeverStream = 0x60; // uint32_t : 1
		constexpr auto bDitherMipMapAlpha = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderR = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderG = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderB = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderA = 0x60; // uint32_t : 1
		constexpr auto bNoTiling = 0x60; // uint32_t : 1
		constexpr auto bForcePVRTC4 = 0x60; // uint32_t : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // uint32_t : 1
		constexpr auto bUseCinematicMipLevels = 0x60; // uint32_t : 1
		constexpr auto IsMipmappedSourceArt = 0x60; // uint32_t : 1
		constexpr auto UnpackMin = 0x64; // float [0x4]
		constexpr auto UnpackMax = 0x74; // float [0x4]
		constexpr auto SourceArt = 0x84; // FUntypedBulkData_Mirror
		constexpr auto CompressionSettings = 0xc4; // TextureCompressionSettings
		constexpr auto Filter = 0xc5; // TextureFilter
		constexpr auto LODGroup = 0xc6; // TextureGroup
		constexpr auto CachedLODGroup = 0xc7; // TextureGroup
		constexpr auto MipGenSettings = 0xc8; // TextureMipGenSettings
		constexpr auto TextureFilterEdgeType = 0xc9; // ETextureFilterEdgeType
		constexpr auto LODBias = 0xcc; // int32_t
		constexpr auto CachedCombinedLODBias = 0xd0; // int32_t
		constexpr auto NumCinematicMipLevels = 0xd4; // int32_t
		constexpr auto Resource = 0xd8; // FPointer
		constexpr auto AdjustBrightness = 0xe0; // float
		constexpr auto AdjustBrightnessCurve = 0xe4; // float
		constexpr auto AdjustVibrance = 0xe8; // float
		constexpr auto AdjustSaturation = 0xec; // float
		constexpr auto AdjustRGBCurve = 0xf0; // float
		constexpr auto AdjustHue = 0xf4; // float
		constexpr auto InternalFormatLODBias = 0xf8; // int32_t
		constexpr auto BrightnessStep = 0xfc; // float
		constexpr auto ApplyFilteringMip = 0x100; // int32_t
		constexpr auto FilterAngle = 0x104; // float
		constexpr auto MipFilterAnglePerLevelScale = 0x108; // float
		constexpr auto FilterEdgeWidth = 0x10c; // float
		constexpr auto NumSourceArtMips = 0x110; // int32_t
		constexpr auto SourceArtWidth = 0x114; // int32_t
		constexpr auto SourceArtHeight = 0x118; // int32_t
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x68; // FRawDistributionVector
		constexpr auto Range = 0x8c; // FRawDistributionFloat
		constexpr auto Strength = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd4; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0xd4; // uint32_t : 1
		constexpr auto bOverrideVelocity = 0xd4; // uint32_t : 1
		constexpr auto bUseWorldSpacePosition = 0xd4; // uint32_t : 1
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x6c; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x70; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x94; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xbc; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xc0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0xe4; // FOrbitOptions
	}

	namespace n_AFluidSurfaceActor {
		constexpr auto FluidComponent = 0x244; // ComponentProperty
		constexpr auto ProjectileEntryEffect = 0x24c; // ObjectProperty
	}

	namespace n_UWebResponse {
		constexpr auto Headers = 0x60; // TArray<FString>
		constexpr auto ReplacementMap = 0x70; // FMap_Mirror
		constexpr auto IncludePath = 0xb8; // FString
		constexpr auto CharSet = 0xc8; // FString
		constexpr auto Connection = 0xd8; // ObjectProperty
		constexpr auto bSentText = 0xe0; // uint32_t : 1
		constexpr auto bSentResponse = 0xe0; // uint32_t : 1
	}

	namespace n_AImageReflectionSceneCapture {
		constexpr auto DepthRange = 0x258; // float
		constexpr auto ColorRange = 0x25c; // float
	}

	namespace n_URB_ConstraintDrawComponent {
		constexpr auto LimitMaterial = 0x250; // ObjectProperty
	}

	namespace n_UCBUIDataStore_Mission {
		constexpr auto MissionList = 0x98; // TArray<FUIMissionStruct>
		constexpr auto ModeGroupList = 0xa8; // TArray<FUIModeGroupStruct>
		constexpr auto ModeList = 0xb8; // TArray<FUIModeStruct>
		constexpr auto MapList = 0xc8; // TArray<FUIMapStruct>
		constexpr auto ModeGroupBindList = 0xd8; // TArray<FUIModeGroupBindStruct>
		constexpr auto ModeMapList = 0xe8; // TArray<FUIModeMapStruct>
		constexpr auto MissionServiceOffList = 0xf8; // TArray<int32_t>
		constexpr auto MissionModeServiceOffList = 0x108; // TArray<int32_t>
		constexpr auto ModeServiceOffList = 0x118; // TArray<int32_t>
		constexpr auto ModeMapServiceOffList = 0x128; // TArray<int32_t>
		constexpr auto MapServiceOffList = 0x138; // TArray<int32_t>
		constexpr auto ModeGroupServiceOffList = 0x148; // TArray<int32_t>
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0xa0; // FInterpCurveVector
		constexpr auto EulerTrack = 0xb4; // FInterpCurveVector
		constexpr auto LookupTrack = 0xc8; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xd8; // FName
		constexpr auto LinCurveTension = 0xe0; // float
		constexpr auto AngCurveTension = 0xe4; // float
		constexpr auto bUseQuatInterpolation = 0xe8; // uint32_t : 1
		constexpr auto bShowArrowAtKeys = 0xe8; // uint32_t : 1
		constexpr auto bDisableMovement = 0xe8; // uint32_t : 1
		constexpr auto bShowTranslationOnCurveEd = 0xe8; // uint32_t : 1
		constexpr auto bShowRotationOnCurveEd = 0xe8; // uint32_t : 1
		constexpr auto bHide3DTrack = 0xe8; // uint32_t : 1
		constexpr auto MoveFrame = 0xec; // EInterpTrackMoveFrame
		constexpr auto RotMode = 0xed; // EInterpTrackMoveRotMode
	}

	namespace n_UAnimNotify_CameraEffect {
		constexpr auto CameraLensEffect = 0x60; // AEmitterCameraLensEffectBase*
	}

	namespace n_USeqVar_Vector {
		constexpr auto VectValue = 0xa0; // FVector
	}

	namespace n_USeqAct_AddRemoveFaceFXAnimSet {
		constexpr auto FaceFXAnimSets = 0x108; // TArray<ObjectProperty>
	}

	namespace n_ACombatSprayDecalActor {
		constexpr auto SprayID = 0x254; // int32_t
		constexpr auto Angle = 0x258; // float
		constexpr auto SprayedTime = 0x25c; // float
		constexpr auto SprayDecalFarPlane = 0x260; // float
		constexpr auto SprayFloatDist = 0x264; // float
		constexpr auto SprayPreviewAlpha = 0x268; // float
		constexpr auto SpraySyncTime = 0x26c; // int32_t
		constexpr auto SpraySound_1p = 0x270; // ObjectProperty
		constexpr auto SpraySound_3p = 0x278; // ObjectProperty
		constexpr auto SprayMIC = 0x280; // ObjectProperty
		constexpr auto CachedDecalManager = 0x288; // ObjectProperty
		constexpr auto CachedGRI = 0x290; // ObjectProperty
		constexpr auto LastSprayLocation = 0x298; // FVector
		constexpr auto bIsPreviewSpray = 0x2a4; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_RotationInfoPopup {
		constexpr auto MaxRotationGroup = 0xd0; // int32_t
		constexpr auto CurrentRotationGroup = 0xd4; // int32_t
		constexpr auto CurrentPriceType = 0xd8; // int32_t
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x60; // uint32_t : 1
		constexpr auto bUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bFinalUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bCurvesAsColor = 0x60; // uint32_t : 1
		constexpr auto b3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bSupported3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bEnabled = 0x60; // uint32_t : 1
		constexpr auto bEditable = 0x60; // uint32_t : 1
		constexpr auto LODDuplicate = 0x60; // uint32_t : 1
		constexpr auto bSupportsRandomSeed = 0x60; // uint32_t : 1
		constexpr auto bRequiresLoopingNotification = 0x60; // uint32_t : 1
		constexpr auto LODValidity = 0x64; // char
	}

	namespace n_USeqAct_GetVelocity {
		constexpr auto VelocityMag = 0x108; // float
		constexpr auto VelocityVect = 0x10c; // FVector
	}

	namespace n_ACombatWaveBotController {
		constexpr auto LastJumpOverWallTime = 0x5e8; // float
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x68; // uint32_t : 1
		constexpr auto bApplyOwnerScale = 0x68; // uint32_t : 1
	}

	namespace n_UUIDataProvider_OnlineFriends {
		constexpr auto FriendsList = 0x74; // TArray<FOnlineFriend>
		constexpr auto NickNameCol = 0x84; // FString
		constexpr auto PresenceInfoCol = 0x94; // FString
		constexpr auto FriendStateCol = 0xa4; // FString
		constexpr auto bIsOnlineCol = 0xb4; // FString
		constexpr auto bIsPlayingCol = 0xc4; // FString
		constexpr auto bIsPlayingThisGameCol = 0xd4; // FString
		constexpr auto bIsJoinableCol = 0xe4; // FString
		constexpr auto bHasVoiceSupportCol = 0xf4; // FString
		constexpr auto bHaveInvitedCol = 0x104; // FString
		constexpr auto bHasInvitedYouCol = 0x114; // FString
		constexpr auto OfflineText = 0x124; // FString
		constexpr auto OnlineText = 0x134; // FString
		constexpr auto AwayText = 0x144; // FString
		constexpr auto BusyText = 0x154; // FString
	}

	namespace n_UGameplayEventsReader {
		constexpr auto RegisteredHandlers = 0x1c0; // TArray<ObjectProperty>
	}

	namespace n_ACombatDecalManager {
		constexpr auto MinDecalDistanceSq = 0x280; // float
		constexpr auto ActiveSprays = 0x284; // TArray<ObjectProperty>
		constexpr auto LevelDecals = 0x294; // TArray<ObjectProperty>
		constexpr auto SprayDecalBaseDepthBias = 0x2a4; // float
		constexpr auto LevelDecalBaseDepthBias = 0x2a8; // float
		constexpr auto __SpraySort__Delegate = 0x2ac; // DelegateProperty
	}

	namespace n_UCombatMatchroomAutoMatchingBase {
		constexpr auto RoomState_PracticeBtn_old = 0x74; // int32_t
		constexpr auto MyState_PracticeBtn_old = 0x78; // int32_t
	}

	namespace n_UCombatHUD_SelectSkillList {
		constexpr auto bTryShowSkillList = 0xc0; // uint32_t : 1
		constexpr auto binitCreateSkilldata = 0xc0; // uint32_t : 1
		constexpr auto CurrentGroupIndex = 0xc4; // int32_t
		constexpr auto UnlockAnimPlayedIndices = 0xc8; // TArray<int32_t>
	}

	namespace n_UCCSBTMelee {
		constexpr auto BlendInTime = 0xd4; // float
		constexpr auto BlendOutTime = 0xd8; // float
		constexpr auto MeleeBlendName = 0xdc; // FName
		constexpr auto MeleeSequenceName = 0xe4; // FName
		constexpr auto MeleeBlend = 0xec; // ObjectProperty
		constexpr auto MeleeSequence = 0xf4; // ObjectProperty
	}

	namespace n_USeqAct_MobileRemoveInputZone {
		constexpr auto ZoneName = 0x108; // FString
	}

	namespace n_UCombatDataTableRefFilter {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto SceneType = 0x70; // int32_t
		constexpr auto MainMenu = 0x74; // int32_t
		constexpr auto SubMenu = 0x78; // int32_t
		constexpr auto MenuNameID = 0x7c; // int32_t
		constexpr auto ItemType = 0x80; // int32_t [0x3]
	}

	namespace n_USeqAct_CombatDisplayMessage {
		constexpr auto Message = 0x108; // FString
	}

	namespace n_UMobileMenuBar {
		constexpr auto bIsVertical = 0xdc; // uint32_t : 1
		constexpr auto bDirty = 0xdc; // uint32_t : 1
		constexpr auto SelectedIndex = 0xe0; // int32_t
		constexpr auto FirstItem = 0xe4; // int32_t
		constexpr auto Items = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_UMobileMenuScene {
		constexpr auto MenuName = 0x60; // FString
		constexpr auto MenuObjects = 0x70; // TArray<ObjectProperty>
		constexpr auto SceneCaptionFont = 0x80; // ObjectProperty
		constexpr auto InputOwner = 0x88; // ObjectProperty
		constexpr auto bSceneDoesNotRequireInput = 0x90; // uint32_t : 1
		constexpr auto bRelativeLeft = 0x90; // uint32_t : 1
		constexpr auto bRelativeTop = 0x90; // uint32_t : 1
		constexpr auto bRelativeWidth = 0x90; // uint32_t : 1
		constexpr auto bRelativeHeight = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleLeft = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleTop = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleWidth = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleHeight = 0x90; // uint32_t : 1
		constexpr auto TouchpadIndex = 0x94; // char
		constexpr auto Left = 0x98; // float
		constexpr auto Top = 0x9c; // float
		constexpr auto Width = 0xa0; // float
		constexpr auto Height = 0xa4; // float
		constexpr auto InitialLeft = 0xa8; // float
		constexpr auto InitialTop = 0xac; // float
		constexpr auto InitialWidth = 0xb0; // float
		constexpr auto InitialHeight = 0xb4; // float
		constexpr auto AuthoredGlobalScale = 0xb8; // float
		constexpr auto Opacity = 0xbc; // float
		constexpr auto UITouchSound = 0xc0; // ObjectProperty
		constexpr auto UIUnTouchSound = 0xc8; // ObjectProperty
	}

	namespace n_UPartyBeaconHost {
		constexpr auto Clients = 0x98; // TArray<FClientBeaconConnection>
		constexpr auto NumTeams = 0xa8; // int32_t
		constexpr auto NumPlayersPerTeam = 0xac; // int32_t
		constexpr auto NumReservations = 0xb0; // int32_t
		constexpr auto NumConsumedReservations = 0xb4; // int32_t
		constexpr auto Reservations = 0xb8; // TArray<FPartyReservation>
		constexpr auto OnlineSessionName = 0xc8; // FName
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto ForceTeamNum = 0xd4; // int32_t
		constexpr auto ReservedHostTeamNum = 0xd8; // int32_t
		constexpr auto bBestFitTeamAssignment = 0xdc; // uint32_t : 1
		constexpr auto BeaconState = 0xe0; // EPartyBeaconHostState
		constexpr auto __OnReservationChange__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnReservationsFull__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnClientCancellationReceived__Delegate = 0x104; // DelegateProperty
	}

	namespace n_USkelControlWheel {
		constexpr auto WheelDisplacement = 0x100; // float
		constexpr auto WheelMaxRenderDisplacement = 0x104; // float
		constexpr auto WheelRoll = 0x108; // float
		constexpr auto WheelRollAxis = 0x10c; // EAxis
		constexpr auto WheelSteeringAxis = 0x10d; // EAxis
		constexpr auto WheelSteering = 0x110; // float
		constexpr auto bInvertWheelRoll = 0x114; // uint32_t : 1
		constexpr auto bInvertWheelSteering = 0x114; // uint32_t : 1
	}

	namespace n_UCombatPlayerInput {
		constexpr auto LastDuckTime = 0x2ec; // float
		constexpr auto bHoldDuck = 0x2f0; // uint32_t : 1
		constexpr auto bAutoCenterPitch = 0x2f0; // uint32_t : 1
		constexpr auto ToggleMoveTest = 0x2f0; // uint32_t : 1
		constexpr auto ForcedDoubleClick = 0x2f4; // EDoubleClickDir
		constexpr auto PitchAutoCenterSpeed = 0x2f8; // float
		constexpr auto PitchAutoCenterSpeedRoadieRun = 0x2fc; // float
		constexpr auto PitchAutoCenterDelay = 0x300; // float
		constexpr auto DuckDelayTime = 0x304; // float
		constexpr auto PitchAutoCenterDelayCount = 0x308; // float
		constexpr auto PitchAutoCenterHorizonOffset = 0x30c; // float
		constexpr auto ForcePitchCenteringSpeed = 0x310; // float
		constexpr auto ForcedPitchCenteringHorizonOffset = 0x314; // float
		constexpr auto PitchAutoCenterTargetPitchWindow = 0x318; // FVector2D
		constexpr auto SprintTurnScale = 0x320; // float
		constexpr auto SlidingTurnScale = 0x324; // float
		constexpr auto MouseSensitivityMax = 0x328; // float
		constexpr auto MouseSensitivityMin = 0x32c; // float
		constexpr auto MouseSensitivityStep = 0x330; // float
		constexpr auto WeaponMouseSens = 0x334; // float
		constexpr auto PresetWeaponMouseSens = 0x338; // FsMouseSens [0x4]
		constexpr auto bForceWalk = 0x3e8; // int32_t
		constexpr auto bForceLeft = 0x3ec; // int32_t
		constexpr auto ForceTurn = 0x3f0; // float
		constexpr auto LastToggleChaFXItemTime = 0x3f4; // float
	}

	namespace n_UNavMeshGoal_Null {
		constexpr auto PartialGoal = 0x7c; // FPointer
	}

	namespace n_UMaterialExpressionFlipBookSample {
		constexpr auto CoordinateIndex = 0x120; // int32_t
	}

	namespace n_UCombatDataTableRefPickup {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto MainAmmoRate = 0x80; // int32_t
		constexpr auto SubAmmoRate = 0x84; // int32_t
		constexpr auto GrenadeRate_A = 0x88; // int32_t
		constexpr auto GrenadeRate_B = 0x8c; // int32_t
		constexpr auto GrenadeRate_C = 0x90; // int32_t
		constexpr auto CureHealthRate = 0x94; // int32_t
		constexpr auto ScriptFileName = 0x98; // FString
		constexpr auto StringID = 0xa8; // int32_t
	}

	namespace n_UMaterialInterface {
		constexpr auto ParentRefFence = 0x60; // FRenderCommandFence_Mirror
		constexpr auto LightmassSettings = 0x64; // FLightmassMaterialInterfaceSettings
		constexpr auto bHasQualitySwitch = 0x80; // uint32_t : 1
		constexpr auto bAutoFlattenMobile = 0x80; // uint32_t : 1
		constexpr auto bAutoFlattenMobileNormalTexture = 0x80; // uint32_t : 1
		constexpr auto bMobileAllowFog = 0x80; // uint32_t : 1
		constexpr auto bGenerateSubUV = 0x80; // uint32_t : 1
		constexpr auto bUseMobileSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobileVertexSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobilePixelSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobileBumpOffset = 0x80; // uint32_t : 1
		constexpr auto bLockColorBlending = 0x80; // uint32_t : 1
		constexpr auto bUseMobileUniformColorMultiply = 0x80; // uint32_t : 1
		constexpr auto bUseMobileVertexColorMultiply = 0x80; // uint32_t : 1
		constexpr auto bUseMobileDetailNormal = 0x80; // uint32_t : 1
		constexpr auto bBaseTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bEmissiveTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bNormalTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bMaskTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bDetailTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bUseMobileWaveVertexMovement = 0x80; // uint32_t : 1
		constexpr auto bMobileEnableBounceLight = 0x80; // uint32_t : 1
		constexpr auto FlattenBackgroundColor = 0x84; // FColor
		constexpr auto MobileBaseTexture = 0x88; // ObjectProperty
		constexpr auto FlattenedTexture = 0x90; // ObjectProperty
		constexpr auto MobileBaseTextureTexCoordsSource = 0x98; // EMobileTexCoordsSource
		constexpr auto MobileAmbientOcclusionSource = 0x99; // EMobileAmbientOcclusionSource
		constexpr auto MobileSpecularMask = 0x9a; // EMobileSpecularMask
		constexpr auto MobileEmissiveColorSource = 0x9b; // EMobileEmissiveColorSource
		constexpr auto MobileEmissiveMaskSource = 0x9c; // EMobileValueSource
		constexpr auto MobileEnvironmentMaskSource = 0x9d; // EMobileValueSource
		constexpr auto MobileEnvironmentBlendMode = 0x9e; // EMobileEnvironmentBlendMode
		constexpr auto MobileRimLightingMaskSource = 0x9f; // EMobileValueSource
		constexpr auto MobileMaskTextureTexCoordsSource = 0xa0; // EMobileTexCoordsSource
		constexpr auto MobileAlphaValueSource = 0xa1; // EMobileAlphaValueSource
		constexpr auto MobileDetailTextureTexCoordsSource = 0xa2; // EMobileTexCoordsSource
		constexpr auto MobileTextureBlendFactorSource = 0xa3; // EMobileTextureBlendFactorSource
		constexpr auto MobileColorMultiplySource = 0xa4; // EMobileColorMultiplySource
		constexpr auto MobileNormalTexture = 0xa8; // ObjectProperty
		constexpr auto SubUVFrameRate = 0xb0; // float
		constexpr auto SubUVFrameCountAlongAxes = 0xb4; // int32_t
		constexpr auto SubUVFrameSize = 0xb8; // float
		constexpr auto MobileSpecularColor = 0xbc; // FLinearColor
		constexpr auto MobileSpecularPower = 0xcc; // float
		constexpr auto MobileEmissiveTexture = 0xd0; // ObjectProperty
		constexpr auto MobileEmissiveColor = 0xd8; // FLinearColor
		constexpr auto MobileEnvironmentTexture = 0xe8; // ObjectProperty
		constexpr auto MobileEnvironmentAmount = 0xf0; // float
		constexpr auto MobileEnvironmentColor = 0xf4; // FLinearColor
		constexpr auto MobileEnvironmentFresnelAmount = 0x104; // float
		constexpr auto MobileEnvironmentFresnelExponent = 0x108; // float
		constexpr auto MobileRimLightingStrength = 0x10c; // float
		constexpr auto MobileRimLightingExponent = 0x110; // float
		constexpr auto MobileRimLightingColor = 0x114; // FLinearColor
		constexpr auto MobileBumpOffsetReferencePlane = 0x124; // float
		constexpr auto MobileBumpOffsetHeightRatio = 0x128; // float
		constexpr auto MobileMaskTexture = 0x12c; // ObjectProperty
		constexpr auto MobileOpacityMultiplier = 0x134; // float
		constexpr auto MobileDetailTexture = 0x138; // ObjectProperty
		constexpr auto MobileDetailTexture2 = 0x140; // ObjectProperty
		constexpr auto MobileDetailTexture3 = 0x148; // ObjectProperty
		constexpr auto DefaultUniformColor = 0x150; // FLinearColor
		constexpr auto MobileDefaultUniformColor = 0x160; // FLinearColor
		constexpr auto TransformCenterX = 0x170; // float
		constexpr auto MobileTransformCenterX = 0x174; // float
		constexpr auto TransformCenterY = 0x178; // float
		constexpr auto MobileTransformCenterY = 0x17c; // float
		constexpr auto PannerSpeedX = 0x180; // float
		constexpr auto MobilePannerSpeedX = 0x184; // float
		constexpr auto PannerSpeedY = 0x188; // float
		constexpr auto MobilePannerSpeedY = 0x18c; // float
		constexpr auto RotateSpeed = 0x190; // float
		constexpr auto MobileRotateSpeed = 0x194; // float
		constexpr auto FixedScaleX = 0x198; // float
		constexpr auto MobileFixedScaleX = 0x19c; // float
		constexpr auto FixedScaleY = 0x1a0; // float
		constexpr auto MobileFixedScaleY = 0x1a4; // float
		constexpr auto SineScaleX = 0x1a8; // float
		constexpr auto MobileSineScaleX = 0x1ac; // float
		constexpr auto SineScaleY = 0x1b0; // float
		constexpr auto MobileSineScaleY = 0x1b4; // float
		constexpr auto SineScaleFrequencyMultipler = 0x1b8; // float
		constexpr auto MobileSineScaleFrequencyMultipler = 0x1bc; // float
		constexpr auto FixedOffsetX = 0x1c0; // float
		constexpr auto MobileFixedOffsetX = 0x1c4; // float
		constexpr auto FixedOffsetY = 0x1c8; // float
		constexpr auto MobileFixedOffsetY = 0x1cc; // float
		constexpr auto MobileTangentVertexFrequencyMultiplier = 0x1d0; // float
		constexpr auto MobileVerticalFrequencyMultiplier = 0x1d4; // float
		constexpr auto MobileMaxVertexMovementAmplitude = 0x1d8; // float
		constexpr auto MobileSwayFrequencyMultiplier = 0x1dc; // float
		constexpr auto MobileSwayMaxAngle = 0x1e0; // float
		constexpr auto MobileDirectionalLightDirection = 0x1e4; // FVector
		constexpr auto MobileDirectionalLightBrightness = 0x1f0; // float
		constexpr auto MobileDirectionalLightColor = 0x1f4; // FColor
		constexpr auto MobileBounceLightDirection = 0x1f8; // FVector
		constexpr auto MobileBounceLightBrightness = 0x204; // float
		constexpr auto MobileBounceLightColor = 0x208; // FColor
		constexpr auto MobileSkyLightBrightness = 0x20c; // float
		constexpr auto MobileSkyLightColor = 0x210; // FColor
	}

	namespace n_USceneCaptureComponent {
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto bEnablePostProcess = 0x88; // uint32_t : 1
		constexpr auto bEnableFog = 0x88; // uint32_t : 1
		constexpr auto bUseMainScenePostProcessSettings = 0x88; // uint32_t : 1
		constexpr auto bSkipUpdateIfTextureUsersOccluded = 0x88; // uint32_t : 1
		constexpr auto bSkipUpdateIfOwnerOccluded = 0x88; // uint32_t : 1
		constexpr auto bSkipRenderingDepthPrepass = 0x88; // uint32_t : 1
		constexpr auto ClearColor = 0x8c; // FColor
		constexpr auto ViewMode = 0x90; // ESceneCaptureViewMode
		constexpr auto SceneLOD = 0x94; // int32_t
		constexpr auto FrameRate = 0x98; // float
		constexpr auto PostProcess = 0x9c; // ObjectProperty
		constexpr auto MaxUpdateDist = 0xa4; // float
		constexpr auto MaxViewDistanceOverride = 0xa8; // float
		constexpr auto MaxStreamingUpdateDist = 0xac; // float
		constexpr auto CaptureInfo = 0xb0; // FPointer
		constexpr auto ViewState = 0xb8; // FPointer
		constexpr auto PostProcessProxies = 0xc0; // TArray<FPointer>
	}

	namespace n_UCombatBGMPlayer {
		constexpr auto BGM_AC = 0x60; // ComponentProperty
		constexpr auto BGMSoundCue = 0x68; // ObjectProperty
	}

	namespace n_ACombatWavePawnBase {
		constexpr auto VfTable_Iinterface_WavePawn = 0x11f0; // FPointer
		constexpr auto WavePawnData = 0x11f8; // FWavePawnData
	}

	namespace n_ADoorMarker {
		constexpr auto MyDoor = 0x33c; // ObjectProperty
		constexpr auto DoorType = 0x344; // EDoorType
		constexpr auto DoorTrigger = 0x348; // ObjectProperty
		constexpr auto bWaitUntilCompletelyOpened = 0x350; // uint32_t : 1
		constexpr auto bInitiallyClosed = 0x350; // uint32_t : 1
		constexpr auto bBlockedWhenClosed = 0x350; // uint32_t : 1
		constexpr auto bDoorOpen = 0x350; // uint32_t : 1
		constexpr auto bTempDisabledCollision = 0x350; // uint32_t : 1
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto AGreaterThanB = 0x118; // FExpressionInput
		constexpr auto AEqualsB = 0x14c; // FExpressionInput
		constexpr auto ALessThanB = 0x180; // FExpressionInput
	}

	namespace n_ASceneCapture2DActor {
		constexpr auto DrawFrustum = 0x24c; // ComponentProperty
	}

	namespace n_UParticleSystem {
		constexpr auto Origin = 0x60; // FVector
		constexpr auto RotOrigin = 0x6c; // FRotator
		constexpr auto Prioty = 0x78; // int32_t
		constexpr auto SystemUpdateMode = 0x7c; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0x7d; // ParticleSystemLODMethod
		constexpr auto OcclusionBoundsMethod = 0x7e; // EParticleSystemOcclusionBoundsMethod
		constexpr auto OverrideDPG = 0x7f; // ESceneDepthPriorityGroup
		constexpr auto UpdateTime_FPS = 0x80; // float
		constexpr auto UpdateTime_Delta = 0x84; // float
		constexpr auto WarmupTime = 0x88; // float
		constexpr auto WarmupTickRate = 0x8c; // float
		constexpr auto Emitters = 0x90; // TArray<ObjectProperty>
		constexpr auto PreviewComponent = 0xa0; // ComponentProperty
		constexpr auto bLit = 0xa8; // uint32_t : 1
		constexpr auto bOrientZAxisTowardCamera = 0xa8; // uint32_t : 1
		constexpr auto UpdateFixedLOD = 0xa8; // uint32_t : 1
		constexpr auto bRegenerateLODDuplicate = 0xa8; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xa8; // uint32_t : 1
		constexpr auto bShouldResetPeakCounts = 0xa8; // uint32_t : 1
		constexpr auto bHasPhysics = 0xa8; // uint32_t : 1
		constexpr auto bUseRealtimeThumbnail = 0xa8; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0xa8; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0xa8; // uint32_t : 1
		constexpr auto bUseDelayRange = 0xa8; // uint32_t : 1
		constexpr auto CurveEdSetup = 0xac; // ObjectProperty
		constexpr auto LODDistanceCheckTime = 0xb4; // float
		constexpr auto LODDistances = 0xb8; // TArray<float>
		constexpr auto LODSettings = 0xc8; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0xd8; // FBox
		constexpr auto SecondsBeforeInactive = 0xf4; // float
		constexpr auto Delay = 0xf8; // float
		constexpr auto DelayLow = 0xfc; // float
		constexpr auto MacroUVPosition = 0x100; // FVector
		constexpr auto MacroUVRadius = 0x10c; // float
		constexpr auto CustomOcclusionBounds = 0x110; // FBox
		constexpr auto SoloTracking = 0x12c; // TArray<FLODSoloTrack>
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x80; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x90; // FString
		constexpr auto LastErrorSolution = 0xa0; // FString
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto R = 0xe4; // uint32_t : 1
		constexpr auto G = 0xe4; // uint32_t : 1
		constexpr auto B = 0xe4; // uint32_t : 1
		constexpr auto A = 0xe4; // uint32_t : 1
	}

	namespace n_AGameCrowdInteractionPoint {
		constexpr auto bIsEnabled = 0x244; // uint32_t : 1
		constexpr auto CylinderComponent = 0x248; // ComponentProperty
	}

	namespace n_UGripCondNode_TargetRange {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto Op = 0xed; // BTConditionOperator
		constexpr auto bIs2DRange = 0xf0; // uint32_t : 1
		constexpr auto Distance = 0xf4; // float
	}

	namespace n_UCombatDataTableRefNation {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto Order = 0x7c; // int32_t
		constexpr auto LauncherStringID = 0x80; // int32_t
		constexpr auto RegionID = 0x84; // int32_t
		constexpr auto DefaultServiceRegionID = 0x88; // int32_t
		constexpr auto DefaultPing = 0x8c; // int32_t
	}

	namespace n_AGameCrowdPopulationManager {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x244; // FPointer
		constexpr auto CloudSpawnInfo = 0x24c; // FCrowdSpawnInfoItem
		constexpr auto ScriptedSpawnInfo = 0x2dc; // TArray<FCrowdSpawnInfoItem>
		constexpr auto ActiveCrowdInfoVolume = 0x2ec; // ObjectProperty
		constexpr auto GlobalPotentialSpawnPoints = 0x2f4; // TArray<ObjectProperty>
		constexpr auto SplitScreenNumReduction = 0x304; // float
		constexpr auto PlayerPositionPredictionTime = 0x308; // float
		constexpr auto HeadVisibilityOffset = 0x30c; // float
		constexpr auto NavigationHandleClass = 0x310; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x318; // ObjectProperty
		constexpr auto QueryingAgent = 0x320; // ObjectProperty
		constexpr auto PlayerInfo = 0x328; // TArray<FCrowdSpawnerPlayerInfo>
		constexpr auto LastPlayerInfoUpdateTime = 0x338; // float
		constexpr auto bDebugSpawns = 0x33c; // uint32_t : 1
		constexpr auto bPauseCrowd = 0x33c; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefClanRegion {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto RegionStringID = 0x70; // int32_t
	}

	namespace n_USeqEvent_ProjectileLanded {
		constexpr auto MaxDistance = 0x128; // float
	}

	namespace n_USeqAct_DivideFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UGFxEngine {
		constexpr auto GCReferences = 0x60; // TArray<FGCReference>
		constexpr auto RefCount = 0x70; // int32_t
	}

	namespace n_UParticleModuleTypeDataMeshPhysX {
		constexpr auto PhysXParSys = 0x84; // ObjectProperty
		constexpr auto PhysXRotationMethod = 0x8c; // EPhysXMeshRotationMethod
		constexpr auto FluidRotationCoefficient = 0x90; // float
		constexpr auto VerticalLod = 0x94; // FPhysXEmitterVerticalLodProperties
		constexpr auto ZOffset = 0xa4; // float
	}

	namespace n_USeqAct_CheckInput {
		constexpr auto AllowedPlayerIndex = 0x108; // int32_t
		constexpr auto InputNames = 0x10c; // TArray<FName>
		constexpr auto bIsAllKeyBlock = 0x11c; // uint32_t : 1
		constexpr auto bIsKeyCheckFinished = 0x11c; // uint32_t : 1
	}

	namespace n_AVolume {
		constexpr auto AssociatedActor = 0x274; // ObjectProperty
		constexpr auto bForcePawnWalk = 0x27c; // uint32_t : 1
		constexpr auto bProcessAllActors = 0x27c; // uint32_t : 1
		constexpr auto bPawnsOnly = 0x27c; // uint32_t : 1
	}

	namespace n_ULevelStreaming {
		constexpr auto PackageName = 0x60; // FName
		constexpr auto LoadedLevel = 0x68; // ObjectProperty
		constexpr auto Offset = 0x70; // FVector
		constexpr auto LevelTransform = 0x80; // FMatrix
		constexpr auto OldOffset = 0xc0; // FVector
		constexpr auto bIsVisible = 0xcc; // uint32_t : 1
		constexpr auto bHasLoadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bHasUnloadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisibleInEditor = 0xcc; // uint32_t : 1
		constexpr auto bBoundingBoxVisible = 0xcc; // uint32_t : 1
		constexpr auto bLocked = 0xcc; // uint32_t : 1
		constexpr auto bIsFullyStatic = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeLoaded = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisible = 0xcc; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0xcc; // uint32_t : 1
		constexpr auto bDrawOnLevelStatusMap = 0xcc; // uint32_t : 1
		constexpr auto bIsRequestingUnloadAndRemoval = 0xcc; // uint32_t : 1
		constexpr auto DrawColor = 0xd0; // FColor
		constexpr auto EditorStreamingVolumes = 0xd4; // TArray<ObjectProperty>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe4; // float
		constexpr auto LastVolumeUnloadRequestTime = 0xe8; // float
		constexpr auto EditorGridVolume = 0xec; // ObjectProperty
		constexpr auto GridPosition = 0xf4; // int32_t [0x3]
	}

	namespace n_UGameViewportClient {
		constexpr auto VfTable_FExec = 0x68; // FPointer
		constexpr auto Viewport = 0x70; // FPointer
		constexpr auto ViewportFrame = 0x78; // FPointer
		constexpr auto GlobalInteractions = 0x80; // TArray<ObjectProperty>
		constexpr auto UIControllerClass = 0x90; // UUIInteraction*
		constexpr auto UIController = 0x98; // ObjectProperty
		constexpr auto ViewportConsole = 0xa0; // ObjectProperty
		constexpr auto ShowFlags = 0xa8; // FExportShowFlags_Mirror
		constexpr auto LoadingMessage = 0xb8; // FString
		constexpr auto SavingMessage = 0xc8; // FString
		constexpr auto ConnectingMessage = 0xd8; // FString
		constexpr auto PausedMessage = 0xe8; // FString
		constexpr auto PrecachingMessage = 0xf8; // FString
		constexpr auto bShowTitleSafeZone = 0x108; // uint32_t : 1
		constexpr auto bDisplayHardwareMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bOverrideDiffuseAndSpecular = 0x108; // uint32_t : 1
		constexpr auto bIsPlayInEditorViewport = 0x108; // uint32_t : 1
		constexpr auto bShowSystemMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x108; // uint32_t : 1
		constexpr auto bDebugNoGFxUI = 0x108; // uint32_t : 1
		constexpr auto TitleSafeZone = 0x10c; // FTitleSafeZoneArea
		constexpr auto SplitscreenInfo = 0x11c; // TArray<FSplitscreenData>
		constexpr auto DesiredSplitscreenType = 0x12c; // ESplitScreenType
		constexpr auto ActiveSplitscreenType = 0x12d; // ESplitScreenType
		constexpr auto Default2PSplitType = 0x12e; // ESplitScreenType
		constexpr auto Default3PSplitType = 0x12f; // ESplitScreenType
		constexpr auto ProgressMessage = 0x130; // FString [0x2]
		constexpr auto ProgressTimeOut = 0x150; // float
		constexpr auto ProgressFadeTime = 0x154; // float
		constexpr auto DebugProperties = 0x158; // TArray<FDebugDisplayProperty>
		constexpr auto ScaleformInteraction = 0x168; // FPointer
		constexpr auto __HandleInputKey__Delegate = 0x170; // DelegateProperty
		constexpr auto __HandleInputAxis__Delegate = 0x180; // DelegateProperty
		constexpr auto __HandleInputChar__Delegate = 0x190; // DelegateProperty
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0xb8; // EInterpMoveAxis
		constexpr auto LookupTrack = 0xbc; // FInterpLookupTrack
	}

	namespace n_UParticleModuleTypeDataApex {
		constexpr auto ApexIOFX = 0x68; // ObjectProperty
		constexpr auto ApexEmitter = 0x70; // ObjectProperty
	}

	namespace n_APylonSeed {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x244; // FPointer
	}

	namespace n_AComBatPC_PracticeGame {
		constexpr auto AllWeaponArray = 0xbe4; // TArray<AInventory*>
	}

	namespace n_UCombatAnimBlendBase {
		constexpr auto BlendTime = 0x120; // float
		constexpr auto ChildBlendTimes = 0x124; // TArray<float>
		constexpr auto ChildBlendType = 0x134; // TArray<AlphaBlendType>
	}

	namespace n_UCombatDataTableRefPeriodAttend {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto MaxAttend = 0x80; // int32_t
		constexpr auto ServiceStartTime = 0x84; // FTimeData
		constexpr auto ServiceEndTime = 0x8c; // FTimeData
		constexpr auto Event_UI_Layout = 0x94; // int32_t
		constexpr auto EventNameStringID = 0x98; // int32_t
		constexpr auto EventTooltipStringID = 0x9c; // int32_t
	}

	namespace n_UCombatFrontEnd_Achieve {
		constexpr auto RETURN_TO_MATCHRESULT_TIME_MAX = 0xd0; // int32_t
		constexpr auto ReturnToMatchResultTime = 0xd4; // int32_t
		constexpr auto PrevLevel = 0xd8; // int32_t
		constexpr auto CurLevel = 0xdc; // int32_t
		constexpr auto bQuest = 0xe0; // uint32_t : 1
		constexpr auto RewardCodename = 0xe4; // FString
		constexpr auto RewardItemList = 0xf4; // TArray<int32_t>
		constexpr auto ModeID = 0x104; // int32_t
		constexpr auto CurTier = 0x108; // int32_t
		constexpr auto NewTier = 0x10c; // int32_t
	}

	namespace n_ACombatRescueGameBase {
		constexpr auto LastMissionTime = 0x788; // WordProperty
	}

	namespace n_UCombatChannelTransaction {
		constexpr auto ServerInfoMap = 0x60; // TMap<None, None>
		constexpr auto ChannelInfoMap = 0xa8; // TMap<None, None>
		constexpr auto SigleGameType = 0xf0; // int32_t
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto ExpressionGUID = 0x128; // FGuid
		constexpr auto Group = 0x138; // FName
	}

	namespace n_USeqAct_CombatTutorial_HelpOn {
		constexpr auto HelpTitle = 0x108; // int32_t
		constexpr auto HelpDesc = 0x10c; // int32_t
		constexpr auto GBACommandToSkip = 0x110; // FString
	}

	namespace n_ACBWeaponAttachment_ShotGunBase {
		constexpr auto OwnerShotgunWeapon = 0x424; // ObjectProperty
		constexpr auto SimulatedAccuracy = 0x42c; // int32_t
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector2D
	}

	namespace n_UCombatFrontEnd_MedalShop {
		constexpr auto EndRemainTime = 0x1fc; // int32_t [0x3]
	}

	namespace n_AEmitterSpawnable {
		constexpr auto ParticleTemplate = 0x258; // ObjectProperty
	}

	namespace n_UCombatAnimNotify_ChangeWeapAttachMeshSocket {
		constexpr auto NewSocketName = 0x60; // FName
		constexpr auto DefaultSocketNameForPreview = 0x68; // FName
		constexpr auto PreviewSkelComp = 0x70; // ComponentProperty
	}

	namespace n_UCombatFrontEnd_ToolTip {
		constexpr auto bInitTooltipLocalization = 0xd0; // uint32_t : 1
		constexpr auto WeaponLocalizationInfos = 0xd4; // FString [0x6]
		constexpr auto ClothesChipLocalizationInfos = 0x134; // FString [0x14]
		constexpr auto html_br = 0x274; // FString
		constexpr auto html_img = 0x284; // FString
	}

	namespace n_UAudioDevice {
		constexpr auto MaxChannels = 0x68; // int32_t
		constexpr auto CommonAudioPoolSize = 0x6c; // int32_t
		constexpr auto LowPassFilterResonance = 0x70; // float
		constexpr auto MinCompressedDurationEditor = 0x74; // float
		constexpr auto MinCompressedDurationGame = 0x78; // float
		constexpr auto ChirpInSoundNodeWaveName = 0x7c; // FString
		constexpr auto ChirpInSoundNodeWave = 0x8c; // ObjectProperty
		constexpr auto ChirpOutSoundNodeWaveName = 0x94; // FString
		constexpr auto ChirpOutSoundNodeWave = 0xa4; // ObjectProperty
		constexpr auto CommonAudioPool = 0xac; // FPointer
		constexpr auto CommonAudioPoolFreeBytes = 0xb4; // int32_t
		constexpr auto AudioComponents = 0xb8; // TArray<ComponentProperty>
		constexpr auto Sources = 0xc8; // TArray<FPointer>
		constexpr auto FreeSources = 0xd8; // TArray<FPointer>
		constexpr auto WaveInstanceSourceMap = 0xe8; // TMap<None, None>
		constexpr auto bGameWasTicking = 0x130; // uint32_t : 1
		constexpr auto bSoundSpawningEnabled = 0x130; // uint32_t : 1
		constexpr auto Listeners = 0x134; // TArray<FListener>
		constexpr auto CurrentTick = 0x144; // FQWord
		constexpr auto SoundClasses = 0x14c; // TMap<None, None>
		constexpr auto SourceSoundClasses = 0x194; // TMap<None, None>
		constexpr auto CurrentSoundClasses = 0x1dc; // TMap<None, None>
		constexpr auto DestinationSoundClasses = 0x224; // TMap<None, None>
		constexpr auto SoundModes = 0x26c; // TMap<None, None>
		constexpr auto Effects = 0x2b4; // FPointer
		constexpr auto BaseSoundModeName = 0x2bc; // FName
		constexpr auto CurrentMode = 0x2c4; // ObjectProperty
		constexpr auto SoundModeStartTime = 0x2cc; // FDouble
		constexpr auto SoundModeFadeInStartTime = 0x2d4; // FDouble
		constexpr auto SoundModeFadeInEndTime = 0x2dc; // FDouble
		constexpr auto SoundModeEndTime = 0x2e4; // FDouble
		constexpr auto ListenerVolumeIndex = 0x2ec; // int32_t
		constexpr auto ListenerInteriorSettings = 0x2f0; // FInteriorSettings
		constexpr auto InteriorStartTime = 0x314; // FDouble
		constexpr auto InteriorEndTime = 0x31c; // FDouble
		constexpr auto ExteriorEndTime = 0x324; // FDouble
		constexpr auto InteriorLPFEndTime = 0x32c; // FDouble
		constexpr auto ExteriorLPFEndTime = 0x334; // FDouble
		constexpr auto InteriorVolumeInterp = 0x33c; // float
		constexpr auto InteriorLPFInterp = 0x340; // float
		constexpr auto ExteriorVolumeInterp = 0x344; // float
		constexpr auto ExteriorLPFInterp = 0x348; // float
		constexpr auto TestAudioComponent = 0x34c; // ComponentProperty
		constexpr auto TextToSpeech = 0x354; // FPointer
		constexpr auto DebugState = 0x35c; // EDebugState
		constexpr auto TransientMasterVolume = 0x360; // float
		constexpr auto LastUpdateTime = 0x364; // float
	}

	namespace n_USkelControlTrail {
		constexpr auto ChainLength = 0xd0; // int32_t
		constexpr auto ChainBoneAxis = 0xd4; // EAxis
		constexpr auto bInvertChainBoneAxis = 0xd8; // uint32_t : 1
		constexpr auto bLimitStretch = 0xd8; // uint32_t : 1
		constexpr auto bActorSpaceFakeVel = 0xd8; // uint32_t : 1
		constexpr auto bHadValidStrength = 0xd8; // uint32_t : 1
		constexpr auto TrailRelaxation = 0xdc; // float
		constexpr auto StretchLimit = 0xe0; // float
		constexpr auto FakeVelocity = 0xe4; // FVector
		constexpr auto ThisTimstep = 0xf0; // float
		constexpr auto TrailBoneLocations = 0xf4; // TArray<FVector>
		constexpr auto OldLocalToWorld = 0x110; // FMatrix
	}

	namespace n_ACombatRSCGameReplicationInfo {
		constexpr auto HostageActor = 0x380; // ObjectProperty
		constexpr auto CurrentScene = 0x388; // SceneType
	}

	namespace n_UAnimTree {
		constexpr auto AnimTreeTemplate = 0x100; // ObjectProperty
		constexpr auto bEnablePooling = 0x108; // uint32_t : 1
		constexpr auto bUseSavedPose = 0x108; // uint32_t : 1
		constexpr auto bBeingEdited = 0x108; // uint32_t : 1
		constexpr auto bParentNodeArrayBuilt = 0x108; // uint32_t : 1
		constexpr auto bRebuildAnimTickArray = 0x108; // uint32_t : 1
		constexpr auto AnimGroups = 0x10c; // TArray<FAnimGroup>
		constexpr auto PrioritizedSkelBranches = 0x11c; // TArray<FName>
		constexpr auto ComposePrePassBoneNames = 0x12c; // TArray<FName>
		constexpr auto ComposePostPassBoneNames = 0x13c; // TArray<FName>
		constexpr auto RootMorphNodes = 0x14c; // TArray<ObjectProperty>
		constexpr auto SkelControlLists = 0x15c; // TArray<FSkelControlListHead>
		constexpr auto SavedPose = 0x16c; // TArray<FBoneAtom>
		constexpr auto AnimTickArray = 0x17c; // TArray<ObjectProperty>
		constexpr auto ElapsedBlendTime = 0x18c; // float
		constexpr auto AnimsetsBlendTime = 0x190; // float
	}

	namespace n_ARB_RadialForceActor {
		constexpr auto RenderComponent = 0x244; // ComponentProperty
		constexpr auto ForceStrength = 0x24c; // float
		constexpr auto ForceRadius = 0x250; // float
		constexpr auto SwirlStrength = 0x254; // float
		constexpr auto SpinTorque = 0x258; // float
		constexpr auto ForceFalloff = 0x25c; // ERadialImpulseFalloff
		constexpr auto RadialForceMode = 0x25d; // ERadialForceType
		constexpr auto bForceActive = 0x260; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x260; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x260; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x260; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x260; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x264; // FRBCollisionChannelContainer
	}

	namespace n_USwfMovie {
		constexpr auto bUsesFontlib = 0xa0; // uint32_t : 1
		constexpr auto bSetSRGBOnImportedTextures = 0xa0; // uint32_t : 1
		constexpr auto bPackTextures = 0xa0; // uint32_t : 1
		constexpr auto bForceSquarePacking = 0xa0; // uint32_t : 1
		constexpr auto PackTextureSize = 0xa4; // int32_t
		constexpr auto TextureRescale = 0xa8; // FlashTextureRescale
		constexpr auto TextureFormat = 0xac; // FString
		constexpr auto RTTextures = 0xbc; // int32_t
		constexpr auto RTVideoTextures = 0xc0; // int32_t
	}

	namespace n_USeqAct_MITV_Activate {
		constexpr auto DurationOfMITV = 0x108; // float
	}

	namespace n_UCombatFrontEnd_Base {
		constexpr auto Owner = 0xa0; // ObjectProperty
		constexpr auto bNeedInit = 0xa8; // uint32_t : 1
		constexpr auto ShowAction = 0xac; // FString
		constexpr auto HideAction = 0xbc; // FString
	}

	namespace n_UMcpUserManager {
		constexpr auto UserStatuses = 0xb8; // TArray<FMcpUserStatus>
		constexpr auto RegisterUserMcpUrl = 0xc8; // FString
		constexpr auto RegisterUserEmailUrl = 0xd8; // FString
		constexpr auto RegisterUserFacebookUrl = 0xe8; // FString
		constexpr auto QueryUserUrl = 0xf8; // FString
		constexpr auto QueryUsersUrl = 0x108; // FString
		constexpr auto DeleteUserUrl = 0x118; // FString
		constexpr auto RegisterUserRequests = 0x128; // TArray<FRegisterUserRequest>
		constexpr auto QueryUsersRequests = 0x138; // TArray<ObjectProperty>
		constexpr auto DeleteUserRequests = 0x148; // TArray<ObjectProperty>
	}

	namespace n_UCoverSlipReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_USeqAct_CameraFade {
		constexpr auto FadeColor = 0x108; // FColor
		constexpr auto FadeAlpha = 0x10c; // FVector2D
		constexpr auto FadeOpacity = 0x114; // float
		constexpr auto FadeTime = 0x118; // float
		constexpr auto bPersistFade = 0x11c; // uint32_t : 1
		constexpr auto bFadeAudio = 0x11c; // uint32_t : 1
		constexpr auto FadeTimeRemaining = 0x120; // float
		constexpr auto CachedPCs = 0x124; // TArray<ObjectProperty>
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0xb0; // TArray<FString>
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x68; // int32_t
		constexpr auto SheetsPerTrail = 0x6c; // int32_t
		constexpr auto MaxTrailCount = 0x70; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x74; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x78; // uint32_t : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x78; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x78; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x78; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x78; // uint32_t : 1
		constexpr auto bSpawnInitialParticle = 0x78; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x78; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x78; // uint32_t : 1
		constexpr auto bRenderTangents = 0x78; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x78; // uint32_t : 1
		constexpr auto bEnableTangentDiffInterpScale = 0x78; // uint32_t : 1
		constexpr auto RenderAxis = 0x7c; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x80; // float
		constexpr auto TilingDistance = 0x84; // float
		constexpr auto DistanceTessellationStepSize = 0x88; // float
		constexpr auto TangentTessellationScalar = 0x8c; // float
	}

	namespace n_UMaterialExpressionDestDepth {
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
	}

	namespace n_UTranslatorTag {
		constexpr auto Tag = 0x60; // FName
	}

	namespace n_ULightEnvironmentComponent {
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto bForceNonCompositeDynamicLights = 0x88; // uint32_t : 1
		constexpr auto bAllowDynamicShadowsOnTranslucency = 0x88; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0x88; // uint32_t : 1
		constexpr auto bTranslucencyShadowed = 0x88; // uint32_t : 1
		constexpr auto DominantShadowFactor = 0x8c; // float
		constexpr auto AffectingDominantLight = 0x90; // ComponentProperty
		constexpr auto AffectedComponents = 0x98; // TArray<ComponentProperty>
	}

	namespace n_USeqAct_ModifyObjectList {
		constexpr auto ListEntriesCount = 0x108; // int32_t
	}

	namespace n_URB_BodyInstance {
		constexpr auto OwnerComponent = 0x60; // ComponentProperty
		constexpr auto BodyIndex = 0x68; // int32_t
		constexpr auto Velocity = 0x6c; // FVector
		constexpr auto PreviousVelocity = 0x78; // FVector
		constexpr auto SceneIndex = 0x84; // int32_t
		constexpr auto BodyData = 0x88; // FPointer
		constexpr auto BoneSpring = 0x90; // FPointer
		constexpr auto BoneSpringKinActor = 0x98; // FPointer
		constexpr auto bEnableBoneSpringLinear = 0xa0; // uint32_t : 1
		constexpr auto bEnableBoneSpringAngular = 0xa0; // uint32_t : 1
		constexpr auto bDisableOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bNotifyOwnerOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bTeleportOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bUseKinActorForBoneSpring = 0xa0; // uint32_t : 1
		constexpr auto bMakeSpringToBaseCollisionComponent = 0xa0; // uint32_t : 1
		constexpr auto bOnlyCollideWithPawns = 0xa0; // uint32_t : 1
		constexpr auto bEnableCollisionResponse = 0xa0; // uint32_t : 1
		constexpr auto bPushBody = 0xa0; // uint32_t : 1
		constexpr auto bForceUnfixed = 0xa0; // uint32_t : 1
		constexpr auto bInstanceAlwaysFullAnimWeight = 0xa0; // uint32_t : 1
		constexpr auto SuppressPopup = 0xa0; // uint32_t : 1
		constexpr auto BoneLinearSpring = 0xa4; // float
		constexpr auto BoneLinearDamping = 0xa8; // float
		constexpr auto BoneAngularSpring = 0xac; // float
		constexpr auto BoneAngularDamping = 0xb0; // float
		constexpr auto OverextensionThreshold = 0xb4; // float
		constexpr auto CustomGravityFactor = 0xb8; // float
		constexpr auto LastEffectPlayedTime = 0xbc; // float
		constexpr auto PhysMaterialOverride = 0xc0; // ObjectProperty
		constexpr auto ContactReportForceThreshold = 0xc8; // float
		constexpr auto InstanceMassScale = 0xcc; // float
		constexpr auto InstanceDampingScale = 0xd0; // float
	}

	namespace n_UNavMeshGoal_GenericFilterContainer {
		constexpr auto GoalFilters = 0x7c; // TArray<ObjectProperty>
		constexpr auto SuccessfulGoal = 0x8c; // FPointer
		constexpr auto MyNavigationHandle = 0x94; // ObjectProperty
		constexpr auto SeedLocations = 0x9c; // TArray<FVector>
	}

	namespace n_UCombatAnimBlendByRISSlot {
		constexpr auto Owner = 0x144; // ObjectProperty
		constexpr auto ActivatedSlot = 0x14c; // RISSlot
	}

	namespace n_ACombatSentinelManager {
		constexpr auto bDoingASentinelRun = 0x244; // uint32_t : 1
		constexpr auto CurrentMapId = 0x248; // int32_t
		constexpr auto CurrentModeIdx = 0x24c; // int32_t
		constexpr auto RemoteDB = 0x250; // FPointer
	}

	namespace n_ACombatGamePlayerCamera {
		constexpr auto bDOFUpdated = 0x620; // uint32_t : 1
		constexpr auto bAdjustDOF = 0x620; // uint32_t : 1
		constexpr auto bSetRotateCamPosition = 0x620; // uint32_t : 1
		constexpr auto DOF_InterpolationDuration = 0x624; // float
		constexpr auto DOF_BlurKernelSize = 0x628; // float
		constexpr auto DOF_FalloffExponent = 0x62c; // float
		constexpr auto DOF_FocusDistance = 0x630; // float
		constexpr auto DOF_FocusInnerRadius = 0x634; // float
		constexpr auto DOF_FocusType = 0x638; // EFocusType
		constexpr auto DOF_MaxFarBlurAmount = 0x63c; // float
		constexpr auto DOF_MaxNearBlurAmount = 0x640; // float
		constexpr auto DOFTraceExtent = 0x644; // FVector
		constexpr auto DOFDistanceInterpSpeed = 0x650; // float
		constexpr auto LastDOFRadius = 0x654; // float
		constexpr auto LastDOFDistance = 0x658; // float
		constexpr auto DOF_RadiusFalloff = 0x65c; // float
		constexpr auto DOF_RadiusRange = 0x660; // FVector2D
		constexpr auto DOF_RadiusDistRange = 0x668; // FVector2D
		constexpr auto RotateCamPostion = 0x670; // FVector
		constexpr auto RotateCamRotation = 0x67c; // FRotator
		constexpr auto RotateCamViewPoint = 0x688; // FVector
		constexpr auto RotateCamYaw = 0x694; // int32_t
		constexpr auto RotateCamYawDelta = 0x698; // int32_t
		constexpr auto UnitRotateCamDistance = 0x69c; // float
		constexpr auto RotateCamDistance = 0x6a0; // float
		constexpr auto RotateCamTraceRange = 0x6a4; // float
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x68; // FVector
		constexpr auto EndPoint1 = 0x74; // FVector
		constexpr auto Range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xa4; // FRawDistributionFloat
	}

	namespace n_UCombatDamageType {
		constexpr auto VfTable_IInterface_CombatWeaponType = 0x90; // FPointer
		constexpr auto bCausesBlood = 0x98; // uint32_t : 1
		constexpr auto bSimplifiedAnimDeath = 0x98; // uint32_t : 1
		constexpr auto bCausesBloodSplatterDecals = 0x98; // uint32_t : 1
		constexpr auto bFriendlyFire = 0x98; // uint32_t : 1
		constexpr auto bIgnoreReward = 0x98; // uint32_t : 1
		constexpr auto bPlacedWorld = 0x98; // uint32_t : 1
		constexpr auto bDamagedBySkill = 0x98; // uint32_t : 1
		constexpr auto bDamagedByPlayer = 0x98; // uint32_t : 1
		constexpr auto DeathTimeDilationAnim = 0x9c; // ObjectProperty
		constexpr auto SimplifiedMomentumFactor = 0xa4; // float
		constexpr auto SimplifiedDeathUpkick = 0xa8; // float
		constexpr auto DeathStatsName = 0xac; // FName
		constexpr auto SuicideStatsName = 0xb4; // FName
		constexpr auto DeathString = 0xbc; // FString
		constexpr auto FemaleSuicide = 0xcc; // FString
		constexpr auto MaleSuicide = 0xdc; // FString
		constexpr auto TeammateDamageRate = 0xec; // float
		constexpr auto SelfDamageRate = 0xf0; // float
		constexpr auto WeaponType = 0xf4; // WEAPON_TYPES
		constexpr auto DamageType = 0xf5; // ECombatDamageType
		constexpr auto DamageAnimIndex = 0xf6; // char
		constexpr auto SubIndex = 0xf7; // char
		constexpr auto WeaponStatType = 0xf8; // FString
		constexpr auto WeaponTypeName = 0x108; // TArray<FName>
	}

	namespace n_UFacebookWindows {
		constexpr auto VfTable_FTickableObject = 0xe0; // FPointer
		constexpr auto ChildProcHandle = 0xe8; // FPointer
	}

	namespace n_AWorldInfo {
		constexpr auto DefaultPostProcessSettings = 0x258; // FPostProcessSettings
		constexpr auto WorldPostProcessChain = 0x3bc; // ObjectProperty
		constexpr auto bPersistPostProcessToNextLevel = 0x3c4; // uint32_t : 1
		constexpr auto bFogEnabled = 0x3c4; // uint32_t : 1
		constexpr auto bBumpOffsetEnabled = 0x3c4; // uint32_t : 1
		constexpr auto bUseGammaCorrection = 0x3c4; // uint32_t : 1
		constexpr auto bMapNeedsLightingFullyRebuilt = 0x3c4; // uint32_t : 1
		constexpr auto bMapHasMultipleDominantLightsAffectingOnePrimitive = 0x3c4; // uint32_t : 1
		constexpr auto bMapHasPathingErrors = 0x3c4; // uint32_t : 1
		constexpr auto bRequestedBlockOnAsyncLoading = 0x3c4; // uint32_t : 1
		constexpr auto bBegunPlay = 0x3c4; // uint32_t : 1
		constexpr auto bPlayersOnly = 0x3c4; // uint32_t : 1
		constexpr auto bPlayersOnlyPending = 0x3c4; // uint32_t : 1
		constexpr auto bSuspendAI = 0x3c4; // uint32_t : 1
		constexpr auto bDropDetail = 0x3c4; // uint32_t : 1
		constexpr auto bAggressiveLOD = 0x3c4; // uint32_t : 1
		constexpr auto bStartup = 0x3c4; // uint32_t : 1
		constexpr auto bPathsRebuilt = 0x3c4; // uint32_t : 1
		constexpr auto bHasPathNodes = 0x3c4; // uint32_t : 1
		constexpr auto bIsMenuLevel = 0x3c4; // uint32_t : 1
		constexpr auto bDebugPauseExecution = 0x3c4; // uint32_t : 1
		constexpr auto bDebugStepExecution = 0x3c4; // uint32_t : 1
		constexpr auto bUseConsoleInput = 0x3c4; // uint32_t : 1
		constexpr auto bMinimizeBSPSections = 0x3c4; // uint32_t : 1
		constexpr auto bNoDefaultInventoryForPlayer = 0x3c4; // uint32_t : 1
		constexpr auto bNoPathWarnings = 0x3c4; // uint32_t : 1
		constexpr auto bNoMobileMapWarnings = 0x3c4; // uint32_t : 1
		constexpr auto bHighPriorityLoading = 0x3c4; // uint32_t : 1
		constexpr auto bHighPriorityLoadingLocal = 0x3c4; // uint32_t : 1
		constexpr auto bUseProcBuildingRulesetOverride = 0x3c4; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x3c4; // uint32_t : 1
		constexpr auto bSupportDoubleBufferedPhysics = 0x3c4; // uint32_t : 1
		constexpr auto bPhysicsIgnoreDeltaTime = 0x3c4; // uint32_t : 1
		constexpr auto bEnableChanceOfPhysicsChunkOverride = 0x3c4; // uint32_t : 1
		constexpr auto bLimitExplosionChunkSize = 0x3c8; // uint32_t : 1
		constexpr auto bLimitDamageChunkSize = 0x3c8; // uint32_t : 1
		constexpr auto bPrecomputeVisibility = 0x3c8; // uint32_t : 1
		constexpr auto bIgnoreOcclusionQueries = 0x3c8; // uint32_t : 1
		constexpr auto bPlaceCellsOnSurfaces = 0x3c8; // uint32_t : 1
		constexpr auto bAllowTemporalAA = 0x3c8; // uint32_t : 1
		constexpr auto bUseGlobalIllumination = 0x3c8; // uint32_t : 1
		constexpr auto bForceNoPrecomputedLighting = 0x3c8; // uint32_t : 1
		constexpr auto bHaveActiveCrowd = 0x3c8; // uint32_t : 1
		constexpr auto bAllowHostMigration = 0x3c8; // uint32_t : 1
		constexpr auto bGameplayFramePause = 0x3c8; // uint32_t : 1
		constexpr auto SquintModeKernelSize = 0x3cc; // float
		constexpr auto HighestPriorityPostProcessVolume = 0x3d0; // ObjectProperty
		constexpr auto DefaultReverbSettings = 0x3d8; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x3e8; // FInteriorSettings
		constexpr auto FogStart = 0x40c; // float
		constexpr auto FogEnd = 0x410; // float
		constexpr auto FogColor = 0x414; // FColor
		constexpr auto BumpEnd = 0x418; // float
		constexpr auto HighestPriorityReverbVolume = 0x41c; // ObjectProperty
		constexpr auto MassiveLODOverrideVolumes = 0x424; // TArray<ObjectProperty>
		constexpr auto PortalVolumes = 0x434; // TArray<ObjectProperty>
		constexpr auto EnvironmentVolumes = 0x444; // TArray<ObjectProperty>
		constexpr auto StreamingLevels = 0x454; // TArray<ObjectProperty>
		constexpr auto LastTimeUnbuiltLightingWasEncountered = 0x464; // FDouble
		constexpr auto TimeDilation = 0x46c; // float
		constexpr auto DemoPlayTimeDilation = 0x470; // float
		constexpr auto TimeSeconds = 0x474; // float
		constexpr auto RealTimeSeconds = 0x478; // float
		constexpr auto AudioTimeSeconds = 0x47c; // float
		constexpr auto DeltaSeconds = 0x480; // float
		constexpr auto PauseDelay = 0x484; // float
		constexpr auto RealTimeToUnPause = 0x488; // float
		constexpr auto Pauser = 0x48c; // ObjectProperty
		constexpr auto DefaultTexture = 0x494; // ObjectProperty
		constexpr auto WireframeTexture = 0x49c; // ObjectProperty
		constexpr auto WhiteSquareTexture = 0x4a4; // ObjectProperty
		constexpr auto LargeVertex = 0x4ac; // ObjectProperty
		constexpr auto BSPVertex = 0x4b4; // ObjectProperty
		constexpr auto DeferredExecs = 0x4bc; // TArray<FString>
		constexpr auto GRI = 0x4cc; // ObjectProperty
		constexpr auto NetMode = 0x4d4; // ENetMode
		constexpr auto NextTravelType = 0x4d5; // ETravelType
		constexpr auto VisibilityAggressiveness = 0x4d6; // EVisibilityAggressiveness
		constexpr auto PreferredLightmapType = 0x4d7; // EPreferredLightmapType
		constexpr auto LevelLightingQuality = 0x4d8; // ELightingBuildQuality
		constexpr auto ComputerName = 0x4dc; // FString
		constexpr auto EngineVersion = 0x4ec; // FString
		constexpr auto MinNetVersion = 0x4fc; // FString
		constexpr auto Game = 0x50c; // ObjectProperty
		constexpr auto StallZ = 0x514; // float
		constexpr auto WorldGravityZ = 0x518; // float
		constexpr auto DefaultGravityZ = 0x51c; // float
		constexpr auto GlobalGravityZ = 0x520; // float
		constexpr auto RBPhysicsGravityScaling = 0x524; // float
		constexpr auto NavigationPointList = 0x528; // ObjectProperty
		constexpr auto ControllerList = 0x530; // ObjectProperty
		constexpr auto PawnList = 0x538; // ObjectProperty
		constexpr auto CoverList = 0x540; // ObjectProperty
		constexpr auto PylonList = 0x548; // ObjectProperty
		constexpr auto MoveRepSize = 0x550; // float
		constexpr auto ReplicationViewers = 0x554; // TArray<FNetViewer>
		constexpr auto NextURL = 0x564; // FString
		constexpr auto NextSwitchCountdown = 0x574; // float
		constexpr auto PackedLightAndShadowMapTextureSize = 0x578; // int32_t
		constexpr auto DefaultColorScale = 0x57c; // FVector
		constexpr auto DefaultGameType = 0x588; // AGameInfo*
		constexpr auto GameTypesSupportedOnThisMap = 0x590; // TArray<AGameInfo*>
		constexpr auto ClientDestroyedActorContent = 0x5a0; // TArray<ObjectProperty>
		constexpr auto PreparingLevelNames = 0x5b0; // TArray<FName>
		constexpr auto CommittedPersistentLevelName = 0x5c0; // FName
		constexpr auto PersistentMapForcedObjects = 0x5c8; // ObjectProperty
		constexpr auto MusicComp = 0x5d0; // ComponentProperty
		constexpr auto CurrentMusicTrack = 0x5d8; // FMusicTrackStruct
		constexpr auto ReplicatedMusicTrack = 0x604; // FMusicTrackStruct
		constexpr auto Title = 0x630; // FString
		constexpr auto Author = 0x640; // FString
		constexpr auto MyMapInfo = 0x650; // ObjectProperty
		constexpr auto EmitterPoolClassPath = 0x658; // FString
		constexpr auto MyEmitterPool = 0x668; // ObjectProperty
		constexpr auto DecalManagerClassPath = 0x670; // FString
		constexpr auto MyDecalManager = 0x680; // ObjectProperty
		constexpr auto FractureManagerClassPath = 0x688; // FString
		constexpr auto MyFractureManager = 0x698; // ObjectProperty
		constexpr auto ParticleEventManagerClassPath = 0x6a0; // FString
		constexpr auto MyParticleEventManager = 0x6b0; // ObjectProperty
		constexpr auto ProcBuildingRulesetOverride = 0x6b8; // ObjectProperty
		constexpr auto SkelMeshCompTickTagCount = 0x6c0; // int32_t
		constexpr auto MaxPhysicsDeltaTime = 0x6c4; // float
		constexpr auto MaxPhysicsSubsteps = 0x6c8; // int32_t
		constexpr auto PhysicsProperties = 0x6cc; // FPhysXSceneProperties
		constexpr auto CompartmentRunFrames = 0x708; // TArray<FCompartmentRunList>
		constexpr auto DefaultSkinWidth = 0x718; // float
		constexpr auto ApexLODResourceBudget = 0x71c; // float
		constexpr auto ApexDestructionLODResourceValue = 0x720; // float
		constexpr auto ApexClothingLODResourceValue = 0x724; // float
		constexpr auto DestructibleSettings = 0x728; // FApexModuleDestructibleSettings
		constexpr auto EmitterVertical = 0x73c; // ObjectProperty
		constexpr auto VerticalProperties = 0x744; // FPhysXVerticalProperties
		constexpr auto WorldAttractors = 0x75c; // TArray<FPointer>
		constexpr auto ChanceOfPhysicsChunkOverride = 0x76c; // float
		constexpr auto MaxExplosionChunkSize = 0x770; // float
		constexpr auto MaxDamageChunkSize = 0x774; // float
		constexpr auto FractureExplosionVelScale = 0x778; // float
		constexpr auto MaxNumFacturedChunksToSpawnInAFrame = 0x77c; // int32_t
		constexpr auto NumFacturedChunksSpawnedThisFrame = 0x780; // int32_t
		constexpr auto FracturedMeshWeaponDamage = 0x784; // float
		constexpr auto VisibilityCellSize = 0x788; // int32_t
		constexpr auto CharacterLitIndirectBrightness = 0x78c; // float
		constexpr auto CharacterLitIndirectContrastFactor = 0x790; // float
		constexpr auto CharacterShadowedIndirectBrightness = 0x794; // float
		constexpr auto CharacterShadowedIndirectContrastFactor = 0x798; // float
		constexpr auto CharacterLightingContrastFactor = 0x79c; // float
		constexpr auto CharacterLightingDesaturation = 0x7a0; // float
		constexpr auto CharacterLightEnvironment = 0x7a4; // int32_t
		constexpr auto LowCharacterLightmapInfo = 0x7a8; // FCharacterLightmapInfo
		constexpr auto HighCharacterLightmapInfo = 0x7c0; // FCharacterLightmapInfo
		constexpr auto FirstPersonLitIndirectBrightness = 0x7d8; // float
		constexpr auto FirstPersonLitIndirectContrastFactor = 0x7dc; // float
		constexpr auto FirstPersonShadowedIndirectBrightness = 0x7e0; // float
		constexpr auto FirstPersonShadowedIndirectContrastFactor = 0x7e4; // float
		constexpr auto FirstPersonLightingContrastFactor = 0x7e8; // float
		constexpr auto FirstPersonLightingDesaturation = 0x7ec; // float
		constexpr auto LowFirstPersonLightmapInfo = 0x7f0; // FCharacterLightmapInfo
		constexpr auto HighFirstPersonLightmapInfo = 0x808; // FCharacterLightmapInfo
		constexpr auto ImageReflectionEnvironmentTexture = 0x820; // ObjectProperty
		constexpr auto ImageReflectionEnvironmentColor = 0x828; // FLinearColor
		constexpr auto ImageReflectionEnvironmentRotation = 0x838; // float
		constexpr auto ScreenMessages = 0x83c; // FMap_Mirror
		constexpr auto PriorityScreenMessages = 0x884; // TArray<FScreenMessageString>
		constexpr auto LightmassSettings = 0x894; // FLightmassWorldInfoSettings
		constexpr auto NavMeshPathConstraintCache = 0x8ec; // TMap<None, None>
		constexpr auto NavMeshPathGoalEvaluatorCache = 0x934; // TMap<None, None>
		constexpr auto PopulationManager = 0x97c; // ObjectProperty
		constexpr auto PeerHostMigration = 0x984; // FHostMigrationState
		constexpr auto HostMigrationTimeout = 0x9a4; // float
		constexpr auto FirstPhysicsVolume = 0x9a8; // ObjectProperty
		constexpr auto DecalShadowColor = 0x9b0; // FLinearColor
		constexpr auto WorldCubeList = 0x9c0; // TArray<FWorldCube>
		constexpr auto SplineActorList = 0x9d0; // TArray<ObjectProperty>
		constexpr auto LowLightmass = 0x9e0; // FLightmassCustomSettingInfo
		constexpr auto HighLightmass = 0x9f8; // FLightmassCustomSettingInfo
		constexpr auto OutsideColorAndOcclusionThreshold = 0xa10; // float
		constexpr auto BokehColorAndOcclusionThreshold = 0xa14; // float
		constexpr auto ScalarDifferenceThreshold = 0xa18; // float
		constexpr auto CurrentMinimapActor = 0xa1c; // ObjectProperty
		constexpr auto HighestPriorityLabelVolume = 0xa24; // ObjectProperty
		constexpr auto TickableActorsArray = 0xa2c; // TArray<FTickableActors>
		constexpr auto TickableActorListArray = 0xa3c; // TArray<FTickableActorList>
		constexpr auto WorldStartCamera = 0xa4c; // ObjectProperty
	}

	namespace n_UCombatHUD_WarmUp {
		constexpr auto WarmUpPmInfos = 0xc0; // TArray<FWarmUpInfo>
		constexpr auto WarmUpVcInfos = 0xd0; // TArray<FWarmUpInfo>
	}

	namespace n_UCombatDataTableRefEmblem {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto ImageID = 0x70; // int32_t
		constexpr auto Emblem_AssetName = 0x74; // FString
	}

	namespace n_USkelControlHandlebars {
		constexpr auto WheelRollAxis = 0x100; // EAxis
		constexpr auto HandlebarRotateAxis = 0x101; // EAxis
		constexpr auto WheelBoneName = 0x104; // FName
		constexpr auto bInvertRotation = 0x10c; // uint32_t : 1
		constexpr auto SteerWheelBoneIndex = 0x110; // int32_t
	}

	namespace n_UPresetManager {
		constexpr auto PresetCode_First = 0x60; // FString [0x9]
		constexpr auto PresetCode_Sec = 0xf0; // FString [0x9]
		constexpr auto PresetCode_Third = 0x180; // FString [0x9]
		constexpr auto PresetCode_Fourth = 0x210; // FString [0x9]
		constexpr auto PresetData_First = 0x2a0; // FPresetData [0x9]
		constexpr auto PresetData_Sec = 0x39c; // FPresetData [0x9]
		constexpr auto PresetData_Third = 0x498; // FPresetData [0x9]
		constexpr auto PresetData_Fourth = 0x594; // FPresetData [0x9]
		constexpr auto TuningMap = 0x690; // TMap<None, None>
		constexpr auto ArmorData = 0x6d8; // TArray<FString>
		constexpr auto AmmorPoint = 0x6e8; // FAmmorInfo
		constexpr auto PrimaryWeapon = 0x6f4; // TArray<FTestChangeWeaponType>
		constexpr auto SubWeapon = 0x704; // TArray<FTestChangeWeaponType>
		constexpr auto ArmorSet = 0x714; // TArray<FTestChangeWeaponType>
		constexpr auto TableDepot = 0x724; // ObjectProperty
		constexpr auto PresetData_ChaFXUpperItemID = 0x72c; // int32_t
		constexpr auto PresetData_ChaFXFootItemID = 0x730; // int32_t
		constexpr auto PresetData_C4TimeReduceItemID = 0x734; // int32_t
		constexpr auto PresetData_SprayID = 0x738; // int32_t
		constexpr auto PresetData_AccessoryID = 0x73c; // int32_t [0x6]
		constexpr auto SkillItemIndex = 0x754; // TArray<int32_t>
		constexpr auto GearSetItemIndex = 0x764; // int32_t [0x3]
		constexpr auto InvListToPreventGC = 0x770; // TArray<AInventory*>
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto SpeedX = 0x118; // float
		constexpr auto SpeedY = 0x11c; // float
	}

	namespace n_ADecalActorBase {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x244; // FPointer
		constexpr auto Decal = 0x24c; // ComponentProperty
	}

	namespace n_USeqEvent_PlayerSpawned {
		constexpr auto SpawnPoint = 0x128; // ObjectProperty
	}

	namespace n_UCCSBTScriptBehavior {
		constexpr auto Controller = 0xcc; // ObjectProperty
	}

	namespace n_UNavMeshPath_BiasAgainstPolysWithinDistanceOfLocations {
		constexpr auto Location = 0x78; // FVector
		constexpr auto Rotation = 0x84; // FVector
		constexpr auto DistanceToCheck = 0x90; // float
		constexpr auto LocationsToCheck = 0x94; // TArray<FVector>
	}

	namespace n_UCombatWeaponRISBase_SkeletalmeshComponent {
		constexpr auto FirstPersonSkelComponent = 0xbf0; // ComponentProperty
		constexpr auto FirstPersonPhysicsAsset = 0xbf8; // ObjectProperty
		constexpr auto FirstPersonNameToAttach = 0xc00; // FName
		constexpr auto bIsAttachToFirstPersonSocket = 0xc08; // uint32_t : 1
		constexpr auto bIsAttachToThirdPersonSocket = 0xc08; // uint32_t : 1
		constexpr auto FirstPersonMeshParts = 0xc0c; // TArray<FMeshPart>
		constexpr auto ThirdPersonSkelComponent = 0xc1c; // ComponentProperty
		constexpr auto ThirdPersonPhysicsAsset = 0xc24; // ObjectProperty
		constexpr auto ThirdPersonNameToAttach = 0xc2c; // FName
		constexpr auto ThirdPersonMeshParts = 0xc34; // TArray<FMeshPart>
	}

	namespace n_ULevel {
		constexpr auto LightmapTotalSize = 0x1d8; // float
		constexpr auto ShadowmapTotalSize = 0x1dc; // float
	}

	namespace n_UTimeDilationAnim {
		constexpr auto TimeDilationInterpGroup = 0x60; // ObjectProperty
		constexpr auto AnimLength = 0x68; // float
	}

	namespace n_UAnimNotify_Sound {
		constexpr auto SoundCue = 0x60; // ObjectProperty
		constexpr auto SoundCueList = 0x68; // TArray<ObjectProperty>
		constexpr auto SoundGroupList = 0x78; // TArray<FName>
		constexpr auto bFollowActor = 0x88; // uint32_t : 1
		constexpr auto bIgnoreIfActorHidden = 0x88; // uint32_t : 1
		constexpr auto bPlaySoundcueByActor = 0x88; // uint32_t : 1
		constexpr auto BoneName = 0x8c; // FName
		constexpr auto PercentToPlay = 0x94; // float
		constexpr auto VolumeMultiplier = 0x98; // float
		constexpr auto PitchMultiplier = 0x9c; // float
	}

	namespace n_UCombatPracticePlayerInput {
		constexpr auto PracticeKeyBindings = 0x3f8; // TArray<FKeyBind>
	}

	namespace n_UDOFBloomMotionBlurEffect {
		constexpr auto MaxVelocity = 0xdc; // float
		constexpr auto MotionBlurAmount = 0xe0; // float
		constexpr auto FullMotionBlur = 0xe4; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0xe8; // float
		constexpr auto CameraTranslationThreshold = 0xec; // float
	}

	namespace n_UGripBTTree {
		constexpr auto AllTreeNodes = 0xbc; // TArray<ObjectProperty>
		constexpr auto bBeingEdited = 0xcc; // uint32_t : 1
	}

	namespace n_ACombatGame {
		constexpr auto CombatGameMessageClass = 0x4c0; // UCombatGameMessage*
		constexpr auto CombatErrorMessageClass = 0x4c8; // UCombatLocalMessage*
		constexpr auto CombatStatStorageClass = 0x4d0; // UCombatStatStorageBase*
		constexpr auto BotReplicationInfoClass = 0x4d8; // ACombatPlayerReplicationInfoBase*
		constexpr auto CombatGameScoreClass = 0x4e0; // UCombatGameScore*
		constexpr auto ModeDifficulty = 0x4e8; // char
		constexpr auto RoundResultReason = 0x4e9; // ERoundResultReason
		constexpr auto RankSystemID = 0x4ea; // char
		constexpr auto BindRegion = 0x4eb; // char
		constexpr auto e_MatchType = 0x4ec; // EMatchType
		constexpr auto SentinelManager = 0x4f0; // ObjectProperty
		constexpr auto bUseSentinel = 0x4f8; // uint32_t : 1
		constexpr auto bCheckForceGameOver = 0x4f8; // uint32_t : 1
		constexpr auto bSupportsRespawn = 0x4f8; // uint32_t : 1
		constexpr auto bCountDown = 0x4f8; // uint32_t : 1
		constexpr auto bDirtyRoundOverCheck = 0x4f8; // uint32_t : 1
		constexpr auto bCanBeBaseForPawns = 0x4f8; // uint32_t : 1
		constexpr auto bIsWarmupHolding = 0x4f8; // uint32_t : 1
		constexpr auto bUseClassSystem = 0x4f8; // uint32_t : 1
		constexpr auto bInitPSListInGroup = 0x4f8; // uint32_t : 1
		constexpr auto bCanTeamChange = 0x4f8; // uint32_t : 1
		constexpr auto bIsBlockingJoin = 0x4f8; // uint32_t : 1
		constexpr auto bUseParachuteRespawn = 0x4f8; // uint32_t : 1
		constexpr auto bForfeitedMatch = 0x4f8; // uint32_t : 1
		constexpr auto bSkipSkillLicense = 0x4f8; // uint32_t : 1
		constexpr auto bOpenNewMatch = 0x4f8; // uint32_t : 1
		constexpr auto bDemoRec = 0x4f8; // uint32_t : 1
		constexpr auto bInfiniteWeaponReload = 0x4f8; // uint32_t : 1
		constexpr auto PlayerStartClass = 0x4fc; // TArray<ACombatPlayerStart*>
		constexpr auto PlayerStartClassPath = 0x50c; // TArray<FString>
		constexpr auto SavePortal = 0x51c; // FString
		constexpr auto ReadiedPlayerList = 0x52c; // TArray<int32_t>
		constexpr auto GoalRound = 0x53c; // int32_t
		constexpr auto GoalMission = 0x540; // int32_t
		constexpr auto TimeLimitSec = 0x544; // WordProperty
		constexpr auto InitCR = 0x548; // int32_t
		constexpr auto DefaultInvulnerableTime = 0x54c; // float
		constexpr auto RespawnDelay = 0x550; // TArray<float>
		constexpr auto DroppedWeaponLifeSpan = 0x560; // float
		constexpr auto ReasonMsgWaitTime = 0x564; // float
		constexpr auto WinnerMsgWaitTime = 0x568; // float
		constexpr auto RestartWait = 0x56c; // float
		constexpr auto MatchEndWait = 0x570; // float
		constexpr auto MatchWarmingupTime = 0x574; // float
		constexpr auto CompetitiveMatchWarmingupTime = 0x578; // float
		constexpr auto CompetitiveMatchWarmingupMinimumTime = 0x57c; // float
		constexpr auto TempSecTime = 0x580; // float
		constexpr auto CBLog = 0x584; // ObjectProperty
		constexpr auto GameLogID = 0x58c; // int32_t
		constexpr auto InactiveStatArray = 0x590; // TArray<FInactiveStatInfo>
		constexpr auto ForbiddenWeaponList = 0x5a0; // TArray<FForbiddenWeapon>
		constexpr auto ForbiddenEWeaponGroup = 0x5b0; // TArray<EWeaponGroup>
		constexpr auto ForbiddenRISList = 0x5c0; // TArray<RISSlot>
		constexpr auto HealthModifier = 0x5d0; // float
		constexpr auto BotSpawnCount = 0x5d4; // int32_t
		constexpr auto ClassSelectCondition = 0x5d8; // int32_t
		constexpr auto PendingPlayers = 0x5dc; // TArray<ObjectProperty>
		constexpr auto CombatPCs = 0x5ec; // TArray<ObjectProperty>
		constexpr auto CBGRI = 0x5fc; // ObjectProperty
		constexpr auto PSListInGroup = 0x604; // TArray<ObjectProperty>
		constexpr auto CombatDBManager = 0x614; // ObjectProperty
		constexpr auto MapID = 0x61c; // int32_t
		constexpr auto ModeID = 0x620; // int32_t
		constexpr auto TeamChangeMsgWaitTime = 0x624; // float
		constexpr auto ClientConnections = 0x628; // TArray<FClientConnectionInfo>
		constexpr auto JoinBlockConditionTime = 0x638; // float
		constexpr auto JoinBlockConditionScore = 0x63c; // float
		constexpr auto BlockJoinCheckTime = 0x640; // float
		constexpr auto GameModeGuideStr = 0x644; // FString
		constexpr auto LastTestMessageTime = 0x654; // float
		constexpr auto PengindTestMessageList = 0x658; // TArray<FString>
		constexpr auto StartedMemberCount = 0x668; // int32_t
		constexpr auto SavePRIStatModeList = 0x66c; // TArray<FString>
	}

	namespace n_UCombatPassiveSkill {
		constexpr auto MaxHealthRate_Buff = 0x80; // float
		constexpr auto MaxAutoCureHealthModifier_Buff = 0x84; // float
		constexpr auto HealthCureRate_Buff = 0x88; // float
		constexpr auto AddMainAmmo_Buff = 0x8c; // float
		constexpr auto AddSubAmmo_Buff = 0x90; // float
		constexpr auto AddMainMagazineAmmo_Buff = 0x94; // float
		constexpr auto AddSubMagazineAmmo_Buff = 0x98; // float
		constexpr auto MaxMainMagazineAmmo_Buff = 0x9c; // float
		constexpr auto MaxSubMagazineAmmo_Buff = 0xa0; // float
		constexpr auto WeaponReloadSpeedRate_Buff = 0xa4; // float
		constexpr auto WeaponChangeRate_Buff = 0xa8; // float
		constexpr auto GroundCrouchSpeedRate_Buff = 0xac; // float
		constexpr auto GroundWalkingSpeedRate_Buff = 0xb0; // float
		constexpr auto GroundRunSpeedRate_Buff = 0xb4; // float
		constexpr auto GroundAccelationRate_Buff = 0xb8; // float
		constexpr auto GunAttackRate_Buff = 0xbc; // float
		constexpr auto MeleeAttackRate_Buff = 0xc0; // float
		constexpr auto ExplosiveAttackRate_Buff = 0xc4; // float
		constexpr auto GunGuardRate_Buff = 0xc8; // float
		constexpr auto MeleeGuardRate_Buff = 0xcc; // float
		constexpr auto ExplosiveGuardRate_Buff = 0xd0; // float
		constexpr auto DetailedRadarDistance_Buff = 0xd4; // float
		constexpr auto RadarRange_Buff = 0xd8; // float
		constexpr auto AddGrenade_Buff = 0xdc; // int32_t
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x90; // FParticleRandomSeedInfo
	}

	namespace n_UAutoNavMeshPathObstacleUnregister {
		constexpr auto PathObstacleRef = 0x60; // TScriptInterface<Class>
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x280; // TArray<ObjectProperty>
		constexpr auto OverrideInvisibleActors = 0x290; // TArray<ObjectProperty>
	}

	namespace n_UCombatCameraThirdPersonCameraMode_Dead {
		constexpr auto TargetBoneName = 0x268; // FName
		constexpr auto DistanceFromTarget = 0x270; // float
		constexpr auto CamHeightOffset = 0x274; // float
		constexpr auto MaxCamPitchLimit = 0x278; // float
		constexpr auto bFollowKillerPawn = 0x27c; // uint32_t : 1
		constexpr auto bDrawDebug = 0x27c; // uint32_t : 1
		constexpr auto FollowKillerPawnDelayTime = 0x280; // float
		constexpr auto FollowKillerPawnDuration = 0x284; // float
		constexpr auto KillerPawnHeightOffset = 0x288; // float
		constexpr auto DeathCamRotInterpSpeed = 0x28c; // float
		constexpr auto DeathCamInterpolationTime = 0x290; // float
		constexpr auto DeathCamInterpolationExp = 0x294; // float
		constexpr auto DeadCamAnim = 0x298; // ObjectProperty
		constexpr auto DeadCamAnimBlendInTime = 0x2a0; // float
		constexpr auto DeadCamAnimBlendOutTime = 0x2a4; // float
		constexpr auto DeathCamStartLocation = 0x2a8; // FVector
		constexpr auto DeathCamEndLocation = 0x2b4; // FVector
		constexpr auto DeathCamRotation = 0x2c0; // FRotator
		constexpr auto ActiveTimeSeconds = 0x2cc; // float
		constexpr auto UnrealMaxCamPitchLimit = 0x2d0; // int32_t
	}

	namespace n_UCombatLockedPresetScene {
		constexpr auto bDisplayLockPreset = 0xb0; // uint32_t : 1
		constexpr auto bDisplayPresetSelectWaitingScene = 0xb0; // uint32_t : 1
		constexpr auto bSelected = 0xb0; // uint32_t : 1
		constexpr auto bForceShowing = 0xb0; // uint32_t : 1
		constexpr auto LockPresetSceneKeyBindings = 0xb4; // FKeyBindingInfo
	}

	namespace n_AGameInfo {
		constexpr auto bRestartLevel = 0x244; // uint32_t : 1
		constexpr auto bPauseable = 0x244; // uint32_t : 1
		constexpr auto bTeamGame = 0x244; // uint32_t : 1
		constexpr auto bGameEnded = 0x244; // uint32_t : 1
		constexpr auto bOverTime = 0x244; // uint32_t : 1
		constexpr auto bDelayedStart = 0x244; // uint32_t : 1
		constexpr auto bWaitingToStartMatch = 0x244; // uint32_t : 1
		constexpr auto bChangeLevels = 0x244; // uint32_t : 1
		constexpr auto bAlreadyChanged = 0x244; // uint32_t : 1
		constexpr auto bAdminCanPause = 0x244; // uint32_t : 1
		constexpr auto bGameRestarted = 0x244; // uint32_t : 1
		constexpr auto bLevelChange = 0x244; // uint32_t : 1
		constexpr auto bKickLiveIdlers = 0x244; // uint32_t : 1
		constexpr auto bUsingArbitration = 0x244; // uint32_t : 1
		constexpr auto bHasArbitratedHandshakeBegun = 0x244; // uint32_t : 1
		constexpr auto bNeedsEndGameHandshake = 0x244; // uint32_t : 1
		constexpr auto bIsEndGameHandshakeComplete = 0x244; // uint32_t : 1
		constexpr auto bHasEndGameHandshakeBegun = 0x244; // uint32_t : 1
		constexpr auto bFixedPlayerStart = 0x244; // uint32_t : 1
		constexpr auto bDoFearCostFallOff = 0x244; // uint32_t : 1
		constexpr auto bUseSeamlessTravel = 0x244; // uint32_t : 1
		constexpr auto bHasNetworkError = 0x244; // uint32_t : 1
		constexpr auto bRequiresPushToTalk = 0x244; // uint32_t : 1
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // uint32_t : 1
		constexpr auto bIsStandbyCheckingOn = 0x244; // uint32_t : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // uint32_t : 1
		constexpr auto SubLevelPostFix = 0x248; // FString
		constexpr auto CauseEventCommand = 0x258; // FString
		constexpr auto BugLocString = 0x268; // FString
		constexpr auto BugRotString = 0x278; // FString
		constexpr auto PendingArbitrationPCs = 0x288; // TArray<ObjectProperty>
		constexpr auto ArbitrationPCs = 0x298; // TArray<ObjectProperty>
		constexpr auto ArbitrationHandshakeTimeout = 0x2a8; // float
		constexpr auto GameDifficulty = 0x2ac; // float
		constexpr auto GoreLevel = 0x2b0; // int32_t
		constexpr auto GameSpeed = 0x2b4; // float
		constexpr auto MaxBotSpawnPerTick = 0x2b8; // int32_t
		constexpr auto CurBotSpawnNumber = 0x2bc; // int32_t
		constexpr auto DefaultPawnClass = 0x2c0; // APawn*
		constexpr auto HUDType = 0x2c8; // AHUD*
		constexpr auto SecondaryHUDType = 0x2d0; // AHUD*
		constexpr auto MaxSpectators = 0x2d8; // int32_t
		constexpr auto MaxSpectatorsAllowed = 0x2dc; // int32_t
		constexpr auto NumSpectators = 0x2e0; // int32_t
		constexpr auto MaxPlayers = 0x2e4; // int32_t
		constexpr auto MaxPlayersAllowed = 0x2e8; // int32_t
		constexpr auto NumPlayers = 0x2ec; // int32_t
		constexpr auto NumBots = 0x2f0; // int32_t
		constexpr auto NumTravellingPlayers = 0x2f4; // int32_t
		constexpr auto CurrentID = 0x2f8; // int32_t
		constexpr auto DefaultPlayerName = 0x2fc; // FString
		constexpr auto GameName = 0x30c; // FString
		constexpr auto FearCostFallOff = 0x31c; // float
		constexpr auto GoalScore = 0x320; // int32_t
		constexpr auto MaxLives = 0x324; // int32_t
		constexpr auto TimeLimit = 0x328; // int32_t
		constexpr auto DeathMessageClass = 0x32c; // ULocalMessage*
		constexpr auto GameMessageClass = 0x334; // UGameMessage*
		constexpr auto BaseMutator = 0x33c; // ObjectProperty
		constexpr auto AccessControlClass = 0x344; // AAccessControl*
		constexpr auto AccessControl = 0x34c; // ObjectProperty
		constexpr auto BroadcastHandlerClass = 0x354; // ABroadcastHandler*
		constexpr auto BroadcastHandler = 0x35c; // ObjectProperty
		constexpr auto AutoTestManagerClass = 0x364; // AAutoTestManager*
		constexpr auto MyAutoTestManager = 0x36c; // ObjectProperty
		constexpr auto PlayerControllerClass = 0x374; // APlayerController*
		constexpr auto PlayerReplicationInfoClass = 0x37c; // APlayerReplicationInfo*
		constexpr auto GameReplicationInfoClass = 0x384; // AGameReplicationInfo*
		constexpr auto GameReplicationInfo = 0x38c; // ObjectProperty
		constexpr auto PopulationManager = 0x394; // ObjectProperty
		constexpr auto PopulationManagerClass = 0x39c; // ACrowdPopulationManagerBase*
		constexpr auto GripAIManagerClassPath = 0x3a4; // FString
		constexpr auto GripAIManagerHolder = 0x3b4; // ObjectProperty
		constexpr auto MaxIdleTime = 0x3bc; // float
		constexpr auto MaxTimeMargin = 0x3c0; // float
		constexpr auto TimeMarginSlack = 0x3c4; // float
		constexpr auto MinTimeMargin = 0x3c8; // float
		constexpr auto InactivePRIArray = 0x3cc; // TArray<ObjectProperty>
		constexpr auto Pausers = 0x3dc; // TArray<DelegateProperty>
		constexpr auto OnlineSub = 0x3ec; // ObjectProperty
		constexpr auto GameInterface = 0x3f4; // TScriptInterface<Class>
		constexpr auto OnlineStatsWriteClass = 0x404; // UOnlineStatsWrite*
		constexpr auto LeaderboardId = 0x40c; // int32_t
		constexpr auto ArbitratedLeaderboardId = 0x410; // int32_t
		constexpr auto CoverReplicatorBase = 0x414; // ObjectProperty
		constexpr auto OnlineGameSettingsClass = 0x41c; // UOnlineGameSettings*
		constexpr auto ServerOptions = 0x424; // FString
		constexpr auto AdjustedNetSpeed = 0x434; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x438; // float
		constexpr auto TotalNetBandwidth = 0x43c; // int32_t
		constexpr auto MinDynamicBandwidth = 0x440; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x444; // int32_t
		constexpr auto StandbyRxCheatTime = 0x448; // float
		constexpr auto StandbyTxCheatTime = 0x44c; // float
		constexpr auto BadPingThreshold = 0x450; // int32_t
		constexpr auto PercentMissingForRxStandby = 0x454; // float
		constexpr auto PercentMissingForTxStandby = 0x458; // float
		constexpr auto PercentForBadPing = 0x45c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x460; // float
		constexpr auto StreamingPauseIcon = 0x464; // ObjectProperty
		constexpr auto GameInfoClassAliases = 0x46c; // TArray<FGameClassShortName>
		constexpr auto DefaultGameType = 0x47c; // FString
		constexpr auto DefaultMapPrefixes = 0x48c; // TArray<FGameTypePrefix>
		constexpr auto CustomMapPrefixes = 0x49c; // TArray<FGameTypePrefix>
		constexpr auto AnimTreePoolSize = 0x4ac; // int32_t
		constexpr auto __CanUnpause__Delegate = 0x4b0; // DelegateProperty
	}

	namespace n_UOnlineGameSettings {
		constexpr auto NumPublicConnections = 0xa0; // int32_t
		constexpr auto NumPrivateConnections = 0xa4; // int32_t
		constexpr auto NumOpenPublicConnections = 0xa8; // int32_t
		constexpr auto NumOpenPrivateConnections = 0xac; // int32_t
		constexpr auto ServerNonce = 0xb0; // FQWord
		constexpr auto bShouldAdvertise = 0xb8; // uint32_t : 1
		constexpr auto bIsLanMatch = 0xb8; // uint32_t : 1
		constexpr auto bUsesStats = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinInProgress = 0xb8; // uint32_t : 1
		constexpr auto bAllowInvites = 0xb8; // uint32_t : 1
		constexpr auto bUsesPresence = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinViaPresence = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinViaPresenceFriendsOnly = 0xb8; // uint32_t : 1
		constexpr auto bUsesArbitration = 0xb8; // uint32_t : 1
		constexpr auto bAntiCheatProtected = 0xb8; // uint32_t : 1
		constexpr auto bWasFromInvite = 0xb8; // uint32_t : 1
		constexpr auto bIsDedicated = 0xb8; // uint32_t : 1
		constexpr auto bHasSkillUpdateInProgress = 0xb8; // uint32_t : 1
		constexpr auto bShouldShrinkArbitratedSessions = 0xb8; // uint32_t : 1
		constexpr auto OwningPlayerName = 0xbc; // FString
		constexpr auto OwningPlayerId = 0xcc; // FUniqueNetId
		constexpr auto PingInMs = 0xd4; // int32_t
		constexpr auto MatchQuality = 0xd8; // float
		constexpr auto GameState = 0xdc; // EOnlineGameState
		constexpr auto BuildUniqueId = 0xe0; // int32_t
	}

	namespace n_UParticleModuleAttractorSkelVertSurface {
		constexpr auto FalloffType = 0x68; // EVertSurfaceAttractorFalloffType
		constexpr auto DestinationType = 0x69; // EAttractorSkelVertSurfaceDestination
		constexpr auto bParticleLifeRelative = 0x6c; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x6c; // uint32_t : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SkelMeshActorParamName = 0x154; // FName
		constexpr auto ValidAssociatedBones = 0x15c; // TArray<FName>
		constexpr auto NormalToCompare = 0x16c; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x178; // float
		constexpr auto NormalCheckTolerance = 0x17c; // float
		constexpr auto ValidMaterialIndices = 0x180; // TArray<int32_t>
	}

	namespace n_USeqAct_ChangeCollision {
		constexpr auto bCollideActors = 0x108; // uint32_t : 1
		constexpr auto bBlockActors = 0x108; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0x108; // uint32_t : 1
		constexpr auto CollisionType = 0x10c; // ECollisionType
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UCombatAnimNotify_SwitchAnim {
		constexpr auto BlendInTime = 0x60; // float
		constexpr auto BlendOutTime = 0x64; // float
		constexpr auto NewAnim = 0x68; // FName
	}

	namespace n_UForceFeedbackWaveform {
		constexpr auto bIsLooping = 0x60; // uint32_t : 1
		constexpr auto Samples = 0x64; // TArray<FWaveformSample>
		constexpr auto WaveformFalloffStartDistance = 0x74; // float
		constexpr auto MaxWaveformDistance = 0x78; // float
	}

	namespace n_UActorFactoryActor {
		constexpr auto ActorClass = 0x9c; // AActor*
	}

	namespace n_UOutlineManager {
		constexpr auto OutlinePropertyList = 0x60; // TArray<FOutlineProperty>
		constexpr auto ForegroundOutlinePropertyList = 0x70; // TArray<FOutlineProperty>
		constexpr auto OutlineMaterialParamList = 0x80; // TArray<FOutlineMaterialVectorParam>
		constexpr auto OutlineRegisterConditionList = 0x90; // TArray<FOutlineRegisterCondition>
		constexpr auto CombatPC = 0xa0; // ObjectProperty
		constexpr auto ManagedInfoList = 0xa8; // TArray<FOutlineMangedInfo>
		constexpr auto ManagedInfoListBot = 0xb8; // TArray<FOutlineMangedInfo>
		constexpr auto GlobalOutlineEventList = 0xc8; // TArray<FGlobalOutlineEvent>
		constexpr auto OutlineConditionIndexMap = 0xd8; // TMap<None, None>
	}

	namespace n_USeqAct_Switch {
		constexpr auto LinkCount = 0x108; // int32_t
		constexpr auto IncrementAmount = 0x10c; // int32_t
		constexpr auto bLooping = 0x110; // uint32_t : 1
		constexpr auto bAutoDisableLinks = 0x110; // uint32_t : 1
		constexpr auto Indices = 0x114; // TArray<int32_t>
	}

	namespace n_UCombatFrontEndMoviePlayer {
		constexpr auto CurrentGI = 0x308; // ObjectProperty
		constexpr auto FrontEndScenes = 0x310; // ObjectProperty [0x18]
		constexpr auto CurrentScene = 0x3d0; // ObjectProperty
		constexpr auto DashboardClass = 0x3d8; // ObjectProperty
		constexpr auto ChatClass = 0x3e0; // ObjectProperty
		constexpr auto MessengerClass = 0x3e8; // ObjectProperty
		constexpr auto BuyItemClass = 0x3f0; // ObjectProperty
		constexpr auto ItemSellPopupClass = 0x3f8; // ObjectProperty
		constexpr auto QuickStartClass = 0x400; // ObjectProperty
		constexpr auto UserInfoClass = 0x408; // ObjectProperty
		constexpr auto CallingCardClass = 0x410; // ObjectProperty
		constexpr auto HelpClass = 0x418; // ObjectProperty
		constexpr auto AwaitListClass = 0x420; // ObjectProperty
		constexpr auto RepurchaseClass = 0x428; // ObjectProperty
		constexpr auto ExchangepopupClass = 0x430; // ObjectProperty
		constexpr auto RandomBoxPickUpClass = 0x438; // ObjectProperty
		constexpr auto ClausePopupClass = 0x440; // ObjectProperty
		constexpr auto ChangePropernounPopup = 0x448; // ObjectProperty
		constexpr auto AccessTermsClass = 0x450; // ObjectProperty
		constexpr auto AttendanceEventPopupClass = 0x458; // ObjectProperty
		constexpr auto RandomBoxShopBuyPopupClass = 0x460; // ObjectProperty
		constexpr auto RotationInfoPopupClass = 0x468; // ObjectProperty
		constexpr auto CompetitiveRewardInfoPopupClass = 0x470; // ObjectProperty
		constexpr auto SpecialGoodsInfoPopupClass = 0x478; // ObjectProperty
		constexpr auto ExtendPeriodItemPopupClass = 0x480; // ObjectProperty
		constexpr auto SeasonPassPopupClass = 0x488; // ObjectProperty
		constexpr auto LoginOTPClass = 0x490; // ObjectProperty
		constexpr auto ClanInfoChangePopup = 0x498; // ObjectProperty
		constexpr auto ClanRewardInfoPopup = 0x4a0; // ObjectProperty
		constexpr auto WeaponTuningPopup = 0x4a8; // ObjectProperty
		constexpr auto SortClass = 0x4b0; // ObjectProperty
		constexpr auto bAllFlashLoaded = 0x4b8; // uint32_t : 1
		constexpr auto bBuyItemTryPayment = 0x4b8; // uint32_t : 1
		constexpr auto bIgnorePressEvent = 0x4b8; // uint32_t : 1
		constexpr auto bPlayBGM = 0x4b8; // uint32_t : 1
		constexpr auto bDisplayedShowRoom = 0x4b8; // uint32_t : 1
		constexpr auto bIsOpenRandomBox = 0x4b8; // uint32_t : 1
		constexpr auto InviteDialogID = 0x4bc; // int32_t
		constexpr auto PopupList = 0x4c0; // TArray<ObjectProperty>
		constexpr auto UIDataStore_Mission = 0x4d0; // ObjectProperty
		constexpr auto UIDataStore_ETC = 0x4d8; // ObjectProperty
		constexpr auto ReservedScene = 0x4e0; // eFrontEndScene
		constexpr auto ShowRoomClass = 0x4e4; // ObjectProperty
		constexpr auto LogOut_BattleInfoPopUp = 0x4ec; // ObjectProperty
		constexpr auto DevReserveOpenRandomBoxID = 0x4f4; // int32_t
	}

	namespace n_ACombatSEIGameReplicationInfo {
		constexpr auto OccupiedAreas = 0x380; // TArray<ObjectProperty>
		constexpr auto TotalOccupiedAreaNum = 0x390; // int32_t
	}

	namespace n_ANavigationPoint {
		constexpr auto bEndPoint = 0x244; // uint32_t : 1
		constexpr auto bTransientEndPoint = 0x244; // uint32_t : 1
		constexpr auto bHideEditorPaths = 0x244; // uint32_t : 1
		constexpr auto bCanReach = 0x244; // uint32_t : 1
		constexpr auto bBlocked = 0x244; // uint32_t : 1
		constexpr auto bOneWayPath = 0x244; // uint32_t : 1
		constexpr auto bNeverUseStrafing = 0x244; // uint32_t : 1
		constexpr auto bAlwaysUseStrafing = 0x244; // uint32_t : 1
		constexpr auto bForceNoStrafing = 0x244; // uint32_t : 1
		constexpr auto bAutoBuilt = 0x244; // uint32_t : 1
		constexpr auto bSpecialMove = 0x244; // uint32_t : 1
		constexpr auto bNoAutoConnect = 0x244; // uint32_t : 1
		constexpr auto bNotBased = 0x244; // uint32_t : 1
		constexpr auto bPathsChanged = 0x244; // uint32_t : 1
		constexpr auto bDestinationOnly = 0x244; // uint32_t : 1
		constexpr auto bSourceOnly = 0x244; // uint32_t : 1
		constexpr auto bSpecialForced = 0x244; // uint32_t : 1
		constexpr auto bMustBeReachable = 0x244; // uint32_t : 1
		constexpr auto bBlockable = 0x244; // uint32_t : 1
		constexpr auto bFlyingPreferred = 0x244; // uint32_t : 1
		constexpr auto bMayCausePain = 0x244; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x244; // uint32_t : 1
		constexpr auto bVehicleDestination = 0x244; // uint32_t : 1
		constexpr auto bMakeSourceOnly = 0x244; // uint32_t : 1
		constexpr auto bMustTouchToReach = 0x244; // uint32_t : 1
		constexpr auto bCanWalkOnToReach = 0x244; // uint32_t : 1
		constexpr auto bBuildLongPaths = 0x244; // uint32_t : 1
		constexpr auto bBlockedForVehicles = 0x244; // uint32_t : 1
		constexpr auto bPreferredVehiclePath = 0x244; // uint32_t : 1
		constexpr auto bHasCrossLevelPaths = 0x244; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x244; // uint32_t : 1
		constexpr auto NavOctreeObject = 0x248; // FNavigationOctreeObject
		constexpr auto PathList = 0x284; // TArray<ObjectProperty>
		constexpr auto Volumes = 0x294; // TArray<FActorReference>
		constexpr auto visitedWeight = 0x2a4; // int32_t
		constexpr auto bestPathWeight = 0x2a8; // int32_t
		constexpr auto nextNavigationPoint = 0x2ac; // ObjectProperty
		constexpr auto nextOrdered = 0x2b4; // ObjectProperty
		constexpr auto prevOrdered = 0x2bc; // ObjectProperty
		constexpr auto previousPath = 0x2c4; // ObjectProperty
		constexpr auto Cost = 0x2cc; // int32_t
		constexpr auto ExtraCost = 0x2d0; // int32_t
		constexpr auto TransientCost = 0x2d4; // int32_t
		constexpr auto FearCost = 0x2d8; // int32_t
		constexpr auto CostArray = 0x2dc; // TArray<FDebugNavCost>
		constexpr auto InventoryCache = 0x2ec; // ObjectProperty
		constexpr auto InventoryDist = 0x2f4; // float
		constexpr auto LastDetourWeight = 0x2f8; // float
		constexpr auto CylinderComponent = 0x2fc; // ComponentProperty
		constexpr auto MaxPathSize = 0x304; // FCylinder
		constexpr auto NavGuid = 0x30c; // FGuid
		constexpr auto GoodSprite = 0x31c; // ComponentProperty
		constexpr auto BadSprite = 0x324; // ComponentProperty
		constexpr auto NetworkID = 0x32c; // int32_t
		constexpr auto AnchoredPawn = 0x330; // ObjectProperty
		constexpr auto LastAnchoredPawnTime = 0x338; // float
	}

	namespace n_ACombatDestroyableActor {
		constexpr auto Health = 0x244; // int32_t
		constexpr auto TeamIndex = 0x248; // char
		constexpr auto Mesh = 0x24c; // ComponentProperty
	}

	namespace n_UCombatMatchroomCompetitive {
		constexpr auto TeamRankingPoint = 0x7c; // int32_t
		constexpr auto CompMatchDialogID = 0x80; // int32_t
	}

	namespace n_UUIRoot {
		constexpr auto BadCapsLocContexts = 0x60; // TArray<FString>
	}

	namespace n_ARadialBlurActor {
		constexpr auto RadialBlur = 0x244; // ComponentProperty
	}

	namespace n_UNavMeshPathConstraint {
		constexpr auto NextConstraint = 0x60; // ObjectProperty
		constexpr auto NumNodesProcessed = 0x68; // int32_t
		constexpr auto NumThrownOutNodes = 0x6c; // int32_t
		constexpr auto AddedDirectCost = 0x70; // float
		constexpr auto AddedHeuristicCost = 0x74; // float
	}

	namespace n_UDataStoreClient {
		constexpr auto GlobalDataStoreClasses = 0x70; // TArray<FString>
		constexpr auto GlobalDataStores = 0x80; // TArray<ObjectProperty>
		constexpr auto PlayerDataStoreClassNames = 0x90; // TArray<FString>
		constexpr auto PlayerDataStoreClasses = 0xa0; // TArray<UUIDataStore*>
		constexpr auto PlayerDataStores = 0xb0; // TArray<FPlayerDataStoreGroup>
	}

	namespace n_UCombatDataTableRefTier {
		constexpr auto TierCodeName = 0x6c; // FString
		constexpr auto Tier = 0x7c; // int32_t
		constexpr auto GoalTierPoint = 0x80; // int32_t
		constexpr auto NameID = 0x84; // int32_t
		constexpr auto Img1 = 0x88; // FString
		constexpr auto Img2 = 0x98; // FString
		constexpr auto TierUpImg = 0xa8; // FString
		constexpr auto ImageID_Small = 0xb8; // int32_t
		constexpr auto ImageID_Big = 0xbc; // int32_t
		constexpr auto ImageID_TierUp = 0xc0; // int32_t
		constexpr auto Profile_Tier_Edge = 0xc4; // int32_t
	}

	namespace n_UAnimationCompressionAlgorithm_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x94; // float
		constexpr auto MaxPosDiffBitwise = 0x98; // float
		constexpr auto MaxAngleDiffBitwise = 0x9c; // float
		constexpr auto AllowedRotationFormats = 0xa0; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0xb0; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xc0; // uint32_t : 1
		constexpr auto bUseAdaptiveError = 0xc0; // uint32_t : 1
		constexpr auto bUseOverrideForEndEffectors = 0xc0; // uint32_t : 1
		constexpr auto bUseAdaptiveError2 = 0xc0; // uint32_t : 1
		constexpr auto ResampledFramerate = 0xc4; // float
		constexpr auto MinKeysForResampling = 0xc8; // int32_t
		constexpr auto TrackHeightBias = 0xcc; // int32_t
		constexpr auto ParentingDivisor = 0xd0; // float
		constexpr auto ParentingDivisorExponent = 0xd4; // float
		constexpr auto RotationErrorSourceRatio = 0xd8; // float
		constexpr auto TranslationErrorSourceRatio = 0xdc; // float
		constexpr auto MaxErrorPerTrackRatio = 0xe0; // float
		constexpr auto PerturbationProbeSize = 0xe4; // float
		constexpr auto PerReductionCachedData = 0xe8; // FPointer
	}

	namespace n_ACombatAI_TDMBase {
		constexpr auto bThrowedGrenadeCount = 0x5e8; // uint32_t : 1
		constexpr auto AIPawn_TDMBase = 0x5ec; // ObjectProperty
		constexpr auto AIGame_TDMBase = 0x5f4; // ObjectProperty
		constexpr auto UsableAIBeaconIndex = 0x5fc; // int32_t
	}

	namespace n_UGFxRawData {
		constexpr auto RawData = 0x60; // TArray<char>
		constexpr auto ReferencedSwfs = 0x70; // TArray<FString>
		constexpr auto References = 0x80; // TArray<ObjectProperty>
		constexpr auto UserReferences = 0x90; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x60; // FVector
		constexpr auto ResetRotation = 0x6c; // FRotator
		constexpr auto InitialTM = 0x80; // FMatrix
		constexpr auto InitialQuat = 0xc0; // FQuat
	}

	namespace n_UCombatUIDataStore_StringAliasBindingMap {
		constexpr auto FakePlatform = 0xf4; // int32_t
		constexpr auto CommandToBindNames = 0xf8; // FMap_Mirror
		constexpr auto ControllerMapArray = 0x140; // TArray<FControllerMap>
	}

	namespace n_UCombatDataTableRefTypeDefine {
		constexpr auto CodeID = 0x6c; // int32_t
		constexpr auto BUY_AFTER = 0x70; // char
		constexpr auto BUY_UC_FILE = 0x74; // FString
		constexpr auto String_ID = 0x84; // int32_t
		constexpr auto CODE_NAME = 0x88; // FString
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x68; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x8c; // uint32_t : 1
		constexpr auto UpdateMethod = 0x90; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto Input = 0xd0; // FExpressionInput
		constexpr auto DefaultR = 0x104; // uint32_t : 1
		constexpr auto DefaultG = 0x104; // uint32_t : 1
		constexpr auto DefaultB = 0x104; // uint32_t : 1
		constexpr auto DefaultA = 0x104; // uint32_t : 1
		constexpr auto InstanceOverride = 0x108; // FPointer
	}

	namespace n_ATriggerStreamingLevel {
		constexpr auto Levels = 0x254; // TArray<FLevelStreamingData>
	}

	namespace n_UGameSpecialMove {
		constexpr auto PawnOwner = 0x60; // ObjectProperty
		constexpr auto Handle = 0x68; // FName
		constexpr auto LastCanDoSpecialMoveTime = 0x70; // float
		constexpr auto bLastCanDoSpecialMove = 0x74; // uint32_t : 1
		constexpr auto bReachPreciseDestination = 0x74; // uint32_t : 1
		constexpr auto bReachedPreciseDestination = 0x74; // uint32_t : 1
		constexpr auto bReachPreciseRotation = 0x74; // uint32_t : 1
		constexpr auto bReachedPreciseRotation = 0x74; // uint32_t : 1
		constexpr auto bForcePrecisePosition = 0x74; // uint32_t : 1
		constexpr auto PreciseDestination = 0x78; // FVector
		constexpr auto PreciseDestBase = 0x84; // ObjectProperty
		constexpr auto PreciseDestRelOffset = 0x8c; // FVector
		constexpr auto PreciseRotationInterpolationTime = 0x98; // float
		constexpr auto PreciseRotation = 0x9c; // FRotator
	}

	namespace n_UPostProcessEffect {
		constexpr auto bShowInEditor = 0x60; // uint32_t : 1
		constexpr auto bShowInGame = 0x60; // uint32_t : 1
		constexpr auto bUseWorldSettings = 0x60; // uint32_t : 1
		constexpr auto bAffectsLightingOnly = 0x60; // uint32_t : 1
		constexpr auto EffectName = 0x64; // FName
		constexpr auto NodePosY = 0x6c; // int32_t
		constexpr auto NodePosX = 0x70; // int32_t
		constexpr auto DrawWidth = 0x74; // int32_t
		constexpr auto DrawHeight = 0x78; // int32_t
		constexpr auto OutDrawY = 0x7c; // int32_t
		constexpr auto InDrawY = 0x80; // int32_t
		constexpr auto SceneDPG = 0x84; // ESceneDepthPriorityGroup
		constexpr auto SecondSceneDPG = 0x85; // ESceneDepthPriorityGroup
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x68; // ELocationBoneSocketSource
		constexpr auto SelectionMethod = 0x69; // ELocationBoneSocketSelectionMethod
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto SourceLocations = 0x78; // TArray<FLocationBoneSocketInfo>
		constexpr auto bUpdatePositionEachFrame = 0x88; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x88; // uint32_t : 1
		constexpr auto bInheritVelocityAtSpawn = 0x88; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x8c; // FName
		constexpr auto LastUpdateTime = 0x94; // float
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x214; // ObjectProperty
		constexpr auto Parent = 0x21c; // ObjectProperty
		constexpr auto PhysMaterialMask = 0x224; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x22c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x230; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x238; // ObjectProperty
		constexpr auto bHasStaticPermutationResource = 0x240; // uint32_t : 1
		constexpr auto bStaticPermutationDirty = 0x240; // uint32_t : 1
		constexpr auto ReentrantFlag = 0x240; // uint32_t : 1
		constexpr auto bNeedsMaterialFlattening = 0x240; // uint32_t : 1
		constexpr auto StaticParameters = 0x244; // FPointer [0x2]
		constexpr auto StaticPermutationResources = 0x254; // FPointer [0x2]
		constexpr auto Resources = 0x264; // FPointer [0x3]
		constexpr auto ReferencedTextures = 0x27c; // TArray<ObjectProperty>
		constexpr auto ParentLightingGuid = 0x28c; // FGuid
	}

	namespace n_USeqAct_SetMatInstTexParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto NewTexture = 0x110; // ObjectProperty
		constexpr auto ParamName = 0x118; // FName
	}

	namespace n_AKeypoint {
		constexpr auto SpriteComp = 0x244; // ComponentProperty
	}

	namespace n_UPBRuleNodeBase {
		constexpr auto NextRules = 0x60; // TArray<FPBRuleLink>
	}

	namespace n_UUIGameInfoSummary {
		constexpr auto ClassName = 0x94; // FString
		constexpr auto GameAcronym = 0xa4; // FString
		constexpr auto MapPrefix = 0xb4; // FString
		constexpr auto bIsTeamGame = 0xc4; // uint32_t : 1
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
		constexpr auto GameSettingsClassName = 0xc8; // FString
		constexpr auto GameName = 0xd8; // FString
		constexpr auto Description = 0xe8; // FString
	}

	namespace n_AStaticLightCollectionActor {
		constexpr auto LightComponents = 0x250; // TArray<ComponentProperty>
		constexpr auto MaxLightComponents = 0x260; // int32_t
	}

	namespace n_AGameCrowdAgent {
		constexpr auto VfTable_IInterface_RVO = 0x24c; // FPointer
		constexpr auto MyGroup = 0x254; // ObjectProperty
		constexpr auto PreferredVelocity = 0x25c; // FVector
		constexpr auto PendingVelocity = 0x268; // FVector
		constexpr auto CurrentDestination = 0x274; // ObjectProperty
		constexpr auto BehaviorDestination = 0x27c; // ObjectProperty
		constexpr auto PreviousDestination = 0x284; // ObjectProperty
		constexpr auto InterpZTranslation = 0x28c; // float
		constexpr auto Health = 0x290; // int32_t
		constexpr auto DeadBodyDuration = 0x294; // float
		constexpr auto LightEnvironment = 0x298; // ComponentProperty
		constexpr auto ConformTraceFrameCount = 0x2a0; // int32_t
		constexpr auto NearbyDynamics = 0x2a4; // TArray<FNearbyDynamicItem>
		constexpr auto bUniformScale = 0x2b4; // uint32_t : 1
		constexpr auto bCheckForObstacles = 0x2b4; // uint32_t : 1
		constexpr auto bUseNavMeshPathing = 0x2b4; // uint32_t : 1
		constexpr auto bWantsSeePlayerNotification = 0x2b4; // uint32_t : 1
		constexpr auto bAllowPitching = 0x2b4; // uint32_t : 1
		constexpr auto bHitObstacle = 0x2b4; // uint32_t : 1
		constexpr auto bBadHitNormal = 0x2b4; // uint32_t : 1
		constexpr auto bSimulateThisTick = 0x2b4; // uint32_t : 1
		constexpr auto bPotentialEncounter = 0x2b4; // uint32_t : 1
		constexpr auto bIsPanicked = 0x2b4; // uint32_t : 1
		constexpr auto bWantsGroupIdle = 0x2b4; // uint32_t : 1
		constexpr auto bPreferVisibleDestination = 0x2b4; // uint32_t : 1
		constexpr auto bPreferVisibleDestinationOnSpawn = 0x2b4; // uint32_t : 1
		constexpr auto bHasNotifiedSpawner = 0x2b4; // uint32_t : 1
		constexpr auto bIsInSpawnPool = 0x2b4; // uint32_t : 1
		constexpr auto bPaused = 0x2b4; // uint32_t : 1
		constexpr auto ConformType = 0x2b8; // EConformType
		constexpr auto ConformTraceDist = 0x2bc; // float
		constexpr auto ConformTraceInterval = 0x2c0; // int32_t
		constexpr auto CurrentConformTraceInterval = 0x2c4; // int32_t
		constexpr auto LastGroundZ = 0x2c8; // float
		constexpr auto AwareRadius = 0x2cc; // float
		constexpr auto AvoidOtherRadius = 0x2d0; // float
		constexpr auto AvoidOtherSampleList = 0x2d4; // TArray<FAvoidOtherSampleItem>
		constexpr auto PENALTY_COEFF_ANGLETOGOAL = 0x2e4; // float
		constexpr auto PENALTY_COEFF_ANGLETOVEL = 0x2e8; // float
		constexpr auto PENALTY_COEFF_MAG = 0x2ec; // float
		constexpr auto MIN_PENALTY_THRESHOLD = 0x2f0; // float
		constexpr auto LastProgressTime = 0x2f4; // float
		constexpr auto LastFallbackActiveTime = 0x2f8; // float
		constexpr auto MaxPathLaneValue = 0x2fc; // float
		constexpr auto CurrentPathLaneValue = 0x300; // float
		constexpr auto ExtraPathCost = 0x304; // int32_t
		constexpr auto RotateToTargetSpeed = 0x308; // float
		constexpr auto MaxYawRate = 0x30c; // float
		constexpr auto MeshMinScale3D = 0x310; // FVector
		constexpr auto MeshMaxScale3D = 0x31c; // FVector
		constexpr auto EyeZOffset = 0x328; // float
		constexpr auto ProximityLODDist = 0x32c; // float
		constexpr auto VisibleProximityLODDist = 0x330; // float
		constexpr auto LastKnownGoodPosition = 0x334; // FVector
		constexpr auto GroundOffset = 0x340; // float
		constexpr auto IntermediatePoint = 0x344; // FVector
		constexpr auto SearchExtent = 0x350; // FVector
		constexpr auto NavigationHandleClass = 0x35c; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x364; // ObjectProperty
		constexpr auto ObstacleCheckCount = 0x36c; // int32_t
		constexpr auto WalkableFloorZ = 0x370; // float
		constexpr auto LastPathingAttempt = 0x374; // float
		constexpr auto LastUpdateTime = 0x378; // float
		constexpr auto NotVisibleLifeSpan = 0x37c; // float
		constexpr auto MyArchetype = 0x380; // ObjectProperty
		constexpr auto MaxWalkingSpeed = 0x388; // float
		constexpr auto MaxRunningSpeed = 0x38c; // float
		constexpr auto MaxSpeed = 0x390; // float
		constexpr auto RecentInteractions = 0x394; // TArray<FRecentInteraction>
		constexpr auto BeaconMaxDist = 0x3a4; // float
		constexpr auto BeaconOffset = 0x3a8; // FVector
		constexpr auto BeaconTexture = 0x3b4; // ObjectProperty
		constexpr auto BeaconColor = 0x3bc; // FLinearColor
		constexpr auto AmbientSoundCue = 0x3cc; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x3d4; // ComponentProperty
		constexpr auto CurrentBehavior = 0x3dc; // ObjectProperty
		constexpr auto CurrentBehaviorActivationTime = 0x3e4; // float
		constexpr auto EncounterAgentBehaviors = 0x3e8; // TArray<FBehaviorEntry>
		constexpr auto SeePlayerBehaviors = 0x3f8; // TArray<FBehaviorEntry>
		constexpr auto MaxSeePlayerDistSq = 0x408; // float
		constexpr auto SeePlayerInterval = 0x40c; // float
		constexpr auto SpawnBehaviors = 0x410; // TArray<FBehaviorEntry>
		constexpr auto UneasyBehaviors = 0x420; // TArray<FBehaviorEntry>
		constexpr auto AlertBehaviors = 0x430; // TArray<FBehaviorEntry>
		constexpr auto PanicBehaviors = 0x440; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviors = 0x450; // TArray<FBehaviorEntry>
		constexpr auto TakeDamageBehaviors = 0x460; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviorInterval = 0x470; // float
		constexpr auto ForceUpdateTime = 0x474; // float
		constexpr auto ReachThreshold = 0x478; // float
		constexpr auto GroupWaitingBehaviors = 0x47c; // TArray<FBehaviorEntry>
		constexpr auto DesiredGroupRadius = 0x48c; // float
		constexpr auto DesiredGroupRadiusSq = 0x490; // float
		constexpr auto MaxLOSLifeDistanceSq = 0x494; // float
		constexpr auto MySpawner = 0x498; // TScriptInterface<Class>
		constexpr auto SpawnOffset = 0x4a8; // FVector
		constexpr auto InitialLastRenderTime = 0x4b4; // float
		constexpr auto DebugAgentColor = 0x4b8; // FColor
		constexpr auto DebugSpawnDest = 0x4bc; // ObjectProperty
	}

	namespace n_UGripBTRandom {
		constexpr auto RunAll = 0xbc; // uint32_t : 1
	}

	namespace n_USkelControl_Multiply {
		constexpr auto Multiplier = 0xd0; // float
	}

	namespace n_USeqAct_Teleport {
		constexpr auto bUpdateRotation = 0x108; // uint32_t : 1
		constexpr auto bCheckOverlap = 0x108; // uint32_t : 1
		constexpr auto TeleportDistance = 0x10c; // float
		constexpr auto TeleportVolumes = 0x110; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataTableRefSystemTextColor {
		constexpr auto GRADE = 0x6c; // int32_t
		constexpr auto TextColor = 0x70; // FString
	}

	namespace n_AZoneInfo {
		constexpr auto KillZ = 0x244; // float
		constexpr auto SoftKill = 0x248; // float
		constexpr auto KillZDamageType = 0x24c; // UKillZDamageType*
		constexpr auto bSoftKillZ = 0x254; // uint32_t : 1
	}

	namespace n_UCombatGameThirdPersonCamera {
		constexpr auto ThirdPersonCamDead = 0x1d4; // ObjectProperty
		constexpr auto ThirdPersonCamDeadClass = 0x1dc; // UGameThirdPersonCameraMode*
		constexpr auto ThirdPersonCamSpectator = 0x1e4; // ObjectProperty
		constexpr auto ThirdPersonCamSpectatorClass = 0x1ec; // UGameThirdPersonCameraMode*
		constexpr auto LocalPC = 0x1f4; // ObjectProperty
	}

	namespace n_UGripCondNode_TargetVisible {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto bNegative = 0xf0; // uint32_t : 1
	}

	namespace n_UAppNotificationsBase {
		constexpr auto AppLaunchNotification = 0x80; // FLaunchNotificationInfo
		constexpr auto __OnReceivedLocalNotification__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnReceivedRemoteNotification__Delegate = 0xbc; // DelegateProperty
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x6c; // FRawDistributionFloat
		constexpr auto RateScale = 0x90; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xb4; // EParticleBurstMethod
		constexpr auto BurstList = 0xb8; // TArray<FParticleBurst>
	}

	namespace n_UStaticMeshComponent {
		constexpr auto PreviewLightRadius = 0x260; // ComponentProperty
		constexpr auto ForcedLodModel = 0x268; // int32_t
		constexpr auto PreviousLODLevel = 0x26c; // int32_t
		constexpr auto StaticMesh = 0x270; // ObjectProperty
		constexpr auto WireframeColor = 0x278; // FColor
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x27c; // uint32_t : 1
		constexpr auto bOverrideLightMapResolution = 0x27c; // uint32_t : 1
		constexpr auto bOverrideLightMapRes = 0x27c; // uint32_t : 1
		constexpr auto OverriddenLightMapResolution = 0x280; // int32_t
		constexpr auto OverriddenLightMapRes = 0x284; // int32_t
		constexpr auto OverriddenLODMaxRange = 0x288; // float
		constexpr auto StreamingDistanceMultiplier = 0x28c; // float
		constexpr auto SubDivisionStepSize = 0x290; // int32_t
		constexpr auto bUseSubDivisions = 0x294; // uint32_t : 1
		constexpr auto bForceStaticDecals = 0x294; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x294; // uint32_t : 1
		constexpr auto bUseSimpleLightmapModifications = 0x294; // uint32_t : 1
		constexpr auto SimpleLightmapModificationFunction = 0x298; // ELightmapModificationFunction
		constexpr auto bNeverBecomeDynamic = 0x29c; // uint32_t : 1
		constexpr auto IrrelevantLights = 0x2a0; // TArray<FGuid>
		constexpr auto LODData = 0x2b0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto Attachments = 0x2c0; // TArray<FAttachment>
		constexpr auto VertexPositionVersionNumber = 0x2d0; // int32_t
		constexpr auto LightmassSettings = 0x2d4; // FLightmassPrimitiveSettings
		constexpr auto MaterialSet = 0x2f0; // char
	}

	namespace n_UCombatStatStorageBase {
		constexpr auto StorageOwner = 0x60; // ObjectProperty
		constexpr auto StatDataStore = 0x68; // ObjectProperty
		constexpr auto TempSaveStat = 0x70; // TArray<FPlayerStatInfo>
		constexpr auto Processed = 0x80; // uint32_t : 1
		constexpr auto StatSaveCondition_PlayerMode = 0x84; // FStatSaveCondition [0x4]
	}

	namespace n_UGripCondNode_TargetExistence {
		constexpr auto CurAITarget = 0xec; // ECurAITarget
		constexpr auto bNegative = 0xf0; // uint32_t : 1
	}

	namespace n_UTcpNetDriver {
		constexpr auto AllowPlayerPortUnreach = 0x1e0; // uint32_t : 1
		constexpr auto LogPortUnreach = 0x1e4; // uint32_t : 1
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x250; // ObjectProperty
		constexpr auto BrushAggGeom = 0x258; // FKAggregateGeom
		constexpr auto BrushPhysDesc = 0x2a4; // FPointer
		constexpr auto CachedPhysBrushData = 0x2ac; // FKCachedConvexData_Mirror
		constexpr auto CachedPhysBrushDataVersion = 0x2bc; // int32_t
		constexpr auto bBlockComplexCollisionTrace = 0x2c0; // uint32_t : 1
	}

	namespace n_USeqAct_SetMotionBlurParams {
		constexpr auto MotionBlurAmount = 0x120; // float
		constexpr auto InterpolateSeconds = 0x124; // float
		constexpr auto InterpolateElapsed = 0x128; // float
		constexpr auto OldMotionBlurAmount = 0x12c; // float
	}

	namespace n_UUIPropertyDataProvider {
		constexpr auto ComplexPropertyTypes = 0x70; // TArray<UProperty*>
		constexpr auto __CanSupportComplexPropertyType__Delegate = 0x80; // DelegateProperty
	}

	namespace n_ACombatArmsRaceGameReplicationInfo {
		constexpr auto TopKill = 0x380; // int32_t [0x2]
		constexpr auto VC_TopPRI = 0x388; // ObjectProperty
		constexpr auto PM_TopPRI = 0x390; // ObjectProperty
	}

	namespace n_UCCSBTShoot {
		constexpr auto FireBurstPerShot = 0xbc; // int32_t
		constexpr auto DelayBetweenBursts = 0xc0; // float
	}

	namespace n_UGameStatsAggregator {
		constexpr auto GameState = 0x88; // ObjectProperty
		constexpr auto AggregatesList = 0x90; // TArray<FAggregateEventMapping>
		constexpr auto AggregateEventsMapping = 0xa0; // FMap_Mirror
		constexpr auto AggregateEvents = 0xe8; // TArray<FGameplayEventMetaData>
		constexpr auto AggregatesFound = 0xf8; // TArray<int32_t>
		constexpr auto AllGameEvents = 0x108; // FGameEvents
		constexpr auto AllTeamEvents = 0x150; // TArray<FTeamEvents>
		constexpr auto AllPlayerEvents = 0x160; // TArray<FPlayerEvents>
		constexpr auto AllWeaponEvents = 0x170; // FWeaponEvents
		constexpr auto AllProjectileEvents = 0x1c8; // FProjectileEvents
		constexpr auto AllPawnEvents = 0x220; // FPawnEvents
		constexpr auto AllDamageEvents = 0x278; // FDamageEvents
	}

	namespace n_UDrawSphereComponent {
		constexpr auto SphereColor = 0x250; // FColor
		constexpr auto SphereMaterial = 0x254; // ObjectProperty
		constexpr auto SphereRadius = 0x25c; // float
		constexpr auto SphereSides = 0x260; // int32_t
		constexpr auto bDrawWireSphere = 0x264; // uint32_t : 1
		constexpr auto bDrawLitSphere = 0x264; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x264; // uint32_t : 1
	}

	namespace n_UAnimNodeBlendBase {
		constexpr auto Children = 0xe8; // TArray<FAnimBlendChild>
		constexpr auto bFixNumChildren = 0xf8; // uint32_t : 1
		constexpr auto BlendType = 0xfc; // AlphaBlendType
	}

	namespace n_UCombatLCTFMovie {
		constexpr auto CTFContainer = 0xad0; // ObjectProperty
		constexpr auto CTFMovie = 0xad8; // ObjectProperty
		constexpr auto bUpdate = 0xae0; // uint32_t : 1
		constexpr auto bUpdateFlagGet = 0xae0; // uint32_t : 1
		constexpr auto LastTeamMission = 0xae4; // int32_t [0x2]
	}

	namespace n_UCombatDemolitionGameMessage {
		constexpr auto BombPickupTextID = 0x84; // int32_t
		constexpr auto BombDropTextID = 0x88; // int32_t
	}

	namespace n_UCombatDataTableRefShopSellItem {
		constexpr auto TimeCondition = 0x6c; // int32_t
		constexpr auto OverlapCondition = 0x70; // int32_t
		constexpr auto MoneyType = 0x74; // int32_t
		constexpr auto SellCost = 0x78; // int32_t
		constexpr auto CodeName = 0x7c; // FString
	}

	namespace n_USpeedTreeComponent {
		constexpr auto SpeedTree = 0x250; // ObjectProperty
		constexpr auto bUseLeafCards = 0x258; // uint32_t : 1
		constexpr auto bUseLeafMeshes = 0x258; // uint32_t : 1
		constexpr auto bUseBranches = 0x258; // uint32_t : 1
		constexpr auto bUseFronds = 0x258; // uint32_t : 1
		constexpr auto bUseBillboards = 0x258; // uint32_t : 1
		constexpr auto Lod3DStart = 0x25c; // float
		constexpr auto Lod3DEnd = 0x260; // float
		constexpr auto LodBillboardStart = 0x264; // float
		constexpr auto LodBillboardEnd = 0x268; // float
		constexpr auto LodLevelOverride = 0x26c; // float
		constexpr auto Branch1Material = 0x270; // ObjectProperty
		constexpr auto Branch2Material = 0x278; // ObjectProperty
		constexpr auto FrondMaterial = 0x280; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x288; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x290; // ObjectProperty
		constexpr auto BillboardMaterial = 0x298; // ObjectProperty
		constexpr auto StaticLights = 0x2a0; // TArray<FSpeedTreeStaticLight>
		constexpr auto BranchLightMap = 0x2b0; // FLightMapRef
		constexpr auto FrondLightMap = 0x2b8; // FLightMapRef
		constexpr auto LeafMeshLightMap = 0x2c0; // FLightMapRef
		constexpr auto LeafCardLightMap = 0x2c8; // FLightMapRef
		constexpr auto BillboardLightMap = 0x2d0; // FLightMapRef
		constexpr auto RotationOnlyMatrix = 0x2e0; // FMatrix
		constexpr auto LightmassSettings = 0x320; // FLightmassPrimitiveSettings
	}

	namespace n_UCanvas {
		constexpr auto Font = 0x60; // ObjectProperty
		constexpr auto OrgX = 0x68; // float
		constexpr auto OrgY = 0x6c; // float
		constexpr auto ClipX = 0x70; // float
		constexpr auto ClipY = 0x74; // float
		constexpr auto CurX = 0x78; // float
		constexpr auto CurY = 0x7c; // float
		constexpr auto CurZ = 0x80; // float
		constexpr auto CurYL = 0x84; // float
		constexpr auto DrawColor = 0x88; // FColor
		constexpr auto bCenter = 0x8c; // uint32_t : 1
		constexpr auto bNoSmooth = 0x8c; // uint32_t : 1
		constexpr auto SizeX = 0x90; // int32_t
		constexpr auto SizeY = 0x94; // int32_t
		constexpr auto Canvas = 0x98; // FPointer
		constexpr auto SceneView = 0xa0; // FPointer
		constexpr auto ColorModulate = 0xb0; // FPlane
		constexpr auto DefaultTexture = 0xc0; // ObjectProperty
	}

	namespace n_ACombatOccupiedAreaVolume {
		constexpr auto ParticleParamList_Unocuupied = 0x280; // FFlagParticleParam
		constexpr auto ParticleParamList_Battling = 0x294; // FFlagParticleParam
		constexpr auto ParticleParamList_OurTeam = 0x2a8; // FFlagParticleParam
		constexpr auto ParticleParamList_Enemy = 0x2bc; // FFlagParticleParam
		constexpr auto SeizeEffect = 0x2d0; // ObjectProperty
		constexpr auto SeizePSC = 0x2d8; // ComponentProperty
		constexpr auto SeizeEffectSizeRatio = 0x2e0; // float
		constexpr auto FirstOccupiedTeamIndex = 0x2e4; // int32_t
		constexpr auto OccupationAreaDatas = 0x2e8; // TArray<ObjectProperty>
		constexpr auto WithInTeamInfo = 0x2f8; // TArray<FOccupiedTeamMemberInfo>
		constexpr auto CurrentOccupyState = 0x308; // FOccupyDataType
		constexpr auto AreaID = 0x310; // int32_t
		constexpr auto AreaName = 0x314; // FString
		constexpr auto bDirectGoalSetting = 0x324; // uint32_t : 1
		constexpr auto GoalScore = 0x328; // int32_t
		constexpr auto TargetFlagActor = 0x32c; // ObjectProperty
	}

	namespace n_UMobileInputZone {
		constexpr auto Type = 0x60; // EZoneType
		constexpr auto TouchpadIndex = 0x61; // char
		constexpr auto State = 0x62; // EZoneState
		constexpr auto SlideType = 0x63; // EZoneSlideType
		constexpr auto Caption = 0x64; // FString
		constexpr auto InputKey = 0x74; // FName
		constexpr auto HorizontalInputKey = 0x7c; // FName
		constexpr auto TapInputKey = 0x84; // FName
		constexpr auto DoubleTapInputKey = 0x8c; // FName
		constexpr auto VertMultiplier = 0x94; // float
		constexpr auto HorizMultiplier = 0x98; // float
		constexpr auto Acceleration = 0x9c; // float
		constexpr auto Smoothing = 0xa0; // float
		constexpr auto EscapeVelocityStrength = 0xa4; // float
		constexpr auto bScalePawnMovement = 0xa8; // uint32_t : 1
		constexpr auto bRelativeX = 0xa8; // uint32_t : 1
		constexpr auto bRelativeY = 0xa8; // uint32_t : 1
		constexpr auto bRelativeSizeX = 0xa8; // uint32_t : 1
		constexpr auto bRelativeSizeY = 0xa8; // uint32_t : 1
		constexpr auto bActiveSizeYFromX = 0xa8; // uint32_t : 1
		constexpr auto bSizeYFromSizeX = 0xa8; // uint32_t : 1
		constexpr auto bApplyGlobalScaleToActiveSizes = 0xa8; // uint32_t : 1
		constexpr auto bCenterX = 0xa8; // uint32_t : 1
		constexpr auto bCenterY = 0xa8; // uint32_t : 1
		constexpr auto bIsInvisible = 0xa8; // uint32_t : 1
		constexpr auto bQuickDoubleTap = 0xa8; // uint32_t : 1
		constexpr auto bCenterOnEvent = 0xa8; // uint32_t : 1
		constexpr auto bSliderHasTrack = 0xa8; // uint32_t : 1
		constexpr auto bFloatingTiltZone = 0xa8; // uint32_t : 1
		constexpr auto bUseGentleTransitions = 0xa8; // uint32_t : 1
		constexpr auto bAllowFirstDeltaForTrackballZone = 0xa8; // uint32_t : 1
		constexpr auto bRenderGuides = 0xa8; // uint32_t : 1
		constexpr auto bIsDoubleTapAndHold = 0xa8; // uint32_t : 1
		constexpr auto X = 0xac; // float
		constexpr auto Y = 0xb0; // float
		constexpr auto SizeX = 0xb4; // float
		constexpr auto SizeY = 0xb8; // float
		constexpr auto ActiveSizeX = 0xbc; // float
		constexpr auto ActiveSizeY = 0xc0; // float
		constexpr auto InitialX = 0xc4; // float
		constexpr auto InitialY = 0xc8; // float
		constexpr auto InitialSizeX = 0xcc; // float
		constexpr auto InitialSizeY = 0xd0; // float
		constexpr auto InitialActiveSizeX = 0xd4; // float
		constexpr auto InitialActiveSizeY = 0xd8; // float
		constexpr auto AuthoredGlobalScale = 0xdc; // float
		constexpr auto Border = 0xe0; // float
		constexpr auto ResetCenterAfterInactivityTime = 0xe4; // float
		constexpr auto TapDistanceConstraint = 0xe8; // float
		constexpr auto ActivateTime = 0xec; // float
		constexpr auto DeactivateTime = 0xf0; // float
		constexpr auto RenderColor = 0xf4; // FColor
		constexpr auto InactiveAlpha = 0xf8; // float
		constexpr auto CaptionXAdjustment = 0xfc; // float
		constexpr auto CaptionYAdjustment = 0x100; // float
		constexpr auto OverrideTexture1 = 0x104; // ObjectProperty
		constexpr auto OverrideTexture1Name = 0x10c; // FString
		constexpr auto OverrideUVs1 = 0x11c; // FTextureUVs
		constexpr auto OverrideTexture2 = 0x12c; // ObjectProperty
		constexpr auto OverrideTexture2Name = 0x134; // FString
		constexpr auto OverrideUVs2 = 0x144; // FTextureUVs
		constexpr auto InitialLocation = 0x154; // FVector2D
		constexpr auto CurrentLocation = 0x15c; // FVector2D
		constexpr auto CurrentCenter = 0x164; // FVector2D
		constexpr auto InitialCenter = 0x16c; // FVector2D
		constexpr auto PreviousLocations = 0x174; // FVector2D [0x6]
		constexpr auto PreviousMoveDeltaTimes = 0x1a4; // float [0x6]
		constexpr auto PreviousLocationCount = 0x1bc; // int32_t
		constexpr auto LastTouchTime = 0x1c0; // float
		constexpr auto TimeSinceLastTapRepeat = 0x1c4; // float
		constexpr auto AnimatingFadeOpacity = 0x1c8; // float
		constexpr auto InputOwner = 0x1cc; // ObjectProperty
		constexpr auto TransitionTime = 0x1d4; // float
		constexpr auto EscapeVelocity = 0x1d8; // FVector2D
		constexpr auto MobileSeqEventHandlers = 0x1e0; // TArray<ObjectProperty>
		constexpr auto LastAxisValues = 0x1f0; // FVector2D
		constexpr auto TotalActiveTime = 0x1f8; // float
		constexpr auto LastWentActiveTime = 0x1fc; // float
		constexpr auto __OnProcessInputDelegate__Delegate = 0x200; // DelegateProperty
		constexpr auto __OnTapDelegate__Delegate = 0x210; // DelegateProperty
		constexpr auto __OnDoubleTapDelegate__Delegate = 0x220; // DelegateProperty
		constexpr auto __OnProcessSlide__Delegate = 0x230; // DelegateProperty
		constexpr auto __OnPreDrawZone__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnPostDrawZone__Delegate = 0x250; // DelegateProperty
	}

	namespace n_UCombatRescueGameMovie {
		constexpr auto HostageContainer = 0xad0; // ObjectProperty
		constexpr auto bUpdate = 0xad8; // uint32_t : 1
		constexpr auto HostageStateMovie = 0xadc; // ObjectProperty
		constexpr auto RepairTimeBarMC = 0xae4; // ObjectProperty
	}

	namespace n_USplineAudioComponent {
		constexpr auto ListenerScopeRadius = 0x2a0; // float
		constexpr auto ClosestPointOnSplineIndex = 0x2a4; // int32_t
		constexpr auto Points = 0x2a8; // TArray<FInterpPointOnSpline>
	}

	namespace n_AInventory {
		constexpr auto Inventory = 0x244; // ObjectProperty
		constexpr auto InvManager = 0x24c; // ObjectProperty
		constexpr auto ItemName = 0x254; // FString
		constexpr auto bDropOnDeath = 0x264; // uint32_t : 1
		constexpr auto bDelayedSpawn = 0x264; // uint32_t : 1
		constexpr auto bPredictRespawns = 0x264; // uint32_t : 1
		constexpr auto RespawnTime = 0x268; // float
		constexpr auto MaxDesireability = 0x26c; // float
		constexpr auto PickupMessage = 0x270; // FString
		constexpr auto PickupSound = 0x280; // ObjectProperty
		constexpr auto PickupForce = 0x288; // FString
		constexpr auto DroppedPickupClass = 0x298; // ADroppedPickup*
		constexpr auto DroppedPickupMesh = 0x2a0; // ComponentProperty
		constexpr auto PickupFactoryMesh = 0x2a8; // ComponentProperty
		constexpr auto DroppedPickupParticles = 0x2b0; // ComponentProperty
		constexpr auto DroppedPickupGetterParticles = 0x2b8; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlineGameSearch {
		constexpr auto SearchResultsName = 0x98; // FName
		constexpr auto OnlineSub = 0xa0; // ObjectProperty
		constexpr auto GameInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameSearchCfgList = 0xb8; // TArray<FGameSearchCfg>
		constexpr auto SelectedIndex = 0xc8; // int32_t
		constexpr auto ActiveSearchIndex = 0xcc; // int32_t
	}

	namespace n_USeqAct_Possess {
		constexpr auto PawnToPossess = 0x108; // ObjectProperty
		constexpr auto bKillOldPawn = 0x110; // uint32_t : 1
		constexpr auto bTryToLeaveVehicle = 0x110; // uint32_t : 1
	}

	namespace n_UCombatHUD_MarkerObject {
		constexpr auto Container = 0x1b0; // ObjectProperty
		constexpr auto MarkerID = 0x1b8; // int32_t
		constexpr auto MaxLifeTime = 0x1bc; // float
		constexpr auto RemainLifeTime = 0x1c0; // float
		constexpr auto CurrentAlpha = 0x1c4; // int32_t
		constexpr auto WorldLocation = 0x1c8; // FVector
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x214; // int32_t
	}

	namespace n_UCombatDataTableRefCompetitiveBindMode {
		constexpr auto SeasonCodeName = 0x6c; // FString
		constexpr auto ModeCodeName = 0x7c; // FString
		constexpr auto SeasonGroup = 0x8c; // FString
		constexpr auto SeasonHistory = 0x9c; // uint32_t : 1
		constexpr auto IsRegularMode = 0x9c; // uint32_t : 1
		constexpr auto ModeStart = 0xa0; // FTimeData
		constexpr auto ModeEnd = 0xa8; // FTimeData
		constexpr auto PlacementMatchCount = 0xb0; // int32_t
		constexpr auto DefaultTierPoint = 0xb4; // int32_t
	}

	namespace n_AWebConnection {
		constexpr auto WebServer = 0x29c; // ObjectProperty
		constexpr auto ReceivedData = 0x2a4; // FString
		constexpr auto Request = 0x2b4; // ObjectProperty
		constexpr auto Response = 0x2bc; // ObjectProperty
		constexpr auto Application = 0x2c4; // ObjectProperty
		constexpr auto bDelayCleanup = 0x2cc; // uint32_t : 1
		constexpr auto RawBytesExpecting = 0x2d0; // int32_t
		constexpr auto MaxValueLength = 0x2d4; // int32_t
		constexpr auto MaxLineLength = 0x2d8; // int32_t
		constexpr auto ConnID = 0x2dc; // int32_t
	}

	namespace n_UFaceFXAnimSet {
		constexpr auto InternalFaceFXAnimSet = 0x60; // FPointer
		constexpr auto RawFaceFXAnimSetBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXMiniSessionBytes = 0x78; // TArray<char>
		constexpr auto NumLoadErrors = 0x88; // int32_t
	}

	namespace n_UCombatHUD_ChampionshipSpectatedPlayerInfo {
		constexpr auto LastPlayerName = 0xc0; // FString
	}

	namespace n_UScriptedTexture {
		constexpr auto bNeedsUpdate = 0x144; // uint32_t : 1
		constexpr auto bSkipNextClear = 0x144; // uint32_t : 1
		constexpr auto __Render__Delegate = 0x148; // DelegateProperty
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x90; // uint32_t : 1
		constexpr auto FrameRate = 0x94; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb8; // int32_t
	}

	namespace n_UCombatAnimNotify_AttachStaticMesh {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto TargetBoneName = 0x68; // FName
		constexpr auto StaticMesh = 0x70; // ObjectProperty
		constexpr auto CurrStaticMesh = 0x78; // ObjectProperty
		constexpr auto TargetBoneIndex = 0x80; // int32_t
		constexpr auto SocketMatrix = 0x90; // FMatrix
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x60; // FFontImportOptionsData
	}

	namespace n_ACombatRescueGameHUD {
		constexpr auto bStateNameDirty = 0x62c; // uint32_t : 1
		constexpr auto bMovePositionDirty = 0x62c; // uint32_t : 1
	}

	namespace n_UCombatAnimBlendHostage {
		constexpr auto HostageActor = 0x120; // ObjectProperty
	}

	namespace n_UCombatFrontEndBannerManager {
		constexpr auto ImageDurationTime = 0x60; // float
		constexpr auto ImageLastTime = 0x64; // float
		constexpr auto NumberOfImages = 0x68; // int32_t
		constexpr auto bIsReady = 0x6c; // uint32_t : 1
		constexpr auto BannerTextureWidth = 0x70; // int32_t
		constexpr auto BannerTextureHeight = 0x74; // int32_t
		constexpr auto OnlineBannerInfos = 0x78; // TArray<FOnlineBannerInfo>
		constexpr auto DisplayBannerInfos = 0x88; // FDisplayBannerInfo [0x2]
	}

	namespace n_UCombatSkelCtrl_Spring {
		constexpr auto bInitialized = 0x100; // uint32_t : 1
		constexpr auto OwnerPawn = 0x104; // ObjectProperty
		constexpr auto AttachedBoneName = 0x10c; // FName
		constexpr auto BodyInstance = 0x114; // ObjectProperty
		constexpr auto MaxAngle = 0x11c; // FRotator
		constexpr auto MinAngle = 0x128; // FRotator
		constexpr auto Falloff = 0x134; // float
		constexpr auto SpringStiffness = 0x138; // float
		constexpr auto AVModifier = 0x13c; // float
		constexpr auto CurrentAngle = 0x140; // FRotator
		constexpr auto RandomPortion = 0x14c; // float
		constexpr auto LastHitMomentum = 0x150; // FVector
		constexpr auto LastHitTime = 0x15c; // float
		constexpr auto MomentumPortion = 0x160; // float
	}

	namespace n_URB_ConstraintInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto OwnerComponent = 0x68; // ComponentProperty
		constexpr auto ConstraintIndex = 0x70; // int32_t
		constexpr auto SceneIndex = 0x74; // int32_t
		constexpr auto bInHardware = 0x78; // uint32_t : 1
		constexpr auto bLinearXPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearXVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bAngularSlerpDrive = 0x78; // uint32_t : 1
		constexpr auto bTerminated = 0x78; // uint32_t : 1
		constexpr auto ConstraintData = 0x7c; // FPointer
		constexpr auto LinearPositionTarget = 0x84; // FVector
		constexpr auto LinearVelocityTarget = 0x90; // FVector
		constexpr auto LinearDriveSpring = 0x9c; // float
		constexpr auto LinearDriveDamping = 0xa0; // float
		constexpr auto LinearDriveForceLimit = 0xa4; // float
		constexpr auto AngularPositionTarget = 0xb0; // FQuat
		constexpr auto AngularVelocityTarget = 0xc0; // FVector
		constexpr auto AngularDriveSpring = 0xcc; // float
		constexpr auto AngularDriveDamping = 0xd0; // float
		constexpr auto AngularDriveForceLimit = 0xd4; // float
		constexpr auto DummyKinActor = 0xd8; // FPointer
	}

	namespace n_UMantleReachSpec {
		constexpr auto bClimbUp = 0xc8; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UPBRuleNodeAlternate {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto ASize = 0x74; // float
		constexpr auto BMaxSize = 0x78; // float
		constexpr auto bInvertPatternOrder = 0x7c; // uint32_t : 1
		constexpr auto bEqualSizeAB = 0x7c; // uint32_t : 1
	}

	namespace n_UGripActionNode_SelectEnemy {
		constexpr auto AITargetSelectType = 0xf4; // EAITargetSelectType
		constexpr auto bDistanceCheck = 0xf8; // uint32_t : 1
		constexpr auto bVisibleCheck = 0xf8; // uint32_t : 1
		constexpr auto bReachableCheck = 0xf8; // uint32_t : 1
		constexpr auto DistanceCheckInfo = 0xfc; // FSDistanceCheck
		constexpr auto VisibleCheckInfo = 0x108; // FSVsibleCheck
		constexpr auto ReachableCheckInfo = 0x10c; // FSReachableCheck
	}

	namespace n_ANxRadialForceField {
		constexpr auto RenderComponent = 0x298; // ComponentProperty
		constexpr auto ForceStrength = 0x2a0; // float
		constexpr auto ForceRadius = 0x2a4; // float
		constexpr auto ForceFalloff = 0x2a8; // ERadialImpulseFalloff
		constexpr auto LinearKernel = 0x2ac; // FPointer
	}

	namespace n_USeqAct_AccessObjectList {
		constexpr auto OutputObject = 0x108; // ObjectProperty
		constexpr auto ObjectIndex = 0x110; // int32_t
	}

	namespace n_UCombatVoiceBase {
		constexpr auto NotifySoundList = 0x60; // TArray<FNotifySoundInfo>
		constexpr auto LeftKeyInfos = 0x70; // TArray<FRadioDisplayInfo>
		constexpr auto RightKeyInfos = 0x80; // TArray<FRadioDisplayInfo>
		constexpr auto VoiceSoundType = 0x90; // int32_t
	}

	namespace n_UCombatCommon_OverImmersionGuard {
		constexpr auto Icon1 = 0xac; // E_RATINGICON
		constexpr auto Icon2 = 0xad; // E_RATINGICON
		constexpr auto HourCountStr = 0xb0; // FString
		constexpr auto WarningStr = 0xc0; // FString
	}

	namespace n_UCombatFrontEnd_ClanHome {
		constexpr auto ClanMaster = 0xd0; // FString
		constexpr auto MyUserID = 0xe0; // int32_t
		constexpr auto MyGrade = 0xe4; // int32_t
		constexpr auto SendUserID = 0xe8; // int32_t
		constexpr auto SendGrade = 0xec; // int32_t
		constexpr auto PopupState = 0xf0; // int32_t
		constexpr auto PopupClass = 0xf4; // ObjectProperty
		constexpr auto SelectedMatchTab = 0xfc; // int32_t
		constexpr auto DataStoreMission = 0x100; // ObjectProperty
		constexpr auto MatchRecordList = 0x108; // TArray<FClanMatchRecordData>
		constexpr auto PopupMenuData = 0x118; // FPopupMenuStruct [0xa]
		constexpr auto PopupMenuIDs = 0x168; // TArray<int32_t>
		constexpr auto SelfPopupMenuIDs = 0x178; // TArray<int32_t>
		constexpr auto JoinPopupMenuIDs = 0x188; // TArray<int32_t>
	}

	namespace n_UGripActionNode_MoveRightAndLeft {
		constexpr auto bIsWalking = 0xf4; // uint32_t : 1
		constexpr auto DirChangeTime = 0xf8; // float
	}

	namespace n_UCombatStatDataStore {
		constexpr auto EventType = 0x60; // FName
		constexpr auto OldRank = 0x68; // int32_t
		constexpr auto newRank = 0x6c; // int32_t
		constexpr auto ScoringTableIndex = 0x70; // int32_t
		constexpr auto DamageType = 0x74; // UDamageType*
		constexpr auto Weapon = 0x7c; // ObjectProperty
		constexpr auto RespawnTime = 0x84; // float
		constexpr auto WeaponID = 0x88; // int32_t
		constexpr auto HitPart = 0x8c; // eStatType_HitPart
		constexpr auto LoginTime = 0x90; // float
		constexpr auto MatchStartTime = 0x94; // float
		constexpr auto SaveCondition = 0x98; // FStatSaveCondition
		constexpr auto PRI = 0x9c; // ObjectProperty
		constexpr auto bDesertion = 0xa4; // uint32_t : 1
		constexpr auto bWinner = 0xa4; // uint32_t : 1
		constexpr auto SavedPlayTime = 0xa8; // float
		constexpr auto SavedRespawnTime = 0xac; // float
	}

	namespace n_ACombatProj_ExplosiveBase {
		constexpr auto bAutoDestroyOnExplosion = 0x390; // uint32_t : 1
		constexpr auto bHasExploded = 0x390; // uint32_t : 1
		constexpr auto bAttachExplosionToHitMover = 0x390; // uint32_t : 1
		constexpr auto IsCollideTeammatePawn = 0x390; // uint32_t : 1
		constexpr auto IgniteWhenToss = 0x390; // uint32_t : 1
		constexpr auto MinDamage = 0x394; // float
		constexpr auto FullDamageRadius = 0x398; // float
		constexpr auto DamageFalloffExp = 0x39c; // float
		constexpr auto ExplosionTemplate = 0x3a0; // ObjectProperty
		constexpr auto GrenadeBounceSound = 0x3a8; // ObjectProperty
		constexpr auto TeamNum = 0x3b0; // char
		constexpr auto ObjectGrade = 0x3b1; // EObjectGradeType
		constexpr auto TimeBeforeBeep = 0x3b4; // float
		constexpr auto TimeAfterBeep = 0x3b8; // float
		constexpr auto MaxBounceCountToArm = 0x3bc; // int32_t
		constexpr auto BounceCount = 0x3c0; // int32_t
		constexpr auto VelocityDampingFactor = 0x3c4; // float
		constexpr auto StopSimulatingVelocitySqrThreshhold = 0x3c8; // float
		constexpr auto Bounciness = 0x3cc; // float
		constexpr auto BouncedComp = 0x3d0; // ComponentProperty
		constexpr auto BP = 0x3d8; // int32_t
		constexpr auto ExplosionActorClass = 0x3dc; // AGameExplosionActor*
	}

	namespace n_UCombatFrontEnd_RandomBoxShopBuyPopup {
		constexpr auto OwnerShop = 0xd0; // ObjectProperty
		constexpr auto CurrentRefShopItemGroupName = 0xd8; // FString
		constexpr auto CurrentItemName = 0xe8; // FString
		constexpr auto CurrentGroupIndex = 0xf8; // int32_t
		constexpr auto CurrentPriceIndex = 0xfc; // int32_t
		constexpr auto CurrentPriceType = 0x100; // int32_t
		constexpr auto CurrentPrice = 0x104; // int32_t
		constexpr auto _lock = 0x108; // uint32_t : 1
	}

	namespace n_UCombatHUD_Message_RoundOver {
		constexpr auto RoundWinLabel = 0xc0; // FString
		constexpr auto RoundLoseLabel = 0xd0; // FString
		constexpr auto MatchEndWinLabel = 0xe0; // FString
		constexpr auto MatchEndLoseLabel = 0xf0; // FString
		constexpr auto AISuccessLabel = 0x100; // FString
		constexpr auto AIFailLabel = 0x110; // FString
		constexpr auto AIPlayTimeLabel = 0x120; // FString
		constexpr auto AIWaveLabel = 0x130; // FString
		constexpr auto AIDefendMarkHpLabel = 0x140; // FString
		constexpr auto AITeamScoreLabel = 0x150; // FString
		constexpr auto RoundWinReasonLabelID = 0x160; // int32_t
		constexpr auto RoundLoseReasonLabelID = 0x164; // int32_t
		constexpr auto RoundWinReasonLabel = 0x168; // FString
		constexpr auto RoundLoseReasonLabel = 0x178; // FString
	}

	namespace n_ACombatPlayerStart {
		constexpr auto StartVelocityInTheAir = 0x34c; // FVector
		constexpr auto bPlaceInTheAir = 0x358; // uint32_t : 1
		constexpr auto bUseFirstSpawn = 0x358; // uint32_t : 1
		constexpr auto AreaIndex = 0x35c; // char
		constexpr auto TeamSpriteComponent = 0x360; // ComponentProperty
		constexpr auto InTheAirSpriteComponent = 0x368; // ComponentProperty
		constexpr auto InTheAirArrowComponent = 0x370; // ComponentProperty
		constexpr auto FloorLocation = 0x378; // FVector
	}

	namespace n_UDrawBoxComponent {
		constexpr auto BoxColor = 0x250; // FColor
		constexpr auto BoxMaterial = 0x254; // ObjectProperty
		constexpr auto BoxExtent = 0x25c; // FVector
		constexpr auto bDrawWireBox = 0x268; // uint32_t : 1
		constexpr auto bDrawLitBox = 0x268; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x268; // uint32_t : 1
	}

	namespace n_ACombatCubeMapBoxVolume {
		constexpr auto BrushBounds = 0x280; // FBoxSphereBounds
		constexpr auto BoxMin = 0x29c; // FVector
		constexpr auto BoxMax = 0x2a8; // FVector
	}

	namespace n_UCombatSkelCtrl_CantileverBeam {
		constexpr auto WorldSpaceGoal = 0x16c; // FVector
		constexpr auto InitialWorldSpaceGoalOffset = 0x178; // FVector
		constexpr auto Velocity = 0x184; // FVector
		constexpr auto SpringStiffness = 0x190; // float
		constexpr auto SpringDamping = 0x194; // float
		constexpr auto PercentBeamVelocityTransfer = 0x198; // float
		constexpr auto __EntireBeamVelocity__Delegate = 0x19c; // DelegateProperty
	}

	namespace n_UGFxInteraction {
		constexpr auto VfTable_FCallbackEventDevice = 0xb0; // FPointer
		constexpr auto bFakeMobileTouches = 0xb8; // uint32_t : 1
	}

	namespace n_UDistributionVectorUniformRange {
		constexpr auto MaxHigh = 0x7c; // FVector
		constexpr auto MaxLow = 0x88; // FVector
		constexpr auto MinHigh = 0x94; // FVector
		constexpr auto MinLow = 0xa0; // FVector
	}

	namespace n_AAmbientSoundSimple {
		constexpr auto AmbientProperties = 0x258; // ObjectProperty
		constexpr auto SoundCueInstance = 0x260; // ObjectProperty
		constexpr auto SoundNodeInstance = 0x268; // ObjectProperty
	}

	namespace n_UHttpFactory {
		constexpr auto HttpRequestClassName = 0x60; // FString
	}

	namespace n_UCCSAFEnterCover {
		constexpr auto CoverLink = 0x64; // ObjectProperty
		constexpr auto Target = 0x6c; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_MatchMember {
		constexpr auto MatchroomNumber = 0xd0; // int32_t
		constexpr auto X = 0xd4; // int32_t
		constexpr auto Y = 0xd8; // int32_t
	}

	namespace n_UHttpRequestInterface {
		constexpr auto __OnProcessRequestComplete__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x60; // uint32_t : 1
		constexpr auto TrackBoneNames = 0x64; // TArray<FName>
		constexpr auto Sequences = 0x74; // TArray<ObjectProperty>
		constexpr auto SequenceCache = 0x84; // TMap<None, None>
		constexpr auto LinkupCache = 0xcc; // TArray<FAnimSetMeshLinkup>
		constexpr auto SkelMesh2LinkupCache = 0xdc; // TMap<None, None>
		constexpr auto BoneUseAnimTranslation = 0x124; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x134; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x144; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x154; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x164; // FName
		constexpr auto BestRatioSkelMeshName = 0x16c; // FName
	}

	namespace n_UMultiProviderAnalytics {
		constexpr auto AnalyticsProviderClassNames = 0x84; // TArray<FString>
		constexpr auto AnalyticsProviders = 0x94; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_GiveInventory {
		constexpr auto InventoryList = 0x108; // TArray<AInventory*>
		constexpr auto bClearExisting = 0x118; // uint32_t : 1
		constexpr auto bForceReplace = 0x118; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefItemUnLockRecipe {
		constexpr auto ItemCodeName = 0x6c; // FString
		constexpr auto KeyCodeName = 0x7c; // FString
		constexpr auto OutPutItemCodeName = 0x8c; // FString
	}

	namespace n_UClientBeaconAddressResolver {
		constexpr auto BeaconPort = 0x60; // int32_t
		constexpr auto BeaconName = 0x64; // FName
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto Lifetime = 0x68; // FRawDistributionFloat
	}

	namespace n_UOnlineStatsRead {
		constexpr auto ViewId = 0x70; // int32_t
		constexpr auto SortColumnId = 0x74; // int32_t
		constexpr auto ColumnIds = 0x78; // TArray<int32_t>
		constexpr auto TotalRowsInView = 0x88; // int32_t
		constexpr auto Rows = 0x8c; // TArray<FOnlineStatsRow>
		constexpr auto ColumnMappings = 0x9c; // TArray<FColumnMetaData>
		constexpr auto ViewName = 0xac; // FString
		constexpr auto TitleId = 0xbc; // int32_t
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_ACombatChampionshipObserverPC {
		constexpr auto WatchingPlayerInfo = 0xbe4; // FWatchingPlayerData
		constexpr auto bShowObserverTeamColor = 0xbec; // uint32_t : 1
		constexpr auto ChampionshipManager = 0xbf0; // ObjectProperty
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x60; // ObjectProperty
		constexpr auto GroupActor = 0x68; // ObjectProperty
		constexpr auto TrackInst = 0x70; // TArray<ObjectProperty>
		constexpr auto CachedCamOverridePostProcess = 0x80; // FPointer
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto SelectionMethod = 0x70; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x74; // uint32_t : 1
		constexpr auto bInheritSourceRotation = 0x74; // uint32_t : 1
		constexpr auto InheritSourceVelocityScale = 0x78; // float
		constexpr auto InheritSourceRotationScale = 0x7c; // float
	}

	namespace n_UCombatAnimBlendByParts {
		constexpr auto Owner = 0x120; // ObjectProperty
		constexpr auto IgnoreNewHit = 0x128; // uint32_t : 1
		constexpr auto WasFinishing = 0x128; // uint32_t : 1
	}

	namespace n_UOnlineStats {
		constexpr auto ViewIdMappings = 0x60; // TArray<FStringIdToStringMapping>
	}

	namespace n_UGripActionNode_Crouch {
		constexpr auto SavedCanCrouch = 0xf4; // uint32_t : 1
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto SubImageIndex = 0x68; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x8c; // uint32_t : 1
	}

	namespace n_UFogVolumeDensityComponent {
		constexpr auto FogMaterial = 0x88; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterial = 0x90; // ObjectProperty
		constexpr auto bEnabled = 0x98; // uint32_t : 1
		constexpr auto bAffectsTranslucency = 0x98; // uint32_t : 1
		constexpr auto bOnlyAffectsTranslucency = 0x98; // uint32_t : 1
		constexpr auto SimpleLightColor = 0x9c; // FLinearColor
		constexpr auto ApproxFogLightColor = 0xac; // FLinearColor
		constexpr auto StartDistance = 0xbc; // float
		constexpr auto MaxDistance = 0xc0; // float
		constexpr auto FogVolumeActors = 0xc4; // TArray<ObjectProperty>
	}

	namespace n_UMorphNodeWeight {
		constexpr auto NodeWeight = 0x84; // float
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Radius = 0x118; // FExpressionInput
		constexpr auto Hardness = 0x14c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x180; // float
		constexpr auto HardnessPercent = 0x184; // float
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto RelativeLocation = 0x68; // FVector
		constexpr auto RelativeRotation = 0x74; // FRotator
		constexpr auto RelativeScale = 0x80; // FVector
		constexpr auto PreviewSkelComp = 0x8c; // ComponentProperty
	}

	namespace n_USeqCond_CompareBool {
		constexpr auto bResult = 0xec; // uint32_t : 1
	}

	namespace n_UCombatAIActionNode_Sleep {
		constexpr auto SleepTime = 0xf4; // float
	}

	namespace n_UCombatEvolveGunGameScore {
		constexpr auto DefaultEvolvePoint = 0x60; // int32_t
		constexpr auto EvolvePointRatioByGradeUpper = 0x64; // TArray<float>
		constexpr auto EvolvePointRatioByGradeLower = 0x74; // TArray<float>
	}

	namespace n_ACombatArmsRacePRI {
		constexpr auto WeaponLevel = 0x520; // int32_t
		constexpr auto KillPoint = 0x524; // int32_t
		constexpr auto TotalKillPoint = 0x528; // int32_t
		constexpr auto bTopUser = 0x52c; // uint32_t : 1
		constexpr auto oldTopUser = 0x52c; // uint32_t : 1
	}

	namespace n_UOnlineSubsystemPC {
		constexpr auto LoggedInPlayerName = 0x1e0; // FString
		constexpr auto LoggedInPlayerId = 0x1f0; // FUniqueNetId
		constexpr auto AsyncTasks = 0x1f8; // TArray<FPointer>
		constexpr auto ProfileDataDirectory = 0x208; // FString
		constexpr auto ProfileDataExtension = 0x218; // FString
		constexpr auto ReadProfileSettingsDelegates = 0x228; // TArray<DelegateProperty>
		constexpr auto WriteProfileSettingsDelegates = 0x238; // TArray<DelegateProperty>
		constexpr auto CachedProfile = 0x248; // ObjectProperty
		constexpr auto SpeechRecognitionCompleteDelegates = 0x250; // TArray<DelegateProperty>
		constexpr auto ReadFriendsDelegates = 0x260; // TArray<DelegateProperty>
		constexpr auto FriendsChangeDelegates = 0x270; // TArray<DelegateProperty>
		constexpr auto MutingChangeDelegates = 0x280; // TArray<DelegateProperty>
		constexpr auto __OnLoginChange__Delegate = 0x290; // DelegateProperty
		constexpr auto __OnLoginCancelled__Delegate = 0x2a0; // DelegateProperty
		constexpr auto __OnMutingChange__Delegate = 0x2b0; // DelegateProperty
		constexpr auto __OnReadTitleFileComplete__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x2d0; // DelegateProperty
		constexpr auto __OnFriendsChange__Delegate = 0x2e0; // DelegateProperty
		constexpr auto __OnLoginFailed__Delegate = 0x2f0; // DelegateProperty
		constexpr auto __OnLogoutCompleted__Delegate = 0x300; // DelegateProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x310; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x320; // DelegateProperty
		constexpr auto __OnLoginStatusChange__Delegate = 0x330; // DelegateProperty
		constexpr auto __OnReadFriendsComplete__Delegate = 0x340; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x350; // DelegateProperty
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x360; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x370; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0x380; // DelegateProperty
		constexpr auto __OnLinkStatusChange__Delegate = 0x390; // DelegateProperty
		constexpr auto __OnExternalUIChange__Delegate = 0x3a0; // DelegateProperty
		constexpr auto __OnControllerChange__Delegate = 0x3b0; // DelegateProperty
		constexpr auto __OnConnectionStatusChange__Delegate = 0x3c0; // DelegateProperty
		constexpr auto __OnStorageDeviceChange__Delegate = 0x3d0; // DelegateProperty
		constexpr auto __OnKeyboardInputComplete__Delegate = 0x3e0; // DelegateProperty
		constexpr auto __OnWritePlayerStorageComplete__Delegate = 0x3f0; // DelegateProperty
		constexpr auto __OnReadPlayerStorageForNetIdComplete__Delegate = 0x400; // DelegateProperty
		constexpr auto __OnReadPlayerStorageComplete__Delegate = 0x410; // DelegateProperty
		constexpr auto __OnAddFriendByNameComplete__Delegate = 0x420; // DelegateProperty
		constexpr auto __OnFriendInviteReceived__Delegate = 0x430; // DelegateProperty
		constexpr auto __OnReceivedGameInvite__Delegate = 0x440; // DelegateProperty
		constexpr auto __OnJoinFriendGameComplete__Delegate = 0x450; // DelegateProperty
		constexpr auto __OnFriendMessageReceived__Delegate = 0x460; // DelegateProperty
		constexpr auto __OnUnlockAchievementComplete__Delegate = 0x470; // DelegateProperty
		constexpr auto __OnReadAchievementsComplete__Delegate = 0x480; // DelegateProperty
	}

	namespace n_UUICharacterSummary {
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto CharacterName = 0xa4; // FString
		constexpr auto CharacterBio = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
	}

	namespace n_ACombatTeamBlockingVolume {
		constexpr auto IgnoreBlockTeam = 0x284; // Team
	}

	namespace n_UGamePlayEvent_Action {
		constexpr auto TableDataList = 0x60; // TArray<FActionTableDataType>
		constexpr auto TableInfoList = 0x70; // TArray<FTableInfoType>
		constexpr auto ActionTargetList = 0x80; // TArray<FName>
		constexpr auto EventTypeList = 0x90; // TArray<FName>
		constexpr auto RegisteredActions = 0xa0; // TArray<int32_t>
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x250; // FColor
		constexpr auto FrustumAngle = 0x254; // float
		constexpr auto FrustumAspectRatio = 0x258; // float
		constexpr auto FrustumStartDist = 0x25c; // float
		constexpr auto FrustumEndDist = 0x260; // float
		constexpr auto Texture = 0x264; // ObjectProperty
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FColor
	}

	namespace n_USeqVar_Float {
		constexpr auto FloatValue = 0xa0; // float
	}

	namespace n_UAnimNodeSequence {
		constexpr auto AnimSeqName = 0xe8; // FName
		constexpr auto Rate = 0xf0; // float
		constexpr auto bPlaying = 0xf4; // uint32_t : 1
		constexpr auto bLooping = 0xf4; // uint32_t : 1
		constexpr auto bCauseActorAnimEnd = 0xf4; // uint32_t : 1
		constexpr auto bCauseActorAnimPlay = 0xf4; // uint32_t : 1
		constexpr auto bZeroRootRotation = 0xf4; // uint32_t : 1
		constexpr auto bZeroRootTranslation = 0xf4; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0xf4; // uint32_t : 1
		constexpr auto bNoNotifies = 0xf4; // uint32_t : 1
		constexpr auto bForceRefposeWhenNotPlaying = 0xf4; // uint32_t : 1
		constexpr auto bIsIssuingNotifies = 0xf4; // uint32_t : 1
		constexpr auto bForceAlwaysSlave = 0xf4; // uint32_t : 1
		constexpr auto bSynchronize = 0xf4; // uint32_t : 1
		constexpr auto bReverseSync = 0xf4; // uint32_t : 1
		constexpr auto bShowTimeLineSlider = 0xf4; // uint32_t : 1
		constexpr auto bLoopCameraAnim = 0xf4; // uint32_t : 1
		constexpr auto bRandomizeCameraAnimLoopStartTime = 0xf4; // uint32_t : 1
		constexpr auto bEditorOnlyAddRefPoseToAdditiveAnimation = 0xf4; // uint32_t : 1
		constexpr auto bCheckForFinishAnimEarly = 0xf4; // uint32_t : 1
		constexpr auto bBlendingOut = 0xf4; // uint32_t : 1
		constexpr auto CurrentTime = 0xf8; // float
		constexpr auto PreviousTime = 0xfc; // float
		constexpr auto EndTime = 0x100; // float
		constexpr auto AnimSeq = 0x104; // ObjectProperty
		constexpr auto AnimLinkupIndex = 0x10c; // int32_t
		constexpr auto NotifyWeightThreshold = 0x110; // float
		constexpr auto SynchGroupName = 0x114; // FName
		constexpr auto SynchPosOffset = 0x11c; // float
		constexpr auto CameraAnim = 0x120; // ObjectProperty
		constexpr auto ActiveCameraAnimInstance = 0x128; // ObjectProperty
		constexpr auto CameraAnimScale = 0x130; // float
		constexpr auto CameraAnimPlayRate = 0x134; // float
		constexpr auto CameraAnimBlendInTime = 0x138; // float
		constexpr auto CameraAnimBlendOutTime = 0x13c; // float
		constexpr auto RootBoneOption = 0x140; // ERootBoneAxis [0x3]
		constexpr auto RootRotationOption = 0x143; // ERootRotationOption [0x3]
		constexpr auto MetaDataSkelControlList = 0x148; // TArray<ObjectProperty>
	}

	namespace n_UNetDriver {
		constexpr auto ConnectionTimeout = 0x9c; // float
		constexpr auto InitialConnectTimeout = 0xa0; // float
		constexpr auto ConnectionTimeoutReal = 0xa4; // float
		constexpr auto InitialConnectTimeoutReal = 0xa8; // float
		constexpr auto DistributeNetUpdateTime = 0xac; // uint32_t : 1
		constexpr auto KeepAliveTime = 0xb0; // float
		constexpr auto RelevantTimeout = 0xb4; // float
		constexpr auto SpawnPrioritySeconds = 0xb8; // float
		constexpr auto ServerTravelPause = 0xbc; // float
		constexpr auto MaxClientRate = 0xc0; // int32_t
		constexpr auto MaxInternetClientRate = 0xc4; // int32_t
		constexpr auto NetServerMaxTickRate = 0xc8; // int32_t
		constexpr auto bClampListenServerTickRate = 0xcc; // uint32_t : 1
		constexpr auto AllowDownloads = 0xd0; // uint32_t : 1
		constexpr auto AllowPeerConnections = 0xd4; // uint32_t : 1
		constexpr auto AllowPeerVoice = 0xd8; // uint32_t : 1
		constexpr auto MaxDownloadSize = 0xf4; // int32_t
		constexpr auto DownloadManagers = 0xf8; // TArray<FString>
		constexpr auto NetConnectionClassName = 0x1a4; // FString
	}

	namespace n_UCombatHUD_WeaponInfo {
		constexpr auto LastAmmoCount = 0xc0; // int32_t
		constexpr auto LastRemainAmmoCount = 0xc4; // int32_t
		constexpr auto LastChamberAmmoCount = 0xc8; // int32_t
		constexpr auto LastUIType = 0xcc; // WeaponUIType
		constexpr auto LastSelectedGrenadeSlot = 0xcd; // GrenadeUIType
		constexpr auto LastGrenadeSlotACount = 0xd0; // FString
		constexpr auto LastGrenadeSlotBCount = 0xe0; // FString
		constexpr auto LastGrenadeSlotAType = 0xf0; // int32_t
		constexpr auto LastGrenadeSlotBType = 0xf4; // int32_t
	}

	namespace n_UCombatDataTableRefTodayGameBindMode {
		constexpr auto TodayGameCodeName = 0x6c; // FString
		constexpr auto ModeCodeName = 0x7c; // FString
		constexpr auto DisplaynameID = 0x8c; // int32_t
		constexpr auto DisplayDescriptionID = 0x90; // int32_t
		constexpr auto DisplayModeNameID = 0x94; // int32_t
		constexpr auto DisplayThumbnailImageID = 0x98; // int32_t
		constexpr auto BGThumbnailImageID = 0x9c; // int32_t
		constexpr auto ModeThumbnailImageID = 0xa0; // int32_t
	}

	namespace n_USeqEvent_MobileZoneBase {
		constexpr auto TargetZoneName = 0x128; // FString
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_USeqAct_SetApexClothingParam {
		constexpr auto bEnableApexClothingSimulation = 0x108; // uint32_t : 1
	}

	namespace n_UGripBTCutoff {
		constexpr auto Cutoff = 0xc8; // int32_t
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x60; // FVector
		constexpr auto Rotation = 0x6c; // FRotator
		constexpr auto HiddenLevels = 0x78; // TArray<FString>
	}

	namespace n_UCombatDBManager {
		constexpr auto ExcelExternalCallStorage = 0x60; // TArray<FExcelExternalCallType>
		constexpr auto ModeGrouping = 0x70; // TMap<None, None>
		constexpr auto PrimaryWeaponGroupping = 0xb8; // TArray<int32_t>
		constexpr auto SubWeaponGroupping = 0xc8; // TArray<int32_t>
		constexpr auto MeleeWeaponGroupping = 0xd8; // TArray<int32_t>
		constexpr auto ThrowWeaponGroupping = 0xe8; // TArray<int32_t>
	}

	namespace n_UUIInteraction {
		constexpr auto VfTable_FExec = 0xb0; // FPointer
		constexpr auto VfTable_FGlobalDataStoreClientManager = 0xb8; // FPointer
		constexpr auto VfTable_FCallbackEventDevice = 0xc0; // FPointer
		constexpr auto UIManager = 0xc8; // ObjectProperty
		constexpr auto UIManagerClass = 0xd0; // UUIManager*
		constexpr auto SceneClientClass = 0xd8; // UGameUISceneClient*
		constexpr auto SceneClient = 0xe0; // ObjectProperty
		constexpr auto SupportedDoubleClickKeys = 0xe8; // TArray<FName>
		constexpr auto DataStoreManager = 0xf8; // ObjectProperty
		constexpr auto bProcessInput = 0x100; // uint32_t : 1
		constexpr auto UIJoystickDeadZone = 0x104; // float
		constexpr auto UIAxisMultiplier = 0x108; // float
		constexpr auto AxisRepeatDelay = 0x10c; // float
		constexpr auto MouseButtonRepeatDelay = 0x110; // float
		constexpr auto DoubleClickTriggerSeconds = 0x114; // float
		constexpr auto DoubleClickPixelTolerance = 0x118; // int32_t
		constexpr auto MouseButtonRepeatInfo = 0x11c; // FUIKeyRepeatData
		constexpr auto ConfiguredAxisEmulationDefinitions = 0x12c; // TArray<FUIAxisEmulationDefinition>
		constexpr auto AxisEmulationDefinitions = 0x13c; // TMap<None, None>
		constexpr auto AxisInputEmulation = 0x184; // FUIAxisEmulationData [0x4]
	}

	namespace n_UCombatAssasinMovie {
		constexpr auto bTestMode = 0xad0; // uint32_t : 1
		constexpr auto ExitContainer = 0xad4; // ObjectProperty
	}

	namespace n_USeqAct_ActivateRemoteEvent {
		constexpr auto Instigator = 0x108; // ObjectProperty
		constexpr auto EventName = 0x110; // FName
		constexpr auto bStatusIsOk = 0x118; // uint32_t : 1
	}

	namespace n_UMcpServerTimeBase {
		constexpr auto McpServerTimeClassName = 0x78; // FString
		constexpr auto __OnQueryServerTimeComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UInterpTrackSkelControlScale {
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0xb0; // uint32_t : 1
	}

	namespace n_ADynamicPhysicsVolume {
		constexpr auto bEnabled = 0x2d0; // uint32_t : 1
	}

	namespace n_UCBPawnSoundGroup {
		constexpr auto DyingSound = 0x60; // ObjectProperty
		constexpr auto HealStartSound = 0x68; // ObjectProperty
		constexpr auto HealEndSound = 0x70; // ObjectProperty
		constexpr auto FootstepSounds = 0x78; // TArray<FFootstepSoundInfo>
		constexpr auto DefaultFootstepSound = 0x88; // ObjectProperty
		constexpr auto DefaultCrouchFootstepSound = 0x90; // ObjectProperty
		constexpr auto JumpingSounds = 0x98; // TArray<FFootstepSoundInfo>
		constexpr auto DefaultJumpingSound = 0xa8; // ObjectProperty
		constexpr auto LandingSounds = 0xb0; // TArray<FFootstepSoundInfo>
		constexpr auto DefaultLandingSound = 0xc0; // ObjectProperty
		constexpr auto FallingDamageLandSound = 0xc8; // ObjectProperty
		constexpr auto ReloadingSound = 0xd0; // FTextWithVoice
		constexpr auto SeeOurTeamDeathSound = 0xdc; // FTextWithVoice
		constexpr auto SeeEnemyDeathSound = 0xe8; // FTextWithVoice
		constexpr auto ThrowGreSound = 0xf4; // FTextWithVoice
		constexpr auto GrenadeWarningSound = 0x100; // FTextWithVoice
		constexpr auto SpecialGreSound = 0x10c; // FTextWithVoice
		constexpr auto KillVoiceSound = 0x118; // ObjectProperty
		constexpr auto OutOfAmmoVoice = 0x120; // ObjectProperty
		constexpr auto AutoHealVoice = 0x128; // ObjectProperty
		constexpr auto SpawnVoice = 0x130; // ObjectProperty
		constexpr auto EffectTypeHitSounds = 0x138; // FEffectTypeHitSound [0xb]
	}

	namespace n_UPhysicalMaterial {
		constexpr auto MaterialIndex = 0x60; // int32_t
		constexpr auto Friction = 0x64; // float
		constexpr auto Restitution = 0x68; // float
		constexpr auto bForceConeFriction = 0x6c; // uint32_t : 1
		constexpr auto bEnableAnisotropicFriction = 0x6c; // uint32_t : 1
		constexpr auto AnisoFrictionDir = 0x70; // FVector
		constexpr auto FrictionV = 0x7c; // float
		constexpr auto Density = 0x80; // float
		constexpr auto AngularDamping = 0x84; // float
		constexpr auto LinearDamping = 0x88; // float
		constexpr auto MagneticResponse = 0x8c; // float
		constexpr auto WindResponse = 0x90; // float
		constexpr auto ImpactThreshold = 0x94; // float
		constexpr auto ImpactReFireDelay = 0x98; // float
		constexpr auto ImpactEffect = 0x9c; // ObjectProperty
		constexpr auto ImpactSound = 0xa4; // ObjectProperty
		constexpr auto SlideThreshold = 0xac; // float
		constexpr auto SlideReFireDelay = 0xb0; // float
		constexpr auto SlideEffect = 0xb4; // ObjectProperty
		constexpr auto SlideSound = 0xbc; // ObjectProperty
		constexpr auto FractureSoundExplosion = 0xc4; // ObjectProperty
		constexpr auto FractureSoundSingle = 0xcc; // ObjectProperty
		constexpr auto Parent = 0xd4; // ObjectProperty
		constexpr auto PhysicalMaterialProperty = 0xdc; // ObjectProperty
	}

	namespace n_UOnlineGameSearch {
		constexpr auto MaxSearchResults = 0xa0; // int32_t
		constexpr auto Query = 0xa4; // FLocalizedStringSetting
		constexpr auto bIsLanQuery = 0xb0; // uint32_t : 1
		constexpr auto bUsesArbitration = 0xb0; // uint32_t : 1
		constexpr auto bIsSearchInProgress = 0xb0; // uint32_t : 1
		constexpr auto GameSettingsClass = 0xb4; // UOnlineGameSettings*
		constexpr auto Results = 0xbc; // TArray<FOnlineGameSearchResult>
		constexpr auto ManualSkillOverride = 0xcc; // FOverrideSkill
		constexpr auto NamedProperties = 0x100; // TArray<FNamedObjectProperty>
		constexpr auto FilterQuery = 0x110; // FOnlineGameSearchQuery
		constexpr auto AdditionalSearchCriteria = 0x130; // FString
		constexpr auto PingBucketSize = 0x140; // int32_t
		constexpr auto NumPingProbes = 0x144; // int32_t
		constexpr auto MaxPingBytes = 0x148; // int32_t
	}

	namespace n_ACombatGroupStart {
		constexpr auto bPlayer = 0x384; // uint32_t : 1
		constexpr auto GroupID = 0x388; // int32_t
	}

	namespace n_UDynamicLightEnvironmentComponent {
		constexpr auto State = 0xa8; // FPointer
		constexpr auto InvisibleUpdateTime = 0xb0; // float
		constexpr auto MinTimeBetweenFullUpdates = 0xb4; // float
		constexpr auto VelocityUpdateTimeScale = 0xb8; // float
		constexpr auto ShadowInterpolationSpeed = 0xbc; // float
		constexpr auto NumVolumeVisibilitySamples = 0xc0; // int32_t
		constexpr auto LightingBoundsScale = 0xc4; // float
		constexpr auto AmbientShadowColor = 0xc8; // FLinearColor
		constexpr auto AmbientShadowSourceDirection = 0xd8; // FVector
		constexpr auto AmbientGlow = 0xe4; // FLinearColor
		constexpr auto AmbientGlowCycleTime = 0xf4; // float
		constexpr auto LightDistance = 0xf8; // float
		constexpr auto ShadowDistance = 0xfc; // float
		constexpr auto bCastShadows = 0x100; // uint32_t : 1
		constexpr auto bCompositeShadowsFromDynamicLights = 0x100; // uint32_t : 1
		constexpr auto bForceCompositeAllLights = 0x100; // uint32_t : 1
		constexpr auto bAffectedBySmallDynamicLights = 0x100; // uint32_t : 1
		constexpr auto bUseBooleanEnvironmentShadowing = 0x100; // uint32_t : 1
		constexpr auto bShadowFromEnvironment = 0x100; // uint32_t : 1
		constexpr auto bDynamic = 0x100; // uint32_t : 1
		constexpr auto bSynthesizeDirectionalLight = 0x100; // uint32_t : 1
		constexpr auto bSynthesizeSHLight = 0x100; // uint32_t : 1
		constexpr auto bRequiresNonLatentUpdates = 0x100; // uint32_t : 1
		constexpr auto bTraceFromClosestBoundsPoint = 0x100; // uint32_t : 1
		constexpr auto bIsCharacterLightEnvironment = 0x100; // uint32_t : 1
		constexpr auto bIsFirstPersonLightEnvironment = 0x100; // uint32_t : 1
		constexpr auto bOverrideOwnerLightingChannels = 0x100; // uint32_t : 1
		constexpr auto bAlwaysInfluencedByDominantDirectionalLight = 0x100; // uint32_t : 1
		constexpr auto ModShadowFadeoutTime = 0x104; // float
		constexpr auto ModShadowFadeoutExponent = 0x108; // float
		constexpr auto MaxModulatedShadowColor = 0x10c; // FLinearColor
		constexpr auto DominantShadowTransitionStartDistance = 0x11c; // float
		constexpr auto DominantShadowTransitionEndDistance = 0x120; // float
		constexpr auto MinShadowAngle = 0x124; // float
		constexpr auto BoundsMethod = 0x128; // EDynamicLightEnvironmentBoundsMethod
		constexpr auto OverriddenBounds = 0x12c; // FBoxSphereBounds
		constexpr auto OverriddenLightingChannels = 0x148; // FLightingChannelContainer
		constexpr auto OverriddenLightComponents = 0x14c; // TArray<ComponentProperty>
		constexpr auto IndirectLightingIntense = 0x15c; // float
		constexpr auto MinimumLightingIntense = 0x160; // float
		constexpr auto MinimumIndirectLightingIntense = 0x164; // float
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_UParticleModuleUberLTISIVCLIL {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
	}

	namespace n_AInstancedFoliageActor {
		constexpr auto FoliageMeshes = 0x244; // FMap_Mirror
		constexpr auto SelectedMesh = 0x28c; // ObjectProperty
		constexpr auto InstancedStaticMeshComponents = 0x294; // TArray<ComponentProperty>
	}

	namespace n_UExporter {
		constexpr auto FormatExtension = 0x68; // TArray<FString>
		constexpr auto FormatDescription = 0x78; // TArray<FString>
	}

	namespace n_UPBRuleNodeEdgeMesh {
		constexpr auto FlatThreshold = 0x70; // float
		constexpr auto MainXPullIn = 0x74; // float
	}

	namespace n_UFactory {
		constexpr auto SupportedClass = 0x60; // UObject*
		constexpr auto ContextClass = 0x68; // UObject*
		constexpr auto Description = 0x70; // FString
		constexpr auto Formats = 0x80; // TArray<FString>
		constexpr auto bCreateNew = 0x90; // uint32_t : 1
		constexpr auto bEditAfterNew = 0x90; // uint32_t : 1
		constexpr auto bEditorImport = 0x90; // uint32_t : 1
		constexpr auto bText = 0x90; // uint32_t : 1
		constexpr auto AutoPriority = 0x94; // int32_t
		constexpr auto ValidGameNames = 0x98; // TArray<FString>
	}

	namespace n_ACombatLabelVolume {
		constexpr auto LocationLabelID = 0x280; // int32_t
		constexpr auto NextLowerPriorityVolume = 0x284; // ObjectProperty
		constexpr auto Priority = 0x28c; // float
	}

	namespace n_URadialBlurComponent {
		constexpr auto Material = 0x88; // ObjectProperty
		constexpr auto DepthPriorityGroup = 0x90; // ESceneDepthPriorityGroup
		constexpr auto BlurScale = 0x94; // float
		constexpr auto BlurFalloffExponent = 0x98; // float
		constexpr auto BlurOpacity = 0x9c; // float
		constexpr auto MaxCullDistance = 0xa0; // float
		constexpr auto DistanceFalloffExponent = 0xa4; // float
		constexpr auto bRenderAsVelocity = 0xa8; // uint32_t : 1
		constexpr auto bEnabled = 0xa8; // uint32_t : 1
		constexpr auto LocalToWorld = 0xb0; // FMatrix
		constexpr auto OwnerPSC = 0xf0; // ComponentProperty
	}

	namespace n_UImageReflectionShadowPlaneComponent {
		constexpr auto bEnabled = 0x250; // uint32_t : 1
		constexpr auto ReflectionPlane = 0x260; // FPlane
	}

	namespace n_URB_Handle {
		constexpr auto GrabbedComponent = 0x88; // ComponentProperty
		constexpr auto GrabbedBoneName = 0x90; // FName
		constexpr auto SceneIndex = 0x98; // int32_t
		constexpr auto bInHardware = 0x9c; // uint32_t : 1
		constexpr auto bRotationConstrained = 0x9c; // uint32_t : 1
		constexpr auto bInterpolating = 0x9c; // uint32_t : 1
		constexpr auto HandleData = 0xa0; // FPointer
		constexpr auto KinActorData = 0xa8; // FPointer
		constexpr auto LinearDamping = 0xb0; // float
		constexpr auto LinearStiffness = 0xb4; // float
		constexpr auto LinearStiffnessScale3D = 0xb8; // FVector
		constexpr auto LinearDampingScale3D = 0xc4; // FVector
		constexpr auto AngularDamping = 0xd0; // float
		constexpr auto AngularStiffness = 0xd4; // float
		constexpr auto Destination = 0xd8; // FVector
		constexpr auto StepSize = 0xe4; // FVector
		constexpr auto Location = 0xf0; // FVector
	}

	namespace n_UPhysicsAssetInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto RootBodyIndex = 0x68; // int32_t
		constexpr auto Bodies = 0x6c; // TArray<ObjectProperty>
		constexpr auto Constraints = 0x7c; // TArray<ObjectProperty>
		constexpr auto CollisionDisableTable = 0x8c; // FMap_Mirror
		constexpr auto LinearSpringScale = 0xd4; // float
		constexpr auto LinearDampingScale = 0xd8; // float
		constexpr auto LinearForceLimitScale = 0xdc; // float
		constexpr auto AngularSpringScale = 0xe0; // float
		constexpr auto AngularDampingScale = 0xe4; // float
		constexpr auto AngularForceLimitScale = 0xe8; // float
		constexpr auto bInitBodies = 0xec; // uint32_t : 1
	}

	namespace n_UUIDataProvider_SettingsArray {
		constexpr auto Settings = 0x70; // ObjectProperty
		constexpr auto SettingsId = 0x78; // int32_t
		constexpr auto SettingsName = 0x7c; // FName
		constexpr auto ColumnHeaderText = 0x84; // FString
		constexpr auto Values = 0x94; // TArray<FIdToStringMapping>
	}

	namespace n_UCombatHUD_GOContainer {
		constexpr auto Components = 0xc0; // TArray<ObjectProperty>
		constexpr auto Count = 0xd0; // int32_t
		constexpr auto LastGOLocalMessageID = 0xd4; // int32_t
	}

	namespace n_UCCSBTCombatPatrol {
		constexpr auto TargetSelectionCycleTime = 0xc4; // float
		constexpr auto VisibleRange = 0xc8; // float
		constexpr auto TargetSelectionAlgorithm = 0xcc; // ECCSSelectTargetAlgorithm
	}

	namespace n_UGripActionNode_SelectAIBeacon {
		constexpr auto MaxRange = 0xf4; // float
	}

	namespace n_USeqVar_Object {
		constexpr auto ObjValue = 0xa0; // ObjectProperty
		constexpr auto ActorLocation = 0xa8; // FVector
		constexpr auto SupportedClasses = 0xb4; // TArray<UObject*>
	}

	namespace n_ACombatFreeForAllGame {
		constexpr auto SuddenDeathTime = 0x788; // WordProperty
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x68; // FRawDistributionFloat
	}

	namespace n_UCombatMatchroomBase {
		constexpr auto Cur_MatchStart_WaitTime = 0x60; // float
		constexpr auto Old_MatchStart_WaitTime = 0x64; // float
		constexpr auto Owner = 0x68; // ObjectProperty
		constexpr auto nChannel = 0x70; // int32_t
	}

	namespace n_USeqAct_SetPawnSpeed {
		constexpr auto GroundSpeed = 0x108; // float
		constexpr auto Actors = 0x10c; // TArray<ObjectProperty>
	}

	namespace n_UCombatFirstAnimBlendByIdle {
		constexpr auto Weapon = 0x144; // ObjectProperty
	}

	namespace n_UCombatHUD_Aim {
		constexpr auto HitMarkMC = 0xc0; // ObjectProperty
		constexpr auto BasicCrosshair_TopMC = 0xc8; // ObjectProperty
		constexpr auto BasicCrosshair_LeftMC = 0xd0; // ObjectProperty
		constexpr auto BasicCrosshair_BottomMC = 0xd8; // ObjectProperty
		constexpr auto BasicCrosshair_RightMC = 0xe0; // ObjectProperty
		constexpr auto BasicCrosshair_Dot = 0xe8; // ObjectProperty
		constexpr auto BasicCrosshair_Circle = 0xf0; // ObjectProperty
		constexpr auto GLCrosshairMC = 0xf8; // ObjectProperty
		constexpr auto RLCrosshairMC = 0x100; // ObjectProperty
		constexpr auto LastCrosshairType = 0x108; // int32_t
		constexpr auto LastCrosshairRadius = 0x10c; // int32_t
		constexpr auto LastCrosshairLengthRate = 0x110; // int32_t
		constexpr auto bIsDisplayed_Basic = 0x114; // uint32_t : 1
		constexpr auto bIsDisplayed_Dot = 0x114; // uint32_t : 1
		constexpr auto bIsDisplayed_Circle = 0x114; // uint32_t : 1
		constexpr auto bIsDisplayed_GL = 0x114; // uint32_t : 1
		constexpr auto bIsDisplayed_RL = 0x114; // uint32_t : 1
		constexpr auto bIsReloadingDisplayed = 0x114; // uint32_t : 1
		constexpr auto bIsLaserSightDisplayed = 0x114; // uint32_t : 1
		constexpr auto JustInitiated = 0x114; // uint32_t : 1
		constexpr auto BasicCHSetting = 0x118; // FBasicCrosshairSetting
	}

	namespace n_AInventoryManager {
		constexpr auto InventoryChain = 0x244; // ObjectProperty
		constexpr auto PendingWeapon = 0x24c; // ObjectProperty
		constexpr auto LastAttemptedSwitchToWeapon = 0x254; // ObjectProperty
		constexpr auto bMustHoldWeapon = 0x25c; // uint32_t : 1
		constexpr auto PendingFire = 0x260; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto CenterX = 0x118; // float
		constexpr auto CenterY = 0x11c; // float
		constexpr auto Speed = 0x120; // float
	}

	namespace n_UParticleModuleEventReceiverSound {
		constexpr auto SoundCue = 0x74; // ObjectProperty
		constexpr auto DelayTime = 0x7c; // float
		constexpr auto LastUpdateTime = 0x80; // float
		constexpr auto SoundState = 0x84; // PME_SOUND
	}

	namespace n_UCombatAnimBlendBySlotActive {
		constexpr auto ChildSlot = 0x144; // ObjectProperty
	}

	namespace n_UCombatDataTableRefGameChannelProperty {
		constexpr auto GameChannel = 0x6c; // FString
		constexpr auto DescriptionID = 0x7c; // int32_t
	}

	namespace n_UMobileMenuListItem {
		constexpr auto Width = 0x74; // float
		constexpr auto Height = 0x78; // float
	}

	namespace n_ACombatWaveFlyingVehicleBase {
		constexpr auto VfTable_Iinterface_WavePawn = 0x1220; // FPointer
		constexpr auto WavePawnData = 0x1228; // FWavePawnData
	}

	namespace n_ACombatAIGameTDMBase {
		constexpr auto AITypeInfoArray = 0x78c; // TArray<FSAITypeInfo>
		constexpr auto PrimaryWeaponInfoArray = 0x79c; // TArray<FSAIWeaponInfo>
		constexpr auto SubWeaponInfoArray = 0x7ac; // TArray<FSAIWeaponInfo>
		constexpr auto MeleeWeaponInfoArray = 0x7bc; // TArray<FSAIWeaponInfo>
		constexpr auto GrenadeWeaponInfoArray = 0x7cc; // TArray<FSAIWeaponInfo>
		constexpr auto AITeam = 0x7dc; // Team
		constexpr auto PlayerTeam = 0x7dd; // Team
		constexpr auto AIRespawnDelay = 0x7e0; // float
		constexpr auto AIInvulnerableTime = 0x7e4; // float
		constexpr auto BTResouceArray = 0x7e8; // TArray<ObjectProperty>
		constexpr auto AIMan = 0x7f8; // ObjectProperty
		constexpr auto CurrentlyBotID = 0x800; // int32_t
	}

	namespace n_UMcpServiceBase {
		constexpr auto McpConfigClassName = 0x60; // FString
		constexpr auto McpConfig = 0x70; // ObjectProperty
	}

	namespace n_UCCSAFMoveTo {
		constexpr auto Target = 0x64; // FVector
		constexpr auto MovementType = 0x70; // ECCSMovementType
		constexpr auto Alertness = 0x71; // ECCSAlertnessState
	}

	namespace n_USeqAct_SubtractInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UTimeDilationAnimInst {
		constexpr auto TimeDilationAnim = 0x60; // ObjectProperty
		constexpr auto InterpGroupInst = 0x68; // ObjectProperty
		constexpr auto CurTime = 0x70; // float
		constexpr auto bLooping = 0x74; // uint32_t : 1
		constexpr auto bFinished = 0x74; // uint32_t : 1
		constexpr auto PlayRate = 0x78; // float
		constexpr auto RemainingTime = 0x7c; // float
		constexpr auto FloatTrack = 0x80; // ObjectProperty
		constexpr auto FloatInst = 0x88; // ObjectProperty
	}

	namespace n_USeqAct_ToggleConstraintDrive {
		constexpr auto bEnableAngularPositionDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableAngularVelocityDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableLinearPositionDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableLinearvelocityDrive = 0x108; // uint32_t : 1
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveFloat
	}

	namespace n_USavedMove {
		constexpr auto NextMove = 0x60; // ObjectProperty
		constexpr auto TimeStamp = 0x68; // float
		constexpr auto Delta = 0x6c; // float
		constexpr auto bRun = 0x70; // uint32_t : 1
		constexpr auto bDuck = 0x70; // uint32_t : 1
		constexpr auto bPressedJump = 0x70; // uint32_t : 1
		constexpr auto bDoubleJump = 0x70; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x70; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x70; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x70; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x70; // uint32_t : 1
		constexpr auto DoubleClickMove = 0x74; // EDoubleClickDir
		constexpr auto SavedPhysics = 0x75; // EPhysics
		constexpr auto RootMotionMode = 0x76; // ERootMotionMode
		constexpr auto StartLocation = 0x78; // FVector
		constexpr auto StartRelativeLocation = 0x84; // FVector
		constexpr auto StartVelocity = 0x90; // FVector
		constexpr auto StartFloor = 0x9c; // FVector
		constexpr auto SavedLocation = 0xa8; // FVector
		constexpr auto SavedVelocity = 0xb4; // FVector
		constexpr auto SavedRelativeLocation = 0xc0; // FVector
		constexpr auto RMVelocity = 0xcc; // FVector
		constexpr auto Acceleration = 0xd8; // FVector
		constexpr auto Rotation = 0xe4; // FRotator
		constexpr auto StartBase = 0xf0; // ObjectProperty
		constexpr auto EndBase = 0xf8; // ObjectProperty
		constexpr auto CustomTimeDilation = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto RootMotionInterpCurrentTime = 0x108; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x10c; // FVector
	}

	namespace n_UCCSATBlendListBase {
		constexpr auto BlendTime = 0x120; // float
	}

	namespace n_ACombatAIGameRadarCore {
		constexpr auto BotClass = 0x46c; // UObject*
	}

	namespace n_UCombatObjectPool {
		constexpr auto PoolLimitSize = 0x60; // int32_t
		constexpr auto CurMemSize = 0x64; // int32_t
		constexpr auto ReferenceCounterMax = 0x68; // int32_t
		constexpr auto ReferenceCounterIncrement = 0x6c; // int32_t
		constexpr auto ReferenceCounterDecrement = 0x70; // int32_t
		constexpr auto ObjectCacheGarbageCollectionCycle = 0x74; // float
		constexpr auto ObjectCacheLifeTime = 0x78; // float
		constexpr auto ObjectCache = 0x7c; // TArray<FObjectCacheDatum>
		constexpr auto MergedDataCacheMax = 0x8c; // int32_t
		constexpr auto MergedDataPutReferenceCounterValue = 0x90; // int32_t
		constexpr auto MergedDataReferenceCounterMax = 0x94; // int32_t
		constexpr auto MergedDataReferenceCounterIncrement = 0x98; // int32_t
		constexpr auto MergedDataReferenceCounterDecrement = 0x9c; // int32_t
		constexpr auto MergedMeshCache = 0xa0; // FMergedMeshList [0x3]
		constexpr auto MSMaterialDataPutReferenceCounterValue = 0xd0; // int32_t
		constexpr auto MSMaterialDataReferenceCounterMax = 0xd4; // int32_t
		constexpr auto MSMaterialDataReferenceCounterIncrement = 0xd8; // int32_t
		constexpr auto MSMaterialDataReferenceCounterDecrement = 0xdc; // int32_t
		constexpr auto MSMaterialCacheLifeTime = 0xe0; // float
		constexpr auto MSMaterialCacheGarbageCollectionCycle = 0xe4; // float
		constexpr auto MSMaterialList = 0xe8; // TArray<FMaterialSetListMaterialDatum>
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto SceneTextureType = 0xe4; // ESceneTextureType
		constexpr auto ScreenAlign = 0xe8; // uint32_t : 1
	}

	namespace n_ACBCheatManager {
		constexpr auto TableDepot = 0x29c; // ObjectProperty
		constexpr auto DSConnectionDelay = 0x2a4; // TArray<FDSConnectionDelayInfo>
		constexpr auto CameraRollSpeed = 0x2b4; // float
		constexpr auto CameraRollAcceleration = 0x2b8; // float
		constexpr auto CameraRollFriction = 0x2bc; // float
		constexpr auto CurrentCamRollAcceleration = 0x2c0; // float
		constexpr auto CurrentCamRollSpeed = 0x2c4; // float
		constexpr auto FontInfo = 0x2c8; // FFontRenderInfo
		constexpr auto bShowMyPawnAnimNodeSeq = 0x2f0; // uint32_t : 1
		constexpr auto bShowOtherPawnAnimNodeSeq = 0x2f0; // uint32_t : 1
		constexpr auto bShowDebugOtherPawn = 0x2f0; // uint32_t : 1
		constexpr auto bShowWeaponAnimNodeSeq = 0x2f0; // uint32_t : 1
		constexpr auto bShowWeapAttachAnimNodeSeq = 0x2f0; // uint32_t : 1
		constexpr auto bShowFirstZoomAnimNodeSeq = 0x2f0; // uint32_t : 1
		constexpr auto bShowPawnBuff = 0x2f0; // uint32_t : 1
		constexpr auto bDisplayClassSystemLog = 0x2f0; // uint32_t : 1
		constexpr auto bDebugSoundMode = 0x2f0; // uint32_t : 1
		constexpr auto bScreenShotMode = 0x2f0; // uint32_t : 1
		constexpr auto bSwitchObjectuse = 0x2f0; // uint32_t : 1
		constexpr auto bWeaponAsyncLoadedActor = 0x2f0; // uint32_t : 1
		constexpr auto bDrawArcAttackLine = 0x2f0; // uint32_t : 1
		constexpr auto PawnBoneName = 0x2f4; // FName
		constexpr auto CameraTypeList = 0x2fc; // TArray<FName>
		constexpr auto TestProjectileClass = 0x30c; // ACombatProj_ExplosiveBase*
		constexpr auto TestProjectileRadius = 0x314; // float
		constexpr auto TestProjectileHeight = 0x318; // float
		constexpr auto TestProjectileNum = 0x31c; // char
		constexpr auto TestProjectileTeamNum = 0x31d; // char
		constexpr auto TestProjectileDelay = 0x320; // float
		constexpr auto TestProjectileDestination = 0x324; // FVector
		constexpr auto StatUnitTest = 0x330; // ObjectProperty
		constexpr auto MatchroomPlayMapList = 0x338; // TArray<int32_t>
	}

	namespace n_UCombatInGameResourcePool {
		constexpr auto MaxWeaponMaterialSet = 0x60; // int32_t
		constexpr auto MinImpactDecalDistance = 0x64; // float
		constexpr auto ImpactDecalDepthBias = 0x68; // float
		constexpr auto ImpactDecalDepthBiasStep = 0x6c; // float
		constexpr auto ImpactDecalSlopeScaleDepthBias = 0x70; // float
		constexpr auto bIgnoreNearImpactDecal = 0x74; // uint32_t : 1
		constexpr auto DefaultPhysMaterialName = 0x78; // FString
		constexpr auto DefaultAirPhysMaterialName = 0x88; // FString
		constexpr auto Resource = 0x98; // FInGameResource [0x5]
		constexpr auto OuterActor = 0x138; // ObjectProperty
		constexpr auto MinImpactDecalDistanceSq = 0x140; // float
		constexpr auto DefaultPhysMaterial = 0x144; // ObjectProperty
		constexpr auto DefaultAirPhysMaterial = 0x14c; // ObjectProperty
		constexpr auto CachedSkillData = 0x154; // TArray<ObjectProperty>
		constexpr auto CachedModeWeaponData = 0x164; // TArray<ObjectProperty>
		constexpr auto WeaponMasterAnimSet = 0x174; // FInGameSingleResourceList [0x2]
		constexpr auto WeaponSubAnimSet = 0x194; // FInGameSingleResourceList [0x2]
		constexpr auto AttachmentAnimSet = 0x1b4; // FInGameSingleResourceList [0x2]
		constexpr auto WeaponMasterAnimSetCallbackList = 0x1d4; // FIndirectArray_Mirror
		constexpr auto WeaponSubAnimSetCallbackList = 0x1e4; // FIndirectArray_Mirror
		constexpr auto AttachmentAnimSetCallbackList = 0x1f4; // FIndirectArray_Mirror
		constexpr auto LocalMeshesForPreloadTexture = 0x204; // TArray<ObjectProperty>
		constexpr auto PreloadMaterialList = 0x214; // TArray<ObjectProperty>
		constexpr auto ParachuteLandingZone = 0x224; // TArray<FLandingZone>
		constexpr auto __OnLoadAsyncAnimSetFinished__Delegate = 0x234; // DelegateProperty
	}

	namespace n_USeqVar_Bool {
		constexpr auto bValue = 0xa0; // int32_t
	}

	namespace n_UCBPhysicalMaterialProperty {
		constexpr auto MaterialType = 0x60; // FName
		constexpr auto TempletType = 0x68; // EHitBodyType
		constexpr auto PenetrationType = 0x69; // ePenetrationType
		constexpr auto ImpactEffects = 0x6c; // TArray<FMaterialImpactEffect>
		constexpr auto LowGoreImpactEffects = 0x7c; // TArray<FMaterialImpactEffect>
		constexpr auto FootStepSound = 0x8c; // ObjectProperty
		constexpr auto JumpingSound = 0x94; // ObjectProperty
		constexpr auto LandedSound = 0x9c; // ObjectProperty
		constexpr auto FootStepParticleTemplate = 0xa4; // ObjectProperty
		constexpr auto HitPriority = 0xac; // int32_t
		constexpr auto ImpactPointLightInfo = 0xb0; // FPointLightInfo
		constexpr auto ExplosionData = 0xc8; // TArray<FExplosionDatum>
	}

	namespace n_UCCSBTScriptCondition {
		constexpr auto Controller = 0xcc; // ObjectProperty
	}

	namespace n_UAnimNotify_ClothingMaxDistanceScale {
		constexpr auto StartScale = 0x60; // float
		constexpr auto EndScale = 0x64; // float
		constexpr auto ScaleMode = 0x68; // EMaxDistanceScaleMode
		constexpr auto Duration = 0x6c; // float
	}

	namespace n_UNavMeshPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x78; // float
		constexpr auto bSoft = 0x7c; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x80; // float
	}

	namespace n_UCCSBTCrouch {
		constexpr auto bCrouch = 0xd4; // uint32_t : 1
		constexpr auto Speed = 0xd8; // ECCSMovementSpeed
	}

	namespace n_UMcpServerTimeManager {
		constexpr auto TimeStampUrl = 0x98; // FString
		constexpr auto LastTimeStamp = 0xa8; // FString
		constexpr auto HTTPRequestServerTime = 0xb8; // ObjectProperty
	}

	namespace n_UDownloadableContentEnumerator {
		constexpr auto DLCBundles = 0x60; // TArray<FOnlineContent>
		constexpr auto DLCRootDir = 0x70; // FString
		constexpr auto FindDLCDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto __OnFindDLCComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UCombatSteamAchivementManager {
		constexpr auto SteamAchievements = 0x60; // TArray<FSteamAchievementData>
	}

	namespace n_UCombatHUD_OccupiedArea {
		constexpr auto AreaVolume = 0x1b0; // ObjectProperty
	}

	namespace n_USVehicleSimTank {
		constexpr auto LeftTrackVel = 0xf8; // float
		constexpr auto RightTrackVel = 0xfc; // float
		constexpr auto LeftTrackTorque = 0x100; // float
		constexpr auto RightTrackTorque = 0x104; // float
		constexpr auto MaxEngineTorque = 0x108; // float
		constexpr auto EngineDamping = 0x10c; // float
		constexpr auto InsideTrackTorqueFactor = 0x110; // float
		constexpr auto SteeringLatStiffnessFactor = 0x114; // float
		constexpr auto TurnInPlaceThrottle = 0x118; // float
		constexpr auto TurnMaxGripReduction = 0x11c; // float
		constexpr auto TurnGripScaleRate = 0x120; // float
		constexpr auto bTurnInPlaceOnSteer = 0x124; // uint32_t : 1
	}

	namespace n_UCombatDataTableRefMoneyDisplay {
		constexpr auto bDisplay = 0x6c; // uint32_t : 1
		constexpr auto Toggle_Renew = 0x6c; // uint32_t : 1
		constexpr auto Toggle_Charge = 0x6c; // uint32_t : 1
		constexpr auto CodeName = 0x70; // FString
		constexpr auto MoneyType = 0x80; // int32_t
		constexpr auto ImageID_Icon = 0x84; // int32_t
		constexpr auto ImageID_Lobby = 0x88; // int32_t
		constexpr auto Display_Name = 0x8c; // int32_t
		constexpr auto Display_Tooltip = 0x90; // int32_t
		constexpr auto Renew_Tooltip = 0x94; // int32_t
		constexpr auto Charge_Tooltip = 0x98; // int32_t
	}

	namespace n_USceneCapture2DComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto FieldOfView = 0xd8; // float
		constexpr auto NearPlane = 0xdc; // float
		constexpr auto FarPlane = 0xe0; // float
		constexpr auto bUpdateMatrices = 0xe4; // uint32_t : 1
		constexpr auto ViewMatrix = 0xf0; // FMatrix
		constexpr auto ProjMatrix = 0x130; // FMatrix
	}

	namespace n_USeqAct_RemoveState {
		constexpr auto StateName = 0x108; // FString
	}

	namespace n_UMorphNodePose {
		constexpr auto Target = 0x74; // ObjectProperty
		constexpr auto MorphName = 0x7c; // FName
		constexpr auto Weight = 0x84; // float
	}

	namespace n_ADynamicPylon {
		constexpr auto bMoving = 0x454; // uint32_t : 1
	}

	namespace n_UMaterialInstanceTimeVarying {
		constexpr auto bAutoActivateAll = 0x29c; // uint32_t : 1
		constexpr auto Duration = 0x2a0; // float
		constexpr auto PlayRate = 0x2a4; // float
		constexpr auto FontParameterValues = 0x2a8; // TArray<FFontParameterValueOverTime>
		constexpr auto ScalarParameterValues = 0x2b8; // TArray<FScalarParameterValueOverTime>
		constexpr auto TextureParameterValues = 0x2c8; // TArray<FTextureParameterValueOverTime>
		constexpr auto VectorParameterValues = 0x2d8; // TArray<FVectorParameterValueOverTime>
		constexpr auto LinearColorParameterValues = 0x2e8; // TArray<FLinearColorParameterValueOverTime>
	}

	namespace n_AKActorSpawnable {
		constexpr auto bRecycleScaleToZero = 0x378; // uint32_t : 1
		constexpr auto bScalingToZero = 0x378; // uint32_t : 1
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x68; // EParticleEventType
		constexpr auto EventName = 0x6c; // FName
	}

	namespace n_ACheatManager {
		constexpr auto ViewingFrom = 0x244; // FString
		constexpr auto OwnCamera = 0x254; // FString
		constexpr auto OnlineSub = 0x264; // ObjectProperty
		constexpr auto OwnerPC = 0x26c; // ObjectProperty
		constexpr auto Pawn = 0x274; // ObjectProperty
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UCombatCTFGameScore {
		constexpr auto FlagHoistedScore = 0x60; // FScoreStruct
	}

	namespace n_ACombatMinimapActor {
		constexpr auto MiniMapTexture = 0x244; // ObjectProperty
		constexpr auto OpacityRatio = 0x24c; // float
		constexpr auto ShowEditorWidget = 0x250; // uint32_t : 1
		constexpr auto PrimaryMinimap = 0x250; // uint32_t : 1
		constexpr auto UseMinimapActorRadarRange = 0x250; // uint32_t : 1
		constexpr auto RadarRange = 0x254; // float
		constexpr auto WholeMapScaleVaule = 0x258; // float
		constexpr auto WholeMapVCTeamRotationVaule = 0x25c; // int32_t
		constexpr auto WholeMapPMTeamRotationVaule = 0x260; // int32_t
		constexpr auto WholeMapRotationVaule = 0x264; // int32_t
		constexpr auto WorldSizeX = 0x268; // int32_t
		constexpr auto WorldSizeY = 0x26c; // int32_t
	}

	namespace n_UGripBTBooleanCondition {
		constexpr auto Negate = 0xbc; // uint32_t : 1
	}

	namespace n_UAmbientOcclusionEffect {
		constexpr auto OcclusionColor = 0x88; // FLinearColor
		constexpr auto OcclusionPower = 0x98; // float
		constexpr auto OcclusionScale = 0x9c; // float
		constexpr auto OcclusionBias = 0xa0; // float
		constexpr auto MinOcclusion = 0xa4; // float
		constexpr auto SSAO2 = 0xa8; // uint32_t : 1
		constexpr auto bAngleBasedSSAO = 0xa8; // uint32_t : 1
		constexpr auto OcclusionRadius = 0xac; // float
		constexpr auto OcclusionAttenuation = 0xb0; // float
		constexpr auto OcclusionQuality = 0xb4; // EAmbientOcclusionQuality
		constexpr auto OcclusionFadeoutMinDistance = 0xb8; // float
		constexpr auto OcclusionFadeoutMaxDistance = 0xbc; // float
		constexpr auto HaloDistanceThreshold = 0xc0; // float
		constexpr auto HaloDistanceScale = 0xc4; // float
		constexpr auto HaloOcclusion = 0xc8; // float
		constexpr auto EdgeDistanceThreshold = 0xcc; // float
		constexpr auto EdgeDistanceScale = 0xd0; // float
		constexpr auto FilterDistanceScale = 0xd4; // float
		constexpr auto FilterSize = 0xd8; // int32_t
		constexpr auto HistoryConvergenceTime = 0xdc; // float
		constexpr auto HistoryWeightConvergenceTime = 0xe0; // float
	}

	namespace n_UPrefabSequence {
		constexpr auto OwnerPrefab = 0x174; // ObjectProperty
	}

	namespace n_USeqAct_Destroy {
		constexpr auto bDestroyBasedActors = 0x108; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_UCombatFrontEnd_CharacterInfo_TabBase {
		constexpr auto ParentMoviePlayer = 0x60; // ObjectProperty
	}

	namespace n_ANxGenericForceFieldCapsule {
		constexpr auto RenderComponent = 0x338; // ComponentProperty
		constexpr auto CapsuleHeight = 0x340; // float
		constexpr auto CapsuleRadius = 0x344; // float
	}

	namespace n_ACombatIngameVoteManager {
		constexpr auto CurrentVoteType = 0x244; // int32_t
		constexpr auto VoteMaxTime = 0x248; // int32_t
		constexpr auto VoteMaxCoolTime = 0x24c; // int32_t
		constexpr auto VoteCanRound = 0x250; // int32_t
		constexpr auto VoteRemainTime = 0x254; // int32_t
		constexpr auto VoteCoolTime = 0x258; // int32_t
		constexpr auto VoteStartUserCount = 0x25c; // int32_t
		constexpr auto TeamIndex = 0x260; // int32_t
		constexpr auto CurrentVoteClass = 0x264; // ObjectProperty
	}

	namespace n_UMcpGroupsManager {
		constexpr auto CreateGroupUrl = 0x128; // FString
		constexpr auto DeleteGroupUrl = 0x138; // FString
		constexpr auto QueryGroupsUrl = 0x148; // FString
		constexpr auto QueryGroupMembersUrl = 0x158; // FString
		constexpr auto AddGroupMembersUrl = 0x168; // FString
		constexpr auto RemoveGroupMembersUrl = 0x178; // FString
		constexpr auto DeleteAllGroupsUrl = 0x188; // FString
		constexpr auto AcceptGroupInviteUrl = 0x198; // FString
		constexpr auto RejectGroupInviteUrl = 0x1a8; // FString
		constexpr auto __OnQueryGroupsRequestComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersRequestComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnAddGroupMembersRequestComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteRequestComplete__Delegate = 0x1e8; // DelegateProperty
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UApexClothingAsset {
		constexpr auto LodMaterialInfo = 0x80; // TArray<FClothingLodInfo>
		constexpr auto MApexAsset = 0x90; // FPointer
		constexpr auto Materials = 0x98; // TArray<ObjectProperty>
		constexpr auto ApexClothingLibrary = 0xa8; // ObjectProperty
		constexpr auto bUseHardwareCloth = 0xb0; // uint32_t : 1
		constexpr auto bFallbackSkinning = 0xb0; // uint32_t : 1
		constexpr auto bSlowStart = 0xb0; // uint32_t : 1
		constexpr auto bRecomputeNormals = 0xb0; // uint32_t : 1
		constexpr auto bAllowAdaptiveTargetFrequency = 0xb0; // uint32_t : 1
		constexpr auto bResetAfterTeleport = 0xb0; // uint32_t : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xb0; // uint32_t : 1
		constexpr auto IgnoreInitialTrigger = 0xb0; // uint32_t : 1
		constexpr auto UVChannelForTangentUpdate = 0xb4; // int32_t
		constexpr auto MaxDistanceBlendTime = 0xb8; // float
		constexpr auto ContinuousRotationThreshold = 0xbc; // float
		constexpr auto ContinuousDistanceThreshold = 0xc0; // float
		constexpr auto LodWeightsMaxDistance = 0xc4; // float
		constexpr auto LodWeightsDistanceWeight = 0xc8; // float
		constexpr auto LodWeightsBias = 0xcc; // float
		constexpr auto LodWeightsBenefitsBias = 0xd0; // float
		constexpr auto LODDecayTime = 0xd4; // float
		constexpr auto SoundOnMove = 0xd8; // ObjectProperty
		constexpr auto SoundOnRest = 0xe0; // ObjectProperty
		constexpr auto SoundWhileMoving = 0xe8; // ObjectProperty
		constexpr auto SpeedThresholdOnMove = 0xf0; // float
		constexpr auto SpeedThresholdOnRest = 0xf4; // float
	}

	namespace n_UMobileMenuInventory {
		constexpr auto Slots = 0xdc; // TArray<ObjectProperty>
		constexpr auto Items = 0xec; // TArray<ObjectProperty>
		constexpr auto SideLeewayPercent = 0xfc; // float
		constexpr auto CurrentElement = 0x100; // FRenderElementInfo
		constexpr auto Drag = 0x108; // FDragElementInfo
		constexpr auto ScaleSize = 0x130; // FVector2D
		constexpr auto bRenderDragItem = 0x138; // uint32_t : 1
		constexpr auto __OnUpdateItemInSlot__Delegate = 0x13c; // DelegateProperty
		constexpr auto __DoCanPutItemInSlot__Delegate = 0x14c; // DelegateProperty
		constexpr auto __OnUpdateDrag__Delegate = 0x15c; // DelegateProperty
	}

	namespace n_UMorphNodeWeightByBoneRotation {
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BoneName = 0x8c; // FName
		constexpr auto BoneAxis = 0x94; // EAxis
		constexpr auto bInvertBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0x98; // uint32_t : 1
		constexpr auto WeightArray = 0x9c; // TArray<FBoneAngleMorph>
		constexpr auto MaterialSlotId = 0xac; // int32_t
		constexpr auto ScalarParameterName = 0xb0; // FName
		constexpr auto MaterialInstanceConstant = 0xb8; // ObjectProperty
	}

	namespace n_ACombatCheatPawn {
		constexpr auto CheatPawnTeamNum = 0x11f0; // char
		constexpr auto SpawnNumber = 0x11f4; // int32_t
		constexpr auto SpawnName = 0x11f8; // FString
	}

	namespace n_ATrigger {
		constexpr auto CylinderComponent = 0x244; // ComponentProperty
		constexpr auto bRecentlyTriggered = 0x24c; // uint32_t : 1
		constexpr auto bDisplayHitEffects = 0x24c; // uint32_t : 1
		constexpr auto AITriggerDelay = 0x250; // float
	}

	namespace n_UOutLineEffect {
		constexpr auto UnSuppressMaterialType = 0x88; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_CombatMeshTransform {
		constexpr auto Original = 0x108; // ObjectProperty
		constexpr auto NewMesh = 0x110; // ObjectProperty
	}

	namespace n_ACombatWeaponPickupFactory_MeleeMode {
		constexpr auto bDropWeaponOnDeath = 0x44c; // uint32_t : 1
		constexpr auto bRespawnDelaying = 0x44c; // uint32_t : 1
		constexpr auto RespawnDelayedTime = 0x450; // float
	}

	namespace n_UPBRuleNodeCycle {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatSize = 0x74; // float
		constexpr auto CycleSize = 0x78; // int32_t
		constexpr auto bFixRepeatSize = 0x7c; // uint32_t : 1
	}

	namespace n_UParticleModuleRadialBlur {
		constexpr auto OpacityMaterial = 0xb4; // ObjectProperty
		constexpr auto BlurScale = 0xbc; // FRawDistributionFloat
		constexpr auto BlurFalloffExponent = 0xe0; // FRawDistributionFloat
		constexpr auto BlurOpacity = 0x104; // FRawDistributionFloat
		constexpr auto MaxCullDistance = 0x128; // float
		constexpr auto DistanceFalloffExponent = 0x12c; // float
	}

	namespace n_UUIDataStore_OnlinePlaylists {
		constexpr auto ProviderClassName = 0x98; // FString
		constexpr auto ProviderClass = 0xa8; // UUIResourceDataProvider*
		constexpr auto RankedDataProviders = 0xb0; // TArray<ObjectProperty>
		constexpr auto UnrankedDataProviders = 0xc0; // TArray<ObjectProperty>
		constexpr auto RecModeDataProviders = 0xd0; // TArray<ObjectProperty>
		constexpr auto PrivateDataProviders = 0xe0; // TArray<ObjectProperty>
		constexpr auto PlaylistMan = 0xf0; // ObjectProperty
	}

	namespace n_UCombatInGameOptionMenu {
		constexpr auto MenuInfoList = 0xc0; // TArray<FMenuInfo>
	}

	namespace n_UGripBTNode {
		constexpr auto ParentNode = 0x68; // ObjectProperty
		constexpr auto Children = 0x70; // TArray<FNodeChild>
		constexpr auto RandomWeight = 0x80; // float
		constexpr auto NodeName = 0x84; // FName
		constexpr auto NodeDescription = 0x8c; // FString
		constexpr auto Comment = 0x9c; // FString
		constexpr auto DefaultTitle = 0xac; // FName
		constexpr auto LastExecutionResult = 0xb4; // BTExecutionResult
		constexpr auto LastEvaluationResult = 0xb5; // BTEvaluationResult
		constexpr auto DummyVarJustSoBaseClassDontEndWithAByteToAvoidCompilerWarning = 0xb8; // int32_t
	}

	namespace n_USeqAct_CombatTutorial_QuestOn {
		constexpr auto QuestID = 0x108; // FString
		constexpr auto QuestTextIdx = 0x118; // int32_t
		constexpr auto QuestCompletedTextIdx = 0x11c; // int32_t
	}

	namespace n_UGameCrowdBehavior_PlayAnimation {
		constexpr auto AnimationList = 0x9c; // TArray<FName>
		constexpr auto BlendInTime = 0xac; // float
		constexpr auto BlendOutTime = 0xb0; // float
		constexpr auto bUseRootMotion = 0xb4; // uint32_t : 1
		constexpr auto bLookAtPlayer = 0xb4; // uint32_t : 1
		constexpr auto bLooping = 0xb4; // uint32_t : 1
		constexpr auto bBlendBetweenAnims = 0xb4; // uint32_t : 1
		constexpr auto CustomActionTarget = 0xb8; // ObjectProperty
		constexpr auto LoopIndex = 0xc0; // int32_t
		constexpr auto LoopTime = 0xc4; // float
		constexpr auto AnimSequence = 0xc8; // ObjectProperty
		constexpr auto AnimationIndex = 0xd0; // int32_t
	}

	namespace n_UApexStaticDestructibleComponent {
		constexpr auto SleepEnergyThreshold = 0x27c; // float
		constexpr auto SleepDamping = 0x280; // float
		constexpr auto ApexDestructibleActor = 0x284; // FPointer
		constexpr auto ApexDestructiblePreview = 0x28c; // FPointer
		constexpr auto bIsThumbnailComponent = 0x294; // uint32_t : 1
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_AFractureManager {
		constexpr auto FSMPartPoolSize = 0x244; // int32_t
		constexpr auto bEnableAntiVibration = 0x248; // uint32_t : 1
		constexpr auto bEnableSpawnChunkEffectForRadialDamage = 0x248; // uint32_t : 1
		constexpr auto DestroyVibrationLevel = 0x24c; // float
		constexpr auto DestroyMinAngVel = 0x250; // float
		constexpr auto ExplosionVelScale = 0x254; // float
		constexpr auto PartPool = 0x258; // TArray<ObjectProperty>
		constexpr auto FreeParts = 0x268; // TArray<int32_t>
		constexpr auto ActorsWithDeferredPartsToSpawn = 0x278; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionTerrainLayerCoords {
		constexpr auto MappingType = 0xb0; // ETerrainCoordMappingType
		constexpr auto MappingScale = 0xb4; // float
		constexpr auto MappingRotation = 0xb8; // float
		constexpr auto MappingPanU = 0xbc; // float
		constexpr auto MappingPanV = 0xc0; // float
	}

	namespace n_UCombatDataTableRefMode {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto DefaultMapCodename = 0x80; // FString
		constexpr auto modeType = 0x90; // FString
		constexpr auto ModeUIType = 0xa0; // int32_t
		constexpr auto HUDType = 0xa4; // int32_t
		constexpr auto RankSysID = 0xa8; // int32_t
		constexpr auto DisplayName = 0xac; // int32_t
		constexpr auto DisplayOption = 0xb0; // int32_t
		constexpr auto DisplayName_NoHtml = 0xb4; // int32_t
		constexpr auto AiModeMatchRoomThumbnail = 0xb8; // FString
		constexpr auto AiModeSocreBoardThumbnail = 0xc8; // FString
		constexpr auto ImageID = 0xd8; // int32_t
		constexpr auto AiModeMatchRoomThumbnailID = 0xdc; // int32_t
		constexpr auto AiModeSocreBoardThumbnailID = 0xe0; // int32_t
		constexpr auto MaxUser = 0xe4; // FString
		constexpr auto Goal = 0xf4; // FString
		constexpr auto Mission = 0x104; // FString
		constexpr auto MatchEndScore = 0x114; // FString
		constexpr auto PlayTime = 0x124; // FString
		constexpr auto ThirdCameraView = 0x134; // FString
		constexpr auto FreeCameraView = 0x144; // FString
		constexpr auto DeathChat = 0x154; // FString
		constexpr auto AllChat = 0x164; // FString
		constexpr auto Rush = 0x174; // FString
		constexpr auto AutoTeamBalance = 0x184; // FString
		constexpr auto LimitLevel = 0x194; // FString
		constexpr auto Observer = 0x1a4; // FString
		constexpr auto Difficulty = 0x1b4; // FString
		constexpr auto HalfChange = 0x1c4; // FString
		constexpr auto ApplyGearSet = 0x1d4; // char
		constexpr auto AutoTeamChange = 0x1d8; // FString
		constexpr auto ApplyClanRecord = 0x1e8; // FString
		constexpr auto RequiredClanMember = 0x1f8; // FString
		constexpr auto Category = 0x208; // int32_t
		constexpr auto StartableMinUser = 0x20c; // int32_t
		constexpr auto PasswordSet = 0x210; // int32_t
		constexpr auto LimitedClanMember = 0x214; // int32_t
		constexpr auto MarkerGroupID = 0x218; // FString
	}

	namespace n_USeqEvent_MobileMotion {
		constexpr auto Roll = 0x128; // float
		constexpr auto Pitch = 0x12c; // float
		constexpr auto Yaw = 0x130; // float
		constexpr auto DeltaRoll = 0x134; // float
		constexpr auto DeltaPitch = 0x138; // float
		constexpr auto DeltaYaw = 0x13c; // float
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_USeqAct_SetBool {
		constexpr auto DefaultValue = 0x108; // uint32_t : 1
	}

	namespace n_ACombatStaticMeshReplicationInfo {
		constexpr auto MeshStateList = 0x244; // char [0x100]
		constexpr auto MeshActorList = 0x344; // ObjectProperty [0x100]
		constexpr auto SMRIIndex = 0xb44; // int32_t
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Bias = 0xe4; // float
		constexpr auto Scale = 0xe8; // float
	}

	namespace n_UCombatFrontEnd_Repurchase {
		constexpr auto IsBuyAndEquip = 0xd0; // uint32_t : 1
		constexpr auto bInit = 0xd0; // uint32_t : 1
		constexpr auto bIsShow = 0xd0; // uint32_t : 1
		constexpr auto CashUnit = 0xd4; // int32_t
		constexpr auto priceID = 0xd8; // int32_t
		constexpr auto BuyShopItemID = 0xdc; // int32_t
		constexpr auto BuyItemSlotIndex = 0xe0; // int32_t
		constexpr auto CurrentPresetTab = 0xe4; // char
		constexpr auto CurrentCodeName = 0xe8; // FString
		constexpr auto RepurchaseItemList = 0xf8; // TArray<FRepurchaseItem>
		constexpr auto CurrentSpendonMoney = 0x108; // int32_t
		constexpr auto CurrentSpendonCash = 0x10c; // int32_t
		constexpr auto CurrentSpendonMedal = 0x110; // int32_t
	}

	namespace n_UInterpTrackInstFaceFX {
		constexpr auto bFirstUpdate = 0x60; // uint32_t : 1
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0x124; // int32_t
		constexpr auto SizeY = 0x128; // int32_t
		constexpr auto Format = 0x12c; // EPixelFormat
		constexpr auto AddressX = 0x12d; // TextureAddress
		constexpr auto AddressY = 0x12e; // TextureAddress
		constexpr auto ClearColor = 0x130; // FLinearColor
		constexpr auto bForceLinearGamma = 0x140; // uint32_t : 1
	}

	namespace n_UCombatUserInfoTransaction {
		constexpr auto ConnectTime = 0x60; // int32_t
		constexpr auto Level = 0x64; // int32_t
		constexpr auto LevelExp = 0x68; // int32_t
		constexpr auto PlayTime = 0x6c; // int32_t
		constexpr auto CallingCardID = 0x70; // int32_t
		constexpr auto LastRank = 0x74; // int32_t
		constexpr auto Rank = 0x78; // int32_t
		constexpr auto EmblemID = 0x7c; // int32_t
		constexpr auto ClanExp = 0x80; // int32_t
		constexpr auto RankingPoint = 0x84; // int32_t
		constexpr auto ClanColorID = 0x88; // int32_t
		constexpr auto EmblemEdgeID = 0x8c; // int32_t
		constexpr auto NickName = 0x90; // FString
		constexpr auto ClanName = 0xa0; // FString
		constexpr auto ModeStatListMap = 0xb0; // TMap<None, None>
		constexpr auto MatchHistoryList = 0xf8; // FMatchHistoryInfo [0x9]
		constexpr auto CompetitionListMap = 0x2cc; // TMap<None, None>
	}

	namespace n_UCombatEvolveGunMovie {
		constexpr auto SupplyContainer = 0xad0; // ObjectProperty
		constexpr auto bUpdate = 0xad8; // uint32_t : 1
	}

	namespace n_APortalVolume {
		constexpr auto Portals = 0x280; // TArray<ObjectProperty>
	}

	namespace n_UMobileMenuList {
		constexpr auto bIsVerticalList = 0xdc; // uint32_t : 1
		constexpr auto bForceSelectedToLineup = 0xdc; // uint32_t : 1
		constexpr auto bTapToScrollToItem = 0xdc; // uint32_t : 1
		constexpr auto bLoops = 0xdc; // uint32_t : 1
		constexpr auto SelectedOffset = 0xe0; // float
		constexpr auto Items = 0xe4; // TArray<ObjectProperty>
		constexpr auto SelectedItem = 0xf4; // FSelectedMenuItem
		constexpr auto Drag = 0x100; // FMenuListDragInfo
		constexpr auto Movement = 0x154; // FMenuListMovementInfo
		constexpr auto Deacceleration = 0x170; // float
		constexpr auto EaseOutExp = 0x174; // float
		constexpr auto ScreenSize = 0x178; // FIntPoint
		constexpr auto FirstVisible = 0x180; // int32_t
		constexpr auto LastVisible = 0x184; // int32_t
		constexpr auto EndOfListSupression = 0x188; // float
	}

	namespace n_UAnimNodeSynch {
		constexpr auto Groups = 0x100; // TArray<FSynchGroup>
	}

	namespace n_UPrimitiveComponent {
		constexpr auto Tag = 0x88; // int32_t
		constexpr auto Bounds = 0x8c; // FBoxSphereBounds
		constexpr auto SceneInfo = 0xa8; // FPointer
		constexpr auto DetachFence = 0xb0; // int32_t
		constexpr auto LocalToWorldDeterminant = 0xb4; // float
		constexpr auto LocalToWorld = 0xc0; // FMatrix
		constexpr auto MotionBlurInfoIndex = 0x100; // int32_t
		constexpr auto DecalList = 0x104; // TArray<FPointer>
		constexpr auto DecalsToReattach = 0x114; // TArray<ComponentProperty>
		constexpr auto ShadowParent = 0x124; // ComponentProperty
		constexpr auto ReplacementPrimitive = 0x12c; // ComponentProperty
		constexpr auto FogVolumeComponent = 0x134; // ComponentProperty
		constexpr auto OverrideLightComponent = 0x13c; // ComponentProperty
		constexpr auto LightEnvironment = 0x144; // ComponentProperty
		constexpr auto PreviousLightEnvironment = 0x14c; // ComponentProperty
		constexpr auto MinDrawDistance = 0x154; // float
		constexpr auto MassiveLODDistance = 0x158; // float
		constexpr auto MaxDrawDistance = 0x15c; // float
		constexpr auto CachedMaxDrawDistance = 0x160; // float
		constexpr auto MotionBlurInstanceScale = 0x164; // float
		constexpr auto CullDistance = 0x168; // float
		constexpr auto CachedCullDistance = 0x16c; // float
		constexpr auto DepthPriorityGroup = 0x170; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x171; // ESceneDepthPriorityGroup
		constexpr auto DetailMode = 0x172; // EDetailMode
		constexpr auto RBChannel = 0x173; // ERBCollisionChannel
		constexpr auto RBDominanceGroup = 0x174; // char
		constexpr auto PreviewEnvironmentShadowing = 0x175; // char
		constexpr auto OutlineColor = 0x178; // FColor
		constexpr auto OutlineWidth = 0x17c; // char
		constexpr auto OutlineMinWidth = 0x17d; // char
		constexpr auto OutlineBlendMode = 0x17e; // EBlendMode
		constexpr auto StencilID = 0x17f; // char
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x180; // uint32_t : 1
		constexpr auto bAllowCullDistanceVolume = 0x180; // uint32_t : 1
		constexpr auto HiddenGame = 0x180; // uint32_t : 1
		constexpr auto HiddenEditor = 0x180; // uint32_t : 1
		constexpr auto bOwnerNoSee = 0x180; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0x180; // uint32_t : 1
		constexpr auto bIgnoreOwnerHidden = 0x180; // uint32_t : 1
		constexpr auto bUseAsOccluder = 0x180; // uint32_t : 1
		constexpr auto bAllowApproximateOcclusion = 0x180; // uint32_t : 1
		constexpr auto bFirstFrameOcclusion = 0x180; // uint32_t : 1
		constexpr auto bIgnoreNearPlaneIntersection = 0x180; // uint32_t : 1
		constexpr auto bSelectable = 0x180; // uint32_t : 1
		constexpr auto bForceMipStreaming = 0x180; // uint32_t : 1
		constexpr auto bAcceptsDecals = 0x180; // uint32_t : 1
		constexpr auto bAcceptsDecalsDuringGameplay = 0x180; // uint32_t : 1
		constexpr auto bAcceptsStaticDecals = 0x180; // uint32_t : 1
		constexpr auto bAcceptsDynamicDecals = 0x180; // uint32_t : 1
		constexpr auto bIsRefreshingDecals = 0x180; // uint32_t : 1
		constexpr auto bAllowDecalAutomaticReAttach = 0x180; // uint32_t : 1
		constexpr auto bUsePerInstanceHitProxies = 0x180; // uint32_t : 1
		constexpr auto CastShadow = 0x180; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x180; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x180; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x180; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x180; // uint32_t : 1
		constexpr auto bNoModSelfShadow = 0x180; // uint32_t : 1
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x180; // uint32_t : 1
		constexpr auto bCastHiddenShadow = 0x180; // uint32_t : 1
		constexpr auto bCastShadowAsTwoSided = 0x180; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x180; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x180; // uint32_t : 1
		constexpr auto bUseOnePassLightingOnTranslucency = 0x180; // uint32_t : 1
		constexpr auto bUsePrecomputedShadows = 0x184; // uint32_t : 1
		constexpr auto bHasExplicitShadowParent = 0x184; // uint32_t : 1
		constexpr auto bAllowAmbientOcclusion = 0x184; // uint32_t : 1
		constexpr auto CollideActors = 0x184; // uint32_t : 1
		constexpr auto AlwaysCheckCollision = 0x184; // uint32_t : 1
		constexpr auto BlockActors = 0x184; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x184; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x184; // uint32_t : 1
		constexpr auto CanBlockCamera = 0x184; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x184; // uint32_t : 1
		constexpr auto bBlockFootPlacement = 0x184; // uint32_t : 1
		constexpr auto bDisableAllRigidBody = 0x184; // uint32_t : 1
		constexpr auto bSkipRBGeomCreation = 0x184; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0x184; // uint32_t : 1
		constexpr auto bFluidDrain = 0x184; // uint32_t : 1
		constexpr auto bFluidTwoWay = 0x184; // uint32_t : 1
		constexpr auto bIgnoreRadialImpulse = 0x184; // uint32_t : 1
		constexpr auto bIgnoreRadialForce = 0x184; // uint32_t : 1
		constexpr auto bIgnoreForceField = 0x184; // uint32_t : 1
		constexpr auto bUseCompartment = 0x184; // uint32_t : 1
		constexpr auto AlwaysLoadOnClient = 0x184; // uint32_t : 1
		constexpr auto AlwaysLoadOnServer = 0x184; // uint32_t : 1
		constexpr auto bIgnoreHiddenActorsMembership = 0x184; // uint32_t : 1
		constexpr auto AbsoluteTranslation = 0x184; // uint32_t : 1
		constexpr auto AbsoluteRotation = 0x184; // uint32_t : 1
		constexpr auto AbsoluteScale = 0x184; // uint32_t : 1
		constexpr auto bAllowShadowFade = 0x184; // uint32_t : 1
		constexpr auto bSupportedOnMobile = 0x184; // uint32_t : 1
		constexpr auto bWasSNFiltered = 0x184; // uint32_t : 1
		constexpr auto Low = 0x184; // uint32_t : 1
		constexpr auto Medium = 0x184; // uint32_t : 1
		constexpr auto High = 0x184; // uint32_t : 1
		constexpr auto DrawOutLine = 0x188; // uint32_t : 1
		constexpr auto DrawOnlyHidden = 0x188; // uint32_t : 1
		constexpr auto DisableDepthTestOutline = 0x188; // uint32_t : 1
		constexpr auto EnableDepthWriteOutline = 0x188; // uint32_t : 1
		constexpr auto OctreeNodes = 0x18c; // TArray<int32_t>
		constexpr auto TranslucencySortPriority = 0x19c; // int32_t
		constexpr auto VisibilityId = 0x1a0; // int32_t
		constexpr auto LightingChannels = 0x1a4; // FLightingChannelContainer
		constexpr auto RBCollideWithChannels = 0x1a8; // FRBCollisionChannelContainer
		constexpr auto PhysMaterialOverride = 0x1ac; // ObjectProperty
		constexpr auto BodyInstance = 0x1b4; // ObjectProperty
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto Rotation = 0x20c; // FRotator
		constexpr auto Scale = 0x218; // float
		constexpr auto Scale3D = 0x21c; // FVector
		constexpr auto BoundsScale = 0x228; // float
		constexpr auto LastSubmitTime = 0x22c; // float
		constexpr auto LastRenderTime = 0x230; // float
		constexpr auto ScriptRigidBodyCollisionThreshold = 0x234; // float
		constexpr auto OutLineColorIntense = 0x238; // float
		constexpr auto OutLineIntenseCycleTime = 0x23c; // float
		constexpr auto OutLineCullDistance = 0x240; // float
		constexpr auto OutlineMaterialOverride = 0x244; // ObjectProperty
		constexpr auto OutlineWidthMaxDistance = 0x24c; // float
	}

	namespace n_UGoal_AtActor {
		constexpr auto GoalActor = 0x78; // ObjectProperty
		constexpr auto GoalDist = 0x80; // float
		constexpr auto bKeepPartial = 0x84; // uint32_t : 1
	}

	namespace n_UCombatHUD_Buster {
		constexpr auto TargetActor = 0x1b0; // ObjectProperty
		constexpr auto TargetIndex = 0x1b8; // int32_t
		constexpr auto LastDisplayHealth = 0x1bc; // int32_t
		constexpr auto LastUIState = 0x1c0; // MissionActorUIState
	}

	namespace n_UActorFactoryAI {
		constexpr auto ControllerClass = 0x9c; // AAIController*
		constexpr auto PawnClass = 0xa4; // APawn*
		constexpr auto PawnName = 0xac; // FString
		constexpr auto bGiveDefaultInventory = 0xbc; // uint32_t : 1
		constexpr auto InventoryList = 0xc0; // TArray<AInventory*>
		constexpr auto TeamIndex = 0xd0; // int32_t
	}

	namespace n_UCombatDataRefDecorationParticle {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto DecalParticle = 0x70; // FString
	}

	namespace n_UApexDynamicComponent {
		constexpr auto ComponentDynamicResources = 0x27c; // FPointer
	}

	namespace n_UPhysicsLODVerticalEmitter {
		constexpr auto ParticlePercentage = 0x60; // int32_t
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialVectorCoordTransform
	}

	namespace n_USphericalHarmonicLightComponent {
		constexpr auto WorldSpaceIncidentLighting = 0x1b0; // FSHVectorRGB
		constexpr auto bRenderBeforeModShadows = 0x240; // uint32_t : 1
	}

	namespace n_ACombatVisBlocker {
		constexpr auto CC = 0x244; // ComponentProperty
		constexpr auto InVolumePawnList = 0x24c; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataTableRefRematchOption {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto StartableMinUser = 0x7c; // int32_t
		constexpr auto GroupMinUser = 0x80; // int32_t
		constexpr auto AutoBalance = 0x84; // uint32_t : 1
		constexpr auto CountdownWaitSec = 0x88; // int32_t
	}

	namespace n_UMorphNodeWeightBase {
		constexpr auto NodeConns = 0x74; // TArray<FMorphNodeConn>
	}

	namespace n_UUIDataStore_Registry {
		constexpr auto RegistryData = 0x98; // TArray<FRegistryKeyValuePair>
	}

	namespace n_USeqAct_PrepareMapChange {
		constexpr auto MainLevelName = 0x120; // FName
		constexpr auto InitiallyLoadedSecondaryLevelNames = 0x128; // TArray<FName>
		constexpr auto bIsHighPriority = 0x138; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x138; // uint32_t : 1
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulation = 0x74; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0x98; // FRawDistributionFloat
	}

	namespace n_UPBRuleNodeComment {
		constexpr auto SizeX = 0x70; // int32_t
		constexpr auto SizeY = 0x74; // int32_t
		constexpr auto BorderWidth = 0x78; // int32_t
		constexpr auto BorderColor = 0x7c; // FColor
		constexpr auto bFilled = 0x80; // uint32_t : 1
		constexpr auto FillColor = 0x84; // FColor
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto TargetTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto TargetName = 0x6c; // FName
		constexpr auto Target = 0x74; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x98; // uint32_t : 1
		constexpr auto bLockTarget = 0x98; // uint32_t : 1
		constexpr auto bLockTargetTangent = 0x98; // uint32_t : 1
		constexpr auto bLockTargetStength = 0x98; // uint32_t : 1
		constexpr auto TargetTangent = 0x9c; // FRawDistributionVector
		constexpr auto TargetStrength = 0xc0; // FRawDistributionFloat
		constexpr auto LockRadius = 0xe4; // float
	}

	namespace n_UCombatBusterGameScore {
		constexpr auto BusterDamageScoreRatio = 0x60; // float
		constexpr auto BusterDamageMissionScoreRatio = 0x64; // float
		constexpr auto BusterDamageCRRatio = 0x68; // float
		constexpr auto BusterDamageRankExpRatio = 0x6c; // float
	}

	namespace n_ABrush {
		constexpr auto CsgOper = 0x244; // ECsgOper
		constexpr auto BrushColor = 0x248; // FColor
		constexpr auto PolyFlags = 0x24c; // int32_t
		constexpr auto bColored = 0x250; // uint32_t : 1
		constexpr auto bSolidWhenSelected = 0x250; // uint32_t : 1
		constexpr auto bPlaceableFromClassBrowser = 0x250; // uint32_t : 1
		constexpr auto Brush = 0x254; // ObjectProperty
		constexpr auto BrushComponent = 0x25c; // ComponentProperty
		constexpr auto SavedSelections = 0x264; // TArray<FGeomSelection>
	}

	namespace n_UCombatHUD_NoticePosition {
		constexpr auto CurrentStatus = 0xc0; // EUIGameStatus
		constexpr auto bTryShowNoticeposition = 0xc4; // uint32_t : 1
		constexpr auto LastUpdateTime = 0xc8; // float
	}

	namespace n_ULevelStreamingDistance {
		constexpr auto Origin = 0x100; // FVector
		constexpr auto MaxDistance = 0x10c; // float
	}

	namespace n_UCombatDataTableRefWeaponGroup {
		constexpr auto Id = 0x6c; // int32_t
		constexpr auto GroupName = 0x70; // FString
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0xb0; // FExpressionInput
		constexpr auto Exponent = 0xe4; // FExpressionInput
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x244; // ComponentProperty
	}

	namespace n_UFailedConnect {
		constexpr auto FailMessage = 0x74; // FString [0x4]
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UCombatHUD_BigSizeStringTextBox {
		constexpr auto TextField = 0xbc; // ObjectProperty
		constexpr auto msg = 0xc4; // FString
	}

	namespace n_UNavMeshPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenEdgeTypes = 0x78; // float
		constexpr auto InitLocation = 0x7c; // FVector
		constexpr auto EdgeType = 0x88; // ENavMeshEdgeType
		constexpr auto Penalty = 0x8c; // float
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Texture = 0xb0; // ObjectProperty
		constexpr auto Coordinates = 0xb8; // FExpressionInput
		constexpr auto TextureObject = 0xec; // FExpressionInput
	}

	namespace n_ACombatWeaponBase_Parachute {
		constexpr auto OverrideGravityScalingForPawn = 0x1ee8; // float [0x3]
		constexpr auto OverrideViewPitchMax = 0x1ef4; // float [0x3]
		constexpr auto OverrideTerminalVelocity = 0x1f00; // float [0x3]
		constexpr auto OverrideAirControl = 0x1f0c; // float
		constexpr auto OverrideMaxFallSpeed = 0x1f10; // float
		constexpr auto LandedAnimDuration = 0x1f14; // float
		constexpr auto FallingSound = 0x1f18; // ObjectProperty
		constexpr auto InitialParachuteState = 0x1f20; // ParachuteState
		constexpr auto CurrentParachuteState = 0x1f21; // ParachuteState
		constexpr auto bParachuteOpenOnPressJump = 0x1f24; // uint32_t : 1
		constexpr auto LandingZoneMaterialForAlly = 0x1f28; // ObjectProperty
		constexpr auto LandingZoneMaterialForEnemy = 0x1f30; // ObjectProperty
		constexpr auto LandingZoneSize = 0x1f38; // float
		constexpr auto LandingZoneDecalDepth = 0x1f3c; // float
		constexpr auto FallingSoundCom = 0x1f40; // ComponentProperty
		constexpr auto InstigatorAnchor = 0x1f48; // ObjectProperty
		constexpr auto LastInstigatorAnchor = 0x1f50; // ObjectProperty
	}

	namespace n_UCombatArmsRaceMovie {
		constexpr auto LastTopPlayer = 0xad0; // ObjectProperty [0x2]
	}

	namespace n_UOnlineGameInterfaceImpl {
		constexpr auto OwningSubsystem = 0x60; // ObjectProperty
		constexpr auto GameSettings = 0x68; // ObjectProperty
		constexpr auto GameSearch = 0x70; // ObjectProperty
		constexpr auto CreateOnlineGameCompleteDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto UpdateOnlineGameCompleteDelegates = 0x88; // TArray<DelegateProperty>
		constexpr auto DestroyOnlineGameCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto JoinOnlineGameCompleteDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto MigrateOnlineGameCompleteDelegates = 0xb8; // TArray<DelegateProperty>
		constexpr auto JoinMigratedOnlineGameCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto RecalculateSkillRatingCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto StartOnlineGameCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto EndOnlineGameCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto FindOnlineGamesCompleteDelegates = 0x108; // TArray<DelegateProperty>
		constexpr auto CancelFindOnlineGamesCompleteDelegates = 0x118; // TArray<DelegateProperty>
		constexpr auto LanBeaconState = 0x128; // ELanBeaconState
		constexpr auto LanNonce = 0x129; // char [0x8]
		constexpr auto LanAnnouncePort = 0x134; // int32_t
		constexpr auto LanGameUniqueId = 0x138; // int32_t
		constexpr auto LanPacketPlatformMask = 0x13c; // int32_t
		constexpr auto LanQueryTimeLeft = 0x140; // float
		constexpr auto LanQueryTimeout = 0x144; // float
		constexpr auto LanBeacon = 0x148; // FPointer
		constexpr auto SessionInfo = 0x150; // FPointer
		constexpr auto __OnFindOnlineGamesComplete__Delegate = 0x158; // DelegateProperty
		constexpr auto __OnCreateOnlineGameComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnUpdateOnlineGameComplete__Delegate = 0x178; // DelegateProperty
		constexpr auto __OnDestroyOnlineGameComplete__Delegate = 0x188; // DelegateProperty
		constexpr auto __OnCancelFindOnlineGamesComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnJoinOnlineGameComplete__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnStartOnlineGameComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnEndOnlineGameComplete__Delegate = 0x1e8; // DelegateProperty
		constexpr auto __OnArbitrationRegistrationComplete__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __OnGameInviteAccepted__Delegate = 0x208; // DelegateProperty
		constexpr auto __OnRecalculateSkillRatingComplete__Delegate = 0x218; // DelegateProperty
		constexpr auto __OnMigrateOnlineGameComplete__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnJoinMigratedOnlineGameComplete__Delegate = 0x238; // DelegateProperty
		constexpr auto __OnQosStatusChanged__Delegate = 0x248; // DelegateProperty
	}

	namespace n_UCombatDemoRecSpectatorMovie {
		constexpr auto DemoRecPlayerMC = 0xad0; // ObjectProperty
		constexpr auto LastFrame = 0xad8; // int32_t
		constexpr auto bRewinding = 0xadc; // uint32_t : 1
		constexpr auto bForwarding = 0xadc; // uint32_t : 1
		constexpr auto targetFrame = 0xae0; // int32_t
	}

	namespace n_ACombatProj_Grenade {
		constexpr auto IsStickyBomb = 0x3e4; // uint32_t : 1
		constexpr auto bShoutWarning = 0x3e4; // uint32_t : 1
		constexpr auto WarningDistance = 0x3e8; // float
		constexpr auto ForWardAdditionalTossRate = 0x3ec; // float
		constexpr auto BackWardAdditionalTossRate = 0x3f0; // float
	}

	namespace n_UCombatHUD_ObserverHelp {
		constexpr auto bInitKeyData = 0xc0; // uint32_t : 1
	}

	namespace n_UGripBTNumericCondition {
		constexpr auto Operator = 0xbc; // BTConditionOperator
		constexpr auto Threshold = 0xc0; // int32_t
		constexpr auto Value = 0xc4; // int32_t
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UCombatCommunityTransaction {
		constexpr auto MySessionState = 0x60; // ESessionState
		constexpr auto bMyAFKState = 0x64; // uint32_t : 1
		constexpr auto bInMaintenanceScene = 0x64; // uint32_t : 1
		constexpr auto bNeedChangeClanPassword = 0x64; // uint32_t : 1
		constexpr auto bMessengerVisible = 0x64; // uint32_t : 1
		constexpr auto bIsGMChatPenalty = 0x64; // uint32_t : 1
		constexpr auto MessengerMap = 0x68; // TMap<None, None>
		constexpr auto Count_SuggestionList = 0xb0; // int32_t
		constexpr auto Count_FriendList = 0xb4; // int32_t
		constexpr auto Count_BlockList = 0xb8; // int32_t
		constexpr auto ClanID = 0xbc; // int32_t
		constexpr auto ClanName = 0xc0; // FString
		constexpr auto ClanPoint = 0xd0; // int32_t
		constexpr auto ClanLevel = 0xd4; // int32_t
		constexpr auto ClanLevelColor = 0xd8; // FString
		constexpr auto ClanTotalPoint = 0xe8; // int32_t
		constexpr auto ClanMaxMember = 0xec; // int32_t
		constexpr auto ClanMatchRecord = 0xf0; // FClanMatchData
		constexpr auto ClanNameMap = 0x118; // TMap<None, None>
		constexpr auto ClanRankMatchRecordDataList = 0x160; // TArray<FClanMatchRecordData>
		constexpr auto ClanAMatchRecordDataList = 0x170; // TArray<FClanMatchRecordData>
		constexpr auto ClanBMatchRecordDataList = 0x180; // TArray<FClanMatchRecordData>
		constexpr auto ClanAllMatchRecordDataList = 0x190; // TArray<FClanMatchRecordData>
		constexpr auto Count_ClanList = 0x1a0; // int32_t
		constexpr auto EmblemID = 0x1a4; // WordProperty
		constexpr auto ClanColorID = 0x1a8; // int32_t
		constexpr auto ClanRegistrationTime = 0x1ac; // FTimeData
		constexpr auto RegionID = 0x1b4; // WordProperty
		constexpr auto ClanRankPoint = 0x1b8; // int32_t
		constexpr auto MyRankPoint = 0x1bc; // int32_t
		constexpr auto PrevSeasonRankingPoint = 0x1c0; // int32_t
		constexpr auto PrevSeasonRankingTier = 0x1c4; // int32_t
		constexpr auto ClanJoinMemberMap = 0x1c8; // TMap<None, None>
		constexpr auto LastWhisperList = 0x210; // TArray<FString>
		constexpr auto CCardID = 0x220; // WordProperty
		constexpr auto ScrNoticeInfoMap = 0x224; // TMap<None, None>
		constexpr auto PenaltySec = 0x26c; // float
	}

	namespace n_USkelControlLookAt {
		constexpr auto TargetLocation = 0xd0; // FVector
		constexpr auto TargetLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto LookAtAxis = 0xdd; // EAxis
		constexpr auto UpAxis = 0xde; // EAxis
		constexpr auto AllowRotationSpace = 0xdf; // EBoneControlSpace
		constexpr auto TargetSpaceBoneName = 0xe0; // FName
		constexpr auto bInvertLookAtAxis = 0xe8; // uint32_t : 1
		constexpr auto bDefineUpAxis = 0xe8; // uint32_t : 1
		constexpr auto bInvertUpAxis = 0xe8; // uint32_t : 1
		constexpr auto bUnAffectedByOwnerRotation = 0xe8; // uint32_t : 1
		constexpr auto bEnableLimit = 0xe8; // uint32_t : 1
		constexpr auto bLimitBasedOnRefPose = 0xe8; // uint32_t : 1
		constexpr auto bDisableBeyondLimit = 0xe8; // uint32_t : 1
		constexpr auto bNotifyBeyondLimit = 0xe8; // uint32_t : 1
		constexpr auto bShowLimit = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationX = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationY = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationZ = 0xe8; // uint32_t : 1
		constexpr auto TargetLocationInterpSpeed = 0xec; // float
		constexpr auto DesiredTargetLocation = 0xf0; // FVector
		constexpr auto ActorSpaceLookAtTarget = 0xfc; // FVector
		constexpr auto MaxAngle = 0x108; // float
		constexpr auto OuterMaxAngle = 0x10c; // float
		constexpr auto DeadZoneAngle = 0x110; // float
		constexpr auto RotationAngleRangeX = 0x114; // FVector2D
		constexpr auto RotationAngleRangeY = 0x11c; // FVector2D
		constexpr auto RotationAngleRangeZ = 0x124; // FVector2D
		constexpr auto AllowRotationOtherBoneName = 0x12c; // FName
		constexpr auto LookAtAlpha = 0x134; // float
		constexpr auto LookAtAlphaTarget = 0x138; // float
		constexpr auto LookAtAlphaBlendTimeToGo = 0x13c; // float
		constexpr auto LimitLookDir = 0x140; // FVector
		constexpr auto BaseLookDir = 0x14c; // FVector
		constexpr auto BaseBonePos = 0x158; // FVector
		constexpr auto LastCalcTime = 0x164; // float
		constexpr auto ControlBoneIndex = 0x168; // int32_t
	}

	namespace n_UMaterialExpressionTextureSampleParameterNormal {
		constexpr auto InstanceOverride = 0x140; // FPointer
	}

	namespace n_USequenceVariable {
		constexpr auto VarName = 0x98; // FName
	}

	namespace n_USeqEvent_RigidBodyCollision {
		constexpr auto MinCollisionVelocity = 0x128; // float
	}

	namespace n_UInterpTrackInstHeadTracking {
		constexpr auto Action = 0x60; // EHeadTrackingAction
		constexpr auto CurrentActorMap = 0x64; // TMap<None, None>
		constexpr auto Mesh = 0xac; // ComponentProperty
		constexpr auto TrackControls = 0xb4; // TArray<ObjectProperty>
		constexpr auto LastUpdatePosition = 0xc4; // float
	}

	namespace n_UCombatAIAction_MoveToward {
		constexpr auto ActionNode = 0x78; // ObjectProperty
		constexpr auto LastPathFindResultActor = 0x80; // ObjectProperty
	}

	namespace n_ACrowdAgentBase {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x244; // FPointer
	}

	namespace n_UCombatDataTableRefTodayGame {
		constexpr auto Idx = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto DayInfo = 0x80; // int32_t
		constexpr auto ModeGroupCodename = 0x84; // FString
		constexpr auto StartDay = 0x94; // FTimeData
		constexpr auto EndDay = 0x9c; // FTimeData
	}

	namespace n_UCombatFrontEnd_WeaponTuningPopup {
		constexpr auto CurrentTab = 0xd0; // int32_t
		constexpr auto CurrentSelectedSlot = 0xd4; // int32_t
		constexpr auto PendingOptionIdx = 0xd8; // int32_t
	}

	namespace n_USeqVar_RandomFloat {
		constexpr auto Min = 0xa4; // float
		constexpr auto Max = 0xa8; // float
	}

	namespace n_USaveGameSummary {
		constexpr auto BaseLevel = 0x60; // FName
		constexpr auto Description = 0x68; // FString
	}

	namespace n_UCombatStaticMeshManager {
		constexpr auto CBGRI = 0x60; // ObjectProperty
		constexpr auto SMRIList = 0x68; // TArray<ObjectProperty>
	}

	namespace n_ACombatPawn_FlyingVehicle {
		constexpr auto TransformDamageRate = 0x11f0; // float
		constexpr auto TransformNum = 0x11f4; // DamageEffectStep
		constexpr auto CurrentTransformNum = 0x11f5; // DamageEffectStep
		constexpr auto ExploEmitter = 0x11f8; // ObjectProperty
		constexpr auto DamageEffectPSC = 0x1200; // ComponentProperty
		constexpr auto DamageEffectPSCTemplate = 0x1208; // ObjectProperty
		constexpr auto DamageEffectSocketName = 0x1210; // FName
		constexpr auto ExplosionSound = 0x1218; // ObjectProperty
	}

	namespace n_UCombatFrontEnd_ClanList {
		constexpr auto PopupClass = 0xd0; // ObjectProperty
		constexpr auto CurrentClanInfo = 0xd8; // FClanInformation
		constexpr auto DataStoreMission = 0x11c; // ObjectProperty
		constexpr auto FixTextList = 0x124; // TArray<FFixTextInfo>
		constexpr auto SortMenuIDList = 0x134; // TArray<int32_t>
		constexpr auto ShowPageNum = 0x144; // int32_t
		constexpr auto TotalPage = 0x148; // int32_t
		constexpr auto ShowType = 0x14c; // int32_t
		constexpr auto MyClanID = 0x150; // int32_t
		constexpr auto SelectClanID = 0x154; // int32_t
		constexpr auto joinState = 0x158; // int32_t
		constexpr auto SearchClanName = 0x15c; // FString
	}

	namespace n_UCombatDataTableRefClanSeasonReward {
		constexpr auto Season = 0x6c; // int32_t
		constexpr auto GRADE = 0x70; // int32_t
		constexpr auto SectionStart = 0x74; // int32_t
		constexpr auto SectionEnd = 0x78; // int32_t
		constexpr auto ClanRewardTitle1 = 0x7c; // int32_t
		constexpr auto ClanRewardImg1 = 0x80; // int32_t
		constexpr auto ClanRewardDesc1 = 0x84; // int32_t
		constexpr auto ClanRewardTitle2 = 0x88; // int32_t
		constexpr auto ClanRewardImg2 = 0x8c; // int32_t
		constexpr auto ClanRewardDesc2 = 0x90; // int32_t
	}

	namespace n_UCombatGameEngine {
		constexpr auto OnlineSubsystemDedicatedSvrClass = 0xb98; // UOnlineSubsystem*
		constexpr auto TableDepot = 0xba0; // ObjectProperty
		constexpr auto ServerTableDepotClass = 0xba8; // UCombatGameTableDepot*
		constexpr auto ClientTableDepotClass = 0xbb0; // UCombatGameTableDepot*
		constexpr auto BGMPlayer = 0xbb8; // ObjectProperty
		constexpr auto SuppressList = 0xbc0; // TArray<FString>
		constexpr auto ChangedInGameSystemSetting = 0xbd0; // TArray<FSYSTEMSETTING_DATA>
		constexpr auto CacheInGameSystemSetting = 0xbe0; // TArray<FSYSTEMSETTING_DATA>
		constexpr auto IsFrontEndScene = 0xbf0; // uint32_t : 1
		constexpr auto WorldCubeList = 0xbf4; // TArray<FWorldCube>
		constexpr auto PendingLevelPackage = 0xc04; // ObjectProperty
		constexpr auto PendingLevelLinkerLoad = 0xc0c; // ObjectProperty
		constexpr auto PendingLevelWorld = 0xc14; // ObjectProperty
		constexpr auto DefaultMapLoadingDelay = 0xc1c; // float
		constexpr auto AE = 0xc20; // ObjectProperty
		constexpr auto UpdateEnterFrameTime = 0xc28; // int32_t
		constexpr auto GDIBrushCounter = 0xc2c; // int32_t
		constexpr auto GDIDCCounter = 0xc30; // int32_t
		constexpr auto GDIFontCounter = 0xc34; // int32_t
		constexpr auto ObjectPoolTimerDelta = 0xc38; // float
		constexpr auto Vivox = 0xc3c; // ObjectProperty
		constexpr auto VoiceChatUsers = 0xc44; // ObjectProperty
		constexpr auto BannerManager = 0xc4c; // ObjectProperty
	}

	namespace n_UGameFixedCamera {
		constexpr auto DefaultFOV = 0x6c; // float
	}

	namespace n_UMaterialExpressionCustomTexture {
		constexpr auto Texture = 0xb0; // ObjectProperty
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x74; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x84; // int32_t
		constexpr auto bRandomizeWithoutReplacement = 0x88; // uint32_t : 1
		constexpr auto HasBeenUsed = 0x8c; // TArray<char>
		constexpr auto NumRandomUsed = 0x9c; // int32_t
	}

	namespace n_UCombatMain_Base {
		constexpr auto Owner = 0xa0; // ObjectProperty
		constexpr auto bShowMouse = 0xa8; // uint32_t : 1
		constexpr auto bBackUpMouse = 0xa8; // uint32_t : 1
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x250; // FColor
		constexpr auto ArrowSize = 0x254; // float
		constexpr auto bTreatAsASprite = 0x258; // uint32_t : 1
	}

	namespace n_ALadderVolume {
		constexpr auto WallDir = 0x2d0; // FRotator
		constexpr auto LookDir = 0x2dc; // FVector
		constexpr auto ClimbDir = 0x2e8; // FVector
		constexpr auto LadderList = 0x2f4; // ObjectProperty
		constexpr auto bNoPhysicalLadder = 0x2fc; // uint32_t : 1
		constexpr auto bAutoPath = 0x2fc; // uint32_t : 1
		constexpr auto bAllowLadderStrafing = 0x2fc; // uint32_t : 1
		constexpr auto PendingClimber = 0x300; // ObjectProperty
		constexpr auto WallDirArrow = 0x308; // ComponentProperty
	}

	namespace n_UParticleModuleSizeMultiplyVelocity {
		constexpr auto VelocityMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // uint32_t : 1
		constexpr auto MultiplyY = 0x8c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x8c; // uint32_t : 1
		constexpr auto CapMaxSize = 0x90; // FVector
		constexpr auto CapMinSize = 0x9c; // FVector
	}

	namespace n_UCurveEdPresetCurve {
		constexpr auto CurveName = 0x60; // FString
		constexpr auto Points = 0x70; // TArray<FPresetGeneratedPoint>
	}

	namespace n_UUIDataProvider_OnlinePlayerDataBase {
		constexpr auto PlayerControllerId = 0x70; // int32_t
	}

	namespace n_UCombatDominationMovie {
		constexpr auto TestMultiLineTF = 0xadc; // ObjectProperty
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x60; // ObjectProperty
		constexpr auto OldRenderingOverrides = 0x68; // FRenderingPerformanceOverrides
	}

	namespace n_UCombatDataTableRefShortcut {
		constexpr auto ChannelCodeName = 0x6c; // FString
		constexpr auto MissionCodename = 0x7c; // FString
		constexpr auto ModeGroupCodename = 0x8c; // FString
		constexpr auto Disable = 0x9c; // uint32_t : 1
		constexpr auto Group = 0xa0; // int32_t
		constexpr auto ShortcutImageID = 0xa4; // int32_t
		constexpr auto ShortcutNameID = 0xa8; // int32_t
		constexpr auto Level = 0xac; // int32_t
		constexpr auto OpenWorld = 0xb0; // int32_t
	}

	namespace n_AMobileMenuGame {
		constexpr auto InitialSceneToDisplayClass = 0x4c0; // UMobileMenuScene*
	}

	namespace n_ATriggeredPath {
		constexpr auto bOpen = 0x33c; // uint32_t : 1
		constexpr auto MyTrigger = 0x340; // ObjectProperty
	}

	namespace n_UCombatDataTableType {
		constexpr auto EntryIndex = 0x60; // int32_t
		constexpr auto DataTable = 0x64; // ObjectProperty
	}

	namespace n_UCombatRewardDataBase {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto RelatedKillData = 0x68; // TArray<FRelatedKillDataInfo>
		constexpr auto RecordData = 0x78; // TMap<None, None>
		constexpr auto KillMarkHistory = 0xc0; // TArray<int32_t>
		constexpr auto PendingTableInfoList = 0xd0; // TArray<FTableInfoType>
		constexpr auto Map_WeaponID_DBID = 0xe0; // TMap<None, None>
		constexpr auto Map_WeaponID_InitialKillCount = 0x128; // TMap<None, None>
		constexpr auto Map_WeaponID_CurrentGameKillCount = 0x170; // TMap<None, None>
	}

	namespace n_UCombatAnimBlendPerBone_Multi {
		constexpr auto BlendInfoArr = 0x144; // TArray<FBlendInfo>
		constexpr auto Owner = 0x154; // ObjectProperty
		constexpr auto ActiveChildIndex = 0x15c; // int32_t
		constexpr auto LastActiveChild = 0x160; // int32_t
		constexpr auto SliderPosition = 0x164; // float
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x68; // ObjectProperty
		constexpr auto ScreenAlignment = 0x70; // EParticleScreenAlignment
		constexpr auto SortMode = 0x71; // EParticleSortMode
		constexpr auto ParticleBurstMethod = 0x72; // EParticleBurstMethod
		constexpr auto InterpolationMethod = 0x73; // EParticleSubUVInterpMethod
		constexpr auto ScalePivotType = 0x74; // EScalePivotType
		constexpr auto EmitterNormalsMode = 0x75; // EEmitterNormalsMode
		constexpr auto bAllowImageFlipping = 0x78; // uint32_t : 1
		constexpr auto bSquareImageFlipping = 0x78; // uint32_t : 1
		constexpr auto bUseLocalSpace = 0x78; // uint32_t : 1
		constexpr auto bKillOnDeactivate = 0x78; // uint32_t : 1
		constexpr auto bKillOnCompleted = 0x78; // uint32_t : 1
		constexpr auto bRequiresSorting = 0x78; // uint32_t : 1
		constexpr auto bUseLegacyEmitterTime = 0x78; // uint32_t : 1
		constexpr auto bEnableNearParticleCulling = 0x78; // uint32_t : 1
		constexpr auto bEnableFarParticleCulling = 0x78; // uint32_t : 1
		constexpr auto bEmitterDurationUseRange = 0x78; // uint32_t : 1
		constexpr auto bDurationRecalcEachLoop = 0x78; // uint32_t : 1
		constexpr auto bEmitterDelayUseRange = 0x78; // uint32_t : 1
		constexpr auto bDelayFirstLoopOnly = 0x78; // uint32_t : 1
		constexpr auto bScaleUV = 0x78; // uint32_t : 1
		constexpr auto bDirectUV = 0x78; // uint32_t : 1
		constexpr auto bOverrideSystemMacroUV = 0x78; // uint32_t : 1
		constexpr auto bUseMaxDrawCount = 0x78; // uint32_t : 1
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x78; // uint32_t : 1
		constexpr auto NearCullDistance = 0x7c; // float
		constexpr auto NearFadeDistance = 0x80; // float
		constexpr auto FarFadeDistance = 0x84; // float
		constexpr auto FarCullDistance = 0x88; // float
		constexpr auto EmitterDuration = 0x8c; // float
		constexpr auto EmitterDurationLow = 0x90; // float
		constexpr auto EmitterLoops = 0x94; // int32_t
		constexpr auto SpawnRate = 0x98; // FRawDistributionFloat
		constexpr auto BurstList = 0xbc; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xcc; // float
		constexpr auto EmitterDelayLow = 0xd0; // float
		constexpr auto SubImages_Horizontal = 0xd4; // int32_t
		constexpr auto SubImages_Vertical = 0xd8; // int32_t
		constexpr auto RandomImageTime = 0xdc; // float
		constexpr auto RandomImageChanges = 0xe0; // int32_t
		constexpr auto MacroUVPosition = 0xe4; // FVector
		constexpr auto MacroUVRadius = 0xf0; // float
		constexpr auto MaxDrawCount = 0xf4; // int32_t
		constexpr auto DownsampleThresholdScreenFraction = 0xf8; // float
		constexpr auto NormalsSphereCenter = 0xfc; // FVector
		constexpr auto NormalsCylinderDirection = 0x108; // FVector
	}

	namespace n_UCombatAnimBlendByMovement {
		constexpr auto Owner = 0x144; // ObjectProperty
	}

	namespace n_UAnimNodeBlendBySpeed {
		constexpr auto Speed = 0x120; // float
		constexpr auto LastChannel = 0x124; // int32_t
		constexpr auto BlendUpTime = 0x128; // float
		constexpr auto BlendDownTime = 0x12c; // float
		constexpr auto BlendDownPerc = 0x130; // float
		constexpr auto Constraints = 0x134; // TArray<float>
		constexpr auto bUseAcceleration = 0x144; // uint32_t : 1
		constexpr auto BlendUpDelay = 0x148; // float
		constexpr auto BlendDownDelay = 0x14c; // float
		constexpr auto BlendDelayRemaining = 0x150; // float
	}

	namespace n_UCombatVoiceChatUserList {
		constexpr auto UserMap = 0x60; // TMap<None, None>
		constexpr auto SelfData = 0xa8; // FPlayerVoiceChat
		constexpr auto myUID = 0xc8; // int32_t
		constexpr auto TalkingUserList = 0xcc; // TArray<FString>
	}

	namespace n_UActorFactoryFogVolumeConstantDensityInfo {
		constexpr auto SelectedMaterial = 0x9c; // ObjectProperty
		constexpr auto bNothingSelected = 0xa4; // uint32_t : 1
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UCombatDataTableRefClanAttendanceReward {
		constexpr auto Idx = 0x6c; // int32_t
		constexpr auto ClanLevel = 0x70; // int32_t
		constexpr auto AttendReward = 0x74; // FClanAttendRewardData [0x2]
	}

	namespace n_USceneCapture2DHitMaskComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto SkeletalMeshComp = 0xd8; // ComponentProperty
		constexpr auto MaterialIndex = 0xe0; // int32_t
		constexpr auto ForceLOD = 0xe4; // int32_t
		constexpr auto HitMaskCullDistance = 0xe8; // int32_t
		constexpr auto FadingStartTimeSinceHit = 0xec; // float
		constexpr auto FadingPercentage = 0xf0; // float
		constexpr auto FadingDurationTime = 0xf4; // float
		constexpr auto FadingIntervalTime = 0xf8; // float
	}

	namespace n_ACombatWeapon_Guided_Weapon {
		constexpr auto GuidedPSC = 0x1ee8; // ComponentProperty
		constexpr auto SimulatingEffect = 0x1ef0; // ObjectProperty
		constexpr auto TargetingEffect = 0x1ef8; // ObjectProperty
	}

	namespace n_UHttpRequestWindowsMcp {
		constexpr auto AppID = 0xa0; // FString
		constexpr auto AppSecret = 0xb0; // FString
	}

	namespace n_UCombatSEIMovie {
		constexpr auto OccupiedAreaContainer = 0xad0; // ObjectProperty
		constexpr auto OccupiedAreaCount = 0xad8; // int32_t
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x68; // FRawDistributionVector
	}

	namespace n_UCombatFrontEnd_QuickStart {
		constexpr auto QuickStart_MissionInfos = 0xd0; // TArray<FQuickStart_MissionInfo>
		constexpr auto QuickStart_ModeInfos = 0xe0; // TArray<FQuickStart_ModeInfo>
		constexpr auto QuickStart_MapInfos = 0xf0; // TArray<FQuickStart_MapInfo>
		constexpr auto QStartButtonInfo = 0x100; // FFrontEndButtonStruct [0x3]
		constexpr auto StatusLabels = 0x148; // int32_t [0x2]
		constexpr auto PlayersLabels = 0x150; // int32_t [0x2]
		constexpr auto DataStoreMission = 0x158; // ObjectProperty
		constexpr auto QSSetting = 0x160; // ObjectProperty
	}

	namespace n_UOnlineStatsWrite {
		constexpr auto StatMappings = 0x70; // TArray<FStringIdToStringMapping>
		constexpr auto Properties = 0x80; // TArray<FSettingsProperty>
		constexpr auto ViewIds = 0x90; // TArray<int32_t>
		constexpr auto ArbitratedViewIds = 0xa0; // TArray<int32_t>
		constexpr auto RatingId = 0xb0; // int32_t
		constexpr auto __OnStatsWriteComplete__Delegate = 0xb4; // DelegateProperty
	}

	namespace n_UCombatDataTableRefClanSection {
		constexpr auto GRADE = 0x6c; // char
		constexpr auto SectionStart = 0x70; // int32_t
		constexpr auto SectionEnd = 0x74; // int32_t
	}

	namespace n_UAnimNodeSequenceBlendByAim {
		constexpr auto Aim = 0x168; // FVector2D
		constexpr auto PreviousAim = 0x170; // FVector2D
		constexpr auto HorizontalRange = 0x178; // FVector2D
		constexpr auto VerticalRange = 0x180; // FVector2D
		constexpr auto AngleOffset = 0x188; // FVector2D
		constexpr auto AnimName_LU = 0x190; // FName
		constexpr auto AnimName_LC = 0x198; // FName
		constexpr auto AnimName_LD = 0x1a0; // FName
		constexpr auto AnimName_CU = 0x1a8; // FName
		constexpr auto AnimName_CC = 0x1b0; // FName
		constexpr auto AnimName_CD = 0x1b8; // FName
		constexpr auto AnimName_RU = 0x1c0; // FName
		constexpr auto AnimName_RC = 0x1c8; // FName
		constexpr auto AnimName_RD = 0x1d0; // FName
	}

	namespace n_UActorFactory {
		constexpr auto GameplayActorClass = 0x60; // AActor*
		constexpr auto MenuName = 0x68; // FString
		constexpr auto MenuPriority = 0x78; // int32_t
		constexpr auto AlternateMenuPriority = 0x7c; // int32_t
		constexpr auto NewActorClassName = 0x80; // FString
		constexpr auto NewActorClass = 0x90; // AActor*
		constexpr auto bPlaceable = 0x98; // uint32_t : 1
		constexpr auto bShowInEditorQuickMenu = 0x98; // uint32_t : 1
	}

	namespace n_USeqAct_IgnoreInput {
		constexpr auto bMoveInputIgnore = 0x108; // uint32_t : 1
		constexpr auto bLookInputIgnore = 0x108; // uint32_t : 1
		constexpr auto bWeaponInputIgnore = 0x108; // uint32_t : 1
	}

	namespace n_UMaterialExpressionParticleMacroUV {
		constexpr auto bUseViewSpace = 0xb0; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_RandomBoxShop {
		constexpr auto PkgItemListGFxObj = 0xe4; // ObjectProperty
		constexpr auto PkgItemInfoGFxObj = 0xec; // ObjectProperty
		constexpr auto CoinBarGFxObj = 0xf4; // ObjectProperty
		constexpr auto SelectedMainTab = 0xfc; // int32_t
		constexpr auto SelectedItemID = 0x100; // int32_t
		constexpr auto SelectedInfoTab = 0x104; // int32_t
		constexpr auto SelectedInfoTabType = 0x108; // int32_t
		constexpr auto SelectedPriceIndex = 0x10c; // int32_t
		constexpr auto MainCoinTabInfo = 0x110; // TArray<FShopTabStruct>
		constexpr auto bViewItemInfo = 0x120; // uint32_t : 1
		constexpr auto CurrentClothItemRefIndex = 0x124; // int32_t
		constexpr auto AutoSelectItemID = 0x128; // int32_t
		constexpr auto AutoSelectMainTab = 0x12c; // int32_t
		constexpr auto CheckList = 0x130; // TArray<int32_t>
		constexpr auto EndRemainTime = 0x140; // int32_t
	}

	namespace n_UCombatInstanceItem_Spray {
		constexpr auto SprayMaterial = 0x370; // ObjectProperty
		constexpr auto Width = 0x378; // float
		constexpr auto Height = 0x37c; // float
		constexpr auto bDeathSpray = 0x380; // uint32_t : 1
	}

	namespace n_UCombatInstanceItem_C4TimeReduceKitBase {
		constexpr auto ReducePlantTime = 0x370; // int32_t
		constexpr auto ReduceDefuseTime = 0x374; // int32_t
	}

	namespace n_UGripBTCooldown {
		constexpr auto MinCooldown = 0xbc; // float
		constexpr auto MaxCooldown = 0xc0; // float
	}

	namespace n_UCombatHUD_SystemCounter {
		constexpr auto UIDataStore_HUD = 0xbc; // ObjectProperty
		constexpr auto MyUserID = 0xc4; // int32_t
	}

	namespace n_ACombatSEIModeTeamInfo {
		constexpr auto bFirstOccupation = 0x2e0; // uint32_t : 1
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto SceneProxy = 0x88; // FPointer
		constexpr auto Strength = 0x90; // float
		constexpr auto Phase = 0x94; // float
		constexpr auto Frequency = 0x98; // float
		constexpr auto Speed = 0x9c; // float
	}

	namespace n_UGameWaveForms {
		constexpr auto CameraShakeMediumShort = 0x60; // ObjectProperty
		constexpr auto CameraShakeMediumLong = 0x68; // ObjectProperty
		constexpr auto CameraShakeBigShort = 0x70; // ObjectProperty
		constexpr auto CameraShakeBigLong = 0x78; // ObjectProperty
	}

	namespace n_UOnlinePlaylistManager {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Playlists = 0x68; // TArray<FPlaylist>
		constexpr auto PlaylistFileNames = 0x78; // TArray<FString>
		constexpr auto DatastoresToRefresh = 0x88; // TArray<FName>
		constexpr auto DownloadCount = 0x98; // int32_t
		constexpr auto SuccessfulCount = 0x9c; // int32_t
		constexpr auto VersionNumber = 0xa0; // int32_t
		constexpr auto PopulationData = 0xa4; // TArray<FPlaylistPopulation>
		constexpr auto WorldwideTotalPlayers = 0xb4; // int32_t
		constexpr auto RegionTotalPlayers = 0xb8; // int32_t
		constexpr auto TitleFileInterface = 0xbc; // TScriptInterface<Class>
		constexpr auto PopulationFileName = 0xcc; // FString
		constexpr auto NextPlaylistPopulationUpdateTime = 0xdc; // float
		constexpr auto PlaylistPopulationUpdateInterval = 0xe0; // float
		constexpr auto MinPlaylistIdToReport = 0xe4; // int32_t
		constexpr auto CurrentPlaylistId = 0xe8; // int32_t
		constexpr auto EventsInterfaceName = 0xec; // FName
		constexpr auto DataCenterId = 0xf4; // int32_t
		constexpr auto DataCenterFileName = 0xf8; // FString
		constexpr auto LastPlaylistDownloadTime = 0x108; // float
		constexpr auto PlaylistRefreshInterval = 0x10c; // float
		constexpr auto __OnReadPlaylistComplete__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnPlaylistPopulationDataUpdated__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x60; // int32_t
		constexpr auto Frames = 0x64; // TArray<FParticleSystemReplayFrame>
	}

	namespace n_UCombatAnimBlendByZoom {
		constexpr auto Owner = 0x144; // ObjectProperty
		constexpr auto BlendTimeToZoom = 0x14c; // float
		constexpr auto BlendTimeToNormal = 0x150; // float
		constexpr auto LastZoomState = 0x154; // EZoomState
	}

	namespace n_UTextureCube {
		constexpr auto SizeX = 0x11c; // int32_t
		constexpr auto SizeY = 0x120; // int32_t
		constexpr auto Format = 0x124; // EPixelFormat
		constexpr auto NumMips = 0x128; // int32_t
		constexpr auto bIsCubemapValid = 0x12c; // uint32_t : 1
		constexpr auto FacePosX = 0x130; // ObjectProperty
		constexpr auto FaceNegX = 0x138; // ObjectProperty
		constexpr auto FacePosY = 0x140; // ObjectProperty
		constexpr auto FaceNegY = 0x148; // ObjectProperty
		constexpr auto FacePosZ = 0x150; // ObjectProperty
		constexpr auto FaceNegZ = 0x158; // ObjectProperty
	}

	namespace n_USeqAct_CombatTeamCert {
		constexpr auto TeamIndex = 0x108; // Team
		constexpr auto IsAI = 0x10c; // uint32_t : 1
		constexpr auto IgnoreTeam = 0x10c; // uint32_t : 1
		constexpr auto MaxCount = 0x110; // int32_t
		constexpr auto CurrentCount = 0x114; // int32_t
	}

	namespace n_ADecalManager {
		constexpr auto DecalTemplate = 0x244; // ComponentProperty
		constexpr auto PoolDecals = 0x24c; // TArray<ComponentProperty>
		constexpr auto MaxActiveDecals = 0x25c; // int32_t
		constexpr auto DecalLifeSpan = 0x260; // float
		constexpr auto DecalDepthBias = 0x264; // float
		constexpr auto DecalBlendRange = 0x268; // FVector2D
		constexpr auto ActiveDecals = 0x270; // TArray<FActiveDecalInfo>
	}

	namespace n_AProcBuilding {
		constexpr auto BuildingMeshCompInfos = 0x280; // TArray<FPBMeshCompInfo>
		constexpr auto BuildingFracMeshCompInfos = 0x290; // TArray<FPBFracMeshCompInfo>
		constexpr auto SimpleMeshComp = 0x2a0; // ComponentProperty
		constexpr auto bGenerateRoofMesh = 0x2a8; // uint32_t : 1
		constexpr auto bGenerateFloorMesh = 0x2a8; // uint32_t : 1
		constexpr auto bApplyRulesToRoof = 0x2a8; // uint32_t : 1
		constexpr auto bApplyRulesToFloor = 0x2a8; // uint32_t : 1
		constexpr auto bSplitWallsAtRoofLevels = 0x2a8; // uint32_t : 1
		constexpr auto bSplitWallsAtWallEdges = 0x2a8; // uint32_t : 1
		constexpr auto bQuickEdited = 0x2a8; // uint32_t : 1
		constexpr auto bBuildingBrushCollision = 0x2a8; // uint32_t : 1
		constexpr auto bDebugDrawEdgeInfo = 0x2a8; // uint32_t : 1
		constexpr auto bDebugDrawScopes = 0x2a8; // uint32_t : 1
		constexpr auto LODMeshComps = 0x2ac; // TArray<ComponentProperty>
		constexpr auto NumMeshedTopLevelScopes = 0x2bc; // int32_t
		constexpr auto MaxFacadeZ = 0x2c0; // float
		constexpr auto MinFacadeZ = 0x2c4; // float
		constexpr auto OverlappingBuildings = 0x2c8; // TArray<ObjectProperty>
		constexpr auto SimpleMeshMassiveLODDistance = 0x2d8; // float
		constexpr auto RenderToTexturePullBackAmount = 0x2dc; // float
		constexpr auto RoofLightmapRes = 0x2e0; // int32_t
		constexpr auto NonRectWallLightmapRes = 0x2e4; // int32_t
		constexpr auto ParamSwatchName = 0x2e8; // FName
		constexpr auto BuildingMaterialParams = 0x2f0; // TArray<FPBMaterialParam>
		constexpr auto LowLODPersistentActor = 0x300; // ObjectProperty
		constexpr auto CurrentSimpleMeshComp = 0x308; // ComponentProperty
		constexpr auto CurrentSimpleMeshActor = 0x310; // ObjectProperty
		constexpr auto BuildingInstanceVersion = 0x318; // int32_t
	}

	namespace n_ASceneCaptureCubeMapActor {
		constexpr auto StaticMesh = 0x24c; // ComponentProperty
		constexpr auto CubeMaterialInst = 0x254; // ObjectProperty
	}

	namespace n_USpeedTree {
		constexpr auto bLegacySpeedTree = 0x60; // uint32_t : 1
		constexpr auto SRH = 0x64; // FPointer
		constexpr auto LeafStaticShadowOpacity = 0x6c; // float
		constexpr auto Branch1Material = 0x70; // ObjectProperty
		constexpr auto Branch2Material = 0x78; // ObjectProperty
		constexpr auto FrondMaterial = 0x80; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x88; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x90; // ObjectProperty
		constexpr auto BillboardMaterial = 0x98; // ObjectProperty
		constexpr auto WindStrength = 0xa0; // float
		constexpr auto WindDirection = 0xa4; // FVector
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0xb8; // uint32_t : 1
	}

	namespace n_ACombatWeapon_Plant {
		constexpr auto bMartyrdom = 0x1ee8; // uint32_t : 1
	}

	namespace n_AGroupActorBase {
		constexpr auto bLocked = 0x244; // uint32_t : 1
		constexpr auto bResetProxy = 0x244; // uint32_t : 1
		constexpr auto bRemergeProxy = 0x244; // uint32_t : 1
	}

	namespace n_UCombatDecal {
		constexpr auto MITV_Decal = 0x3d0; // ObjectProperty
		constexpr auto MinExplosionThickness = 0x3d8; // float
	}

	namespace n_ACombatPendingPC {
		constexpr auto bUpdateWorldCam = 0x740; // uint32_t : 1
	}

	namespace n_USeqAct_WaitForLevelsVisible {
		constexpr auto LevelNames = 0x120; // TArray<FName>
		constexpr auto bShouldBlockOnLoad = 0x130; // uint32_t : 1
	}

	namespace n_UOnlinePlayerStorage {
		constexpr auto VersionNumber = 0x60; // int32_t
		constexpr auto VersionSettingsId = 0x64; // int32_t
		constexpr auto SaveCountSettingId = 0x68; // int32_t
		constexpr auto ProfileSettings = 0x6c; // TArray<FOnlineProfileSetting>
		constexpr auto TempProfileSettings = 0x7c; // TArray<FOnlineProfileSetting>
		constexpr auto ProfileMappings = 0x8c; // TArray<FSettingsPropertyPropertyMetaData>
		constexpr auto AsyncState = 0x9c; // EOnlinePlayerStorageAsyncState
		constexpr auto DeviceID = 0xa0; // int32_t
	}

	namespace n_ACombatDroppedEvolvePoint_Supply {
		constexpr auto PointMin = 0x350; // int32_t
		constexpr auto PointMax = 0x354; // int32_t
		constexpr auto SupplyGrade = 0x358; // int32_t
	}

	namespace n_ADynamicAnchor {
		constexpr auto CurrentUser = 0x33c; // ObjectProperty
	}

	namespace n_ASpeedTreeActor {
		constexpr auto SpeedTreeComponent = 0x244; // ComponentProperty
	}

	namespace n_UCCSBTCombatReloadWeapon {
		constexpr auto bc = 0xcc; // ObjectProperty
	}

	namespace n_UNavMeshGoal_ClosestActorInList {
		constexpr auto GoalList = 0x7c; // TArray<FBiasedGoalActor>
		constexpr auto PolyToGoalActorMap = 0x8c; // FMultiMap_Mirror
		constexpr auto CachedAnchorPoly = 0xd4; // FPointer
	}

	namespace n_UCombatHUD_NoticeHotKey {
		constexpr auto HotKeyFontColor = 0xc0; // FString
		constexpr auto ItemFontColor = 0xd0; // FString
		constexpr auto PrevHotKey = 0xe0; // FString
		constexpr auto PrevActionName = 0xf0; // FString
	}

	namespace n_ACombatIngameVote_Base {
		constexpr auto VoteOKUserList = 0x244; // TArray<int32_t>
		constexpr auto VoteNoUserList = 0x254; // TArray<int32_t>
		constexpr auto VoteWaitUserList = 0x264; // TArray<int32_t>
		constexpr auto manager = 0x274; // ObjectProperty
		constexpr auto TargetUID = 0x27c; // int32_t
		constexpr auto VoteOKCount = 0x280; // int32_t
		constexpr auto VoteNoCount = 0x284; // int32_t
		constexpr auto VoteWaitCount = 0x288; // int32_t
		constexpr auto senderName = 0x28c; // FString
		constexpr auto TargetName = 0x29c; // FString
	}

	namespace n_USeqAct_SetInitialCover {
		constexpr auto Actors = 0x108; // TArray<ObjectProperty>
	}

	namespace n_UCombatDataTableRefFormula {
		constexpr auto CodeName = 0x6c; // FString
		constexpr auto Params = 0x7c; // FString [0xa]
	}

	namespace n_UCombatFrontEnd_Login {
		constexpr auto IDLabelID = 0xd0; // int32_t
		constexpr auto PWLabelID = 0xd4; // int32_t
		constexpr auto CheckBoxLabelID = 0xd8; // int32_t
		constexpr auto OKBtnLabelID = 0xdc; // int32_t
		constexpr auto CancelBtnLabelID = 0xe0; // int32_t
		constexpr auto AccountBtnLabelID = 0xe4; // int32_t
		constexpr auto OptionBtnLabelID = 0xe8; // int32_t
		constexpr auto ExitBtnLabelID = 0xec; // int32_t
		constexpr auto bNeedLocalize = 0xf0; // uint32_t : 1
		constexpr auto bSaveUserInfo = 0xf0; // uint32_t : 1
		constexpr auto loginID = 0xf4; // FString
		constexpr auto userPW = 0x104; // FString
		constexpr auto FailedLoginCount = 0x114; // int32_t
		constexpr auto StatusTF = 0x118; // ObjectProperty
	}

	namespace n_USkelControlBase {
		constexpr auto ControlName = 0x68; // FName
		constexpr auto ControlStrength = 0x70; // float
		constexpr auto BlendInTime = 0x74; // float
		constexpr auto BlendOutTime = 0x78; // float
		constexpr auto BlendType = 0x7c; // AlphaBlendType
		constexpr auto bPostPhysicsController = 0x80; // uint32_t : 1
		constexpr auto bSetStrengthFromAnimNode = 0x80; // uint32_t : 1
		constexpr auto bInitializedCachedNodeList = 0x80; // uint32_t : 1
		constexpr auto bControlledByAnimMetada = 0x80; // uint32_t : 1
		constexpr auto bInvertMetadataWeight = 0x80; // uint32_t : 1
		constexpr auto bPropagateSetActive = 0x80; // uint32_t : 1
		constexpr auto bIgnoreWhenNotRendered = 0x80; // uint32_t : 1
		constexpr auto bShouldTickInScript = 0x80; // uint32_t : 1
		constexpr auto bShouldTickOwner = 0x80; // uint32_t : 1
		constexpr auto bEnableEaseInOut = 0x80; // uint32_t : 1
		constexpr auto StrengthTarget = 0x84; // float
		constexpr auto BlendTimeToGo = 0x88; // float
		constexpr auto StrengthAnimNodeNameList = 0x8c; // TArray<FName>
		constexpr auto CachedNodeList = 0x9c; // TArray<ObjectProperty>
		constexpr auto AnimMetadataWeight = 0xac; // float
		constexpr auto AnimMetaDataUpdateTag = 0xb0; // int32_t
		constexpr auto BoneScale = 0xb4; // float
		constexpr auto ControlTickTag = 0xb8; // int32_t
		constexpr auto IgnoreAtOrAboveLOD = 0xbc; // int32_t
		constexpr auto NextControl = 0xc0; // ObjectProperty
		constexpr auto ControlPosX = 0xc8; // int32_t
		constexpr auto ControlPosY = 0xcc; // int32_t
	}

	namespace n_UCombatCommon_Command {
		constexpr auto CommandList = 0xac; // FString [0xe]
	}

	namespace n_UCCSBTHealth {
		constexpr auto Operator = 0xd4; // BTConditionOperator
		constexpr auto Threshold = 0xd8; // int32_t
	}

	namespace n_UGripBTFloatCondition {
		constexpr auto Operator = 0xbc; // BTConditionOperator
		constexpr auto Threshold = 0xc0; // float
		constexpr auto Value = 0xc4; // float
	}

	namespace n_ULocalMessage {
		constexpr auto bIsSpecial = 0x60; // uint32_t : 1
		constexpr auto bIsUnique = 0x60; // uint32_t : 1
		constexpr auto bIsPartiallyUnique = 0x60; // uint32_t : 1
		constexpr auto bIsConsoleMessage = 0x60; // uint32_t : 1
		constexpr auto bBeep = 0x60; // uint32_t : 1
		constexpr auto bCountInstances = 0x60; // uint32_t : 1
		constexpr auto Lifetime = 0x64; // float
		constexpr auto DrawColor = 0x68; // FColor
		constexpr auto PosY = 0x6c; // float
		constexpr auto FontSize = 0x70; // int32_t
	}

	namespace n_ACombatBotController {
		constexpr auto VfTable_Iinterface_SplinePath = 0x534; // FPointer
		constexpr auto bCanTick = 0x53c; // uint32_t : 1
		constexpr auto bHasCaller = 0x53c; // uint32_t : 1
		constexpr auto FixedRotation = 0x53c; // uint32_t : 1
		constexpr auto bWriteDamagedActorList = 0x53c; // uint32_t : 1
		constexpr auto AISpreadMin = 0x540; // int32_t
		constexpr auto AISpreadRandom = 0x544; // int32_t
		constexpr auto DamageMultiflyer = 0x548; // float
		constexpr auto CombatPawn = 0x54c; // ObjectProperty
		constexpr auto CallerController = 0x554; // ObjectProperty
		constexpr auto StartSplineActor = 0x55c; // ObjectProperty
		constexpr auto GoalSplineActor = 0x564; // ObjectProperty
		constexpr auto SplineRoute = 0x56c; // TArray<ObjectProperty>
		constexpr auto PassedSplineLength = 0x57c; // float
		constexpr auto SplineCenter = 0x580; // FVector
		constexpr auto SplinePositionOffset = 0x58c; // FVector
		constexpr auto SplineAIType = 0x598; // ESplineActorType
		constexpr auto AIActionList = 0x59c; // TArray<ObjectProperty>
		constexpr auto AIManager = 0x5ac; // ObjectProperty
		constexpr auto OverrideShotPerFireBurst = 0x5b4; // int32_t
		constexpr auto DamagedActorList = 0x5b8; // TArray<FSDamagedActorInfo>
		constexpr auto CCSBB = 0x5c8; // FPointer
		constexpr auto CurAIBeacon = 0x5d0; // ObjectProperty
		constexpr auto AIBeaconVisitInfoArray = 0x5d8; // TArray<FSAIBeaconVisitInfo>
	}

	namespace n_UTerrainMaterial {
		constexpr auto LocalToMapping = 0x60; // FMatrix
		constexpr auto MappingType = 0xa0; // ETerrainMappingType
		constexpr auto MappingScale = 0xa4; // float
		constexpr auto MappingRotation = 0xa8; // float
		constexpr auto MappingPanU = 0xac; // float
		constexpr auto MappingPanV = 0xb0; // float
		constexpr auto Material = 0xb4; // ObjectProperty
		constexpr auto DisplacementMap = 0xbc; // ObjectProperty
		constexpr auto DisplacementScale = 0xc4; // float
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0xd0; // FLinearColor
	}

	namespace n_UCombatDataTableRefBGM {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Country = 0x80; // FString
		constexpr auto SceneIndex = 0x90; // char
		constexpr auto StartMonth = 0x91; // char
		constexpr auto StartDate = 0x92; // char
		constexpr auto EndMonth = 0x93; // char
		constexpr auto EndDate = 0x94; // char
		constexpr auto BGMPath = 0x98; // FString
	}

	namespace n_UCodecMovieFallback {
		constexpr auto CurrentTime = 0x64; // float
	}

	namespace n_UCombatDataTableRefSteamItem {
		constexpr auto ITEM_CODE_NAME = 0x6c; // FString
	}

	namespace n_UCCSBTActionWhileMoving {
		constexpr auto DelayBetweenBursts = 0xc4; // float
		constexpr auto Target = 0xc8; // EMoveTargetType
		constexpr auto Action = 0xc9; // EUpperBodyActionType
	}

	namespace n_UCombatFrontEnd_Storage {
		constexpr auto LabelList = 0xd0; // TArray<FLabelInfo>
		constexpr auto ButtonList = 0xe0; // FButtonInfo [0x9]
		constexpr auto MoneyList = 0x224; // FMoneyInfo [0x6]
		constexpr auto MailTran = 0x2e4; // ObjectProperty
		constexpr auto TabType = 0x2ec; // int32_t
		constexpr auto ShowPageNum = 0x2f0; // int32_t
		constexpr auto TotalPage = 0x2f4; // int32_t
		constexpr auto selectID = 0x2f8; // int32_t
		constexpr auto MaxCheckCount = 0x2fc; // int32_t
		constexpr auto bAllCheck = 0x300; // uint32_t : 1
		constexpr auto bShowReceiveFailedDialog = 0x300; // uint32_t : 1
		constexpr auto CheckList = 0x304; // TArray<int32_t>
		constexpr auto ReceiveIDList = 0x314; // TArray<int32_t>
		constexpr auto ReadIDList = 0x324; // TArray<int32_t>
		constexpr auto NextScene = 0x334; // eFrontEndScene
	}

	namespace n_UOnlineSubsystemCommonImpl {
		constexpr auto VoiceEngine = 0x1bc; // FPointer
		constexpr auto MaxLocalTalkers = 0x1c4; // int32_t
		constexpr auto MaxRemoteTalkers = 0x1c8; // int32_t
		constexpr auto bIsUsingSpeechRecognition = 0x1cc; // uint32_t : 1
		constexpr auto GameInterfaceImpl = 0x1d0; // ObjectProperty
		constexpr auto AuthInterfaceImpl = 0x1d8; // ObjectProperty
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x6c; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x90; // uint32_t : 1
	}

	namespace n_UMorphNodeWeightByBoneAngle {
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BaseBoneName = 0x8c; // FName
		constexpr auto BaseBoneAxis = 0x94; // EAxis
		constexpr auto AngleBoneAxis = 0x95; // EAxis
		constexpr auto bInvertBaseBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bInvertAngleBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0x98; // uint32_t : 1
		constexpr auto AngleBoneName = 0x9c; // FName
		constexpr auto MaterialSlotId = 0xa4; // int32_t
		constexpr auto ScalarParameterName = 0xa8; // FName
		constexpr auto MaterialInstanceConstant = 0xb0; // ObjectProperty
		constexpr auto WeightArray = 0xb8; // TArray<FBoneAngleMorph>
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x74; // float
		constexpr auto LoopEnd = 0x78; // float
		constexpr auto DurationAfterLoop = 0x7c; // float
		constexpr auto LoopCount = 0x80; // int32_t
		constexpr auto bLoopIndefinitely = 0x84; // uint32_t : 1
		constexpr auto bLoop = 0x84; // uint32_t : 1
		constexpr auto VolumeInterpCurve = 0x88; // ComponentProperty
		constexpr auto PitchInterpCurve = 0x90; // ComponentProperty
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0xb0; // uint32_t : 1
	}

	namespace n_UCombatAnimNodeSeqHitDirection {
		constexpr auto DefaultAnim = 0x16c; // FName
		constexpr auto LeftAnim = 0x174; // FName
		constexpr auto RightAnim = 0x17c; // FName
		constexpr auto FrontAnim = 0x184; // FName
		constexpr auto BackAnim = 0x18c; // FName
		constexpr auto FrontLeftAnim = 0x194; // FName
		constexpr auto FrontRightAnim = 0x19c; // FName
		constexpr auto BackLeftAnim = 0x1a4; // FName
		constexpr auto BackRightAnim = 0x1ac; // FName
		constexpr auto RandomFactor = 0x1b4; // char
		constexpr auto DirMode = 0x1b5; // EDirectionalSeqMode
		constexpr auto LastDirIdx = 0x1b6; // char
		constexpr auto FrontHitThreshold = 0x1b8; // float
		constexpr auto DirAngle = 0x1bc; // float
		constexpr auto SliderPosition = 0x1c0; // float
		constexpr auto OwnerPawn = 0x1c4; // ObjectProperty
	}

	namespace n_UCombatDialog {
		constexpr auto OKBtn = 0xac; // ObjectProperty
		constexpr auto CancelBtn = 0xb4; // ObjectProperty
		constexpr auto OKBtnDelegate = 0xbc; // DelegateProperty
		constexpr auto CancelBtnDelegate = 0xcc; // DelegateProperty
	}

	namespace n_USeqAct_SetFloat {
		constexpr auto Target = 0x108; // float
		constexpr auto Value = 0x10c; // TArray<float>
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceData = 0x2f4; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto PerInstanceSMData = 0x304; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumPendingLightmaps = 0x314; // int32_t
		constexpr auto ComponentJoinKey = 0x318; // int32_t
		constexpr auto CachedMappings = 0x31c; // TArray<FInstancedStaticMeshMappingInfo>
		constexpr auto InstancingRandomSeed = 0x32c; // int32_t
		constexpr auto InstanceStartCullDistance = 0x330; // int32_t
		constexpr auto InstanceEndCullDistance = 0x334; // int32_t
		constexpr auto bDontResolveInstancedLightmaps = 0x338; // uint32_t : 1
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x250; // int32_t
		constexpr auto SectionBaseY = 0x254; // int32_t
		constexpr auto ComponentSizeQuads = 0x258; // int32_t
		constexpr auto SubsectionSizeQuads = 0x25c; // int32_t
		constexpr auto NumSubsections = 0x260; // int32_t
		constexpr auto OverrideMaterial = 0x264; // ObjectProperty
		constexpr auto MaterialInstance = 0x26c; // ObjectProperty
		constexpr auto WeightmapLayerAllocations = 0x274; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x284; // TArray<ObjectProperty>
		constexpr auto WeightmapScaleBias = 0x2a0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x2b0; // float
		constexpr auto HeightmapScaleBias = 0x2c0; // FVector4
		constexpr auto HeightmapTexture = 0x2d0; // ObjectProperty
		constexpr auto CachedBoxSphereBounds = 0x2d8; // FBoxSphereBounds
		constexpr auto CachedLocalBox = 0x2f4; // FBox
		constexpr auto ShadowMaps = 0x310; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x320; // TArray<FGuid>
		constexpr auto LightMap = 0x330; // FLightMapRef
		constexpr auto EditToolRenderData = 0x338; // FPointer
		constexpr auto CollisionMipLevel = 0x340; // int32_t
		constexpr auto PlatformData = 0x344; // FPointer
		constexpr auto PlatformDataSize = 0x34c; // int32_t
		constexpr auto bNeedPostUndo = 0x350; // uint32_t : 1
		constexpr auto ForcedLOD = 0x354; // int32_t
		constexpr auto NeighborLOD = 0x358; // char [0x8]
		constexpr auto NeighborLODBias = 0x360; // char [0x8]
		constexpr auto LODBias = 0x368; // int32_t
	}

	namespace n_UAnimNotify_PawnMaterialParam {
		constexpr auto ScalarParameterInterpArray = 0x60; // TArray<FScalarParameterInterpStruct>
	}

	namespace n_APrefabInstance {
		constexpr auto TemplatePrefab = 0x244; // ObjectProperty
		constexpr auto TemplateVersion = 0x24c; // int32_t
		constexpr auto ArchetypeToInstanceMap = 0x250; // TMap<None, None>
		constexpr auto SequenceInstance = 0x298; // ObjectProperty
		constexpr auto PI_PackageVersion = 0x2a0; // int32_t
		constexpr auto PI_LicenseePackageVersion = 0x2a4; // int32_t
		constexpr auto PI_Bytes = 0x2a8; // TArray<char>
		constexpr auto PI_CompleteObjects = 0x2b8; // TArray<ObjectProperty>
		constexpr auto PI_ReferencedObjects = 0x2c8; // TArray<ObjectProperty>
		constexpr auto PI_SavedNames = 0x2d8; // TArray<FString>
		constexpr auto PI_ObjectMap = 0x2e8; // TMap<None, None>
	}

	namespace n_USeqAct_AddInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_USeqAct_SetInt {
		constexpr auto Target = 0x108; // int32_t
		constexpr auto Value = 0x10c; // TArray<int32_t>
	}

	namespace n_UNavMeshGoalFilter_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x6c; // FVector
	}

	namespace n_AKActorFromStatic {
		constexpr auto MyStaticMeshActor = 0x378; // ObjectProperty
		constexpr auto MaxImpulseSpeed = 0x380; // float
	}

	namespace n_UCombatHUD_KickUserSelect {
		constexpr auto BlockAndReportLabelSettingInfos = 0xc0; // TArray<FBlockAndReportLabelSettingInfo>
		constexpr auto ReportPlayerID = 0xd0; // int32_t
	}

	namespace n_UParticleModuleTrailSpawn {
		constexpr auto SpawnDistanceMap = 0x68; // ComponentProperty
		constexpr auto MinSpawnVelocity = 0x70; // float
	}

	namespace n_UMcpUserManagerBase {
		constexpr auto McpUserManagerClassName = 0x78; // FString
		constexpr auto __OnRegisterUserComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryUsersComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteUserComplete__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UHttpResponseWindows {
		constexpr auto Response = 0x60; // FPointer
		constexpr auto Payload = 0x68; // TArray<char>
	}

	namespace n_UCombatLocaizedTextData {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto StringVal = 0x70; // FString
	}

	namespace n_ACombatWeapon_Grenade {
		constexpr auto bMartyrdom = 0x1ec8; // uint32_t : 1
		constexpr auto IsAlreadyMakeProjectile = 0x1ec8; // uint32_t : 1
	}

	namespace n_UPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x6c; // float
		constexpr auto bSoft = 0x70; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x74; // float
	}

	namespace n_USeqAct_SetState {
		constexpr auto StateName = 0x108; // FString
	}

	namespace n_UPathConstraint {
		constexpr auto CacheIdx = 0x60; // int32_t
		constexpr auto NextConstraint = 0x64; // ObjectProperty
	}

	namespace n_UFogVolumeConstantDensityComponent {
		constexpr auto Density = 0xd4; // float
	}

	namespace n_AAISpawnPoint {
		constexpr auto TeamIndex = 0x33c; // EAITeamInfo
		constexpr auto TeamColor = 0x340; // FColor [0x3]
	}

	namespace n_UCCSBTSetHealth {
		constexpr auto Health = 0xd4; // int32_t
	}

	namespace n_UAnimNodeBlendByProperty {
		constexpr auto PropertyName = 0x120; // FName
		constexpr auto bUseOwnersBase = 0x128; // uint32_t : 1
		constexpr auto bForceUpdate = 0x128; // uint32_t : 1
		constexpr auto bUseSpecificBlendTimes = 0x128; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x128; // uint32_t : 1
		constexpr auto CachedPropertyName = 0x12c; // FName
		constexpr auto CachedFloatProperty = 0x134; // FPointer
		constexpr auto CachedBoolProperty = 0x13c; // FPointer
		constexpr auto CachedByteProperty = 0x144; // FPointer
		constexpr auto CachedOwner = 0x14c; // ObjectProperty
		constexpr auto BlendTime = 0x154; // float
		constexpr auto FloatPropMin = 0x158; // float
		constexpr auto FloatPropMax = 0x15c; // float
		constexpr auto BlendToChild1Time = 0x160; // float
		constexpr auto BlendToChild2Time = 0x164; // float
	}

	namespace n_UCCSAFOrientToward {
		constexpr auto Target = 0x64; // FVector
		constexpr auto Alertness = 0x70; // ECCSAlertnessState
	}

	namespace n_UCombatFrontEnd_BuyItem {
		constexpr auto RefItem = 0xd0; // ObjectProperty
		constexpr auto refShopItem = 0xd8; // ObjectProperty
		constexpr auto RefItemDetailinfo = 0xe0; // ObjectProperty
		constexpr auto PriceType = 0xe8; // int32_t
		constexpr auto priceID = 0xec; // int32_t
		constexpr auto BuyItemSlotIndex = 0xf0; // int32_t
		constexpr auto SelectPresetTab = 0xf4; // char
		constexpr auto RecvType = 0xf5; // char
		constexpr auto PresetLabelIDList = 0xf8; // int32_t [0x3]
		constexpr auto AddOnInfoList = 0x104; // FAddoninfo [0xa]
		constexpr auto AbilityInfoList = 0x17c; // Fabilityinfo [0x7]
	}

	namespace n_UPrimitiveComponentFactory {
		constexpr auto CollideActors = 0x60; // uint32_t : 1
		constexpr auto BlockActors = 0x60; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x60; // uint32_t : 1
		constexpr auto HiddenGame = 0x60; // uint32_t : 1
		constexpr auto HiddenEditor = 0x60; // uint32_t : 1
		constexpr auto CastShadow = 0x60; // uint32_t : 1
	}

	namespace n_UMaterialExpressionPixelDepth {
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
	}

	namespace n_USeqAct_FinishSequence {
		constexpr auto OutputLabel = 0x108; // FString
	}

	namespace n_UCombatChampionshipCameraManager {
		constexpr auto filePath = 0x60; // FString
		constexpr auto Section_MapName = 0x70; // FString
		constexpr auto Key_SpotName = 0x80; // TArray<FString>
	}

	namespace n_UCombatFrontEnd_CharacterInfo_BattleTab {
		constexpr auto BattleTabList = 0x68; // TArray<int32_t>
	}

	namespace n_UCCSVisualizationComponent {
		constexpr auto SceneProxy = 0x250; // FPointer
	}

	namespace n_UCombatDataTableRefModeGuide {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto Type = 0x80; // int32_t
		constexpr auto ModeNameText = 0x84; // int32_t
		constexpr auto ModeHighlightText = 0x88; // int32_t
		constexpr auto AttackTitleText = 0x8c; // int32_t
		constexpr auto DefenseTitleText = 0x90; // int32_t
		constexpr auto AttackDetailText = 0x94; // int32_t
		constexpr auto DefenseDetailText = 0x98; // int32_t
		constexpr auto ImageName = 0x9c; // FString
		constexpr auto ImageID = 0xac; // int32_t
		constexpr auto WeaponText = 0xb0; // int32_t [0x3]
		constexpr auto ModeCodeName = 0xbc; // FString
	}

	namespace n_ACombatPracticeGame {
		constexpr auto MaxCheatPawns = 0x788; // char
		constexpr auto RespawnTime = 0x78c; // float
		constexpr auto CheatPawnInfoList = 0x790; // TArray<FCheatPawnInfo>
		constexpr auto SpawnKeyCount = 0x7a0; // int32_t
		constexpr auto bProjectileCamera = 0x7a4; // uint32_t : 1
		constexpr auto bIsOnlyClient = 0x7a4; // uint32_t : 1
		constexpr auto bTogglePracticeGameTimer = 0x7a4; // uint32_t : 1
		constexpr auto HotKeyUIs = 0x7a8; // TArray<FSPracticeGameHotKeyInfo>
	}

	namespace n_ADroppedPickup {
		constexpr auto Inventory = 0x244; // ObjectProperty
		constexpr auto InventoryClass = 0x24c; // AInventory*
		constexpr auto PickupCache = 0x254; // ObjectProperty
		constexpr auto bFadeOut = 0x25c; // uint32_t : 1
		constexpr auto bCheckObstaclesOnTouch = 0x25c; // uint32_t : 1
	}

	namespace n_UCombatFrontEnd_ExtendPeriodItemPopup {
		constexpr auto TargetItemInfo = 0xd0; // FInvenItemInfo
		constexpr auto CurrentSelectType = 0x108; // int32_t
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x250; // ObjectProperty
		constexpr auto bForceUnlitParticle = 0x258; // uint32_t : 1
		constexpr auto bAutoActivate = 0x258; // uint32_t : 1
		constexpr auto bWasCompleted = 0x258; // uint32_t : 1
		constexpr auto bSuppressSpawning = 0x258; // uint32_t : 1
		constexpr auto bWasDeactivated = 0x258; // uint32_t : 1
		constexpr auto bResetOnDetach = 0x258; // uint32_t : 1
		constexpr auto bUpdateOnDedicatedServer = 0x258; // uint32_t : 1
		constexpr auto bJustAttached = 0x258; // uint32_t : 1
		constexpr auto bIsActive = 0x258; // uint32_t : 1
		constexpr auto bHasBeenActivated = 0x258; // uint32_t : 1
		constexpr auto bWarmingUp = 0x258; // uint32_t : 1
		constexpr auto bIsCachedInPool = 0x258; // uint32_t : 1
		constexpr auto bOverrideLODMethod = 0x258; // uint32_t : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x258; // uint32_t : 1
		constexpr auto bSkipBoundsUpdate = 0x258; // uint32_t : 1
		constexpr auto bUpdateComponentInTick = 0x258; // uint32_t : 1
		constexpr auto bDeferredBeamUpdate = 0x258; // uint32_t : 1
		constexpr auto bForcedInActive = 0x258; // uint32_t : 1
		constexpr auto bIsWarmingUp = 0x258; // uint32_t : 1
		constexpr auto bIsViewRelevanceDirty = 0x258; // uint32_t : 1
		constexpr auto bRecacheViewRelevance = 0x258; // uint32_t : 1
		constexpr auto bLODUpdatePending = 0x258; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0x258; // uint32_t : 1
		constexpr auto LightEnvironmentClass = 0x25c; // UParticleLightEnvironmentComponent*
		constexpr auto LightEnvironmentSharedInstigator = 0x264; // ObjectProperty
		constexpr auto MaxLightEnvironmentPooledReuses = 0x26c; // int32_t
		constexpr auto EmitterInstances = 0x270; // TArray<FPointer>
		constexpr auto SMComponents = 0x280; // TArray<ComponentProperty>
		constexpr auto SMMaterialInterfaces = 0x290; // TArray<ObjectProperty>
		constexpr auto SkelMeshComponents = 0x2a0; // TArray<ComponentProperty>
		constexpr auto ViewMBInfoArray = 0x2b0; // TArray<FViewParticleEmitterInstanceMotionBlurInfo>
		constexpr auto InstanceParameters = 0x2c0; // TArray<FParticleSysParam>
		constexpr auto OldPosition = 0x2d0; // FVector
		constexpr auto PartSysVelocity = 0x2dc; // FVector
		constexpr auto WarmupTime = 0x2e8; // float
		constexpr auto WarmupTickRate = 0x2ec; // float
		constexpr auto LODLevel = 0x2f0; // int32_t
		constexpr auto SecondsBeforeInactive = 0x2f4; // float
		constexpr auto TimeSinceLastForceUpdateTransform = 0x2f8; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x2fc; // float
		constexpr auto AccumTickTime = 0x300; // float
		constexpr auto LODMethod = 0x304; // ParticleSystemLODMethod
		constexpr auto ReplayState = 0x305; // ParticleReplayState
		constexpr auto CurrentUpdateFixedLOD = 0x308; // int32_t
		constexpr auto CachedViewRelevanceFlags = 0x30c; // TArray<FMaterialViewRelevance>
		constexpr auto ReplayClips = 0x31c; // TArray<ObjectProperty>
		constexpr auto ReplayClipIDNumber = 0x32c; // int32_t
		constexpr auto ReplayFrameIndex = 0x330; // int32_t
		constexpr auto AccumLODDistanceCheckTime = 0x334; // float
		constexpr auto SpawnEvents = 0x338; // TArray<FParticleEventSpawnData>
		constexpr auto DeathEvents = 0x348; // TArray<FParticleEventDeathData>
		constexpr auto CollisionEvents = 0x358; // TArray<FParticleEventCollideData>
		constexpr auto KismetEvents = 0x368; // TArray<FParticleEventKismetData>
		constexpr auto AttractorCollisionEvents = 0x378; // TArray<FParticleEventAttractorCollideData>
		constexpr auto ReleaseResourcesFence = 0x388; // FPointer
		constexpr auto CustomTimeDilation = 0x390; // float
		constexpr auto EmitterDelay = 0x394; // float
		constexpr auto RadialBlurComp = 0x398; // ComponentProperty
		constexpr auto __OnSystemFinished__Delegate = 0x3a0; // DelegateProperty
	}

	namespace n_UCameraShake {
		constexpr auto bSingleInstance = 0x60; // uint32_t : 1
		constexpr auto bRandomAnimSegment = 0x60; // uint32_t : 1
		constexpr auto OscillationDuration = 0x64; // float
		constexpr auto OscillationBlendInTime = 0x68; // float
		constexpr auto OscillationBlendOutTime = 0x6c; // float
		constexpr auto RotOscillation = 0x70; // FROscillator
		constexpr auto LocOscillation = 0x94; // FVOscillator
		constexpr auto FOVOscillation = 0xb8; // FFOscillator
		constexpr auto Anim = 0xc4; // ObjectProperty
		constexpr auto AnimPlayRate = 0xcc; // float
		constexpr auto AnimScale = 0xd0; // float
		constexpr auto AnimBlendInTime = 0xd4; // float
		constexpr auto AnimBlendOutTime = 0xd8; // float
		constexpr auto RandomAnimSegmentDuration = 0xdc; // float
	}

	namespace n_ACombatProjectile {
		constexpr auto bSuppressAudio = 0x2a0; // uint32_t : 1
		constexpr auto bAutoStartInFlightAudio = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreInstigatorCollision = 0x2a0; // uint32_t : 1
		constexpr auto bAddBaseVelocity = 0x2a0; // uint32_t : 1
		constexpr auto bThrowSound = 0x2a0; // uint32_t : 1
		constexpr auto bRegisterIndicator = 0x2a0; // uint32_t : 1
		constexpr auto bInitRotation = 0x2a0; // uint32_t : 1
		constexpr auto bDeactivateTrailWhenStopped = 0x2a0; // uint32_t : 1
		constexpr auto bUseZeroExtentCollision = 0x2a0; // uint32_t : 1
		constexpr auto bStopSimulation = 0x2a0; // uint32_t : 1
		constexpr auto BounceOnAPawn = 0x2a0; // uint32_t : 1
		constexpr auto bWaitForEffects = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreEventChangedInstigator = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreCamShake = 0x2a0; // uint32_t : 1
		constexpr auto bIgnoreBlockForCamShake = 0x2a0; // uint32_t : 1
		constexpr auto InFlightSound = 0x2a4; // ComponentProperty
		constexpr auto InFlightSoundTemplate = 0x2ac; // ObjectProperty
		constexpr auto TrailTemplate = 0x2b4; // ObjectProperty
		constexpr auto TrailPSC = 0x2bc; // ComponentProperty
		constexpr auto ProjLightEnvironment = 0x2c4; // ComponentProperty
		constexpr auto ExploCameraEffectRadius = 0x2cc; // float
		constexpr auto TossZ = 0x2d0; // float
		constexpr auto TossUpDegree = 0x2d4; // float
		constexpr auto GravityScale = 0x2d8; // float
		constexpr auto IndicatorPriority = 0x2dc; // float
		constexpr auto GrenadeIndicatorsUpdateCycle = 0x2e0; // float
		constexpr auto GrenadeIndicatorsLastUpdateTime = 0x2e4; // float
		constexpr auto RegisterIndicatorDelayTime = 0x2e8; // float
		constexpr auto SimFixedFPS = 0x2ec; // float
		constexpr auto SimFixedTimeStep = 0x2f0; // float
		constexpr auto SimInternalAdvanceTime = 0x2f4; // float
		constexpr auto WeaponIndex = 0x2f8; // int32_t
		constexpr auto InitialLocation = 0x2fc; // FVector
		constexpr auto InitialRotation = 0x308; // FRotator
		constexpr auto InitialVelocity = 0x314; // FVector
		constexpr auto NotifyMovement = 0x320; // char
		constexpr auto ExplosionEffectType = 0x321; // EExplosionEffectType
		constexpr auto LastHitNormal = 0x324; // FVector
		constexpr auto Mesh = 0x330; // ComponentProperty
		constexpr auto SkeletalMeshComp = 0x338; // ComponentProperty
		constexpr auto StaticMeshComp = 0x340; // ComponentProperty
		constexpr auto ProjSkeletalMeshParts = 0x348; // FMeshPart
		constexpr auto ProjStaticMeshParts = 0x364; // FStaticMeshPart
		constexpr auto ProjSkeletalPhysicsAsset = 0x370; // ObjectProperty
		constexpr auto DamageAdjustmentList = 0x378; // TArray<FExplosionDamageAdjustment>
		constexpr auto DamageRatioForInstigator = 0x388; // float
		constexpr auto AIModeDamageRate = 0x38c; // float
	}

	namespace n_AUSSWeapon {
		constexpr auto WeaponSocketName = 0x3a4; // FName
		constexpr auto MuzzleFlashSocketName = 0x3ac; // FName
		constexpr auto ShotPerFireBurst = 0x3b4; // TArray<int32_t>
		constexpr auto AimingTolerance = 0x3c4; // float
		constexpr auto ShotInBurstCount = 0x3c8; // int32_t
		constexpr auto WeaponAttachmentClass = 0x3cc; // AUSSWeaponAttachment*
		constexpr auto CCSController = 0x3d4; // ObjectProperty
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto Low = 0x88; // uint32_t : 1
		constexpr auto Medium = 0x88; // uint32_t : 1
		constexpr auto High = 0x88; // uint32_t : 1
		constexpr auto FogHeight = 0x8c; // float
		constexpr auto FogDensity = 0x90; // float
		constexpr auto FogHeightFalloff = 0x94; // float
		constexpr auto FogMaxOpacity = 0x98; // float
		constexpr auto StartDistance = 0x9c; // float
		constexpr auto LightTerminatorAngle = 0xa0; // float
		constexpr auto OppositeLightBrightness = 0xa4; // float
		constexpr auto OppositeLightColor = 0xa8; // FColor
		constexpr auto LightInscatteringBrightness = 0xac; // float
		constexpr auto LightInscatteringColor = 0xb0; // FColor
		constexpr auto DetailMode = 0xb4; // EDetailMode
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bDamageAppliesImpulse = 0x244; // uint32_t : 1
		constexpr auto bShouldDoAnimNotifies = 0x244; // uint32_t : 1
		constexpr auto bForceSaveInCheckpoint = 0x244; // uint32_t : 1
		constexpr auto bCollideActors_OldValue = 0x244; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x244; // uint32_t : 1
		constexpr auto SkeletalMeshComponent = 0x248; // ComponentProperty
		constexpr auto LightEnvironment = 0x250; // ComponentProperty
		constexpr auto FacialAudioComp = 0x258; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x260; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x268; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x270; // ObjectProperty
		constexpr auto ControlTargets = 0x278; // TArray<FSkelMeshActorControlTarget>
		constexpr auto InterpGroupList = 0x288; // TArray<ObjectProperty>
		constexpr auto SavedAnimSeqName = 0x298; // FName
		constexpr auto SavedCurrentTime = 0x2a0; // float
	}

	namespace n_UGameAICmd_Hover_MoveToGoal_Mesh {
		constexpr auto Find = 0x84; // ObjectProperty
		constexpr auto Radius = 0x8c; // float
		constexpr auto bWasFiring = 0x90; // uint32_t : 1
		constexpr auto bFinalApproach = 0x90; // uint32_t : 1
		constexpr auto bFallbackMoveToMesh = 0x90; // uint32_t : 1
		constexpr auto DesiredHoverHeight = 0x94; // float
		constexpr auto CurrentHoverHeight = 0x98; // float
		constexpr auto SubGoalReachDist = 0x9c; // float
		constexpr auto GoalDistance = 0xa0; // float
		constexpr auto IntermediatePoint = 0xa4; // FVector
		constexpr auto LastMovePoint = 0xb0; // FVector
		constexpr auto NumMovePointFails = 0xbc; // int32_t
		constexpr auto MaxMovePointFails = 0xc0; // int32_t
		constexpr auto FallbackDest = 0xc4; // FVector
		constexpr auto MoveToActor = 0xd0; // ObjectProperty
		constexpr auto LastMoveTargetPathLocation = 0xd8; // FBasedPosition
		constexpr auto InitialFinalDestination = 0x110; // FVector
	}

	namespace n_UAnimMetaData_SkelControlKeyFrame {
		constexpr auto KeyFrames = 0x7c; // TArray<FTimeModifier>
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x214; // ObjectProperty
		constexpr auto PhysicalMaterial = 0x21c; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x224; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x22c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x230; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x238; // ObjectProperty
		constexpr auto DiffuseColor = 0x240; // FColorMaterialInput
		constexpr auto DiffusePower = 0x27c; // FScalarMaterialInput
		constexpr auto SpecularColor = 0x2b8; // FColorMaterialInput
		constexpr auto SpecularPower = 0x2f4; // FScalarMaterialInput
		constexpr auto Normal = 0x330; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x374; // FColorMaterialInput
		constexpr auto Opacity = 0x3b0; // FScalarMaterialInput
		constexpr auto OpacityMask = 0x3ec; // FScalarMaterialInput
		constexpr auto OpacityMaskClipValue = 0x428; // float
		constexpr auto ShadowDepthBias = 0x42c; // float
		constexpr auto Distortion = 0x430; // FVector2MaterialInput
		constexpr auto BlendMode = 0x470; // EBlendMode
		constexpr auto LightingModel = 0x471; // EMaterialLightingModel
		constexpr auto D3D11TessellationMode = 0x472; // EMaterialTessellationMode
		constexpr auto CustomLighting = 0x474; // FColorMaterialInput
		constexpr auto CustomSkylightDiffuse = 0x4b0; // FColorMaterialInput
		constexpr auto AnisotropicDirection = 0x4ec; // FVectorMaterialInput
		constexpr auto TwoSidedLightingMask = 0x530; // FScalarMaterialInput
		constexpr auto TwoSidedLightingColor = 0x56c; // FColorMaterialInput
		constexpr auto WorldPositionOffset = 0x5a8; // FVectorMaterialInput
		constexpr auto WorldDisplacement = 0x5ec; // FVectorMaterialInput
		constexpr auto TessellationMultiplier = 0x630; // FScalarMaterialInput
		constexpr auto SubsurfaceInscatteringColor = 0x66c; // FColorMaterialInput
		constexpr auto SubsurfaceAbsorptionColor = 0x6a8; // FColorMaterialInput
		constexpr auto SubsurfaceScatteringRadius = 0x6e4; // FScalarMaterialInput
		constexpr auto EnableSubsurfaceScattering = 0x720; // uint32_t : 1
		constexpr auto EnableSeparateTranslucency = 0x720; // uint32_t : 1
		constexpr auto bEnableMaskedAntialiasing = 0x720; // uint32_t : 1
		constexpr auto TwoSided = 0x720; // uint32_t : 1
		constexpr auto TwoSidedSeparatePass = 0x720; // uint32_t : 1
		constexpr auto bDisableDepthTest = 0x720; // uint32_t : 1
		constexpr auto bSceneTextureRenderBehindTranslucency = 0x720; // uint32_t : 1
		constexpr auto bAllowFog = 0x720; // uint32_t : 1
		constexpr auto bTranslucencyReceiveDominantShadowsFromStatic = 0x720; // uint32_t : 1
		constexpr auto bTranslucencyInheritDominantShadowsFromOpaque = 0x720; // uint32_t : 1
		constexpr auto bAllowTranslucencyDoF = 0x720; // uint32_t : 1
		constexpr auto bUseOneLayerDistortion = 0x720; // uint32_t : 1
		constexpr auto bUseLitTranslucencyDepthPass = 0x720; // uint32_t : 1
		constexpr auto bUseLitTranslucencyPostRenderDepthPass = 0x720; // uint32_t : 1
		constexpr auto bCastLitTranslucencyShadowAsMasked = 0x720; // uint32_t : 1
		constexpr auto bUsedAsLightFunction = 0x720; // uint32_t : 1
		constexpr auto bUsedWithFogVolumes = 0x720; // uint32_t : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x720; // uint32_t : 1
		constexpr auto bUsedWithSkeletalMesh = 0x720; // uint32_t : 1
		constexpr auto bUsedWithTerrain = 0x720; // uint32_t : 1
		constexpr auto bUsedWithLandscape = 0x720; // uint32_t : 1
		constexpr auto bUsedWithFracturedMeshes = 0x720; // uint32_t : 1
		constexpr auto bUsedWithParticleSystem = 0x720; // uint32_t : 1
		constexpr auto bUsedWithParticleSprites = 0x720; // uint32_t : 1
		constexpr auto bUsedWithBeamTrails = 0x720; // uint32_t : 1
		constexpr auto bUsedWithParticleSubUV = 0x720; // uint32_t : 1
		constexpr auto bUsedWithSpeedTree = 0x720; // uint32_t : 1
		constexpr auto bUsedWithStaticLighting = 0x720; // uint32_t : 1
		constexpr auto bUsedWithLensFlare = 0x720; // uint32_t : 1
		constexpr auto bUsedWithGammaCorrection = 0x720; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshParticles = 0x720; // uint32_t : 1
		constexpr auto bUsedWithFluidSurfaces = 0x720; // uint32_t : 1
		constexpr auto bUsedWithDecals = 0x724; // uint32_t : 1
		constexpr auto bUsedWithMaterialEffect = 0x724; // uint32_t : 1
		constexpr auto bUsedWithMorphTargets = 0x724; // uint32_t : 1
		constexpr auto bUsedWithRadialBlur = 0x724; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshes = 0x724; // uint32_t : 1
		constexpr auto bUsedWithSplineMeshes = 0x724; // uint32_t : 1
		constexpr auto bUsedWithAPEXMeshes = 0x724; // uint32_t : 1
		constexpr auto bUsedWithScreenDoorFade = 0x724; // uint32_t : 1
		constexpr auto bEnableCrackFreeDisplacement = 0x724; // uint32_t : 1
		constexpr auto bUseImageBasedReflections = 0x724; // uint32_t : 1
		constexpr auto Wireframe = 0x724; // uint32_t : 1
		constexpr auto bPerPixelCameraVector = 0x724; // uint32_t : 1
		constexpr auto bAllowLightmapSpecular = 0x724; // uint32_t : 1
		constexpr auto bIsFallbackMaterial = 0x724; // uint32_t : 1
		constexpr auto bUsesDistortion = 0x724; // uint32_t : 1
		constexpr auto bIsMasked = 0x724; // uint32_t : 1
		constexpr auto bIsPreviewMaterial = 0x724; // uint32_t : 1
		constexpr auto bUsedWithWorldCube = 0x724; // uint32_t : 1
		constexpr auto bAllowOutline = 0x724; // uint32_t : 1
		constexpr auto bAllowTranslucentWithoutDOF = 0x724; // uint32_t : 1
		constexpr auto bUsedWithZoomRatio = 0x724; // uint32_t : 1
		constexpr auto ImageReflectionNormalDampening = 0x728; // float
		constexpr auto MaterialResources = 0x72c; // FPointer [0x2]
		constexpr auto DefaultMaterialInstances = 0x73c; // FPointer [0x3]
		constexpr auto EditorX = 0x754; // int32_t
		constexpr auto EditorY = 0x758; // int32_t
		constexpr auto EditorPitch = 0x75c; // int32_t
		constexpr auto EditorYaw = 0x760; // int32_t
		constexpr auto Expressions = 0x764; // TArray<ObjectProperty>
		constexpr auto MaterialFunctionInfos = 0x774; // TArray<FMaterialFunctionInfo>
		constexpr auto EditorParameters = 0x784; // TMap<None, None>
		constexpr auto ReferencedTextures = 0x7cc; // TArray<ObjectProperty>
	}

	namespace n_UBlurEffect {
		constexpr auto BlurKernelSize = 0x88; // int32_t
	}

	namespace n_UKismetBookMark {
		constexpr auto BookMarkSequencePathName = 0x6c; // FString
	}

	namespace n_UParticleModuleUberRainDrops {
		constexpr auto LifetimeMin = 0x78; // float
		constexpr auto LifetimeMax = 0x7c; // float
		constexpr auto StartSizeMin = 0x80; // FVector
		constexpr auto StartSizeMax = 0x8c; // FVector
		constexpr auto StartVelocityMin = 0x98; // FVector
		constexpr auto StartVelocityMax = 0xa4; // FVector
		constexpr auto StartVelocityRadialMin = 0xb0; // float
		constexpr auto StartVelocityRadialMax = 0xb4; // float
		constexpr auto ColorOverLife = 0xb8; // FVector
		constexpr auto AlphaOverLife = 0xc4; // float
		constexpr auto bIsUsingCylinder = 0xc8; // uint32_t : 1
		constexpr auto bPositive_X = 0xc8; // uint32_t : 1
		constexpr auto bPositive_Y = 0xc8; // uint32_t : 1
		constexpr auto bPositive_Z = 0xc8; // uint32_t : 1
		constexpr auto bNegative_X = 0xc8; // uint32_t : 1
		constexpr auto bNegative_Y = 0xc8; // uint32_t : 1
		constexpr auto bNegative_Z = 0xc8; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xc8; // uint32_t : 1
		constexpr auto bVelocity = 0xc8; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xc8; // uint32_t : 1
		constexpr auto PC_VelocityScale = 0xcc; // float
		constexpr auto PC_StartLocation = 0xd0; // FVector
		constexpr auto PC_StartRadius = 0xdc; // float
		constexpr auto PC_StartHeight = 0xe0; // float
		constexpr auto PC_HeightAxis = 0xe4; // CylinderHeightAxis
		constexpr auto StartLocationMin = 0xe8; // FVector
		constexpr auto StartLocationMax = 0xf4; // FVector
	}

	namespace n_UCCSBTShootFromCover {
		constexpr auto FireBurstPerShot = 0xbc; // int32_t
		constexpr auto DelayBetweenBursts = 0xc0; // float
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x68; // EParticleAxisLock
	}

	namespace n_ACombatSkillActor_UAV {
		constexpr auto LightEnvironment = 0x254; // ComponentProperty
		constexpr auto SmokingHot = 0x25c; // uint32_t : 1
		constexpr auto DetectionArea = 0x260; // float
		constexpr auto DetectionAreaSquare = 0x264; // float
		constexpr auto DeathTime = 0x268; // float
		constexpr auto SmokeThreshold = 0x26c; // float
		constexpr auto ExploEmitter = 0x270; // ObjectProperty
		constexpr auto SmokePSCTemplate = 0x278; // ObjectProperty
		constexpr auto SmokePSC = 0x280; // ComponentProperty
		constexpr auto IFF_Effect = 0x288; // ComponentProperty
		constexpr auto IFF_FriendTemplate = 0x290; // ObjectProperty
		constexpr auto IFF_FoeTemplate = 0x298; // ObjectProperty
	}

	namespace n_USeqAct_AndGate {
		constexpr auto bOpen = 0x108; // uint32_t : 1
		constexpr auto LinkedOutputFiredStatus = 0x10c; // TArray<char>
		constexpr auto LinkedOutputs = 0x11c; // TArray<FPointer>
	}

	namespace n_ACombatLCTFFlagActor {
		constexpr auto bIsActive = 0x244; // uint32_t : 1
		constexpr auto SetTeamMax = 0x244; // uint32_t : 1
		constexpr auto bFlagReusable = 0x244; // uint32_t : 1
		constexpr auto HeldShowPositionSameTeam = 0x244; // uint32_t : 1
		constexpr auto HeldShowPositionOtherTeam = 0x244; // uint32_t : 1
		constexpr auto DroppedTeamReset = 0x244; // uint32_t : 1
		constexpr auto DroppedCanPickOtherTeam = 0x244; // uint32_t : 1
		constexpr auto DroppedPickToSpawnOtherTeam = 0x244; // uint32_t : 1
		constexpr auto DroppedShowPositionSameTeam = 0x244; // uint32_t : 1
		constexpr auto DroppedShowPositionOtherTeam = 0x244; // uint32_t : 1
		constexpr auto bTouchFlag = 0x244; // uint32_t : 1
		constexpr auto LCTFActorIndex = 0x248; // int32_t
		constexpr auto OwnerTeam = 0x24c; // Team
		constexpr auto OriginalTeam = 0x24d; // Team
		constexpr auto SpawnID = 0x24e; // char
		constexpr auto HoistedID = 0x24f; // char
		constexpr auto AttachmentSocket = 0x250; // FName
		constexpr auto AttachScale = 0x258; // float
		constexpr auto SkelMesh = 0x25c; // ComponentProperty
		constexpr auto LightEnvironment = 0x264; // ComponentProperty
		constexpr auto DroppedBackTime = 0x26c; // float
		constexpr auto PSC = 0x270; // ComponentProperty
		constexpr auto HomeBase = 0x278; // ObjectProperty
		constexpr auto HoistedPoint = 0x280; // ObjectProperty
		constexpr auto StateName = 0x288; // FName
		constexpr auto missionArrayIndex = 0x290; // int32_t
		constexpr auto SkelScale = 0x294; // float
		constexpr auto HeldPRI = 0x298; // ObjectProperty
	}

	namespace n_ACombatHandActor {
		constexpr auto OwnerPlayer = 0x244; // ObjectProperty
		constexpr auto CurrentWeapon = 0x24c; // ObjectProperty
		constexpr auto Mesh = 0x254; // ComponentProperty
		constexpr auto LightEnvironment = 0x25c; // ComponentProperty
		constexpr auto AccessoryClass = 0x264; // UCombatAccessory_Base*
	}

	namespace n_UActorFactoryArchetype {
		constexpr auto ArchetypeActor = 0x9c; // ObjectProperty
	}

	namespace n_UCombatAnimBlendByIdle {
		constexpr auto IdleSpeedThreshold = 0x144; // float
		constexpr auto IdleBlendDelay = 0x148; // float
		constexpr auto IdleSpeedThresholdSqr = 0x14c; // float
		constexpr auto TimeFromLastMovement = 0x150; // float
		constexpr auto CombatPawnOwner = 0x154; // ObjectProperty
	}

	namespace n_ACombatBusterGame {
		constexpr auto ObjectDestoryBouns = 0x788; // FObjectDestoryBounsInfo
	}

	namespace n_ANxTornadoForceField {
		constexpr auto RadialStrength = 0x298; // float
		constexpr auto RotationalStrength = 0x29c; // float
		constexpr auto LiftStrength = 0x2a0; // float
		constexpr auto ForceRadius = 0x2a4; // float
		constexpr auto ForceTopRadius = 0x2a8; // float
		constexpr auto LiftFalloffHeight = 0x2ac; // float
		constexpr auto EscapeVelocity = 0x2b0; // float
		constexpr auto ForceHeight = 0x2b4; // float
		constexpr auto HeightOffset = 0x2b8; // float
		constexpr auto BSpecialRadialForceMode = 0x2bc; // uint32_t : 1
		constexpr auto Kernel = 0x2c0; // FPointer
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x60; // FString
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UAnimNode_MultiBlendPerBone {
		constexpr auto PawnOwner = 0x100; // ObjectProperty
		constexpr auto MaskList = 0x108; // TArray<FPerBoneMaskInfo>
		constexpr auto RotationBlendType = 0x118; // EBlendType
	}

	namespace n_USeqAct_HeadTrackingControl {
		constexpr auto TrackControllerName = 0x108; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x118; // float
		constexpr auto bDisableBeyondLimit = 0x11c; // uint32_t : 1
		constexpr auto bLookAtPawns = 0x11c; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0x120; // float
		constexpr auto MinLookAtTime = 0x124; // float
		constexpr auto MaxInterestTime = 0x128; // float
		constexpr auto ActorClassesToLookAt = 0x12c; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0x13c; // TArray<FName>
		constexpr auto LookAtTargets = 0x14c; // TArray<ObjectProperty>
		constexpr auto ActorToComponentMap = 0x15c; // TMap<None, None>
	}

	namespace n_UCombatHUD_EvolveSupply {
		constexpr auto TargetActor = 0x1b0; // ObjectProperty
		constexpr auto TargetIndex = 0x1b8; // int32_t
		constexpr auto LastDisplayHealth = 0x1bc; // int32_t
		constexpr auto LastUIState = 0x1c0; // MissionActorUIState
		constexpr auto WaitActiveTime = 0x1c4; // float
		constexpr auto OldWaitActiveTime = 0x1c8; // float
	}

	namespace n_UPBRuleNodeSplit {
		constexpr auto SplitAxis = 0x70; // EProcBuildingAxis
		constexpr auto SplitSetup = 0x74; // TArray<FRBSplitInfo>
	}

	namespace n_USeqAct_Delay {
		constexpr auto bDelayActive = 0x120; // uint32_t : 1
		constexpr auto bStartWillRestart = 0x120; // uint32_t : 1
		constexpr auto DefaultDuration = 0x124; // float
		constexpr auto Duration = 0x128; // float
		constexpr auto LastUpdateTime = 0x12c; // float
		constexpr auto RemainingTime = 0x130; // float
	}

	namespace n_ACombatDestructibleObject {
		constexpr auto AmbientSoundCue = 0x244; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x24c; // ComponentProperty
		constexpr auto ObjInstanceVersion = 0x254; // int32_t
		constexpr auto bComponentsSetUp = 0x258; // uint32_t : 1
		constexpr auto bShutDown = 0x258; // uint32_t : 1
		constexpr auto bHasBeenDestroyed = 0x258; // uint32_t : 1
		constexpr auto bInitRBPhysCalled = 0x258; // uint32_t : 1
		constexpr auto bLimitDamageTypes = 0x258; // uint32_t : 1
		constexpr auto bAllowCompleteDestruction = 0x258; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x258; // uint32_t : 1
		constexpr auto bInternalPathsEnabled = 0x258; // uint32_t : 1
		constexpr auto VulnerableToDamageType = 0x25c; // TArray<UDamageType*>
		constexpr auto InstaKillDamageType = 0x26c; // TArray<UDamageType*>
		constexpr auto IgnoreDamageType = 0x27c; // TArray<UDamageType*>
		constexpr auto SelfDestructAllDelay = 0x28c; // float
		constexpr auto LightEnvironment = 0x290; // ComponentProperty
		constexpr auto LightEnvironmentToUseForActorSpawnParams = 0x298; // ComponentProperty
		constexpr auto LightingChannelsToUseForActorSpawnParams = 0x2a0; // FLightingChannelContainer
		constexpr auto ExplosionTemplate = 0x2a4; // ObjectProperty
		constexpr auto CauserController = 0x2ac; // ObjectProperty
		constexpr auto SubObjects = 0x2b4; // TArray<FDestructibleSubobject>
		constexpr auto SubObjectLightingInfos = 0x2c4; // TArray<FSubObjectStaticLightingInfo>
		constexpr auto SubObjectHealths = 0x2d4; // TArray<float>
		constexpr auto TempDamageCache = 0x2e4; // TArray<float>
		constexpr auto ResetCount = 0x2f4; // char
		constexpr auto ProcessedMods = 0x2f5; // char [0x20]
		constexpr auto ReplicatedDamageMods = 0x318; // FReplicatedDamageModInfo [0x20]
		constexpr auto ClosestLocalPlayerSqDist = 0x418; // float
	}

	namespace n_APickupFactory {
		constexpr auto bOnlyReplicateHidden = 0x33c; // uint32_t : 1
		constexpr auto bPickupHidden = 0x33c; // uint32_t : 1
		constexpr auto bPredictRespawns = 0x33c; // uint32_t : 1
		constexpr auto bIsSuperItem = 0x33c; // uint32_t : 1
		constexpr auto bRespawnPaused = 0x33c; // uint32_t : 1
		constexpr auto InventoryType = 0x340; // AInventory*
		constexpr auto RespawnEffectTime = 0x348; // float
		constexpr auto MaxDesireability = 0x34c; // float
		constexpr auto PickupMesh = 0x350; // ComponentProperty
		constexpr auto ReplacementFactory = 0x358; // ObjectProperty
		constexpr auto OriginalFactory = 0x360; // ObjectProperty
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0xa0; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0xb0; // FString
		constexpr auto OutputType = 0xc0; // ECustomMaterialOutputType
		constexpr auto Description = 0xc4; // FString
		constexpr auto Inputs = 0xd4; // TArray<FCustomInput>
	}

	namespace n_UCombatDataTableRefSeasonInfo {
		constexpr auto Category = 0x6c; // FString
		constexpr auto Season = 0x7c; // int32_t
		constexpr auto StartTime = 0x80; // FTimeData
		constexpr auto EndTime = 0x88; // FTimeData
	}

	namespace n_UCombatDataTableRefImagePath {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto FullImagePath = 0x70; // FString
	}

	namespace n_UCCSBTCombatChangeBTTree {
		constexpr auto bc = 0xcc; // ObjectProperty
		constexpr auto NewBTTree = 0xd4; // ObjectProperty
	}

	namespace n_AImageReflectionShadowPlane {
		constexpr auto bEnabled = 0x244; // uint32_t : 1
		constexpr auto ReflectionShadowComponent = 0x248; // ComponentProperty
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x280; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x290; // uint32_t : 1
	}

	namespace n_UCCSBTCombatMovementOnlyNode {
		constexpr auto bClearEnemy = 0xc0; // uint32_t : 1
	}

	namespace n_USeqVar_RandomInt {
		constexpr auto Min = 0xa4; // int32_t
		constexpr auto Max = 0xa8; // int32_t
	}

	namespace n_USlotToSlotReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_USkeletalMesh {
		constexpr auto Bounds = 0x60; // FBoxSphereBounds
		constexpr auto Materials = 0x7c; // TArray<ObjectProperty>
		constexpr auto MaterialSetList = 0x8c; // TArray<FMaterialSet>
		constexpr auto ClothingAssets = 0x9c; // TArray<ObjectProperty>
		constexpr auto ClothingLodMap = 0xac; // TArray<FApexClothingAssetInfo>
		constexpr auto Origin = 0xbc; // FVector
		constexpr auto RotOrigin = 0xc8; // FRotator
		constexpr auto RefSkeleton = 0xd4; // TArray<int32_t>
		constexpr auto SkeletalDepth = 0xe4; // int32_t
		constexpr auto NameIndexMap = 0xe8; // TMap<None, None>
		constexpr auto LODModels = 0x130; // FIndirectArray_Mirror
		constexpr auto SourceData = 0x140; // FPointer
		constexpr auto RefBasesInvMatrix = 0x148; // TArray<FBoneAtom>
		constexpr auto SkelMirrorTable = 0x158; // TArray<FBoneMirrorInfo>
		constexpr auto SkelMirrorAxis = 0x168; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x169; // EAxis
		constexpr auto Sockets = 0x16c; // TArray<ObjectProperty>
		constexpr auto BoneBreakNames = 0x17c; // TArray<FString>
		constexpr auto BoneBreakOptions = 0x18c; // TArray<BoneBreakOption>
		constexpr auto LODInfo = 0x19c; // TArray<FSkeletalMeshLODInfo>
		constexpr auto OptimizationSettings = 0x1ac; // TArray<FSkeletalMeshOptimizationSettings>
		constexpr auto PerPolyCollisionBones = 0x1bc; // TArray<FName>
		constexpr auto AddToParentPerPolyCollisionBone = 0x1cc; // TArray<FName>
		constexpr auto PerPolyBoneKDOPs = 0x1dc; // TArray<int32_t>
		constexpr auto bPerPolyUseSoftWeighting = 0x1ec; // uint32_t : 1
		constexpr auto bUseSimpleLineCollision = 0x1ec; // uint32_t : 1
		constexpr auto bUseSimpleBoxCollision = 0x1ec; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x1ec; // uint32_t : 1
		constexpr auto bUseFullPrecisionUVs = 0x1ec; // uint32_t : 1
		constexpr auto bHasBeenSimplified = 0x1ec; // uint32_t : 1
		constexpr auto FaceFXAsset = 0x1f0; // ObjectProperty
		constexpr auto LODBiasPC = 0x1f8; // int32_t
		constexpr auto LODBiasPS3 = 0x1fc; // int32_t
		constexpr auto LODBiasXbox360 = 0x200; // int32_t
		constexpr auto ClothMesh = 0x204; // TArray<FPointer>
		constexpr auto ClothMeshScale = 0x214; // TArray<float>
		constexpr auto ClothToGraphicsVertMap = 0x224; // TArray<int32_t>
		constexpr auto ClothMovementScale = 0x234; // TArray<float>
		constexpr auto ClothMovementScaleGenMode = 0x244; // ClothMovementScaleGen
		constexpr auto ClothToAnimMeshMaxDist = 0x248; // float
		constexpr auto bLimitClothToAnimMesh = 0x24c; // uint32_t : 1
		constexpr auto ClothWeldingMap = 0x250; // TArray<int32_t>
		constexpr auto ClothWeldingDomain = 0x260; // int32_t
		constexpr auto ClothWeldedIndices = 0x264; // TArray<int32_t>
		constexpr auto bForceNoWelding = 0x274; // uint32_t : 1
		constexpr auto NumFreeClothVerts = 0x278; // int32_t
		constexpr auto ClothIndexBuffer = 0x27c; // TArray<int32_t>
		constexpr auto ClothBones = 0x28c; // TArray<FName>
		constexpr auto ClothHierarchyLevels = 0x29c; // int32_t
		constexpr auto bEnableClothBendConstraints = 0x2a0; // uint32_t : 1
		constexpr auto bEnableClothDamping = 0x2a0; // uint32_t : 1
		constexpr auto bUseClothCOMDamping = 0x2a0; // uint32_t : 1
		constexpr auto ClothStretchStiffness = 0x2a4; // float
		constexpr auto ClothBendStiffness = 0x2a8; // float
		constexpr auto ClothDensity = 0x2ac; // float
		constexpr auto ClothThickness = 0x2b0; // float
		constexpr auto ClothDamping = 0x2b4; // float
		constexpr auto ClothIterations = 0x2b8; // int32_t
		constexpr auto ClothHierarchicalIterations = 0x2bc; // int32_t
		constexpr auto ClothFriction = 0x2c0; // float
		constexpr auto ClothRelativeGridSpacing = 0x2c4; // float
		constexpr auto ClothPressure = 0x2c8; // float
		constexpr auto ClothCollisionResponseCoefficient = 0x2cc; // float
		constexpr auto ClothAttachmentResponseCoefficient = 0x2d0; // float
		constexpr auto ClothAttachmentTearFactor = 0x2d4; // float
		constexpr auto ClothSleepLinearVelocity = 0x2d8; // float
		constexpr auto HardStretchLimitFactor = 0x2dc; // float
		constexpr auto bHardStretchLimit = 0x2e0; // uint32_t : 1
		constexpr auto bEnableClothOrthoBendConstraints = 0x2e0; // uint32_t : 1
		constexpr auto bEnableClothSelfCollision = 0x2e0; // uint32_t : 1
		constexpr auto bEnableClothPressure = 0x2e0; // uint32_t : 1
		constexpr auto bEnableClothTwoWayCollision = 0x2e0; // uint32_t : 1
		constexpr auto ClothSpecialBones = 0x2e4; // TArray<FClothSpecialBoneInfo>
		constexpr auto bEnableClothLineChecks = 0x2f4; // uint32_t : 1
		constexpr auto bClothMetal = 0x2f4; // uint32_t : 1
		constexpr auto ClothMetalImpulseThreshold = 0x2f8; // float
		constexpr auto ClothMetalPenetrationDepth = 0x2fc; // float
		constexpr auto ClothMetalMaxDeformationDistance = 0x300; // float
		constexpr auto bEnableClothTearing = 0x304; // uint32_t : 1
		constexpr auto ClothTearFactor = 0x308; // float
		constexpr auto ClothTearReserve = 0x30c; // int32_t
		constexpr auto bEnableValidBounds = 0x310; // uint32_t : 1
		constexpr auto ValidBoundsMin = 0x314; // FVector
		constexpr auto ValidBoundsMax = 0x320; // FVector
		constexpr auto ClothTornTriMap = 0x32c; // FMap_Mirror
		constexpr auto SoftBodySurfaceToGraphicsVertMap = 0x374; // TArray<int32_t>
		constexpr auto SoftBodySurfaceIndices = 0x384; // TArray<int32_t>
		constexpr auto SoftBodyTetraVertsUnscaled = 0x394; // TArray<FVector>
		constexpr auto SoftBodyTetraIndices = 0x3a4; // TArray<int32_t>
		constexpr auto SoftBodyTetraLinks = 0x3b4; // TArray<FSoftBodyTetraLink>
		constexpr auto CachedSoftBodyMeshes = 0x3c4; // TArray<FPointer>
		constexpr auto CachedSoftBodyMeshScales = 0x3d4; // TArray<float>
		constexpr auto SoftBodyBones = 0x3e4; // TArray<FName>
		constexpr auto SoftBodySpecialBones = 0x3f4; // TArray<FSoftBodySpecialBoneInfo>
		constexpr auto SoftBodyVolumeStiffness = 0x404; // float
		constexpr auto SoftBodyStretchingStiffness = 0x408; // float
		constexpr auto SoftBodyDensity = 0x40c; // float
		constexpr auto SoftBodyParticleRadius = 0x410; // float
		constexpr auto SoftBodyDamping = 0x414; // float
		constexpr auto SoftBodySolverIterations = 0x418; // int32_t
		constexpr auto SoftBodyFriction = 0x41c; // float
		constexpr auto SoftBodyRelativeGridSpacing = 0x420; // float
		constexpr auto SoftBodySleepLinearVelocity = 0x424; // float
		constexpr auto bEnableSoftBodySelfCollision = 0x428; // uint32_t : 1
		constexpr auto SoftBodyAttachmentResponse = 0x42c; // float
		constexpr auto SoftBodyCollisionResponse = 0x430; // float
		constexpr auto SoftBodyDetailLevel = 0x434; // float
		constexpr auto SoftBodySubdivisionLevel = 0x438; // int32_t
		constexpr auto bSoftBodyIsoSurface = 0x43c; // uint32_t : 1
		constexpr auto bEnableSoftBodyDamping = 0x43c; // uint32_t : 1
		constexpr auto bUseSoftBodyCOMDamping = 0x43c; // uint32_t : 1
		constexpr auto SoftBodyAttachmentThreshold = 0x440; // float
		constexpr auto bEnableSoftBodyTwoWayCollision = 0x444; // uint32_t : 1
		constexpr auto SoftBodyAttachmentTearFactor = 0x448; // float
		constexpr auto bEnableSoftBodyLineChecks = 0x44c; // uint32_t : 1
		constexpr auto bHasVertexColors = 0x44c; // uint32_t : 1
		constexpr auto GraphicsIndexIsCloth = 0x450; // TArray<char>
		constexpr auto CachedStreamingTextureFactors = 0x460; // TArray<float>
		constexpr auto StreamingDistanceMultiplier = 0x470; // float
		constexpr auto ReleaseResourcesFence = 0x474; // int32_t
		constexpr auto SkelMeshRUID = 0x478; // FQWord
		constexpr auto OldMinDesiredLODLevel = 0x480; // int32_t
		constexpr auto bUseClothingAssetMaterial = 0x484; // uint32_t : 1
	}

	namespace n_UGFxObject {
		constexpr auto Value = 0x60; // int32_t [0xc]
		constexpr auto SubWidgetBindings = 0x90; // TArray<FGFxWidgetBinding>
	}

	namespace n_UAnimNodeMirror {
		constexpr auto bEnableMirroring = 0x100; // uint32_t : 1
	}

	namespace n_UCBFamilyInfo {
		constexpr auto CharacterMesh = 0x60; // FMeshPart
		constexpr auto PortraitIconPath = 0x7c; // FString
		constexpr auto ArmMesh = 0x8c; // ObjectProperty
		constexpr auto PhysAsset = 0x94; // ObjectProperty
		constexpr auto PhysAssetForDeath = 0x9c; // ObjectProperty
		constexpr auto AnimSets = 0xa4; // TArray<ObjectProperty>
		constexpr auto SoundGroupClass = 0xb4; // UCBPawnSoundGroup*
		constexpr auto DefaultRadioVoiceClassName = 0xbc; // FString
		constexpr auto RadioVoice_TargetModeName = 0xcc; // TArray<FString>
		constexpr auto BloodSplatterDecalMaterials = 0xdc; // TArray<ObjectProperty>
		constexpr auto BloodSplatterDecalMaterialFloors = 0xec; // TArray<ObjectProperty>
		constexpr auto LowGoreBloodSplatterDecalMaterials = 0xfc; // TArray<ObjectProperty>
		constexpr auto LowGoreBloodSplatterDecalMaterialFloors = 0x10c; // TArray<ObjectProperty>
		constexpr auto HeadBloodForFPPSCTemplate = 0x11c; // ObjectProperty
		constexpr auto BloodForFPMuzzleFlashPSCTemplate = 0x124; // ObjectProperty
		constexpr auto LowgoreHeadBloodloodForFPPSCTemplate = 0x12c; // ObjectProperty
		constexpr auto LowGoreBloodForFPMuzzleFlashPSCTemplate = 0x134; // ObjectProperty
		constexpr auto DefaultMeshScale = 0x13c; // float
		constexpr auto MaxHealthRate_Buff = 0x140; // float
		constexpr auto MaxAutoCureHealthModifier_Buff = 0x144; // float
		constexpr auto HealthCureRate_Buff = 0x148; // float
		constexpr auto AddMainAmmo_Buff = 0x14c; // float
		constexpr auto AddSubAmmo_Buff = 0x150; // float
		constexpr auto AddMainMagazineAmmo_Buff = 0x154; // float
		constexpr auto AddSubMagazineAmmo_Buff = 0x158; // float
		constexpr auto MaxMainMagazineAmmo_Buff = 0x15c; // float
		constexpr auto MaxSubMagazineAmmo_Buff = 0x160; // float
		constexpr auto WeaponReloadSpeedRate_Buff = 0x164; // float
		constexpr auto WeaponChangeRate_Buff = 0x168; // float
		constexpr auto GroundCrouchSpeedRate_Buff = 0x16c; // float
		constexpr auto GroundWalkingSpeedRate_Buff = 0x170; // float
		constexpr auto GroundRunSpeedRate_Buff = 0x174; // float
		constexpr auto MaxGroundSpeed = 0x178; // float
		constexpr auto GroundAccelationRate_Buff = 0x17c; // float
		constexpr auto GunAttackRate_Buff = 0x180; // float
		constexpr auto GunGuardRate_Buff = 0x184; // float
		constexpr auto MeleeAttackRate_Buff = 0x188; // float
		constexpr auto MeleeGuardRate_Buff = 0x18c; // float
		constexpr auto ExplosiveAttackRate_Buff = 0x190; // float
		constexpr auto ExplosiveGuardRate_Buff = 0x194; // float
		constexpr auto DetailedRadarDistance_Buff = 0x198; // float
		constexpr auto RadarRange_Buff = 0x19c; // float
		constexpr auto ShortenRespawnDelay_Buff = 0x1a0; // float
		constexpr auto RefDropCodeName = 0x1a4; // FName
		constexpr auto AdditionalDamagedDecelerationRatio = 0x1ac; // float
		constexpr auto MaxDamagedDecelerationRatio = 0x1b0; // float
		constexpr auto FamilyInfoType = 0x1b4; // FName
		constexpr auto OverridePostProcessChain = 0x1bc; // int32_t
		constexpr auto OverrideLowPostProcessChain = 0x1c0; // int32_t
		constexpr auto bIsFemale = 0x1c4; // uint32_t : 1
		constexpr auto bCanPickupWeapon = 0x1c4; // uint32_t : 1
		constexpr auto bCanSelectSkillClass = 0x1c4; // uint32_t : 1
		constexpr auto bCanPickupSupplies = 0x1c4; // uint32_t : 1
	}

	namespace n_UOnlineAuthInterfaceImpl {
		constexpr auto VfTable_IOnlineAuthInterface = 0x60; // FPointer
		constexpr auto OwningSubsystem = 0x68; // ObjectProperty
		constexpr auto bAuthReady = 0x70; // uint32_t : 1
		constexpr auto ClientAuthSessions = 0x74; // FSparseArray_Mirror
		constexpr auto ServerAuthSessions = 0xac; // FSparseArray_Mirror
		constexpr auto PeerAuthSessions = 0xe4; // FSparseArray_Mirror
		constexpr auto LocalClientAuthSessions = 0x11c; // FSparseArray_Mirror
		constexpr auto LocalServerAuthSessions = 0x154; // FSparseArray_Mirror
		constexpr auto LocalPeerAuthSessions = 0x18c; // FSparseArray_Mirror
		constexpr auto AuthReadyDelegates = 0x1c4; // TArray<DelegateProperty>
		constexpr auto ClientAuthRequestDelegates = 0x1d4; // TArray<DelegateProperty>
		constexpr auto ServerAuthRequestDelegates = 0x1e4; // TArray<DelegateProperty>
		constexpr auto ClientAuthResponseDelegates = 0x1f4; // TArray<DelegateProperty>
		constexpr auto ServerAuthResponseDelegates = 0x204; // TArray<DelegateProperty>
		constexpr auto ClientAuthCompleteDelegates = 0x214; // TArray<DelegateProperty>
		constexpr auto ServerAuthCompleteDelegates = 0x224; // TArray<DelegateProperty>
		constexpr auto ClientAuthEndSessionRequestDelegates = 0x234; // TArray<DelegateProperty>
		constexpr auto ServerAuthRetryRequestDelegates = 0x244; // TArray<DelegateProperty>
		constexpr auto ClientConnectionCloseDelegates = 0x254; // TArray<DelegateProperty>
		constexpr auto ServerConnectionCloseDelegates = 0x264; // TArray<DelegateProperty>
		constexpr auto __OnAuthReady__Delegate = 0x274; // DelegateProperty
		constexpr auto __OnClientAuthRequest__Delegate = 0x284; // DelegateProperty
		constexpr auto __OnServerAuthRequest__Delegate = 0x294; // DelegateProperty
		constexpr auto __OnClientAuthResponse__Delegate = 0x2a4; // DelegateProperty
		constexpr auto __OnServerAuthResponse__Delegate = 0x2b4; // DelegateProperty
		constexpr auto __OnClientAuthComplete__Delegate = 0x2c4; // DelegateProperty
		constexpr auto __OnServerAuthComplete__Delegate = 0x2d4; // DelegateProperty
		constexpr auto __OnClientAuthEndSessionRequest__Delegate = 0x2e4; // DelegateProperty
		constexpr auto __OnServerAuthRetryRequest__Delegate = 0x2f4; // DelegateProperty
		constexpr auto __OnClientConnectionClose__Delegate = 0x304; // DelegateProperty
		constexpr auto __OnServerConnectionClose__Delegate = 0x314; // DelegateProperty
	}

	namespace n_UCombatFrontEnd_ChangePropernounPopup {
		constexpr auto PopupMode = 0xd0; // char
		constexpr auto SendTextList = 0xd4; // TArray<FSendTextInfo>
		constexpr auto SendText = 0xe4; // FString
	}

	namespace n_UCombatInGameBattleLog {
		constexpr auto BattleLogData = 0x60; // TArray<FbattleLog>
		constexpr auto OtherPlayersTables = 0x70; // TArray<FDisplayTable>
		constexpr auto MyTable = 0x80; // FDisplayTable
		constexpr auto LocalPlayerName = 0xb0; // FString
		constexpr auto KillerIndex = 0xc0; // int32_t
		constexpr auto SupportedGameNames = 0xc4; // TArray<FString>
		constexpr auto bActive = 0xd4; // uint32_t : 1
		constexpr auto BattleLogMC = 0xd8; // ObjectProperty
		constexpr auto LocalPC = 0xe0; // ObjectProperty
		constexpr auto DisplayTableSettingDelayTime = 0xe8; // float
	}

	namespace n_UClipPadEntry {
		constexpr auto Title = 0x60; // FString
		constexpr auto Text = 0x70; // FString
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxisAndAngle = 0xb0; // FExpressionInput
		constexpr auto PositionOnAxis = 0xe4; // FExpressionInput
		constexpr auto Position = 0x118; // FExpressionInput
	}

	namespace n_UUIDataProvider_Settings {
		constexpr auto Settings = 0x90; // ObjectProperty
		constexpr auto bIsAListRow = 0x98; // uint32_t : 1
	}

	namespace n_UCBUIDataStore_TacticalGear {
		constexpr auto UITacticalGearList = 0x98; // TArray<FUITacticalGearStruct>
	}

	namespace n_UPBRuleNodeRepeat {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatMaxSize = 0x74; // float
	}

	namespace n_UCCSBTSimpleFlee {
		constexpr auto FleeDistance = 0xd4; // float
		constexpr auto CachedEnemyPosition = 0xd8; // FVector
		constexpr auto CachedPawnPosition = 0xe4; // FVector
		constexpr auto CachedResult = 0xf0; // uint32_t : 1
		constexpr auto CachedMaxDist2D = 0xf4; // float
		constexpr auto MoveToHandle = 0xf8; // ObjectProperty
	}

	namespace n_UPath_AvoidInEscapableNodes {
		constexpr auto Radius = 0x6c; // int32_t
		constexpr auto Height = 0x70; // int32_t
		constexpr auto MaxFallSpeed = 0x74; // int32_t
		constexpr auto MoveFlags = 0x78; // int32_t
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeGuid = 0x60; // FGuid
		constexpr auto LayerInfoMap = 0x70; // TMap<None, None>
		constexpr auto DataInterface = 0xb8; // FPointer
		constexpr auto XYtoComponentMap = 0xc0; // TMap<None, None>
		constexpr auto XYtoCollisionComponentMap = 0x108; // TMap<None, None>
		constexpr auto LandscapeProxy = 0x150; // ObjectProperty
		constexpr auto XYtoAddCollisionMap = 0x158; // TMap<None, None>
		constexpr auto Proxies = 0x1a0; // FSet_Mirror
		constexpr auto SelectedComponents = 0x1e8; // FSet_Mirror
		constexpr auto SelectedCollisionComponents = 0x230; // FSet_Mirror
		constexpr auto SelectedRegionComponents = 0x278; // FSet_Mirror
		constexpr auto SelectedRegion = 0x2c0; // TMap<None, None>
		constexpr auto bIsValid = 0x308; // uint32_t : 1
	}

	namespace n_UPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x6c; // float
		constexpr auto MinDistance = 0x70; // float
		constexpr auto bSoft = 0x74; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x74; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x78; // float
		constexpr auto EnvelopeTestPoint = 0x7c; // FVector
	}

	namespace n_USeqAct_ToggleInput {
		constexpr auto bToggleMovement = 0x108; // uint32_t : 1
		constexpr auto bToggleTurning = 0x108; // uint32_t : 1
	}

	namespace n_UGameThirdPersonCameraMode_Default {
		constexpr auto WorstLocAimingZOffset = 0x258; // float
		constexpr auto bTemporaryOriginRotInterp = 0x25c; // uint32_t : 1
		constexpr auto TemporaryOriginRotInterpSpeed = 0x260; // float
	}

	namespace n_UMaterialExpressionStaticSwitchParameter {
		constexpr auto A = 0xdc; // FExpressionInput
		constexpr auto B = 0x110; // FExpressionInput
	}

	namespace n_UDistributionFloat {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UCombatDataRefDecorationDecal {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto DecalTexture = 0x70; // FString
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0xd0; // float
	}

	namespace n_UCombatGameTrophyTouchComponent {
		constexpr auto MinRadius = 0x250; // float
		constexpr auto MaxRadius = 0x254; // float
		constexpr auto MinDegree_XYPlane = 0x258; // float
		constexpr auto MaxDegree_XYPlane = 0x25c; // float
		constexpr auto SphereSides = 0x260; // int32_t
	}

	namespace n_UMotionBlurEffect {
		constexpr auto MaxVelocity = 0x88; // float
		constexpr auto MotionBlurAmount = 0x8c; // float
		constexpr auto FullMotionBlur = 0x90; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0x94; // float
		constexpr auto CameraTranslationThreshold = 0x98; // float
	}

	namespace n_ANxRadialCustomForceField {
		constexpr auto SelfRotationStrength = 0x2b4; // float
		constexpr auto Kernel = 0x2b8; // FPointer
	}

	namespace n_ARB_ConstraintActor {
		constexpr auto ConstraintActor1 = 0x244; // ObjectProperty
		constexpr auto ConstraintActor2 = 0x24c; // ObjectProperty
		constexpr auto TargetConstraintMesh1 = 0x254; // ComponentProperty
		constexpr auto TargetConstraintMesh2 = 0x25c; // ComponentProperty
		constexpr auto ConstraintSetup = 0x264; // ObjectProperty
		constexpr auto ConstraintInstance = 0x26c; // ObjectProperty
		constexpr auto bDisableCollision = 0x274; // uint32_t : 1
		constexpr auto bUpdateActor1RefFrame = 0x274; // uint32_t : 1
		constexpr auto bUpdateActor2RefFrame = 0x274; // uint32_t : 1
		constexpr auto PulleyPivotActor1 = 0x278; // ObjectProperty
		constexpr auto PulleyPivotActor2 = 0x280; // ObjectProperty
	}

	namespace n_UCombatDataTableRefSkill {
		constexpr auto Index = 0x6c; // int32_t
		constexpr auto CodeName = 0x70; // FString
		constexpr auto GroupCodeName = 0x80; // FString
		constexpr auto LicenseCodeName = 0x90; // FString
		constexpr auto ActiveUser = 0xa0; // int32_t
		constexpr auto Skilltype = 0xa4; // int32_t
		constexpr auto SkillCategory = 0xa8; // int32_t
		constexpr auto Cost = 0xac; // int32_t
		constexpr auto Count = 0xb0; // int32_t
		constexpr auto CoolTimeType = 0xb4; // char
		constexpr auto CoolTime = 0xb8; // int32_t
		constexpr auto ScriptFile = 0xbc; // FString
		constexpr auto HoldSkill = 0xcc; // uint32_t : 1
		constexpr auto ItemName = 0xd0; // int32_t
		constexpr auto HUDIcon = 0xd4; // FString
		constexpr auto Description = 0xe4; // int32_t
		constexpr auto ImageID = 0xe8; // int32_t
	}

}