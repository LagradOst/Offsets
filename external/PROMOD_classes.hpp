namespace off {
	constexpr auto GNames = 0x5386640;
	constexpr auto GObjects = 0x539ebc0;
	constexpr auto GWorld = 0x54d3ca0;

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_AShooterAIController {
		constexpr auto BlackboardComp = 0x328; // UBlackboardComponent*
		constexpr auto BehaviorComp = 0x330; // UBehaviorTreeComponent*
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UAkAudioEventData {
		constexpr auto MaxAttenuationRadius = 0xb8; // float
		constexpr auto IsInfinite = 0xbc; // bool
		constexpr auto MinimumDuration = 0xc0; // float
		constexpr auto MaximumDuration = 0xc4; // float
		constexpr auto LocalizedMedia = 0xc8; // TMap<FString, UAkAssetDataSwitchContainer*>
		constexpr auto PostedEvents = 0x118; // TSet<UAkAudioEvent*>
		constexpr auto UserDefinedSends = 0x168; // TSet<UAkAuxBus*>
		constexpr auto PostedTriggers = 0x1b8; // TSet<UAkTrigger*>
		constexpr auto GroupValues = 0x208; // TSet<UAkGroupValue*>
	}

	namespace n_ABombMode_Bomb {
		constexpr auto DummyRoot = 0x228; // USceneComponent*
		constexpr auto BombMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto MapIconComponent = 0x238; // UMapIconComponent*
		constexpr auto DefuseBox = 0x240; // FBox
		constexpr auto DetonateEffect = 0x260; // UParticleSystem*
		constexpr auto TeamAllegiance = 0x268; // int32_t
		constexpr auto Zone = 0x270; // ABombMode_Zone*
		constexpr auto Armed = 0x278; // bool
		constexpr auto Fuse = 0x27c; // float
		constexpr auto IsBeingDefused = 0x280; // bool
		constexpr auto Defuser = 0x288; // ABombPlayerState*
		constexpr auto Planter = 0x290; // AController*
		constexpr auto DamageFalloff = 0x298; // UCurveFloat*
		constexpr auto WorldMarkerComponent = 0x2a0; // UWorldMarkerComponent*
		constexpr auto DefaultAkComponent = 0x2b0; // UAkComponent*
		constexpr auto TickingEvent = 0x2b8; // UAkAudioEvent*
		constexpr auto StopTickingEvent = 0x2c0; // UAkAudioEvent*
		constexpr auto bAttackersSeeBombIcon = 0x2c8; // bool
		constexpr auto bDefendersSeeBombIcon = 0x2c9; // bool
		constexpr auto bCanBeSeenByDefender = 0x2ca; // bool
		constexpr auto MaxFuse = 0x2cc; // float
		constexpr auto bDrawDebugDefuseArea = 0x2f8; // bool
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UApply-Legend-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image_405 = 0x288; // UImage*
		constexpr auto Wish-Button = 0x290; // UButton*
		constexpr auto ButtonClicked = 0x298; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UPFGroupManager {
		constexpr auto GroupInvitationEntityIds = 0x28; // TArray<FString>
		constexpr auto GroupApplicantEntityIds = 0x38; // TArray<FPFPlayerId>
		constexpr auto GroupBlocksEntityIds = 0x48; // TArray<FPFPlayerId>
		constexpr auto GroupInvitesEntityIds = 0x58; // TArray<FPFPlayerId>
		constexpr auto GroupMembersEntityIds = 0x68; // TArray<FPFPlayerId>
		constexpr auto SingleEntityMembershipInfo = 0x78; // TArray<FPFSingleEntityMembershipInfo>
		constexpr auto UpdateUIEvent = 0x88; // FMulticastInlineDelegate
		constexpr auto PlayFabSubsystem = 0x98; // UPlayFabSubsystem*
		constexpr auto PlayerIdCache = 0xb0; // UPFPlayerIdCache*
		constexpr auto bIsServer = 0xb8; // bool
		constexpr auto bGroupCreated = 0xb9; // bool
	}

	namespace n_UNUIBreadCrumb {
		constexpr auto Name = 0x260; // FString
	}

	namespace n_UWBP_ProneBlock_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x268; // UWidgetAnimation*
		constexpr auto Intro = 0x270; // UWidgetAnimation*
		constexpr auto descriptiontext = 0x278; // UTextBlock*
		constexpr auto descriptiontextBLUE = 0x280; // UTextBlock*
		constexpr auto descriptiontextRED = 0x288; // UTextBlock*
		constexpr auto bIsProneBlocked = 0x290; // bool
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UBP_StunnedCameraModifier_C {
		constexpr auto PostProcessMaterial = 0x48; // UMaterialInstanceDynamic*
		constexpr auto Strength = 0x50; // float
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UNUISettingsMenuHeader {
		constexpr auto SecretSetting = 0x260; // bool
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x440; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x448; // bool
		constexpr auto bFilledSpline = 0x449; // bool
		constexpr auto AssociatedSpline = 0x450; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x458; // int32_t
		constexpr auto SegmentOverlapAmount = 0x45c; // float
		constexpr auto TerrainColor = 0x460; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x470; // int32_t
		constexpr auto SpriteCollisionDomain = 0x474; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x478; // float
		constexpr auto CachedBodySetup = 0x480; // UBodySetup*
	}

	namespace n_AVaultVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto ArrowComponent = 0x228; // UArrowComponent*
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMedal25BombDOM {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x620; // APlayerController*
		constexpr auto OriginalPlayer = 0x628; // UPlayer*
		constexpr auto SpeedScale = 0x630; // float
		constexpr auto InitialMaxSpeed = 0x634; // float
		constexpr auto InitialAccel = 0x638; // float
		constexpr auto InitialDecel = 0x63c; // float
	}

	namespace n_UNUI_RightClickableButton {
		constexpr auto OnRightClick = 0x428; // FMulticastInlineDelegate
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UBattalionPathFollowingComponent {
		constexpr auto SplinePath = 0x268; // USplineComponent*
	}

	namespace n_ADOMGameMode {
		constexpr auto CaptureTime = 0x878; // float
		constexpr auto CooldownTime = 0x87c; // float
		constexpr auto ScoreInterval = 0x880; // float
		constexpr auto AllyZoneSpawnWeighting = 0x884; // float
		constexpr auto AllyZoneSpawnDistance = 0x888; // float
		constexpr auto AllyZoneSpawnExponent = 0x88c; // float
		constexpr auto EnemyZoneSpawnWeighting = 0x890; // float
		constexpr auto EnemyZoneSpawnDistance = 0x894; // float
		constexpr auto EnemyZoneSpawnExponent = 0x898; // float
		constexpr auto CaptureScore = 0x89c; // int32_t
		constexpr auto DOMGameState = 0x8a0; // ADOMGameState*
		constexpr auto ZoneClass = 0x8a8; // UObject*
		constexpr auto EnemyCapturedA_Event = 0x8c0; // FNationSound
		constexpr auto EnemyCapturedB_Event = 0x8e0; // FNationSound
		constexpr auto EnemyCapturedC_Event = 0x900; // FNationSound
		constexpr auto EnemyTakingA_Event = 0x920; // FNationSound
		constexpr auto EnemyTakingB_Event = 0x940; // FNationSound
		constexpr auto EnemyTakingC_Event = 0x960; // FNationSound
		constexpr auto CapturedA_Event = 0x980; // FNationSound
		constexpr auto CapturedB_Event = 0x9a0; // FNationSound
		constexpr auto CapturedC_Event = 0x9c0; // FNationSound
		constexpr auto TakingA_Event = 0x9e0; // FNationSound
		constexpr auto TakingB_Event = 0xa00; // FNationSound
		constexpr auto TakingC_Event = 0xa20; // FNationSound
		constexpr auto EventControlAllObjectives = 0xa40; // UAkAudioEvent*
		constexpr auto EventGettingDominated = 0xa48; // UAkAudioEvent*
		constexpr auto EventLostA = 0xa50; // UAkAudioEvent*
		constexpr auto EventLostB = 0xa58; // UAkAudioEvent*
		constexpr auto EventLostC = 0xa60; // UAkAudioEvent*
		constexpr auto EventTakenA = 0xa68; // UAkAudioEvent*
		constexpr auto EventTakenB = 0xa70; // UAkAudioEvent*
		constexpr auto EventTakenC = 0xa78; // UAkAudioEvent*
		constexpr auto EventObjectiveTakenSuccess = 0xa80; // UAkAudioEvent*
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_ALadder {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto BoxComponent = 0x228; // UBoxComponent*
		constexpr auto ArrowComponent = 0x230; // UArrowComponent*
		constexpr auto NavLinkComponent = 0x238; // UNavLinkComponent*
		constexpr auto Steps = 0x250; // int32_t
		constexpr auto Stride = 0x254; // float
		constexpr auto LadderHeight = 0x258; // float
		constexpr auto NavLinkOffsetBottom = 0x25c; // FVector
		constexpr auto NavLinkOffsetTop = 0x268; // FVector
		constexpr auto LadderType = 0x274; // EPhysicalSurface
	}

	namespace n_UMedalAggressor {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UWBP_InteractionEvent_C {
		constexpr auto ProgressEventImage = 0x268; // UImage*
	}

	namespace n_UWBP_WeaponPickup_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x268; // UWidgetAnimation*
		constexpr auto descriptiontext_2 = 0x270; // UTextBlock*
		constexpr auto GunIcon_BLUE = 0x278; // UImage*
		constexpr auto GunIcon_RED = 0x280; // UImage*
		constexpr auto GunName = 0x288; // UTextBlock*
		constexpr auto GunName_BLUE = 0x290; // UTextBlock*
		constexpr auto GunName_RED = 0x298; // UTextBlock*
		constexpr auto GunPickupIcon = 0x2a0; // UImage*
		constexpr auto IB_Root = 0x2a8; // UInvalidationBox*
		constexpr auto PlatformKeyImage = 0x2b0; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_2 = 0x2b8; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_3 = 0x2c0; // UPlatformKeyImage_C*
		constexpr auto PressOrHoldText = 0x2c8; // UTextBlock*
		constexpr auto WholeWidgetCanvasPanel = 0x2d0; // UCanvasPanel*
		constexpr auto HUD Colour = 0x2d8; // UHUDTextDataAsset*
		constexpr auto HUDColour = 0x2e0; // UHUDTextDataAsset*
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_ABattalionCharacter {
		constexpr auto LOSTraceBlockingObjects = 0x4c8; // TArray<ECollisionChannel>
		constexpr auto bHasFireHeld = 0x4e8; // bool
		constexpr auto JoystickInputMaxDuration = 0x4f4; // float
		constexpr auto TimerHandle_MeleeEquipHoldTimer = 0x500; // FTimerHandle
		constexpr auto TimerHandle_ControllerSwapWeaponTimer = 0x508; // FTimerHandle
		constexpr auto TimerHandle_GrenadeThrowFullyEndedTimer = 0x510; // FTimerHandle
		constexpr auto bMeleeHoldEquipComplete = 0x518; // bool
		constexpr auto bWeaponSwapEquipComplete = 0x519; // bool
		constexpr auto LastSetSurface = 0x520; // FString
		constexpr auto TimeCycleWeaponStarted = 0x538; // float
		constexpr auto bWantsToADSNewWeapon = 0x53c; // bool
		constexpr auto GrenadeClass = 0x550; // ABattalionGrenade*
		constexpr auto SmokeGrenadeClass = 0x558; // ABattalionSmokeGrenade*
		constexpr auto IncendiaryGrenadeClass = 0x560; // ABattalionIncendiaryGrenade*
		constexpr auto FlashGrenadeClass = 0x568; // ABattalionFlashGrenade*
		constexpr auto StunGrenadeClass = 0x570; // ABattalionStunGrenade*
		constexpr auto USGrenadePickupClass = 0x578; // ABattalionGrenadePickup*
		constexpr auto DEGrenadePickupClass = 0x580; // ABattalionGrenadePickup*
		constexpr auto RUSGrenadePickupClass = 0x588; // ABattalionGrenadePickup*
		constexpr auto BRITGrenadePickupClass = 0x590; // ABattalionGrenadePickup*
		constexpr auto SpecialGrenadePickupClass = 0x598; // ABattalionGrenadePickup*
		constexpr auto KnifeTestProperty = 0x5a0; // TArray<FString>
		constexpr auto RayStartOffsetForward = 0x5b0; // float
		constexpr auto DefaultCullVolumeWeaponScale = 0x5b4; // FVector
		constexpr auto DefaultCullVolumeHeadScale = 0x5c0; // FVector
		constexpr auto DefaultCullVolumeBodyScale = 0x5cc; // FVector
		constexpr auto MeshDynamicMaterials = 0x650; // TArray<UMaterialInstanceDynamic*>
		constexpr auto HeadMeshDynamicMaterials = 0x660; // TArray<UMaterialInstanceDynamic*>
		constexpr auto WeaponDynamicMaterials = 0x670; // TArray<UMaterialInstanceDynamic*>
		constexpr auto KnifeDamageType = 0x680; // UDamageType*
		constexpr auto QuickMeleeDamageType = 0x688; // UDamageType*
		constexpr auto FallDamageType = 0x690; // UDamageType*
		constexpr auto FireDamageType = 0x698; // UDamageType*
		constexpr auto FallDamageMinSpeed = 0x6a0; // float
		constexpr auto FallDamageMaxSpeed = 0x6a4; // float
		constexpr auto FallDamageMinDamage = 0x6a8; // float
		constexpr auto FallDamageMaxDamage = 0x6ac; // float
		constexpr auto WantedWeaponSlot = 0x6b0; // int32_t
		constexpr auto PreviousWeaponSlot = 0x6b4; // int32_t
		constexpr auto NadeDamageType = 0x6b8; // UDamageType*
		constexpr auto BombDamageType = 0x6c0; // UDamageType*
		constexpr auto VoiceOverDistance = 0x6c8; // float
		constexpr auto VoiceOverFriendlyDistance = 0x6cc; // float
		constexpr auto VoiceLinePlayedIncrementSeconds = 0x6d0; // float
		constexpr auto VoiceLineDeathScreamDistance = 0x6d4; // float
		constexpr auto Grenades = 0x6e0; // TArray<EGrenadeType>
		constexpr auto SpecialGrenades = 0x6f0; // TArray<ESpecialGrenadeType>
		constexpr auto SniperCrosshairTexture = 0x700; // UTexture2D*
		constexpr auto SensitivityMultiplier = 0x708; // float
		constexpr auto UnScopeVelocityThreshold = 0x70c; // float
		constexpr auto bIsPerformingLeftHandAction = 0x710; // bool
		constexpr auto bTargetingBlocked = 0x711; // bool
		constexpr auto Mesh1PSceneComponent = 0x718; // USceneComponent*
		constexpr auto AudioPassByComponent = 0x720; // UAudioPassByComponent*
		constexpr auto ProneCapsuleComponent = 0x728; // UCapsuleComponent*
		constexpr auto PlayerName = 0x730; // UWidgetComponent*
		constexpr auto PlayerNameInstance = 0x738; // UHUDPlayerName*
		constexpr auto Mesh1P = 0x740; // UFOVSkeletalMeshComponent*
		constexpr auto Mesh1PSocketMesh = 0x748; // UFOVSkeletalMeshComponent*
		constexpr auto Mesh1PSocketMeshAlternate = 0x750; // UFOVSkeletalMeshComponent*
		constexpr auto Mesh3PSocketMesh = 0x758; // USkeletalMeshComponent*
		constexpr auto Mesh3PSocketMeshAlternate = 0x760; // USkeletalMeshComponent*
		constexpr auto PlayerSceneCapture2D = 0x768; // UPlayerSceneCaptureComponent2D*
		constexpr auto WeaponAttachPoint = 0x770; // FName
		constexpr auto MeshHead = 0x778; // USkeletalMeshComponent*
		constexpr auto MeshBomb = 0x780; // USkeletalMeshComponent*
		constexpr auto EmergencyStopper = 0x788; // FWeaponStopper
		constexpr auto TeamOutfits = 0x798; // TArray<FTeamOutfit>
		constexpr auto Inventory = 0x7a8; // TArray<ABattalionWeapon*>
		constexpr auto SmokeGrenadeMesh = 0x7b8; // USkeletalMesh*
		constexpr auto SmokeGrenadeMeshTP = 0x7c0; // USkeletalMesh*
		constexpr auto SmokeGrenadeMeshClass = 0x7c8; // UObject*
		constexpr auto AmericanGrenadeMesh = 0x7d0; // USkeletalMesh*
		constexpr auto AmericanGrenadeMeshTP = 0x7d8; // USkeletalMesh*
		constexpr auto AmericanGrenadeMeshClass = 0x7e0; // UObject*
		constexpr auto GermanGrenadeMesh = 0x7e8; // USkeletalMesh*
		constexpr auto GermanGrenadeMeshTP = 0x7f0; // USkeletalMesh*
		constexpr auto GermanGrenadeMeshClass = 0x7f8; // UObject*
		constexpr auto RussianGrenadeMesh = 0x800; // USkeletalMesh*
		constexpr auto RussianGrenadeMeshTP = 0x808; // USkeletalMesh*
		constexpr auto BritishGrenadeMesh = 0x810; // USkeletalMesh*
		constexpr auto BritishGrenadeMeshTP = 0x818; // USkeletalMesh*
		constexpr auto RussianGrenadeMeshClass = 0x820; // UObject*
		constexpr auto BritishGrenadeMeshClass = 0x828; // UObject*
		constexpr auto CurrentWeapon = 0x830; // ABattalionWeapon*
		constexpr auto NearPickupWeapon = 0x838; // AActor*
		constexpr auto bShouldAutoPickupAmmo = 0x840; // bool
		constexpr auto LastTakeHitInfo = 0x848; // FTakeHitInfo
		constexpr auto TargetingSpeedModifier = 0x980; // float
		constexpr auto bPendingTargeting = 0x985; // char : 1
		constexpr auto bPendingTargetingToggled = 0x985; // char : 1
		constexpr auto bHorizontalSpeedEnabled = 0x985; // char : 1
		constexpr auto bADSState = 0x986; // bool
		constexpr auto bIsTargeting = 0x987; // char : 1
		constexpr auto TargetingTransition = 0x988; // float
		constexpr auto TargetingTransitionProgress = 0x98c; // float
		constexpr auto TargetingSlowTransitionSpeed = 0x994; // float
		constexpr auto TargetingAnimProgress = 0x998; // float
		constexpr auto VelocityForAnim = 0x99c; // FVector
		constexpr auto LastInAirVelocityForAnim = 0x9a8; // FVector
		constexpr auto LastVelocityRotationForAnim = 0x9b4; // FRotator
		constexpr auto JumpedForAnim = 0x9c0; // bool
		constexpr auto CurrentLean = 0x9c4; // float
		constexpr auto LeanLeftTarget = 0x9c8; // float
		constexpr auto LeanRightTarget = 0x9cc; // float
		constexpr auto LeanCheckDistance = 0x9d0; // float
		constexpr auto LeanDistanceModifier = 0x9d4; // float
		constexpr auto RunningSpeedModifier = 0x9d8; // float
		constexpr auto WeaponPickupDistance = 0x9dc; // float
		constexpr auto LeaningSpeedModifier = 0x9e0; // float
		constexpr auto LeaningSpeedADSModifier = 0x9e4; // float
		constexpr auto LeanADSWeapRollCurve = 0x9e8; // UCurveFloat*
		constexpr auto LeanExtent = 0x9f0; // float
		constexpr auto BattEyeHeight = 0x9f4; // float
		constexpr auto BattCrouchedEyeHeight = 0x9f8; // float
		constexpr auto BattPronedEyeHeight = 0x9fc; // float
		constexpr auto HoldTimeToProne = 0xa0c; // float
		constexpr auto HoldTimeToSwitchWeapon = 0xa18; // float
		constexpr auto WantsToLeanRight = 0xa1c; // char : 1
		constexpr auto WantsToLeanLeft = 0xa1c; // char : 1
		constexpr auto ViewRecoilSpeed = 0xa28; // FVector
		constexpr auto ViewRecoil = 0xa34; // FVector
		constexpr auto ViewRecoilCharacterClamp = 0xa4c; // FVector
		constexpr auto ViewRecoilPermanentPercentage = 0xa58; // float
		constexpr auto ViewSwayPitchClamp = 0xa9c; // FVector2D
		constexpr auto ViewSwayYawClamp = 0xaa4; // FVector2D
		constexpr auto bHasFinishedDeathAnimation = 0xad4; // bool
		constexpr auto FlinchCurve = 0xad8; // UCurveFloat*
		constexpr auto RedFlinchCurve = 0xae0; // UCurveFloat*
		constexpr auto FlinchHeadScalar = 0xae8; // float
		constexpr auto ProneToCrouchInterp = 0xb08; // UCurveFloat*
		constexpr auto CrouchToProneInterp = 0xb10; // UCurveFloat*
		constexpr auto ProneRotationMaxPitchClamp = 0xb20; // float
		constexpr auto ProneRotationMinPitchClamp = 0xb24; // float
		constexpr auto StandingRotationMaxPitchClamp = 0xb28; // float
		constexpr auto StandingRotationMinPitchClamp = 0xb2c; // float
		constexpr auto GrenadePrepTime = 0xb40; // float
		constexpr auto GrenadeThrowTime = 0xb44; // float
		constexpr auto GrenadeThrowAnimLength = 0xb48; // float
		constexpr auto GrenadeWeaponRequipTime = 0xb4c; // float
		constexpr auto bMeleeAttacking = 0xb54; // char : 1
		constexpr auto KnifeInfo = 0xb58; // FKnifeAnimationInfo
		constexpr auto bMeleeAttackingAsPrimary = 0xb5c; // bool
		constexpr auto KnifeAnimLength = 0xb60; // float
		constexpr auto KnifeAttackTime = 0xb64; // float
		constexpr auto KnifeCancelTime = 0xb68; // float
		constexpr auto bGrenadePrepared = 0xb6c; // bool
		constexpr auto bGrenadeThrowing = 0xb70; // uint32_t
		constexpr auto bGrenadeHeld = 0xb74; // char
		constexpr auto bHasBomb = 0xb75; // char
		constexpr auto MeshMIDs = 0xb80; // TArray<UMaterialInstanceDynamic*>
		constexpr auto Mesh1PMID = 0xb90; // UMaterialInstanceDynamic*
		constexpr auto LadderAnim = 0xb98; // FSpecialAnim
		constexpr auto GrenadeAnim = 0xbb8; // FCharacterAnim
		constexpr auto GermanGrenadeAnim = 0xbc8; // FCharacterAnim
		constexpr auto RussianGrenadeAnim = 0xbd8; // FCharacterAnim
		constexpr auto BritishGrenadeAnim = 0xbe8; // FCharacterAnim
		constexpr auto SmokeGrenadeAnim = 0xbf8; // FCharacterAnim
		constexpr auto ActiveGrenadePrepareCameraSway = 0xc28; // UCurveVector*
		constexpr auto ActiveGrenadeThrowCameraSway = 0xc30; // UCurveVector*
		constexpr auto BombPlantedAnim = 0xc38; // FCharacterAnim
		constexpr auto BombDefusedAnim = 0xc48; // FCharacterAnim
		constexpr auto KnifeMesh = 0xc58; // USkeletalMesh*
		constexpr auto KnifeMeshClass = 0xc60; // UObject*
		constexpr auto KnifeAnim = 0xc68; // FCharacterAnim
		constexpr auto EquippedKnifeAnim = 0xc78; // FCharacterAnim
		constexpr auto KnifeAnimSway = 0xc88; // UCurveVector*
		constexpr auto KnifeAnimSwayTranslation = 0xc90; // UCurveVector*
		constexpr auto DeathAnim = 0xc98; // UAnimMontage*
		constexpr auto FlashedMontagePtr = 0xca0; // UAnimMontage*
		constexpr auto DeathAnims = 0xca8; // TArray<FDeathAnim>
		constexpr auto DeathGrenadeAnims = 0xcb8; // TArray<FDeathAnim>
		constexpr auto DeathHeadshotAnims = 0xcc8; // TArray<FDeathAnim>
		constexpr auto DeathPelvisAnims = 0xcd8; // TArray<FDeathAnim>
		constexpr auto DeathStomachAnims = 0xce8; // TArray<FDeathAnim>
		constexpr auto DeathNeckAnims = 0xcf8; // TArray<FDeathAnim>
		constexpr auto DeathBehindAnims = 0xd08; // TArray<FDeathAnim>
		constexpr auto ThrowingAxeSound = 0xd68; // UAkAudioEvent*
		constexpr auto DefaultAkComponent = 0xd70; // UAkComponent*
		constexpr auto DamageFromBurningSound = 0xd78; // UAkAudioEvent*
		constexpr auto BulletPassByEvent = 0xd80; // UAkAudioEvent*
		constexpr auto BulletPassByEvent_Sniper = 0xd88; // UAkAudioEvent*
		constexpr auto DeathSound = 0xd90; // UAkAudioEvent*
		constexpr auto GrenadePickedUpEvent = 0xd98; // UAkAudioEvent*
		constexpr auto SpecialGrenadePickedUpEvent = 0xda0; // UAkAudioEvent*
		constexpr auto WeaponPickedUpEvent = 0xda8; // UAkAudioEvent*
		constexpr auto HurtmarkerSoundEvent = 0xdb0; // UAkAudioEvent*
		constexpr auto HurtMarkerHeadshotSound = 0xdb8; // UAkAudioEvent*
		constexpr auto DamageFromFallSoftSound = 0xdc0; // UAkAudioEvent*
		constexpr auto DamageFromFallHardSound = 0xdc8; // UAkAudioEvent*
		constexpr auto HurtmarkerKnifeSoundEvent = 0xdd0; // UAkAudioEvent*
		constexpr auto VaultHigh = 0xdd8; // UAnimMontage*
		constexpr auto VaultMedium = 0xde0; // UAnimMontage*
		constexpr auto VaultLow = 0xde8; // UAnimMontage*
		constexpr auto CrouchToStandingSound = 0xdf0; // UAkAudioEvent*
		constexpr auto StandingToCrouchSound = 0xdf8; // UAkAudioEvent*
		constexpr auto StandingToProneSound = 0xe00; // UAkAudioEvent*
		constexpr auto ProneToStandingSound = 0xe08; // UAkAudioEvent*
		constexpr auto CrouchToProneSound = 0xe10; // UAkAudioEvent*
		constexpr auto ProneToCrouchSound = 0xe18; // UAkAudioEvent*
		constexpr auto VaultSound = 0xe20; // UAkAudioEvent*
		constexpr auto DeathBloodFX = 0xe28; // UParticleSystem*
		constexpr auto HitWarpFX = 0xe30; // UParticleSystem*
		constexpr auto DeathBloodFXRotator = 0xe38; // FRotator
		constexpr auto DeathBloodFXScalar = 0xe44; // FVector
		constexpr auto RespawnFX = 0xe50; // UParticleSystem*
		constexpr auto RespawnSound = 0xe58; // UAkAudioEvent*
		constexpr auto LowHealthLoopSound = 0xe60; // UAkAudioEvent*
		constexpr auto LowHealthSoundStop = 0xe68; // UAkAudioEvent*
		constexpr auto LowHealthVolumeParam = 0xe70; // FName
		constexpr auto LowHealthGasp = 0xe80; // UAkAudioEvent*
		constexpr auto HealthRegeneratedSound = 0xe88; // UAkAudioEvent*
		constexpr auto HealthStartedRegeneratingSound = 0xe90; // UAkAudioEvent*
		constexpr auto RunLoopSound = 0xe98; // UAkAudioEvent*
		constexpr auto RunStopSound = 0xea0; // UAkAudioEvent*
		constexpr auto TargetingSound = 0xea8; // UAkAudioEvent*
		constexpr auto TargetingOutSound = 0xeb0; // UAkAudioEvent*
		constexpr auto StopCriticalHealthSounds = 0xeb8; // UAkAudioEvent*
		constexpr auto ActionFootstep = 0xec0; // UAkAudioEvent*
		constexpr auto ActionLadderFootstep = 0xec8; // UAkAudioEvent*
		constexpr auto ActionLadderFootstepMetal = 0xed0; // UAkAudioEvent*
		constexpr auto ActionLand = 0xed8; // UAkAudioEvent*
		constexpr auto ActionJump1p = 0xee0; // UAkAudioEvent*
		constexpr auto ActionJump3p = 0xee8; // UAkAudioEvent*
		constexpr auto HitmarkerSound = 0xef0; // UAkAudioEvent*
		constexpr auto HitmarkerKnifeSound = 0xef8; // UAkAudioEvent*
		constexpr auto HitmarkerHeadshotSound = 0xf00; // UAkAudioEvent*
		constexpr auto HitmarkerHeadshotKillSound = 0xf08; // UAkAudioEvent*
		constexpr auto MeleeDistance = 0xf10; // float
		constexpr auto QuickMeleeDamage = 0xf14; // float
		constexpr auto bDebugMelee = 0xf18; // bool
		constexpr auto MeleeProneDistance = 0xf40; // float
		constexpr auto ZombieAttackVocal = 0xf48; // UAkAudioEvent*
		constexpr auto ZombieAttackFlesh = 0xf50; // UAkAudioEvent*
		constexpr auto SurvivorKillConfirmed = 0xf58; // UAkAudioEvent*
		constexpr auto WeaponPickUpSound = 0xf60; // UAkAudioEvent*
		constexpr auto StartSlideLoop = 0xf68; // UAkAudioEvent*
		constexpr auto StopSlideLoop = 0xf70; // UAkAudioEvent*
		constexpr auto KillConfirmedSound = 0xf80; // UAkAudioEvent*
		constexpr auto KillConfirmedCollateralSound = 0xf88; // UAkAudioEvent*
		constexpr auto HeadshotKillConfirmedSound = 0xf90; // UAkAudioEvent*
		constexpr auto StartBombPlantSound = 0xf98; // UAkAudioEvent*
		constexpr auto StartDefusePlantSound = 0xfa0; // UAkAudioEvent*
		constexpr auto FallingSound = 0xfa8; // UAkAudioEvent*
		constexpr auto DeathScream = 0xfb0; // UAkAudioEvent*
		constexpr auto StopFallingEvent = 0xfb8; // UAkAudioEvent*
		constexpr auto FlashStartSound = 0xfc0; // UAkAudioEvent*
		constexpr auto FlashStopSound = 0xfc8; // UAkAudioEvent*
		constexpr auto FirstPersonWalkTriggerSpeedDivisor = 0xfd0; // float
		constexpr auto FirstPersonLadderWalkTriggerSpeedDivisor = 0xfd4; // float
		constexpr auto WalkGunBobRotation = 0xfe0; // UCurveVector*
		constexpr auto WalkGunBobRotationScale = 0xfe8; // float
		constexpr auto WalkGunBobRotationSpeed = 0xfec; // float
		constexpr auto ScreenSpaceWalkGunBobLocation = 0xff0; // FVector
		constexpr auto HipStanceOffsetCrouch = 0x10b0; // FVector
		constexpr auto HipStanceOffsetProne = 0x10bc; // FVector
		constexpr auto LeftFootPlacementTime = 0x10c8; // float
		constexpr auto RightFootPlacementTime = 0x10cc; // float
		constexpr auto LeftFootSecondaryPlacementTime = 0x10d0; // float
		constexpr auto RightFootSecondaryPlacementTime = 0x10d4; // float
		constexpr auto SprintScreenBob = 0x10d8; // UCurveVector*
		constexpr auto SprintScreenBobRotationScale = 0x10e0; // float
		constexpr auto SprintScreenBobRotationSpeed = 0x10e4; // float
		constexpr auto CameraAnimLerpSpeed = 0x1114; // float
		constexpr auto JumpLandScreenBob = 0x1118; // UCurveVector*
		constexpr auto JumpLandGunBob = 0x1120; // UCurveVector*
		constexpr auto JumpLandBobMinScale = 0x1128; // float
		constexpr auto JumpLandBobMaxScale = 0x112c; // float
		constexpr auto JumpLandBobMinSpeed = 0x1130; // float
		constexpr auto JumpLandBobMaxSpeed = 0x1134; // float
		constexpr auto ProxyPlayerState = 0x1168; // ABattalionPlayerState*
		constexpr auto EnemyTeamFPPMesh = 0x1170; // USkeletalMesh*
		constexpr auto EnemyTeamTPPMesh = 0x1178; // USkeletalMesh*
		constexpr auto EnemyTeamTPPHeadMesh = 0x1180; // USkeletalMesh*
		constexpr auto FriendlyTeamFPPMesh = 0x1188; // USkeletalMesh*
		constexpr auto FriendlyTeamTPPMesh = 0x1190; // USkeletalMesh*
		constexpr auto FriendlyTeamTPPHeadMesh = 0x1198; // USkeletalMesh*
		constexpr auto NormalPhysicsAsset = 0x11a8; // UPhysicsAsset*
		constexpr auto RagdollPhysicsAsset = 0x11b0; // UPhysicsAsset*
		constexpr auto MassiveDamageTypes = 0x1228; // TArray<UDamageType*>
		constexpr auto KillAbberationCurve = 0x1250; // UCurveFloat*
		constexpr auto DefaultPostProcessSettings = 0x1260; // FPostProcessSettings
		constexpr auto CurrentPostProcessSettings = 0x17b0; // FPostProcessSettings
		constexpr auto QuickReloadTime = 0x1d00; // float
		constexpr auto QuickReloadSound = 0x1d08; // UAkAudioEvent*
		constexpr auto QuickFireGlitchTime = 0x1d10; // float
		constexpr auto QuickFireGlitchSound = 0x1d18; // UAkAudioEvent*
		constexpr auto MovementStoppedByFire = 0x1d20; // bool
		constexpr auto FlashTimelinePtr = 0x1da0; // UTimelineComponent*
		constexpr auto CurrentViewerPC = 0x1db0; // ABattalionPlayerControllerGMBase*
		constexpr auto bHealthRegenerating = 0x1db8; // bool
		constexpr auto bIsDying = 0x1dbc; // char : 1
		constexpr auto Health = 0x1dc0; // float
		constexpr auto LastHitTime = 0x1dc4; // float
		constexpr auto LastWeaponFireTime = 0x1dc8; // float
		constexpr auto bIsFlashed = 0x1dcc; // bool
		constexpr auto FlashCurvePtr = 0x1dd0; // UCurveFloat*
		constexpr auto CameraShakePtr = 0x1dd8; // UCameraShakeBase*
		constexpr auto FlashMeterialParameterCollectionPtr = 0x1de0; // UMaterialParameterCollection*
		constexpr auto WhiteScreenWeightParameterName = 0x1de8; // FName
		constexpr auto ScreenCaptureWeightParameterName = 0x1df0; // FName
		constexpr auto bPressedVault = 0x1e14; // char : 1
		constexpr auto ClientMaxCorpsesOverTenPlayers = 0x1e18; // int32_t
		constexpr auto ClientMaxCorpsesUnderTenPlayers = 0x1e1c; // int32_t
		constexpr auto ClientCorpseTimeout = 0x1e20; // float
		constexpr auto ServerCorpseTimeout = 0x1e24; // float
		constexpr auto CharacterType = 0x1e28; // ECharacterTeam
		constexpr auto CurrentClass = 0x1e29; // EClassName
		constexpr auto Nation = 0x1e2a; // ENationType
		constexpr auto CharacterGearSetType = 0x1e2c; // int32_t
		constexpr auto PossesedAliveTime = 0x1e30; // float
		constexpr auto HoldingWeaponTime = 0x1e34; // float
		constexpr auto LadderForAnimation = 0x1e38; // ALadder*
		constexpr auto DirectionToDamage = 0x1e40; // FVector
		constexpr auto CachedController = 0x1e50; // AController*
		constexpr auto Assisters = 0x1e58; // TMap<AController*, float>
		constexpr auto CurrentStance = 0x1ed0; // EStanceType
		constexpr auto bIsCriticalHealth = 0x1ef8; // bool
		constexpr auto CriticalHealth = 0x1f04; // float
		constexpr auto HealthRegenBelowCritical = 0x1f08; // FHealthRegenEvent
		constexpr auto HealthRegenAboveCritical = 0x1f24; // FHealthRegenEvent
		constexpr auto bCriticalRegen = 0x1f40; // bool
		constexpr auto HealthRegenAmount = 0x1f44; // float
		constexpr auto HealthRegenDelay = 0x1f48; // float
		constexpr auto HealthRegenSpeed = 0x1f4c; // float
		constexpr auto bUseDeathAnim = 0x1f50; // bool
		constexpr auto CriticalHealthLoop = 0x1f58; // UAkAudioEvent*
		constexpr auto CriticalHealthLoopReset = 0x1f60; // UAkAudioEvent*
		constexpr auto CritcalHealthRegenerated = 0x1f68; // UAkAudioEvent*
		constexpr auto bLocalOutline = 0x1f70; // bool
		constexpr auto bForceNoOutline = 0x1f79; // bool
		constexpr auto LastDamagedPlayer = 0x1f90; // ABattalionCharacter*
		constexpr auto InfectedPostProcessSettings = 0x1fa0; // FPostProcessSettings
		constexpr auto InfectedFace = 0x24f0; // UMaterialInstance*
		constexpr auto InfectedBody = 0x24f8; // UMaterialInstance*
		constexpr auto InfectedPlayIdleLoop_FP = 0x2500; // UAkAudioEvent*
		constexpr auto InfectedPlayIdleLoop_3P = 0x2508; // UAkAudioEvent*
		constexpr auto InfectedStopIdleLoop_FP = 0x2510; // UAkAudioEvent*
		constexpr auto InfectedStopIdleLoop_3P = 0x2518; // UAkAudioEvent*
		constexpr auto InfectedAttackVocal_FP = 0x2520; // UAkAudioEvent*
		constexpr auto InfectedAttackVocal_3P = 0x2528; // UAkAudioEvent*
		constexpr auto InfectedDeathScream = 0x2530; // UAkAudioEvent*
		constexpr auto AutoAimInnerRadius = 0x2548; // float
		constexpr auto AutoAimOuterRadius = 0x254c; // float
		constexpr auto AutoAimInnerRadiusCrouching = 0x2550; // float
		constexpr auto AutoAimOuterRadiusCrouching = 0x2554; // float
		constexpr auto AutoAimInnerRadiusProne = 0x2558; // float
		constexpr auto AutoAimOuterRadiusProne = 0x255c; // float
		constexpr auto AutoAimTargetInnerRadiusVsDistanceCurve = 0x2560; // UCurveFloat*
		constexpr auto AutoAimTargetOuterRadiusVsDistanceCurve = 0x2568; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveVertical = 0x2570; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveHorizontal = 0x2578; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveADSVertical = 0x2580; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveADSHorizontal = 0x2588; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveScopedVertical = 0x2590; // UCurveFloat*
		constexpr auto JoyStickAccelerationCurveScopedHorizontal = 0x2598; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurve = 0x25a0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurvePrecision = 0x25a8; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveFocus = 0x25b0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScoped = 0x25b8; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScopedPrecision = 0x25c0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScopedFocus = 0x25c8; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveADS = 0x25d0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveADSPrecision = 0x25d8; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveADSFocus = 0x25e0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScopedADS = 0x25e8; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScopedADSPrecision = 0x25f0; // UCurveFloat*
		constexpr auto AutoAimFollowDistanceCurveScopedADSFocus = 0x25f8; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveHorizontal = 0x2600; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveHorizontalPrecision = 0x2608; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveHorizontalFocus = 0x2610; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveVertical = 0x2618; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveVerticalPrecision = 0x2620; // UCurveFloat*
		constexpr auto AutoAimTargetStrengthCurveVerticalFocus = 0x2628; // UCurveFloat*
		constexpr auto AutoAimTreacleHipCurveHorizontal = 0x2630; // UCurveFloat*
		constexpr auto AutoAimTreacleHipCurveHorizontalPrecision = 0x2638; // UCurveFloat*
		constexpr auto AutoAimTreacleHipCurveHorizontalFocus = 0x2640; // UCurveFloat*
		constexpr auto AutoAimTreacleADSCurveHorizontal = 0x2648; // UCurveFloat*
		constexpr auto AutoAimTreacleADSCurveHorizontalPrecision = 0x2650; // UCurveFloat*
		constexpr auto AutoAimTreacleADSCurveHorizontalFocus = 0x2658; // UCurveFloat*
		constexpr auto AutoAimTreacleScopeCurveHorizontal = 0x2660; // UCurveFloat*
		constexpr auto AutoAimTreacleScopeCurveHorizontalPrecision = 0x2668; // UCurveFloat*
		constexpr auto AutoAimTreacleScopeCurveHorizontalFocus = 0x2670; // UCurveFloat*
		constexpr auto AutoAimTreacleHipCurveVertical = 0x2678; // UCurveFloat*
		constexpr auto AutoAimTreacleADSCurveVertical = 0x2680; // UCurveFloat*
		constexpr auto AutoAimTreacleScopeCurveVertical = 0x2688; // UCurveFloat*
		constexpr auto AutoAimDistanceStrengthCurve = 0x2690; // UCurveFloat*
		constexpr auto AutoAimDistanceStrengthCurvePrecision = 0x2698; // UCurveFloat*
		constexpr auto AutoAimDistanceStrengthCurveFocus = 0x26a0; // UCurveFloat*
		constexpr auto AutoAimPlayerVelocityStrengthCurve = 0x26a8; // UCurveFloat*
		constexpr auto ControllerScopedSensitivityMultiplier = 0x26b0; // float
		constexpr auto ControllerVerticalSensitivityMultiplier = 0x26b4; // float
		constexpr auto ControllerHorizontalSensitivityMultiplier = 0x26b8; // float
		constexpr auto ControllerBaseADSSensitivityMultiplier = 0x26bc; // float
		constexpr auto ControllerTriggerAxisThreshold = 0x26c0; // float
		constexpr auto ControllerResetAccelerationDotThreshold = 0x26c4; // float
		constexpr auto UseButtonHoldTime = 0x26e4; // float
		constexpr auto UseButtonMeleeHold = 0x26e8; // float
		constexpr auto UseButtonWeaponSwapHold = 0x26ec; // float
		constexpr auto TimeToDestroy = 0x2708; // float
		constexpr auto BattInstance = 0x2710; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x2718; // UBattalionSettings*
		constexpr auto ControllerSensitivityStepOffset = 0x2720; // int32_t
		constexpr auto ControllerSensitivityStepMultiplier = 0x2724; // float
		constexpr auto bCanEquipCancelFromFiring = 0x2728; // bool
		constexpr auto LastAutoAimTarget = 0x272c; // TWeakObjectPtr<ACharacter>
		constexpr auto bEnableEquipInput = 0x2735; // bool
		constexpr auto bEnableReloadInput = 0x2736; // bool
		constexpr auto bEnableLookInput = 0x2737; // bool
		constexpr auto ShouldRetryUpdateTeamMesh = 0x2738; // bool
		constexpr auto RetryUpdateTeamCount = 0x273c; // int32_t
		constexpr auto MaxRetryUpdateTeamAttempts = 0x2740; // int32_t
		constexpr auto PreparedGrenadeInfo = 0x2770; // FGrenadeThrowInfo
		constexpr auto bIsCurrentlyThrowingGrenade = 0x2798; // bool
		constexpr auto DestroyTimer = 0x279c; // float
		constexpr auto bShouldDestroy = 0x27a0; // bool
		constexpr auto MeleeComboIndex = 0x27a4; // int32_t
		constexpr auto MeleeComboMax = 0x27a8; // int32_t
		constexpr auto MeleeComboMaxCutoffTime = 0x27ac; // float
	}

	namespace n_UHardpointGameOverviewWidget {
		constexpr auto WaitingToStartTimer = 0x390; // float
		constexpr auto OvertimeText = 0x398; // FText
		constexpr auto OvertimeTimeVisibility = 0x3b0; // ESlateVisibility
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UWBP_SniperVignette_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_362 = 0x278; // UImage*
		constexpr auto IMG_BluredScope = 0x280; // UImage*
		constexpr auto IMG_NonBluredScope = 0x288; // UImage*
		constexpr auto IMG_SniperVignette = 0x290; // UImage*
		constexpr auto BlurCurve = 0x298; // UCurveFloat*
		constexpr auto BlurTransition = 0x2a0; // float
		constexpr auto PromodCharacter = 0x2a8; // APromodCharacter*
		constexpr auto newVisibility = 0x2b0; // bool
		constexpr auto Delta Time = 0x2b4; // float
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UPostEventAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UKantanCategoryStyleSet {
		constexpr auto Styles = 0x30; // TArray<FKantanCategoryStyle>
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBigTimeDisplay_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_ComparisonIndicator = 0x268; // UImage*
		constexpr auto IMG_PlusIcon = 0x270; // UImage*
		constexpr auto TimeDisplayText = 0x278; // UTextBlock*
		constexpr auto WS_ComparisonType = 0x280; // UWidgetSwitcher*
		constexpr auto Seconds = 0x288; // float
		constexpr auto ShouldColourText = 0x28c; // bool
		constexpr auto ShouldUseTriangle = 0x28d; // bool
	}

	namespace n_USettings_Backdrop__Config_Selected_C {
		constexpr auto Backdrop-colour-image = 0x260; // UImage*
		constexpr auto Breaker = 0x268; // UImage*
		constexpr auto Line = 0x270; // UImage*
		constexpr auto slant = 0x278; // UImage*
		constexpr auto slant_2 = 0x280; // UImage*
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMedal30BombTDM {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
	}

	namespace n_UAkLuminInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UMapSelectDataAsset {
		constexpr auto Maps = 0x30; // TArray<FMapSelectList>
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_AFireUp_HandCannon {
		constexpr auto HandCannonWeaponClass = 0x3c8; // ABattalionWeapon*
		constexpr auto SpawnedHandCannon = 0x3d0; // ABattalionWeapon_Instant*
		constexpr auto PreviousSlotType = 0x3d8; // ESlotType
		constexpr auto CachedKills = 0x3dc; // int32_t
		constexpr auto HandCannonShot = 0x3e0; // UAkAudioEvent*
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x668; // FWorldPSCPool
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x520; // FGuid
	}

	namespace n_ABP_MapEditorGizmo_C {
		constexpr auto UberGraphFrame = 0x510; // FPointerToUberGraphFrame
	}

	namespace n_UWBP_CargoOverviewScore_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LeftTeamProgressBar = 0x268; // UProgressBar*
		constexpr auto LeftTeamScore = 0x270; // UTextBlock*
		constexpr auto LeftTeamScore2 = 0x278; // UTextBlock*
		constexpr auto MatchTimerBackground = 0x280; // UImage*
		constexpr auto PayloadDisabledIcon = 0x288; // UImage*
		constexpr auto PayloadProgressBackground = 0x290; // UImage*
		constexpr auto PayloadScoreBox = 0x298; // UImage*
		constexpr auto PayloadSpeedBox = 0x2a0; // UImage*
		constexpr auto PayloadSpeedImage = 0x2a8; // UImage*
		constexpr auto PrimaryTimer = 0x2b0; // UTextBlock*
		constexpr auto ProgressBorder = 0x2b8; // UImage*
		constexpr auto RightTeamProgressBar = 0x2c0; // UProgressBar*
		constexpr auto RightTeamScore = 0x2c8; // UTextBlock*
		constexpr auto WBP_CargoProgress = 0x2d0; // UWBP_CargoProgress_C*
		constexpr auto bBombPlanted = 0x2d8; // bool
		constexpr auto BombTimer = 0x2dc; // float
		constexpr auto PlayerSide = 0x2e0; // ECargoPlayerSideState
	}

	namespace n_UBTDecorator_HasLoSTo {
		constexpr auto EnemyKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x460; // FVector
		constexpr auto Rotation = 0x470; // FQuat
		constexpr auto Dimensions = 0x480; // FVector
		constexpr auto LineThickness = 0x48c; // float
		constexpr auto bRemoveHiddenLines = 0x490; // bool
		constexpr auto bEnableAxisFlip = 0x491; // bool
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UWBP_FullscreenMovie_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MediaTexture = 0x268; // UImage*
		constexpr auto MediaPlayer = 0x270; // UMediaPlayer*
		constexpr auto Wwise Event = 0x278; // UAkAudioEvent*
		constexpr auto OnPlaybackStarted = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPlaybackFinished = 0x290; // FMulticastInlineDelegate
		constexpr auto OnPlaybackFailed = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_ABombMode_BombSpawn {
		constexpr auto StageID = 0x220; // int32_t
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFov = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UKantanChart {
		constexpr auto Margins = 0x108; // FMargin
		constexpr auto ChartTitle = 0x118; // FText
		constexpr auto TitlePadding = 0x130; // FMargin
		constexpr auto UpdateTickRate = 0x140; // float
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x450; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x458; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x460; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x461; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x462; // bool
		constexpr auto CachedBodySetup = 0x468; // UBodySetup*
		constexpr auto BodySetups = 0x470; // TArray<UBodySetup*>
	}

	namespace n_UFOVFixedStaticMeshComponent {
		constexpr auto FOV = 0x4d0; // float
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UAPB_UNDCRifle_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_4 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_3 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x438; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x4b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x538; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x600; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x6c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x748; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x7c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x810; // FAnimNode_Slot
		constexpr auto Targeting Transition = 0x858; // float
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x440; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x448; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x450; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x518; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x518; // char : 1
		constexpr auto bAutoDestroy = 0x544; // char : 1
		constexpr auto bRenderingEnabled = 0x544; // char : 1
		constexpr auto bAutoManageAttachment = 0x544; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x544; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x548; // float
		constexpr auto EmitterMaterials = 0x550; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x568; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x578; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x580; // FName
		constexpr auto AutoAttachLocationRule = 0x588; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x589; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x58a; // EAttachmentRule
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UNUILevelUp {
		constexpr auto OldIconTexture = 0x278; // UTexture2D*
		constexpr auto NewIconTexture = 0x280; // UTexture2D*
		constexpr auto OldLevel = 0x288; // FString
		constexpr auto NewLevel = 0x298; // FString
		constexpr auto bNeedImageAnimation = 0x2a8; // bool
	}

	namespace n_UWBP_CargoPlayerIcons_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BlueBar = 0x268; // UImage*
		constexpr auto LeftTeamPlayerIcons = 0x270; // UHorizontalBox*
		constexpr auto LeftTeamPlayersAliveValue = 0x278; // UTextBlock*
		constexpr auto RedBar = 0x280; // UImage*
		constexpr auto RightTeamPlayerIcons = 0x288; // UHorizontalBox*
		constexpr auto RightTeamPlayersAliveValue = 0x290; // UTextBlock*
		constexpr auto TeamInfoWidgetSwitcherL = 0x298; // UWidgetSwitcher*
		constexpr auto TeamInfoWidgetSwitcherR = 0x2a0; // UWidgetSwitcher*
		constexpr auto TeamNum1 = 0x2a8; // UTextBlock*
		constexpr auto TeamNum2 = 0x2b0; // UTextBlock*
		constexpr auto LeftTeamWidgets = 0x2b8; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x2c8; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x2d8; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x2dc; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x2e0; // int32_t
		constexpr auto PlayersTeam0 = 0x2e8; // TArray<APlayerState*>
		constexpr auto PlayersTeam1 = 0x2f8; // TArray<APlayerState*>
		constexpr auto bIsShootout = 0x308; // bool
	}

	namespace n_UDebug_Button-BLACK-LEFT-JUSTIFIED_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TEXT_MOTION = 0x268; // UWidgetAnimation*
		constexpr auto UNHOVER = 0x270; // UWidgetAnimation*
		constexpr auto HOVER = 0x278; // UWidgetAnimation*
		constexpr auto BLUETEXT = 0x280; // UTextBlock*
		constexpr auto Blur-Steak = 0x288; // UImage*
		constexpr auto DEBUG-BUTTON = 0x290; // UButton*
		constexpr auto REDTEXT = 0x298; // UTextBlock*
		constexpr auto TOPTEXT = 0x2a0; // UTextBlock*
		constexpr auto Text = 0x2a8; // FText
		constexpr auto NewVar_1 = 0x2c0; // bool
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UWBP_GrenadeIndicator_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_1 = 0x280; // UCanvasPanel*
		constexpr auto WBP_GrenadeMarker1 = 0x288; // UWBP_GrenadeMarker_C*
		constexpr auto WBP_GrenadeMarker2 = 0x290; // UWBP_GrenadeMarker_C*
		constexpr auto WBP_GrenadeMarker3 = 0x298; // UWBP_GrenadeMarker_C*
		constexpr auto WBP_GrenadeMarker4 = 0x2a0; // UWBP_GrenadeMarker_C*
		constexpr auto WBP_GrenadeMarker5 = 0x2a8; // UWBP_GrenadeMarker_C*
		constexpr auto GrenadeMarkers = 0x2b0; // TArray<UWBP_GrenadeMarker_C*>
		constexpr auto HUD Colour = 0x2c0; // UHUDTextDataAsset*
	}

	namespace n_UNUIVideoTrainingPlaying {
		constexpr auto CurrentVideoType = 0x290; // EVideoTrainingType
		constexpr auto CurrentSubtitles = 0x298; // UBattalionSubtitlesDataAsset*
		constexpr auto DisplayName = 0x2a0; // FText
		constexpr auto SubtitlesVisible = 0x2b8; // bool
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_APromodPawn_C {
		constexpr auto UberGraphFrame = 0x2dd0; // FPointerToUberGraphFrame
		constexpr auto BulletFlyByChecker = 0x2dd8; // USphereComponent*
		constexpr auto FlashPostProcess = 0x2de0; // UPostProcessComponent*
		constexpr auto Timeline_2_Radius_FFD76325486CF6F44C8725AC60C18F7B = 0x2de8; // float
		constexpr auto Timeline_2__Direction_FFD76325486CF6F44C8725AC60C18F7B = 0x2dec; // ETimelineDirection
		constexpr auto Timeline_3 = 0x2df0; // UTimelineComponent*
		constexpr auto Timeline_1_Radius_A1AFF3D84AC00D718CB1D287DCABDC6B = 0x2df8; // float
		constexpr auto Timeline_1__Direction_A1AFF3D84AC00D718CB1D287DCABDC6B = 0x2dfc; // ETimelineDirection
		constexpr auto Timeline_2 = 0x2e00; // UTimelineComponent*
		constexpr auto Timeline_0_Radius_1D8C7D22412F793B751EA7A874AB4CEE = 0x2e08; // float
		constexpr auto Timeline_0__Direction_1D8C7D22412F793B751EA7A874AB4CEE = 0x2e0c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x2e10; // UTimelineComponent*
		constexpr auto DebugUI = 0x2e18; // UDebugUI_C*
		constexpr auto StrafeSpeedUI = 0x2e20; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto bLoadPositionHeld = 0x2e28; // bool
		constexpr auto bSavePositionHeld = 0x2e29; // bool
		constexpr auto FOVStore = 0x2e2c; // float
		constexpr auto FireActionAwardsDataAsset = 0x2e30; // UOnFireAwardsDataAsset*
		constexpr auto bIgnoreLeanActionRelease = 0x2e38; // bool
		constexpr auto SpatialMarkerParentBoneName_1 = 0x2e3c; // FName
		constexpr auto SpatialMarkerPositionalOffset_1 = 0x2e44; // FVector
		constexpr auto bIsInSmoke = 0x2e50; // bool
		constexpr auto LastHitLocationOffset = 0x2e54; // FVector
		constexpr auto LastHitDirection = 0x2e60; // FVector
		constexpr auto Last Hit Bone Name = 0x2e6c; // FName
		constexpr auto Last Hit Location = 0x2e74; // FVector
		constexpr auto MeshMID = 0x2e80; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DynamicMats = 0x2e90; // TArray<UMaterialInstanceDynamic*>
		constexpr auto MousePos = 0x2ea0; // FVector2D
		constexpr auto DeathVFX = 0x2ea8; // UNiagaraSystem*
		constexpr auto LeftJoystickPos = 0x2eb0; // FVector2D
		constexpr auto RightJoystickPos = 0x2eb8; // FVector2D
		constexpr auto DashVFX = 0x2ec0; // UNiagaraSystem*
		constexpr auto PrevControllerType = 0x2ec8; // char
		constexpr auto StunnedVFX = 0x2ed0; // UBP_StunnedCameraModifier_C*
		constexpr auto HandCannonDeath = 0x2ed8; // UNiagaraSystem*
		constexpr auto DeathDamageHitResult = 0x2ee0; // FHitResult
		constexpr auto TimeSinceStartedFiring = 0x2f6c; // float
		constexpr auto IsStartTimeSet = 0x2f70; // bool
		constexpr auto FinalRumbleIntensity = 0x2f74; // float
		constexpr auto Max Rumble Intensity = 0x2f78; // float
		constexpr auto CameraModifierRemoved = 0x2f7c; // bool
		constexpr auto ArchitypeRumbleMultiplier = 0x2f80; // float
		constexpr auto SMGRumbleMultiplier = 0x2f84; // float
		constexpr auto RifleRumble Multiplier = 0x2f88; // float
		constexpr auto SniperRumble Multiplier = 0x2f8c; // float
		constexpr auto PistolRumble Multiplier = 0x2f90; // float
		constexpr auto RumbleDuration = 0x2f94; // float
		constexpr auto MovementState = 0x2f98; // ENUM_MovementState
		constexpr auto MovementAction = 0x2f99; // ENUM_MovementAction
		constexpr auto Gait = 0x2f9a; // ENUM_Gait
		constexpr auto PrevMovementState = 0x2f9b; // ENUM_MovementState
		constexpr auto InAirRotation = 0x2f9c; // FRotator
		constexpr auto PrevMovementAction = 0x2fa8; // ENUM_MovementAction
		constexpr auto PrevActualGait = 0x2fa9; // ENUM_Gait
		constexpr auto PreviousVelocity = 0x2fac; // FVector
		constexpr auto Acceleration = 0x2fb8; // FVector
		constexpr auto Speed = 0x2fc4; // float
		constexpr auto IsMoving = 0x2fc8; // bool
		constexpr auto LastVelocityRotation = 0x2fcc; // FRotator
		constexpr auto MovementInputAmount = 0x2fd8; // float
		constexpr auto HasMovementInput = 0x2fdc; // bool
		constexpr auto LastMovementInputRotation = 0x2fe0; // FRotator
		constexpr auto AimYawRate = 0x2fec; // float
		constexpr auto PreviousAimYaw = 0x2ff0; // float
		constexpr auto AllowedGait = 0x2ff4; // ENUM_Gait
		constexpr auto ActualGait = 0x2ff5; // ENUM_Gait
		constexpr auto DesiredGait = 0x2ff6; // ENUM_Gait
		constexpr auto LocalWalkSpeed = 0x2ff8; // float
		constexpr auto LocalRunSpeed = 0x2ffc; // float
		constexpr auto LocalSprintSpeed = 0x3000; // float
		constexpr auto SingleFireWeaponIncrease = 0x3004; // float
		constexpr auto BombScreenMat = 0x3008; // UMaterialInstanceDynamic*
		constexpr auto BombScreenMat3P = 0x3010; // UMaterialInstanceDynamic*
		constexpr auto bSinglePlayerMode = 0x3018; // bool
		constexpr auto JumperHUD = 0x3020; // UWBP_JumperMovementHUD_C*
	}

	namespace n_UWBP_TugOfWarOverview_C {
		constexpr auto UberGraphFrame = 0x3b8; // FPointerToUberGraphFrame
		constexpr auto CenterTimer = 0x3c0; // UTextBlock*
		constexpr auto CP_ProgressOverview = 0x3c8; // UCanvasPanel*
		constexpr auto CurrentState = 0x3d0; // UTextBlock*
		constexpr auto CurrentState_2 = 0x3d8; // UTextBlock*
		constexpr auto Image = 0x3e0; // UImage*
		constexpr auto Image_2 = 0x3e8; // UImage*
		constexpr auto IMG_Contested = 0x3f0; // UImage*
		constexpr auto IMG_Disabled = 0x3f8; // UImage*
		constexpr auto IMG_PassivePushed = 0x400; // UImage*
		constexpr auto IMG_PassivePushing = 0x408; // UImage*
		constexpr auto IMG_ProgressBackground = 0x410; // UImage*
		constexpr auto IMG_Pushed = 0x418; // UImage*
		constexpr auto IMG_Pushing = 0x420; // UImage*
		constexpr auto IMG_SuddenDeath = 0x428; // UImage*
		constexpr auto IMG_SuddenDeathContainer = 0x430; // USizeBox*
		constexpr auto LeftTeamPlayerIcons = 0x438; // UHorizontalBox*
		constexpr auto Re-EnableImage_MyTeam = 0x440; // UImage*
		constexpr auto Re-EnableImage_TheirTeam = 0x448; // UImage*
		constexpr auto Re-EnableProgress = 0x450; // UCanvasPanel*
		constexpr auto Re-EnableProgressBar_MyTeam = 0x458; // UWBP_ProgressBar_C*
		constexpr auto Re-EnableProgressBar_TheirTeam = 0x460; // UWBP_ProgressBar_C*
		constexpr auto RightTeamPlayerIcons = 0x468; // UHorizontalBox*
		constexpr auto SpeedStateBackgroundImage = 0x470; // UImage*
		constexpr auto Timer_2 = 0x478; // UTextBlock*
		constexpr auto WBP_TugOfWarProgress = 0x480; // UWBP_TugOfWarProgress_C*
		constexpr auto WS_CargoSpeedState = 0x488; // UWidgetSwitcher*
		constexpr auto LeftTeamWidgets = 0x490; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x4a0; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x4b0; // int32_t
		constexpr auto HUDColour = 0x4b8; // UHUDTextDataAsset*
		constexpr auto CargoGameState_1 = 0x4c0; // ACargoGameState*
	}

	namespace n_UMedalBlowout {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_UFriendlyTemplate {
		constexpr auto LinkedCharacter = 0x268; // ABattalionCharacter*
		constexpr auto CachedMaterial = 0x270; // UMaterialInstanceDynamic*
		constexpr auto CachedMaterialBombCarrier = 0x278; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x280; // ABeacon*
		constexpr auto BeaconScaleX = 0x288; // float
		constexpr auto BeaconScaleY = 0x28c; // float
		constexpr auto Image = 0x290; // UImage*
		constexpr auto SpecIDImage = 0x298; // UTextBlock*
		constexpr auto SpecID = 0x2a0; // FString
		constexpr auto BombImage = 0x2b0; // UImage*
		constexpr auto ScaledPlayerPos = 0x2b8; // FVector2D
		constexpr auto RotationAngle = 0x2c0; // float
		constexpr auto Zoom = 0x2c4; // float
		constexpr auto CanvasPanelSlot = 0x2c8; // UCanvasPanelSlot*
		constexpr auto Tint = 0x2d0; // FLinearColor
		constexpr auto MiniMapScale = 0x2e0; // float
		constexpr auto MiniMapZoom = 0x2e4; // float
		constexpr auto RotateMap = 0x2e8; // bool
		constexpr auto FiredThisFrame = 0x2e9; // bool
		constexpr auto SingleShot = 0x2ea; // bool
		constexpr auto LastPos = 0x2ec; // FVector2D
		constexpr auto bInActiveArray = 0x2f4; // bool
		constexpr auto FadeTimer = 0x2f8; // float
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UNUIPrompt {
		constexpr auto bAccepted = 0x290; // bool
		constexpr auto TitleText = 0x298; // UTextBlock*
		constexpr auto MessageContainer = 0x2a0; // UScrollBox*
		constexpr auto MessageText = 0x2a8; // UTextBlock*
		constexpr auto AcceptButton = 0x2b0; // UNUIButton*
		constexpr auto CancelButton = 0x2b8; // UNUIButton*
		constexpr auto CancelContainer = 0x2c0; // UWidget*
		constexpr auto SmokeBackdrop = 0x2c8; // UWidget*
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UMedal25BombTDM {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
	}

	namespace n_ABattalionTutorialPickup {
		constexpr auto WeaponClass = 0x220; // ABattalionWeapon*
		constexpr auto Weapon = 0x228; // ABattalionWeapon*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto MeshComponent = 0x238; // USkeletalMeshComponent*
		constexpr auto BoxCollision = 0x240; // UBoxComponent*
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UMedalInvincible {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
		constexpr auto InvincibleTrackers = 0x50; // TArray<FInvincibleTracker>
	}

	namespace n_UPlayFabProfilesAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x118; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x120; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x128; // UPlayFabJsonObject*
	}

	namespace n_USMConduitInstance {
		constexpr auto bEvalWithTransitions = 0xc0; // bool
		constexpr auto bCanEvaluate = 0xc1; // bool
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_UNUIWidgetReferences {
		constexpr auto Templates = 0x28; // TArray<UObject*>
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_AHardpointGameMode {
		constexpr auto FirstHardpointWaitTime = 0xd38; // float
		constexpr auto WinOnTeamEmptyShootout = 0xd3c; // bool
		constexpr auto HardpointCycleTime = 0xd40; // float
		constexpr auto PreviewNextHardpointTime = 0xd48; // float
		constexpr auto HardpointScoreInterval = 0xd4c; // float
		constexpr auto HardpointScorePerTick = 0xd50; // float
		constexpr auto PreShootoutTime = 0xd58; // float
		constexpr auto bAllowOvertime = 0xd5c; // bool
		constexpr auto HardpointOvertimeRoundTime = 0xd60; // float
		constexpr auto HardpointOvertimeScoreLimit = 0xd64; // float
		constexpr auto HardpointMarkerTime = 0xd68; // float
		constexpr auto bUsingCustomShootout = 0xd6c; // bool
		constexpr auto HardpointZones = 0xd70; // TArray<AHardpointZone*>
		constexpr auto CurrentZoneIndex = 0xd80; // int32_t
		constexpr auto CurrentActiveZone = 0xd88; // AHardpointZone*
		constexpr auto NextZone = 0xd90; // AHardpointZone*
		constexpr auto LastRoundEndTime = 0xd98; // float
		constexpr auto DefaultAkComp = 0xda0; // UAkComponent*
		constexpr auto GameStartSound = 0xda8; // UAkAudioEvent*
		constexpr auto StartGameInstructionsSound = 0xdb0; // UAkAudioEvent*
		constexpr auto FirstPointSpawnedSound = 0xdb8; // UAkAudioEvent*
		constexpr auto PointMovingShortlySound = 0xdc0; // UAkAudioEvent*
		constexpr auto PointUnlockedSound = 0xdc8; // UAkAudioEvent*
		constexpr auto CapturedByEnemySound = 0xdd0; // UAkAudioEvent*
		constexpr auto CapturedByFriendlySound = 0xdd8; // UAkAudioEvent*
		constexpr auto GameAlmostEndedEvent = 0xde0; // UAkAudioEvent*
		constexpr auto StopGameAlmostEndedEvent = 0xde8; // UAkAudioEvent*
		constexpr auto PointContestedSound = 0xdf0; // UAkAudioEvent*
		constexpr auto EnemyNearingVictorySound = 0xdf8; // UAkAudioEvent*
		constexpr auto StartRoundEndMusic = 0xe00; // UAkAudioEvent*
		constexpr auto StopRoundEndMusic = 0xe08; // UAkAudioEvent*
		constexpr auto OvertimeAnnouncerSound = 0xe10; // UAkAudioEvent*
		constexpr auto StopSoundTime = 0xe18; // float
		constexpr auto HardpointGameState = 0xe28; // AHardpointGameState*
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4d8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x530; // FVector
		constexpr auto SplineBoundaryMin = 0x53c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x540; // FGuid
		constexpr auto BodySetup = 0x550; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x558; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x55c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x55c; // char : 1
		constexpr auto bMeshDirty = 0x55c; // char : 1
		constexpr auto ForwardAxis = 0x55d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x560; // float
	}

	namespace n_UNUIGameTimer {
		constexpr auto GameTimer = 0x278; // FString
		constexpr auto Color = 0x288; // FLinearColor
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_ABombHUD {
		constexpr auto bombicon = 0x5f8; // UNUIBombIcon*
		constexpr auto BombIconClass = 0x600; // UNUIBombIcon*
	}

	namespace n_UHUDPlayerName_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto PlayerHealth = 0x2c0; // UTextBlock*
		constexpr auto PlayerName = 0x2c8; // UTextBlock*
		constexpr auto PlayerPhaseWidgetConsole_142 = 0x2d0; // FNone*
		constexpr auto SpectatorInfo = 0x2d8; // UCanvasPanel*
		constexpr auto TextBlock_749 = 0x2e0; // UTextBlock*
		constexpr auto Weapon = 0x2e8; // UImage*
		constexpr auto WidgetSwitcher_313 = 0x2f0; // UWidgetSwitcher*
		constexpr auto XrayPlayername = 0x2f8; // FNone*
		constexpr auto PlayerNameColour = 0x300; // FSlateColor
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UMedal1v5Clutch {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto ClutcherPC = 0x50; // ABattalionPlayerControllerGMBase*
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto Radius = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto NumSides = 0x474; // int32_t
		constexpr auto bViewAligned = 0x478; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x479; // bool
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UWBP_JumperGameOverview_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto Count_Second = 0x2f8; // UWidgetAnimation*
		constexpr auto Image = 0x300; // UImage*
		constexpr auto Image_2 = 0x308; // UImage*
		constexpr auto Image_144 = 0x310; // UImage*
		constexpr auto Image_390 = 0x318; // UImage*
		constexpr auto TextBlock_JumperCheckpointCount = 0x320; // UTextBlock*
		constexpr auto TextBlock_JumperRespawnCount = 0x328; // UTextBlock*
		constexpr auto TextBlock_JumperTimer = 0x330; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_2 = 0x338; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_3 = 0x340; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_4 = 0x348; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_5 = 0x350; // UTextBlock*
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UMedalBombTechnician {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_UNUISettings {
		constexpr auto WelcomeScreenClass = 0x38; // FSoftClassPath
		constexpr auto LoadingScreenClass = 0x50; // FSoftClassPath
		constexpr auto PromptClass = 0x68; // FSoftClassPath
		constexpr auto PauseMenuClass = 0x80; // FSoftClassPath
		constexpr auto DebugMenuClass = 0x98; // FSoftClassPath
		constexpr auto SmokeOverlayPlayer = 0xb0; // TSoftObjectPtr<UMediaPlayer>
		constexpr auto SmokeOverlayVideo = 0xd8; // TSoftObjectPtr<UMediaSource>
		constexpr auto SmokeBackdropPlayer = 0x100; // TSoftObjectPtr<UMediaPlayer>
		constexpr auto SmokeBackdropVideo = 0x128; // TSoftObjectPtr<UMediaSource>
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UAkAssetData {
		constexpr auto CachedHash = 0x28; // uint32_t
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UMedalLoneSurvivor {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_AMapEditorPawn {
		constexpr auto MaxUndoHistory = 0x2a8; // int32_t
		constexpr auto GeometryObjectTag = 0x2ac; // FGameplayTag
		constexpr auto ObjectPreviewClass = 0x2b8; // AMapEditorObjectPreview*
		constexpr auto MapEditorGizmoClass = 0x2c0; // AMapEditorGizmo*
		constexpr auto CursorTraceDistance = 0x2c8; // float
		constexpr auto CursorTraceFailedDistance = 0x2cc; // float
		constexpr auto LastCursorHitResult = 0x2d0; // FHitResult
		constexpr auto CachedCursorScreenPosition = 0x35c; // FVector2D
		constexpr auto LastCursorScreenPosition = 0x364; // FVector2D
		constexpr auto SpawningObjectData = 0x370; // FMapEditorObjectData
		constexpr auto bSpawningObject = 0x410; // bool
		constexpr auto ObjectPreview = 0x418; // AMapEditorObjectPreview*
		constexpr auto SelectedObjects = 0x420; // TArray<AMapEditorObject*>
		constexpr auto MapEditorController = 0x430; // AMapEditorController*
		constexpr auto MapEditorGizmo = 0x438; // AMapEditorGizmo*
		constexpr auto CopyClipboard = 0x440; // TArray<AMapEditorObject*>
		constexpr auto UndoHistory = 0x450; // TArray<FMapEditorUndoableAction>
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UMedalKingSlayer {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_APromodHUD {
		constexpr auto MasterHUDWidget = 0x310; // UHUDMaster*
		constexpr auto MasterHUDClass = 0x318; // UHUDMaster*
		constexpr auto JumperHUDClass = 0x320; // UHUDMaster*
		constexpr auto SNDHUDClass = 0x328; // UHUDMaster*
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4d0; // float
	}

	namespace n_UAkAudioType {
		constexpr auto ShortID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
	}

	namespace n_UCartesianPlot {
		constexpr auto DataSource = 0x368; // UObject*
	}

	namespace n_UNUIMiniMap {
		constexpr auto Smokes = 0x278; // TArray<ABattalionSmokeGrenade*>
		constexpr auto SmokeWidgets = 0x288; // TArray<UMapSmokeWidget*>
		constexpr auto WorldMarkers = 0x298; // TArray<UWorldMarkerComponent*>
		constexpr auto MarkerWidgets = 0x2a8; // TArray<UMapMarkerWidget*>
		constexpr auto Position = 0x2b8; // FVector2D
		constexpr auto DesiredPosition = 0x2c0; // FVector2D
		constexpr auto RotationAngle = 0x2c8; // float
		constexpr auto Beacon = 0x2d0; // ABeacon*
		constexpr auto ThisCanvas = 0x2d8; // UCanvasPanel*
		constexpr auto CachedMaterial = 0x2e0; // UMaterialInstanceDynamic*
		constexpr auto FrenemyImages = 0x2e8; // TArray<UFriendlyTemplate*>
		constexpr auto Scale = 0x2f8; // float
		constexpr auto Zoom = 0x2fc; // float
		constexpr auto PlayerIconImage = 0x300; // UImage*
		constexpr auto PlayerIconBombOutline = 0x308; // UImage*
		constexpr auto PlayerLocation = 0x310; // FLinearColor
		constexpr auto ScaledPosition = 0x320; // FVector2D
		constexpr auto NormalisedPosition = 0x328; // FVector2D
		constexpr auto MiniMapScale = 0x330; // float
		constexpr auto MiniMapZoom = 0x334; // float
		constexpr auto Frenemies = 0x338; // TArray<ABattalionCharacter*>
		constexpr auto RotateMap = 0x348; // bool
		constexpr auto bShouldShowSmokes = 0x349; // bool
		constexpr auto OwnerPC = 0x358; // ABattalionPlayerControllerGMBase*
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UOn_Fire_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_97 = 0x270; // UImage*
		constexpr auto Image_420 = 0x278; // UImage*
		constexpr auto MediaPlayer = 0x280; // UMediaPlayer*
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_ACTFHUD {
		constexpr auto FlagIcon = 0x638; // UNUIFlagIcon*
		constexpr auto FlagDmgTypeClass = 0x640; // UBattalionDamageType*
		constexpr auto FlagDmgType = 0x648; // UBattalionDamageType*
		constexpr auto CTFFlagStates = 0x650; // UNUICTFFlagStates*
		constexpr auto CTFGameOverview = 0x658; // UNUICTFGameOverview*
		constexpr auto FlagIconClass = 0x660; // UNUIFlagIcon*
		constexpr auto CTFFlagStatesClass = 0x668; // UNUICTFFlagStates*
		constexpr auto CTFGameOverviewClass = 0x670; // UNUICTFGameOverview*
	}

	namespace n_ACTFMode_FlagZone {
		constexpr auto flag = 0x220; // ACTFMode_Flag*
		constexpr auto CollisionComp = 0x228; // UBoxComponent*
		constexpr auto TeamAllegiance = 0x230; // char
		constexpr auto DefaultWorldMarker = 0x238; // UWorldMarkerComponent*
	}

	namespace n_UBattalionSettings {
		constexpr auto OnSettingsChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto Language = 0x38; // FString
		constexpr auto Resolution = 0x48; // FString
		constexpr auto DisplayMode = 0x58; // int32_t
		constexpr auto Vsync = 0x5c; // bool
		constexpr auto DisplayIndex = 0x60; // int32_t
		constexpr auto NvReflexMode = 0x64; // int32_t
		constexpr auto FPS = 0x68; // float
		constexpr auto ResolutionQuality = 0x70; // int32_t
		constexpr auto MSAA = 0x74; // int32_t
		constexpr auto Gamma = 0x78; // float
		constexpr auto bBloom = 0x7c; // bool
		constexpr auto bMotionBlur = 0x7d; // bool
		constexpr auto bLensFlare = 0x7e; // bool
		constexpr auto bKillAberration = 0x7f; // bool
		constexpr auto ColorStrength = 0x80; // float
		constexpr auto ColorTint = 0x84; // float
		constexpr auto WorldContrast = 0x88; // float
		constexpr auto SkyFade = 0x8c; // float
		constexpr auto Vignette = 0x90; // float
		constexpr auto LightbouncePower = 0x94; // float
		constexpr auto AOStrength = 0x98; // float
		constexpr auto LensFlareIntensity = 0x9c; // float
		constexpr auto ExposureAmount = 0xa0; // float
		constexpr auto Sharpness = 0xa4; // float
		constexpr auto bShowWeaponAndArms = 0xa8; // bool
		constexpr auto MasterVolume = 0xac; // float
		constexpr auto MenuMusicVolume = 0xb0; // float
		constexpr auto GameMusicVolume = 0xb4; // float
		constexpr auto AudioOutputDevice = 0xb8; // FString
		constexpr auto MuteSelf = 0xc8; // bool
		constexpr auto MuteAll = 0xc9; // bool
		constexpr auto MouseSensitivity = 0xd8; // float
		constexpr auto MouseSensitivityScalingOption = 0xe0; // FString
		constexpr auto MouseSensitivityRelativeAmount = 0xf0; // float
		constexpr auto MouseADSSensitivity = 0xf4; // float
		constexpr auto MouseScopedSensitivity = 0xf8; // float
		constexpr auto bMouseInvertVertical = 0xfc; // bool
		constexpr auto bController = 0xfd; // bool
		constexpr auto ControllerButtonConfig = 0x100; // FName
		constexpr auto ControllerStickConfig = 0x108; // FName
		constexpr auto bUseRadialDeadzone = 0x110; // bool
		constexpr auto ControllerAutoAimType = 0x118; // FString
		constexpr auto ControllerSensitivity = 0x128; // float
		constexpr auto ControllerHorizontalSensitivity = 0x12c; // float
		constexpr auto ControllerVerticalSensitivity = 0x130; // float
		constexpr auto ControllerADSSensitivity = 0x134; // float
		constexpr auto ControllerScopedSensitivity = 0x138; // float
		constexpr auto bControllerInvertVertical = 0x144; // bool
		constexpr auto bControllerVibration = 0x145; // bool
		constexpr auto WeaponKeybindsOption = 0x148; // FString
		constexpr auto ControllerDeadZone = 0x158; // float
		constexpr auto bCrossPlay = 0x15c; // bool
		constexpr auto bCrossPlayPrompted = 0x15d; // bool
		constexpr auto FOV = 0x160; // float
		constexpr auto bFixedFOVWeaponView = 0x164; // bool
		constexpr auto bLeftHandWeaponView = 0x165; // bool
		constexpr auto bHeadBob = 0x166; // bool
		constexpr auto bShowHUD = 0x167; // bool
		constexpr auto bShowTopBar = 0x168; // bool
		constexpr auto bShowMinimap = 0x169; // bool
		constexpr auto bMinimapFixed = 0x16a; // bool
		constexpr auto bShowKillFeed = 0x16b; // bool
		constexpr auto bShowKillMessage = 0x16c; // bool
		constexpr auto bShowChat = 0x16d; // bool
		constexpr auto bShowVoiceFeed = 0x16e; // bool
		constexpr auto bShowCrosshair = 0x16f; // bool
		constexpr auto bShowPlayerNames = 0x170; // bool
		constexpr auto bShowGameStatus = 0x171; // bool
		constexpr auto bShowInteraction = 0x172; // bool
		constexpr auto bShowInventory = 0x173; // bool
		constexpr auto bShowScoreAward = 0x174; // bool
		constexpr auto bShowScreenEffects = 0x175; // bool
		constexpr auto bShowGrenadeIcon = 0x176; // bool
		constexpr auto bShowVault = 0x177; // bool
		constexpr auto bShowGameTimer = 0x178; // bool
		constexpr auto bShowPickup = 0x179; // bool
		constexpr auto bShowMarkers = 0x17a; // bool
		constexpr auto bShowDistanceOnMarker = 0x17b; // bool
		constexpr auto bShowInventoryWeapons = 0x17c; // bool
		constexpr auto bShowPlayersAliveText = 0x17d; // bool
		constexpr auto bShowCallOut = 0x17e; // bool
		constexpr auto bShowObjectiveScores = 0x17f; // bool
		constexpr auto bShowPlayerRanking = 0x180; // bool
		constexpr auto bShowNetworkStatus = 0x181; // bool
		constexpr auto bShowMedalAwards = 0x182; // bool
		constexpr auto bShowSpectatorHUD = 0x183; // bool
		constexpr auto bLoadoutAlwaysVisible = 0x184; // bool
		constexpr auto bShowBulletTracers = 0x185; // bool
		constexpr auto bShowGizmoHelpUI = 0x186; // bool
		constexpr auto bShowStrafeHelpUI = 0x187; // bool
		constexpr auto bShowSystemTime = 0x188; // bool
		constexpr auto bShowMovementHelpUI = 0x189; // bool
		constexpr auto bShowFrameTime = 0x18a; // bool
		constexpr auto bShowClientFPS = 0x18b; // bool
		constexpr auto bShowIdleTime = 0x18c; // bool
		constexpr auto bShowGameThreadTime = 0x18d; // bool
		constexpr auto bShowRenderThreadTime = 0x18e; // bool
		constexpr auto bShowRHIThreadTime = 0x18f; // bool
		constexpr auto bShowGameLatency = 0x190; // bool
		constexpr auto bShowRenderLatency = 0x191; // bool
		constexpr auto bShowGameToRenderLatency = 0x192; // bool
		constexpr auto bShowGPUTemp = 0x193; // bool
		constexpr auto ActionBinds = 0x198; // TArray<FActionBind>
		constexpr auto AxisBinds = 0x1a8; // TArray<FAxisBind>
		constexpr auto DebugConsoleCommandBinds = 0x1b8; // TMap<FKey, FString>
		constexpr auto SettingsMenu = 0x208; // UNUISettingsMenu*
		constexpr auto BattInstance = 0x210; // UBattalionGameInstance*
		constexpr auto Profiles = 0x218; // TMap<FName, FString>
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_APromodGameMode {
		constexpr auto AssaultClassLimit = 0x9d0; // int32_t
		constexpr auto BreacherClassLimit = 0x9d4; // int32_t
		constexpr auto ReconClassLimit = 0x9d8; // int32_t
		constexpr auto MinPlayersForReporting = 0x9dc; // int32_t
		constexpr auto TimeToRegenQuickUtil = 0x9e0; // float
		constexpr auto SpectateTeamAllowed = 0x9e4; // bool
		constexpr auto RoundEndingTickingTime = 0x9e8; // float
		constexpr auto RoundEndingTickingTimePeriod = 0x9ec; // float
		constexpr auto ChangeTeamCooldownTime = 0x9f0; // float
		constexpr auto PromodGameState = 0x9f8; // APromodGameState*
		constexpr auto bReportingEnabled = 0xa00; // bool
		constexpr auto bForceEnableReporting = 0xa01; // bool
		constexpr auto bTryHardMode = 0xa02; // bool
		constexpr auto NumRegularRoundsPlayed = 0xa04; // int32_t
		constexpr auto TotalAbilitiesUsed = 0xa08; // int32_t
		constexpr auto NumMatchScoreReports = 0xa0c; // int32_t
		constexpr auto TotalPlayerMatchScore = 0xa10; // int32_t
		constexpr auto AbilityCounters = 0xa18; // TMap<FName, int32_t>
		constexpr auto InitialNumRounds = 0xa68; // int32_t
		constexpr auto DelayPeriodBetweenInitLoadouts = 0xa6c; // float
		constexpr auto TimerHandle_FeedbackScreenTimeout = 0xa70; // FTimerHandle
		constexpr auto CleanClassSettings = 0xa80; // APromodClassSettings*
		constexpr auto GameLossSound = 0xa90; // UAkAudioEvent*
		constexpr auto GameWinSound = 0xa98; // UAkAudioEvent*
		constexpr auto FlawlessWinSound = 0xaa0; // UAkAudioEvent*
		constexpr auto MatchStartingSound = 0xaa8; // UAkAudioEvent*
		constexpr auto LastRoundOfHalfSound = 0xab0; // UAkAudioEvent*
		constexpr auto MatchPointSound = 0xab8; // UAkAudioEvent*
		constexpr auto StratTimeSound = 0xac0; // UAkAudioEvent*
		constexpr auto RoundLossSound = 0xac8; // UAkAudioEvent*
		constexpr auto RoundWinSound = 0xad0; // UAkAudioEvent*
		constexpr auto RoundStartSound = 0xad8; // UAkAudioEvent*
		constexpr auto WarmupSound = 0xae0; // UAkAudioEvent*
		constexpr auto ThirtySecondsRemainingSound = 0xae8; // UAkAudioEvent*
		constexpr auto AceSound = 0xaf0; // UAkAudioEvent*
		constexpr auto BombDroppedSound = 0xaf8; // UAkAudioEvent*
		constexpr auto BombPlantedSoundA = 0xb00; // UAkAudioEvent*
		constexpr auto BombPlantedSoundB = 0xb08; // UAkAudioEvent*
		constexpr auto ClutchSound = 0xb10; // UAkAudioEvent*
		constexpr auto LastPlayerStandingSound = 0xb18; // UAkAudioEvent*
		constexpr auto OneEnemyRemainingSound = 0xb20; // UAkAudioEvent*
		constexpr auto RoundCountdownTick = 0xb28; // UAkAudioEvent*
		constexpr auto EndingRoundTickSound = 0xb30; // UAkAudioEvent*
		constexpr auto StopSoundsRoundEnd = 0xb38; // UAkAudioEvent*
		constexpr auto ShootOutFirstRoundPlayed = 0xb4b; // bool
		constexpr auto CachedPlayers = 0xc98; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto InitializeLoadoutQueue = 0xca8; // TArray<FInitializeLoadoutQueueItem>
		constexpr auto MapsWithSupportedModes = 0xcb8; // TArray<FMapToModeSchema>
		constexpr auto GameEventRecorder = 0xcc8; // UGameEventRecorder*
		constexpr auto TimeSinceLastLoadoutInitialization = 0xcd0; // float
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_ABattalionWeapon_Instant {
		constexpr auto KilledCharacterDeathAnim = 0x7d0; // FDeathAnim
		constexpr auto bDeathAnimOverridden = 0x810; // bool
		constexpr auto HitNotify = 0x814; // FInstantHitInfo
		constexpr auto ImpactTemplate = 0x830; // ABattalionImpactEffect*
		constexpr auto FailedImpactTemplate = 0x838; // ABattalionImpactEffect*
		constexpr auto ImpactBloodTemplate = 0x840; // ABattalionBloodEffect*
		constexpr auto ImpactBloodWoundTemplate = 0x848; // ABattalionBloodEffect*
		constexpr auto TrailFX = 0x850; // UParticleSystem*
		constexpr auto TracerFX = 0x858; // UParticleSystem*
		constexpr auto TracerFX1P = 0x860; // UParticleSystem*
		constexpr auto TracerFX1P_Chance = 0x868; // float
		constexpr auto TrailTargetParam = 0x86c; // FName
		constexpr auto TracerTickUpdates = 0x878; // TArray<UParticleSystemComponent*>
		constexpr auto WeaponCategory = 0x888; // EWeaponArchetype
	}

	namespace n_UMapViewComponent {
		constexpr auto OnVisibleCategoriesChanged = 0x468; // FMulticastInlineDelegate
		constexpr auto OnViewSizeChanged = 0x478; // FMulticastInlineDelegate
		constexpr auto OnViewDestroyed = 0x488; // FMulticastInlineDelegate
		constexpr auto RotationMode = 0x498; // EMapViewRotationMode
		constexpr auto FixedRotation = 0x49c; // FRotator
		constexpr auto InheritedYawOffset = 0x4a8; // float
		constexpr auto bSupportZooming = 0x4ac; // bool
		constexpr auto HeightProxy = 0x4b0; // USceneComponent*
		constexpr auto BackgoundLevelCacheLifetime = 0x4b8; // float
		constexpr auto MapBackgrounds = 0x568; // TSet<AMapBackground*>
		constexpr auto PositionOnMultiLevelBackgrounds = 0x5b8; // TMap<AMapBackground*, int32_t>
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UControllerLayoutLabelText_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CustomLabel = 0x268; // UTextBlock*
		constexpr auto DefaultLabel = 0x270; // UTextBlock*
		constexpr auto WidgetSwitcher_138 = 0x278; // UWidgetSwitcher*
		constexpr auto TextJustification = 0x280; // ETextJustify
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UWBP_PingSelection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto WBP_RadialMenu = 0x268; // UWBP_RadialMenu_C*
		constexpr auto PingTypes = 0x270; // TArray<EPingType>
		constexpr auto PingablesDataAsset = 0x280; // UPromodPingablesDataAsset*
		constexpr auto RadialMenuItems = 0x288; // TArray<FSlateBrush>
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UHUDWorldMarker {
		constexpr auto MarkerAdsVisibilityCurve = 0x260; // UCurveFloat*
		constexpr auto MarkerVisibilityCurve = 0x268; // UCurveFloat*
		constexpr auto WorldMarkerReference = 0x270; // UWorldMarkerComponent*
		constexpr auto bHideOnFinishLerp = 0x278; // bool
		constexpr auto bStuckToScreen = 0x279; // bool
		constexpr auto ProgressMaterial = 0x280; // UMaterialInstanceDynamic*
		constexpr auto ProgressMaterials = 0x288; // TArray<UMaterialInstanceDynamic*>
		constexpr auto MarkerSizeReference = 0x298; // UWidget*
		constexpr auto FadoutTime = 0x2a0; // float
		constexpr auto AffixTime = 0x2a4; // float
		constexpr auto MinScale = 0x2a8; // float
		constexpr auto MaxScale = 0x2ac; // float
		constexpr auto ScaleEdgeDistance = 0x2b0; // float
		constexpr auto MinScaleDistance = 0x2b4; // float
		constexpr auto MaxScaleDistance = 0x2b8; // float
		constexpr auto MarkerScaleMultiplier = 0x2bc; // float
		constexpr auto OverviewHeight = 0x2c0; // float
		constexpr auto MiniMapRadius = 0x2c4; // float
		constexpr auto MiniMapOffset = 0x2c8; // FVector2D
		constexpr auto ProjectionHorizontalBlendCone = 0x2d0; // float
		constexpr auto ProjectionVerticalBlendCone = 0x2d4; // float
		constexpr auto AzimuthBlendAngle = 0x2d8; // float
		constexpr auto AzimuthBlendCone = 0x2dc; // float
		constexpr auto MaxAlpha = 0x2e0; // float
		constexpr auto MinAlpha = 0x2e4; // float
		constexpr auto FadeAlpha = 0x2e8; // float
		constexpr auto FadeTime = 0x2ec; // float
		constexpr auto AimMaxAlpha = 0x2f0; // float
		constexpr auto AimMinAlpha = 0x2f4; // float
		constexpr auto AimFovealRadius = 0x2f8; // float
		constexpr auto AimParafovealBelt = 0x2fc; // float
		constexpr auto HipMaxAlpha = 0x300; // float
		constexpr auto HipMinAlpha = 0x304; // float
		constexpr auto HipFovealRadius = 0x308; // float
		constexpr auto HipParafovealBelt = 0x30c; // float
		constexpr auto ArrowFadeTime = 0x310; // float
		constexpr auto BattInstance = 0x318; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x320; // UBattalionSettings*
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UWelcomePopup_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto Outro = 0x278; // UWidgetAnimation*
		constexpr auto Intro = 0x280; // UWidgetAnimation*
		constexpr auto Accept = 0x288; // UAccept_C*
		constexpr auto AcceptButton = 0x290; // UTextButton_C*
		constexpr auto Cancel = 0x298; // UCancel_C*
		constexpr auto CancelButton = 0x2a0; // UTextButton_C*
		constexpr auto DescriptText = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_1 = 0x2b0; // UTextBlock*
		constexpr auto TitleText = 0x2b8; // UTextBlock*
		constexpr auto WBP_IDontKnow_PopupButton = 0x2c0; // UWBP_IDontKnow_PopupButton_C*
		constexpr auto InitializedSound = 0x2c8; // bool
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMedalDefender {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UPromodAllFireUpsDataAsset {
		constexpr auto FireUps = 0x30; // TArray<UPromodFireUpDataAsset*>
	}

	namespace n_UPLAY-MM-Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Simulation-text-off = 0x268; // UWidgetAnimation*
		constexpr auto Simulation-activated = 0x270; // UWidgetAnimation*
		constexpr auto Pulse = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto SingleFrameSelected = 0x288; // UWidgetAnimation*
		constexpr auto Default = 0x290; // UWidgetAnimation*
		constexpr auto Backdrop-colour-image = 0x298; // UImage*
		constexpr auto Backdrop-colour-image_2 = 0x2a0; // UImage*
		constexpr auto MM_ICON_2 = 0x2a8; // UImage*
		constexpr auto PM-BUTTON = 0x2b0; // UButton*
		constexpr auto Selected-Size-Canvas = 0x2b8; // UCanvasPanel*
		constexpr auto UNSelected-Size-Canvas = 0x2c0; // UCanvasPanel*
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_ABattalionGameMode {
		constexpr auto WorldLoadingEvent = 0x2c0; // UAkAudioEvent*
		constexpr auto Spectators = 0x2c8; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto CountdownToStartPlayersCinematic = 0x2e8; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto HasStartedCountdownToStartCinematic = 0x2f8; // bool
		constexpr auto MapModeVotes = 0x318; // TArray<FMapModeVoteInfo>
		constexpr auto MapModeVoteSuccessful = 0x328; // bool
		constexpr auto NumTravellingPlayers = 0x32c; // int32_t
		constexpr auto PendingTravelURL = 0x330; // FString
		constexpr auto PendingTravelAbsolute = 0x340; // bool
		constexpr auto PendingTravelTimer = 0x344; // float
		constexpr auto PendingTravelTime = 0x348; // float
		constexpr auto bPendingTravel = 0x34c; // bool
		constexpr auto PreviousTravelTimerSeconds = 0x350; // int32_t
		constexpr auto NextModeSelectedByCmd = 0x354; // bool
		constexpr auto FillEmptySlotsWithBots = 0x355; // bool
		constexpr auto AllowBots = 0x356; // bool
		constexpr auto bAllowGlobalVoiceChat = 0x357; // bool
		constexpr auto bCheatsEnabled = 0x358; // bool
		constexpr auto StratMode = 0x359; // bool
		constexpr auto MarketPath = 0x360; // FString
		constexpr auto ManualTravelOnly = 0x370; // bool
		constexpr auto ShouldPickRandomSubmode = 0x371; // bool
		constexpr auto AdminSteamIDs = 0x378; // TArray<FString>
		constexpr auto FailedConnectCleanupAttempts = 0x388; // int32_t
		constexpr auto MapVotingEnabled = 0x38c; // bool
		constexpr auto NumMapOptionsToGive = 0x390; // int32_t
		constexpr auto PlayerKillScore = 0x394; // int32_t
		constexpr auto PlayerAssistScore = 0x398; // int32_t
		constexpr auto DeathScore = 0x39c; // int32_t
		constexpr auto RoundWinScore = 0x3a0; // int32_t
		constexpr auto RoundDrawScore = 0x3a4; // int32_t
		constexpr auto RoundLossScore = 0x3a8; // int32_t
		constexpr auto GameWinScore = 0x3ac; // int32_t
		constexpr auto GameDrawScore = 0x3b0; // int32_t
		constexpr auto GameLossScore = 0x3b4; // int32_t
		constexpr auto AttackObjectiveScore = 0x3b8; // int32_t
		constexpr auto DefendObjectiveScore = 0x3bc; // int32_t
		constexpr auto ScoreToWinRound = 0x3c0; // int32_t
		constexpr auto NumRounds = 0x3c4; // int32_t
		constexpr auto SwapSidesRound = 0x3c8; // int32_t
		constexpr auto NumTeams = 0x3cc; // int32_t
		constexpr auto StartType = 0x3d0; // FName
		constexpr auto MaxPlayersPerTeam = 0x3d8; // int32_t
		constexpr auto NumSpectatorSlots = 0x3dc; // int32_t
		constexpr auto NumNations = 0x3e0; // int32_t
		constexpr auto FriendlyFire = 0x3e4; // bool
		constexpr auto MaxGunsOnGround = 0x3e8; // int32_t
		constexpr auto MaxGrenadesOnGround = 0x3ec; // int32_t
		constexpr auto RequiredPlayers = 0x3f0; // int32_t
		constexpr auto RespawnDelay = 0x3f4; // float
		constexpr auto EnableEnemyPlayerNames = 0x3f8; // bool
		constexpr auto DisableTeamSwaping = 0x3f9; // bool
		constexpr auto RandomSpawnInfluence = 0x3fc; // float
		constexpr auto EnemySpawnInfluenceDistance = 0x400; // float
		constexpr auto EnemySpawnInfluenceValue = 0x404; // float
		constexpr auto EnemySpawnInfluenceExponent = 0x408; // float
		constexpr auto EnemySpawnWeakForceInfluenceDistance = 0x40c; // float
		constexpr auto EnemySpawnWeakForceInfluenceValue = 0x410; // float
		constexpr auto EnemySpawnWeakForceInfluenceExponent = 0x414; // float
		constexpr auto AllySpawnInfluenceExponent = 0x418; // float
		constexpr auto AllySpawnInfluenceDistance = 0x41c; // float
		constexpr auto AllySpawnInfluenceValue = 0x420; // float
		constexpr auto PreviousSpawnInfluence = 0x424; // float
		constexpr auto PreviousSpawnAreaInfluence = 0x428; // float
		constexpr auto PreviousSpawnAreaDistance = 0x42c; // float
		constexpr auto PreviousSpawnAreaInfluenceExponent = 0x430; // float
		constexpr auto TeamDeathAreaTimeOfRelevance = 0x434; // float
		constexpr auto TeamDeathAreaInfluence = 0x438; // float
		constexpr auto TeamDeathAreaDistance = 0x43c; // float
		constexpr auto TeamDeathAreaInfluenceExponent = 0x440; // float
		constexpr auto TeamDeathLastSpawnAreaTimeOfRelevance = 0x444; // float
		constexpr auto TeamDeathLastSpawnAreaInfluence = 0x448; // float
		constexpr auto TeamDeathLastSpawnAreaDistance = 0x44c; // float
		constexpr auto TeamDeathLastSpawnAreaInfluenceExponent = 0x450; // float
		constexpr auto IdlePlayerTimeout = 0x454; // int32_t
		constexpr auto CountdownToStartTime = 0x458; // int32_t
		constexpr auto SetupRoundTime = 0x45c; // int32_t
		constexpr auto CinematicSetupRoundTime = 0x460; // int32_t
		constexpr auto StratTime = 0x464; // int32_t
		constexpr auto RoundTime = 0x468; // int32_t
		constexpr auto PostRoundTime = 0x46c; // int32_t
		constexpr auto WarmupRespawnTime = 0x470; // int32_t
		constexpr auto PostMatchTime = 0x474; // int32_t
		constexpr auto WaitingToStartTimer = 0x478; // int32_t
		constexpr auto VoteTime = 0x47c; // int32_t
		constexpr auto VoteKickEnabled = 0x480; // bool
		constexpr auto CharacterDestroyTime = 0x484; // float
		constexpr auto PassiveFireUpEarnTime = 0x488; // float
		constexpr auto MultikillTimer = 0x48c; // float
		constexpr auto bUseShootout = 0x490; // bool
		constexpr auto ShootoutRoundTime = 0x494; // float
		constexpr auto ShootoutSetupTime = 0x498; // float
		constexpr auto ShootoutTransitionTime = 0x49c; // float
		constexpr auto ShootoutPostRoundTime = 0x4a0; // float
		constexpr auto OverviewAndShootoutTitleScreenTimes = 0x4a4; // float
		constexpr auto CinematicsEnabled = 0x4a8; // bool
		constexpr auto CountdownToStartCinematicDelay = 0x4ac; // float
		constexpr auto OutlineAllowed = 0x4b0; // bool
		constexpr auto GrenadeLinesAllowed = 0x4b1; // bool
		constexpr auto LockedToFirstPerson = 0x4b2; // bool
		constexpr auto SpectatorTransferTime = 0x4b4; // float
		constexpr auto SpectatorTeamEnabled = 0x4b8; // bool
		constexpr auto ForceFreeCamOnSpectatorStart = 0x4b9; // bool
		constexpr auto EnemyWeaponDamageModifier = 0x4bc; // float
		constexpr auto SelfGrenadeDamageScale = 0x4c0; // float
		constexpr auto SelfOtherDamageScale = 0x4c4; // float
		constexpr auto FriendlyBulletDamageScale = 0x4c8; // float
		constexpr auto FriendlyGrenadeDamageScale = 0x4cc; // float
		constexpr auto InactivePlayerStateLifeSpan = 0x4d0; // float
		constexpr auto DisableWeaponDrop = 0x4d4; // bool
		constexpr auto SendSafeString = 0x4d5; // bool
		constexpr auto AllPlayersInvulnerable = 0x4d6; // bool
		constexpr auto WinOnTeamEmpty = 0x4d7; // bool
		constexpr auto NumBots = 0x4d8; // int32_t
		constexpr auto TakeItemFromBotDistance = 0x4dc; // float
		constexpr auto DefaultReplayName = 0x4e0; // FString
		constexpr auto RecordHz = 0x4f0; // float
		constexpr auto CheckpointDelay = 0x4f4; // float
		constexpr auto RecordReplays = 0x4f8; // bool
		constexpr auto ProScoreWin = 0x4fc; // int32_t
		constexpr auto ProScoreDraw = 0x500; // int32_t
		constexpr auto ProScoreLoss = 0x504; // int32_t
		constexpr auto CurrentMapName = 0x508; // FString
		constexpr auto CurrentModeName = 0x518; // FString
		constexpr auto TeamNames = 0x528; // TArray<FString>
		constexpr auto TeamColors = 0x538; // TArray<FString>
		constexpr auto MapDataCollection = 0x548; // FMapDataCollection
		constexpr auto TeamNations = 0x558; // TArray<ENationType>
		constexpr auto AdditionalRoundTime = 0x568; // float
		constexpr auto CurrentBots = 0x5b8; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto CurrentPlayers = 0x5c8; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto AliveCharacters = 0x5d8; // TArray<ABattalionCharacter*>
		constexpr auto CurrentVote = 0x5e8; // FVoteInfo
		constexpr auto BattalionGameState = 0x660; // ABattalionGameState*
		constexpr auto Market = 0x670; // ABattalionMarket*
		constexpr auto SpectatorRules = 0x678; // FSpectatorRules
		constexpr auto NearlyEndedTimeCurve = 0x688; // UCurveFloat*
		constexpr auto NearlyEndedScoreCurve = 0x690; // UCurveFloat*
		constexpr auto LoadoutSystem = 0x6a0; // ABattalionLoadoutSystem*
		constexpr auto LoadoutSystemClass = 0x6a8; // ABattalionLoadoutSystem*
		constexpr auto MarketClass = 0x6b0; // ABattalionMarket*
		constexpr auto RecentKilledEvents = 0x6b8; // TArray<FRecentKilledEvent>
		constexpr auto EndGameMVPs = 0x6c8; // TArray<ABattalionPlayerState*>
		constexpr auto InactivePlayerArray = 0x6d8; // TArray<APlayerState*>
		constexpr auto MatchState = 0x6e8; // FName
		constexpr auto MatchID = 0x6f0; // FGuid
		constexpr auto PreviousMatchState = 0x700; // FName
		constexpr auto NumPlayers = 0x708; // int32_t
		constexpr auto MatchSessions = 0x710; // TMap<EOnlinePlatform, FPlatformMatchSession>
		constexpr auto NumReadyPlayers = 0x764; // int32_t
		constexpr auto PendingRespawns = 0x768; // TArray<FPendingRespawnInfo>
		constexpr auto PendingSpectators = 0x778; // TArray<FPendingSpectateInfo>
		constexpr auto PendingKicks = 0x788; // TArray<FPendingKickInfo>
		constexpr auto AlliesWinEvent = 0x798; // UAkAudioEvent*
		constexpr auto AxisWinEvent = 0x7a0; // UAkAudioEvent*
		constexpr auto DrawEvent = 0x7a8; // UAkAudioEvent*
		constexpr auto GameStartedVOEvent = 0x7b0; // UAkAudioEvent*
		constexpr auto HalfTimeVOEvent = 0x7b8; // UAkAudioEvent*
		constexpr auto NextRoundTimeout_Techncial = 0x7c0; // bool
		constexpr auto NextRoundTimeout_Tactical = 0x7c1; // bool
		constexpr auto PlayedCountdownMusic = 0x7c2; // bool
		constexpr auto PeriodicalTickTimer = 0x7c4; // float
		constexpr auto TeamSpecIDCheckTimer = 0x7c8; // float
		constexpr auto TeamSpecIDCheckReset = 0x7cc; // float
		constexpr auto PassiveEarnFireUpTimer = 0x7d0; // float
		constexpr auto BattInstance = 0x7d8; // UBattalionGameInstance*
		constexpr auto CommandManager = 0x7e0; // UBattalionCommandManager*
		constexpr auto MedalManager = 0x7e8; // UBattalionMedalManager*
		constexpr auto MedalDataAsset = 0x7f0; // UBattalionMedalsDataAsset*
		constexpr auto PerfTextLocs = 0x800; // TArray<APerfTestLocation*>
		constexpr auto TimedScoreAwardHandle = 0x818; // FTimerHandle
		constexpr auto ScoreAwardsDataAsset = 0x820; // UPromodGameModeScoreAwardsDataAsset*
		constexpr auto PlayersToAwardTickedScoreTo = 0x828; // TArray<FTickedIntervalScoreAwardEntity>
	}

	namespace n_UPromodOffensiveUtilDataAsset {
		constexpr auto OffensiveUtils = 0x30; // TArray<FOffensiveUtilItem>
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_APromodShootoutSpawn {
		constexpr auto bAllowed = 0x278; // bool
		constexpr auto bTugOfWar = 0x279; // bool
	}

	namespace n_UCargoTeam {
		constexpr auto TimeTaken = 0x180; // float
		constexpr auto TimeRemaining = 0x184; // float
		constexpr auto GracePeriodRemaining = 0x188; // float
		constexpr auto LastReachedCheckpoint = 0x18c; // int32_t
		constexpr auto LastReachedCheckpointPip = 0x190; // int32_t
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_AWartidePlayerController {
		constexpr auto BuyGrenadeSound = 0xc60; // UAkAudioEvent*
		constexpr auto BuySpecialGrenadeSound = 0xc68; // UAkAudioEvent*
		constexpr auto BuyWeaponSound = 0xc70; // UAkAudioEvent*
		constexpr auto DonateSound = 0xc78; // UAkAudioEvent*
		constexpr auto RequestDonateSound = 0xc80; // UAkAudioEvent*
		constexpr auto RecievedDonationSound = 0xc88; // UAkAudioEvent*
		constexpr auto ShowBombActionPlant = 0xc90; // bool
		constexpr auto ShowBombActionDefuse = 0xc91; // bool
		constexpr auto AlreadyPlayedVoiceInstructions = 0xc92; // bool
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UNUICredits {
		constexpr auto ScrollStartOffset = 0x290; // float
		constexpr auto ScrollEndOffset = 0x294; // float
		constexpr auto ScrollMaxSpeed = 0x298; // float
		constexpr auto ScrollAutoScrollSpeed = 0x29c; // float
		constexpr auto MaxDelayTilAutoScroll = 0x2a0; // float
		constexpr auto ScrollAcceleration = 0x2a4; // float
		constexpr auto ControlAnalogStick = 0x2a8; // EControllerAnalogStick
	}

	namespace n_UWBP_ClassChanged_C {
		constexpr auto FadeInAndOut = 0x260; // UWidgetAnimation*
		constexpr auto HUDColour = 0x268; // UHUDTextDataAsset*
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_UWBP_PlayerLoadoutModificationScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AcceptButton = 0x268; // UTextButton_C*
		constexpr auto BTN_Back = 0x270; // UTextButton_C*
		constexpr auto BTN_Delete = 0x278; // UTextButton_C*
		constexpr auto BTN_FireUp = 0x280; // UTextButton_C*
		constexpr auto BTN_Hat = 0x288; // UTextButton_C*
		constexpr auto BTN_Melee = 0x290; // UTextButton_C*
		constexpr auto BTN_Offense = 0x298; // UTextButton_C*
		constexpr auto BTN_Primary = 0x2a0; // UTextButton_C*
		constexpr auto BTN_Quick = 0x2a8; // UTextButton_C*
		constexpr auto BTN_SaveLoadout = 0x2b0; // UTextButton_C*
		constexpr auto BTN_SetFave = 0x2b8; // UTextButton_C*
		constexpr auto BTN_Sidearm = 0x2c0; // UTextButton_C*
		constexpr auto BTN_Tactical = 0x2c8; // UTextButton_C*
		constexpr auto DescriptText = 0x2d0; // UTextBlock*
		constexpr auto FavouriteImage = 0x2d8; // UImage*
		constexpr auto Fireup = 0x2e0; // UWBP_ModKitWeaponButton_C*
		constexpr auto Hats = 0x2e8; // UWBP_ModKitWeaponButton_C*
		constexpr auto Image = 0x2f0; // UImage*
		constexpr auto Image_2 = 0x2f8; // UImage*
		constexpr auto Image_3 = 0x300; // UImage*
		constexpr auto Image_4 = 0x308; // UImage*
		constexpr auto Image_134 = 0x310; // UImage*
		constexpr auto Image_154 = 0x318; // UImage*
		constexpr auto LoadoutName = 0x320; // UMultiLineEditableText*
		constexpr auto MainWeapon = 0x328; // UWBP_ModKitWeaponButton_C*
		constexpr auto Melee = 0x330; // UWBP_ModKitWeaponButton_C*
		constexpr auto OffensiveUtil = 0x338; // UWBP_ModKitWeaponButton_C*
		constexpr auto QuickUtil = 0x340; // UWBP_ModKitWeaponButton_C*
		constexpr auto SavedPopupOverlay = 0x348; // UOverlay*
		constexpr auto ScaleBox_FireUpSelection = 0x350; // UScaleBox*
		constexpr auto ScaleBox_HatSelection = 0x358; // UScaleBox*
		constexpr auto ScaleBox_MainSelection = 0x360; // UScaleBox*
		constexpr auto ScaleBox_MeleeSelection = 0x368; // UScaleBox*
		constexpr auto ScaleBox_OffensiveSelection = 0x370; // UScaleBox*
		constexpr auto ScaleBox_QuickSelection = 0x378; // UScaleBox*
		constexpr auto ScaleBox_SidearnSelection = 0x380; // UScaleBox*
		constexpr auto ScaleBox_TacticalSelection = 0x388; // UScaleBox*
		constexpr auto SelectionWidgetSwitcher = 0x390; // UWidgetSwitcher*
		constexpr auto Sidearm = 0x398; // UWBP_ModKitWeaponButton_C*
		constexpr auto SizeBox_Back = 0x3a0; // USizeBox*
		constexpr auto SizeBox_Delete = 0x3a8; // USizeBox*
		constexpr auto SizeBox_FireUp = 0x3b0; // USizeBox*
		constexpr auto SizeBox_Hat = 0x3b8; // USizeBox*
		constexpr auto SizeBox_Main = 0x3c0; // USizeBox*
		constexpr auto SizeBox_Melee = 0x3c8; // USizeBox*
		constexpr auto SizeBox_Offense = 0x3d0; // USizeBox*
		constexpr auto SizeBox_QuickUtil = 0x3d8; // USizeBox*
		constexpr auto SizeBox_Save = 0x3e0; // USizeBox*
		constexpr auto SizeBox_SetFave = 0x3e8; // USizeBox*
		constexpr auto SizeBox_Sidearm = 0x3f0; // USizeBox*
		constexpr auto SizeBox_Tactical = 0x3f8; // USizeBox*
		constexpr auto Spacer_Fave_Save = 0x400; // USpacer*
		constexpr auto Spacer_Save_Delete = 0x408; // USpacer*
		constexpr auto TacticalUtil = 0x410; // UWBP_ModKitWeaponButton_C*
		constexpr auto TitleText = 0x418; // UTextBlock*
		constexpr auto ClassData = 0x420; // UPromodClassManagerDataAsset*
		constexpr auto ThisLoopsClassData = 0x428; // UPromodClassDataAsset*
		constexpr auto PrimaryDataAssets = 0x430; // TArray<UPromodClassDataAsset*>
		constexpr auto SidearmDataAssets = 0x440; // TArray<UPromodClassDataAsset*>
		constexpr auto MeleeDataAssets = 0x450; // TArray<UPromodClassDataAsset*>
		constexpr auto AllFireUps = 0x460; // UPromodAllFireUpsDataAsset*
		constexpr auto IndexOfFireUpType = 0x468; // int32_t
		constexpr auto OffensiveDataAsset = 0x470; // UPromodOffensiveUtilDataAsset*
		constexpr auto TacticalDataAsset = 0x478; // UPromodTacticalUtilDataAsset*
		constexpr auto CostmeticDataAsset_Hats = 0x480; // UPromodCosmeticsDataAsset*
		constexpr auto OffensiveSlot = 0x488; // FOffensiveUtilItem
		constexpr auto TacticalSlot = 0x4d0; // FTacticalUtilItem
		constexpr auto HatSlot = 0x520; // FCosmeticItem
		constexpr auto LoadoutsToInitFrom = 0x558; // TArray<FLoadoutData>
		constexpr auto PrevSelectedButton = 0x568; // UTextButton_C*
		constexpr auto SelectedButtonCol = 0x570; // FLinearColor
		constexpr auto NotSelectedButtonCol = 0x580; // FLinearColor
		constexpr auto IndexOfLoadout = 0x590; // int32_t
		constexpr auto BackButton = 0x598; // FMulticastInlineDelegate
		constexpr auto QuickSlot = 0x5a8; // FQuickUtilItem
		constexpr auto QuickUtilDataAsset = 0x5d0; // UPromodQuickUtilDataAsset*
		constexpr auto bSetAsFavourite = 0x5d8; // bool
		constexpr auto IndexOfQuickUtilType = 0x5dc; // int32_t
		constexpr auto LoadoutEditedAndSaved = 0x5e0; // FMulticastInlineDelegate
		constexpr auto Max Loadout Name Length = 0x5f0; // int32_t
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UABP_Intervention_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x4f0; // FAnimNode_Slot
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UBombCharacterComponent {
		constexpr auto Bomb1PSkeletalMesh = 0x278; // USkeletalMesh*
		constexpr auto Bomb3PSkeletalMesh = 0x280; // USkeletalMesh*
		constexpr auto Bomb1PSkeletalMeshClass = 0x288; // UObject*
		constexpr auto Bomb3PSkeletalMeshClass = 0x290; // UObject*
		constexpr auto PlantingAnim = 0x298; // FSpecialAnim
		constexpr auto QuickPlantingAnim = 0x2b8; // FSpecialAnim
		constexpr auto DefusingAnim = 0x2d8; // FSpecialAnim
		constexpr auto Mesh1PMaterials = 0x2f8; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_ALiveFireGameMode {
		constexpr auto bUseRandomLocationForBotSpawning = 0x850; // bool
		constexpr auto CurrentDifficulty = 0x851; // ELiveFireTrainingDifficulty
		constexpr auto DifficultyModes = 0x858; // TMap<ELiveFireTrainingDifficulty, FLiveFireTrainingDetails>
		constexpr auto BotClass = 0x8a8; // APromodBot*
		constexpr auto SpawnCount = 0x8b0; // int32_t
		constexpr auto NumBotsSpawned = 0x8b4; // int32_t
	}

	namespace n_UPromodWeaponDataAsset {
		constexpr auto PromodWeapons = 0x30; // TArray<FPromodWeaponInfo>
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_AMapEditorGizmo {
		constexpr auto TransformRootComponent = 0x220; // USceneComponent*
		constexpr auto TranslationRootComponent = 0x228; // USceneComponent*
		constexpr auto TranslationFreeAxis = 0x230; // UStaticMeshComponent*
		constexpr auto TranslationHandleXAxis = 0x238; // UStaticMeshComponent*
		constexpr auto TranslationHandleYAxis = 0x240; // UStaticMeshComponent*
		constexpr auto TranslationHandleZAxis = 0x248; // UStaticMeshComponent*
		constexpr auto TranslationHandleXYAxis = 0x250; // UStaticMeshComponent*
		constexpr auto TranslationHandleXZAxis = 0x258; // UStaticMeshComponent*
		constexpr auto TranslationHandleYZAxis = 0x260; // UStaticMeshComponent*
		constexpr auto RotationRootComponent = 0x268; // USceneComponent*
		constexpr auto RotationHandleTrackBall = 0x270; // UStaticMeshComponent*
		constexpr auto RotationHandleXAxis = 0x278; // UStaticMeshComponent*
		constexpr auto RotationHandleYAxis = 0x280; // UStaticMeshComponent*
		constexpr auto RotationHandleZAxis = 0x288; // UStaticMeshComponent*
		constexpr auto ScaleRootComponent = 0x290; // USceneComponent*
		constexpr auto ScaleHandleUniform = 0x298; // UStaticMeshComponent*
		constexpr auto ScaleHandleXAxis = 0x2a0; // UStaticMeshComponent*
		constexpr auto ScaleHandleYAxis = 0x2a8; // UStaticMeshComponent*
		constexpr auto ScaleHandleZAxis = 0x2b0; // UStaticMeshComponent*
		constexpr auto ScaleHandleXYAxis = 0x2b8; // UStaticMeshComponent*
		constexpr auto ScaleHandleXZAxis = 0x2c0; // UStaticMeshComponent*
		constexpr auto ScaleHandleYZAxis = 0x2c8; // UStaticMeshComponent*
		constexpr auto TransformHandleDataMap = 0x2d0; // TMap<UPrimitiveComponent*, FGizmoHandleData>
		constexpr auto TransformMode = 0x320; // EMapEditorTransformMode
		constexpr auto TransformSpace = 0x321; // EMapEditorTransformSpace
		constexpr auto AttachedObject = 0x328; // AMapEditorObject*
		constexpr auto SelectedObjects = 0x330; // TArray<AMapEditorObject*>
		constexpr auto bIsPerformingDragAction = 0x340; // bool
		constexpr auto CurrentlyHoveredHandle = 0x348; // UPrimitiveComponent*
		constexpr auto MapEditorControllerRef = 0x350; // AMapEditorController*
		constexpr auto MapEditorPawnRef = 0x358; // AMapEditorPawn*
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UWBP_SP_HUDEquipment_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_AmmoAdded = 0x268; // UWidgetAnimation*
		constexpr auto HB_Ammo = 0x270; // UHorizontalBox*
		constexpr auto IB_Ammo = 0x278; // UInvalidationBox*
		constexpr auto IB_LoadPos = 0x280; // UInvalidationBox*
		constexpr auto IB_SavePos = 0x288; // UInvalidationBox*
		constexpr auto IB_TacticalUtil = 0x290; // UInvalidationBox*
		constexpr auto IB_WeaponSlot = 0x298; // UInvalidationBox*
		constexpr auto IMG_OffensiveUtilImage = 0x2a0; // UImage*
		constexpr auto IMG_QuickUtilImage = 0x2a8; // UImage*
		constexpr auto IMG_Slot1 = 0x2b0; // UImage*
		constexpr auto IMG_Slot2 = 0x2b8; // UImage*
		constexpr auto IMG_Slot3 = 0x2c0; // UImage*
		constexpr auto IMG_TacticalUtilBackground = 0x2c8; // UImage*
		constexpr auto IMG_TacticalUtilImage = 0x2d0; // UImage*
		constexpr auto IMG_WeaponBackground = 0x2d8; // UImage*
		constexpr auto IMG_WeaponIconSlot1 = 0x2e0; // UImage*
		constexpr auto IMG_WeaponIconSlot2 = 0x2e8; // UImage*
		constexpr auto IMG_WeaponIconSlot3 = 0x2f0; // UImage*
		constexpr auto KEY_Load = 0x2f8; // UPlatformKeyImage_C*
		constexpr auto KEY_Reset = 0x300; // UPlatformKeyImage_C*
		constexpr auto KEY_Save = 0x308; // UPlatformKeyImage_C*
		constexpr auto PB_LoadPos = 0x310; // UProgressBar*
		constexpr auto PB_SetPos = 0x318; // UProgressBar*
		constexpr auto TB_AddedAmmo = 0x320; // UTextBlock*
		constexpr auto TB_ClipAmmo = 0x328; // UTextBlock*
		constexpr auto TB_ReserveAmmo = 0x330; // UTextBlock*
		constexpr auto WS_SlotIcon = 0x338; // UWidgetSwitcher*
		constexpr auto WS_SlotIndex = 0x340; // UWidgetSwitcher*
		constexpr auto Clip Ammo = 0x348; // int32_t
		constexpr auto Reserve Ammo = 0x34c; // int32_t
		constexpr auto Tactical Util Type = 0x350; // ESpecialGrenadeType
		constexpr auto Offensive Util Type = 0x351; // EGrenadeType
		constexpr auto Quick Util Type = 0x352; // EFireUpType
		constexpr auto Offensive Util Count = 0x354; // int32_t
		constexpr auto Tactical Util Count = 0x358; // int32_t
		constexpr auto Quick Util Count = 0x35c; // int32_t
		constexpr auto Player State = 0x360; // APromodPlayerState*
		constexpr auto ActiveSlot = 0x368; // ESlotType
		constexpr auto AvailableBackground = 0x370; // UTexture2D*
		constexpr auto NotAvailableBackground = 0x378; // UTexture2D*
		constexpr auto OwningController = 0x380; // APromodPlayerController*
		constexpr auto SpectatedPlayerCharacter = 0x388; // APromodPawn_C*
		constexpr auto SavePosPressed = 0x390; // bool
		constexpr auto LoadPosPressed = 0x391; // bool
		constexpr auto ResetPressed = 0x392; // bool
		constexpr auto Delta Time = 0x394; // float
		constexpr auto SavePosTimePressed = 0x398; // float
		constexpr auto LoadPosTimePressed = 0x39c; // float
		constexpr auto SavePosActivateTime = 0x3a0; // float
		constexpr auto LoadPosActivateTime = 0x3a4; // float
		constexpr auto ShowGizmoOptions = 0x3a8; // bool
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UWBP_StyleScoreAwardFeed_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto On_Fire_Chromatic = 0x278; // UWidgetAnimation*
		constexpr auto +15-Fire-Kill = 0x280; // UWidgetAnimation*
		constexpr auto +10-Fire-Kill = 0x288; // UWidgetAnimation*
		constexpr auto Edge_Glow = 0x290; // UWidgetAnimation*
		constexpr auto Fire-Shot = 0x298; // UWidgetAnimation*
		constexpr auto OnFireGlowIcon = 0x2a0; // UWidgetAnimation*
		constexpr auto FadeOffWithTime = 0x2a8; // UWidgetAnimation*
		constexpr auto AwardContainer = 0x2b0; // UVerticalBox*
		constexpr auto HB_ComboScore = 0x2b8; // UHorizontalBox*
		constexpr auto HB_ComboScore_BLUE = 0x2c0; // UHorizontalBox*
		constexpr auto HB_ComboScore_RED = 0x2c8; // UHorizontalBox*
		constexpr auto Image_492 = 0x2d0; // UImage*
		constexpr auto On-Fire-Edge-Glow-BLue = 0x2d8; // UImage*
		constexpr auto On-Fire-Edge-Glow-BLue_Shot = 0x2e0; // UImage*
		constexpr auto On_Fire = 0x2e8; // UOn_Fire_C*
		constexpr auto OnFireGlow = 0x2f0; // UImage*
		constexpr auto OnFireProgressBar = 0x2f8; // UProgressBar*
		constexpr auto RetainerBox_1 = 0x300; // URetainerBox*
		constexpr auto RetainerBox_2 = 0x308; // URetainerBox*
		constexpr auto ScoreContainer = 0x310; // UHorizontalBox*
		constexpr auto ScoreText = 0x318; // UTextBlock*
		constexpr auto ScoreText_BLUE = 0x320; // UTextBlock*
		constexpr auto ScoreText_RED = 0x328; // UTextBlock*
		constexpr auto TB_ComboMultiplier = 0x330; // UTextBlock*
		constexpr auto TB_ComboMultiplier_BLUE = 0x338; // UTextBlock*
		constexpr auto TB_ComboMultiplier_RED = 0x340; // UTextBlock*
		constexpr auto TB_ComboScore = 0x348; // UTextBlock*
		constexpr auto TB_ComboScore_BLUE = 0x350; // UTextBlock*
		constexpr auto TB_ComboScore_RED = 0x358; // UTextBlock*
		constexpr auto WBP_StyleScoreAwardEntry = 0x360; // UWBP_StyleScoreAwardEntry_C*
		constexpr auto WBP_StyleScoreAwardEntry_2 = 0x368; // UWBP_StyleScoreAwardEntry_C*
		constexpr auto WBP_StyleScoreAwardEntry_3 = 0x370; // UWBP_StyleScoreAwardEntry_C*
		constexpr auto WBP_StyleScoreAwardEntry_4 = 0x378; // UWBP_StyleScoreAwardEntry_C*
		constexpr auto WBP_StyleScoreAwardEntry_5 = 0x380; // UWBP_StyleScoreAwardEntry_C*
		constexpr auto OnFireThreshold = 0x388; // int32_t
		constexpr auto ComboDecayTime = 0x38c; // float
		constexpr auto currentOnFireScore = 0x390; // int32_t
		constexpr auto OnFireVisible = 0x394; // bool
		constexpr auto CurrentComboScore = 0x398; // float
		constexpr auto CurrentComboMultiplier = 0x39c; // int32_t
		constexpr auto OldOnFire = 0x3a0; // bool
		constexpr auto OnFireVar = 0x3a4; // float
		constexpr auto HUD Colour = 0x3a8; // UHUDTextDataAsset*
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_ATDMGameMode {
		constexpr auto EndOnMatchPointWin = 0x838; // bool
		constexpr auto WeaponSelectGracePeriod = 0x83c; // float
		constexpr auto RoundTimeLeftUntilStopBackfill = 0x840; // float
		constexpr auto ScorePctToStopBackfill = 0x844; // float
		constexpr auto AlreadyStoppedBackfill = 0x848; // bool
		constexpr auto UsedSpawns = 0x868; // TArray<AActor*>
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x218; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x220; // UAkRoomComponent*
		constexpr auto Priority = 0x228; // float
		constexpr auto WallOcclusion = 0x22c; // float
		constexpr auto AuxSendLevel = 0x230; // float
		constexpr auto AutoPost = 0x234; // bool
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UKantanBarChartWidgetStyle {
		constexpr auto ChartStyle = 0x30; // FKantanBarChartStyle
	}

	namespace n_UBattalionCharacterComponent {
		constexpr auto MusicEvent = 0x1f8; // UAkAudioEvent*
		constexpr auto StopMusicEvent = 0x200; // UAkAudioEvent*
		constexpr auto PauseMusicEvent = 0x208; // UAkAudioEvent*
		constexpr auto ResumeMusicEvent = 0x210; // UAkAudioEvent*
	}

	namespace n_UDebug_Button-LIGHT-LEFT-JUSTIFIED_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TEXT_MOTION = 0x268; // UWidgetAnimation*
		constexpr auto UNHOVER = 0x270; // UWidgetAnimation*
		constexpr auto HOVER = 0x278; // UWidgetAnimation*
		constexpr auto BLUETEXT = 0x280; // UTextBlock*
		constexpr auto Blur-Steak = 0x288; // UImage*
		constexpr auto DEBUG-BUTTON = 0x290; // UButton*
		constexpr auto REDTEXT = 0x298; // UTextBlock*
		constexpr auto TOPTEXT = 0x2a0; // UTextBlock*
		constexpr auto Text = 0x2a8; // FText
		constexpr auto NewVar_1 = 0x2c0; // bool
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_URarityColourDataAsset {
		constexpr auto RarityColours = 0x30; // TArray<FRarityColourEntity>
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_ACTFGameMode {
		constexpr auto DistanceToFlagTouch = 0x878; // float
		constexpr auto DistanceToFlagZone = 0x87c; // float
		constexpr auto DropFlagDisablePickupCounter = 0x880; // float
		constexpr auto FlagZoneSpawnWeighting = 0x884; // float
		constexpr auto FlagZoneSpawnDistance = 0x888; // float
		constexpr auto EnemyFlagAtZoneSpawnPointScalar = 0x88c; // float
		constexpr auto AllyFlagAtZoneSpawnPointScalar = 0x890; // float
		constexpr auto EnemyFlagNotAtZoneSpawnPointScalar = 0x894; // float
		constexpr auto AllyFlagNotAtZoneSpawnPointScalar = 0x898; // float
		constexpr auto UseOvertime = 0x89c; // bool
		constexpr auto FlagCheckTime = 0x8a0; // float
		constexpr auto ExtraTimeSet = 0x8a4; // bool
		constexpr auto NumOvertimeRounds = 0x8a8; // int32_t
		constexpr auto DroppedFlagResetTime = 0x8ac; // float
		constexpr auto VerticalDistanceToFlagZone = 0x8b8; // float
		constexpr auto CTFGameState = 0x8c0; // ACTFGameState*
		constexpr auto FlagClass = 0x8c8; // UObject*
		constexpr auto FlagZoneClass = 0x8d0; // UObject*
		constexpr auto mFriendPickedUpEvent = 0x8d8; // FNationSound
		constexpr auto mEnemyPickedUpEvent = 0x8f8; // FNationSound
		constexpr auto mFriendDroppedEvent = 0x918; // FNationSound
		constexpr auto mEnemyDroppedEvent = 0x938; // FNationSound
		constexpr auto mFriendReturnedEvent = 0x958; // FNationSound
		constexpr auto mEnemyReturnedEvent = 0x978; // FNationSound
		constexpr auto mFriendCapturedEvent = 0x998; // FNationSound
		constexpr auto mEnemyCapturedEvent = 0x9b8; // FNationSound
		constexpr auto EnemyFlagCapturedEvent = 0x9d8; // UAkAudioEvent*
		constexpr auto EnemyFlagReturnedEvent = 0x9e0; // UAkAudioEvent*
		constexpr auto EnemyFlagTakenEvent = 0x9e8; // UAkAudioEvent*
		constexpr auto FriendlyFlagCapturedEvent = 0x9f0; // UAkAudioEvent*
		constexpr auto FriendlyFlagReturnedEvent = 0x9f8; // UAkAudioEvent*
		constexpr auto FriendlyFlagTakenEvent = 0xa00; // UAkAudioEvent*
		constexpr auto PersonalFlagPickupEvent = 0xa08; // UAkAudioEvent*
		constexpr auto OnFloorTimer = 0xa10; // float
		constexpr auto FloorTimerActive = 0xa14; // bool
	}

	namespace n_UABP_AmmoBox_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UWBP_SNDLeaderboard_C {
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
		constexpr auto BackgroundBlur_106 = 0x2b0; // UBackgroundBlur*
		constexpr auto Border_RoundNumber = 0x2b8; // UBorder*
		constexpr auto Border_RoundPips = 0x2c0; // UBorder*
		constexpr auto CanvasPanel_71 = 0x2c8; // UCanvasPanel*
		constexpr auto IMG_SelfTeamBottomBar = 0x2d0; // UImage*
		constexpr auto IMG_SelfTeamHalfTimeArrow = 0x2d8; // UImage*
		constexpr auto SB_RoundPips = 0x2e0; // USizeBox*
		constexpr auto SB_SelfTeamBottomBar = 0x2e8; // USizeBox*
		constexpr auto SB_SelfTeamHalfTimeArrow = 0x2f0; // USizeBox*
		constexpr auto TB_EnemyTeamScore = 0x2f8; // UTextBlock*
		constexpr auto TB_RoundNumber = 0x300; // UTextBlock*
		constexpr auto TB_SelfTeamScore = 0x308; // UTextBlock*
		constexpr auto VB_EnemyTeamPlayers = 0x310; // UVerticalBox*
		constexpr auto VB_SelfTeamPlayers = 0x318; // UVerticalBox*
		constexpr auto VerticalBox = 0x320; // UVerticalBox*
		constexpr auto VerticalBox_140 = 0x328; // UVerticalBox*
		constexpr auto WB_RoundPips = 0x330; // UHorizontalBox*
		constexpr auto WBP_SNDLeaderboardItem_C_1 = 0x338; // UWBP_SNDLeaderboardItem_C*
		constexpr auto LeaderboardItemWidgets = 0x340; // TArray<UWBP_SNDLeaderboardItem_C*>
		constexpr auto TotalPlayers = 0x350; // int32_t
		constexpr auto MissingLeaderboardItems = 0x354; // int32_t
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_UMedalAnotherNotch {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UNUIScreenEffects {
		constexpr auto SniperVignette = 0x278; // float
		constexpr auto DamageIndicatorClass = 0x288; // UNUIDamageIndicator*
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_UBattalionCommandManager {
		constexpr auto GameMode = 0x28; // ABattalionGameMode*
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_AHQGameMode {
		constexpr auto CaptureTime = 0x878; // float
		constexpr auto CooldownTime = 0x87c; // float
		constexpr auto CaptureScore = 0x880; // int32_t
		constexpr auto ScorePerSecond = 0x884; // int32_t
		constexpr auto ObjectiveResetTime = 0x888; // float
		constexpr auto ObjectiveRespawnTime = 0x88c; // float
		constexpr auto ObjectiveUnlockTime = 0x890; // float
		constexpr auto ObjectiveCaptureTimeout = 0x894; // float
		constexpr auto ExtraTimeSet = 0x898; // bool
		constexpr auto ZoneClass = 0x8a0; // UObject*
		constexpr auto ObjectiveCapturedEventFriendly = 0x8e0; // UAkAudioEvent*
		constexpr auto ObjectiveCapturedEventEnemy = 0x8e8; // UAkAudioEvent*
		constexpr auto ObjectiveDestroyedEvent = 0x8f0; // UAkAudioEvent*
		constexpr auto FriendlyCapturedHQEvent = 0x8f8; // UAkAudioEvent*
		constexpr auto EnemyCapturedHQEvent = 0x900; // UAkAudioEvent*
		constexpr auto FriendlyDestroyedHQEvent = 0x908; // UAkAudioEvent*
		constexpr auto EnemyDestroyedHQEvent = 0x910; // UAkAudioEvent*
		constexpr auto FriendlySecuredHQEvent = 0x918; // UAkAudioEvent*
		constexpr auto EnemySecuredHQEvent = 0x920; // UAkAudioEvent*
		constexpr auto HQUnlockedEvent = 0x928; // UAkAudioEvent*
		constexpr auto HQLocatedEvent = 0x930; // UAkAudioEvent*
		constexpr auto DebugLogTimer = 0x938; // float
		constexpr auto DebugLogInterval = 0x93c; // float
		constexpr auto DebuggingEndRound = 0x940; // bool
	}

	namespace n_UNUITeamMatchResultScreen {
		constexpr auto ResultTextColor = 0x350; // FLinearColor
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UNUIBombGameOverview {
		constexpr auto LeftTeamWidgets = 0x3a0; // TArray<UNUIBombGameOverviewAvatar*>
		constexpr auto RightTeamWidgets = 0x3b0; // TArray<UNUIBombGameOverviewAvatar*>
		constexpr auto AvatarWidgetClass = 0x3c0; // UNUIBombGameOverviewAvatar*
		constexpr auto LeftPlayerList = 0x3c8; // TArray<ABombPlayerState*>
		constexpr auto RightPlayerList = 0x3d8; // TArray<ABombPlayerState*>
		constexpr auto LeftTeamAliveCount = 0x3e8; // FText
		constexpr auto RightTeamAliveCount = 0x400; // FText
		constexpr auto SpectatorScoreVisibility = 0x418; // ESlateVisibility
		constexpr auto LeftTeamAvatarsVisibility = 0x419; // ESlateVisibility
		constexpr auto RightTeamAvatarsVisibility = 0x41a; // ESlateVisibility
		constexpr auto LeftTeamAliveCountVisibility = 0x41b; // ESlateVisibility
		constexpr auto RightTeamAliveCountVisibility = 0x41c; // ESlateVisibility
		constexpr auto SpectatorBombInteractionTimerVisibility = 0x41d; // ESlateVisibility
		constexpr auto BombInteractionProgress = 0x420; // float
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_ACargoPlayerSpawn {
		constexpr auto Checkpoint = 0x278; // int32_t
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_UWBP_GenericBlockedMessage_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x268; // UWidgetAnimation*
		constexpr auto Intro = 0x270; // UWidgetAnimation*
		constexpr auto descriptiontext = 0x278; // UTextBlock*
		constexpr auto descriptiontextBLUE = 0x280; // UTextBlock*
		constexpr auto descriptiontextRED = 0x288; // UTextBlock*
		constexpr auto bIsShowing = 0x290; // bool
		constexpr auto FadeDelay = 0x294; // float
		constexpr auto HUDReference = 0x298; // UHUDMaster*
	}

	namespace n_UGrenadeMarker {
		constexpr auto LinkedCharacter = 0x260; // ABattalionCharacter*
		constexpr auto BeaconScaleX = 0x268; // float
		constexpr auto BeaconScaleY = 0x26c; // float
		constexpr auto Angle = 0x270; // float
		constexpr auto Translation = 0x274; // FVector2D
		constexpr auto Image = 0x280; // UImage*
		constexpr auto NadeImage = 0x288; // UImage*
		constexpr auto ScaledPlayerPos = 0x290; // FVector2D
		constexpr auto RotationAngle = 0x298; // float
		constexpr auto CanvasPanelSlot = 0x2a0; // UCanvasPanelSlot*
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UPromodMainMenuScreen {
		constexpr auto UNLOCKEDLEVELS = 0x290; // TArray<FString>
		constexpr auto KillrunLevelStarsMap = 0x2a0; // TMap<FString, int32_t>
	}

	namespace n_ULeaderboardItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LocalPlayerArrowBreathe = 0x268; // UWidgetAnimation*
		constexpr auto BackdropImage = 0x270; // UImage*
		constexpr auto NameBox = 0x278; // UTextBlock*
		constexpr auto ProfileBtn = 0x280; // UButton*
		constexpr auto RankBox = 0x288; // UTextBlock*
		constexpr auto timeBox = 0x290; // UTextBlock*
		constexpr auto PlayerNetId = 0x298; // FUniqueNetIdRepl
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UMedal50BombHQ {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_APromodPlayerState {
		constexpr auto LastChosenClass = 0x5e8; // FLoadoutData
		constexpr auto PendingClassChange = 0x730; // FLoadoutData
		constexpr auto OnFireupAvailabilityChanged = 0x878; // FMulticastInlineDelegate
		constexpr auto OnQuickUtilAvailabilityChanged = 0x888; // FMulticastInlineDelegate
		constexpr auto OnClassChanged = 0x898; // FMulticastInlineDelegate
		constexpr auto FireUpScoreProgress = 0x8a8; // float
		constexpr auto bShootoutEliminated = 0x8ac; // bool
		constexpr auto KillsThisRound = 0x8b0; // int32_t
		constexpr auto bHasSpawnedWithClass = 0x8b4; // bool
		constexpr auto FireupState_Ultimate = 0x8b8; // FFireupState
		constexpr auto FireupState_Quick = 0x8c8; // FFireupState
		constexpr auto TimeUntilQuickUtilAward = 0x8d8; // float
		constexpr auto CurrentActionPrompt = 0x8dc; // EPromodActionPrompt
		constexpr auto CurrentKillConfirmPoints = 0x8e0; // int32_t
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UNUIReadyPrompt {
		constexpr auto ReadyState = 0x278; // bool
		constexpr auto BindName = 0x280; // FText
		constexpr auto RequiredPlayersRemainingText = 0x298; // FText
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_AHardpointGameState {
		constexpr auto CurrentZoneTimeRemaining = 0x610; // float
		constexpr auto CurrentHardpointState = 0x614; // EHardpointState
		constexpr auto CurrentZoneAllegiance = 0x618; // int32_t
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UNuclearAsset {
		constexpr auto UUID = 0x30; // FGuid
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_ABattalionBloodEffect {
		constexpr auto DefaultDecals = 0x220; // TArray<FDecalData>
		constexpr auto DecalDepth = 0x230; // float
		constexpr auto SurfaceHit = 0x234; // FHitResult
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_AScaledMapBeacon {
		constexpr auto MapScaleExtents = 0x260; // UBoxComponent*
	}

	namespace n_ADOMGameState {
		constexpr auto Zones = 0x4a0; // TArray<ADOMMode_Zone*>
		constexpr auto CaptureTime = 0x4b0; // float
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x388; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UMedal40BombHQ {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_AInfectionGameState {
		constexpr auto SurvivorTeamSize = 0x4a0; // int32_t
		constexpr auto InfectedAlive = 0x4a4; // int32_t
	}

	namespace n_UWBP_GrenadeMarker_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto Arrow = 0x270; // UImage*
		constexpr auto CanvasPanel_1 = 0x278; // UCanvasPanel*
		constexpr auto Grenade = 0x280; // UImage*
		constexpr auto GrenadeOverlay = 0x288; // UOverlay*
		constexpr auto RotationParent = 0x290; // UCanvasPanel*
		constexpr auto bIsInUse = 0x298; // bool
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UPlayFabServerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x8c8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x8d0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x8d8; // UPlayFabJsonObject*
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_AMapIconActor {
		constexpr auto MapIconComponent = 0x220; // UMapIconComponent*
	}

	namespace n_UWBP_BlitzBombProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Percentage = 0x268; // UTextBlock*
		constexpr auto ProgressBar = 0x270; // UWBP_BombProgressBar_C*
	}

	namespace n_UMedalDomination {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UKantanChartLegend {
		constexpr auto Margins = 0x108; // FMargin
		constexpr auto SeriesPadding = 0x118; // FMargin
		constexpr auto Background = 0x128; // FSlateBrush
		constexpr auto FontSize = 0x1b0; // int32_t
		constexpr auto Chart = 0x1b4; // TWeakObjectPtr<UKantanCartesianChartBase>
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_ABattalionWeapon {
		constexpr auto DematerializeTimeline = 0x220; // UTimelineComponent*
		constexpr auto OnFireStateChanged = 0x230; // FMulticastInlineDelegate
		constexpr auto WeaponMaterialIcon = 0x260; // UMaterialInterface*
		constexpr auto PrimaryIcon = 0x268; // FCanvasIcon
		constexpr auto SecondaryIcon = 0x280; // FCanvasIcon
		constexpr auto PrimaryClipIcon = 0x298; // FCanvasIcon
		constexpr auto SecondaryClipIcon = 0x2b0; // FCanvasIcon
		constexpr auto AmmoIconsCount = 0x2c8; // float
		constexpr auto PrimaryClipIconOffset = 0x2cc; // int32_t
		constexpr auto SecondaryClipIconOffset = 0x2d0; // int32_t
		constexpr auto Crosshair = 0x2d8; // FCanvasIcon [0x5]
		constexpr auto AimingCrosshair = 0x350; // FCanvasIcon [0x5]
		constexpr auto UseLaserDot = 0x3c8; // bool
		constexpr auto UseCustomCrosshair = 0x3c9; // bool
		constexpr auto UseCustomAimingCrosshair = 0x3ca; // bool
		constexpr auto bHideCrosshairWhileNotAiming = 0x3cb; // bool
		constexpr auto bHideCrosshairWhileAiming = 0x3cc; // bool
		constexpr auto HideWeaponDuringTransition = 0x3cd; // bool
		constexpr auto TransitionHideWeaponPoint = 0x3d0; // float
		constexpr auto ActiveReloadAnim = 0x3d8; // FWeaponAnim
		constexpr auto SkinAssetToLoad_FP = 0x3f8; // TArray<FSoftObjectPath>
		constexpr auto SkinAssetToLoad_3P = 0x408; // TArray<FSoftObjectPath>
		constexpr auto EnableRTPCSinceBurst = 0x430; // bool
		constexpr auto RTPCSinceBurstMAX = 0x434; // float
		constexpr auto DefaultAkComp = 0x438; // UAkComponent*
		constexpr auto WeaponBashImpactSound = 0x440; // UAkAudioEvent*
		constexpr auto SkinId = 0x448; // FString
		constexpr auto MyPawn = 0x458; // ABattalionCharacter*
		constexpr auto MyPawn_PlayerState = 0x460; // ABattalionPlayerState*
		constexpr auto DefaultRelativeRotation = 0x470; // FQuat
		constexpr auto CurrentWeaponLevel = 0x480; // int32_t
		constexpr auto OnWeaponFinishedHolster = 0x488; // FMulticastInlineDelegate
		constexpr auto WeaponName = 0x4a0; // FString
		constexpr auto WeaponIcon = 0x4b0; // UTexture2D*
		constexpr auto WeaponModKitIcon = 0x4b8; // UTexture2D*
		constexpr auto ParentModKit = 0x4c0; // EParentModKit
		constexpr auto CosmeticData = 0x4c8; // FWeaponCosmeticDataArray
		constexpr auto StatsDataAsset = 0x4e0; // UPromodWeaponStatsDataAsset*
		constexpr auto RootScene = 0x4e8; // USceneComponent*
		constexpr auto Mesh1P = 0x4f0; // UFOVSkeletalMeshComponent*
		constexpr auto Mesh1POffset = 0x4f8; // FVector
		constexpr auto Mesh1POffsetTargeting = 0x504; // FVector
		constexpr auto Mesh3P = 0x510; // USkeletalMeshComponent*
		constexpr auto BulletCasingEmitter = 0x518; // UFOVParticleSystemComponent*
		constexpr auto MagazineCasingEmitter = 0x520; // UFOVParticleSystemComponent*
		constexpr auto WeaponTraceStartOffset = 0x52c; // float
		constexpr auto EnableSniperGracePeriod = 0x534; // bool
		constexpr auto SniperGracePeriod = 0x538; // float
		constexpr auto bUseBurstShotRTPC = 0x53c; // bool
		constexpr auto SingleFireBurstRecoverySpeed = 0x544; // float
		constexpr auto AddedPerBurstValue = 0x548; // float
		constexpr auto bEnableTransitionTelescope = 0x54c; // bool
		constexpr auto PawnAkComponent = 0x550; // UAkComponent*
		constexpr auto Mesh1PMaterials = 0x558; // TArray<UMaterialInstanceDynamic*>
		constexpr auto PawnMesh1PMaterials = 0x568; // TArray<UMaterialInstanceDynamic*>
		constexpr auto TelescopeMaterialIndex = 0x578; // int32_t
		constexpr auto TelescopeMaterialParamName = 0x57c; // FName
		constexpr auto TelescopeMaterialInstance = 0x588; // UMaterialInstanceDynamic*
		constexpr auto MuzzleAttachPoint = 0x590; // FName
		constexpr auto MuzzleScale1P = 0x598; // FVector
		constexpr auto MuzzleScale3P = 0x5a4; // FVector
		constexpr auto Muzzle1PAttachToGun = 0x5b0; // bool
		constexpr auto MuzzleFX1P = 0x5b8; // UParticleSystem*
		constexpr auto MuzzleFX3P = 0x5c0; // UParticleSystem*
		constexpr auto MuzzlePSC1P = 0x5c8; // UFOVParticleSystemComponent*
		constexpr auto MuzzlePSC3P = 0x5d0; // UParticleSystemComponent*
		constexpr auto UpperRecieverAttachPoint = 0x5d8; // FName
		constexpr auto MagazineAttachPoint = 0x5e0; // FName
		constexpr auto BulletCasing = 0x5e8; // UParticleSystem*
		constexpr auto BulletCasingDelay = 0x5f0; // float
		constexpr auto MagazineCasing = 0x5f8; // UParticleSystem*
		constexpr auto MagazineCasingDelay = 0x600; // float
		constexpr auto FireCameraShake = 0x608; // UCameraShakeBase*
		constexpr auto FireForceFeedback = 0x610; // UForceFeedbackEffect*
		constexpr auto bStopSegmentedReload = 0x620; // char : 1
		constexpr auto bIsHolstered = 0x624; // bool
		constexpr auto bPendingReload = 0x628; // char : 1
		constexpr auto InspectCounter = 0x62c; // uint32_t
		constexpr auto bPendingRechamber = 0x630; // char : 1
		constexpr auto bPendingHolster = 0x638; // char : 1
		constexpr auto CurrentState = 0x640; // EWeaponState
		constexpr auto CurrentAmmo = 0x654; // int32_t
		constexpr auto CurrentAmmoInClip = 0x658; // int32_t
		constexpr auto Chambered = 0x65c; // char : 1
		constexpr auto BurstCounter = 0x660; // FWeaponBurstCounter
		constexpr auto CancelCounter = 0x66c; // int32_t
		constexpr auto b3pFireAudioLoopActive = 0x670; // bool
		constexpr auto b1pFireAudioLoopActive = 0x671; // bool
		constexpr auto TimerHandle_OnEquipFinished = 0x678; // FTimerHandle
		constexpr auto TimerHandle_OnQuickEquipFinished = 0x680; // FTimerHandle
		constexpr auto TimerHandle_OnHolsterFinished = 0x688; // FTimerHandle
		constexpr auto TimerHandle_StopReload = 0x690; // FTimerHandle
		constexpr auto TimerHandle_SegmentedReload = 0x698; // FTimerHandle
		constexpr auto TimerHandle_ReloadNextSegment = 0x6a0; // FTimerHandle
		constexpr auto TimerHandle_ReloadWeapon = 0x6a8; // FTimerHandle
		constexpr auto TimerHandle_RechamberWeapon = 0x6b0; // FTimerHandle
		constexpr auto TimerHandle_EarlyRechamberWeapon = 0x6b8; // FTimerHandle
		constexpr auto TimerHandle_HandleFiring = 0x6c0; // FTimerHandle
		constexpr auto TimerHandle_FireRateChecker = 0x6c8; // FTimerHandle
		constexpr auto TimerHandle_LoopingSoundSafetyCheck = 0x6d0; // FTimerHandle
		constexpr auto TimerHandle_LoopingAnimationSafetyCheck = 0x6d8; // FTimerHandle
		constexpr auto TimerHandle_RechamberAfterFiring = 0x6e0; // FTimerHandle
		constexpr auto TimerHandle_ReloadAfterFiring = 0x6e8; // FTimerHandle
		constexpr auto TimerHandle_CreateBulletCasing = 0x6f0; // FTimerHandle
		constexpr auto TimerHandle_CreateMagazineCasing = 0x6f8; // FTimerHandle
		constexpr auto TimerHandle_ResetRecoilPattern = 0x700; // FTimerHandle
		constexpr auto TimerHandle_StartCancelHolster = 0x708; // FTimerHandle
		constexpr auto TimerHandle_RestartFire = 0x720; // FTimerHandle
		constexpr auto AudioMercyShotTolerance = 0x730; // float
		constexpr auto TimerHandle_ForceVisHandle = 0x750; // FTimerHandle
		constexpr auto TimerHandle_LadderEquipHandle = 0x758; // FTimerHandle
		constexpr auto CanFireAfterLadder = 0x760; // bool
		constexpr auto CustomDepthMesh = 0x768; // USkeletalMeshComponent*
		constexpr auto bSwapAfterHolster = 0x770; // bool
		constexpr auto WeaponMIDs = 0x790; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DematerializeTimelineLength = 0x7a0; // float
		constexpr auto WeaponDematerializationData = 0x7a4; // FWeaponDematerializationData
	}

	namespace n_UMapEditorSaveData {
		constexpr auto ObjectSaveData = 0x50; // TArray<FMapEditorObjectSaveData>
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_ABP_ThrowableDeployableCover_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto ScaledCollisionComponent = 0x228; // UBoxComponent*
		constexpr auto MovementComponent = 0x230; // UProjectileMovementComponent*
		constexpr auto DefaultAkComp = 0x238; // UAkComponent*
		constexpr auto MeshComponent = 0x240; // UStaticMeshComponent*
		constexpr auto CollisionComponent = 0x248; // UBoxComponent*
		constexpr auto OnImpact = 0x250; // FMulticastInlineDelegate
		constexpr auto DetonateSound = 0x260; // UAkAudioEvent*
		constexpr auto OnFailed = 0x268; // FMulticastInlineDelegate
		constexpr auto ImpactSoundPlayed = 0x278; // bool
		constexpr auto InitialRotation = 0x27c; // FRotator
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UNUIReplayControls {
		constexpr auto CurrentPlayRate = 0x278; // float
		constexpr auto TimeWhenPaused = 0x27c; // float
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_UAkAssetDataSwitchContainerData {
		constexpr auto GroupValue = 0x28; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto DefaultGroupValue = 0x50; // UAkGroupValue*
		constexpr auto MediaList = 0x58; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto Children = 0x68; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UPlayFabAdminAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x798; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x7a0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x7a8; // UPlayFabJsonObject*
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_UABP_KaBar_OffHand_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UABP_TrophySystem_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x378; // FAnimNode_Slot
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UNUIOneInTheChamberLivesLeft {
		constexpr auto LivesLeft = 0x278; // int32_t
	}

	namespace n_ABeacon {
		constexpr auto Origin = 0x220; // FVector2D
		constexpr auto ScaleX = 0x228; // float
		constexpr auto ScaleY = 0x22c; // float
		constexpr auto MapTexture = 0x230; // UTexture2D*
		constexpr auto MapBackgroundTexture = 0x238; // UTexture2D*
		constexpr auto FriendlyTexture = 0x240; // UTexture2D*
		constexpr auto EnemyTexture = 0x248; // UTexture2D*
		constexpr auto SpectatorTexture = 0x250; // UTexture2D*
		constexpr auto MapBoundsPlane = 0x258; // UStaticMesh*
	}

	namespace n_UMedalFlagDomination {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_AShooterBot {
		constexpr auto BotBehavior = 0x2dd0; // UBehaviorTree*
	}

	namespace n_UWBP_LoadoutScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto EnterEditMode = 0x268; // UWidgetAnimation*
		constexpr auto BTN_Back = 0x270; // UButton*
		constexpr auto BTN_Delete = 0x278; // UWBP_TimedConfirm_C*
		constexpr auto BTN_Edit = 0x280; // UButton*
		constexpr auto BTN_Equip = 0x288; // UButton*
		constexpr auto BTN_Favourite = 0x290; // UButton*
		constexpr auto BTN_FocusGrabber = 0x298; // UButton*
		constexpr auto ETB_LoadoutName = 0x2a0; // UEditableTextBox*
		constexpr auto Image_6 = 0x2a8; // UImage*
		constexpr auto Image_157 = 0x2b0; // UImage*
		constexpr auto IMG_DarkBackground = 0x2b8; // UImage*
		constexpr auto IMG_Favourite = 0x2c0; // UImage*
		constexpr auto IMG_Preview_Full = 0x2c8; // UImage*
		constexpr auto IMG_Preview_Icon = 0x2d0; // UImage*
		constexpr auto IMG_Preview_Video = 0x2d8; // UImage*
		constexpr auto IMG_TPModelType = 0x2e0; // UImage*
		constexpr auto Key_Back = 0x2e8; // UPlatformKeyImage_C*
		constexpr auto LoadoutItem_Fireup = 0x2f0; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_Hat = 0x2f8; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_Melee = 0x300; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_OffensiveUtil = 0x308; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_Primary = 0x310; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_QuickUtil = 0x318; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_SideArm = 0x320; // UWBP_LoadoutItem_C*
		constexpr auto LoadoutItem_TacticalUtil = 0x328; // UWBP_LoadoutItem_C*
		constexpr auto SB_LoadoutButtons = 0x330; // UScrollBox*
		constexpr auto SB_LoadoutItemChoices = 0x338; // UScrollBox*
		constexpr auto TB_HoveredSubtitle = 0x340; // UTextBlock*
		constexpr auto TB_HoveredTitle = 0x348; // UTextBlock*
		constexpr auto TB_LoadoutItemType = 0x350; // UTextBlock*
		constexpr auto TB_Preview_Subtitle = 0x358; // UTextBlock*
		constexpr auto TB_Preview_Title = 0x360; // UTextBlock*
		constexpr auto TB_Preview_Tooltip = 0x368; // UTextBlock*
		constexpr auto UGP_LoadoutItemChoices = 0x370; // UUniformGridPanel*
		constexpr auto VB_LoadoutDetails = 0x378; // UVerticalBox*
		constexpr auto WS_PreviewType = 0x380; // UWidgetSwitcher*
		constexpr auto PLAYERLOADOUTS = 0x388; // TArray<FLoadoutData>
		constexpr auto LastContainer = 0x398; // UWBP_CustomLoadoutContainer_C*
		constexpr auto LoadoutsToInitFrom = 0x3a0; // TArray<FLoadoutData>
		constexpr auto EditScreen = 0x3b0; // bool
		constexpr auto SelectedLoadout = 0x3b8; // FLoadoutData
		constexpr auto HoveredLoadout = 0x500; // FLoadoutData
		constexpr auto LoadoutItemSelected = 0x648; // UWBP_LoadoutItem_C*
		constexpr auto SelectedLoadoutType = 0x650; // ELoadoutItem
		constexpr auto LoadoutItemOptionSelected = 0x658; // UWBP_LoadoutItem_C*
		constexpr auto InGame = 0x660; // bool
		constexpr auto Selected Loadout Button = 0x668; // UWBP_CustomLoadoutButton_C*
		constexpr auto NameMaxCharacters = 0x670; // int32_t
		constexpr auto MediaPlayer = 0x678; // UMediaPlayer*
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UNUIObjectiveScores {
		constexpr auto AllyNameText = 0x278; // FText
		constexpr auto EnemyNameText = 0x290; // FText
		constexpr auto AllyScoreText = 0x2a8; // FText
		constexpr auto EnemyScoreText = 0x2c0; // FText
		constexpr auto AllyScore = 0x2d8; // int32_t
		constexpr auto EnemyScore = 0x2dc; // int32_t
		constexpr auto AllyProgress = 0x2e0; // float
		constexpr auto EnemyProgress = 0x2e4; // float
		constexpr auto MinimapMargin = 0x2e8; // FVector2D
		constexpr auto MinimapSize = 0x2f0; // float
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UAkPS4InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UMedalOneManArmy {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
		constexpr auto Trackers = 0x50; // TArray<FOneManArmyTracker>
	}

	namespace n_UWBP_ChatEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Author_Text = 0x268; // UTextBlock*
		constexpr auto Channel+Message_Text = 0x270; // UTextBlock*
		constexpr auto Author = 0x278; // FText
		constexpr auto Channel = 0x290; // FText
		constexpr auto Message = 0x2a8; // FText
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_APlaceableTrophySystem {
		constexpr auto bShouldDematerialize = 0x220; // bool
		constexpr auto DematerializeTimeline = 0x228; // UTimelineComponent*
		constexpr auto TrophyMIDs = 0x230; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DematerializationMesh = 0x240; // UMeshComponent*
		constexpr auto DematerializeTimelineLength = 0x248; // float
		constexpr auto DematerializeTimelineCurve = 0x250; // UCurveFloat*
		constexpr auto PlaceableTrophySystemDematerializationData = 0x258; // FPlaceableTrophySystemDematerializationData
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UKantanPointStyle {
		constexpr auto DataPointTexture = 0x30; // UTexture2D*
		constexpr auto PointSizeTextureOffsets = 0x38; // FIntPoint [0x3]
	}

	namespace n_UNUIPlayerAvatar {
		constexpr auto bAvatarAvailable = 0x278; // bool
		constexpr auto Texture = 0x280; // UTexture2D*
		constexpr auto Player = 0x288; // ABattalionPlayerState*
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UABP_MP5_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x4f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone = 0x538; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x640; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x660; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UWBP_Vault_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x268; // UWidgetAnimation*
		constexpr auto Intro = 0x270; // UWidgetAnimation*
		constexpr auto descriptiontext = 0x278; // UTextBlock*
		constexpr auto descriptiontextBLUE = 0x280; // UTextBlock*
		constexpr auto descriptiontextRED = 0x288; // UTextBlock*
		constexpr auto InvalidationBox_WholeWidget = 0x290; // UInvalidationBox*
		constexpr auto PlatformKeyImage = 0x298; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_2 = 0x2a0; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_3 = 0x2a8; // UPlatformKeyImage_C*
		constexpr auto bCanVault = 0x2b0; // bool
		constexpr auto bGamepadUIShowing = 0x2b1; // bool
		constexpr auto HUDText Colour = 0x2b8; // UHUDTextDataAsset*
		constexpr auto HUDColour = 0x2c0; // UHUDTextDataAsset*
	}

	namespace n_UPlayFabEventsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xa8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xb0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb8; // UPlayFabJsonObject*
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UWBP_GameOverScreen_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto TextBlock = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_2 = 0x2b0; // UTextBlock*
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_ABP_BlinkFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto MaxDistance = 0x3d0; // float
		constexpr auto SnapDistance = 0x3d4; // float
		constexpr auto DesiredLocation = 0x3d8; // FVector
		constexpr auto BackStepAmount = 0x3e4; // int32_t
		constexpr auto MinValidDistance = 0x3e8; // float
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UGuardiansMapAsset {
		constexpr auto Map = 0x40; // TSoftObjectPtr<UWorld>
		constexpr auto DisplayName = 0x68; // FText
		constexpr auto Splash = 0x80; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMedalHQDestroyed {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_UMedalRainingLimbs {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseWindowsInstallationPath = 0x28; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x38; // FFilePath
		constexpr auto WaapiIPAddress = 0x48; // FString
		constexpr auto WaapiPort = 0x58; // uint32_t
		constexpr auto AutoSyncSelection = 0x5c; // bool
		constexpr auto SuppressWwiseProjectPathWarnings = 0x5d; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x5e; // bool
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UWBP_Announcement_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HideAnimation = 0x268; // UWidgetAnimation*
		constexpr auto ShowAnimation = 0x270; // UWidgetAnimation*
		constexpr auto AnnouncementText = 0x278; // UTextBlock*
		constexpr auto CanvasPanel_1 = 0x280; // UCanvasPanel*
		constexpr auto InvalidationBox_WholeWidget = 0x288; // UInvalidationBox*
		constexpr auto HUDColour = 0x290; // UHUDTextDataAsset*
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_UMedalFastDenial {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x440; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x460; // char : 1
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_ACargoPlayerState {
		constexpr auto ObjectiveTime = 0x908; // float
		constexpr auto CurrentContestingTimer = 0x90c; // float
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UNUIBuyScreen {
		constexpr auto WeaponBought = 0x278; // bool
		constexpr auto RequestedFromPauseMenu = 0x279; // bool
		constexpr auto TimerText = 0x280; // FText
		constexpr auto CurrentAssaultText = 0x298; // FText
		constexpr auto CurrentSpecOpsText = 0x2b0; // FText
		constexpr auto CurrentSniperText = 0x2c8; // FText
		constexpr auto MaxAssaultLoadouts = 0x2e0; // int32_t
		constexpr auto MaxSpecOpsLoadouts = 0x2e4; // int32_t
		constexpr auto MaxSniperLoadouts = 0x2e8; // int32_t
		constexpr auto CurrentAssault = 0x2ec; // int32_t
		constexpr auto CurrentSpecOps = 0x2f0; // int32_t
		constexpr auto CurrentSnipers = 0x2f4; // int32_t
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x440; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto CollisionSizeQuads = 0x458; // int32_t
		constexpr auto CollisionScale = 0x45c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x460; // int32_t
		constexpr auto CollisionQuadFlags = 0x468; // TArray<char>
		constexpr auto HeightfieldGuid = 0x478; // FGuid
		constexpr auto CachedLocalBox = 0x488; // FBox
		constexpr auto RenderComponent = 0x4a4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4d0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UAB_Tactical_Flashbang_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UAB_WW2SMG_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UAwardManager {
		constexpr auto OnAwardRegisteredDelegate = 0x28; // FMulticastInlineDelegate
		constexpr auto OnScalingAwardStartDelegate = 0x38; // FMulticastInlineDelegate
		constexpr auto OnScalingAwardEndDelegate = 0x48; // FMulticastInlineDelegate
		constexpr auto OnScalingAwardValueDelegate = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAnyKillDelegate = 0x68; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x78; // FMulticastInlineDelegate
		constexpr auto OnFireAwardsDataAsset = 0x88; // UOnFireAwardsDataAsset*
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_APerfTestLocation {
		constexpr auto LocationName = 0x250; // FString
	}

	namespace n_UWBP_CargoHUD_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto FlashBang = 0x270; // UWidgetAnimation*
		constexpr auto Kill+15-And-Beyond = 0x278; // UWidgetAnimation*
		constexpr auto Kill+10 = 0x280; // UWidgetAnimation*
		constexpr auto Kill+5 = 0x288; // UWidgetAnimation*
		constexpr auto DamageTaken = 0x290; // UWidgetAnimation*
		constexpr auto BlockedMessagesVerticalBox = 0x298; // UVerticalBox*
		constexpr auto ClientFPS = 0x2a0; // USizeBox*
		constexpr auto FlashBangableWidgets = 0x2a8; // UCanvasPanel*
		constexpr auto FrameTime = 0x2b0; // USizeBox*
		constexpr auto GameLatency = 0x2b8; // USizeBox*
		constexpr auto GameThreadTime = 0x2c0; // USizeBox*
		constexpr auto GameToRenderLatency = 0x2c8; // USizeBox*
		constexpr auto GPUTemp = 0x2d0; // USizeBox*
		constexpr auto IdleTime = 0x2d8; // USizeBox*
		constexpr auto OverviewSwitcher = 0x2e0; // UWidgetSwitcher*
		constexpr auto RB_CurvedHud = 0x2e8; // URetainerBox*
		constexpr auto RenderLatency = 0x2f0; // USizeBox*
		constexpr auto RenderThreadTime = 0x2f8; // USizeBox*
		constexpr auto RHIThreadTime = 0x300; // USizeBox*
		constexpr auto WBP_ActionPrompt = 0x308; // UWBP_ActionPrompt_C*
		constexpr auto WBP_Announcement = 0x310; // UWBP_Announcement_C*
		constexpr auto WBP_BasicScoreAward = 0x318; // UWBP_BasicScoreAward_C*
		constexpr auto WBP_BombInfo = 0x320; // UWBP_BombInfo_C*
		constexpr auto WBP_CargoGameoverviewWidget_C_1 = 0x328; // UWBP_CargoGameoverviewWidget_C*
		constexpr auto WBP_CargoObjectiveProgress = 0x330; // UWBP_CargoObjectiveProgress_C*
		constexpr auto WBP_CargoResultScreen = 0x338; // UWBP_CargoResultScreen_C*
		constexpr auto WBP_ChatFeed = 0x340; // UWBP_ChatFeed_C*
		constexpr auto WBP_ClassChanged = 0x348; // UWBP_ClassChanged_C*
		constexpr auto WBP_Crosshair = 0x350; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x358; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_FireUpProgress = 0x360; // UWBP_FireUpProgress_C*
		constexpr auto WBP_GameOverScreen = 0x368; // UWBP_GameOverScreen_C*
		constexpr auto WBP_GrenadeIndicator = 0x370; // UWBP_GrenadeIndicator_C*
		constexpr auto WBP_Hitmarker = 0x378; // UWBP_Hitmarker_C*
		constexpr auto WBP_HUDEquipment_C_170 = 0x380; // UWBP_HUDEquipment_C*
		constexpr auto WBP_InGameLoadoutSelection_304 = 0x388; // UWBP_InGameLoadoutSelection_C*
		constexpr auto WBP_Interaction = 0x390; // UWBP_Interaction_C*
		constexpr auto WBP_Killfeed = 0x398; // UWBP_Killfeed_C*
		constexpr auto WBP_KillSuccess = 0x3a0; // UWBP_KillSuccess_C*
		constexpr auto WBP_Message = 0x3a8; // UWBP_Message_C*
		constexpr auto WBP_MiniMap = 0x3b0; // UWBP_MiniMap_C*
		constexpr auto WBP_Overtime_Shootout_Title = 0x3b8; // UWBP_Overtime_Shootout_Title_C*
		constexpr auto WBP_Overtime_Shootout_Transition = 0x3c0; // UWBP_Overtime_Shootout_Transition_C*
		constexpr auto WBP_Overtime_Shootout_Victory = 0x3c8; // UWBP_Overtime_Shootout_Victory_C*
		constexpr auto WBP_Overtime_Title = 0x3d0; // UWBP_Overtime_Title_C*
		constexpr auto WBP_PingSelection = 0x3d8; // UWBP_PingSelection_C*
		constexpr auto WBP_PlantProgressBar = 0x3e0; // UWBP_PlantProgressBar_C*
		constexpr auto WBP_RespawnTimer = 0x3e8; // UWBP_RespawnTimer_C*
		constexpr auto WBP_ShootoutOverview = 0x3f0; // UWBP_ShootoutOverview_C*
		constexpr auto WBP_SNDLeaderboard = 0x3f8; // UWBP_SNDLeaderboard_C*
		constexpr auto WBP_SniperVignette = 0x400; // UWBP_SniperVignette_C*
		constexpr auto WBP_Spectating = 0x408; // UWBP_Spectating_C*
		constexpr auto WBP_StaminaAndHealthBars = 0x410; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x418; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_SwappingSides = 0x420; // UWBP_SwappingSides_C*
		constexpr auto WBP_TugOfWarOverview = 0x428; // UWBP_TugOfWarOverview_C*
		constexpr auto WBP_Vault = 0x430; // UWBP_Vault_C*
		constexpr auto WBP_WeaponPickup = 0x438; // UWBP_WeaponPickup_C*
		constexpr auto In Visibility = 0x440; // ESlateVisibility
		constexpr auto OnShowUpdateLeaderboard = 0x448; // FMulticastInlineDelegate
		constexpr auto IsPlayingHealth = 0x458; // bool
		constexpr auto OnShowUpdateGameOverScreen = 0x460; // FMulticastInlineDelegate
		constexpr auto CurrentBlockedMessages = 0x470; // TArray<UWBP_GenericBlockedMessage_C*>
		constexpr auto bBlockedUIFound = 0x480; // bool
		constexpr auto RemainingStamina = 0x484; // float
		constexpr auto StaminaRegenMultiplier = 0x488; // float
		constexpr auto StaminaDirection = 0x48c; // int32_t
		constexpr auto StaminaEvent = 0x490; // FStaminaEvent
		constexpr auto FlashRemainingDuration = 0x4a4; // float
	}

	namespace n_UNuclearOnlineSystem {
		constexpr auto OnJoinSession = 0x30; // FMulticastInlineDelegate
		constexpr auto OnPlayerJoinedLobby = 0x40; // FMulticastInlineDelegate
		constexpr auto OnPlayerLeftLobby = 0x50; // FMulticastInlineDelegate
		constexpr auto LobbyListener = 0x190; // AOnlineBeaconHost*
		constexpr auto LobbyHost = 0x198; // ANuclearLobbyHost*
		constexpr auto LobbyClient = 0x1a0; // ANuclearLobbyClient*
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x440; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x450; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x460; // TArray<UMeshComponent*>
	}

	namespace n_UJumper_MainMenu_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto Selcetion-menu-intro = 0x2f8; // UWidgetAnimation*
		constexpr auto Back-Legend-button-Promod = 0x300; // UBack-Legend-button-Promod_C*
		constexpr auto Jumper-MM-Button = 0x308; // UJumper-MM-Button_C*
		constexpr auto Jumper_LevelSelect = 0x310; // UJumper_LevelSelect_C*
		constexpr auto LevelSelectPanel = 0x318; // UCanvasPanel*
		constexpr auto MenuWidgetSwitcher = 0x320; // UWidgetSwitcher*
		constexpr auto Sandbox-MM-Button = 0x328; // USandbox-MM-Button_C*
		constexpr auto Tutorial-MM-Button = 0x330; // UTutorial-MM-Button_C*
		constexpr auto TutorialLevelSelect = 0x338; // UJumper_LevelSelect_C*
		constexpr auto TutorialMenu = 0x340; // UCanvasPanel*
		constexpr auto MainMenuReference = 0x348; // UMainMenu_C*
		constexpr auto IsLevelPicker = 0x350; // bool
		constexpr auto MainMenuWidgetsToDisable = 0x358; // TArray<UWidget*>
	}

	namespace n_AMapFog {
		constexpr auto OnMapFogMaterialChanged = 0x238; // FMulticastInlineDelegate
		constexpr auto FogRenderTargetSize = 0x248; // int32_t
		constexpr auto FogMaterial_UMG = 0x250; // UMaterialInterface*
		constexpr auto FogMaterial_Canvas = 0x258; // UMaterialInterface*
		constexpr auto MinimapOpacityHidden = 0x260; // float
		constexpr auto MinimapOpacityExplored = 0x264; // float
		constexpr auto MinimapOpacityRevealing = 0x268; // float
		constexpr auto FogCombineMaterial = 0x270; // UMaterialInterface*
		constexpr auto FogCacheLifetime = 0x278; // float
		constexpr auto bEnableWorldFog = 0x27c; // bool
		constexpr auto FogPostProcessMaterial = 0x280; // UMaterialInterface*
		constexpr auto WorldOpacityHidden = 0x288; // float
		constexpr auto WorldOpacityExplored = 0x28c; // float
		constexpr auto WorldOpacityRevealing = 0x290; // float
		constexpr auto PostProcessVolume = 0x298; // APostProcessVolume*
		constexpr auto AutoLocatePostProcessVolume = 0x2a0; // EFogPostProcessVolumeOption
		constexpr auto PermanentRevealRT_A = 0x2a8; // UTextureRenderTarget2D*
		constexpr auto PermanentRevealRT_B = 0x2b0; // UTextureRenderTarget2D*
		constexpr auto RevealRT_Staging = 0x2b8; // UTextureRenderTarget2D*
		constexpr auto MaterialInstances = 0x2c8; // TMap<UMapRendererComponent*, UMaterialInstanceDynamic*>
		constexpr auto FogCombineMatInst = 0x318; // UMaterialInstanceDynamic*
		constexpr auto FogPostProcessMatInst = 0x320; // UMaterialInstanceDynamic*
		constexpr auto MapRevealers = 0x358; // TArray<UMapRevealerComponent*>
	}

	namespace n_UWBP_BlitzPlayerAliveIcon_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto bombicon = 0x270; // UImage*
		constexpr auto Border = 0x278; // UImage*
		constexpr auto DeadIcon = 0x280; // UImage*
		constexpr auto Highlight = 0x288; // UImage*
		constexpr auto IMG_FireupIcon = 0x290; // UImage*
		constexpr auto PlayerIcon = 0x298; // UImage*
		constexpr auto BoundPlayer = 0x2a0; // APromodPlayerState*
		constexpr auto HUDColour = 0x2a8; // UHUDTextDataAsset*
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_AHeadquarters_Zone {
		constexpr auto ZoneRadius = 0x220; // float
		constexpr auto ZoneMesh = 0x228; // UStaticMeshComponent*
		constexpr auto CollisionComp = 0x230; // UBoxComponent*
		constexpr auto CurrentTeamAllegiance = 0x238; // int32_t
		constexpr auto CurrentNationAllegiance = 0x23c; // ENationType
		constexpr auto DetonateEffect = 0x240; // UParticleSystem*
		constexpr auto ImageID = 0x260; // FString
		constexpr auto CaptureProgress = 0x270; // float
		constexpr auto IsBeingCaptured = 0x274; // bool
		constexpr auto ShouldTick = 0x275; // bool
		constexpr auto TimeCaptured = 0x278; // float
		constexpr auto CapturingTeam = 0x27c; // int32_t
		constexpr auto CapturingNation = 0x280; // ENationType
		constexpr auto ReturnCaptureCoolDown = 0x284; // float
		constexpr auto NumPlayersCapping = 0x288; // int32_t
		constexpr auto IsContested = 0x28c; // bool
		constexpr auto PlayersInZone = 0x290; // TArray<AHeadquartersPlayerController*>
		constexpr auto PlayerStatesInZone = 0x2a0; // TArray<AHeadquartersPlayerState*>
		constexpr auto DefaultWorldMarker = 0x2b0; // UWorldMarkerComponent*
		constexpr auto ZoneProperties = 0x2b8; // FHQMode_ZoneProperties
		constexpr auto CaptureTime = 0x2c8; // float
		constexpr auto CooldownTime = 0x2cc; // float
		constexpr auto AIcon = 0x2d0; // UTexture2D*
		constexpr auto BIcon = 0x2d8; // UTexture2D*
		constexpr auto CIcon = 0x2e0; // UTexture2D*
		constexpr auto NeutraliseTime = 0x2e8; // float
		constexpr auto Neutral = 0x2ec; // bool
		constexpr auto bCanBeCaptured = 0x2ed; // bool
		constexpr auto StraightCap = 0x2ee; // bool
		constexpr auto IsBeingNeutralised = 0x2ef; // bool
		constexpr auto HQUnlockEvent = 0x2f8; // UAkAudioEvent*
		constexpr auto StartHQRadioStaticEvent = 0x300; // UAkAudioEvent*
		constexpr auto StopHQRadioStaticEvent = 0x308; // UAkAudioEvent*
		constexpr auto HQDestroyedEvent = 0x310; // UAkAudioEvent*
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UWBP_Overtime_Title_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show = 0x268; // UWidgetAnimation*
		constexpr auto Mov_Title = 0x270; // UImage*
		constexpr auto MP_Title = 0x278; // UMediaPlayer*
	}

	namespace n_UWBP_CustomLoadoutContainer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_1 = 0x268; // UHorizontalBox*
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UThirdPersonAnimInstance {
		constexpr auto CurrentVaultHeight = 0x2bc; // float
		constexpr auto CurrentVaultProgress = 0x2c0; // float
		constexpr auto bJustLaunchedFromPad = 0x2c4; // bool
		constexpr auto bIsKnifeEqupped = 0x358; // bool
		constexpr auto StandToCrouchMontage = 0x360; // UAnimMontage*
		constexpr auto CrouchToProneMontage = 0x368; // UAnimMontage*
		constexpr auto ProneToCrouchMontage = 0x370; // UAnimMontage*
		constexpr auto CrouchToStandMontage = 0x378; // UAnimMontage*
		constexpr auto JumpLandMontage = 0x380; // UAnimMontage*
		constexpr auto DefaultGripPoseSequence = 0x388; // UAnimSequence*
		constexpr auto Turn70HalfSecondCurve = 0x390; // UCurveFloat*
		constexpr auto StandShuffle20Montage = 0x398; // UAnimMontage*
		constexpr auto StandShuffle20MontageReverse = 0x3a0; // UAnimMontage*
		constexpr auto CrouchTurnLeft20 = 0x3a8; // UAnimMontage*
		constexpr auto CrouchTurnRight20 = 0x3b0; // UAnimMontage*
		constexpr auto StandShuffleMontage = 0x3b8; // UAnimMontage*
		constexpr auto StandShuffleMontageReverse = 0x3c0; // UAnimMontage*
		constexpr auto CrouchTurnLeft70 = 0x3c8; // UAnimMontage*
		constexpr auto CrouchTurnRight70 = 0x3d0; // UAnimMontage*
		constexpr auto StandShuffle180Montage = 0x3d8; // UAnimMontage*
		constexpr auto StandShuffle180MontageReverse = 0x3e0; // UAnimMontage*
		constexpr auto CrouchTurnLeft180 = 0x3e8; // UAnimMontage*
		constexpr auto CrouchTurnRight180 = 0x3f0; // UAnimMontage*
		constexpr auto FootPosition = 0x47c; // float
		constexpr auto FootPositionDirection = 0x480; // float
		constexpr auto Speed = 0x484; // float
		constexpr auto CharacterOwner = 0x488; // ACharacter*
		constexpr auto ThirdPersonPawn = 0x490; // APromodCharacter*
		constexpr auto InAir = 0x498; // bool
		constexpr auto Direction = 0x49c; // float
		constexpr auto StartPosition = 0x4a0; // float
		constexpr auto RootOffsetYaw = 0x4a4; // float
		constexpr auto Stance = 0x4a8; // int32_t
		constexpr auto StanceEquals2 = 0x4ac; // bool
		constexpr auto AdditiveGripPose3P = 0x4b0; // UAnimSequence*
		constexpr auto AdditiveGripTransform = 0x4c0; // FTransform
		constexpr auto IsOneHanded = 0x4f0; // bool
		constexpr auto TargetingAnimTransition = 0x4f4; // float
		constexpr auto IsRunning = 0x4f8; // bool
		constexpr auto RunLean = 0x4fc; // float
		constexpr auto ShouldStandStill = 0x500; // bool
		constexpr auto InstantDirection = 0x504; // float
		constexpr auto IsFiring = 0x508; // bool
		constexpr auto bDisplayDead = 0x509; // bool
		constexpr auto OnLadder = 0x50a; // bool
		constexpr auto LadderAnimationProgress = 0x50c; // float
		constexpr auto LeanTranslation = 0x510; // FVector
		constexpr auto LeanUpperBodyRotation = 0x51c; // FRotator
		constexpr auto LeanLowerBodyRotation = 0x528; // FRotator
		constexpr auto BlendGripPose = 0x534; // bool
		constexpr auto BlendGripPoseFlt = 0x538; // float
		constexpr auto AdditiveInvertedGripFixApply = 0x53c; // float
		constexpr auto AdditiveInvertedGripFixApplyBool = 0x540; // bool
		constexpr auto AODulledInverted = 0x544; // FVector2D
		constexpr auto AODulledInvertedClamped = 0x54c; // FVector2D
		constexpr auto IsOneHandedFloat = 0x554; // float
		constexpr auto LastTimeInAirST1 = 0x558; // bool
		constexpr auto CardinalLerpDirection = 0x55c; // float
		constexpr auto bIsBot = 0x560; // bool
		constexpr auto bIsSliding = 0x561; // bool
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UWBP_CargoPayloadStatus_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Arrow1 = 0x268; // USizeBox*
		constexpr auto CP_Arrows = 0x270; // UCanvasPanel*
		constexpr auto PayloadImage = 0x278; // UImage*
		constexpr auto PayloadStateImage = 0x280; // UImage*
		constexpr auto CargoGameState = 0x288; // ACargoGameState*
		constexpr auto bCargoEnabled = 0x290; // bool
		constexpr auto PlayerSide = 0x291; // ECargoPlayerSideState
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UMedalHQSecured {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_UPromodClassDataAsset {
		constexpr auto ClassName = 0x30; // EClassName
		constexpr auto PrimaryWeaponClassData = 0x38; // TArray<UPromodWeaponArchetypeDataAsset*>
		constexpr auto SidearmWeaponClassData = 0x48; // TArray<UPromodWeaponArchetypeDataAsset*>
		constexpr auto MeleeWeaponClassData = 0x58; // TArray<UPromodWeaponArchetypeDataAsset*>
		constexpr auto BodyMesh3P_Friendly = 0x68; // USkeletalMesh*
		constexpr auto BodyMesh3P_Enemy = 0x70; // USkeletalMesh*
		constexpr auto HeadMesh3P_Friendly = 0x78; // USkeletalMesh*
		constexpr auto HeadMesh3P_Enemy = 0x80; // USkeletalMesh*
		constexpr auto FireUps = 0x88; // TArray<UPromodFireUpDataAsset*>
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_UMinimapInternal_IconMouseCapture_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto OnMouseClick = 0x268; // FMulticastInlineDelegate
		constexpr auto MouseDownStarted = 0x278; // bool
		constexpr auto MouseDragStarted = 0x279; // bool
		constexpr auto MouseDownPos = 0x27c; // FVector2D
		constexpr auto MouseDownTime = 0x284; // float
		constexpr auto MouseMoveThreshold = 0x288; // float
		constexpr auto MapGeo = 0x28c; // FGeometry
		constexpr auto OnBoxSelect = 0x2c8; // FMulticastInlineDelegate
		constexpr auto ParentCanvasSlot = 0x2d8; // UCanvasPanelSlot*
		constexpr auto MouseDown_IsLeft = 0x2e0; // bool
		constexpr auto MouseDown_IsShift = 0x2e1; // bool
		constexpr auto MouseDown_IsCtrl = 0x2e2; // bool
		constexpr auto bEnableBoxSelect = 0x2e3; // bool
		constexpr auto BoxSelectColor = 0x2e4; // FLinearColor
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_ABP_ThrowableTrophySystem_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto OnImpact = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_UWBP_HardpointPlayerIcons_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BlueBar = 0x268; // UImage*
		constexpr auto InvalidationBox_1 = 0x270; // UInvalidationBox*
		constexpr auto InvalidationBox_LeftPlayerIcons = 0x278; // UInvalidationBox*
		constexpr auto InvalidationBox_RightPlayerIcons = 0x280; // UInvalidationBox*
		constexpr auto LeftTeamPlayerIcons = 0x288; // UHorizontalBox*
		constexpr auto LeftTeamPlayersAliveValue = 0x290; // UTextBlock*
		constexpr auto RedBar = 0x298; // UImage*
		constexpr auto RightTeamPlayerIcons = 0x2a0; // UHorizontalBox*
		constexpr auto RightTeamPlayersAliveValue = 0x2a8; // UTextBlock*
		constexpr auto TeamInfoWidgetSwitcherL = 0x2b0; // UWidgetSwitcher*
		constexpr auto TeamInfoWidgetSwitcherR = 0x2b8; // UWidgetSwitcher*
		constexpr auto LeftTeamWidgets = 0x2c0; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x2d0; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x2e0; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x2e4; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x2e8; // int32_t
		constexpr auto PlayersTeam0 = 0x2f0; // TArray<APlayerState*>
		constexpr auto PlayersTeam1 = 0x300; // TArray<APlayerState*>
		constexpr auto bIsShootout = 0x310; // bool
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x4b8; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4bc; // FDelegate
		constexpr auto WidgetStyle = 0x4d0; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xa50; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xa51; // bool
		constexpr auto ThePropertyToControl = 0xa58; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xa68; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xaa8; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xab8; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xac8; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x690; // UObject*
		constexpr auto AnimClass = 0x698; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6a0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6a8; // UAnimInstance*
		constexpr auto AnimationData = 0x6b0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6d8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6e4; // FVector
		constexpr auto LinkedInstances = 0x720; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x730; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8a0; // float
		constexpr auto KinematicBonesUpdateType = 0x8a4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8a5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8a7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8a9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8a9; // char : 1
		constexpr auto bHasValidBodies = 0x8a9; // char : 1
		constexpr auto bBlendPhysics = 0x8a9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8a9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8a9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8aa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8b0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8b0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8b0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8b0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8b1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8b1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8b1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8b1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8b1; // char : 1
		constexpr auto bPauseAnims = 0x8b1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8b1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8b2; // char : 1
		constexpr auto bForceRefpose = 0x8b2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bOldForceRefPose = 0x8b2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8b2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8b2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8b2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8b3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8b3; // char : 1
		constexpr auto bUseBendingElements = 0x8b3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8b3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8b3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8b3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8b3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8b3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8b4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8b6; // uint16_t
		constexpr auto MassMode = 0x8b8; // EClothMassMode
		constexpr auto UniformMass = 0x8bc; // float
		constexpr auto TotalMass = 0x8c0; // float
		constexpr auto Density = 0x8c4; // float
		constexpr auto MinPerParticleMass = 0x8c8; // float
		constexpr auto ClothBlendWeight = 0x8cc; // float
		constexpr auto EdgeStiffness = 0x8d0; // float
		constexpr auto BendingStiffness = 0x8d4; // float
		constexpr auto AreaStiffness = 0x8d8; // float
		constexpr auto VolumeStiffness = 0x8dc; // float
		constexpr auto StrainLimitingStiffness = 0x8e0; // float
		constexpr auto ShapeTargetStiffness = 0x8e4; // float
		constexpr auto bWaitForParallelClothTask = 0x8e8; // bool
		constexpr auto DisallowedAnimCurves = 0x8f0; // TArray<FName>
		constexpr auto BodySetup = 0x900; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x910; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x920; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x9f8; // float
		constexpr auto TeleportRotationThreshold = 0x9fc; // float
		constexpr auto LastPoseTickFrame = 0xa08; // uint32_t
		constexpr auto ClothingInteractor = 0xa60; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb30; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_ABattalionPlayerController_Menu {
		constexpr auto StopContinuousSoundsEvent = 0x570; // UAkAudioEvent*
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UNUIBombMatchResultScreen {
		constexpr auto bTeamsReversed = 0x278; // bool
		constexpr auto MatchResultTitleText = 0x280; // FText
		constexpr auto LeftTeamRoundsWon = 0x298; // FText
		constexpr auto RightTeamRoundsWon = 0x2b0; // FText
		constexpr auto ModeName = 0x2c8; // FText
		constexpr auto MapName = 0x2e0; // FText
		constexpr auto MatchTime = 0x2f8; // FText
		constexpr auto ResultColor = 0x310; // FLinearColor
		constexpr auto GameEndTime = 0x320; // FText
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UNUIButton {
		constexpr auto Button = 0x260; // UButton*
		constexpr auto ButtonText = 0x268; // UTextBlock*
		constexpr auto ButtonBackground = 0x270; // UImage*
		constexpr auto ActiveStyle = 0x278; // ENUIButtonStyle
		constexpr auto NormalStyle = 0x280; // FNUIButtonStyle
		constexpr auto HoveredStyle = 0x6d0; // FNUIButtonStyle
		constexpr auto PressedStyle = 0xb20; // FNUIButtonStyle
		constexpr auto bAllowSFX = 0xf70; // bool
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_ATugOfWarMonorailPath {
		constexpr auto bTeam0IsAt0thSplinePoint = 0x309; // bool
		constexpr auto AttackersTugOfWarSpeedMultiplier = 0x30c; // float
		constexpr auto DefaultTugOfWarMonorailSpeedMultiplier = 0x310; // float
		constexpr auto DisableTugOfWarTime = 0x314; // float
		constexpr auto EnableTugOfWarTime = 0x318; // float
		constexpr auto bIsInSuddenDeath = 0x31c; // bool
		constexpr auto SuddenDeathWinPercentage = 0x320; // float
	}

	namespace n_UAccept_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Clicked = 0x268; // UWidgetAnimation*
		constexpr auto Default = 0x270; // UWidgetAnimation*
		constexpr auto Selected = 0x278; // UWidgetAnimation*
		constexpr auto Unselected = 0x280; // UWidgetAnimation*
		constexpr auto PM-BUTTON = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x458; // float
		constexpr auto CapsuleRadius = 0x45c; // float
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UAudioPassByComponent {
		constexpr auto SoundEffectColliderCollision = 0x1f8; // USphereComponent*
	}

	namespace n_UMedal40BombCTF {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueID = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UWBP_RadialMenuItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Selected = 0x268; // UWidgetAnimation*
		constexpr auto IMG_ItemImage = 0x270; // UImage*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_ABombGameState {
		constexpr auto Bombs = 0x4a0; // TArray<ABombMode_Bomb*>
		constexpr auto BombZones = 0x4b0; // TArray<ABombMode_Zone*>
		constexpr auto PlantTime = 0x4c0; // float
		constexpr auto QuickPlantTime = 0x4c4; // float
		constexpr auto DefuseTime = 0x4c8; // float
		constexpr auto BombDetonated = 0x4cc; // bool
		constexpr auto BombDefused = 0x4cd; // bool
		constexpr auto DecideTeamRoundActive = 0x4ce; // bool
		constexpr auto DecideTeamRoundComplete = 0x4cf; // bool
		constexpr auto DecideTeamVoteInProgress = 0x4d0; // bool
		constexpr auto DecideTeamRoundWinner = 0x4d4; // int32_t
		constexpr auto DecideTeamVoteResult = 0x4d8; // FString
		constexpr auto UseDecideTeamRound = 0x4e8; // bool
		constexpr auto DecideTeamRoundIsKnifeOnly = 0x4e9; // bool
		constexpr auto OvertimeCounter = 0x4ec; // int32_t
		constexpr auto BombInteractionProgress = 0x4f0; // float
		constexpr auto BombInteractionTimeStamp = 0x4f4; // float
		constexpr auto BombInteractionPlayer = 0x4f8; // ABombPlayerState*
		constexpr auto ShootoutRoundTime = 0x500; // float
		constexpr auto ShootoutSetupTime = 0x504; // float
		constexpr auto ShootoutTransitionTime = 0x508; // float
		constexpr auto ShootoutPostRoundTime = 0x50c; // float
		constexpr auto OverviewAndShootoutTitleScreenTimes = 0x510; // float
		constexpr auto bBombPlanted = 0x514; // bool
		constexpr auto BombSpawns = 0x518; // TArray<ABombMode_BombSpawn*>
		constexpr auto AttackingNation = 0x528; // ENationType
		constexpr auto AttackingTeam = 0x52c; // int32_t
	}

	namespace n_UMapSmokeWidget {
		constexpr auto LinkedSmoke = 0x268; // ABattalionSmokeGrenade*
		constexpr auto CachedMaterial = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x278; // ABeacon*
		constexpr auto BeaconScaleX = 0x280; // float
		constexpr auto BeaconScaleY = 0x284; // float
		constexpr auto Zoom = 0x288; // float
		constexpr auto MarkerVerticalBox = 0x290; // UVerticalBox*
		constexpr auto SmokeImage = 0x298; // UImage*
		constexpr auto SmokeImage2 = 0x2a0; // UImage*
		constexpr auto SmokeImage3 = 0x2a8; // UImage*
		constexpr auto ScaledPlayerPos = 0x2b0; // FVector2D
		constexpr auto RotationAngle = 0x2b8; // float
		constexpr auto CanvasPanelSlot = 0x2c0; // UCanvasPanelSlot*
		constexpr auto ProgressMaterial = 0x2c8; // UMaterialInstanceDynamic*
		constexpr auto bInActiveArray = 0x2f4; // bool
	}

	namespace n_ATUTPlayerState {
		constexpr auto PendingInventory = 0x590; // FString
		constexpr auto PendingWeaponSlot = 0x5a0; // ESlotType
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UWBP_CargoProgressCheckpoint_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_CheckpointProgress = 0x268; // UImage*
		constexpr auto IMG_Colour = 0x270; // UImage*
		constexpr auto ObjectiveImage = 0x278; // UImage*
		constexpr auto SizeBox = 0x280; // USizeBox*
		constexpr auto SizeBox_1 = 0x288; // USizeBox*
		constexpr auto WidgetSwitcher_1 = 0x290; // UWidgetSwitcher*
		constexpr auto LinkedCheckpoint = 0x298; // ACargoCheckpoint*
		constexpr auto ProgressMaterial = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto FillColour = 0x2a8; // FLinearColor
	}

	namespace n_UNUIMapSelectDisplay {
		constexpr auto MapName = 0x260; // FString
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_APromodCharacter {
		constexpr auto PostProcessComponent = 0x27b8; // UPostProcessComponent*
		constexpr auto MapIconComponent = 0x27c0; // UMapIconComponent*
		constexpr auto MapIconSize = 0x27c8; // float
		constexpr auto ArrowMiniMapTexture = 0x27d0; // UTexture2D*
		constexpr auto BombMiniMapTexture = 0x27d8; // UTexture2D*
		constexpr auto BombMiniMapObjectiveTexture = 0x27e0; // UTexture2D*
		constexpr auto SpatialMarkerComponent = 0x27e8; // UWidgetComponent*
		constexpr auto MapViewComponent = 0x27f0; // UMapViewComponent*
		constexpr auto VaultTimeline = 0x27f8; // UTimelineComponent*
		constexpr auto VaultTimelineCurve = 0x2800; // UCurveFloat*
		constexpr auto VaultLowWallCurve = 0x2808; // UCurveVector*
		constexpr auto VaultHighWallCurve = 0x2810; // UCurveVector*
		constexpr auto VaultLowWallMax = 0x2818; // float
		constexpr auto bIsVaulting = 0x281c; // bool
		constexpr auto LastVault = 0x2820; // FVaultData
		constexpr auto BombCarrierWorldMarker = 0x2888; // UWorldMarkerComponent*
		constexpr auto bIsSprinting = 0x2890; // bool
		constexpr auto bAllowGizmo = 0x2891; // bool
		constexpr auto ProneLandBobScalar = 0x2894; // float
		constexpr auto SpatialMarkerParentBoneName = 0x2898; // FName
		constexpr auto SpatialMarkerPositionalOffset = 0x28a0; // FVector
		constexpr auto EnemyMapIconActorClass = 0x28b0; // AMapIconActor*
		constexpr auto EnemyMapIconActor = 0x28b8; // AMapIconActor*
		constexpr auto MinimapIconSelfColour = 0x28c0; // FLinearColor
		constexpr auto MinimapIconFriendlyColour = 0x28d0; // FLinearColor
		constexpr auto ViewKicks = 0x28e0; // TArray<FKick>
		constexpr auto ViewKickRecoveries = 0x28f0; // TArray<FKick>
		constexpr auto OnLandedDelegate = 0x2900; // FMulticastInlineDelegate
		constexpr auto bPrevIsSprinting = 0x2910; // bool
		constexpr auto bIsProned = 0x2911; // bool
		constexpr auto bCanSeeBomb = 0x2912; // bool
		constexpr auto bIsSliding = 0x2913; // bool
		constexpr auto bIsOnFire = 0x2914; // bool
		constexpr auto OnFireScore = 0x2918; // int32_t
		constexpr auto ScalingFactor = 0x291c; // float
		constexpr auto WallRunChromaticAberrationAmount = 0x2920; // float
		constexpr auto WallRunVelocityThresholdForEffects = 0x2924; // float
		constexpr auto WallRunFovIncrease = 0x2928; // float
		constexpr auto WallRunEffectIncreaseRate = 0x292c; // float
		constexpr auto WallRunEffectDecreaseRate = 0x2930; // float
		constexpr auto WallRunTimeToHitMaxEffect = 0x2934; // float
		constexpr auto bLaunchedFromPad = 0x293c; // bool
		constexpr auto Bomb1PSkeletalMesh = 0x2940; // USkeletalMesh*
		constexpr auto Bomb3PSkeletalMesh = 0x2948; // USkeletalMesh*
		constexpr auto Bomb1PSkeletalMeshAnimClass = 0x2950; // UObject*
		constexpr auto Bomb3PSkeletalMeshAnimClass = 0x2958; // UObject*
		constexpr auto PlantingAnim = 0x2960; // FSpecialAnim
		constexpr auto QuickPlantingAnim = 0x2980; // FSpecialAnim
		constexpr auto DefusingAnim = 0x29a0; // FSpecialAnim
		constexpr auto SnapShotMaterial = 0x29c0; // UMaterialInterface*
		constexpr auto SnapShotMaterialInstance = 0x29c8; // UMaterialInstanceDynamic*
		constexpr auto PingActorClass = 0x29d0; // APingActor*
		constexpr auto healthRTPCToPush = 0x29d8; // float
		constexpr auto HandCannonWeapon = 0x29e0; // ABattalionWeapon_Instant*
		constexpr auto HandCannonWeaponClass = 0x29e8; // ABattalionWeapon*
		constexpr auto DeathCameraComponent = 0x2a50; // UPromodDeathCamera*
		constexpr auto InputDoubleTapTime = 0x2a5c; // float
		constexpr auto InputHoldTime = 0x2a60; // float
		constexpr auto ActivePingActors = 0x2a68; // TArray<APingActor*>
		constexpr auto LastPredictedPing = 0x2a78; // APingActor*
		constexpr auto LastLookedAtInteractable = 0x2a80; // AActor*
		constexpr auto CurrentlyLookedAtInteractable = 0x2a88; // AActor*
		constexpr auto CurrentInteractable = 0x2a90; // AActor*
		constexpr auto InteractionDistance = 0x2aa0; // float
		constexpr auto NoDamagePhsyMat = 0x2aa8; // UPhysicalMaterial*
		constexpr auto SilentNoDamagePhsyMat = 0x2ab0; // UPhysicalMaterial*
		constexpr auto DebugShowStats = 0x2ab8; // bool
		constexpr auto bDebugShowCurrentControllerType = 0x2ab9; // bool
		constexpr auto bIsGizmoHeld = 0x2ad5; // bool
		constexpr auto GizmoClass = 0x2ad8; // APromodGizmo*
		constexpr auto GizmoPtr = 0x2ae0; // APromodGizmo*
		constexpr auto InventoryComponent = 0x2af0; // UPromodInventoryComponent*
		constexpr auto HotdropLandSound = 0x2af8; // UAkAudioEvent*
		constexpr auto FootstepSpeedThreshold = 0x2b00; // float
		constexpr auto OldMoveVal = 0x2b04; // float
		constexpr auto SprintEndEvent = 0x2b10; // UAkAudioEvent*
		constexpr auto SprintDrainEventStart = 0x2b18; // UAkAudioEvent*
		constexpr auto SprintDrainEventStop = 0x2b20; // UAkAudioEvent*
		constexpr auto FireUpRifleEvent = 0x2b28; // UAkAudioEvent*
		constexpr auto FireUpSMGEvent = 0x2b30; // UAkAudioEvent*
		constexpr auto FireUpSniperEvent = 0x2b38; // UAkAudioEvent*
		constexpr auto FireUpHandcannonStopEvent1P = 0x2b40; // UAkAudioEvent*
		constexpr auto NearMissSound = 0x2b48; // UAkAudioEvent*
		constexpr auto CollateralSound = 0x2b50; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl1 = 0x2b58; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl2 = 0x2b60; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl3 = 0x2b68; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl4 = 0x2b70; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl5 = 0x2b78; // UAkAudioEvent*
		constexpr auto FireUpReadySound = 0x2b80; // UAkAudioEvent*
		constexpr auto DamageFromBulletSound = 0x2b88; // UAkAudioEvent*
		constexpr auto ThirdPDamageFromBulletSound = 0x2b90; // UAkAudioEvent*
		constexpr auto DamageFromWorldCollapseSound = 0x2b98; // UAkAudioEvent*
		constexpr auto WorldLoadingEvent = 0x2ba0; // UAkAudioEvent*
		constexpr auto ResupplyAmmoFromCargoSound = 0x2ba8; // UAkAudioEvent*
		constexpr auto RespawnPlayerSound = 0x2bb0; // UAkAudioEvent*
		constexpr auto SprintDrainTriggerZone = 0x2bb8; // float
		constexpr auto bDoingWeaponBlockingAction = 0x2bbd; // bool
		constexpr auto CurrentLeanValue = 0x2bc0; // float
		constexpr auto SmoothMaxLeanFrac = 0x2bc4; // float
		constexpr auto WeaponCycleDelay = 0x2bc8; // float
		constexpr auto bCanADSInProne = 0x2bcd; // bool
		constexpr auto LeanCameraOffset = 0x2bd0; // FVector
		constexpr auto SMGStartLoop = 0x2be0; // UAkAudioEvent*
		constexpr auto SMGStopLoop = 0x2be8; // UAkAudioEvent*
		constexpr auto ARStartLoop = 0x2bf0; // UAkAudioEvent*
		constexpr auto ARStopLoop = 0x2bf8; // UAkAudioEvent*
		constexpr auto PredictedFireUpAction = 0x2c00; // AFireUpAction*
		constexpr auto ReplicatedFireUpAction = 0x2c08; // AFireUpAction*
		constexpr auto PredictedQuickUtilFireUpAction = 0x2c10; // AFireUpAction*
		constexpr auto ReplicatedQuickUtilFireUpAction = 0x2c18; // AFireUpAction*
		constexpr auto PromodCharacterMovementComponent = 0x2c20; // UPromodCharacterMovementComponent*
		constexpr auto ShouldMakeFootstepSound = 0x2c32; // bool
		constexpr auto InitialFootstepDelay = 0x2c90; // float
		constexpr auto ForwardFootstepIntervalTimeWalk = 0x2c94; // float
		constexpr auto ForwardFootstepIntervalTimeSprint = 0x2c98; // float
		constexpr auto EnableASDFootstepIntervals = 0x2c9c; // bool
		constexpr auto LeftFootstepIntervalTimeWalk = 0x2ca0; // float
		constexpr auto BackFootstepIntervalTimeWalk = 0x2ca4; // float
		constexpr auto GizmoAnimationTimeLength = 0x2cac; // float
		constexpr auto GizmoPrepareTime = 0x2cb0; // float
		constexpr auto GizmoEndPrepareTime = 0x2cb4; // float
		constexpr auto GizmoWeaponEquipTime = 0x2cb8; // float
		constexpr auto UseGizmoAnim = 0x2cc0; // FCharacterAnim
		constexpr auto GizmoChromaticAberrationAmount = 0x2cd0; // float
		constexpr auto GizmoEffectIncreaseRate = 0x2cd4; // float
		constexpr auto GizmoEffectDecreaseRate = 0x2cd8; // float
		constexpr auto GizmoTimeToHitMaxEffect = 0x2cdc; // float
		constexpr auto GizmoStopEffectTime = 0x2ce0; // float
		constexpr auto GizmoStartEffectTime = 0x2ce4; // float
		constexpr auto Target360SpinRotation = 0x2cf4; // float
		constexpr auto StrafeKillSpeedTarget = 0x2d08; // float
		constexpr auto StrafeActiveTime = 0x2d0c; // float
		constexpr auto CurrentHUDSprintValue = 0x2d18; // float
		constexpr auto LastHitBoneName = 0x2d40; // FName
		constexpr auto LastHitLocation = 0x2d48; // FVector
		constexpr auto WorldVFXManager = 0x2d58; // AWorldVFXManager*
		constexpr auto StunTimelinePtr = 0x2d60; // UTimelineComponent*
		constexpr auto StunnedMontagePtr = 0x2d68; // UAnimMontage*
		constexpr auto StunStartSound = 0x2d70; // UAkAudioEvent*
		constexpr auto StunStopSound = 0x2d78; // UAkAudioEvent*
		constexpr auto bIsStunned = 0x2d80; // bool
		constexpr auto StunCurvePtr = 0x2d88; // UCurveFloat*
		constexpr auto StunMeterialParameterCollectionPtr = 0x2d90; // UMaterialParameterCollection*
		constexpr auto PromodGameState = 0x2dc0; // APromodGameState*
		constexpr auto CargoGameState = 0x2dc8; // ACargoGameState*
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UHUDMaster {
		constexpr auto AwardManager = 0x260; // UAwardManager*
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UWBP_BasicScoreAward_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x268; // UWidgetAnimation*
		constexpr auto FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto PopIn = 0x278; // UWidgetAnimation*
		constexpr auto IB_Root = 0x280; // UInvalidationBox*
		constexpr auto Overlay_1 = 0x288; // UOverlay*
		constexpr auto TextBlock_82 = 0x290; // UTextBlock*
		constexpr auto TextBlock_BLUE = 0x298; // UTextBlock*
		constexpr auto TextBlock_RED = 0x2a0; // UTextBlock*
		constexpr auto CurrentScore = 0x2a8; // int32_t
		constexpr auto TimeToFadeOut = 0x2ac; // float
		constexpr auto ResetScoreTime = 0x2b0; // float
		constexpr auto HUDText Colour = 0x2b8; // UHUDTextDataAsset*
		constexpr auto TimerHandle_ResetScore = 0x2c0; // FTimerHandle
		constexpr auto TimerHandle_FadeOut = 0x2c8; // FTimerHandle
	}

	namespace n_UABP_Deagle_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_AFFAPlayerState {
		constexpr auto PendingInventory = 0x598; // FString
		constexpr auto FirstWeapon = 0x5a8; // bool
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UNUIMatchResultScreen {
		constexpr auto MatchResultText = 0x278; // FText
		constexpr auto ModeName = 0x290; // FText
		constexpr auto MapName = 0x2a8; // FText
		constexpr auto MatchTime = 0x2c0; // FText
		constexpr auto ResultColor = 0x2d8; // FLinearColor
		constexpr auto GameEndTime = 0x2e8; // FText
		constexpr auto bExperienceAwarded = 0x308; // bool
		constexpr auto TopPlayerStates = 0x310; // TArray<ABattalionPlayerState*>
		constexpr auto TopPlayerScoreTexts = 0x320; // TArray<FText>
		constexpr auto VoteOptions = 0x330; // TArray<FMapModeVoteInfo>
		constexpr auto GameState = 0x340; // ABattalionGameState*
		constexpr auto HasVoted = 0x348; // bool
		constexpr auto MatchResult = 0x34c; // int32_t
	}

	namespace n_UABP_UNDCSidearm_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_4 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_3 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x4b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x538; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x580; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x620; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x668; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x6e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool = 0x738; // FAnimNode_BlendListByBool
		constexpr auto TargetingTransition = 0x7d8; // float
		constexpr auto IsTargeting = 0x7dc; // bool
	}

	namespace n_UABP_WW2Rifle_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_AFFAGameMode {
		constexpr auto EndOnMatchPointWin = 0x838; // bool
		constexpr auto WeaponSelectGracePeriod = 0x83c; // float
		constexpr auto RoundTimeLeftUntilStopBackfill = 0x840; // float
		constexpr auto ScorePctToStopBackfill = 0x844; // float
		constexpr auto AlreadyStoppedBackfill = 0x848; // bool
		constexpr auto MatchEndHUDShown = 0x849; // bool
		constexpr auto FFAGameState = 0x850; // AFFAGameState*
		constexpr auto UsedSpawns = 0x858; // TArray<AActor*>
		constexpr auto CachedPlayers = 0x868; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto CurrentlyWinningPC = 0x878; // AFFAPlayerController*
		constexpr auto CurrentlySecondPlacePC = 0x880; // AFFAPlayerController*
		constexpr auto EventRivalIn2ndGaining = 0x888; // FNationSound
		constexpr auto EventYouAreIn2ndPlace = 0x8a8; // FNationSound
		constexpr auto EventOneMinLeft_Losing = 0x8c8; // FNationSound
		constexpr auto EventHalfway_Victory = 0x8e8; // FNationSound
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UWBP_ServerBrowserItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_MapBackground = 0x268; // UBorder*
		constexpr auto Border_ModeBackground = 0x270; // UBorder*
		constexpr auto Border_PingBackground = 0x278; // UBorder*
		constexpr auto Border_PlayersBackground = 0x280; // UBorder*
		constexpr auto Border_TitleBackground = 0x288; // UBorder*
		constexpr auto Border_TypeBackground = 0x290; // UBorder*
		constexpr auto Button = 0x298; // UButton*
		constexpr auto ContainerBorder = 0x2a0; // UBorder*
		constexpr auto IMG_MapBackground = 0x2a8; // UImage*
		constexpr auto IMG_MapLeftBar = 0x2b0; // UImage*
		constexpr auto IMG_ModeBackground = 0x2b8; // UImage*
		constexpr auto IMG_ModeLeftBar = 0x2c0; // UImage*
		constexpr auto IMG_PingBackground = 0x2c8; // UImage*
		constexpr auto IMG_PingLeftBar = 0x2d0; // UImage*
		constexpr auto IMG_PlayersBackground = 0x2d8; // UImage*
		constexpr auto IMG_PlayersLeftBar = 0x2e0; // UImage*
		constexpr auto IMG_SelectedArrow = 0x2e8; // UImage*
		constexpr auto IMG_TitleBackground = 0x2f0; // UImage*
		constexpr auto IMG_TitleLeftBar = 0x2f8; // UImage*
		constexpr auto IMG_TypeBackground = 0x300; // UImage*
		constexpr auto IMG_TypeLeftBar = 0x308; // UImage*
		constexpr auto IMG_TypeLocked = 0x310; // UImage*
		constexpr auto IMG_TypePublic = 0x318; // UImage*
		constexpr auto MapTxt = 0x320; // UTextBlock*
		constexpr auto ModeTxt = 0x328; // UTextBlock*
		constexpr auto PingTxt = 0x330; // UTextBlock*
		constexpr auto PlayerCountTxt = 0x338; // UTextBlock*
		constexpr auto ServerNameTxt = 0x340; // UTextBlock*
		constexpr auto WS_ServerType = 0x348; // UWidgetSwitcher*
		constexpr auto Session = 0x350; // FNuclearSessionResult
		constexpr auto OnSelected = 0x518; // FMulticastInlineDelegate
		constexpr auto DefaultBrushColor = 0x528; // FLinearColor
		constexpr auto DefaultContentColor = 0x538; // FLinearColor
		constexpr auto ActiveBrushColor = 0x548; // FLinearColor
		constexpr auto ActiveContentColor = 0x558; // FLinearColor
		constexpr auto MatchingChangelistColor = 0x568; // FSlateColor
		constexpr auto HasBeenHighlighted = 0x590; // bool
		constexpr auto Is Active = 0x591; // bool
		constexpr auto Mode = 0x598; // FString
		constexpr auto ServerBrowser = 0x5a8; // UWBP_ServerBrowser_C*
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UPromodTeam {
		constexpr auto LiveClassUsage = 0x170; // TArray<FLiveClassData>
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_UCrateDataAsset {
		constexpr auto Crates = 0x30; // TArray<FCrateEntity>
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UMedalJustKeepShootin {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x668; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x688; // FGuid
	}

	namespace n_UBP_RegenCameraModifier_C {
		constexpr auto FovAddition = 0x48; // float
		constexpr auto PostProcessMaterial = 0x50; // UMaterialInstanceDynamic*
		constexpr auto Radius = 0x58; // float
		constexpr auto Intensity = 0x5c; // float
	}

	namespace n_UWBP_ActionPrompt_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto descriptiontext = 0x290; // UTextBlock*
		constexpr auto Hold = 0x298; // UTextBlock*
		constexpr auto IB_Root = 0x2a0; // UInvalidationBox*
		constexpr auto PlatformKeyImage_2 = 0x2a8; // UPlatformKeyImage_C*
		constexpr auto HUDColour = 0x2b0; // UHUDTextDataAsset*
	}

	namespace n_UMedalLastMinuteSavior {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
		constexpr auto KillTrackers = 0x50; // TArray<FLastMinuteSaviorKillTracker>
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UWBP_SNDLeaderboardItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_Avatar = 0x268; // UBorder*
		constexpr auto Border_Defuses = 0x270; // UBorder*
		constexpr auto Border_FireupIcon = 0x278; // UBorder*
		constexpr auto Border_FireupProgress = 0x280; // UBorder*
		constexpr auto Border_KDA = 0x288; // UBorder*
		constexpr auto Border_Ping = 0x290; // UBorder*
		constexpr auto Border_Plants = 0x298; // UBorder*
		constexpr auto Border_PlayerName = 0x2a0; // UBorder*
		constexpr auto Border_Score = 0x2a8; // UBorder*
		constexpr auto IMG_DeadIcon = 0x2b0; // UImage*
		constexpr auto IMG_FireupIcon = 0x2b8; // UImage*
		constexpr auto IMG_SelfBorder = 0x2c0; // UImage*
		constexpr auto PlayerIcon = 0x2c8; // UImage*
		constexpr auto TB_Defuses = 0x2d0; // UTextBlock*
		constexpr auto TB_FireupProgress = 0x2d8; // UTextBlock*
		constexpr auto TB_KDA = 0x2e0; // UTextBlock*
		constexpr auto TB_Ping = 0x2e8; // UTextBlock*
		constexpr auto TB_Plants = 0x2f0; // UTextBlock*
		constexpr auto TB_PlayerName = 0x2f8; // UTextBlock*
		constexpr auto TB_Score = 0x300; // UTextBlock*
		constexpr auto WS_PlayerIcon = 0x308; // UWidgetSwitcher*
		constexpr auto bIsInitialized = 0x310; // bool
		constexpr auto AliveColor = 0x314; // FColor
		constexpr auto DeadColor = 0x318; // FColor
		constexpr auto Player Data = 0x320; // FLeaderboardData
		constexpr auto Player State = 0x368; // APromodPlayerState*
		constexpr auto DebugTeamNumber = 0x370; // int32_t
		constexpr auto FriendlyColour = 0x374; // FLinearColor
		constexpr auto EnemyColour = 0x384; // FLinearColor
		constexpr auto FriendlyColourFireup = 0x394; // FLinearColor
		constexpr auto EnemyColourFireup = 0x3a4; // FLinearColor
	}

	namespace n_UKantanCartesianChartWidgetStyle {
		constexpr auto ChartStyle = 0x30; // FKantanCartesianChartStyle
	}

	namespace n_UHUDRichTextBlock {
		constexpr auto Font = 0x678; // FSlateFontInfo
		constexpr auto Color = 0x6d0; // FLinearColor
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_UWBP_HardpointZoneListEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackgroundLeft = 0x268; // UImage*
		constexpr auto BackgroundRight = 0x270; // UImage*
		constexpr auto HardpointName = 0x278; // UTextBlock*
		constexpr auto bIsActive = 0x280; // bool
	}

	namespace n_UNUIVotingMenu {
		constexpr auto VotesYes = 0x278; // char
		constexpr auto VotesNo = 0x279; // char
		constexpr auto bVoted = 0x27a; // bool
		constexpr auto bVotedYes = 0x27b; // bool
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UMedalTeamPlayer {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_USMStateMachineInstance {
		constexpr auto bWaitForEndState = 0xc0; // bool
		constexpr auto bReuseCurrentState = 0xc1; // bool
		constexpr auto bReuseIfNotEndState = 0xc2; // bool
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_ABattalionIncendiaryEffect {
		constexpr auto bFireFxLoaded = 0x220; // bool
		constexpr auto bFireFxSpawned = 0x221; // bool
		constexpr auto bExploded = 0x222; // bool
		constexpr auto FireImpacts = 0x228; // TArray<FFireImpact>
		constexpr auto FireLoopSound = 0x238; // UAkAudioEvent*
		constexpr auto FireLoopEnd = 0x240; // UAkAudioEvent*
		constexpr auto AkComponent = 0x248; // UAkComponent*
		constexpr auto TimeSinceExplosion = 0x250; // float
		constexpr auto FireFX = 0x258; // UParticleSystem*
		constexpr auto NumRings = 0x260; // int32_t
		constexpr auto BaseFireLocationsPerRing = 0x264; // int32_t
		constexpr auto DistanceBetweenRings = 0x268; // float
		constexpr auto MaxFireDistance = 0x26c; // int32_t
		constexpr auto FireTraceGravity = 0x270; // float
		constexpr auto DamageCapsuleHalfHeight = 0x274; // float
		constexpr auto DamageCapsuleRadius = 0x278; // float
		constexpr auto IncendiaryLength = 0x27c; // float
		constexpr auto FireLoopEndSoundLength = 0x280; // float
		constexpr auto FireDamageType = 0x288; // UDamageType*
		constexpr auto DamageRate = 0x290; // float
		constexpr auto MaxFireDamage = 0x294; // float
		constexpr auto TimeUntilMaxDamage = 0x298; // float
		constexpr auto NumDamageRings = 0x29c; // int32_t
		constexpr auto BaseDamageTracesPerRing = 0x2a0; // int32_t
		constexpr auto bDebugIncendiaryLocations = 0x2a4; // bool
		constexpr auto TimerHandle_FireDamageTick = 0x2a8; // FTimerHandle
		constexpr auto EmitterComponent = 0x2b0; // UParticleSystemComponent*
		constexpr auto FireCapsuleComponents = 0x2b8; // TArray<UCapsuleComponent*>
		constexpr auto FireParticleComponents = 0x2c8; // TArray<UParticleSystemComponent*>
		constexpr auto InstigatingController = 0x2d8; // AController*
		constexpr auto InstigatingPawn = 0x2e0; // APawn*
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UPlayFabAuthenticationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xf8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x100; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x108; // UPlayFabJsonObject*
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26c0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26e0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26f0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26f8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2738; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2778; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2780; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2780; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2780; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2780; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2781; // char : 1
		constexpr auto ViewPitchMin = 0x2784; // float
		constexpr auto ViewPitchMax = 0x2788; // float
		constexpr auto ViewYawMin = 0x278c; // float
		constexpr auto ViewYawMax = 0x2790; // float
		constexpr auto ViewRollMin = 0x2794; // float
		constexpr auto ViewRollMax = 0x2798; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27a0; // float
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UAkGeometryComponent {
		constexpr auto MeshType = 0x1f8; // AkMeshType
		constexpr auto LOD = 0x1fc; // int32_t
		constexpr auto WeldingThreshold = 0x200; // float
		constexpr auto StaticMeshSurfaceOverride = 0x208; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x258; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x268; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x268; // char : 1
		constexpr auto AssociatedRoom = 0x270; // AActor*
		constexpr auto GeometryData = 0x288; // FAkGeometryData
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_AAimTrainingManager {
		constexpr auto StartTrainingTarget = 0x220; // UStaticMeshComponent*
		constexpr auto EndTrainingTarget = 0x228; // UStaticMeshComponent*
		constexpr auto TargetArea = 0x230; // UBoxComponent*
		constexpr auto TrainingMode = 0x238; // EAimTrainingMode
		constexpr auto TargetActorClass = 0x240; // AAimTrainingTarget*
		constexpr auto TargetBaseScale = 0x248; // FVector
		constexpr auto TargetScaleScalar = 0x254; // float
		constexpr auto EndOnNoLives = 0x258; // bool
		constexpr auto MaxLives = 0x259; // char
		constexpr auto TrainingStartDelay = 0x25c; // float
		constexpr auto EndOnTimer = 0x260; // bool
		constexpr auto TrainingTime = 0x264; // float
		constexpr auto RegularTargetLifetime = 0x268; // float
		constexpr auto RegularUseConstantInterval = 0x26c; // bool
		constexpr auto RegularConstantInterval = 0x270; // float
		constexpr auto RegularTargetIntervalRange = 0x274; // FVector2D
		constexpr auto RegularTargetIntervalTimeRange = 0x27c; // FVector2D
		constexpr auto RegularUseConstantSize = 0x284; // bool
		constexpr auto RandomiseReflexLocation = 0x285; // bool
		constexpr auto MaxReflexTime = 0x286; // bool
		constexpr auto DoubleTargetLifetime = 0x288; // float
		constexpr auto DoubleTimeBetweenTargets = 0x28c; // float
		constexpr auto MovingTargetLifetime = 0x290; // float
		constexpr auto TargetMoveSpeed = 0x294; // float
		constexpr auto MovingUseConstantInterval = 0x298; // bool
		constexpr auto MovingConstantInterval = 0x29c; // float
		constexpr auto MovingTargetIntervalRange = 0x2a0; // FVector2D
		constexpr auto MovingTargetIntervalTimeRange = 0x2a8; // FVector2D
		constexpr auto MovingUseConstantSize = 0x2b0; // bool
		constexpr auto ActiveTargets = 0x2b8; // TArray<AAimTrainingTarget*>
		constexpr auto ActiveTrainingLivesLeft = 0x2c8; // char
	}

	namespace n_UTimeDisplay_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_ComparisonIndicator = 0x268; // UImage*
		constexpr auto IMG_PlusIcon = 0x270; // UImage*
		constexpr auto TimeDisplayText = 0x278; // UTextBlock*
		constexpr auto WS_ComparisonType = 0x280; // UWidgetSwitcher*
		constexpr auto Seconds = 0x288; // float
		constexpr auto ShouldColourText = 0x28c; // bool
		constexpr auto ShouldUseTriangle = 0x28d; // bool
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_AKillRunCourse {
		constexpr auto CheckpointData = 0x2c0; // TArray<FKillRunCheckpointData>
		constexpr auto CollateralSound = 0x308; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl1 = 0x310; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl2 = 0x318; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl3 = 0x320; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl4 = 0x328; // UAkAudioEvent*
		constexpr auto KillConfirmedLvl5 = 0x330; // UAkAudioEvent*
	}

	namespace n_UNUILoadoutCard {
		constexpr auto CardData = 0x278; // FLoadoutCard
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UWBP_CargoGameoverviewWidget_C {
		constexpr auto UberGraphFrame = 0x3e8; // FPointerToUberGraphFrame
		constexpr auto Pulse = 0x3f0; // UWidgetAnimation*
		constexpr auto Anim_Notification = 0x3f8; // UWidgetAnimation*
		constexpr auto NotReady = 0x400; // UTextBlock*
		constexpr auto PlatformKeyImage = 0x408; // UPlatformKeyImage_C*
		constexpr auto PlayerList = 0x410; // UTextBlock*
		constexpr auto PressOrHoldTextBox = 0x418; // UTextBlock*
		constexpr auto ReadyupBox = 0x420; // UHorizontalBox*
		constexpr auto ScaleBox = 0x428; // UScaleBox*
		constexpr auto Spacer_3 = 0x430; // USpacer*
		constexpr auto Spacer_291 = 0x438; // USpacer*
		constexpr auto TextBlock_4 = 0x440; // UTextBlock*
		constexpr auto Timer = 0x448; // UTextBlock*
		constexpr auto ToReadyUp = 0x450; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x458; // UVerticalBox*
		constexpr auto VerticalBox_150 = 0x460; // UVerticalBox*
		constexpr auto WaitingText = 0x468; // UTextBlock*
		constexpr auto WBP_CargoOverviewScore = 0x470; // UWBP_CargoOverviewScore_C*
		constexpr auto WBP_CargoPlayerIcons = 0x478; // UWBP_CargoPlayerIcons_C*
		constexpr auto LeftTeamWidgets = 0x480; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x490; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x4a0; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x4a4; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x4a8; // int32_t
		constexpr auto bIsShootout = 0x4ac; // bool
		constexpr auto HUDColour = 0x4b0; // UHUDTextDataAsset*
		constexpr auto CargoGameState = 0x4b8; // ACargoGameState*
		constexpr auto bOverrideVisibility = 0x4c0; // bool
		constexpr auto PlayerSide = 0x4c1; // ECargoPlayerSideState
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UNUIFFAObjectiveScores {
		constexpr auto RivalVisibility = 0x2f8; // ESlateVisibility
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_UCircularProgressBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CPB_Image = 0x268; // UImage*
		constexpr auto CPB_SizeBox = 0x270; // USizeBox*
		constexpr auto FI_SizeBox = 0x278; // USizeBox*
		constexpr auto PlatformKeyImage = 0x280; // UPlatformKeyImage_C*
		constexpr auto Scale = 0x288; // float
		constexpr auto DMI = 0x290; // UMaterialInstanceDynamic*
		constexpr auto MaxValue = 0x298; // float
		constexpr auto MinValue = 0x29c; // float
		constexpr auto tmp = 0x2a0; // float
		constexpr auto CurrentPercentage = 0x2a4; // float
		constexpr auto CurrentRealValue = 0x2a8; // float
		constexpr auto Color And Opacity = 0x2ac; // FLinearColor
		constexpr auto LastPercentage = 0x2bc; // float
		constexpr auto LastRealvalue = 0x2c0; // float
		constexpr auto EventProgressBarFilled = 0x2c8; // FMulticastInlineDelegate
		constexpr auto EventProgressBarZero = 0x2d8; // FMulticastInlineDelegate
		constexpr auto InitialValue = 0x2e8; // float
		constexpr auto IsInitialValueAPercentage = 0x2ec; // bool
		constexpr auto Tint = 0x2f0; // FLinearColor
		constexpr auto BackgroundColor = 0x300; // FLinearColor
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x440; // UBodySetup*
		constexpr auto AreaClass = 0x448; // UNavAreaBase*
		constexpr auto ShapeColor = 0x450; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x454; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x454; // char : 1
		constexpr auto bDynamicObstacle = 0x454; // char : 1
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_ABP_ThrowingKnife_C {
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x3d8; // USphereComponent*
		constexpr auto bLanded = 0x3e0; // bool
		constexpr auto MaxRetrievalTime = 0x3e4; // float
		constexpr auto RotationRate = 0x3e8; // float
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UNUIGenericPopup {
		constexpr auto IsAccepted = 0x260; // bool
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UNUIMapPlacement {
		constexpr auto bLeftMouseDown = 0x278; // bool
		constexpr auto bRightMouseDown = 0x279; // bool
		constexpr auto CurrentColour = 0x27c; // FLinearColor
		constexpr auto CurrentThickness = 0x28c; // int32_t
		constexpr auto CurrentColourNum = 0x290; // int32_t
		constexpr auto CurrentLineIndex = 0x294; // int32_t
		constexpr auto Lines = 0x298; // TArray<FLineData>
		constexpr auto ExampleLineStartPointImage = 0x2a8; // UImage*
		constexpr auto ExampleLineStartPoint = 0x2b0; // FVector2D
	}

	namespace n_UNUIRoundStartCountdown {
		constexpr auto CountdownTimer = 0x278; // int32_t
		constexpr auto CountdownTimerText = 0x280; // FText
	}

	namespace n_ABP_SnapshotFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto FadeOut_Strength_F99265084DA38B5D1574AFA4A94F343C = 0x3d0; // float
		constexpr auto FadeOut__Direction_F99265084DA38B5D1574AFA4A94F343C = 0x3d4; // ETimelineDirection
		constexpr auto FadeOut = 0x3d8; // UTimelineComponent*
		constexpr auto RadiusExpansion_Radius_4C8283D04D5C8A1BD6C3F2AB0438B159 = 0x3e0; // float
		constexpr auto RadiusExpansion__Direction_4C8283D04D5C8A1BD6C3F2AB0438B159 = 0x3e4; // ETimelineDirection
		constexpr auto RadiusExpansion = 0x3e8; // UTimelineComponent*
		constexpr auto MaxRange = 0x3f0; // float
		constexpr auto ReleaseAnimation = 0x3f8; // FCharacterAnim
		constexpr auto GrenadeThrowAnimEndTime = 0x408; // float
		constexpr auto GrenadeThrowTime = 0x40c; // float
		constexpr auto ScanLocation = 0x410; // FVector
		constexpr auto EnemiesInsideScanRange = 0x420; // TArray<AActor*>
		constexpr auto OwningTeamNum = 0x430; // int32_t
		constexpr auto GrenadeAkComp = 0x438; // UAkComponent*
		constexpr auto DetectedPCsAudio = 0x440; // TArray<FString>
		constexpr auto Grenade = 0x450; // ABP_SnapshotGrenade_C*
		constexpr auto SnapshotSphereMesh = 0x458; // AStaticMeshActor*
		constexpr auto SphereStaticMesh = 0x460; // UStaticMesh*
		constexpr auto ShowEnemiesToAllies  = 0x468; // bool
		constexpr auto PlayedServerSoundDetected = 0x469; // bool
		constexpr auto PlayedServerSoundAlert = 0x46a; // bool
		constexpr auto bHit = 0x46b; // bool
		constexpr auto bDartIsFiring = 0x46c; // bool
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x458; // FVector
		constexpr auto LineThickness = 0x464; // float
	}

	namespace n_UBack-Legend-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image_405 = 0x288; // UImage*
		constexpr auto Text = 0x290; // UTextBlock*
		constexpr auto Wish-Button = 0x298; // UButton*
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_AWartideGameState {
		constexpr auto TeamLedgers = 0x530; // TArray<FTeamLedger>
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_ABattalionFlashGrenade {
		constexpr auto EffectivenessRange = 0x3d0; // FVector2D
		constexpr auto AngleOverride = 0x3d8; // FVector2D
		constexpr auto DirectionFactorInfluencePercentage = 0x3e0; // float
		constexpr auto DecalMaterialPtr = 0x3e8; // UMaterialInterface*
		constexpr auto DecalSize = 0x3f0; // FVector
		constexpr auto DecalLifeTime = 0x3fc; // float
		constexpr auto ObjectLifeSpan = 0x400; // float
		constexpr auto bShowDebugFlashRange = 0x404; // bool
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_USMStateMachineComponent {
		constexpr auto OnStateMachineInitializedEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStartedEvent = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnStateMachineUpdatedEvent = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStoppedEvent = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnStateMachineTransitionTakenEvent = 0x100; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStateChangedEvent = 0x110; // FMulticastInlineDelegate
		constexpr auto StateMachineClass = 0x120; // USMInstance*
		constexpr auto NetworkTickConfiguration = 0x128; // ESMNetworkConfigurationType
		constexpr auto NetworkTransitionConfiguration = 0x129; // ESMNetworkConfigurationType
		constexpr auto NetworkStateConfiguration = 0x12a; // ESMNetworkConfigurationType
		constexpr auto bIncludeSimulatedProxies = 0x12b; // bool
		constexpr auto bTakeTransitionsFromServerOnly = 0x12c; // bool
		constexpr auto TransitionResetTimeSeconds = 0x130; // float
		constexpr auto bReplicateStatesOnLoad = 0x134; // bool
		constexpr auto bDiscardTransitionsBeforeInitialize = 0x135; // bool
		constexpr auto MaxTimeToWaitForTransitionUpdate = 0x138; // float
		constexpr auto bInitializeOnBeginPlay = 0x13c; // bool
		constexpr auto bStartOnBeginPlay = 0x13d; // bool
		constexpr auto bLetInstanceManageTick = 0x13e; // bool
		constexpr auto R_NetworkedTransactions = 0x140; // TArray<FSMNetworkedTransaction>
		constexpr auto PendingTransactions = 0x150; // TArray<FSMNetworkedTransaction>
		constexpr auto R_Instance = 0x160; // USMInstance*
		constexpr auto InstanceTemplate = 0x168; // USMInstance*
		constexpr auto bOverrideTick = 0x170; // bool
		constexpr auto bCanEverTick = 0x171; // bool
		constexpr auto bOverrideTickInterval = 0x172; // bool
		constexpr auto TickInterval = 0x174; // float
		constexpr auto R_bShuttingDown = 0x178; // bool
		constexpr auto bCanInstanceNetworkTick = 0x179; // bool
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UBattalionStatManager {
		constexpr auto BattInstance = 0x28; // UBattalionGameInstance*
		constexpr auto PFPlayerData = 0x30; // UPFPlayerDataManager*
		constexpr auto PFPlayerCache = 0x38; // UPFPlayerIdCache*
		constexpr auto UpdateFrequency = 0x40; // float
		constexpr auto UpdateClientFrequency = 0x138; // float
	}

	namespace n_UNUIFpsCounter {
		constexpr auto FpsText = 0x278; // FText
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UCombo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x268; // UButton*
		constexpr auto MenuAnchor_1 = 0x270; // UMenuAnchor*
		constexpr auto NameText = 0x278; // UTextBlock*
		constexpr auto Options = 0x280; // TArray<FString>
		constexpr auto SelectedOption = 0x290; // FString
		constexpr auto SelectedIndex = 0x2a0; // int32_t
		constexpr auto ComboSelected = 0x2a8; // FButtonStyle
		constexpr auto ComboUnselected = 0x520; // FButtonStyle
		constexpr auto BrushSelected = 0x798; // FSlateBrush
		constexpr auto BrushNotSelected = 0x820; // FSlateBrush
		constexpr auto ComboChanged = 0x8a8; // FMulticastInlineDelegate
		constexpr auto BrushGrey = 0x8b8; // FSlateBrush
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UNUITwoTeamScores {
		constexpr auto TeamOneScore = 0x278; // int32_t
		constexpr auto TeamTwoScore = 0x27c; // int32_t
		constexpr auto TeamOneColor = 0x280; // FLinearColor
		constexpr auto TeamTwoColor = 0x290; // FLinearColor
		constexpr auto TeamOneNation = 0x2a0; // ENationType
		constexpr auto TeamTwoNation = 0x2a1; // ENationType
	}

	namespace n_UAB_WW2Knife_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
	}

	namespace n_USndGameOverviewWidget {
		constexpr auto TimerText = 0x268; // FText
		constexpr auto CurrentRoundText = 0x280; // FText
		constexpr auto LeftTeamSCoreText = 0x298; // FText
		constexpr auto RightTeamScoreText = 0x2b0; // FText
		constexpr auto BombTimerText = 0x2c8; // FText
		constexpr auto ReadyUpText = 0x2e0; // FText
		constexpr auto PlayersNotReadyText = 0x2f8; // FText
		constexpr auto Players_Team0 = 0x310; // TArray<APlayerState*>
		constexpr auto Players_Team1 = 0x320; // TArray<APlayerState*>
		constexpr auto AttackTeamName = 0x330; // FString
		constexpr auto DefenceTeamName = 0x340; // FString
		constexpr auto LeftTeamScoreVisibility = 0x350; // ESlateVisibility
		constexpr auto RightTeamScoreVisibility = 0x351; // ESlateVisibility
		constexpr auto BombPlantedVisibility = 0x352; // ESlateVisibility
		constexpr auto ReadyUpVisibility = 0x353; // ESlateVisibility
		constexpr auto NotReadyPlayersVisibility = 0x354; // ESlateVisibility
		constexpr auto pGameState = 0x358; // APromodGameState*
		constexpr auto pOwningPlayercontroller = 0x360; // APromodPlayerController*
		constexpr auto Team01Ptr = 0x368; // UBattalionTeam*
		constexpr auto Team02Ptr = 0x370; // UBattalionTeam*
		constexpr auto HasHitShootoutOnce = 0x378; // bool
		constexpr auto CachedTotalAlivePlayers = 0x37c; // int32_t
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_ABP_RegenFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Timeline_1_Radius_1BFD34F14D572B9401AD02965A2FA8E2 = 0x3d0; // float
		constexpr auto Timeline_1__Direction_1BFD34F14D572B9401AD02965A2FA8E2 = 0x3d4; // ETimelineDirection
		constexpr auto Timeline_2 = 0x3d8; // UTimelineComponent*
		constexpr auto AddChromatic_Amount_C2DCFAAF4794AEEAF741A8ADE5DD6E8F = 0x3e0; // float
		constexpr auto AddChromatic__Direction_C2DCFAAF4794AEEAF741A8ADE5DD6E8F = 0x3e4; // ETimelineDirection
		constexpr auto AddChromatic = 0x3e8; // UTimelineComponent*
		constexpr auto EffectRadius_Radius_A70328C64838421A0AD619850B530030 = 0x3f0; // float
		constexpr auto EffectRadius__Direction_A70328C64838421A0AD619850B530030 = 0x3f4; // ETimelineDirection
		constexpr auto EffectRadius = 0x3f8; // UTimelineComponent*
		constexpr auto RemoveFOV_RemoveFOVTrack_192FCA6A427F5632425A678DB5E46D52 = 0x400; // float
		constexpr auto RemoveFOV__Direction_192FCA6A427F5632425A678DB5E46D52 = 0x404; // ETimelineDirection
		constexpr auto RemoveFOV = 0x408; // UTimelineComponent*
		constexpr auto AddFOV_AddFOVTrack_1277EDAF42CDA01525AEEFAC726DFEDF = 0x410; // float
		constexpr auto AddFOV__Direction_1277EDAF42CDA01525AEEFAC726DFEDF = 0x414; // ETimelineDirection
		constexpr auto AddFOV = 0x418; // UTimelineComponent*
		constexpr auto MaxChromaticAberration = 0x420; // float
		constexpr auto CameraModifier = 0x428; // UBP_RegenCameraModifier_C*
		constexpr auto MaxFovAddition = 0x430; // float
		constexpr auto TH_ReverseEffects = 0x438; // FTimerHandle
		constexpr auto ReverseEffectsTime = 0x440; // float
		constexpr auto PlayingReverseEffects = 0x444; // bool
		constexpr auto WasAborted = 0x445; // bool
		constexpr auto Component = 0x448; // UAkComponent*
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UPlayFabClientAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xaa8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xab0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xab8; // UPlayFabJsonObject*
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UNUIScoreboardRow {
		constexpr auto ParentWidget = 0x278; // UNUIScoreboardGroup*
		constexpr auto PlayerState = 0x288; // ABattalionPlayerState*
		constexpr auto TextColor = 0x290; // FLinearColor
		constexpr auto DefaultBackgroundColor = 0x2a0; // FLinearColor
		constexpr auto BackgroundColor = 0x2b0; // FLinearColor
		constexpr auto PlayerName = 0x2c0; // FText
		constexpr auto PlayerLatency = 0x2d8; // FText
		constexpr auto PlayerLatencyValue = 0x2f0; // int32_t
		constexpr auto PlayerId = 0x2f4; // int32_t
		constexpr auto bHighlighted = 0x2f8; // bool
		constexpr auto bFocused = 0x2f9; // bool
		constexpr auto bDev = 0x2fa; // bool
		constexpr auto playerLevel = 0x300; // FText
		constexpr auto LevelIcon = 0x318; // UTexture2D*
	}

	namespace n_UMinimap_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Canvas_Backgrounds = 0x268; // UCanvasPanel*
		constexpr auto Canvas_IconsAboveFog = 0x270; // UCanvasPanel*
		constexpr auto Canvas_IconsBelowFog = 0x278; // UCanvasPanel*
		constexpr auto Image_OpaqueBackground = 0x280; // UImage*
		constexpr auto Overlay_Fogs = 0x288; // UOverlay*
		constexpr auto RetainerBox_Minimap = 0x290; // URetainerBox*
		constexpr auto Switcher_MapActive = 0x298; // UWidgetSwitcher*
		constexpr auto Widget_Camera = 0x2a0; // UMinimapInternal_Camera_C*
		constexpr auto MapViewComp = 0x2a8; // UMapViewComponent*
		constexpr auto MapTrackerComp = 0x2b0; // UMapTrackerComponent*
		constexpr auto InitialMapGeo = 0x2b8; // FGeometry
		constexpr auto InitialMapSize = 0x2f0; // FVector2D
		constexpr auto AutoLocateMapView = 0x2f8; // EMapViewSearchOption
		constexpr auto bIsCircular = 0x2f9; // bool
		constexpr auto bDrawCamera = 0x2fa; // bool
		constexpr auto FloorDistance = 0x2fc; // float
		constexpr auto OnMapClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto InitialViewExtent = 0x310; // FVector2D
		constexpr auto FillColor = 0x318; // FLinearColor
		constexpr auto Icons = 0x328; // TArray<UMinimapInternal_Icon_C*>
		constexpr auto Backgrounds = 0x338; // TArray<UMinimapInternal_Background_C*>
		constexpr auto Fogs = 0x348; // TArray<UMinimapInternal_Fog_C*>
		constexpr auto OnViewChanged = 0x358; // FMulticastInlineDelegate
		constexpr auto IconScale = 0x368; // float
		constexpr auto OnBoxSelected = 0x370; // FMulticastInlineDelegate
		constexpr auto bEnableBoxSelect = 0x380; // bool
		constexpr auto BoxSelectColor = 0x384; // FLinearColor
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_AInfectionPlayerState {
		constexpr auto bIsPlayerInfected = 0x5a8; // bool
		constexpr auto bCanRegenHealth = 0x5a9; // bool
	}

	namespace n_UPromodCharacterMovementComponent {
		constexpr auto bADSState = 0xbb0; // bool
		constexpr auto bPrevADSState = 0xbb1; // bool
		constexpr auto bPrevWantsToADS = 0xbb2; // bool
		constexpr auto ADSInTimestamp = 0xbb4; // float
		constexpr auto ADSOutTimestamp = 0xbb8; // float
		constexpr auto CurrADSTransition = 0xbbc; // float
		constexpr auto LastMoveTimestamp = 0xbc0; // float
		constexpr auto RelWishMove = 0xbe0; // FVector
		constexpr auto RelWishMoveThreshold = 0xbec; // float
		constexpr auto AbsWishMove = 0xbf0; // FVector2D
		constexpr auto ControllerAirStrafingAssistance = 0xbf8; // float
		constexpr auto CurrentServerMoveTime = 0xbfc; // float
		constexpr auto bCanSprint = 0xc0c; // bool
		constexpr auto InfiniteSprintRemaining = 0xc10; // float
		constexpr auto bInfiniteSprintEnabled = 0xc14; // bool
		constexpr auto SprintEnergyRemaining = 0xc18; // float
		constexpr auto CurrentStaminaEvent = 0xc34; // FStaminaEvent
		constexpr auto PrevFloor = 0xc5c; // FFindFloorResult
		constexpr auto bUseAccurateLandingVelocity = 0xcf4; // bool
		constexpr auto bDebugLogFallDamage = 0xcf5; // bool
		constexpr auto CurrentLadder = 0xd10; // ALadder*
		constexpr auto PossibleLaddersInWorld = 0xd18; // TArray<ALadder*>
		constexpr auto bIsSlidingAlongSurface = 0xd2a; // bool
		constexpr auto Jumped = 0xd2c; // bool
		constexpr auto JumpStartZ = 0xd30; // float
		constexpr auto bQueueJump = 0xd34; // bool
		constexpr auto AirWishVelocity = 0xd40; // FVector
		constexpr auto bCrashLanded = 0xd5d; // bool
		constexpr auto LastVault = 0xd60; // FVaultData
		constexpr auto bIsVaulting = 0xdb0; // bool
		constexpr auto bWantsToSlide = 0xdb8; // bool
		constexpr auto bIsCurrentlySlideMoving = 0xdb9; // bool
		constexpr auto CurrentSlideTime = 0xdbc; // float
		constexpr auto SlideStepTime = 0xdc0; // float
		constexpr auto CurrentSlideStepFriction = 0xdc4; // float
		constexpr auto SlideTimeSinceEnded = 0xdc8; // float
		constexpr auto SlideDistance = 0xdcc; // float
		constexpr auto SlideIntoADSMomentumTlPlayhead = 0xdd0; // float
		constexpr auto ViewHeightLerpTimeStamp = 0xdd4; // float
		constexpr auto ViewHeightLerpDeltaTime = 0xdd8; // float
		constexpr auto ViewHeightLerpTarget = 0xddc; // float
		constexpr auto ViewHeightLerpDown = 0xde0; // int32_t
		constexpr auto ViewHeightSprintOut = 0xde4; // bool
		constexpr auto ViewHeightTarget = 0xde8; // float
		constexpr auto ViewHeightCurrent = 0xdec; // float
		constexpr auto ProneChange = 0xdf0; // float
		constexpr auto ProneDirection = 0xdf4; // float
		constexpr auto ProneBlocked = 0xe00; // bool
		constexpr auto bIsMovementEnabled = 0xe02; // bool
		constexpr auto bWantsToProne = 0xe08; // char : 1
		constexpr auto bWantsToSprint = 0xe08; // char : 1
		constexpr auto bIsSprinting = 0xe0a; // bool
		constexpr auto bWasWantingToSprint = 0xe0b; // char : 1
		constexpr auto bWantsToLeanLeft = 0xe0b; // char : 1
		constexpr auto bWantsToLeanRight = 0xe0b; // char : 1
		constexpr auto bWantsToADS = 0xe0b; // char : 1
		constexpr auto bHoldingADS = 0xe0b; // char : 1
		constexpr auto PromodCharacterOwner = 0xe28; // APromodCharacter*
		constexpr auto bEncodeCompressedFlags = 0xe4c; // bool
		constexpr auto Friction = 0xe50; // float
		constexpr auto GroundStopSpeed = 0xe54; // float
		constexpr auto GroundAcceleration = 0xe58; // float
		constexpr auto GroundMaxSpeed = 0xe5c; // float
		constexpr auto InertiaMax = 0xe60; // float
		constexpr auto InertiaAngle = 0xe64; // float
		constexpr auto BackSpeedScale = 0xe68; // float
		constexpr auto StrafeSpeedScale = 0xe6c; // float
		constexpr auto JumpCooldown = 0xe70; // float
		constexpr auto AirAccelerate = 0xe74; // float
		constexpr auto JumpHeight = 0xe78; // float
		constexpr auto JumpSlowdownEnabled = 0xe7c; // bool
		constexpr auto JumpLandSlowdownTime = 0xe80; // float
		constexpr auto HotDropSlowdownTime = 0xe84; // float
		constexpr auto HotDropVelocityMultiplier = 0xe88; // float
		constexpr auto JumpStepUpHeight = 0xe8c; // float
		constexpr auto JumpLadderPushOffVelocity = 0xe90; // float
		constexpr auto bTreatInputAsAcceleration = 0xe94; // bool
		constexpr auto bEncodeYawIntoAccelZ = 0xe95; // bool
		constexpr auto bUseCameraViewForMovement = 0xe96; // bool
		constexpr auto Gravity = 0xe98; // float
		constexpr auto GravityLinearDilation = 0xe9c; // float
		constexpr auto GravityLogDilation = 0xea0; // float
		constexpr auto MovementScale = 0xea4; // float
		constexpr auto SprintSpeedScale = 0xea8; // float
		constexpr auto SprintStrafeSpeedScale = 0xeac; // float
		constexpr auto SprintRechargePause = 0xeb0; // float
		constexpr auto SprintTime = 0xeb4; // float
		constexpr auto SprintDurationScale = 0xeb8; // float
		constexpr auto SprintMinTime = 0xebc; // float
		constexpr auto bForceAllowStartSprintInAir = 0xec0; // bool
		constexpr auto MinSpeedToUseStamina = 0xec4; // float
		constexpr auto LeanSpeedScale = 0xec8; // float
		constexpr auto bSmoothSteps = 0xecc; // bool
		constexpr auto StepLerpTime = 0xed0; // float
		constexpr auto StepLerpThreshold = 0xed4; // float
		constexpr auto StepLerpMaxChange = 0xed8; // float
		constexpr auto MaxLadderZSpeed = 0xedc; // float
		constexpr auto LadderYawLimit = 0xee0; // float
		constexpr auto LadderAttachmentWidth = 0xee4; // float
		constexpr auto LadderDetachmentDistBottom = 0xee8; // float
		constexpr auto LadderDetachmentDistTop = 0xeec; // float
		constexpr auto bAllowSliding = 0xef0; // bool
		constexpr auto MaxSlideDistance = 0xef4; // float
		constexpr auto bADSStopsSlide = 0xef8; // bool
		constexpr auto bMaxSlideDistance3D = 0xef9; // bool
		constexpr auto SlideCooldown = 0xefc; // float
		constexpr auto SlidingFovCurveAddition = 0xf00; // UCurveFloat*
		constexpr auto SlidingFovEaseInSpeed = 0xf08; // float
		constexpr auto SlidingFovEaseOutSpeed = 0xf0c; // float
		constexpr auto bForceSlideCancelUponADS = 0xf10; // bool
		constexpr auto bForceStandWhenSlideEnds = 0xf11; // bool
		constexpr auto bStopSlidingWhenFallingOffLedge = 0xf12; // bool
		constexpr auto SlideRampFrictionScalarCurve = 0xf18; // UCurveFloat*
		constexpr auto SlideStepFrictionHeightCurveMap = 0xf20; // UCurveFloat*
		constexpr auto SlideStepFrictionFalloff = 0xf28; // UCurveFloat*
		constexpr auto bCanJumpDirectlyOutOfSlide = 0xf30; // bool
		constexpr auto bCanInitiateSlideWhileInAir = 0xf31; // bool
		constexpr auto MinGroundSpeedForSliding = 0xf34; // float
		constexpr auto StopSlideGroundSpeedThreshold = 0xf38; // float
		constexpr auto SlideMoveScaleScalar = 0xf3c; // float
		constexpr auto SlideMoveScaleScalarCurve = 0xf40; // UCurveFloat*
		constexpr auto SlideFriction = 0xf48; // float
		constexpr auto SlideFrictionCurve = 0xf50; // UCurveFloat*
		constexpr auto SlideAcceleration = 0xf58; // float
		constexpr auto SlideAccelerationCurve = 0xf60; // UCurveFloat*
		constexpr auto SlideYawClamp = 0xf68; // float
		constexpr auto SlideIntoADSMomentum = 0xf70; // UCurveFloat*
		constexpr auto SlideIntoADSMomentumPlayrate = 0xf78; // float
		constexpr auto SlideStaminaRegenSpeed = 0xf7c; // float
		constexpr auto StandCrouchLerp = 0xf80; // UCurvePromodStandCrouch*
		constexpr auto CrouchStandLerp = 0xf88; // UCurvePromodCrouchStand*
		constexpr auto CrouchProneLerp = 0xf90; // UCurvePromodCrouchProne*
		constexpr auto ProneCrouchLerp = 0xf98; // UCurvePromodProneCrouch*
		constexpr auto ColliderHeightStanding = 0xfa0; // float
		constexpr auto ColliderHeightCrouching = 0xfa4; // float
		constexpr auto ColliderHeightProning = 0xfa8; // float
		constexpr auto ColliderProneFeetDist = 0xfac; // float
		constexpr auto ProneFeetSkin = 0xfb0; // float
		constexpr auto StandingCheckCapsuleHeightAdjust = 0xfb4; // float
		constexpr auto LadderSweepDist = 0xfb8; // float
		constexpr auto bUseNewFloorCheck = 0xfbc; // bool
		constexpr auto FloorSweepWidthScalar = 0xfc0; // float
		constexpr auto FloorSweepStartOffset = 0xfc4; // float
		constexpr auto FloorSweepEndOffset = 0xfc8; // float
		constexpr auto FloorSweepColliderHeight = 0xfcc; // float
		constexpr auto AdjustFloorSweepWidthScalar = 0xfd0; // float
		constexpr auto AdjustFloorStartOffset = 0xfd4; // float
		constexpr auto AdjustFloorEndOffset = 0xfd8; // float
		constexpr auto AdjustFloorColliderHeight = 0xfdc; // float
		constexpr auto bConserveLedgeVelocity = 0xfe0; // bool
		constexpr auto FallDamageMinHeight = 0xfe4; // float
		constexpr auto FallDamageMaxHeight = 0xfe8; // float
		constexpr auto FallDamageLinearDilation = 0xfec; // float
		constexpr auto FallDamageLogDilation = 0xff0; // float
		constexpr auto OnClearedCrashLand = 0xff8; // FMulticastInlineDelegate
		constexpr auto FallDmgTypeClass = 0x1008; // UBattalionDamageType*
		constexpr auto MeshLocationStanding = 0x1010; // float
		constexpr auto MeshLocationCrouching = 0x1014; // float
		constexpr auto MeshLocationProning = 0x1018; // float
		constexpr auto bIsDashing = 0x107c; // bool
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UAkPlayerSound_C {
		constexpr auto AkEvent = 0x38; // UAkAudioEvent*
		constexpr auto EventName = 0x40; // FString
		constexpr auto AttachName = 0x50; // FString
		constexpr auto Follow = 0x60; // bool
		constexpr auto ThirdPerson = 0x61; // bool
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UPromodActionPrompt {
		constexpr auto PromptVisibility = 0x260; // ESlateVisibility
		constexpr auto PromptDescriptionText = 0x268; // FText
		constexpr auto PromptShowing = 0x280; // bool
	}

	namespace n_USaveDataManager {
		constexpr auto DataInfo = 0x28; // TArray<FSaveDataInfo>
		constexpr auto SavedGameData = 0x38; // TArray<USaveGame*>
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UNUISpectatorLoadoutScreen {
		constexpr auto TeamLoadoutWidgetClass = 0x278; // UNUISpectatorTeamLoadout*
		constexpr auto TeamLoadoutWidgets = 0x280; // TArray<UNUISpectatorTeamLoadout*>
		constexpr auto HeadingText = 0x290; // FText
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x218; // bool
		constexpr auto OcclusionCollisionChannel = 0x220; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x224; // char : 1
		constexpr auto EarlyReflectionAuxBus = 0x228; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x230; // FString
		constexpr auto EarlyReflectionOrder = 0x240; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x244; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x248; // float
		constexpr auto roomReverbAuxBusGain = 0x24c; // float
		constexpr auto diffractionMaxEdges = 0x250; // int32_t
		constexpr auto diffractionMaxPaths = 0x254; // int32_t
		constexpr auto diffractionMaxPathLength = 0x258; // float
		constexpr auto DrawFirstOrderReflections = 0x25c; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x25c; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x25c; // char : 1
		constexpr auto DrawDiffraction = 0x25c; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x260; // bool
		constexpr auto AttenuationScalingFactor = 0x264; // float
		constexpr auto OcclusionRefreshInterval = 0x268; // float
		constexpr auto bUseReverbVolumes = 0x26c; // bool
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_UNUIScreen {
		constexpr auto IsEntering = 0x260; // bool
		constexpr auto CurrentAnalogValue = 0x264; // float
		constexpr auto bAllowedToNavigate = 0x268; // bool
		constexpr auto IsExiting = 0x269; // bool
		constexpr auto ShouldBeRemovedFromViewport = 0x26a; // bool
		constexpr auto PreviousScreen = 0x270; // UNUIScreen*
		constexpr auto GamePadSettingsDataAsset = 0x278; // UPromodGamePadSettingsDataAsset*
		constexpr auto BattInstance = 0x280; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x288; // UBattalionSettings*
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_AGrenadeFollowActor {
		constexpr auto RootBox = 0x220; // UBoxComponent*
		constexpr auto LinkedGrenade = 0x228; // ABattalionGrenade*
		constexpr auto BeginDestroyTimer = 0x230; // bool
		constexpr auto DestroyTime = 0x234; // float
		constexpr auto DestroyTimer = 0x238; // float
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UAB_UNDCSniper_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x3d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoWayBlend = 0x418; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x4e0; // FAnimNode_SequenceEvaluator
		constexpr auto Targeting = 0x530; // float
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UNUIRoundResult {
		constexpr auto ResultText = 0x278; // FText
		constexpr auto ReasonText = 0x290; // FText
		constexpr auto ResultColor = 0x2a8; // FLinearColor
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UNUICTFFlagStates {
		constexpr auto LocalPlayerTeam = 0x278; // int32_t
		constexpr auto FlagCarrierPlayerStates = 0x280; // TArray<ACTFPlayerState*>
		constexpr auto FlagStates = 0x290; // TArray<int32_t>
		constexpr auto FlagStateTexts = 0x2a0; // TArray<FText>
		constexpr auto FlagStateColors = 0x2b0; // TArray<FLinearColor>
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UNUIVault {
		constexpr auto BindName = 0x278; // FText
		constexpr auto ButtonProfile = 0x290; // FString
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x588; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x598; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5a0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5bc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5d8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5e8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5f0; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5f4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x610; // bool
		constexpr auto InstanceCountToRender = 0x614; // int32_t
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UMedalCarrierKill {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UNUIBombIcon {
		constexpr auto IconVisibility = 0x278; // ESlateVisibility
		constexpr auto AmmoWidgetWidth = 0x27c; // float
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UNUIDOMScores {
		constexpr auto AllyTeamNumber = 0x2f8; // int32_t
		constexpr auto EnemyTeamNumber = 0x2fc; // int32_t
		constexpr auto AllyNationType = 0x300; // ENationType
		constexpr auto EnemyNationType = 0x301; // ENationType
		constexpr auto AllyTeamColor = 0x304; // FLinearColor
		constexpr auto EnemyTeamColor = 0x314; // FLinearColor
		constexpr auto AllyZoneCount = 0x324; // int32_t
		constexpr auto EnemyZoneCount = 0x328; // int32_t
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UWBP_RoundPip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_LeftBar = 0x268; // UImage*
		constexpr auto IMG_Pip = 0x270; // UImage*
		constexpr auto IMG_Pip_Selected = 0x278; // UImage*
		constexpr auto IMG_RightBar = 0x280; // UImage*
		constexpr auto IMG_Trophy = 0x288; // UImage*
		constexpr auto SB_LeftBorder = 0x290; // USizeBox*
		constexpr auto SB_RightBorder = 0x298; // USizeBox*
		constexpr auto Spacer_LeftBar = 0x2a0; // USpacer*
		constexpr auto Spacer_RightBar = 0x2a8; // USpacer*
		constexpr auto WS_PipType = 0x2b0; // UWidgetSwitcher*
		constexpr auto State = 0x2b8; // int32_t
		constexpr auto Type = 0x2bc; // int32_t
		constexpr auto SelfTeam = 0x2c0; // bool
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_ABombMode_Zone {
		constexpr auto CollisionComp = 0x220; // UBoxComponent*
		constexpr auto MapIconComponent = 0x228; // UMapIconComponent*
		constexpr auto FloorPoint = 0x230; // USphereComponent*
		constexpr auto TeamAllegiance = 0x238; // int32_t
		constexpr auto StageID = 0x23c; // int32_t
		constexpr auto ZoneName = 0x240; // EBombModeZoneName
		constexpr auto AttachedBomb = 0x248; // ABombMode_Bomb*
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_USettings_Backdrop__Option_Unselected_C {
		constexpr auto Backdrop-colour-image = 0x260; // UImage*
		constexpr auto Breaker = 0x268; // UImage*
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UMedal1v2Clutch {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto ClutcherPC = 0x50; // ABattalionPlayerControllerGMBase*
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_USMNodeInstance {
		constexpr auto bAutoEvalExposedProperties = 0x30; // bool
		constexpr auto ExposedPropertyOverrides = 0x38; // TArray<FSMGraphProperty>
		constexpr auto NodeIcon = 0x48; // UTexture2D*
		constexpr auto NodeIconSize = 0x50; // FVector2D
		constexpr auto NodeIconTintColor = 0x58; // FLinearColor
		constexpr auto TemplateGuid = 0x70; // FGuid
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_ACardPickup {
		constexpr auto RootSceneComponent = 0x220; // USceneComponent*
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto LoadoutSystemClass = 0x230; // ABattalionLoadoutSystem*
		constexpr auto ClassName = 0x238; // FString
		constexpr auto TextureName = 0x248; // FName
		constexpr auto CardPickupCue = 0x250; // UAkAudioEvent*
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_ABP_ThrowableAmmoBox_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto OnImpact = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x258; // char : 1
		constexpr auto AuxBus = 0x260; // UAkAuxBus*
		constexpr auto AuxBusName = 0x268; // FString
		constexpr auto SendLevel = 0x278; // float
		constexpr auto FadeRate = 0x27c; // float
		constexpr auto Priority = 0x280; // float
		constexpr auto LateReverbComponent = 0x288; // UAkLateReverbComponent*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UPromodCosmeticsDataAsset {
		constexpr auto Cosmetics = 0x30; // TArray<FCosmeticItem>
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNUISniperScreenEffects {
		constexpr auto SniperVignette = 0x288; // float
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UPromodTacticalUtilDataAsset {
		constexpr auto TacticalUtils = 0x30; // TArray<FTacticalUtilItem>
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x440; // int32_t
		constexpr auto SectionBaseY = 0x444; // int32_t
		constexpr auto ComponentSizeQuads = 0x448; // int32_t
		constexpr auto SubsectionSizeQuads = 0x44c; // int32_t
		constexpr auto NumSubsections = 0x450; // int32_t
		constexpr auto OverrideMaterial = 0x458; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x460; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x468; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x478; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x488; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x498; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4a8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4b8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4c0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4d0; // float
		constexpr auto HeightmapScaleBias = 0x4e0; // FVector4
		constexpr auto CachedLocalBox = 0x4f0; // FBox
		constexpr auto CollisionComponent = 0x50c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x528; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x530; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x540; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x550; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x558; // FGuid
		constexpr auto IrrelevantLights = 0x568; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x578; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x57c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x580; // float
		constexpr auto PositiveZBoundsExtension = 0x584; // float
		constexpr auto StaticLightingResolution = 0x588; // float
		constexpr auto ForcedLOD = 0x58c; // int32_t
		constexpr auto LODBias = 0x590; // int32_t
		constexpr auto StateId = 0x594; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5a4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5b8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5c0; // char
		constexpr auto MobileMaterialInterface = 0x5c8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5d0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5e0; // TArray<UTexture2D*>
	}

	namespace n_UPlayFabSubsystem {
		constexpr auto OnLoginCompleted = 0x30; // FMulticastInlineDelegate
		constexpr auto OnReceivedServerBuildId = 0x40; // FMulticastInlineDelegate
		constexpr auto Settings = 0x50; // UPlayFabSubsystemSettings*
		constexpr auto PlatformHelper = 0x58; // UBIPF_PlatformHelper*
		constexpr auto bIsServer = 0x60; // bool
		constexpr auto bIsLoggedIn = 0x61; // bool
		constexpr auto LoginControllerId = 0x64; // int32_t
		constexpr auto BuildCL = 0x68; // FString
		constexpr auto ServerBuildId = 0x78; // FString
		constexpr auto GetServerBuildIdRetries = 0x88; // int32_t
		constexpr auto PlayerIdCache = 0xb0; // UPFPlayerIdCache*
		constexpr auto PlayerDataManager = 0xb8; // UPFPlayerDataManager*
		constexpr auto GroupManager = 0xc0; // UPFGroupManager*
		constexpr auto MatchmakingManager = 0xc8; // UPFMatchmakingManager*
		constexpr auto MatchmakingInterop = 0xd0; // UPFMatchmakingInterop*
		constexpr auto ServerSlotManager = 0xd8; // UPFServerSlotManager*
		constexpr auto RegionManager = 0xe0; // UPFRegionManager*
		constexpr auto LocalClientPlayerId = 0xe8; // FPFPlayerId
		constexpr auto LocalClientAuthenticationContextObj = 0x108; // UPlayFabAuthenticationContext*
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3a8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b0; // bool
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x470; // AChaosSolverActor*
		constexpr auto RestCollection = 0x558; // UGeometryCollection*
		constexpr auto InitializationFields = 0x560; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x570; // bool
		constexpr auto ObjectType = 0x578; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x579; // bool
		constexpr auto ClusterGroupIndex = 0x57c; // int32_t
		constexpr auto MaxClusterLevel = 0x580; // int32_t
		constexpr auto DamageThreshold = 0x588; // TArray<float>
		constexpr auto ClusterConnectionType = 0x598; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x59c; // int32_t
		constexpr auto CollisionSampleFraction = 0x5a0; // float
		constexpr auto LinearEtherDrag = 0x5a4; // float
		constexpr auto AngularEtherDrag = 0x5a8; // float
		constexpr auto PhysicalMaterial = 0x5b0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5b8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5bc; // FVector
		constexpr auto InitialAngularVelocity = 0x5c8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5d8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5e0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x630; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x668; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x678; // float
		constexpr auto CachePlayback = 0x67c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x680; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x690; // bool
		constexpr auto bNotifyCollisions = 0x691; // bool
		constexpr auto bEnableReplication = 0x692; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x693; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x694; // int32_t
		constexpr auto RepData = 0x698; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8c8; // UBodySetup*
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNuclearInputSystem {
		constexpr auto ControllerAnalogThreshold = 0x30; // float
		constexpr auto OnInputTypeChanged = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UMapTrackerComponent {
		constexpr auto OnMapIconRegistered = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnMapIconUnregistered = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundRegistered = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundUnregistered = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnMapFogRegistered = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnMapFogUnregistered = 0x100; // FMulticastInlineDelegate
		constexpr auto OnMapRevealerRegistered = 0x110; // FMulticastInlineDelegate
		constexpr auto OnMapRevealerUnregistered = 0x120; // FMulticastInlineDelegate
		constexpr auto MapIcons = 0x130; // TArray<UMapIconComponent*>
		constexpr auto MapBackgrounds = 0x140; // TArray<AMapBackground*>
		constexpr auto MapFogs = 0x150; // TArray<AMapFog*>
		constexpr auto MapRevealers = 0x160; // TArray<UMapRevealerComponent*>
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UNUIScoreboardTeam {
		constexpr auto TeamIndex = 0x2e0; // int32_t
		constexpr auto TeamData = 0x2e8; // UBattalionTeam*
		constexpr auto DeadPlayerTextColor = 0x2f0; // FLinearColor
		constexpr auto TeamScore = 0x300; // FText
		constexpr auto TeamFlagState = 0x318; // FText
		constexpr auto NationIconVisibility = 0x330; // ESlateVisibility
		constexpr auto TeamScoreVisibility = 0x331; // ESlateVisibility
		constexpr auto CTFFlagStateVisibility = 0x332; // ESlateVisibility
		constexpr auto CachedScores = 0x338; // TMap<ABattalionPlayerState*, float>
		constexpr auto FFAVisibility = 0x388; // ESlateVisibility
		constexpr auto WartideVisibility = 0x389; // ESlateVisibility
		constexpr auto CTFVisibility = 0x38a; // ESlateVisibility
		constexpr auto DOMVisibility = 0x38b; // ESlateVisibility
		constexpr auto INFVisibility = 0x38c; // ESlateVisibility
		constexpr auto MemberWidgetListInitializing = 0x38d; // bool
	}

	namespace n_UAkGameObject {
		constexpr auto AkAudioEvent = 0x1f8; // UAkAudioEvent*
		constexpr auto EventName = 0x200; // FString
	}

	namespace n_USETTINGS-MM-Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Simulation-text-off = 0x268; // UWidgetAnimation*
		constexpr auto Simulation-activated = 0x270; // UWidgetAnimation*
		constexpr auto Pulse = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto SingleFrameSelected = 0x288; // UWidgetAnimation*
		constexpr auto Default = 0x290; // UWidgetAnimation*
		constexpr auto Backdrop-colour-image = 0x298; // UImage*
		constexpr auto Backdrop-colour-image_2 = 0x2a0; // UImage*
		constexpr auto MM_ICON_2 = 0x2a8; // UImage*
		constexpr auto PM-BUTTON = 0x2b0; // UButton*
		constexpr auto Selected-Size-Canvas = 0x2b8; // UCanvasPanel*
		constexpr auto UNSelected-Size-Canvas = 0x2c0; // UCanvasPanel*
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_AMapEditorObjectPreview {
		constexpr auto ChildActorComponent = 0x220; // UChildActorComponent*
		constexpr auto PreviewObject = 0x228; // FMapEditorObjectData
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UNUILineGraph {
		constexpr auto Lines = 0x278; // TArray<FLineGraphPointArray>
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UCargoGameOverviewWidget {
		constexpr auto CargoProgressText = 0x390; // FText
		constexpr auto OvertimeText = 0x3a8; // FText
		constexpr auto OvertimeTimeVisibility = 0x3c0; // ESlateVisibility
		constexpr auto CenterTimerVisibility = 0x3c1; // ESlateVisibility
		constexpr auto SideTimerVisibility = 0x3c2; // ESlateVisibility
	}

	namespace n_UWBP_AmmoAndNades_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Anim_AmmoAdded = 0x270; // UWidgetAnimation*
		constexpr auto Fire_Chromatic = 0x278; // UWidgetAnimation*
		constexpr auto Glitch = 0x280; // UWidgetAnimation*
		constexpr auto AmmoBox = 0x288; // UHorizontalBox*
		constexpr auto Image_67 = 0x290; // UImage*
		constexpr auto ReserveAmmo = 0x298; // UTextBlock*
		constexpr auto ReserveAmmo_2 = 0x2a0; // UTextBlock*
		constexpr auto ReserveAmmo_3 = 0x2a8; // UTextBlock*
		constexpr auto TB_AmmoAdded = 0x2b0; // UTextBlock*
		constexpr auto WeaponAmmo = 0x2b8; // UTextBlock*
		constexpr auto WeaponAmmo_2 = 0x2c0; // UTextBlock*
		constexpr auto WeaponAmmo_3 = 0x2c8; // UTextBlock*
		constexpr auto AmmoShown = 0x2d0; // bool
		constexpr auto HUDColour = 0x2d8; // UHUDTextDataAsset*
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_ABattalionBaseLevel {
		constexpr auto TeamNations = 0x228; // TArray<ENationType>
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UBattalionTeam {
		constexpr auto OutOfBoundsSpecIDs = 0x28; // TArray<ABattalionPlayerState*>
		constexpr auto OutOfBoundsPlayers = 0x38; // TArray<ABattalionPlayerState*>
		constexpr auto TeamIndex = 0x48; // float
		constexpr auto Nation = 0x4c; // ENationType
		constexpr auto Score = 0x50; // float
		constexpr auto RoundsWon = 0x54; // int32_t
		constexpr auto WinStreak = 0x58; // int32_t
		constexpr auto LooseStreak = 0x5c; // int32_t
		constexpr auto Kills = 0x60; // float
		constexpr auto Deaths = 0x64; // float
		constexpr auto Name = 0x68; // FString
		constexpr auto Players = 0x88; // TArray<APlayerState*>
		constexpr auto Bots = 0x98; // TArray<APlayerState*>
		constexpr auto PlayerColors = 0xa8; // TMap<FLinearColor, ABattalionPlayerState*>
		constexpr auto TokensEarnedThisRound = 0x148; // int32_t
		constexpr auto PendingRoundWin = 0x14c; // bool
		constexpr auto WonPreviousRound = 0x14d; // bool
		constexpr auto Surrendered = 0x14e; // bool
		constexpr auto ScoreThisRound = 0x154; // int32_t
		constexpr auto Color = 0x160; // FLinearColor
	}

	namespace n_UNUIInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UNUIFloatingCard {
		constexpr auto Owner = 0x480; // ABattalionPlayerState*
		constexpr auto Destination = 0x488; // FVector2D
		constexpr auto bCardHeld = 0x490; // bool
	}

	namespace n_UNUIPauseMenu {
		constexpr auto GameModeType = 0x290; // EMapPackGamemode
		constexpr auto JumperGameMode = 0x298; // AJumperGameMode*
		constexpr auto KillRunGameMode = 0x2a0; // AKillRunGameMode*
		constexpr auto UNLOCKEDLEVELS = 0x2a8; // TArray<FString>
		constexpr auto KillrunLevelsStarsMap = 0x2b8; // TMap<FString, int32_t>
		constexpr auto SettingsVisible = 0x308; // bool
		constexpr auto ReportPlayerVisible = 0x309; // bool
		constexpr auto SavedLocationsVisible = 0x30a; // bool
		constexpr auto LevelSelectVisible = 0x30b; // bool
		constexpr auto CurrentChangeTeamCooldown = 0x30c; // float
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_ADOMPlayerController {
		constexpr auto CurrentZone = 0xc08; // ADOMMode_Zone*
		constexpr auto DiedInZone = 0xc10; // ADOMMode_Zone*
		constexpr auto StartTickingEvent = 0xc58; // UAkAudioEvent*
		constexpr auto StopTickingEvent = 0xc60; // UAkAudioEvent*
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_ABattalionStunGrenade {
		constexpr auto EffectivenessRange = 0x3d0; // FVector2D
		constexpr auto DecalMaterialPtr = 0x3d8; // UMaterialInterface*
		constexpr auto DecalSize = 0x3e0; // FVector
		constexpr auto DecalLifeTime = 0x3ec; // float
		constexpr auto ObjectLifeSpan = 0x3f0; // float
		constexpr auto bShowDebugStunRange = 0x3f4; // bool
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UNUISettingsMenuItem {
		constexpr auto SettingsMenu = 0x260; // UNUISettingsMenu*
		constexpr auto Type = 0x268; // ESettingType
		constexpr auto Key = 0x270; // FString
		constexpr auto Value = 0x280; // FString
		constexpr auto Keys = 0x290; // TArray<FString>
		constexpr auto Name = 0x2a0; // FText
		constexpr auto SliderMin = 0x2b8; // float
		constexpr auto SliderMax = 0x2bc; // float
		constexpr auto DecimalPlaces = 0x2c0; // int32_t
		constexpr auto SliderStep = 0x2c4; // float
		constexpr auto DisplayOptions = 0x2c8; // TArray<FText>
		constexpr auto KeyOptions = 0x2d8; // TArray<FString>
		constexpr auto Disabled = 0x2e8; // bool
		constexpr auto SecretSetting = 0x2e9; // bool
		constexpr auto MainSettingMenuPtr = 0x2f0; // UNUISettingsMenu*
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UBattalionWeaponNationDataAsset {
		constexpr auto weaponNations = 0x30; // TArray<FWeaponNationEntity>
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_UWeaponNameDataAsset {
		constexpr auto WeaponNameEntries = 0x30; // TArray<FWeaponNameEntry>
	}

	namespace n_UWBP_SplitsListItem_C {
		constexpr auto CheckpointNumber = 0x260; // UTextBlock*
		constexpr auto PersonalBestForCheckpoint = 0x268; // UTimeDisplay_C*
		constexpr auto SplitDifference = 0x270; // UTimeDisplay_C*
		constexpr auto TimeDisplay = 0x278; // UTimeDisplay_C*
	}

	namespace n_UCTFCharacterComponent {
		constexpr auto WorldMarkerComponent = 0x230; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentIcon = 0x238; // UTexture2D*
		constexpr auto AttachedFlag = 0x240; // ACTFMode_Flag*
		constexpr auto FlagClass = 0x248; // AActor*
	}

	namespace n_UADSCameraModifier {
		constexpr auto BattInstance = 0x48; // UBattalionGameInstance*
		constexpr auto BattCameraManager = 0x50; // ABattalionPlayerCameraManager*
		constexpr auto BattSettings = 0x58; // UBattalionSettings*
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UWeaponOrderDataAsset {
		constexpr auto WeaponGlobalOrder = 0x30; // TArray<EWeaponType>
		constexpr auto MissingWeapons = 0x40; // TArray<EWeaponType>
		constexpr auto WeaponOrderAmerican = 0x50; // TArray<EWeaponType>
		constexpr auto WeaponOrderBritish = 0x60; // TArray<EWeaponType>
		constexpr auto WeaponOrderGerman = 0x70; // TArray<EWeaponType>
		constexpr auto WeaponOrderSoviet = 0x80; // TArray<EWeaponType>
		constexpr auto WeaponNationDataAsset = 0x90; // UBattalionWeaponNationDataAsset*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UABP_DeployableCover_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x378; // FAnimNode_Slot
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UFirstPersonAnimInstance {
		constexpr auto AnimHipIdle = 0x2b8; // UAnimSequence*
		constexpr auto AnimSprint = 0x2c0; // UAnimSequence*
		constexpr auto AnimSprintIn = 0x2c8; // UAnimSequence*
		constexpr auto AnimHipAdditiveAltIdle = 0x2d0; // UAnimSequence*
		constexpr auto AnimADSLocomotion = 0x2d8; // UAnimSequence*
		constexpr auto AnimSlide = 0x2e0; // UAnimSequence*
		constexpr auto ActiveAnimTarget = 0x2e8; // UAnimSequenceBase*
		constexpr auto bIsMovementAllowed = 0x2f0; // bool
		constexpr auto IsHoldingMove = 0x2f1; // bool
		constexpr auto IsRunning = 0x2f2; // bool
		constexpr auto IsChambering = 0x2f3; // bool
		constexpr auto IsTargeting = 0x2f4; // bool
		constexpr auto IsQuickEquipping = 0x2f5; // bool
		constexpr auto bIsQuickEquippingADS = 0x2f6; // bool
		constexpr auto IsVaulting = 0x2f7; // bool
		constexpr auto TargetingTransition = 0x2f8; // float
		constexpr auto TeamCharacterType = 0x2fc; // ECharacterTeam
		constexpr auto IsAlternativeAnimationSystem = 0x2fd; // bool
		constexpr auto IsReloadEnding = 0x2fe; // bool
		constexpr auto DisplayRunAnim = 0x300; // float
		constexpr auto CompressSize = 0x304; // float
		constexpr auto AnimInstanceCrush = 0x308; // FVector
		constexpr auto AnimInstanceCrushOffset = 0x314; // FVector
		constexpr auto bProneRotateGun = 0x320; // bool
		constexpr auto ProneRotateGun = 0x324; // float
		constexpr auto VaultRotateGun = 0x328; // float
		constexpr auto ProneGunTranslateVelocity = 0x32c; // float
		constexpr auto ProneGunTranslateVelocityReverse = 0x330; // float
		constexpr auto IsStanding = 0x334; // bool
		constexpr auto IsCrouch = 0x335; // bool
		constexpr auto IsProne = 0x336; // bool
		constexpr auto bIsKnifeEqupped = 0x337; // bool
		constexpr auto MeleeComboIndex = 0x338; // int32_t
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9ec; // float
		constexpr auto MulticastRecordOptions = 0xa10; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa20; // bool
		constexpr auto SpectatorControllers = 0xa28; // TArray<APlayerController*>
	}

	namespace n_UFPAnimInstance {
		constexpr auto AnimHipIdle = 0x2b8; // UAnimSequence*
		constexpr auto AnimSprint = 0x2c0; // UAnimSequence*
		constexpr auto AnimSprintIn = 0x2c8; // UAnimSequence*
		constexpr auto AnimHipAdditiveAltIdle = 0x2d0; // UAnimSequence*
		constexpr auto AnimADSLocomotion = 0x2d8; // UAnimSequence*
		constexpr auto ActiveAnimTarget = 0x2e0; // UAnimSequenceBase*
		constexpr auto IsRunning = 0x2e8; // bool
		constexpr auto IsChambering = 0x2e9; // bool
		constexpr auto IsTargeting = 0x2ea; // bool
		constexpr auto IsVaulting = 0x2eb; // bool
		constexpr auto TargetingTransition = 0x2ec; // float
		constexpr auto TeamCharacterType = 0x2f0; // ECharacterTeam
		constexpr auto IsAlternativeAnimationSystem = 0x2f1; // bool
		constexpr auto IsReloadEnding = 0x2f2; // bool
		constexpr auto DisplayRunAnim = 0x2f4; // float
		constexpr auto CompressSize = 0x2f8; // float
		constexpr auto AnimInstanceCrush = 0x2fc; // FVector
		constexpr auto AnimInstanceCrushOffset = 0x308; // FVector
		constexpr auto ProneRotateGun = 0x314; // float
		constexpr auto ProneRotateGunVelocity = 0x318; // float
		constexpr auto ProneRotateGunVelocityReverse = 0x31c; // float
		constexpr auto VaultRotateGun = 0x320; // float
		constexpr auto IsKnife = 0x324; // bool
		constexpr auto IsThompson = 0x325; // bool
	}

	namespace n_UMapBombWidget {
		constexpr auto LinkedCharacter = 0x268; // ABattalionCharacter*
		constexpr auto LinkedBomb = 0x270; // ABombMode_Bomb*
		constexpr auto CachedMaterial = 0x278; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x280; // ABeacon*
		constexpr auto BeaconScaleX = 0x288; // float
		constexpr auto BeaconScaleY = 0x28c; // float
		constexpr auto Image = 0x290; // UImage*
		constexpr auto ScaledPlayerPos = 0x298; // FVector2D
		constexpr auto RotationAngle = 0x2a0; // float
		constexpr auto CanvasPanelSlot = 0x2a8; // UCanvasPanelSlot*
		constexpr auto bInActiveArray = 0x2d4; // bool
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UWBP_StrafeJumpSpeedFeedback_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SpeedL = 0x268; // UProgressBar*
		constexpr auto SpeedR = 0x270; // UProgressBar*
		constexpr auto MinimumSpeed = 0x278; // float
		constexpr auto MaximumSpeed = 0x27c; // float
		constexpr auto FadeInMultiplier = 0x280; // float
		constexpr auto FadeOutMultiplier = 0x284; // float
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_AMapEditorHUD {
		constexpr auto MapEditorWidget = 0x310; // UMapEditorWidget*
		constexpr auto MapEditorWidgetClass = 0x318; // UMapEditorWidget*
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UPlayFabExperimentationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x108; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x110; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x118; // UPlayFabJsonObject*
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UGameEventRecorder {
		constexpr auto bIsRecording = 0x28; // bool
		constexpr auto MatchData = 0x30; // FMatchData
		constexpr auto CurrentFrameData = 0x68; // FFrameEvents
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x440; // UVectorField*
		constexpr auto Intensity = 0x448; // float
		constexpr auto Tightness = 0x44c; // float
		constexpr auto bPreviewVectorField = 0x450; // char : 1
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_ABattalionGameState {
		constexpr auto MapModeVotes = 0x270; // TArray<FMapModeVoteInfo>
		constexpr auto TeamDeckDirty = 0x280; // bool
		constexpr auto ClientMarket = 0x288; // ABattalionMarket*
		constexpr auto ClientMarketClass = 0x290; // ABattalionMarket*
		constexpr auto Market = 0x298; // ABattalionMarket*
		constexpr auto ShortModeName = 0x2a0; // FString
		constexpr auto LongModeName = 0x2b0; // FString
		constexpr auto SubModeName = 0x2c0; // FString
		constexpr auto MapName = 0x2d0; // FString
		constexpr auto MatchState = 0x2e0; // FName
		constexpr auto ServerMode = 0x2e8; // FName
		constexpr auto ElapsedTimeInState = 0x2f0; // float
		constexpr auto WaitingToStartTimer = 0x2f8; // int64_t
		constexpr auto MatchStartTime = 0x300; // int64_t
		constexpr auto MatchEndTime = 0x308; // int64_t
		constexpr auto StartType = 0x310; // FName
		constexpr auto Round = 0x318; // char
		constexpr auto StratTime = 0x31c; // int32_t
		constexpr auto CinematicSetupRoundTime = 0x320; // int32_t
		constexpr auto SetupRoundTime = 0x324; // int32_t
		constexpr auto PostRoundTime = 0x328; // int32_t
		constexpr auto PostMatchTime = 0x32c; // int32_t
		constexpr auto FriendlyFire = 0x330; // bool
		constexpr auto CountdownToStart = 0x334; // float
		constexpr auto SetupCountdown = 0x338; // float
		constexpr auto StratCountdown = 0x33c; // float
		constexpr auto NumNations = 0x340; // int32_t
		constexpr auto LastThrownGrenade = 0x348; // ABattalionGrenade*
		constexpr auto LastThrownSmoke = 0x350; // ABattalionSmokeGrenade*
		constexpr auto LastThrownFlash = 0x358; // ABattalionFlashGrenade*
		constexpr auto LastThrownStun = 0x360; // ABattalionStunGrenade*
		constexpr auto InPlayGrenades = 0x368; // TArray<ABattalionGrenade*>
		constexpr auto InPlaySmokes = 0x378; // TArray<ABattalionSmokeGrenade*>
		constexpr auto InPlaySmokeVolumes = 0x388; // TArray<ASmokeGrenadeVolume*>
		constexpr auto InPlayFlashes = 0x398; // TArray<ABattalionFlashGrenade*>
		constexpr auto InPlayStuns = 0x3a8; // TArray<ABattalionStunGrenade*>
		constexpr auto InPlayTrophySystems = 0x3b8; // TArray<AActor*>
		constexpr auto InPlayDeployableCovers = 0x3c8; // TArray<AActor*>
		constexpr auto InPlayAmmoBoxes = 0x3d8; // TArray<AActor*>
		constexpr auto Teams = 0x3e8; // TArray<UBattalionTeam*>
		constexpr auto NumTeams = 0x3f8; // int32_t
		constexpr auto bCheatAdminCmdsEnabled = 0x3fc; // bool
		constexpr auto RoundEndReason = 0x400; // FName
		constexpr auto TeamDecks = 0x408; // TArray<FBattalionLoadoutDeckInstance>
		constexpr auto LoadoutSystem = 0x418; // ABattalionLoadoutSystem*
		constexpr auto NumPlayersToFillServer = 0x420; // int32_t
		constexpr auto SpectatorTeamEnabled = 0x424; // bool
		constexpr auto ServerAverageFPS = 0x428; // float
		constexpr auto CheatsDetected = 0x42c; // bool
		constexpr auto PrevRoundWinConditions = 0x430; // TArray<FRoundWinCondition>
		constexpr auto StratMode = 0x440; // bool
		constexpr auto ScoreToWinRound = 0x444; // int32_t
		constexpr auto MaxPlayersPerTeam = 0x448; // int32_t
		constexpr auto AdminRevealAll = 0x44c; // bool
		constexpr auto AdminFreeze = 0x44d; // bool
		constexpr auto AdminPaused = 0x44e; // bool
		constexpr auto EnableEnemyPlayerNames = 0x44f; // bool
		constexpr auto bBackfillEnabled = 0x450; // bool
		constexpr auto MatchMVPList = 0x458; // TArray<ABattalionPlayerState*>
		constexpr auto ProScoreDraw = 0x468; // int32_t
		constexpr auto ProScoreWin = 0x46c; // int32_t
		constexpr auto ProScoreLoss = 0x470; // int32_t
		constexpr auto OnMatchStateChanged = 0x478; // FMulticastInlineDelegate
		constexpr auto MatchID = 0x488; // FGuid
		constexpr auto RoundTime = 0x498; // int32_t
		constexpr auto AdditionalRoundTime = 0x49c; // int32_t
	}

	namespace n_ABlitzMode_Zone {
		constexpr auto DefaultSpatialMarker = 0x258; // UBlitzWidgetComponent*
		constexpr auto ArmedSpatialMarker = 0x260; // UBlitzWidgetComponent*
	}

	namespace n_UPlayerLoadoutsSaveData {
		constexpr auto PLAYERLOADOUTS = 0x50; // TArray<FLoadoutData>
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_UWBP_WartideWorldMarker_C {
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto FadeInCheckpoint = 0x380; // UWidgetAnimation*
		constexpr auto FadeIn = 0x388; // UWidgetAnimation*
		constexpr auto Arrow = 0x390; // UImage*
		constexpr auto ContentCanvas = 0x398; // UCanvasPanel*
		constexpr auto DistanceText = 0x3a0; // UTextBlock*
		constexpr auto HorizontalBox = 0x3a8; // UHorizontalBox*
		constexpr auto HorizontalBox_1 = 0x3b0; // UHorizontalBox*
		constexpr auto Line = 0x3b8; // UImage*
		constexpr auto Marker = 0x3c0; // UOverlay*
		constexpr auto Metres = 0x3c8; // UTextBlock*
		constexpr auto NonProgressBackground = 0x3d0; // UImage*
		constexpr auto NonProgressBackgroundInner = 0x3d8; // UImage*
		constexpr auto ObjectiveLabel = 0x3e0; // UTextBlock*
		constexpr auto Overlay_2 = 0x3e8; // UOverlay*
		constexpr auto ProgressBar_95 = 0x3f0; // UProgressBar*
		constexpr auto Resizer = 0x3f8; // USizeBox*
		constexpr auto ScaleBox_1 = 0x400; // UScaleBox*
		constexpr auto TimerText = 0x408; // UTextBlock*
		constexpr auto Triangle = 0x410; // UImage*
		constexpr auto Use Progress Marker = 0x418; // bool
		constexpr auto MainColor = 0x41c; // FLinearColor
		constexpr auto OffColor = 0x42c; // FLinearColor
		constexpr auto bUseTimerText = 0x43c; // bool
		constexpr auto DramaticCountdownTime = 0x440; // float
		constexpr auto OwningPlayer = 0x448; // APromodCharacter*
		constexpr auto IsADS = 0x450; // bool
		constexpr auto IsClose = 0x451; // bool
		constexpr auto ShowingObjectiveLabel = 0x452; // bool
		constexpr auto ActiveFadeInAnimation = 0x458; // UWidgetAnimation*
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x468; // bool
		constexpr auto bAttachEnd = 0x469; // bool
		constexpr auto AttachEndTo = 0x470; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x498; // FName
		constexpr auto EndLocation = 0x4a0; // FVector
		constexpr auto CableLength = 0x4ac; // float
		constexpr auto NumSegments = 0x4b0; // int32_t
		constexpr auto SubstepTime = 0x4b4; // float
		constexpr auto SolverIterations = 0x4b8; // int32_t
		constexpr auto bEnableStiffness = 0x4bc; // bool
		constexpr auto bUseSubstepping = 0x4bd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4be; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4bf; // bool
		constexpr auto bEnableCollision = 0x4c0; // bool
		constexpr auto CollisionFriction = 0x4c4; // float
		constexpr auto CableForce = 0x4c8; // FVector
		constexpr auto CableGravityScale = 0x4d4; // float
		constexpr auto CableWidth = 0x4d8; // float
		constexpr auto NumSides = 0x4dc; // int32_t
		constexpr auto TileMaterial = 0x4e0; // float
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UMedalAce {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto AceTrackers = 0x50; // TArray<FAceTracker>
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x58; // UAkAudioBank*
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UNUIJumperLeaderboard {
		constexpr auto ParsedLeaderBoardData = 0x278; // FJumperLeaderboardData
		constexpr auto ModeName = 0x290; // FText
		constexpr auto MapName = 0x2a8; // FText
		constexpr auto MatchTime = 0x2c0; // FText
		constexpr auto DisplayMapNames = 0x2d8; // TMap<FString, FText>
		constexpr auto DisplayModeNames = 0x328; // TMap<FString, FText>
		constexpr auto MemberWidgets = 0x378; // TArray<UNUIScoreboardRow*>
		constexpr auto MemberWidgetClass = 0x388; // UNUIScoreboardRow*
		constexpr auto LeaderboardRadius = 0x3a0; // int32_t
		constexpr auto BoardRefreshTime = 0x3a4; // float
		constexpr auto bRefreshCooldownReached = 0x3ac; // bool
		constexpr auto bUseFriendsLeaderboard = 0x3ad; // bool
		constexpr auto bUpdateNow = 0x3ae; // bool
		constexpr auto bMainMenu = 0x3af; // bool
		constexpr auto bAutoUpdate = 0x3b0; // bool
		constexpr auto CurrentlySelectedMap = 0x3b8; // FString
	}

	namespace n_APromodBouncePad {
		constexpr auto CollisionBox = 0x220; // UBoxComponent*
		constexpr auto BounceMultiplier = 0x228; // float
		constexpr auto MaxBounceClamp = 0x22c; // float
		constexpr auto MinBounceClamp = 0x230; // float
		constexpr auto MinZVelocityRequiredForBounce = 0x234; // float
		constexpr auto AllowableOffsetPercentage = 0x238; // float
		constexpr auto BounceSound = 0x240; // UAkAudioEvent*
		constexpr auto AudioComponent = 0x248; // UAkComponent*
	}

	namespace n_UAkLinuxInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_AAkSpotReflector {
		constexpr auto EarlyReflectionAuxBus = 0x220; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x228; // FString
		constexpr auto AcousticTexture = 0x238; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x240; // float
		constexpr auto Level = 0x244; // float
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UWBP_MiniMap_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InvalidationBox_1 = 0x268; // UInvalidationBox*
		constexpr auto MiniMap = 0x270; // UMinimap_C*
		constexpr auto WBP_CallOutName = 0x278; // UWBP_CallOutName_C*
		constexpr auto HUDColour = 0x280; // UHUDTextDataAsset*
	}

	namespace n_UWBP_Killfeed_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IB_Root = 0x268; // UInvalidationBox*
		constexpr auto KillfeedCanvasPanel = 0x270; // UCanvasPanel*
		constexpr auto KillfeedEntriesVerticalBox = 0x278; // UVerticalBox*
		constexpr auto WBP_KillfeedEntry = 0x280; // UWBP_KillfeedEntry_C*
		constexpr auto WBP_KillfeedEntry_128 = 0x288; // UWBP_KillfeedEntry_C*
		constexpr auto WBP_KillfeedEntry_327 = 0x290; // UWBP_KillfeedEntry_C*
		constexpr auto WBP_KillfeedEntry_452 = 0x298; // UWBP_KillfeedEntry_C*
		constexpr auto WBP_KillfeedEntry_583 = 0x2a0; // UWBP_KillfeedEntry_C*
		constexpr auto KillfeedEntryLimit = 0x2a8; // int32_t
		constexpr auto KillfeedEntries = 0x2b0; // TArray<UWBP_KillfeedEntry_C*>
		constexpr auto CurrentlyVisible = 0x2c0; // bool
		constexpr auto VisibleTimer = 0x2c4; // float
		constexpr auto EntryType = 0x2c8; // KillfeedEntryType
		constexpr auto CurrentKillfeedEntry = 0x2d0; // UWBP_KillfeedEntry_C*
		constexpr auto HUDText Colour = 0x2d8; // UHUDTextDataAsset*
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UKeyBind_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IKS_2 = 0x268; // UNUIInputKeySelector*
		constexpr auto IKS_3 = 0x270; // UNUIInputKeySelector*
		constexpr auto IKS_4 = 0x278; // UNUIInputKeySelector*
		constexpr auto Image = 0x280; // UImage*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto Image_258 = 0x290; // UImage*
		constexpr auto HighlightedButtonText = 0x298; // UTextBlock*
		constexpr auto LastPressedKey = 0x2a0; // FText
		constexpr auto LastKnownValueKey = 0x2b8; // FText
		constexpr auto KeyBindsName = 0x2d0; // FText
		constexpr auto ThisSettingMenu = 0x2e8; // UNUISettingsMenu*
		constexpr auto IsFirstHighlighted = 0x2f0; // bool
		constexpr auto keyArray = 0x2f8; // TArray<FKey>
		constexpr auto intVal = 0x308; // int32_t
		constexpr auto LMBKey = 0x310; // FKey
		constexpr auto IsNewKeySet = 0x328; // bool
		constexpr auto WheelDelta = 0x330; // FKey
		constexpr auto IgnoreSetKeyEvent = 0x348; // bool
		constexpr auto ItemWidget = 0x350; // UNUISettingsMenuItem*
		constexpr auto Target = 0x358; // USettings_C*
		constexpr auto IgnoreConflicts = 0x360; // bool
		constexpr auto IKS Focused = 0x368; // FTextBlockStyle
		constexpr auto Focused = 0x5d8; // FButtonStyle
		constexpr auto Currently Focused = 0x850; // UNUIInputKeySelector*
		constexpr auto Normal = 0x858; // FButtonStyle
		constexpr auto IKS = 0xad0; // UNUIInputKeySelector*
		constexpr auto IKS UnFocused = 0xad8; // FTextBlockStyle
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_APromodGizmo {
		constexpr auto GizmoMeshComponent = 0x220; // USkeletalMeshComponent*
		constexpr auto GizmoMesh = 0x228; // USkeletalMesh*
		constexpr auto GizmoMeshClass = 0x230; // UObject*
		constexpr auto UseGizmoAnim = 0x238; // UAnimMontage*
		constexpr auto SavedLocationSound = 0x240; // UAkAudioEvent*
		constexpr auto LoadLocationSound = 0x248; // UAkAudioEvent*
		constexpr auto MaxPreviousSavedLocations = 0x250; // int32_t
		constexpr auto PreviousSaves = 0x258; // TArray<FGizmoSaveData>
	}

	namespace n_AReplayDataActor {
		constexpr auto CurrentControlRotations = 0x220; // TArray<FPawnControlRotation>
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UWBP_SystemTimeDisplay_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TimeTextBlock = 0x268; // UTextBlock*
		constexpr auto TimeDecoration = 0x270; // FText
		constexpr auto Minutes = 0x288; // FText
		constexpr auto Hours = 0x2a0; // FText
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UAkSwitchInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UMedalIAmLegend {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_APromodBot {
		constexpr auto MapIconComponent = 0x4c8; // UMapIconComponent*
		constexpr auto SpatialMarkerComponent = 0x4d0; // UWidgetComponent*
		constexpr auto StateMachineClass = 0x4d8; // UPromodBotSMInstance*
		constexpr auto PatrolPath = 0x4e0; // APatrolPath*
		constexpr auto BaseHealth = 0x4e8; // float
		constexpr auto HealthRegenDelay = 0x4ec; // float
		constexpr auto HealthRegenSpeed = 0x4f0; // float
		constexpr auto DisplayName = 0x4f8; // FString
		constexpr auto CurrentHealth = 0x508; // float
		constexpr auto bInitialized = 0x50c; // bool
		constexpr auto bHealthRegenerating = 0x50d; // bool
		constexpr auto LastHitTime = 0x510; // float
		constexpr auto HealthToRegenerate = 0x514; // float
		constexpr auto HitmarkerFlash = 0x518; // UAkAudioEvent*
		constexpr auto HitmarkerKill = 0x520; // UAkAudioEvent*
		constexpr auto HeadshotKill = 0x528; // UAkAudioEvent*
		constexpr auto DeathSound = 0x530; // UAkAudioEvent*
		constexpr auto OnBotDeathDelegate = 0x538; // FMulticastInlineDelegate
		constexpr auto DeathAnim = 0x548; // UAnimMontage*
		constexpr auto LOSTraceBlockingObjects = 0x550; // TArray<ECollisionChannel>
		constexpr auto bPlaySpawnSound = 0x560; // bool
		constexpr auto KnifeDamageType = 0x568; // UDamageType*
		constexpr auto QuickMeleeDamageType = 0x570; // UDamageType*
		constexpr auto FallDamageType = 0x578; // UDamageType*
		constexpr auto NadeDamageType = 0x580; // UDamageType*
		constexpr auto DefaultAkComp = 0x588; // UAkComponent*
		constexpr auto SpawnSound = 0x590; // UAkAudioEvent*
		constexpr auto UnSpawnSound = 0x598; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UGameModeMessage {
		constexpr auto MessageText = 0x260; // FText
		constexpr auto MessageVisibility = 0x278; // ESlateVisibility
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x440; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x448; // char : 1
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto U = 0x450; // float
		constexpr auto UL = 0x454; // float
		constexpr auto V = 0x458; // float
		constexpr auto VL = 0x45c; // float
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UMedalWeaponsSpecialist {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_ABattalionPlayerState {
		constexpr auto PlatformId = 0x320; // FUniqueNetIdRepl
		constexpr auto StartingXP = 0x348; // int32_t
		constexpr auto StartingProScore = 0x34c; // int32_t
		constexpr auto CurrentLoadout = 0x358; // FString
		constexpr auto CachedRelinquishedLoadout = 0x368; // FString
		constexpr auto LoadoutCursorPosition = 0x378; // FVector2D
		constexpr auto bLoadoutConfirmed = 0x380; // bool
		constexpr auto ShadowInventory = 0x388; // TArray<ABattalionWeapon*>
		constexpr auto CurrentlySelectedWeapon = 0x398; // ABattalionWeapon*
		constexpr auto CurrentlySelectedWeaponNation = 0x3a0; // ENationType
		constexpr auto ShadowNumGrenades = 0x3a4; // int32_t
		constexpr auto ShadowNumSpecialGrenades = 0x3a8; // int32_t
		constexpr auto IsInteractVisible = 0x3ac; // bool
		constexpr auto CardHeld = 0x3b0; // FString
		constexpr auto IsAdmin = 0x3c0; // bool
		constexpr auto MiniMapColor = 0x3c4; // FLinearColor
		constexpr auto ExperienceGainedFromMedals = 0x3d8; // int32_t
		constexpr auto ExperienceGainedFromChallenges = 0x3dc; // int32_t
		constexpr auto ExperienceGainedFromMatchResult = 0x3e0; // int32_t
		constexpr auto SpawnPoint = 0x3e8; // ABattalionPlayerSpawn*
		constexpr auto FirstSpawnPoint = 0x3f0; // ABattalionPlayerSpawn*
		constexpr auto Invulnerable = 0x448; // bool
		constexpr auto IsInParty = 0x460; // bool
		constexpr auto IsPartyLeader = 0x461; // bool
		constexpr auto LastKnownPartyMembers = 0x468; // TArray<FString>
		constexpr auto ScoreFromMatchResult = 0x478; // float
		constexpr auto CurrentCallOutName = 0x47c; // FName
		constexpr auto CurrentCallOutUniqueId = 0x484; // int32_t
		constexpr auto NationType = 0x488; // ENationType
		constexpr auto ClassNumber = 0x489; // char
		constexpr auto NumKills = 0x48c; // int32_t
		constexpr auto NumAssists = 0x490; // int32_t
		constexpr auto NumDeaths = 0x494; // int32_t
		constexpr auto NumHeadshotKills = 0x498; // int32_t
		constexpr auto CardsCollected = 0x49c; // int32_t
		constexpr auto NumKillsThisRound = 0x4a0; // int32_t
		constexpr auto IsReady = 0x4a4; // bool
		constexpr auto Quitter = 0x4a5; // bool
		constexpr auto NumBulletsFired = 0x4a8; // int32_t
		constexpr auto NumBulletHits = 0x4ac; // int32_t
		constexpr auto RespawnNationType = 0x4b0; // ENationType
		constexpr auto RespawnClassNumber = 0x4b1; // char
		constexpr auto IsAlive = 0x4b2; // bool
		constexpr auto TeamNumber = 0x4b4; // int32_t
		constexpr auto PreviousTeamNumber = 0x4b8; // int32_t
		constexpr auto LastTeamChangeTimeStamp = 0x4c0; // FDateTime
		constexpr auto CanBeVotedToKick = 0x4c8; // bool
		constexpr auto ScoreboardXP = 0x4cc; // int32_t
		constexpr auto IsDev = 0x4d0; // bool
		constexpr auto RoundStats = 0x4d8; // TArray<FRoundStats>
		constexpr auto IsBeingABot = 0x4e8; // bool
		constexpr auto IsPossessingABot = 0x4e9; // bool
		constexpr auto PossessedBotInPrevRound = 0x4ea; // bool
		constexpr auto IsBotPossessedByPlayer = 0x4eb; // bool
		constexpr auto PossessedBotPS = 0x4f0; // APlayerState*
		constexpr auto RecentlyKilledPlayers = 0x4f8; // TArray<FPlayerKillTime>
		constexpr auto PreviousKiller = 0x508; // APlayerState*
		constexpr auto LastGrenadeThrowPoint = 0x510; // FVector
		constexpr auto DeathStreak = 0x51c; // int32_t
		constexpr auto KillStreak = 0x520; // int32_t
		constexpr auto Clutching = 0x524; // bool
		constexpr auto ClutchingAgainst = 0x528; // int32_t
		constexpr auto OnlySpectating = 0x538; // bool
		constexpr auto SpectatingID = 0x539; // char
		constexpr auto SpectatingIDTeam = 0x53a; // char
		constexpr auto bIsCaster = 0x53b; // bool
		constexpr auto IsOutlineEnabled = 0x53c; // bool
		constexpr auto UseProgressTimeStamp = 0x540; // float
		constexpr auto UnlockedSeasonalRewards = 0x548; // TArray<FString>
		constexpr auto LastKillTimeStamp = 0x558; // float
		constexpr auto CurrentMultikill = 0x55c; // int32_t
		constexpr auto MutedRemotePlayerIDs = 0x560; // TArray<FUniqueNetIdRepl>
		constexpr auto bHasInfiniteAmmo = 0x582; // bool
	}

	namespace n_UMedalHugeDenial {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UNUIWeaponPrompt {
		constexpr auto PromptText = 0x278; // FText
	}

	namespace n_UMedalHQDefender {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x88; // char : 1
	}

	namespace n_USMBlueprint {
		constexpr auto AssetVersion = 0xa0; // int32_t
	}

	namespace n_UNUIAnnouncement {
		constexpr auto Text = 0x278; // FString
		constexpr auto Color = 0x288; // FLinearColor
		constexpr auto Duration = 0x298; // float
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UNUICTFGameOverview {
		constexpr auto FlagStates = 0x3a0; // TArray<int32_t>
		constexpr auto LeftFlagStateText = 0x3b0; // FText
		constexpr auto RightFlagStateText = 0x3c8; // FText
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UWBP_WartideOverviewScore_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BombImage = 0x268; // UImage*
		constexpr auto Border_MainTimer = 0x270; // UBorder*
		constexpr auto Border_RoundState = 0x278; // UBorder*
		constexpr auto DefuseOrDefend = 0x280; // UTextBlock*
		constexpr auto HB_LeftTeamRounds = 0x288; // UHorizontalBox*
		constexpr auto HB_RightTeamRounds = 0x290; // UHorizontalBox*
		constexpr auto Image_197 = 0x298; // UImage*
		constexpr auto Image_336 = 0x2a0; // UImage*
		constexpr auto LeftTeamPlayerIcons = 0x2a8; // UHorizontalBox*
		constexpr auto LeftTeamProgressBar = 0x2b0; // UProgressBar*
		constexpr auto PrimaryTimer = 0x2b8; // UTextBlock*
		constexpr auto RightTeamPlayerIcons = 0x2c0; // UHorizontalBox*
		constexpr auto RightTeamProgressBar = 0x2c8; // UProgressBar*
		constexpr auto RoundNumber = 0x2d0; // UTextBlock*
		constexpr auto SecondaryTimer = 0x2d8; // UTextBlock*
		constexpr auto TB_LeftTeamPlayersAlive = 0x2e0; // UTextBlock*
		constexpr auto TB_RightTeamPlayersAlive = 0x2e8; // UTextBlock*
		constexpr auto TieBreaker = 0x2f0; // UTextBlock*
		constexpr auto VersusNotification_SizeBox = 0x2f8; // USizeBox*
		constexpr auto WBP_VersusNotification = 0x300; // UWBP_VersusNotification_C*
		constexpr auto bBombPlanted = 0x308; // bool
		constexpr auto bUsingForShootout = 0x309; // bool
		constexpr auto AlivePlayers_Team0 = 0x30c; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x310; // int32_t
		constexpr auto PlayersTeam0 = 0x318; // TArray<APlayerState*>
		constexpr auto PlayersTeam1 = 0x328; // TArray<APlayerState*>
		constexpr auto LeftTeamScore = 0x338; // int32_t
		constexpr auto RightTeamScore = 0x33c; // int32_t
		constexpr auto PromodGameState = 0x340; // APromodGameState*
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x468; // EWidgetSpace
		constexpr auto TimingPolicy = 0x469; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x470; // UUserWidget*
		constexpr auto DrawSize = 0x478; // FIntPoint
		constexpr auto bManuallyRedraw = 0x480; // bool
		constexpr auto bRedrawRequested = 0x481; // bool
		constexpr auto RedrawTime = 0x484; // float
		constexpr auto CurrentDrawSize = 0x490; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x498; // bool
		constexpr auto Pivot = 0x49c; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4a4; // bool
		constexpr auto bWindowFocusable = 0x4a5; // bool
		constexpr auto WindowVisibility = 0x4a6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4a7; // bool
		constexpr auto OwnerPlayer = 0x4a8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d0; // float
		constexpr auto BlendMode = 0x4d4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4d5; // bool
		constexpr auto TickWhenOffscreen = 0x4d6; // bool
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto SharedLayerName = 0x524; // FName
		constexpr auto LayerZOrder = 0x52c; // int32_t
		constexpr auto GeometryMode = 0x530; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x534; // float
		constexpr auto TickMode = 0x538; // ETickMode
		constexpr auto Widget = 0x560; // UUserWidget*
	}

	namespace n_ABlitzPlayerSpawn {
		constexpr auto StageID = 0x278; // int32_t
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UNUITDMObjectiveScores {
		constexpr auto AllyTeamNumber = 0x2f8; // int32_t
		constexpr auto EnemyTeamNumber = 0x2fc; // int32_t
		constexpr auto AllyNationType = 0x300; // ENationType
		constexpr auto EnemyNationType = 0x301; // ENationType
		constexpr auto AllyTeamColor = 0x304; // FLinearColor
		constexpr auto EnemyTeamColor = 0x314; // FLinearColor
	}

	namespace n_AOneInTheChamberGamemode {
		constexpr auto InitialNumLives = 0x918; // int32_t
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto AkComponent = 0x228; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x230; // bool
		constexpr auto AutoPost = 0x231; // bool
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UServerDirectorySystem {
		constexpr auto GetIpEndpoint = 0x38; // FString
		constexpr auto Endpoint = 0x48; // FString
		constexpr auto UpdateInterval = 0x58; // int32_t
		constexpr auto Counter = 0x5c; // float
		constexpr auto Ip = 0x60; // FString
		constexpr auto GameInstance = 0x70; // UBattalionGameInstance*
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UBP_DashCameraModifier_C {
		constexpr auto FovAddition = 0x48; // float
		constexpr auto FovCurve = 0x50; // UCurveFloat*
		constexpr auto Intensity = 0x58; // float
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UFP_PromodAnimInstance_C {
		constexpr auto UberGraphFrame = 0x340; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Slot_13 = 0x348; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x390; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x3b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x510; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x600; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x708; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x728; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x830; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x938; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_12 = 0xa40; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_11 = 0xa88; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xad0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_10 = 0xc28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_9 = 0xc70; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0xcb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xd58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0xd80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xda8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xf00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Inertialization = 0xf28; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_ModifyBone = 0xf98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x10a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x1140; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x1160; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x12b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x12d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1300; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x1320; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x13c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x13e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1508; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1538; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1620; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x1708; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x17d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x1850; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_StateResult_9 = 0x1920; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x19d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x1a00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_7 = 0x1a50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1a80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1b00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1c20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x1c50; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_8 = 0x1d00; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x1d48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x1d70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_7 = 0x1e10; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x1e58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x1e80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1ea8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1f68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x2008; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x2030; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x20f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x2110; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x2268; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x2290; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x22b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x22d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x2370; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2398; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root = 0x23b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_6 = 0x23e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x2430; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x24d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x24f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x2598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x25c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TransitionPoseEvaluator_2 = 0x2688; // FAnimNode_TransitionPoseEvaluator
		constexpr auto AnimGraphNode_TransitionPoseEvaluator = 0x2780; // FAnimNode_TransitionPoseEvaluator
		constexpr auto AnimGraphNode_CustomTransitionResult = 0x2878; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x28a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x28d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x28f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2920; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2948; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2970; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2998; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x29c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2a40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2a70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2b58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2c20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2d08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x2d88; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_StateResult_4 = 0x2e58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x2e88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x2ed8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2ff8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x3028; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_2 = 0x3078; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x30a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x3128; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x31c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3248; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3278; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x3328; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x33c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x3520; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x3548; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x3570; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x3598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByInt = 0x35c0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_Slot_5 = 0x3660; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x36a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x36f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_3 = 0x3790; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x37d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_2 = 0x38a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x38e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x3910; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose = 0x3958; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x3980; // FAnimNode_BlendListByBool
		constexpr auto Is Sprinting = 0x3a20; // bool
		constexpr auto Moving = 0x3a21; // bool
		constexpr auto LandingTranslation = 0x3a24; // float
		constexpr auto LandingRotation = 0x3a28; // float
		constexpr auto RelevantLandingSpeed = 0x3a2c; // FVector2D
		constexpr auto LandingTranslationRange = 0x3a34; // FVector2D
		constexpr auto LandingRotationRange = 0x3a3c; // FVector2D
		constexpr auto Landed = 0x3a44; // bool
		constexpr auto WasSprinting = 0x3a45; // bool
		constexpr auto WaitForSprintBlendReset = 0x3a46; // bool
		constexpr auto Empty = 0x3a47; // bool
		constexpr auto IsMelee = 0x3a48; // bool
		constexpr auto NormalTrueBlend = 0x3a4c; // float
		constexpr auto NormalFalseBlend = 0x3a50; // float
		constexpr auto As Promod Character = 0x3a58; // APromodCharacter*
		constexpr auto As Weapon Anim Instance = 0x3a60; // UWeaponAnimInstance*
		constexpr auto IsPistol = 0x3a68; // bool
		constexpr auto NewVar_1 = 0x3a70; // ABattalionWeapon*
		constexpr auto Sprint Out Anim 1P = 0x3a78; // UAnimSequence*
		constexpr auto Delta Time X = 0x3a80; // float
		constexpr auto CurrentWeapon = 0x3a88; // ABattalionWeapon*
		constexpr auto Equipped = 0x3a90; // bool
		constexpr auto Targeting? = 0x3a91; // bool
		constexpr auto Is Sliding? = 0x3a92; // bool
		constexpr auto Prone Angle = 0x3a94; // float
		constexpr auto Mesh 1P = 0x3a98; // UFOVSkeletalMeshComponent*
		constexpr auto IgnoreProne = 0x3aa0; // bool
		constexpr auto IsQuickStun? = 0x3aa1; // bool
		constexpr auto Can ADSIn Prone = 0x3aa2; // bool
		constexpr auto IsStimshot = 0x3aa3; // bool
		constexpr auto ProneDirection = 0x3aa4; // float
		constexpr auto ProneLowerFloat = 0x3aa8; // float
		constexpr auto ProneHigherFloat = 0x3aac; // float
		constexpr auto As Promod Pawn = 0x3ab0; // APromodPawn_C*
		constexpr auto PlayProne = 0x3ab8; // bool
		constexpr auto PronePreCalculation = 0x3abc; // float
		constexpr auto PronePreviousDirection = 0x3ac0; // float
		constexpr auto Anim Hip Idle Storage = 0x3ac8; // UAnimSequence*
		constexpr auto BombIdleSwitch = 0x3ad0; // bool
	}

	namespace n_UWBP_Message_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto MessageWidgetAnim = 0x288; // UWidgetAnimation*
		constexpr auto TextBlock_84 = 0x290; // UTextBlock*
		constexpr auto HUDColour = 0x298; // UHUDTextDataAsset*
	}

	namespace n_UMapRevealerComponent {
		constexpr auto RevealMaterial = 0x468; // UMaterialInterface*
		constexpr auto RevealMode = 0x470; // EMapFogRevealMode
		constexpr auto RevealDropOffDistance = 0x474; // float
		constexpr auto bTempEngineBugWorkaround = 0x478; // bool
		constexpr auto RevealMaterialInstance = 0x480; // UMaterialInstanceDynamic*
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UBattalionOnline {
		constexpr auto MapPackRequestQueue = 0x28; // TArray<FString>
		constexpr auto XPMultiplier = 0x38; // int32_t
		constexpr auto OnMatchmakingStarted = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnMatchmakingEnded = 0xc0; // FMulticastInlineDelegate
		constexpr auto UseFriendlyNamesForBots = 0xd0; // bool
		constexpr auto LeaderboardRetrieved = 0xd1; // bool
		constexpr auto MapPersonalBestStats = 0x108; // TArray<FStatData>
		constexpr auto StatsRetrieved = 0x118; // bool
		constexpr auto BattInstance = 0x120; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x128; // UBattalionSettings*
		constexpr auto MapPackStatsCache = 0x1e0; // TMap<FString, FMapPackStatsEntity>
		constexpr auto PFPlayerData = 0x250; // UPFPlayerDataManager*
		constexpr auto PFPlayerCache = 0x258; // UPFPlayerIdCache*
		constexpr auto PFMatchmaking = 0x260; // UPFMatchmakingManager*
		constexpr auto PremiumDLCProductID = 0x420; // FString
		constexpr auto KickstarterDLCProductID = 0x430; // FString
		constexpr auto AltTitleID = 0x440; // FString
		constexpr auto AltPremiumDLCProductID = 0x450; // FString
		constexpr auto AltKickstarterDLCProductID = 0x460; // FString
		constexpr auto PlayerNameOverridden = 0x470; // bool
		constexpr auto OverriddenPlayerName = 0x478; // FString
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UBotNamesDataAsset {
		constexpr auto BotNames = 0x30; // TArray<FString>
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_ABattalionLoadoutSystem {
		constexpr auto DeckTemplates = 0x220; // TArray<FBattalionLoadoutDeckTemplate>
		constexpr auto CardTemplates = 0x230; // FBattalionLoadoutCardStack
		constexpr auto WeaponInfo = 0x280; // TMap<FString, FBattalionLoadoutWeaponInfo>
		constexpr auto DefaultClassImage = 0x2d0; // FString
		constexpr auto ClassImages = 0x2e0; // TMap<FString, FSlateBrush>
		constexpr auto DefaultAccessoryImage = 0x330; // FString
		constexpr auto AccessoryImages = 0x340; // TMap<FString, FSlateBrush>
		constexpr auto EmptyAccessorySlotImage = 0x390; // FSlateBrush
		constexpr auto UnavailableAccessorySlotImage = 0x418; // FSlateBrush
	}

	namespace n_AInfectionHUD {
		constexpr auto INFGameOverview = 0x638; // UNUIINFGameOverview*
		constexpr auto INFGameOverviewClass = 0x640; // UNUIINFGameOverview*
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x440; // int32_t
		constexpr auto Hand = 0x444; // EControllerHand
		constexpr auto MotionSource = 0x448; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x450; // char : 1
		constexpr auto CurrentTrackingStatus = 0x454; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x455; // bool
		constexpr auto DisplayModelSource = 0x458; // FName
		constexpr auto CustomDisplayMesh = 0x460; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x468; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4e0; // UPrimitiveComponent*
	}

	namespace n_UWBP_CallOutName_C {
		constexpr auto CalloutNameText = 0x2e0; // UTextBlock*
		constexpr auto FoundCallOutVolume = 0x2e8; // bool
	}

	namespace n_UWBP_DamageTakenIndicator_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutSpec = 0x268; // UWidgetAnimation*
		constexpr auto FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto ArrowPivotRotator = 0x278; // UCanvasPanel*
		constexpr auto ArrowToShow = 0x280; // UImage*
		constexpr auto BloodGradient = 0x288; // UImage*
		constexpr auto BloodRoot = 0x290; // UCanvasPanel*
		constexpr auto BloodSplatter = 0x298; // UImage*
		constexpr auto IB_Root = 0x2a0; // UInvalidationBox*
		constexpr auto DamageDirection = 0x2a8; // FVector
		constexpr auto DamageHealthCurve = 0x2b8; // UCurveFloat*
		constexpr auto ArrowPlaybackSpeed = 0x2c0; // float
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4d0; // FGuid
		constexpr auto ProxyComponentBases = 0x4e0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4f0; // int8_t
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_ABP_AmmoBoxFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Grenade = 0x3d0; // ABP_ThrowableAmmoBox_C*
		constexpr auto GrenadeAkComp = 0x3d8; // UAkComponent*
		constexpr auto GrenadeThrowTime = 0x3e0; // float
		constexpr auto OwningTeamNum = 0x3e4; // int32_t
		constexpr auto GrenadeThrowAnimEndTime = 0x3e8; // float
		constexpr auto System Template = 0x3f0; // UNiagaraSystem*
		constexpr auto StunRadius = 0x3f8; // float
		constexpr auto bHit = 0x3fc; // bool
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UWallrunFOVCameraModifier {
		constexpr auto BattInstance = 0x48; // UBattalionGameInstance*
		constexpr auto BattCameraManager = 0x50; // ABattalionPlayerCameraManager*
		constexpr auto BattSettings = 0x58; // UBattalionSettings*
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_AFFAPlayerController {
		constexpr auto FFAStartInstructions = 0xc08; // FNationSound
		constexpr auto EventCloseToWin = 0xc28; // FNationSound
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSliderStyle
		constexpr auto Orientation = 0x460; // EOrientation
		constexpr auto SliderBarColor = 0x464; // FLinearColor
		constexpr auto SliderHandleColor = 0x474; // FLinearColor
		constexpr auto IndentHandle = 0x484; // bool
		constexpr auto Locked = 0x485; // bool
		constexpr auto StepSize = 0x488; // float
		constexpr auto IsFocusable = 0x48c; // bool
		constexpr auto ThePropertyToControl = 0x490; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x500; // FMulticastInlineDelegate
	}

	namespace n_UWBP_JumperHUD_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto ClientFPS = 0x270; // USizeBox*
		constexpr auto DebugUI = 0x278; // UDebugUI_C*
		constexpr auto FrameTime = 0x280; // USizeBox*
		constexpr auto GameLatency = 0x288; // USizeBox*
		constexpr auto GameThreadTime = 0x290; // USizeBox*
		constexpr auto GameToRenderLatency = 0x298; // USizeBox*
		constexpr auto GPUTemp = 0x2a0; // USizeBox*
		constexpr auto IdleTime = 0x2a8; // USizeBox*
		constexpr auto InGameLeaderboard = 0x2b0; // UInGameLeaderboard_C*
		constexpr auto RenderLatency = 0x2b8; // USizeBox*
		constexpr auto RenderThreadTime = 0x2c0; // USizeBox*
		constexpr auto RHIThreadTime = 0x2c8; // USizeBox*
		constexpr auto WBP_Crosshair = 0x2d0; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x2d8; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_HUDEquipment_C = 0x2e0; // UWBP_SP_HUDEquipment_C*
		constexpr auto WBP_Interaction = 0x2e8; // UWBP_Interaction_C*
		constexpr auto WBP_JumperGameOverview = 0x2f0; // UWBP_JumperGameOverview_C*
		constexpr auto WBP_JumperTipIntro_C_16 = 0x2f8; // UWBP_JumperTipIntro_C*
		constexpr auto WBP_Killfeed = 0x300; // UWBP_Killfeed_C*
		constexpr auto WBP_ProneBlock = 0x308; // UWBP_ProneBlock_C*
		constexpr auto WBP_SniperVignette = 0x310; // UWBP_SniperVignette_C*
		constexpr auto WBP_StaminaAndHealthBars = 0x318; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x320; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_SystemTimeDisplay = 0x328; // UWBP_SystemTimeDisplay_C*
		constexpr auto WBP_Vault = 0x330; // UWBP_Vault_C*
		constexpr auto In Visibility = 0x338; // ESlateVisibility
		constexpr auto IsPlayingHealth = 0x339; // bool
		constexpr auto StaminaEvent = 0x33c; // FStaminaEvent
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_ABP_SND_BombZone_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
		constexpr auto NewBomb_Temp = 0x260; // UStaticMeshComponent*
		constexpr auto SM_Cube_Hollow_TopPivot_01a = 0x268; // UStaticMeshComponent*
		constexpr auto ArmedWorldMarker = 0x270; // UWorldMarkerComponent*
		constexpr auto UnarmedWorldMarker = 0x278; // UWorldMarkerComponent*
		constexpr auto SiteName = 0x280; // EBombModeZoneName
		constexpr auto AttackerArmedColour = 0x284; // FLinearColor
		constexpr auto DefendersArmedColour = 0x294; // FLinearColor
		constexpr auto ArmedAttackMiniMapImage = 0x2a8; // UTexture2D*
		constexpr auto ArmedDefenceMiniMapImage = 0x2b0; // UTexture2D*
		constexpr auto BombScreenMat = 0x2b8; // UMaterialInstanceDynamic*
	}

	namespace n_UNUISpectatorTeamLoadout {
		constexpr auto Team = 0x278; // int32_t
		constexpr auto Nation = 0x27c; // ENationType
		constexpr auto PlayerSlots = 0x280; // TArray<ABattalionPlayerState*>
		constexpr auto AvailableClassWidgets = 0x290; // TArray<UNUILoadoutCard*>
		constexpr auto AvailableAccessoryWidgets = 0x2a0; // TArray<UNUILoadoutCard*>
		constexpr auto TeamMemberWidgets = 0x2b0; // TArray<UNUIPlayerLoadout*>
		constexpr auto TeamIconWidget = 0x2c0; // UNUIBaseHUDElement*
		constexpr auto ClassStackWidgetClass = 0x2c8; // UNUIBaseUIElement*
		constexpr auto AccessoryStackWidgetClass = 0x2d0; // UNUIBaseUIElement*
		constexpr auto PlayerStateLeftWidgetClass = 0x2d8; // UNUIBaseUIElement*
		constexpr auto PlayerStateRightWidgetClass = 0x2e0; // UNUIBaseUIElement*
		constexpr auto TeamIconWidgetClasses = 0x2e8; // TArray<UNUIBaseHUDElement*>
	}

	namespace n_UBattalionExperience {
		constexpr auto XPLevels = 0x30; // UCurveFloat*
		constexpr auto LevelCap = 0x38; // int32_t
		constexpr auto RoundTo = 0x3c; // int32_t
	}

	namespace n_AHeadquarters_ZoneLocation {
		constexpr auto ZoneName = 0x220; // FString
		constexpr auto ZoneProperties = 0x230; // FHQMode_ZoneProperties
		constexpr auto RadiusHelper = 0x240; // USphereComponent*
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UWBP_TimedConfirm_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BTN_Main = 0x268; // UButton*
		constexpr auto CP_Main = 0x270; // UCanvasPanel*
		constexpr auto IMG_ButtonImage = 0x278; // UImage*
		constexpr auto IMG_ProgressBorder = 0x280; // UImage*
		constexpr auto InvalidationBox_3 = 0x288; // UInvalidationBox*
		constexpr auto PB_Progress = 0x290; // UProgressBar*
		constexpr auto TB_ButtonText = 0x298; // UTextBlock*
		constexpr auto Percent = 0x2a0; // float
		constexpr auto FillColor = 0x2a4; // FLinearColor
		constexpr auto My Geometry = 0x2b4; // FGeometry
		constexpr auto bShowBorder = 0x2ec; // bool
		constexpr auto CurrentPressTime = 0x2f0; // float
		constexpr auto ConfirmTime = 0x2f4; // float
		constexpr auto Delta Time = 0x2f8; // float
		constexpr auto Completed = 0x2fc; // bool
		constexpr auto OnCompleted = 0x300; // FMulticastInlineDelegate
		constexpr auto ButtonText = 0x310; // FText
		constexpr auto ButtonImage = 0x328; // UTexture2D*
		constexpr auto Pressed = 0x330; // bool
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UHeader-Tab-HUB-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Button-Text = 0x288; // UTextBlock*
		constexpr auto Tab-Button = 0x290; // UButton*
		constexpr auto ButtonClicked = 0x298; // FMulticastInlineDelegate
		constexpr auto bIsSelected = 0x2a8; // bool
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_ABP_PlaceableTrophySystem_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto Ak = 0x278; // UAkComponent*
		constexpr auto TrophySystem = 0x280; // USkeletalMeshComponent*
		constexpr auto SphereCollision = 0x288; // USphereComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto Lifetime = 0x298; // float
		constexpr auto OwnerTeamNum = 0x29c; // int32_t
		constexpr auto DestroyedUtilCount = 0x2a0; // int32_t
		constexpr auto System Template = 0x2a8; // UNiagaraSystem*
		constexpr auto Actors to Ignore = 0x2b0; // TArray<AActor*>
		constexpr auto MaxHealth = 0x2c0; // float
		constexpr auto Health = 0x2c4; // float
		constexpr auto MaxUtil = 0x2c8; // int32_t
		constexpr auto Enabled = 0x2cc; // bool
		constexpr auto ActorsInRange = 0x2d0; // TArray<AActor*>
		constexpr auto SemiDamagedFX = 0x2e0; // UParticleSystem*
		constexpr auto VeryDamagedFX = 0x2e8; // UParticleSystem*
		constexpr auto DetonationFX = 0x2f0; // UParticleSystem*
		constexpr auto FXPositionOffset = 0x2f8; // FVector
		constexpr auto DetonationAkEvent = 0x308; // UAkAudioEvent*
		constexpr auto BurningAkEvent = 0x310; // UAkAudioEvent*
		constexpr auto IdleAkEvent = 0x318; // UAkAudioEvent*
		constexpr auto DestoryNadeAkEvent = 0x320; // UAkAudioEvent*
		constexpr auto ParticleSystemComp = 0x328; // UParticleSystemComponent*
		constexpr auto SpawnAkEvent = 0x330; // UAkAudioEvent*
		constexpr auto SemiDamagedFXComp = 0x338; // UParticleSystemComponent*
		constexpr auto StopIdleAkEvent = 0x340; // UAkAudioEvent*
		constexpr auto GrenadeLocation = 0x348; // FVector
		constexpr auto FireUpDataAsset = 0x358; // UPromodAllFireUpsDataAsset*
		constexpr auto FireUpType = 0x360; // EFireUpType
		constexpr auto GrenadeDestroyedAkEvent = 0x368; // UAkAudioEvent*
		constexpr auto FireSystem = 0x370; // UNiagaraSystem*
		constexpr auto VeryDamagedFireFx = 0x378; // UNiagaraComponent*
		constexpr auto PromodGameState = 0x380; // APromodGameState*
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UTutorial-MM-Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Simulation-text-off = 0x268; // UWidgetAnimation*
		constexpr auto Simulation-activated = 0x270; // UWidgetAnimation*
		constexpr auto Pulse = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto SingleFrameSelected = 0x288; // UWidgetAnimation*
		constexpr auto Default = 0x290; // UWidgetAnimation*
		constexpr auto Backdrop-colour-image = 0x298; // UImage*
		constexpr auto Backdrop-colour-image_2 = 0x2a0; // UImage*
		constexpr auto MM_ICON_2 = 0x2a8; // UImage*
		constexpr auto PM-BUTTON = 0x2b0; // UButton*
		constexpr auto Selected-Size-Canvas = 0x2b8; // UCanvasPanel*
		constexpr auto UNSelected-Size-Canvas = 0x2c0; // UCanvasPanel*
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UMainMenuLevelSelectMapDataAsset {
		constexpr auto bIsEnabled = 0x30; // bool
		constexpr auto MapPackName = 0x38; // FString
		constexpr auto Maps = 0x48; // TArray<FLevelSelectMapEntity>
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMedalWaitForThisToBlowOver {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_UWBP_IDontKnow_PopupButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Clicked = 0x268; // UWidgetAnimation*
		constexpr auto Default = 0x270; // UWidgetAnimation*
		constexpr auto Selected = 0x278; // UWidgetAnimation*
		constexpr auto Unselected = 0x280; // UWidgetAnimation*
		constexpr auto PM-BUTTON = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UWBP_PingMarker_C {
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto Arrow = 0x380; // UImage*
		constexpr auto Background = 0x388; // UImage*
		constexpr auto ContentCanvas = 0x390; // UCanvasPanel*
		constexpr auto Icon = 0x398; // UImage*
		constexpr auto IconScaleBox = 0x3a0; // UScaleBox*
		constexpr auto Marker = 0x3a8; // UOverlay*
		constexpr auto Resizer = 0x3b0; // USizeBox*
		constexpr auto ScaleBox_1 = 0x3b8; // UScaleBox*
	}

	namespace n_UPromodMetricWidget {
		constexpr auto MetricName = 0x260; // FName
		constexpr auto Metric = 0x268; // UPromodMetric*
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_UHeader-Tab-LEADERBOARDS-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Tab-Button = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
		constexpr auto bIsSelected = 0x2a0; // bool
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UWBP_VictoryState_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto 1_InitialVictoryFlipbookSwitcher = 0x270; // UWidgetSwitcher*
		constexpr auto 2_IdleVictoryFlipbookSwitcher = 0x278; // UWidgetSwitcher*
		constexpr auto CanvasPanel_1 = 0x280; // UCanvasPanel*
		constexpr auto HorizontalBox = 0x288; // UHorizontalBox*
		constexpr auto RoundDrawnText = 0x290; // UTextBlock*
		constexpr auto VictoryFlipbookSequenceSwitcher = 0x298; // UWidgetSwitcher*
		constexpr auto WBP_Flipbook_Lost = 0x2a0; // UWBP_Flipbook_C*
		constexpr auto WBP_Flipbook_Lost_Idle = 0x2a8; // UWBP_Flipbook_C*
		constexpr auto WBP_Flipbook_Won = 0x2b0; // UWBP_Flipbook_C*
		constexpr auto WBP_Flipbook_Won_Idle = 0x2b8; // UWBP_Flipbook_C*
		constexpr auto HUDColour = 0x2c0; // UHUDTextDataAsset*
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UMedal10BombWartide {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UNUIFullScreenMap {
		constexpr auto Smokes = 0x278; // TArray<ABattalionSmokeGrenade*>
		constexpr auto SmokeWidgets = 0x288; // TArray<UMapSmokeWidget*>
		constexpr auto WorldMarkers = 0x298; // TArray<UWorldMarkerComponent*>
		constexpr auto MarkerWidgets = 0x2a8; // TArray<UMapMarkerWidget*>
		constexpr auto Players = 0x2b8; // TArray<ABattalionCharacter*>
		constexpr auto Beacon = 0x2c8; // ABeacon*
		constexpr auto ThisCanvas = 0x2d0; // UCanvasPanel*
		constexpr auto CachedMaterial = 0x2d8; // UMaterialInstanceDynamic*
		constexpr auto PlayerImages = 0x2e0; // TArray<UMapPlayerWidget*>
		constexpr auto Position = 0x2f0; // FVector2D
		constexpr auto ScaledPosition = 0x2f8; // FVector2D
		constexpr auto NormalisedPosition = 0x300; // FVector2D
		constexpr auto MapScale = 0x308; // float
		constexpr auto MiniMapZoom = 0x30c; // float
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UPopupSaveData {
		constexpr auto SeenWelcomeScreen = 0x50; // bool
		constexpr auto SeenModKitPopup = 0x51; // bool
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UPlayFabLocalizationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x98; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa8; // UPlayFabJsonObject*
	}

	namespace n_UHUDUseProgressWidget {
		constexpr auto UseProgress = 0x260; // float
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UPlayFabSubsystemSettings {
		constexpr auto PlayFabSubsystemClass = 0x28; // FSoftClassPath
	}

	namespace n_ABattalionMarket {
		constexpr auto Market = 0x220; // FMarket
		constexpr auto Arsenal = 0x230; // TMap<FString, FMarketWeaponInfo>
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UWBP_CargoAdvantageAnimWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AdvantageText = 0x268; // UTextBlock*
		constexpr auto AdvantageTextContainer = 0x270; // UVerticalBox*
		constexpr auto CanvasPanel_1 = 0x278; // UCanvasPanel*
		constexpr auto CenterProgressBarSpacer = 0x280; // USpacer*
		constexpr auto HB_ProgressOverview = 0x288; // UHorizontalBox*
		constexpr auto IMG_Contested = 0x290; // UImage*
		constexpr auto IMG_Disabled = 0x298; // UImage*
		constexpr auto IMG_ProgressBackground = 0x2a0; // UImage*
		constexpr auto IMG_Push1 = 0x2a8; // UImage*
		constexpr auto IMG_Push2 = 0x2b0; // UImage*
		constexpr auto IMG_Push3 = 0x2b8; // UImage*
		constexpr auto IMG_Pushed1 = 0x2c0; // UImage*
		constexpr auto IMG_Pushed2 = 0x2c8; // UImage*
		constexpr auto IMG_Pushed3 = 0x2d0; // UImage*
		constexpr auto SpeedStateBackgroundImage = 0x2d8; // UImage*
		constexpr auto TimeDifferenceText = 0x2e0; // UTextBlock*
		constexpr auto TimeDifferenceTime = 0x2e8; // UTextBlock*
		constexpr auto WBP_TugOfWarProgress = 0x2f0; // UWBP_TugOfWarProgress_C*
		constexpr auto WS_CargoSpeedState = 0x2f8; // UWidgetSwitcher*
		constexpr auto CargoGameState = 0x300; // ACargoGameState*
		constexpr auto HUDColour = 0x308; // UHUDTextDataAsset*
		constexpr auto bTickAnimation = 0x310; // bool
		constexpr auto CurrentAnimTime = 0x314; // float
		constexpr auto AnimCurve = 0x318; // UCurveFloat*
		constexpr auto Time Difference = 0x320; // float
		constexpr auto Advantage = 0x324; // float
		constexpr auto Advantage Team = 0x328; // int32_t
		constexpr auto AnimTime Difference = 0x32c; // float
		constexpr auto AnimAdvantage = 0x330; // float
		constexpr auto bShowAdvantageText = 0x334; // bool
		constexpr auto SecondChevron = 0x338; // float
		constexpr auto ThirdChevron = 0x33c; // float
		constexpr auto bCenter = 0x340; // bool
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_ABattalionTeamStart {
		constexpr auto SpawnTeam = 0x250; // int32_t
		constexpr auto bNotForPlayers = 0x254; // char : 1
		constexpr auto bNotForBots = 0x254; // char : 1
		constexpr auto bTeamDeathmatch = 0x254; // char : 1
	}

	namespace n_ULeaderboardMapButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContentHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ContentTextBlock = 0x270; // UTextBlock*
		constexpr auto NewContentImage = 0x278; // UImage*
		constexpr auto RootButton = 0x280; // UButton*
		constexpr auto Text = 0x288; // FText
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto DefaultTextColor = 0x2b0; // FLinearColor
		constexpr auto HoverTextColor = 0x2c0; // FLinearColor
		constexpr auto DisabledTextColor = 0x2d0; // FLinearColor
		constexpr auto DefaultBackgroundColor = 0x2e0; // FLinearColor
		constexpr auto HoverBackgroundColor = 0x2f0; // FLinearColor
		constexpr auto DisabledBackgroundColor = 0x300; // FLinearColor
		constexpr auto StartEnabled = 0x310; // bool
		constexpr auto RoundedEdges = 0x311; // bool
		constexpr auto FontSize = 0x314; // int32_t
		constexpr auto NewNotificationRightAligned = 0x318; // bool
		constexpr auto Justification = 0x319; // ETextJustify
		constexpr auto ContentPadding = 0x31c; // FMargin
		constexpr auto MainMenuLeaderboardRef = 0x330; // UMainMenuLeaderboard_C*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_AWorldVFXManager {
		constexpr auto SmokeVolumes = 0x220; // TArray<ASmokeGrenadeVolume*>
	}

	namespace n_UMedalHQCaptured {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x58; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x60; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto LinkedAkEvents = 0xb0; // TSet<TSoftObjectPtr<UAkAudioEvent>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0x100; // UAkAssetPlatformData*
	}

	namespace n_UNUIBattleHub {
		constexpr auto TabFirstDelay = 0x290; // float
		constexpr auto TabAdditionalDelay = 0x294; // float
		constexpr auto Reward_DpadFirstDelay = 0x298; // float
		constexpr auto Reward_DpadAdditionalDelay = 0x29c; // float
		constexpr auto Armory_DpadFirstDelay = 0x2a0; // float
		constexpr auto Armory_DpadAdditionalDelay = 0x2a4; // float
		constexpr auto Medals_DpadFirstDelay = 0x2a8; // float
		constexpr auto Medals_DpadAdditionalDelay = 0x2ac; // float
		constexpr auto Stats_DpadFirstDelay = 0x2b0; // float
		constexpr auto Stats_DpadAdditionalDelay = 0x2b4; // float
		constexpr auto Leaderboards_DpadFirstDelay = 0x2b8; // float
		constexpr auto Leaderboards_DpadAdditionalDelay = 0x2bc; // float
		constexpr auto LeftStickVerticalDeadZone = 0x2c0; // float
		constexpr auto LeftStickHorizontalDeadZone = 0x2c4; // float
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_APromodPlayerCameraManager {
		constexpr auto ProneYawCap = 0x2854; // float
		constexpr auto LadderYawCap = 0x2858; // float
		constexpr auto ProneViewPitchMax = 0x285c; // float
		constexpr auto PlayerCharacter = 0x2860; // APromodCharacter*
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ACargoCheckpoint {
		constexpr auto CheckpointDecal = 0x220; // UDecalComponent*
		constexpr auto ObjectiveDecal = 0x228; // UDecalComponent*
		constexpr auto ObjectiveDecalCorner1 = 0x230; // UDecalComponent*
		constexpr auto ObjectiveDecalCorner2 = 0x238; // UDecalComponent*
		constexpr auto ObjectiveDecalCorner3 = 0x240; // UDecalComponent*
		constexpr auto ObjectiveDecalCorner4 = 0x248; // UDecalComponent*
		constexpr auto ContestantBox = 0x250; // UBoxComponent*
		constexpr auto TimeToUnlock = 0x258; // float
		constexpr auto CheckpointNumber = 0x25c; // int32_t
		constexpr auto CheckpointData = 0x260; // FCargoCheckpointData
		constexpr auto PrevCheckpointState = 0x278; // ECargoCheckpointState
		constexpr auto CheckpointState = 0x279; // ECargoCheckpointState
		constexpr auto AllPresentPlayerStates = 0x280; // TArray<ACargoPlayerState*>
		constexpr auto NumAttackersPresent = 0x290; // int32_t
		constexpr auto NumDefendersPresent = 0x294; // int32_t
		constexpr auto UnlockProgress = 0x298; // float
		constexpr auto UnlockProgressPercent = 0x29c; // float
		constexpr auto CurrentUnlockProgressPip = 0x2a0; // int32_t
		constexpr auto PipPercentageTickSize = 0x2a4; // float
		constexpr auto MinimumUnlockProgress = 0x2a8; // float
		constexpr auto MinimumUnlockProgressPercent = 0x2ac; // float
		constexpr auto CurrentUnoccupiedDecayTimer = 0x2b0; // float
		constexpr auto DecayTimeToDecrease = 0x2b4; // float
		constexpr auto CargoActor = 0x2c0; // AMonorailCarriage*
		constexpr auto WorldMarkerComponentCheckpoint = 0x2c8; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentDefendCapture = 0x2d0; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentContested = 0x2d8; // UWorldMarkerComponent*
		constexpr auto bIsAtSplineStart = 0x2e8; // bool
		constexpr auto bIsEnabled = 0x2e9; // bool
		constexpr auto CargoGameState = 0x2f0; // ACargoGameState*
		constexpr auto WorldMarkerAllowedVisibilityStates = 0x2f8; // TArray<FName>
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UGameLiftSystem {
		constexpr auto bGameLiftActive = 0x30; // bool
		constexpr auto bGameActive = 0x31; // bool
		constexpr auto AwsRegionId = 0x38; // FString
		constexpr auto AwsRegionName = 0x48; // FString
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15bc; // float
	}

	namespace n_UMainMenuLeaderboard_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Intro = 0x3d0; // UWidgetAnimation*
		constexpr auto CheckBox_1 = 0x3d8; // UCheckBox*
		constexpr auto GameModeNameText = 0x3e0; // UTextBlock*
		constexpr auto Image = 0x3e8; // UImage*
		constexpr auto Image_2 = 0x3f0; // UImage*
		constexpr auto Image_3 = 0x3f8; // UImage*
		constexpr auto Image_216 = 0x400; // UImage*
		constexpr auto Image_249 = 0x408; // UImage*
		constexpr auto LeaderboardItem_168 = 0x410; // ULeaderboardItem_C*
		constexpr auto MapNameBox = 0x418; // UScrollBox*
		constexpr auto MapPackNameText = 0x420; // UTextBlock*
		constexpr auto NameBox = 0x428; // UTextBlock*
		constexpr auto NextGameModePageButton = 0x430; // UButton*
		constexpr auto NextPageButton = 0x438; // UButton*
		constexpr auto PlayerBox = 0x440; // UVerticalBox*
		constexpr auto PrevGameModePageButton = 0x448; // UButton*
		constexpr auto PrevPageButton = 0x450; // UButton*
		constexpr auto RankBox = 0x458; // UTextBlock*
		constexpr auto RefreshButton = 0x460; // UTextButton_C*
		constexpr auto SteamProfilePrivacy = 0x468; // UTextBlock*
		constexpr auto timeBox = 0x470; // UTextBlock*
		constexpr auto TitleSet = 0x478; // bool
		constexpr auto PlayerRankModifier = 0x47c; // int32_t
		constexpr auto MapPackIndex = 0x480; // int32_t
		constexpr auto Target = 0x488; // UObject*
		constexpr auto MapPackManagers = 0x490; // TArray<UMapPackManager*>
		constexpr auto SelectedMapPackManager = 0x4a0; // UMapPackManager*
		constexpr auto CurrentRequestedGameMode = 0x4a8; // EMapPackGamemode
		constexpr auto SelectedMapButton = 0x4b0; // ULeaderboardMapButton_C*
		constexpr auto GameModeIndex = 0x4b8; // int32_t
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_AIncendiaryGrenadePickup {
		constexpr auto IncendiaryGrenadeType = 0x270; // EIncendiaryGrenadeType
	}

	namespace n_APushPlayerVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto PushType = 0x238; // EPushType
		constexpr auto PushStrength = 0x258; // float
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UBulkheadAudioEventWrapper {
		constexpr auto bIsLooped = 0x28; // bool
		constexpr auto bLoopRunning = 0x29; // bool
		constexpr auto LoopSafetyCutoffTime = 0x2c; // float
		constexpr auto AudioStartEvent = 0x30; // UAkAudioEvent*
		constexpr auto AudioStopEvent = 0x38; // UAkAudioEvent*
		constexpr auto AudioComponent = 0x40; // UAkComponent*
		constexpr auto TimerHandle_LoopSafetyTimer = 0x48; // FTimerHandle
		constexpr auto OwningActor = 0x50; // AActor*
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_ACTFMode_FlagZoneLocation {
		constexpr auto TeamAllegiance = 0x220; // char
	}

	namespace n_AWartidePlayerState {
		constexpr auto bWeaponCarriedOver = 0x5d8; // bool
		constexpr auto PrimaryWeapon = 0x5d9; // EWeaponType
		constexpr auto SecondaryWeapon = 0x5da; // EWeaponType
		constexpr auto NumPrimaryGrenades = 0x5dc; // int32_t
		constexpr auto NumSecondaryGrenades = 0x5e0; // int32_t
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_ABattalionHUD {
		constexpr auto MiniMap = 0x310; // UNUIMiniMap*
		constexpr auto KillFeed = 0x318; // UNUIKillFeed*
		constexpr auto VoiceChatFeed = 0x320; // UNUIVoiceChatFeed*
		constexpr auto KillMessage = 0x328; // UNUIKillMessage*
		constexpr auto GameTimer = 0x330; // UNUIGameTimer*
		constexpr auto AmmoCount = 0x338; // UNUIAmmoCount*
		constexpr auto Crosshair = 0x340; // UNUICrosshair*
		constexpr auto ChatBox = 0x348; // UNUIChatBox*
		constexpr auto ScreenEffects = 0x350; // UNUIScreenEffects*
		constexpr auto SniperScreenEffects = 0x358; // UNUISniperScreenEffects*
		constexpr auto NetworkStatus = 0x360; // UNUINetworkStatus*
		constexpr auto GrenadeIcon = 0x368; // UNUIGrenadeIcon*
		constexpr auto Interact = 0x370; // UNUIInteract*
		constexpr auto MatchStatus = 0x378; // UNUIMatchStatus*
		constexpr auto Pickup = 0x380; // UNUIPickup*
		constexpr auto ScoreAward = 0x388; // UNUIScoreAward*
		constexpr auto Vault = 0x390; // UNUIVault*
		constexpr auto RoundStartCountdown = 0x398; // UNUIRoundStartCountdown*
		constexpr auto NationSelect = 0x3a0; // UNUINationSelect*
		constexpr auto CardsSelection = 0x3a8; // UNUICardsSelection*
		constexpr auto Scoreboard = 0x3b0; // UNUIScoreboardScreen*
		constexpr auto HUDSpectator = 0x3b8; // UHUDSpectator*
		constexpr auto TeamScoreboard = 0x3c0; // UNUIScoreboardScreen*
		constexpr auto TeamSelect = 0x3c8; // UNUITeamSelection*
		constexpr auto RoundEndScreen = 0x3d0; // UNUIRoundEndScreen*
		constexpr auto SpectatorLoadoutScreen = 0x3d8; // UNUISpectatorLoadoutScreen*
		constexpr auto SpawnViewer = 0x3e0; // UNUISpawnViewer*
		constexpr auto CurrentlySpectating = 0x3e8; // UNUICurrentlySpectating*
		constexpr auto RespawnTimer = 0x3f0; // UNUIRespawnTimer*
		constexpr auto ReadyPrompt = 0x3f8; // UNUIReadyPrompt*
		constexpr auto LoadoutPrompt = 0x400; // UNUILoadoutPrompt*
		constexpr auto HalfTimeScreen = 0x408; // UNUIHalfTimeScreen*
		constexpr auto LevelUp = 0x410; // UNUILevelUp*
		constexpr auto OvertimeScreen = 0x418; // UNUIOvertimeScreen*
		constexpr auto EquippedWeapons = 0x420; // UNUIEquippedWeapons*
		constexpr auto MedalAward = 0x428; // UNUIMedalAward*
		constexpr auto GenericActionPrompt = 0x430; // UNUIGenericActionPrompt*
		constexpr auto ProneBlockPrompt = 0x438; // UNUIProneBlockPrompt*
		constexpr auto CallOutName = 0x440; // UNUICallOutName*
		constexpr auto GameOverview = 0x448; // UNUIConsoleGeneralOverview*
		constexpr auto IdleKickWarning = 0x450; // UNUIIdleKickWarning*
		constexpr auto MatchResultScreen = 0x458; // UNUITeamMatchResultScreen*
		constexpr auto MapClass = 0x460; // UNUIMiniMap*
		constexpr auto KillFeedClass = 0x468; // UNUIKillFeed*
		constexpr auto KillMessageClass = 0x470; // UNUIKillMessage*
		constexpr auto VoiceChatFeedClass = 0x478; // UNUIVoiceChatFeed*
		constexpr auto GameTimerClass = 0x480; // UNUIGameTimer*
		constexpr auto AmmoCountClass = 0x488; // UNUIAmmoCount*
		constexpr auto CrosshairClass = 0x490; // UNUICrosshair*
		constexpr auto ChatBoxClass = 0x498; // UNUIChatBox*
		constexpr auto ScreenEffectsClass = 0x4a0; // UNUIScreenEffects*
		constexpr auto SniperScreenEffectsClass = 0x4a8; // UNUISniperScreenEffects*
		constexpr auto NetworkStatusClass = 0x4b0; // UNUINetworkStatus*
		constexpr auto GrenadeIconClass = 0x4b8; // UNUIGrenadeIcon*
		constexpr auto InteractClass = 0x4c0; // UNUIInteract*
		constexpr auto MatchStatusClass = 0x4c8; // UNUIMatchStatus*
		constexpr auto PickupClass = 0x4d0; // UNUIPickup*
		constexpr auto ScoreAwardClass = 0x4d8; // UNUIScoreAward*
		constexpr auto VaultClass = 0x4e0; // UNUIVault*
		constexpr auto RoundStartCountdownClass = 0x4e8; // UNUIRoundStartCountdown*
		constexpr auto CurrentlySpectatingClass = 0x4f0; // UNUICurrentlySpectating*
		constexpr auto RespawnTimerClass = 0x4f8; // UNUIRespawnTimer*
		constexpr auto ReadyPromptClass = 0x500; // UNUIReadyPrompt*
		constexpr auto LoadoutPromptClass = 0x508; // UNUILoadoutPrompt*
		constexpr auto HalfTimeScreenClass = 0x510; // UNUIHalfTimeScreen*
		constexpr auto LevelUpClass = 0x518; // UNUILevelUp*
		constexpr auto OvertimeScreenClass = 0x520; // UNUIOvertimeScreen*
		constexpr auto EquippedWeaponsClass = 0x528; // UNUIEquippedWeapons*
		constexpr auto MedalAwardClass = 0x530; // UNUIMedalAward*
		constexpr auto GenericActionPromptClass = 0x538; // UNUIGenericActionPrompt*
		constexpr auto CallOutNameClass = 0x540; // UNUICallOutName*
		constexpr auto IdleKickWarningClass = 0x548; // UNUIIdleKickWarning*
		constexpr auto NationSelectClass = 0x550; // UNUINationSelect*
		constexpr auto CardsSelectionClass = 0x558; // UNUICardsSelection*
		constexpr auto ScoreboardClass = 0x560; // UNUIScoreboardScreen*
		constexpr auto HUDSpectatorClass = 0x568; // UHUDSpectator*
		constexpr auto TeamScoreboardClass = 0x570; // UNUIScoreboardScreen*
		constexpr auto TeamSelectClass = 0x578; // UNUITeamSelection*
		constexpr auto SpectatorLoadoutScreenClass = 0x580; // UNUISpectatorLoadoutScreen*
		constexpr auto SpawnViewerClass = 0x588; // UNUISpawnViewer*
		constexpr auto ProneBlockPromptClass = 0x590; // UNUIProneBlockPrompt*
		constexpr auto GameOverviewClass = 0x598; // UNUIConsoleGeneralOverview*
		constexpr auto MatchResultScreenClass = 0x5a0; // UNUITeamMatchResultScreen*
		constexpr auto HUDElements = 0x5a8; // TArray<UNUIBaseHUDElement*>
		constexpr auto UIElements = 0x5b8; // TArray<UNUIBaseHUDElement*>
		constexpr auto PlayerNames = 0x5e0; // TArray<UHUDPlayerName*>
		constexpr auto bDebugBackfill = 0x5f0; // bool
	}

	namespace n_UWBP_CheckpointComparison_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto personal-Best = 0x268; // UWidgetAnimation*
		constexpr auto ProStampAnim = 0x270; // UWidgetAnimation*
		constexpr auto BigTimeDisplay = 0x278; // UBigTimeDisplay_C*
		constexpr auto BLUR-STREAK = 0x280; // UImage*
		constexpr auto CheckpointList = 0x288; // UScrollBox*
		constexpr auto CompletedText = 0x290; // UTextBlock*
		constexpr auto CurrentTimeDisplay = 0x298; // UTimeDisplay_C*
		constexpr auto Header-Bar-Temp = 0x2a0; // UHeader-Bar-Temp_C*
		constexpr auto MapNameBox = 0x2a8; // UTextBlock*
		constexpr auto MapNameText = 0x2b0; // UTextBlock*
		constexpr auto ProText = 0x2b8; // UTextBlock*
		constexpr auto Star1 = 0x2c0; // UImage*
		constexpr auto Star1_2 = 0x2c8; // UImage*
		constexpr auto Star2 = 0x2d0; // UImage*
		constexpr auto Star2_2 = 0x2d8; // UImage*
		constexpr auto Star3 = 0x2e0; // UImage*
		constexpr auto Star3_2 = 0x2e8; // UImage*
		constexpr auto Stars = 0x2f0; // UOverlay*
		constexpr auto TITLEBOX = 0x2f8; // UTextBlock*
		constexpr auto Vignette-Temp = 0x300; // UVignette-Temp_C*
		constexpr auto WBP_SplitsListItem = 0x308; // UWBP_SplitsListItem_C*
		constexpr auto CurrentTimeFloat = 0x310; // float
		constexpr auto MapsStatsList = 0x318; // FMapStatList
		constexpr auto Rating = 0x340; // int32_t
		constexpr auto Current Column = 0x344; // int32_t
		constexpr auto CurrentRow = 0x348; // int32_t
		constexpr auto CurrentColumn = 0x34c; // int32_t
		constexpr auto Map Pack Manager = 0x350; // UMapPackManager*
		constexpr auto MapName = 0x358; // FString
		constexpr auto JumperGameMode = 0x368; // AJumperGameMode*
		constexpr auto KillRunGameMode = 0x370; // AKillRunGameMode*
		constexpr auto GameModeType = 0x378; // EMapPackGamemode
		constexpr auto CurrentMapPackManager = 0x380; // UMapPackManager*
		constexpr auto SplitsRollingCounter = 0x388; // float
	}

	namespace n_UPlayFabMultiplayerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x418; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x420; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x428; // UPlayFabJsonObject*
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UBindingImageText {
		constexpr auto MaxStates = 0x260; // int32_t
		constexpr auto CurrentState = 0x264; // int32_t
		constexpr auto States = 0x268; // TArray<FTextImage>
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UKillRunGameOverviewWidget {
		constexpr auto KillRunTimerText = 0x260; // FText
		constexpr auto KillRunTimerTextMilliseconds = 0x278; // FText
		constexpr auto KillRunTimerTextSeconds = 0x290; // FText
		constexpr auto KillRunTimerTextMinutes = 0x2a8; // FText
		constexpr auto KillRunCheckpointText = 0x2c0; // FText
		constexpr auto KillRunTargetsRemainingText = 0x2d8; // FText
	}

	namespace n_UNUISpectatorStatBars {
		constexpr auto IconGroupLeft = 0x278; // UNUISpectatorIconGroup*
		constexpr auto IconGroupRight = 0x280; // UNUISpectatorIconGroup*
		constexpr auto bTimoutVisible = 0x288; // bool
		constexpr auto TimeoutTimerString = 0x290; // FString
	}

	namespace n_AJumperCourse {
		constexpr auto Spline = 0x220; // USplineComponent*
		constexpr auto Gate = 0x228; // UStaticMesh*
		constexpr auto VisibleCheckpoints = 0x230; // int32_t
		constexpr auto GateIndex = 0x234; // int32_t
		constexpr auto bShowRotationDebug = 0x23c; // bool
		constexpr auto CheckpointCompleted = 0x250; // UAkAudioEvent*
		constexpr auto TickTockMusicPlay = 0x258; // UAkAudioEvent*
		constexpr auto TickTockMusicStop = 0x260; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent = 0x268; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent1 = 0x270; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent2 = 0x278; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent3 = 0x280; // UAkAudioEvent*
		constexpr auto RaceCompletedEventPro = 0x288; // UAkAudioEvent*
		constexpr auto AmountOfStopsFromEndTickTock = 0x290; // int32_t
		constexpr auto MapNamesToOverrideGizmo = 0x2a0; // TArray<FString>
		constexpr auto CheckpointRotations = 0x2b0; // TArray<float>
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UWBP_HeaderTab_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContentHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ContentTextBlock = 0x270; // UTextBlock*
		constexpr auto NewContentImage = 0x278; // UImage*
		constexpr auto RootButton = 0x280; // UButton*
		constexpr auto Text = 0x288; // FText
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto DefaultTextColor = 0x2b0; // FLinearColor
		constexpr auto HoverTextColor = 0x2c0; // FLinearColor
		constexpr auto DisabledTextColor = 0x2d0; // FLinearColor
		constexpr auto SelectedTextColor = 0x2e0; // FLinearColor
		constexpr auto DefaultBackgroundColor = 0x2f0; // FLinearColor
		constexpr auto HoverBackgroundColor = 0x300; // FLinearColor
		constexpr auto DisabledBackgroundColor = 0x310; // FLinearColor
		constexpr auto SelectedBackgroundColor = 0x320; // FLinearColor
		constexpr auto StartEnabled = 0x330; // bool
		constexpr auto RoundedEdges = 0x331; // bool
		constexpr auto FontSize = 0x334; // int32_t
		constexpr auto NewNotificationRightAligned = 0x338; // bool
		constexpr auto Justification = 0x339; // ETextJustify
		constexpr auto ContentPadding = 0x33c; // FMargin
		constexpr auto CurrentlySelected = 0x34c; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UMenu-Background_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MediaTexture = 0x268; // UImage*
		constexpr auto MediaPlayer = 0x270; // UMediaPlayer*
	}

	namespace n_UABP_ThrowingAxe_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x340; // FAnimNode_SequencePlayer
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_ACTFMode_Flag {
		constexpr auto HomeZone = 0x220; // ACTFMode_FlagZone*
		constexpr auto AtHome = 0x228; // bool
		constexpr auto AttachedToPlayer = 0x229; // bool
		constexpr auto TeamAllegiance = 0x22a; // char
		constexpr auto NationAllegiance = 0x22b; // ENationType
		constexpr auto WorldMarker = 0x230; // UWorldMarkerComponent*
		constexpr auto AttachedCharacter = 0x238; // ABattalionCharacter*
		constexpr auto FlagResetTimer = 0x240; // float
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UDeathCamCameraModifier {
		constexpr auto DeathCameraComponent = 0x48; // UPromodDeathCamera*
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_UWBP_BlitzSpectating_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PlayerNameText = 0x268; // UTextBlock*
		constexpr auto RespawnTimer = 0x270; // UTextBlock*
		constexpr auto HUDColour = 0x278; // UHUDTextDataAsset*
		constexpr auto Respawn Time = 0x280; // float
		constexpr auto Spectating = 0x284; // bool
	}

	namespace n_UJumperLevelSelect {
		constexpr auto MapPackManager = 0x260; // UMapPackManager*
	}

	namespace n_UWBP_InGameLoadoutSelection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BatckFromEdit = 0x268; // UWidgetAnimation*
		constexpr auto SwapToEdit = 0x270; // UWidgetAnimation*
		constexpr auto BTN_Edit = 0x278; // UTextButton_C*
		constexpr auto BTN_Equip = 0x280; // UTextButton_C*
		constexpr auto GuardianViewScaleBox = 0x288; // UScaleBox*
		constexpr auto Image_172 = 0x290; // UImage*
		constexpr auto Image_251 = 0x298; // UImage*
		constexpr auto LoadoutListBox = 0x2a0; // UVerticalBox*
		constexpr auto LoadoutListSizeBox = 0x2a8; // USizeBox*
		constexpr auto WBP_PlayerLoadoutModificationScreen = 0x2b0; // UWBP_PlayerLoadoutModificationScreen_C*
		constexpr auto PLAYERLOADOUTS = 0x2b8; // TArray<FLoadoutData>
		constexpr auto ChosenLoadout = 0x2c8; // FText
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMedalDisruptive {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_ABombBP_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto BombScreenMat = 0x308; // UMaterialInstanceDynamic*
		constexpr auto LocalController = 0x310; // APromodPlayerController*
		constexpr auto Character = 0x318; // APromodCharacter*
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x1f8; // char : 1
		constexpr auto AuxBus = 0x200; // UAkAuxBus*
		constexpr auto AuxBusName = 0x208; // FString
		constexpr auto SendLevel = 0x218; // float
		constexpr auto FadeRate = 0x21c; // float
		constexpr auto Priority = 0x220; // float
		constexpr auto NextLowerPriorityComponent = 0x228; // UAkLateReverbComponent*
	}

	namespace n_ABotPOI {
		constexpr auto AttackersPOI = 0x220; // bool
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x440; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x458; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x440; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x450; // float
		constexpr auto PixelHitDistanceThreshold = 0x454; // float
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UWBP_CargoResultScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto 1_OurTeamText = 0x268; // UTextBlock*
		constexpr auto 1_TheirTeamText = 0x270; // UTextBlock*
		constexpr auto 2_OurProgressText = 0x278; // UTextBlock*
		constexpr auto 2_TheirProgressText = 0x280; // UTextBlock*
		constexpr auto 3_OurTimeText = 0x288; // UTextBlock*
		constexpr auto 3_TheirTimeText = 0x290; // UTextBlock*
		constexpr auto 4_OurTimeTimeText = 0x298; // UTextBlock*
		constexpr auto 4_TheirTimeTimeText = 0x2a0; // UTextBlock*
		constexpr auto 5_OurOvertimeText = 0x2a8; // UTextBlock*
		constexpr auto 5_TheirOvertimeText = 0x2b0; // UTextBlock*
		constexpr auto 6_OurOvertimeTime = 0x2b8; // UTextBlock*
		constexpr auto 6_TheirOvertimeTime = 0x2c0; // UTextBlock*
		constexpr auto ComparisonContainer = 0x2c8; // UHorizontalBox*
		constexpr auto ComparisonSpacer = 0x2d0; // USpacer*
		constexpr auto PostMatchAnimationSwitcher = 0x2d8; // UWidgetSwitcher*
		constexpr auto PostMatchResult = 0x2e0; // UVerticalBox*
		constexpr auto PostMatchResultPanel = 0x2e8; // UCanvasPanel*
		constexpr auto PostTugOfWarResult = 0x2f0; // UCanvasPanel*
		constexpr auto SingleResultPanel = 0x2f8; // UCanvasPanel*
		constexpr auto Switcher = 0x300; // UWidgetSwitcher*
		constexpr auto VictoryText = 0x308; // UTextBlock*
		constexpr auto VictoryText_2 = 0x310; // UTextBlock*
		constexpr auto WBP_CargoAdvantageAnimWidget = 0x318; // UWBP_CargoAdvantageAnimWidget_C*
		constexpr auto WBP_CargoAdvantageAnimWidget_2 = 0x320; // UWBP_CargoAdvantageAnimWidget_C*
		constexpr auto WBP_CargoSingleTeamProgress = 0x328; // UWBP_CargoSingleTeamProgress_C*
		constexpr auto WBP_CargoVictoryProgress = 0x330; // UWBP_CargoVictoryProgress_C*
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UPlayFabCloudScriptAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x158; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x160; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x168; // UPlayFabJsonObject*
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UNUIINFGameOverview {
		constexpr auto CurrentPlayerObjectiveText = 0x3a0; // FText
		constexpr auto LeftProgressBarColor = 0x3b8; // FLinearColor
		constexpr auto RightProgressBarColor = 0x3c8; // FLinearColor
		constexpr auto LeftProgressbarText = 0x3d8; // FText
		constexpr auto RightProgressbarText = 0x3f0; // FText
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UWBP_PlayerAliveIcon_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto Background_2 = 0x270; // UImage*
		constexpr auto Border = 0x278; // UImage*
		constexpr auto Border_2 = 0x280; // UImage*
		constexpr auto DeadIcon = 0x288; // UImage*
		constexpr auto DeadIcon_2 = 0x290; // UImage*
		constexpr auto Highlight = 0x298; // UImage*
		constexpr auto Highlight_2 = 0x2a0; // UImage*
		constexpr auto IMG_FireupAvailableBackground = 0x2a8; // UImage*
		constexpr auto IMG_FireupIcon = 0x2b0; // UImage*
		constexpr auto PlayerIcon = 0x2b8; // UImage*
		constexpr auto WholeWidget_InvalidationBox = 0x2c0; // UInvalidationBox*
		constexpr auto BoundPlayer = 0x2c8; // APromodPlayerState*
		constexpr auto HUDColour = 0x2d0; // UHUDTextDataAsset*
		constexpr auto FireupIconColour = 0x2d8; // FLinearColor
		constexpr auto HasFireupBackgroundBorderColour = 0x2e8; // FLinearColor
		constexpr auto NoFireupBackgroundColour = 0x2f8; // FLinearColor
		constexpr auto NoFireupBorderColour = 0x308; // FLinearColor
		constexpr auto HasFireupBackgroundBorderColourEnemy = 0x318; // FLinearColor
		constexpr auto FriendlyNoAvatarPicture = 0x328; // UTexture2D*
		constexpr auto EnemyNoAvatarPicture = 0x330; // UTexture2D*
		constexpr auto Has Fireup = 0x338; // bool
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UWBP_ServerBrowserFilterOption_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BTN_Main = 0x268; // UButton*
		constexpr auto CheckboxBorder = 0x270; // UBorder*
		constexpr auto IMG_Checked = 0x278; // UImage*
		constexpr auto SB_Checkbox = 0x280; // USizeBox*
		constexpr auto TB_OptionText = 0x288; // UTextBlock*
		constexpr auto IsChecked = 0x290; // bool
		constexpr auto OptionText = 0x298; // FText
		constexpr auto CheckboxSize = 0x2b0; // FVector2D
		constexpr auto FontSize = 0x2b8; // int32_t
		constexpr auto CheckedStateChanged = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OptionalFriendlyName = 0x2d0; // FText
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UDebugReticle {
		constexpr auto FiberDistance = 0x260; // float
		constexpr auto FiberLength = 0x264; // float
		constexpr auto Color = 0x268; // FLinearColor
		constexpr auto Label = 0x278; // FString
		constexpr auto DotVisibility = 0x288; // ESlateVisibility
		constexpr auto FiberVisibility = 0x289; // ESlateVisibility
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UWBP_BlitzScore_C {
		constexpr auto Round_1_WidgetSwitch = 0x260; // UWidgetSwitcher*
		constexpr auto Round_2_WidgetSwitch = 0x268; // UWidgetSwitcher*
		constexpr auto TeamIndex = 0x270; // int32_t
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x440; // TArray<FMaterialSpriteElement>
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_AJumperHUD {
		constexpr auto JumperLeaderboard = 0x5f8; // UNUIJumperLeaderboard*
		constexpr auto JumperLeaderboardClass = 0x600; // UNUIJumperLeaderboard*
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UBotThirdPersonAnimInstance {
		constexpr auto BotCharacter = 0x568; // APromodBot*
	}

	namespace n_AWeapGun_Impacts_C {
		constexpr auto UberGraphFrame = 0x470; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x478; // USceneComponent*
		constexpr auto HitResult = 0x480; // FHitResult
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x440; // FSplineCurves
		constexpr auto SplineInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4c8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4e0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4f8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x510; // bool
		constexpr auto ReparamStepsPerSegment = 0x514; // int32_t
		constexpr auto Duration = 0x518; // float
		constexpr auto bStationaryEndpoints = 0x51c; // bool
		constexpr auto bSplineHasBeenEdited = 0x51d; // bool
		constexpr auto bModifiedByConstructionScript = 0x51e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x51f; // bool
		constexpr auto bDrawDebug = 0x520; // bool
		constexpr auto bClosedLoop = 0x521; // bool
		constexpr auto bLoopPositionOverride = 0x522; // bool
		constexpr auto LoopPosition = 0x524; // float
		constexpr auto DefaultUpVector = 0x528; // FVector
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UMapEditorObjectDetailsWidget {
		constexpr auto LinkedObject = 0x260; // AMapEditorObject*
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UWeaponSlot {
		constexpr auto OwningInventory = 0x28; // UPromodInventoryComponent*
		constexpr auto WeaponPtr = 0x30; // ABattalionWeapon*
		constexpr auto SlotType = 0x38; // ESlotType
	}

	namespace n_UMainMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto PlayEnter = 0x298; // UWidgetAnimation*
		constexpr auto SettingsIntro = 0x2a0; // UWidgetAnimation*
		constexpr auto Intro = 0x2a8; // UWidgetAnimation*
		constexpr auto Back-Legend-button-Promod = 0x2b0; // UBack-Legend-button-Promod_C*
		constexpr auto Btn_CREATE_SCENARIO = 0x2b8; // UTextButton_C*
		constexpr auto Btn_EXIT = 0x2c0; // UTextButton_C*
		constexpr auto Btn_SETTINGS = 0x2c8; // UTextButton_C*
		constexpr auto Btn_STORE = 0x2d0; // UTextButton_C*
		constexpr auto ButtonMenuWidgetSwitcher = 0x2d8; // UWidgetSwitcher*
		constexpr auto EXIT-new = 0x2e0; // UDebug_Button-LIGHT-LEFT-JUSTIFIED_C*
		constexpr auto Footer = 0x2e8; // UCanvasPanel*
		constexpr auto Header = 0x2f0; // UCanvasPanel*
		constexpr auto Header-Tab-HUB-Promod = 0x2f8; // UHeader-Tab-HUB-Promod_C*
		constexpr auto Header-Tab-LEADERBOARDS-Promod = 0x300; // UHeader-Tab-LEADERBOARDS-Promod_C*
		constexpr auto Header-Tab-OPTIONS-Promod = 0x308; // UHeader-Tab-OPTIONS-Promod_C*
		constexpr auto Header-Tab-WEAPONS-Promod = 0x310; // UHeader-Tab-WEAPONS-Promod_C*
		constexpr auto Img_CREATE_SCENARIO = 0x318; // UImage*
		constexpr auto Img_EXIT = 0x320; // UImage*
		constexpr auto Img_SETTINGS = 0x328; // UImage*
		constexpr auto Img_STORE = 0x330; // UImage*
		constexpr auto IntroMovieWidget = 0x338; // UWBP_FullscreenMovie_C*
		constexpr auto Jumper-MM-Button = 0x340; // UDebug_Button-BLACK-LEFT-JUSTIFIED_C*
		constexpr auto Jumper_MainMenu = 0x348; // UJumper_MainMenu_C*
		constexpr auto JumperMenuPanel = 0x350; // UCanvasPanel*
		constexpr auto KillRun-MM-Button = 0x358; // UDebug_Button-BLACK-LEFT-JUSTIFIED_C*
		constexpr auto KillRun_LevelSelect = 0x360; // UJumper_LevelSelect_C*
		constexpr auto KillRunMenuPanel = 0x368; // UCanvasPanel*
		constexpr auto LeaderboardPanel = 0x370; // UCanvasPanel*
		constexpr auto MainMenuLeaderboard = 0x378; // UMainMenuLeaderboard_C*
		constexpr auto Menu-Background = 0x380; // UMenu-Background_C*
		constexpr auto Menu-Button-Promod = 0x388; // UMenu-Button-Promod_C*
		constexpr auto MenuPanelSwitcher = 0x390; // UWidgetSwitcher*
		constexpr auto PLAY-TEST-new2 = 0x398; // UDebug_Button-BLACK-LEFT-JUSTIFIED_C*
		constexpr auto PlayMenuWidgetSwitcher = 0x3a0; // UWidgetSwitcher*
		constexpr auto PlayTest_BackButton = 0x3a8; // UBack-Legend-button-Promod_C*
		constexpr auto PlayTestMenuPanel = 0x3b0; // UCanvasPanel*
		constexpr auto PlayVertBox = 0x3b8; // UVerticalBox*
		constexpr auto Sandbox-MM-Button = 0x3c0; // UDebug_Button-LIGHT-LEFT-JUSTIFIED_C*
		constexpr auto ServerBrowser_BackButton = 0x3c8; // UBack-Legend-button-Promod_C*
		constexpr auto ServerBrowserButton = 0x3d0; // UDebug_Button-BLACK-LEFT-JUSTIFIED_C*
		constexpr auto ServerBrowserPanel = 0x3d8; // UCanvasPanel*
		constexpr auto SETTINGS-new = 0x3e0; // UDebug_Button-LIGHT-LEFT-JUSTIFIED_C*
		constexpr auto SettingsMenu = 0x3e8; // USettings_C*
		constexpr auto SettingsPanel = 0x3f0; // UCanvasPanel*
		constexpr auto StartMenuPanel = 0x3f8; // UCanvasPanel*
		constexpr auto StrafeTraining-MM-Button = 0x400; // UDebug_Button-LIGHT-LEFT-JUSTIFIED_C*
		constexpr auto Tab_HUB = 0x408; // UWBP_HeaderTab_C*
		constexpr auto Tab_LEADERBOARDS = 0x410; // UWBP_HeaderTab_C*
		constexpr auto Tab_OPTIONS = 0x418; // UWBP_HeaderTab_C*
		constexpr auto Tab_WEAPONS = 0x420; // UWBP_HeaderTab_C*
		constexpr auto Training_BackButton = 0x428; // UBack-Legend-button-Promod_C*
		constexpr auto TrainingButton = 0x430; // UDebug_Button-BLACK-LEFT-JUSTIFIED_C*
		constexpr auto TrainingVertBox = 0x438; // UVerticalBox*
		constexpr auto Tutorial-MM-Button = 0x440; // UDebug_Button-LIGHT-LEFT-JUSTIFIED_C*
		constexpr auto TutorialMenu-BackButton = 0x448; // UBack-Legend-button-Promod_C*
		constexpr auto TutorialMenuPanel = 0x450; // UCanvasPanel*
		constexpr auto Vignette-Temp = 0x458; // UVignette-Temp_C*
		constexpr auto WBP_LoadoutScreen_C_4 = 0x460; // UWBP_LoadoutScreen_C*
		constexpr auto WBP_ServerBrowser_C_6 = 0x468; // UWBP_ServerBrowser_C*
		constexpr auto WelcomePopup = 0x470; // UWelcomePopup_C*
		constexpr auto Wishlist-button-Promod-LARGER = 0x478; // UWishlist-button-Promod-LARGER_C*
		constexpr auto bInJumperScreen = 0x480; // bool
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UKantanBarChartBase {
		constexpr auto WidgetStyle = 0x178; // FKantanBarChartStyle
		constexpr auto Orientation = 0x2a8; // EKantanBarChartOrientation
		constexpr auto MaxBarValue = 0x2ac; // float
		constexpr auto LabelPosition = 0x2b0; // EKantanBarLabelPosition
		constexpr auto BarToGapRatio = 0x2b4; // float
		constexpr auto ValueExtentsDisplay = 0x2b8; // EKantanBarValueExtents
		constexpr auto ValueAxisCfg = 0x2c0; // FCartesianAxisConfig
	}

	namespace n_UAkAudioEvent {
		constexpr auto LocalizedPlatformAssetDataMap = 0x58; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xa8; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb8; // UAkAssetPlatformData*
		constexpr auto MaxAttenuationRadius = 0xc0; // float
		constexpr auto IsInfinite = 0xc4; // bool
		constexpr auto MinimumDuration = 0xc8; // float
		constexpr auto MaximumDuration = 0xcc; // float
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UNUIExperienceBar {
		constexpr auto ExperienceStartedAt = 0x278; // int32_t
		constexpr auto ExperienceFinishedAt = 0x27c; // int32_t
		constexpr auto ExperienceGainedFromScore = 0x280; // int32_t
		constexpr auto ExperienceGainedFromMedals = 0x284; // int32_t
		constexpr auto ExperienceGainedFromChallenges = 0x288; // int32_t
		constexpr auto ExperienceGainedFromMatchResult = 0x28c; // int32_t
		constexpr auto ScorePhaseNormalised = 0x290; // float
		constexpr auto MedalPhaseNormalised = 0x294; // float
		constexpr auto ChallengePhaseNormalised = 0x298; // float
		constexpr auto MatchResultPhaseNormalised = 0x29c; // float
		constexpr auto BonusMultiplier = 0x2a0; // int32_t
		constexpr auto XPRange = 0x2a4; // float
		constexpr auto CurrentFillStage = 0x2a8; // EFillStage
	}

	namespace n_UPromodPingablesDataAsset {
		constexpr auto PingableData = 0x30; // TMap<EPingType, FPingableData>
	}

	namespace n_UUnlockedLevelsSaveData {
		constexpr auto UnlockedLevelNames = 0x50; // TArray<FString>
	}

	namespace n_UCancel_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Clicked = 0x268; // UWidgetAnimation*
		constexpr auto Default = 0x270; // UWidgetAnimation*
		constexpr auto Selected = 0x278; // UWidgetAnimation*
		constexpr auto Unselected = 0x280; // UWidgetAnimation*
		constexpr auto PM-BUTTON = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_ACTFGameState {
		constexpr auto TeamFlagZones = 0x4a0; // TArray<ACTFMode_FlagZone*>
		constexpr auto TeamFlags = 0x4b0; // TArray<ACTFMode_Flag*>
		constexpr auto FlagCarriers = 0x4c0; // TArray<ACTFPlayerState*>
		constexpr auto OvertimeCounter = 0x4d0; // int32_t
		constexpr auto TimeToCapFlag = 0x4d4; // int32_t
	}

	namespace n_UMinimapInternal_Fog_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_Fog = 0x268; // UImage*
		constexpr auto MapViewComp = 0x270; // UMapViewComponent*
		constexpr auto MapFog = 0x278; // AMapFog*
		constexpr auto FogMatInst = 0x280; // UMaterialInstanceDynamic*
		constexpr auto StartTime = 0x288; // float
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UMapBombSiteWidget {
		constexpr auto LinkedSite = 0x268; // ABombMode_Zone*
		constexpr auto CachedMaterial = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x278; // ABeacon*
		constexpr auto BeaconScaleX = 0x280; // float
		constexpr auto BeaconScaleY = 0x284; // float
		constexpr auto ImageBackground = 0x288; // UImage*
		constexpr auto ImageSiteText = 0x290; // UImage*
		constexpr auto ScaledPlayerPos = 0x298; // FVector2D
		constexpr auto RotationAngle = 0x2a0; // float
		constexpr auto CanvasPanelSlot = 0x2a8; // UCanvasPanelSlot*
		constexpr auto bInActiveArray = 0x2d4; // bool
	}

	namespace n_ABattalionGrenadePickup {
		constexpr auto DisplayMesh = 0x220; // UStaticMeshComponent*
		constexpr auto PickedUpBy = 0x228; // ABattalionCharacter*
		constexpr auto WeaponFireTag = 0x230; // FName
		constexpr auto StartLocation = 0x238; // FVector
		constexpr auto TargetLocation = 0x244; // FVector
		constexpr auto PickupSound = 0x250; // UAkAudioEvent*
		constexpr auto DestroyAfterTime = 0x258; // bool
		constexpr auto GrenadeType = 0x259; // EGrenadeType
		constexpr auto SphereCollision = 0x268; // USphereComponent*
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UNUICardsSelection {
		constexpr auto Team = 0x278; // int32_t
		constexpr auto PlayerStateSlots = 0x280; // TArray<ABattalionPlayerState*>
		constexpr auto HeadingText = 0x290; // FText
		constexpr auto CountdownTimer = 0x2a8; // FString
	}

	namespace n_UPlayFabGroupsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x218; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x220; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x228; // UPlayFabJsonObject*
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNUIGenericActionPrompt {
		constexpr auto PromptDescriptionText = 0x290; // FText
		constexpr auto BindNameText = 0x2a8; // FText
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_ACargoSafeZone {
		constexpr auto MeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto Team = 0x228; // int32_t
		constexpr auto OriginalTeam = 0x22c; // int32_t
		constexpr auto Checkpoint = 0x230; // int32_t
		constexpr auto bNoEntryUntilActive = 0x234; // bool
		constexpr auto bActivated = 0x235; // bool
		constexpr auto bAllowed = 0x236; // bool
		constexpr auto CargoGameState = 0x238; // ACargoGameState*
	}

	namespace n_UWBP_BlitzHUD_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Kill+15-And-Beyond = 0x270; // UWidgetAnimation*
		constexpr auto Kill+10 = 0x278; // UWidgetAnimation*
		constexpr auto Kill+5 = 0x280; // UWidgetAnimation*
		constexpr auto DamageTaken = 0x288; // UWidgetAnimation*
		constexpr auto BlockedMessagesVerticalBox = 0x290; // UVerticalBox*
		constexpr auto ClientFPS = 0x298; // USizeBox*
		constexpr auto FrameTime = 0x2a0; // USizeBox*
		constexpr auto GameLatency = 0x2a8; // USizeBox*
		constexpr auto GameThreadTime = 0x2b0; // USizeBox*
		constexpr auto GameToRenderLatency = 0x2b8; // USizeBox*
		constexpr auto GPUTemp = 0x2c0; // USizeBox*
		constexpr auto HUD_LINES = 0x2c8; // UHUD_LINES_C*
		constexpr auto HUD_LINES_2 = 0x2d0; // UHUD_LINES_C*
		constexpr auto IdleTime = 0x2d8; // USizeBox*
		constexpr auto OverviewSwitcher = 0x2e0; // UWidgetSwitcher*
		constexpr auto RenderLatency = 0x2e8; // USizeBox*
		constexpr auto RenderThreadTime = 0x2f0; // USizeBox*
		constexpr auto RHIThreadTime = 0x2f8; // USizeBox*
		constexpr auto WBP_ActionPrompt = 0x300; // UWBP_ActionPrompt_C*
		constexpr auto WBP_AmmoAndNades = 0x308; // UWBP_AmmoAndNades_C*
		constexpr auto WBP_Announcement = 0x310; // UWBP_Announcement_C*
		constexpr auto WBP_BasicScoreAward = 0x318; // UWBP_BasicScoreAward_C*
		constexpr auto WBP_BlitzCanRespawnIndicator = 0x320; // UWBP_BlitzCanRespawnIndicator_C*
		constexpr auto WBP_BlitzGameoverviewWidget_C_2 = 0x328; // UWBP_BlitzGameoverviewWidget_C*
		constexpr auto WBP_BlitzSpectating = 0x330; // UWBP_BlitzSpectating_C*
		constexpr auto WBP_BombInfo = 0x338; // UWBP_BombInfo_C*
		constexpr auto WBP_ChatFeed = 0x340; // UWBP_ChatFeed_C*
		constexpr auto WBP_ClassChanged = 0x348; // UWBP_ClassChanged_C*
		constexpr auto WBP_Crosshair = 0x350; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x358; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_FireUpProgress = 0x360; // UWBP_FireUpProgress_C*
		constexpr auto WBP_GameOverScreen = 0x368; // UWBP_GameOverScreen_C*
		constexpr auto WBP_GrenadeIndicator = 0x370; // UWBP_GrenadeIndicator_C*
		constexpr auto WBP_Hitmarker = 0x378; // UWBP_Hitmarker_C*
		constexpr auto WBP_InGameLoadoutSelection_304 = 0x380; // UWBP_InGameLoadoutSelection_C*
		constexpr auto WBP_Interaction = 0x388; // UWBP_Interaction_C*
		constexpr auto WBP_Inventory = 0x390; // UWBP_Inventory_C*
		constexpr auto WBP_Killfeed = 0x398; // UWBP_Killfeed_C*
		constexpr auto WBP_KillSuccess = 0x3a0; // UWBP_KillSuccess_C*
		constexpr auto WBP_Message = 0x3a8; // UWBP_Message_C*
		constexpr auto WBP_MiniMap = 0x3b0; // UWBP_MiniMap_C*
		constexpr auto WBP_Overtime_Shootout_Title = 0x3b8; // UWBP_Overtime_Shootout_Title_C*
		constexpr auto WBP_Overtime_Shootout_Transition = 0x3c0; // UWBP_Overtime_Shootout_Transition_C*
		constexpr auto WBP_Overtime_Shootout_Victory = 0x3c8; // UWBP_Overtime_Shootout_Victory_C*
		constexpr auto WBP_Overtime_Title = 0x3d0; // UWBP_Overtime_Title_C*
		constexpr auto WBP_PingSelection = 0x3d8; // UWBP_PingSelection_C*
		constexpr auto WBP_PlantProgressBar = 0x3e0; // UWBP_PlantProgressBar_C*
		constexpr auto WBP_ShootoutOverview_C_2 = 0x3e8; // UWBP_ShootoutOverview_C*
		constexpr auto WBP_SNDLeaderboard = 0x3f0; // UWBP_SNDLeaderboard_C*
		constexpr auto WBP_SniperVignette = 0x3f8; // UWBP_SniperVignette_C*
		constexpr auto WBP_StaminaAndHealthBars = 0x400; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StaminaBar = 0x408; // UWBP_StaminaBar_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x410; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_SwappingSides = 0x418; // UWBP_SwappingSides_C*
		constexpr auto WBP_Vault = 0x420; // UWBP_Vault_C*
		constexpr auto WBP_VictoryState = 0x428; // UWBP_VictoryState_C*
		constexpr auto WBP_WeaponPickup = 0x430; // UWBP_WeaponPickup_C*
		constexpr auto In Visibility = 0x438; // ESlateVisibility
		constexpr auto OnShowUpdateLeaderboard = 0x440; // FMulticastInlineDelegate
		constexpr auto IsPlayingHealth = 0x450; // bool
		constexpr auto OnShowUpdateGameOverScreen = 0x458; // FMulticastInlineDelegate
		constexpr auto CurrentBlockedMessages = 0x468; // TArray<UWBP_GenericBlockedMessage_C*>
		constexpr auto bBlockedUIFound = 0x478; // bool
		constexpr auto RemainingStamina = 0x47c; // float
		constexpr auto StaminaRegenMultiplier = 0x480; // float
		constexpr auto StaminaDirection = 0x484; // int32_t
		constexpr auto StaminaEvent = 0x488; // FStaminaEvent
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UBattalionDamageType {
		constexpr auto WeaponName = 0x40; // FString
		constexpr auto WeaponType = 0x50; // EWeaponType
		constexpr auto KillIconBrush = 0x58; // FSlateBrush
		constexpr auto IconResolution = 0xe0; // FVector2D
		constexpr auto HitForceFeedback = 0xe8; // UForceFeedbackEffect*
		constexpr auto KilledForceFeedback = 0xf0; // UForceFeedbackEffect*
		constexpr auto HeadshotHitmarkerSound = 0xf8; // bool
		constexpr auto IsGrenade = 0xf9; // bool
		constexpr auto IsHeadshot = 0xfa; // bool
		constexpr auto IsWallbang = 0xfb; // bool
		constexpr auto IsMelee = 0xfc; // bool
		constexpr auto IsPrimary = 0xfd; // bool
		constexpr auto IsBoltAction = 0xfe; // bool
		constexpr auto IsSniper = 0xff; // bool
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x468; // UGeometryCache*
		constexpr auto bRunning = 0x470; // bool
		constexpr auto bLooping = 0x471; // bool
		constexpr auto StartTimeOffset = 0x474; // float
		constexpr auto PlaybackSpeed = 0x478; // float
		constexpr auto NumTracks = 0x47c; // int32_t
		constexpr auto ElapsedTime = 0x480; // float
		constexpr auto Duration = 0x4b4; // float
		constexpr auto bManualTick = 0x4b8; // bool
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UBattalionGameViewport {
		constexpr auto BattInstance = 0x368; // UBattalionGameInstance*
		constexpr auto CurrentPrompt = 0x370; // UNUIPrompt*
		constexpr auto PromptQueue = 0x378; // TArray<UNUIPrompt*>
	}

	namespace n_UPromodSpatialMarker {
		constexpr auto bIsForceHidden = 0x260; // bool
		constexpr auto bUsingHealthbars = 0x261; // bool
		constexpr auto bShowHealthOnlyFromADS = 0x262; // bool
		constexpr auto bUsingOutlines = 0x263; // bool
		constexpr auto bUsingIcons = 0x264; // bool
		constexpr auto bSeeEnemyHealthbars = 0x265; // bool
		constexpr auto bShowHealthThroughWall = 0x266; // bool
		constexpr auto bShowAlliedMarkers = 0x267; // bool
		constexpr auto bShowEnemyMarkers = 0x268; // bool
		constexpr auto MinRangeForOutline = 0x26c; // float
		constexpr auto MaxRangeForOutline = 0x270; // float
		constexpr auto MinRangeForSilhouette = 0x274; // float
		constexpr auto MaxRangeForSilhouette = 0x278; // float
		constexpr auto MinRangeForIcon = 0x27c; // float
		constexpr auto MaxRangeForIcon = 0x280; // float
		constexpr auto MinRangeForHealthbar = 0x284; // float
		constexpr auto MaxRangeForHealthbar = 0x288; // float
		constexpr auto MinRangeForHealthbarADS = 0x28c; // float
		constexpr auto MaxRangeForHealthbarADS = 0x290; // float
		constexpr auto MinRangeForEnemyHealthbar = 0x294; // float
		constexpr auto MaxRangeForEnemyHealthbar = 0x298; // float
		constexpr auto MinRangeForEnemyHealthbarADS = 0x29c; // float
		constexpr auto MaxRangeForEnemyHealthbarADS = 0x2a0; // float
		constexpr auto MinimumLookAtAngle = 0x2a4; // float
		constexpr auto AlwaysShowDistance = 0x2a8; // float
		constexpr auto HipMaxDistance = 0x2ac; // float
		constexpr auto AdsMaxDistance = 0x2b0; // float
		constexpr auto HipAngleCurve = 0x2b8; // UCurveFloat*
		constexpr auto AdsAngleCurve = 0x2c0; // UCurveFloat*
		constexpr auto bDebugChecks = 0x2c8; // bool
		constexpr auto MinScale = 0x2cc; // float
		constexpr auto MaxScale = 0x2d0; // float
		constexpr auto MinDistanceApart = 0x2d4; // float
		constexpr auto MaxDistanceApart = 0x2d8; // float
		constexpr auto Scale = 0x2dc; // float
		constexpr auto bScaleReverse = 0x2e0; // bool
		constexpr auto OwningCharacter = 0x2e8; // APromodCharacter*
		constexpr auto LinkedCharacter = 0x2f0; // ACharacter*
		constexpr auto SpatialMarkerFlags = 0x2f8; // int32_t
		constexpr auto PrevSpatialMarkerFlags = 0x2fc; // int32_t
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UMedal50BombCTF {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_APatrolPoint {
		constexpr auto RootComp = 0x220; // USceneComponent*
		constexpr auto MinWaitTime = 0x228; // float
		constexpr auto MaxWaitTime = 0x22c; // float
		constexpr auto bUsePointRotation = 0x230; // bool
		constexpr auto bStopAtPatrolPoint = 0x231; // bool
		constexpr auto PointIndex = 0x234; // int32_t
		constexpr auto OwningPath = 0x238; // APatrolPath*
	}

	namespace n_UNUICasterGraphs {
		constexpr auto Players = 0x278; // TArray<ABattalionPlayerState*>
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_ABlitzGameState {
		constexpr auto TrackerClass = 0x610; // ABombCarrierTracker*
		constexpr auto BombCarrier = 0x618; // APromodCharacter*
		constexpr auto BombCarrierController = 0x620; // ABombPlayerController*
		constexpr auto BombCarrierTracker = 0x628; // ABombCarrierTracker*
		constexpr auto RemainingFuseTime = 0x630; // float
		constexpr auto TeamWithBombPossesion = 0x634; // int32_t
		constexpr auto bCanRespawn = 0x638; // bool
		constexpr auto CurrentTeamRole = 0x639; // ETeamRole
		constexpr auto CurrentBombCarrierName = 0x63c; // FName
	}

	namespace n_UMinimapInternal_Icon_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_Icon = 0x268; // UImage*
		constexpr auto Widget_MouseCapture = 0x270; // UMinimapInternal_IconMouseCapture_C*
		constexpr auto MapIconComp = 0x278; // UMapIconComponent*
		constexpr auto MapViewComp = 0x280; // UMapViewComponent*
		constexpr auto MapTrackerComp = 0x288; // UMapTrackerComponent*
		constexpr auto CanvasSlot_Outer = 0x290; // UCanvasPanelSlot*
		constexpr auto CanvasSlot_Icon = 0x298; // UCanvasPanelSlot*
		constexpr auto CanvasSlot_MouseDetect = 0x2a0; // UCanvasPanelSlot*
		constexpr auto TickHandle = 0x2a8; // FTimerHandle
		constexpr auto bIsShowingArrow = 0x2b0; // bool
		constexpr auto IconMatInst = 0x2b8; // UMaterialInstanceDynamic*
		constexpr auto ArrowMatInst = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto Tooltip = 0x2c8; // UMinimapInternal_Tooltip_C*
		constexpr auto EffectStartTime = 0x2d0; // float
		constexpr auto bIsCircular = 0x2d4; // bool
		constexpr auto IconOuterRadiusUV = 0x2d8; // FVector2D
		constexpr auto ArrowInnerRadiusUV = 0x2e0; // FVector2D
		constexpr auto Canvas_AboveFog = 0x2e8; // UCanvasPanel*
		constexpr auto Canvas_BelowFog = 0x2f0; // UCanvasPanel*
		constexpr auto MinimapGeo = 0x2f8; // FGeometry
		constexpr auto MinimapSize = 0x330; // FVector2D
		constexpr auto MinimapIconScale = 0x338; // float
		constexpr auto OnBoxSelect = 0x340; // FMulticastInlineDelegate
		constexpr auto Global Icon Scale = 0x350; // float
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_AHeadquartersGameState {
		constexpr auto ObjectiveCaptureTimeout = 0x4a0; // float
		constexpr auto ObjectiveResetTime = 0x4a4; // float
		constexpr auto ObjectiveRespawnTime = 0x4a8; // float
		constexpr auto ObjectiveUnlockTime = 0x4ac; // float
		constexpr auto ObjectiveStateChangedTimeStamp = 0x4b0; // float
		constexpr auto ObjectiveTimeRemaining = 0x4b4; // float
		constexpr auto ObjectiveResetTimer = 0x4b8; // float
		constexpr auto ObjectiveRespawnTimer = 0x4bc; // float
		constexpr auto ObjectiveUnlockTimer = 0x4c0; // float
		constexpr auto ObjectiveCurrentlyOwned = 0x4c4; // bool
		constexpr auto CurrentObjectiveState = 0x4c5; // EObjectiveState
	}

	namespace n_ABP_PlaceableAmmoBox_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AmmoBox = 0x278; // USkeletalMeshComponent*
		constexpr auto Box = 0x280; // UBoxComponent*
		constexpr auto Ak = 0x288; // UAkComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto Lifetime = 0x298; // float
		constexpr auto Health = 0x29c; // float
		constexpr auto FireUpDataAsset = 0x2a0; // UPromodAllFireUpsDataAsset*
		constexpr auto FireUpType = 0x2a8; // EFireUpType
		constexpr auto Enabled = 0x2a9; // bool
		constexpr auto OwnerTeamNum = 0x2ac; // int32_t
		constexpr auto MaxHealth = 0x2b0; // float
		constexpr auto ParticleSystemComp = 0x2b8; // UParticleSystemComponent*
		constexpr auto SpawnAkEvent = 0x2c0; // UAkAudioEvent*
		constexpr auto VeryDamagedFXComp = 0x2c8; // UParticleSystemComponent*
		constexpr auto SemiDamagedFXComp = 0x2d0; // UParticleSystemComponent*
		constexpr auto DetonationAkEvent = 0x2d8; // UAkAudioEvent*
		constexpr auto AmmoToGive = 0x2e0; // int32_t
		constexpr auto SemiDamagedFX = 0x2e8; // UParticleSystem*
		constexpr auto VeryDamagedFX = 0x2f0; // UParticleSystem*
		constexpr auto DetonationFX = 0x2f8; // UParticleSystem*
		constexpr auto ActorsInRange = 0x300; // TArray<AActor*>
		constexpr auto InteractionTime = 0x310; // float
		constexpr auto MaxUses = 0x314; // int32_t
		constexpr auto CurrentUses = 0x318; // int32_t
		constexpr auto FireSystem = 0x320; // UNiagaraSystem*
		constexpr auto DetonationDamageFalloffCurve = 0x328; // UCurveFloat*
		constexpr auto DetonationDamageType = 0x330; // UDamageType*
		constexpr auto LastDamagedBy = 0x338; // APromodPlayerController*
		constexpr auto AmmoRestored = 0x340; // int32_t
	}

	namespace n_UJumper-MM-Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Simulation-text-off = 0x268; // UWidgetAnimation*
		constexpr auto Simulation-activated = 0x270; // UWidgetAnimation*
		constexpr auto Pulse = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto SingleFrameSelected = 0x288; // UWidgetAnimation*
		constexpr auto Default = 0x290; // UWidgetAnimation*
		constexpr auto Backdrop-colour-image = 0x298; // UImage*
		constexpr auto Backdrop-colour-image_2 = 0x2a0; // UImage*
		constexpr auto MM_ICON_2 = 0x2a8; // UImage*
		constexpr auto PM-BUTTON = 0x2b0; // UButton*
		constexpr auto Selected-Size-Canvas = 0x2b8; // UCanvasPanel*
		constexpr auto UNSelected-Size-Canvas = 0x2c0; // UCanvasPanel*
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto customData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UAkXboxOneInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_UPromodClassManagerDataAsset {
		constexpr auto ClassDataAssets = 0x30; // TArray<UPromodClassDataAsset*>
		constexpr auto AllFireUps = 0x40; // UPromodAllFireUpsDataAsset*
	}

	namespace n_ABattalionWeaponPickup {
		constexpr auto PickedUpBy = 0x220; // ABattalionCharacter*
		constexpr auto PickupSound = 0x228; // UAkAudioEvent*
		constexpr auto DestroyAfterTime = 0x230; // bool
		constexpr auto TimerHandle_OnMeshAnimatedOneFrame = 0x238; // FTimerHandle
		constexpr auto WeaponClass = 0x240; // ABattalionWeapon*
		constexpr auto Weapon = 0x248; // ABattalionWeapon*
		constexpr auto MeshComponent = 0x250; // USkeletalMeshComponent*
		constexpr auto SphereCollision = 0x258; // USphereComponent*
	}

	namespace n_ABattalionPlayerControllerGMBase {
		constexpr auto SequencePlayer = 0x668; // ULevelSequencePlayer*
		constexpr auto SequenceAsset = 0x670; // ULevelSequence*
		constexpr auto TimerHandle_ControllerReadyUpTimer = 0x688; // FTimerHandle
		constexpr auto WorldLoadPlayed = 0x69c; // bool
		constexpr auto OnUpdateInteractionProgressDelegate = 0x6a0; // FMulticastInlineDelegate
		constexpr auto OnNewVoteReceived = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnVoteCasted = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnVoteFinished = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnSelfVoteCasted = 0x6e0; // FMulticastInlineDelegate
		constexpr auto SwitchSidesUIDelay = 0x704; // float
		constexpr auto ViewedGrenade = 0x758; // ABattalionGrenade*
		constexpr auto bSpectateBehindView = 0x76c; // bool
		constexpr auto LastSpectatedPlayerState = 0x770; // ABattalionPlayerState*
		constexpr auto LastSpectatedPlayerId = 0x778; // int32_t
		constexpr auto bIsSpectator = 0x77c; // bool
		constexpr auto bDisableMovementAndInputOnSpawn = 0x77d; // bool
		constexpr auto UseProgress = 0x780; // float
		constexpr auto SpawnViewerEnabled = 0x78c; // bool
		constexpr auto CurrentRespawnTime = 0x790; // float
		constexpr auto ProfilingPawnClass = 0x798; // ASpectatorPawn*
		constexpr auto PathFollowingComponent = 0x7a8; // UBattalionPathFollowingComponent*
		constexpr auto BotEnemyInfo = 0x7b0; // TArray<FBotEnemyInfo>
		constexpr auto BotFriendlyInfo = 0x7c0; // TArray<FBotFriendlyInfo>
		constexpr auto BotPOIs = 0x7d0; // TArray<ABotPOI*>
		constexpr auto CurrentPOI = 0x7e0; // ABotPOI*
		constexpr auto DesiredPOI = 0x7e8; // ABotPOI*
		constexpr auto BotOnLadder = 0x7f0; // bool
		constexpr auto BotFollowActor = 0x8b0; // ABotFollowActor*
		constexpr auto BotTarget = 0x8c0; // ABattalionCharacter*
		constexpr auto BotPendingTarget = 0x8c8; // ABattalionCharacter*
		constexpr auto BotVisibleEnemies = 0x8d0; // TArray<ABattalionCharacter*>
		constexpr auto CurrentGameMode = 0x8e0; // ABattalionGameMode*
		constexpr auto AdditiveControlRotation = 0x900; // FRotator
		constexpr auto IsBeingABot = 0x90c; // bool
		constexpr auto DefaultNavigationFilterClass = 0x920; // UNavigationQueryFilter*
		constexpr auto PossessedBotPS = 0x928; // ABattalionPlayerState*
		constexpr auto bSurrenderState = 0x934; // bool
		constexpr auto bCanOfferSurrender = 0x935; // bool
		constexpr auto IsApplicableForMatchBonus = 0x936; // bool
		constexpr auto OnKickTimerReset = 0x938; // FMulticastInlineDelegate
		constexpr auto OnKickTimerWarning = 0x948; // FMulticastInlineDelegate
		constexpr auto KickWarningStartTime = 0x958; // float
		constexpr auto bKickTimerVisible = 0x964; // bool
		constexpr auto MutedChatIDs = 0x970; // TArray<FString>
		constexpr auto DamageReceivedReport = 0x980; // TMap<FString, float>
		constexpr auto DamageGivenReport = 0x9d0; // TMap<FString, float>
		constexpr auto ScoreboardData = 0xa20; // TArray<FScoreboardData>
		constexpr auto ForceHideAllUIFlags = 0xa38; // bool
		constexpr auto IsRecordingReplay = 0xa39; // bool
		constexpr auto ShouldPlayVoiceLines = 0xa48; // bool
		constexpr auto LastSpawnPoint = 0xa50; // APlayerStart*
		constexpr auto DefaultAkComp = 0xa60; // UAkComponent*
		constexpr auto StopReloadSounds = 0xa68; // UAkAudioEvent*
		constexpr auto OcclusionCheckDelta = 0xa70; // float
		constexpr auto TimerHandle_OcclusionCheck = 0xa78; // FTimerHandle
		constexpr auto VoiceInstructionTimerHandle = 0xa80; // FTimerHandle
		constexpr auto VOManager = 0xa88; // UVOManager*
		constexpr auto MutedIDs = 0xa90; // TArray<FUniqueNetIdRepl>
		constexpr auto ServerMutedIDs = 0xaa0; // TArray<FUniqueNetIdRepl>
		constexpr auto LevelUpEvent = 0xab0; // UAkAudioEvent*
		constexpr auto ChallengeCompletedEvent = 0xab8; // UAkAudioEvent*
		constexpr auto PauseMusicEvent = 0xac0; // UAkAudioEvent*
		constexpr auto ResumeMusicEvent = 0xac8; // UAkAudioEvent*
		constexpr auto CriticalTickEvent = 0xad0; // UAkAudioEvent*
		constexpr auto Battlerank_RankUpEvent = 0xad8; // UAkAudioEvent*
		constexpr auto VoteStartedEvent = 0xae0; // UAkAudioEvent*
		constexpr auto VoteCastEvent = 0xae8; // UAkAudioEvent*
		constexpr auto WeaponClasses = 0xaf0; // TMap<FName, ABattalionWeapon*>
		constexpr auto MatchState = 0xb40; // FName
		constexpr auto MedalDataAsset = 0xb80; // UBattalionMedalsDataAsset*
		constexpr auto MedalEarnedSoundEvent = 0xb88; // UAkAudioEvent*
		constexpr auto PersonalMedals = 0xb90; // TMap<FString, int32_t>
		constexpr auto LookingAtFriendly = 0xbe0; // ABattalionCharacter*
		constexpr auto bIsWeaponVisible = 0xbef; // bool
		constexpr auto bIsInThirdPerson = 0xbf0; // bool
		constexpr auto FlashCameraShakeInstancePtr = 0xbf8; // UCameraShakeBase*
	}

	namespace n_UMedal30BombDOM {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_ABattalionGameSession {
		constexpr auto Password = 0x238; // FString
		constexpr auto bIsPrivate = 0x248; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UNUICallOutName {
		constexpr auto CurrentCallOutName = 0x278; // FStackMember
		constexpr auto LastCallOutName = 0x298; // FStackMember
		constexpr auto CallOutNameStack = 0x2b8; // TArray<FStackMember>
		constexpr auto MinimapMargin = 0x2c8; // FVector2D
		constexpr auto MinimapSize = 0x2d0; // float
		constexpr auto CurrentMapScale = 0x2d4; // float
		constexpr auto CurrentHudScale = 0x2d8; // float
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x128; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x130; // bool
		constexpr auto ScrubTailLengthMs = 0x134; // int32_t
		constexpr auto StopAtSectionEnd = 0x138; // bool
		constexpr auto EventName = 0x140; // FString
		constexpr auto MaxSourceDuration = 0x170; // float
		constexpr auto MaxDurationSourceID = 0x178; // FString
	}

	namespace n_ASpecialGrenadePickup {
		constexpr auto SpecialGrenadeType = 0x270; // ESpecialGrenadeType
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x1f8; // char : 1
		constexpr auto AcousticPolys = 0x200; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x210; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x210; // char : 1
		constexpr auto AssociatedRoom = 0x218; // AActor*
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_AMonorailPath {
		constexpr auto SplineComponent = 0x220; // USplineComponent*
		constexpr auto SplineMesh = 0x228; // UStaticMesh*
		constexpr auto SplineMeshOffset = 0x230; // FVector
		constexpr auto Material = 0x240; // UMaterialInterface*
		constexpr auto BaseSectionLength = 0x248; // float
		constexpr auto ForwardAxis = 0x250; // ESplineMeshAxis
		constexpr auto MonorailVerticalOffset = 0x254; // float
		constexpr auto StationWaitTime = 0x258; // float
		constexpr auto CarriageCount = 0x25c; // int32_t
		constexpr auto CarriageOffset = 0x260; // float
		constexpr auto CarriageRotationSpeed = 0x264; // float
		constexpr auto Stations = 0x268; // TArray<int32_t>
		constexpr auto bShowDebug = 0x278; // bool
		constexpr auto Checkpoints = 0x280; // TArray<FCargoCheckpointData>
		constexpr auto CheckpointClass = 0x290; // ACargoCheckpoint*
		constexpr auto PassivePayloadSpeed = 0x298; // float
		constexpr auto FirstAttackerPayloadSpeed = 0x29c; // float
		constexpr auto MaxSpeedIncreaseAttackers = 0x2a0; // int32_t
		constexpr auto ExtraAttackerPayloadSpeed = 0x2a4; // float
		constexpr auto DisableCargoTime = 0x2a8; // float
		constexpr auto EnableCargoTime = 0x2ac; // float
		constexpr auto InitializeCargoTime = 0x2b0; // float
		constexpr auto ContestingScoreTickTime = 0x2b4; // float
		constexpr auto ContestingScoreTick = 0x2b8; // float
		constexpr auto bShowPreviewCheckpoints = 0x2bc; // bool
		constexpr auto Monorail = 0x2c0; // AMonorail*
		constexpr auto CargoFirstTeamProgressPointClass = 0x2c8; // ACargoFirstTeamProgressPoint*
		constexpr auto CargoFirstTeamProgressPoint = 0x2d0; // ACargoFirstTeamProgressPoint*
		constexpr auto CargoEndPointProgressPoint = 0x2d8; // ACargoFirstTeamProgressPoint*
		constexpr auto CheckpointActors = 0x2e0; // TArray<ACargoCheckpoint*>
		constexpr auto CargoGameMode = 0x2f0; // ACargoGameMode*
	}

	namespace n_UNUI_ColourPicker {
		constexpr auto Colour = 0x270; // FLinearColor
		constexpr auto bSkipAnimationOnConstruction = 0x280; // bool
	}

	namespace n_UWBP_PromodSpatialMarker_C {
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto Glitch = 0x310; // UWidgetAnimation*
		constexpr auto FadeOutAnim = 0x318; // UWidgetAnimation*
		constexpr auto FadeInAnim = 0x320; // UWidgetAnimation*
		constexpr auto ArrowBlue = 0x328; // UImage*
		constexpr auto ArrowImage = 0x330; // UImage*
		constexpr auto FireUpIcon = 0x338; // UImage*
		constexpr auto FireUpIconAndHPBox = 0x340; // UHorizontalBox*
		constexpr auto HealthBar = 0x348; // UProgressBar*
		constexpr auto Main = 0x350; // UCanvasPanel*
		constexpr auto MarkerWidgetSwitcher = 0x358; // UWidgetSwitcher*
		constexpr auto SpatialMarkerSizeBox = 0x360; // USizeBox*
		constexpr auto Text = 0x368; // UTextBlock*
		constexpr auto Text-Blue = 0x370; // UTextBlock*
		constexpr auto FriendlyUIColor = 0x378; // FSlateColor
		constexpr auto EnemyUIColor = 0x3a0; // FSlateColor
		constexpr auto Is Regenerating Health = 0x3c8; // bool
		constexpr auto Regen Amount = 0x3cc; // float
		constexpr auto Max Health = 0x3d0; // float
		constexpr auto OutlineCameraModifier = 0x3d8; // UBP_PlayerOutlineCameraModifier_C*
		constexpr auto CachedIsCarryingState = 0x3e0; // bool
		constexpr auto CachedHealthBarFlag = 0x3e1; // bool
		constexpr auto CachedOutlineFlag = 0x3e2; // bool
		constexpr auto CachedIconFlag = 0x3e3; // bool
		constexpr auto HealthBarColor = 0x3e8; // FSlateColor
		constexpr auto CachedWeapon = 0x410; // ABattalionWeapon*
		constexpr auto CachedOutlineDynamat = 0x418; // UMaterialInstanceDynamic*
	}

	namespace n_UPFRegionManager {
		constexpr auto OnCalculatedRegionLatencies = 0x30; // FMulticastInlineDelegate
		constexpr auto PlayFabSubsystem = 0x40; // UPlayFabSubsystem*
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_ABP_PlaceableDeployableCover_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto OverlapCheck = 0x278; // UBoxComponent*
		constexpr auto DeployableCover = 0x280; // USkeletalMeshComponent*
		constexpr auto Ak = 0x288; // UAkComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto Timeline_0_NewTrack_0_7818C3C1481DF640B4CD02BEF4DEA887 = 0x298; // float
		constexpr auto Timeline_0__Direction_7818C3C1481DF640B4CD02BEF4DEA887 = 0x29c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x2a0; // UTimelineComponent*
		constexpr auto Lifetime = 0x2a8; // float
		constexpr auto OwnerTeamNum = 0x2ac; // int32_t
		constexpr auto MaxHealth = 0x2b0; // float
		constexpr auto Health = 0x2b4; // float
		constexpr auto Enabled = 0x2b8; // bool
		constexpr auto ParticleSystemComp = 0x2c0; // UParticleSystemComponent*
		constexpr auto SpawnAkEvent = 0x2c8; // UAkAudioEvent*
		constexpr auto VeryDamagedFXComp = 0x2d0; // UParticleSystemComponent*
		constexpr auto SemiDamagedFXComp = 0x2d8; // UParticleSystemComponent*
		constexpr auto FireUpDataAsset = 0x2e0; // UPromodAllFireUpsDataAsset*
		constexpr auto FireUpType = 0x2e8; // EFireUpType
		constexpr auto DetonationAkEvent = 0x2f0; // UAkAudioEvent*
		constexpr auto DetonationFX = 0x2f8; // UParticleSystem*
		constexpr auto SemiDamagedFX = 0x300; // UParticleSystem*
		constexpr auto VeryDamagedFX = 0x308; // UParticleSystem*
		constexpr auto InstanceToUse = 0x310; // UMaterialInstanceDynamic*
		constexpr auto OwningPlayerState = 0x318; // APromodPlayerState*
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_USandbox-MM-Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Simulation-text-off = 0x268; // UWidgetAnimation*
		constexpr auto Simulation-activated = 0x270; // UWidgetAnimation*
		constexpr auto Pulse = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto SingleFrameSelected = 0x288; // UWidgetAnimation*
		constexpr auto Default = 0x290; // UWidgetAnimation*
		constexpr auto Backdrop-colour-image = 0x298; // UImage*
		constexpr auto Backdrop-colour-image_2 = 0x2a0; // UImage*
		constexpr auto MM_ICON_2 = 0x2a8; // UImage*
		constexpr auto PM-BUTTON = 0x2b0; // UButton*
		constexpr auto Selected-Size-Canvas = 0x2b8; // UCanvasPanel*
		constexpr auto UNSelected-Size-Canvas = 0x2c0; // UCanvasPanel*
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_ABP_SnapshotGrenade_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto OnImpact = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_ABattalionImpactEffect {
		constexpr auto DefaultFX = 0x220; // UParticleSystem*
		constexpr auto ConcreteFX = 0x228; // UParticleSystem*
		constexpr auto DirtFX = 0x230; // UParticleSystem*
		constexpr auto WaterFX = 0x238; // UParticleSystem*
		constexpr auto MetalFX = 0x240; // UParticleSystem*
		constexpr auto WoodFX = 0x248; // UParticleSystem*
		constexpr auto GlassFX = 0x250; // UParticleSystem*
		constexpr auto GrassFX = 0x258; // UParticleSystem*
		constexpr auto FleshFX = 0x260; // UParticleSystem*
		constexpr auto SandFX = 0x268; // UParticleSystem*
		constexpr auto DefaultFXScalar = 0x270; // FVector
		constexpr auto ConcreteFXScalar = 0x27c; // FVector
		constexpr auto DirtFXScalar = 0x288; // FVector
		constexpr auto WaterFXScalar = 0x294; // FVector
		constexpr auto MetalFXScalar = 0x2a0; // FVector
		constexpr auto WoodFXScalar = 0x2ac; // FVector
		constexpr auto GlassFXScalar = 0x2b8; // FVector
		constexpr auto GrassFXScalar = 0x2c4; // FVector
		constexpr auto FleshFXScalar = 0x2d0; // FVector
		constexpr auto SandFXScalar = 0x2dc; // FVector
		constexpr auto DefaultFXRotator = 0x2e8; // FRotator
		constexpr auto ConcreteFXRotator = 0x2f4; // FRotator
		constexpr auto DirtFXRotator = 0x300; // FRotator
		constexpr auto WaterFXRotator = 0x30c; // FRotator
		constexpr auto MetalFXRotator = 0x318; // FRotator
		constexpr auto WoodFXRotator = 0x324; // FRotator
		constexpr auto GlassFXRotator = 0x330; // FRotator
		constexpr auto GrassFXRotator = 0x33c; // FRotator
		constexpr auto FleshFXRotator = 0x348; // FRotator
		constexpr auto SandFXRotator = 0x354; // FRotator
		constexpr auto DecalRenderDistance = 0x360; // float
		constexpr auto DefaultSound = 0x368; // UAkAudioEvent*
		constexpr auto ConcreteSound = 0x370; // UAkAudioEvent*
		constexpr auto DirtSound = 0x378; // UAkAudioEvent*
		constexpr auto WaterSound = 0x380; // UAkAudioEvent*
		constexpr auto MetalSound = 0x388; // UAkAudioEvent*
		constexpr auto WoodSound = 0x390; // UAkAudioEvent*
		constexpr auto GlassSound = 0x398; // UAkAudioEvent*
		constexpr auto GrassSound = 0x3a0; // UAkAudioEvent*
		constexpr auto FleshSound = 0x3a8; // UAkAudioEvent*
		constexpr auto SandSound = 0x3b0; // UAkAudioEvent*
		constexpr auto BellSound = 0x3b8; // UAkAudioEvent*
		constexpr auto FadeScreenSize = 0x3c0; // float
		constexpr auto DefaultDecal = 0x3c8; // FDecalData
		constexpr auto SurfaceHit = 0x3e0; // FHitResult
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_USettings_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
		constexpr auto MatchmakingEnd = 0x420; // UWidgetAnimation*
		constexpr auto PS4-Labels = 0x428; // UWidgetAnimation*
		constexpr auto XBOX-Labels = 0x430; // UWidgetAnimation*
		constexpr auto ControlsRight = 0x438; // UWidgetAnimation*
		constexpr auto ControlsLeft = 0x440; // UWidgetAnimation*
		constexpr auto DBGServerPromptAnim = 0x448; // UWidgetAnimation*
		constexpr auto Tab-Move-anim = 0x450; // UWidgetAnimation*
		constexpr auto Settings-Outro = 0x458; // UWidgetAnimation*
		constexpr auto Settings-Intro = 0x460; // UWidgetAnimation*
		constexpr auto OnSettingsResetButtonAnimation = 0x468; // UWidgetAnimation*
		constexpr auto ADDPLAYERS = 0x470; // UHorizontalBox*
		constexpr auto Apply-Legend-button-Promod = 0x478; // UApply-Legend-button-Promod_C*
		constexpr auto Arrow-Left = 0x480; // UImage*
		constexpr auto Arrow-Right = 0x488; // UImage*
		constexpr auto Audio = 0x490; // UScrollBox*
		constexpr auto AudioButton = 0x498; // UButton*
		constexpr auto AudioTab = 0x4a0; // UBindingImageText_C*
		constexpr auto Back-Legend-button-Promod = 0x4a8; // UBack-Legend-button-Promod_C*
		constexpr auto Breaker1 = 0x4b0; // UImage*
		constexpr auto Breaker2 = 0x4b8; // UImage*
		constexpr auto Breaker3 = 0x4c0; // UImage*
		constexpr auto CircularProgressBar = 0x4c8; // UCircularProgressBar_C*
		constexpr auto ControllerLayoutSettingsItem_3 = 0x4d0; // UControllerLayoutSettingsItem_C*
		constexpr auto ControllerLayoutSettingsItem_4 = 0x4d8; // UControllerLayoutSettingsItem_C*
		constexpr auto ControlsButton = 0x4e0; // UButton*
		constexpr auto ControlsConfigPanel = 0x4e8; // UScrollBox*
		constexpr auto ControlsSwitcher = 0x4f0; // UWidgetSwitcher*
		constexpr auto ControlsTab = 0x4f8; // UBindingImageText_C*
		constexpr auto General = 0x500; // UScrollBox*
		constexpr auto GeneralButton = 0x508; // UButton*
		constexpr auto GeneralTab = 0x510; // UBindingImageText_C*
		constexpr auto Hide_PLAY_labels = 0x518; // FNone*
		constexpr auto Hide_PLAY_Lines = 0x520; // FNone*
		constexpr auto Hide_XBOX_labels = 0x528; // FNone*
		constexpr auto Hide_XBOX_Lines = 0x530; // FNone*
		constexpr auto horizLine = 0x538; // UImage*
		constexpr auto horizLine_2 = 0x540; // UImage*
		constexpr auto horizLine_3 = 0x548; // UImage*
		constexpr auto horizLine_4 = 0x550; // UImage*
		constexpr auto horizLine_5 = 0x558; // UImage*
		constexpr auto horizLine_6 = 0x560; // UImage*
		constexpr auto horizLine_7 = 0x568; // UImage*
		constexpr auto horizLine_8 = 0x570; // UImage*
		constexpr auto horizLine_9 = 0x578; // UImage*
		constexpr auto horizLine_10 = 0x580; // UImage*
		constexpr auto horizLine_11 = 0x588; // UImage*
		constexpr auto horizLine_12 = 0x590; // UImage*
		constexpr auto horizLine_13 = 0x598; // UImage*
		constexpr auto horizLine_14 = 0x5a0; // UImage*
		constexpr auto horizLine_15 = 0x5a8; // UImage*
		constexpr auto horizLine_16 = 0x5b0; // UImage*
		constexpr auto horizLine_17 = 0x5b8; // UImage*
		constexpr auto horizLine_18 = 0x5c0; // UImage*
		constexpr auto horizLine_19 = 0x5c8; // UImage*
		constexpr auto horizLine_20 = 0x5d0; // UImage*
		constexpr auto horizLine_21 = 0x5d8; // UImage*
		constexpr auto horizLine_22 = 0x5e0; // UImage*
		constexpr auto horizLine_23 = 0x5e8; // UImage*
		constexpr auto horizLine_24 = 0x5f0; // UImage*
		constexpr auto horizLine_25 = 0x5f8; // UImage*
		constexpr auto horizLine_26 = 0x600; // UImage*
		constexpr auto horizLine_27 = 0x608; // UImage*
		constexpr auto horizLine_28 = 0x610; // UImage*
		constexpr auto horizLine_29 = 0x618; // UImage*
		constexpr auto horizLine_30 = 0x620; // UImage*
		constexpr auto Labels = 0x628; // UCanvasPanel*
		constexpr auto LabelShoulderL = 0x630; // UControllerLayoutLabel_C*
		constexpr auto LabelShoulderR = 0x638; // UControllerLayoutLabel_C*
		constexpr auto LabelSpecialL = 0x640; // UControllerLayoutLabel_C*
		constexpr auto LabelSpecialR = 0x648; // UControllerLayoutLabel_C*
		constexpr auto LabelTriggerL = 0x650; // UControllerLayoutLabel_C*
		constexpr auto LabelTriggerR = 0x658; // UControllerLayoutLabel_C*
		constexpr auto NavLeftButton = 0x660; // UButton*
		constexpr auto NavRightButton = 0x668; // UButton*
		constexpr auto PagingBlankImage_Center = 0x670; // UImage*
		constexpr auto PagingBlankImage_Left = 0x678; // UImage*
		constexpr auto PagingBlankImage_Right = 0x680; // UImage*
		constexpr auto PcControllsScrollBox = 0x688; // UScrollBox*
		constexpr auto PCControls = 0x690; // UCanvasPanel*
		constexpr auto PlatformKeyAuxImage = 0x698; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage = 0x6a0; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_2 = 0x6a8; // UPlatformKeyImage_C*
		constexpr auto PlatformKeyImage_224 = 0x6b0; // UPlatformKeyImage_C*
		constexpr auto PLAYLabelDpadBottom = 0x6b8; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelDpadLeft = 0x6c0; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelDpadRight = 0x6c8; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceButtonBottom = 0x6d0; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceButtonLeft = 0x6d8; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceButtonRight = 0x6e0; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceButtonTop = 0x6e8; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceLeftStick = 0x6f0; // UControllerLayoutLabel_C*
		constexpr auto PLAYLabelFaceRightStick = 0x6f8; // UControllerLayoutLabel_C*
		constexpr auto PLAYLABELS = 0x700; // UCanvasPanel*
		constexpr auto Reset-Legend-button-Promod = 0x708; // UReset-Legend-button-Promod_C*
		constexpr auto SectionPlacement = 0x710; // UNUI_NullInput*
		constexpr auto SectionSizing = 0x718; // UVerticalBox*
		constexpr auto SHAREDLABELS = 0x720; // UCanvasPanel*
		constexpr auto TabsContianer = 0x728; // UHorizontalBox*
		constexpr auto Vertline = 0x730; // UImage*
		constexpr auto Vertline_2 = 0x738; // UImage*
		constexpr auto Vertline_3 = 0x740; // UImage*
		constexpr auto Vertline_4 = 0x748; // UImage*
		constexpr auto Vertline_5 = 0x750; // UImage*
		constexpr auto Vertline_6 = 0x758; // UImage*
		constexpr auto Vertline_7 = 0x760; // UImage*
		constexpr auto Vertline_8 = 0x768; // UImage*
		constexpr auto Vertline_9 = 0x770; // UImage*
		constexpr auto Vertline_10 = 0x778; // UImage*
		constexpr auto Vertline_11 = 0x780; // UImage*
		constexpr auto Vertline_12 = 0x788; // UImage*
		constexpr auto Vertline_13 = 0x790; // UImage*
		constexpr auto Vertline_14 = 0x798; // UImage*
		constexpr auto Vertline_15 = 0x7a0; // UImage*
		constexpr auto Vertline_16 = 0x7a8; // UImage*
		constexpr auto Video = 0x7b0; // UScrollBox*
		constexpr auto VideoButton = 0x7b8; // UButton*
		constexpr auto VideoTab = 0x7c0; // UBindingImageText_C*
		constexpr auto WidgetSwitcher_17 = 0x7c8; // UWidgetSwitcher*
		constexpr auto XBOXLabelDpadBottom = 0x7d0; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelDpadLeft = 0x7d8; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelDpadRight = 0x7e0; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceButtonBottom = 0x7e8; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceButtonLeft = 0x7f0; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceButtonRight = 0x7f8; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceButtonTop = 0x800; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceLeftStick = 0x808; // UControllerLayoutLabel_C*
		constexpr auto XBOXLabelFaceRightStick = 0x810; // UControllerLayoutLabel_C*
		constexpr auto XBOXLABELS = 0x818; // UCanvasPanel*
		constexpr auto Sections = 0x820; // TArray<UScrollBox*>
		constexpr auto Items_1 = 0x830; // TArray<USettingsItem_C*>
		constexpr auto Title = 0x840; // FText
		constexpr auto HeaderButtons = 0x858; // TArray<UButton*>
		constexpr auto Selected = 0x868; // FButtonStyle
		constexpr auto NotSelected = 0xae0; // FButtonStyle
		constexpr auto ConfigComboAddIndex = 0xd58; // int32_t
		constexpr auto HasCachedWidgets = 0xd5c; // bool
		constexpr auto SelectedItemIndex = 0xd60; // int32_t
		constexpr auto TabHeadingsText = 0xd68; // TArray<UTextBlock*>
		constexpr auto IsUsingInGameColors = 0xd78; // bool
		constexpr auto TabsScrollButtonAmount = 0xd7c; // float
		constexpr auto SelectedTitle = 0xd80; // int32_t
		constexpr auto ResetKeyPressed = 0xd84; // bool
		constexpr auto widgetToFocusOnReset = 0xd88; // int32_t
		constexpr auto ButtonProfiles = 0xd90; // TArray<FName>
		constexpr auto ButtonProfileIdx = 0xda0; // int32_t
		constexpr auto StickProfiles = 0xda8; // TArray<FName>
		constexpr auto StickProfileIdx = 0xdb8; // int32_t
		constexpr auto DefaultBinds = 0xdc0; // TMap<FName, FKey>
		constexpr auto BindNameOverrides = 0xe10; // TMap<FName, FText>
		constexpr auto AxisImageOverrides = 0xe60; // TMap<FKey, UTexture2D*>
		constexpr auto MainMenuReference = 0xeb0; // UMainMenu_C*
		constexpr auto bIsMainMenu = 0xeb8; // bool
	}

	namespace n_UFOVSkeletalMeshComponent {
		constexpr auto FOV = 0xed0; // float
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UVQ3CharacterMovementComponent {
		constexpr auto bQueueJump = 0xb32; // bool
		constexpr auto AirWishVelocity = 0xb34; // FVector
		constexpr auto bJustLanded = 0xb40; // bool
		constexpr auto PrevFloor = 0xb44; // FFindFloorResult
		constexpr auto ScalingFactor = 0xc00; // float
		constexpr auto Gravity = 0xc04; // float
		constexpr auto JumpForce = 0xc08; // float
		constexpr auto JumpMode = 0xc0c; // EMovementJumpMode
		constexpr auto bEnableMovementSpeedCap = 0xc0d; // bool
		constexpr auto MovementSpeedCap = 0xc10; // float
		constexpr auto Friction = 0xc14; // float
		constexpr auto GroundStopSpeed = 0xc18; // float
		constexpr auto GroundMaxSpeed = 0xc1c; // float
		constexpr auto ProneMaxSpeed = 0xc20; // float
		constexpr auto GroundAcceleration = 0xc24; // float
		constexpr auto bUseGroundAccelerationCurve = 0xc28; // bool
		constexpr auto GroundAccelerationCurve = 0xc30; // UCurveFloat*
		constexpr auto CrouchSpeedScale = 0xc38; // float
		constexpr auto AllowedToJumpWhileCrouched = 0xc3c; // bool
		constexpr auto AirAccelerate = 0xc40; // float
		constexpr auto AirStopAccelerate = 0xc44; // float
		constexpr auto AirStrafeSpeed = 0xc48; // float
		constexpr auto AirStrafeAcceleration = 0xc4c; // float
		constexpr auto CPMAirControl = 0xc50; // float
		constexpr auto GroundTraceDistance = 0xc54; // float
		constexpr auto Overclip = 0xc58; // float
		constexpr auto Underclip = 0xc5c; // float
		constexpr auto PenRecoveryMultiplier = 0xc60; // float
		constexpr auto SkipClipWhenPen = 0xc64; // bool
		constexpr auto CollisionPenResolutionMultiplier = 0xc68; // float
		constexpr auto MaxClipPlanes = 0xc6c; // int32_t
		constexpr auto MaxStepSize = 0xc70; // float
		constexpr auto bSimpleCollision = 0xc74; // bool
		constexpr auto bEnableSweepAssistance = 0xc75; // bool
		constexpr auto bEnableBisectoring = 0xc76; // bool
		constexpr auto BisectorSpread = 0xc78; // float
		constexpr auto BisectorSize = 0xc7c; // float
		constexpr auto SlideMoveTraceDebugStyle = 0xc80; // FDebugTraceStyle
		constexpr auto Jumped = 0xcd8; // bool
		constexpr auto JumpStartZ = 0xcdc; // float
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x460; // FVector
		constexpr auto DirectionY = 0x46c; // FVector
		constexpr auto OffsetX = 0x478; // float
		constexpr auto OffsetY = 0x47c; // float
		constexpr auto LengthX = 0x480; // float
		constexpr auto LengthY = 0x484; // float
		constexpr auto Thickness = 0x488; // float
		constexpr auto SegmentFlags = 0x48c; // char
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UABP_Offensive_Incendiary_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
	}

	namespace n_UMapMarkerWidget {
		constexpr auto LinkedWorldMarker = 0x268; // UWorldMarkerComponent*
		constexpr auto CachedMaterial = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x278; // ABeacon*
		constexpr auto BeaconScaleX = 0x280; // float
		constexpr auto BeaconScaleY = 0x284; // float
		constexpr auto Zoom = 0x288; // float
		constexpr auto MarkerVerticalBox = 0x290; // UVerticalBox*
		constexpr auto MarkerImage = 0x298; // UImage*
		constexpr auto MarkerBackground = 0x2a0; // UImage*
		constexpr auto ScaledPlayerPos = 0x2a8; // FVector2D
		constexpr auto RotationAngle = 0x2b0; // float
		constexpr auto CanvasPanelSlot = 0x2b8; // UCanvasPanelSlot*
		constexpr auto ProgressMaterial = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto AllowColourChanges = 0x2c8; // bool
		constexpr auto bInActiveArray = 0x2f0; // bool
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_UPromodMetricsSystem {
		constexpr auto Metrics = 0x48; // TMap<FName, UPromodMetric*>
		constexpr auto FrameTime = 0x98; // UPromodMetric*
		constexpr auto ClientFPS = 0xa0; // UPromodMetric*
		constexpr auto IdleTime = 0xa8; // UPromodMetric*
		constexpr auto GameThreadTime = 0xb0; // UPromodMetric*
		constexpr auto RenderThreadTime = 0xb8; // UPromodMetric*
		constexpr auto RHIThreadTime = 0xc0; // UPromodMetric*
		constexpr auto GameLatency = 0xc8; // UPromodMetric*
		constexpr auto RenderLatency = 0xd0; // UPromodMetric*
		constexpr auto GameToRenderLatency = 0xd8; // UPromodMetric*
		constexpr auto GPUTemp = 0xe0; // UPromodMetric*
	}

	namespace n_AVaultAllowVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
	}

	namespace n_UABP_Karambit_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_3 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x3d0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_Slot_2 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x4b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x580; // FAnimNode_SequencePlayer
		constexpr auto ComboIndex = 0x600; // int32_t
	}

	namespace n_UABP_KaBar_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UNUIFlagIcon {
		constexpr auto IconVisibility = 0x278; // ESlateVisibility
		constexpr auto AmmoWidgetWidth = 0x27c; // float
	}

	namespace n_ABattalionSmokeGrenade {
		constexpr auto SmokeLoopSound = 0x3d0; // UAkAudioEvent*
		constexpr auto SmokeLoopEnd = 0x3d8; // UAkAudioEvent*
		constexpr auto AkComponent = 0x3e0; // UAkComponent*
		constexpr auto SmokeLength = 0x3ec; // float
		constexpr auto SmokeSoundLengthAddition = 0x3f0; // float
		constexpr auto SmokePostProcessBounds = 0x400; // UBoxComponent*
		constexpr auto SmokeBoxBounds = 0x408; // UBoxComponent*
		constexpr auto SmokePostProcess = 0x410; // UPostProcessComponent*
	}

	namespace n_UHUDDeathRow {
		constexpr auto Killer = 0x260; // UTextBlock*
		constexpr auto Killed = 0x268; // UTextBlock*
		constexpr auto DeathMessage = 0x270; // FDeathMessage
		constexpr auto GunImageMat = 0x318; // UMaterialInstance*
		constexpr auto WallbangImageMat = 0x320; // UMaterialInstance*
		constexpr auto HeadshotImageMat = 0x328; // UMaterialInstance*
		constexpr auto FallDamageImageMat = 0x330; // UMaterialInstance*
		constexpr auto SuicideImageMat = 0x338; // UMaterialInstance*
		constexpr auto NullImageMat = 0x340; // UMaterialInstance*
		constexpr auto GunImage = 0x348; // UImage*
		constexpr auto WallbangImage = 0x350; // UImage*
		constexpr auto HeadshotImage = 0x358; // UImage*
		constexpr auto TeamZeroCol = 0x360; // FSlateColor
		constexpr auto TeamOneCol = 0x388; // FSlateColor
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UMedalMoneySaver {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto DefaultKillTrackers = 0x50; // TArray<FDefaultKillTracker>
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_APingActor {
		constexpr auto WorldMarkerComponent = 0x220; // UWorldMarkerComponent*
		constexpr auto PingableData = 0x228; // FPingableData
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_UNUIAmmoCount {
		constexpr auto SavePositionPressed = 0x260; // bool
		constexpr auto ReloadPositionPressed = 0x261; // bool
		constexpr auto ResetRunPressed = 0x262; // bool
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x440; // UModel*
		constexpr auto BrushBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UAkXboxOneGDKInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneGDKApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneGDKAdvancedInitializationSettings
	}

	namespace n_UHUDSpectator {
		constexpr auto GameTimer = 0x278; // FString
		constexpr auto TeamAScore = 0x288; // int32_t
		constexpr auto TeamBScore = 0x28c; // int32_t
		constexpr auto SpecCameraMode = 0x290; // ESpectatorCameraMode
		constexpr auto IsOutlineEnabled = 0x291; // bool
		constexpr auto AreGrenadeLinesEnabled = 0x292; // bool
		constexpr auto PCOwner = 0x298; // APlayerController*
		constexpr auto OwnerSpectatorPawn = 0x2a0; // ABattalionSpectatorPawn*
		constexpr auto CurrentlySpectating = 0x2a8; // ABattalionPlayerState*
		constexpr auto PlayerNames = 0x2b0; // TArray<UHUDPlayerName*>
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_UMedalKillSurvivor {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UAkMacInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_USMStateInstance_Base {
		constexpr auto bEvalGraphsOnStart = 0x80; // bool
		constexpr auto bEvalGraphsOnUpdate = 0x81; // bool
		constexpr auto bEvalGraphsOnEnd = 0x82; // bool
		constexpr auto bEvalGraphsOnInitialize = 0x83; // bool
		constexpr auto bEvalGraphsOnRootStateMachineStart = 0x84; // bool
		constexpr auto bEvalGraphsOnRootStateMachineStop = 0x85; // bool
		constexpr auto bAlwaysUpdate = 0x86; // bool
		constexpr auto bDisableTickTransitionEvaluation = 0x87; // bool
		constexpr auto bDefaultToParallel = 0x88; // bool
		constexpr auto bAllowParallelReentry = 0x89; // bool
		constexpr auto bStayActiveOnStateChange = 0x8a; // bool
		constexpr auto bEvalTransitionsOnStart = 0x8b; // bool
		constexpr auto bExcludeFromAnyState = 0x8c; // bool
		constexpr auto OnStateBeginEvent = 0x90; // FMulticastInlineDelegate
		constexpr auto OnStateUpdateEvent = 0xa0; // FMulticastInlineDelegate
		constexpr auto OnStateEndEvent = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UBattalionMedalsDataAsset {
		constexpr auto Medals = 0x30; // TArray<FBattalionMedalEntity>
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UAkAssetDataSwitchContainer {
		constexpr auto SwitchContainers = 0x90; // TArray<UAkAssetDataSwitchContainerData*>
		constexpr auto DefaultGroupValue = 0xa0; // UAkGroupValue*
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UWBP_BlitzSpatialMarker_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto Icon = 0x270; // UImage*
		constexpr auto Label = 0x278; // UTextBlock*
		constexpr auto Root = 0x280; // UCanvasPanel*
		constexpr auto Min Fade = 0x288; // float
		constexpr auto Fade Multiplier = 0x28c; // float
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UWBP_Interaction_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HB_SubtitleContainer = 0x268; // UHorizontalBox*
		constexpr auto IMG_InteractionProgress = 0x270; // UImage*
		constexpr auto PlatformKeyImage = 0x278; // UPlatformKeyImage_C*
		constexpr auto TB_InteractionContext = 0x280; // UTextBlock*
		constexpr auto TB_SubtitleText = 0x288; // UTextBlock*
		constexpr auto TXT_Command = 0x290; // UTextBlock*
		constexpr auto CurrentInteractionTime = 0x298; // float
		constexpr auto Interaction Time = 0x29c; // float
		constexpr auto InteractionInProgress = 0x2a0; // bool
		constexpr auto CurrentProgress = 0x2a4; // float
		constexpr auto Delta Time = 0x2a8; // float
		constexpr auto ProgressMat = 0x2b0; // UMaterialInstanceDynamic*
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto RTPC = 0xe8; // UAkRtpc*
		constexpr auto Name = 0xf0; // FString
		constexpr auto FloatCurve = 0x100; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x180; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1b0; // FMovieSceneFloatChannel
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UBindingImageText_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_94 = 0x280; // UImage*
		constexpr auto TextBlock_88 = 0x288; // UTextBlock*
		constexpr auto lastState = 0x290; // int32_t
	}

	namespace n_ABlitzMode_Bomb {
		constexpr auto SpatialRespawnTimer = 0x300; // UWidgetComponent*
		constexpr auto SpatialBombMarker = 0x308; // UBlitzWidgetComponent*
		constexpr auto BombSpatialTexture = 0x310; // UTexture2D*
		constexpr auto DefendSpatialTexture = 0x318; // UTexture2D*
		constexpr auto DefuseSpatialTexture = 0x320; // UTexture2D*
		constexpr auto NeutralColor = 0x328; // FColor
		constexpr auto FriendlyColor = 0x32c; // FColor
		constexpr auto EnemyColor = 0x330; // FColor
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UAkHololensInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UWBP_BlitzRoundTracker_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InfoLabel = 0x268; // UTextBlock*
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_USettings_Backdrop__Option_Selected_C {
		constexpr auto Backdrop-colour-image = 0x260; // UImage*
		constexpr auto Breaker = 0x268; // UImage*
		constexpr auto Line = 0x270; // UImage*
		constexpr auto slant = 0x278; // UImage*
		constexpr auto slant_2 = 0x280; // UImage*
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UControllerLayoutSettingsItem_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto DoSetDisabled = 0x300; // UWidgetAnimation*
		constexpr auto BackdropSelected = 0x308; // USettings_Backdrop__Config_Selected_C*
		constexpr auto BackdropUnselected = 0x310; // USettings_Backdrop__Option_Unselected_C*
		constexpr auto Border_1 = 0x318; // UBorder*
		constexpr auto LeftRightSetting = 0x320; // ULeftRightConfig_C*
		constexpr auto NameText_2 = 0x328; // UTextBlock*
		constexpr auto Settings = 0x330; // USettings_C*
		constexpr auto LeftRightInt = 0x338; // int32_t
		constexpr auto LeftRightMin = 0x33c; // int32_t
		constexpr auto LeftRightMax = 0x340; // int32_t
		constexpr auto SelectedColour = 0x344; // FLinearColor
		constexpr auto UnselectedColour = 0x354; // FLinearColor
		constexpr auto AlternateColor = 0x364; // FLinearColor
		constexpr auto OptionChanged = 0x378; // FMulticastInlineDelegate
		constexpr auto Focused = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UNUIEquippedWeapons {
		constexpr auto PreviousWeaponIndex = 0x278; // int32_t
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_ABombPlayerController {
		constexpr auto NearZone = 0xc00; // ABombMode_Zone*
		constexpr auto NearBomb = 0xc08; // ABombMode_Bomb*
		constexpr auto ShowActionTakeBomb = 0xc10; // bool
		constexpr auto ShowActionPossessBot = 0xc11; // bool
		constexpr auto AttackingTeam = 0xc3c; // int32_t
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto Position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UKantanCartesianChartBase {
		constexpr auto WidgetStyle = 0x158; // FKantanCartesianChartStyle
		constexpr auto PlotScale = 0x280; // FKantanCartesianPlotScale
		constexpr auto DataPointSize = 0x2a4; // EKantanDataPointSize
		constexpr auto XAxisCfg = 0x2a8; // FCartesianAxisConfig
		constexpr auto YAxisCfg = 0x2f0; // FCartesianAxisConfig
		constexpr auto AxisTitlePadding = 0x338; // FMargin
		constexpr auto SeriesStyleSet = 0x348; // UKantanSeriesStyleSet*
		constexpr auto ManualStyleMappings = 0x350; // TArray<FSeriesStyleManualMapping>
		constexpr auto bAntiAlias = 0x360; // bool
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_UBattalionChallengeManager {
		constexpr auto BattInstance = 0x28; // UBattalionGameInstance*
		constexpr auto PFPlayerCache = 0x30; // UPFPlayerIdCache*
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UMedal20BombDOM {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMedalBiteBack {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UWBP_SwappingSides_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BringInScores = 0x268; // UWidgetAnimation*
		constexpr auto LeftTeamScore = 0x270; // UTextBlock*
		constexpr auto RightTeamScore = 0x278; // UTextBlock*
		constexpr auto Video = 0x280; // UImage*
		constexpr auto MediaPlayer_Background = 0x288; // UMediaPlayer*
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_UWBP_BlitzCanRespawnIndicator_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto OutCanRespawn = 0x268; // UTextBlock*
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_ABattalionGrenade {
		constexpr auto MeshComponent = 0x220; // USkeletalMeshComponent*
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto CapsuleCollision = 0x230; // UCapsuleComponent*
		constexpr auto MovementComponent = 0x238; // UProjectileMovementComponent*
		constexpr auto bCanCollideWithThrowingPlayer = 0x240; // bool
		constexpr auto FirstPersonMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto ThrowerCollisionGracePeriod = 0x250; // float
		constexpr auto TimerHandle_CollisionGracePeriodTimer = 0x258; // FTimerHandle
		constexpr auto bMovementEnabled = 0x260; // bool
		constexpr auto TimerHandle_GrenadeTick = 0x278; // FTimerHandle
		constexpr auto TimerHandle_GrenadeFuse = 0x280; // FTimerHandle
		constexpr auto DetonationSound = 0x290; // UAkAudioEvent*
		constexpr auto DetonationFX = 0x298; // UParticleSystem*
		constexpr auto DirectImpactDamageType = 0x2a0; // UDamageType*
		constexpr auto DetonationDamageType = 0x2a8; // UDamageType*
		constexpr auto bUseProjectileMovement = 0x2b0; // bool
		constexpr auto bManualExplode = 0x2b1; // bool
		constexpr auto bShowGrenadeMarker = 0x2b2; // bool
		constexpr auto FuseTime = 0x2b4; // float
		constexpr auto PseudoGravity = 0x2b8; // float
		constexpr auto PseudoZRestitution = 0x2bc; // float
		constexpr auto PseudoXYRestitution = 0x2c0; // float
		constexpr auto GrenadeSpinModifier = 0x2c4; // float
		constexpr auto ClampSpeed = 0x2c8; // float
		constexpr auto ThrowImpulse = 0x2cc; // float
		constexpr auto PawnVelocityModifier = 0x2d0; // float
		constexpr auto PawnVelocityClamp = 0x2d4; // float
		constexpr auto MyGrenadeType = 0x2d8; // EGrenadeType
		constexpr auto DirectHitDamage = 0x2dc; // FDirectHitDamage
		constexpr auto DamageFalloff = 0x308; // UCurveFloat*
		constexpr auto DefaultAkComponent = 0x310; // UAkComponent*
		constexpr auto BounceSoundSoft = 0x318; // UAkAudioEvent*
		constexpr auto BounceSoundHard = 0x320; // UAkAudioEvent*
		constexpr auto StopBounce = 0x328; // UAkAudioEvent*
		constexpr auto GrenadeTickingSound = 0x330; // UAkAudioEvent*
		constexpr auto MinGrenadeVelAudio = 0x338; // float
		constexpr auto HardGrenadeBounceTreshold = 0x33c; // float
		constexpr auto InstigatingController = 0x340; // AController*
		constexpr auto InstigatingPlayerState = 0x348; // APlayerState*
		constexpr auto GrenadeAnim = 0x350; // FWeaponAnim
		constexpr auto PrepareCameraSway = 0x370; // UCurveVector*
		constexpr auto ThrowCameraSway = 0x378; // UCurveVector*
		constexpr auto GrenadePrepTime = 0x380; // float
		constexpr auto GrenadeThrowTime = 0x384; // float
		constexpr auto GrenadeThrowAnimLength = 0x388; // float
		constexpr auto GrenadeThrowVerticalOffset = 0x38c; // float
		constexpr auto GrenadeThrowForwardOffset = 0x390; // float
		constexpr auto GrenadeThrowPitchOffset = 0x394; // float
		constexpr auto bShowDebugDamageRange = 0x398; // bool
		constexpr auto PhysMat = 0x3a0; // UPhysicalMaterial*
		constexpr auto SmokeDetonationDamageType = 0x3a8; // UDamageType*
		constexpr auto DecalMaterial = 0x3b0; // UMaterialInterface*
		constexpr auto GrenadeDecalSize = 0x3b8; // FVector
		constexpr auto GrenadeDecalLifeTime = 0x3c4; // float
		constexpr auto GrenadeObjectLifeSpan = 0x3c8; // float
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_ABP_StickyGrenade_C {
		constexpr auto UberGraphFrame = 0x3d0; // FPointerToUberGraphFrame
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UPromodQuickUtilDataAsset {
		constexpr auto QuickUtils = 0x30; // TArray<FQuickUtilItem>
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UMapIconComponent {
		constexpr auto OnIconAppearanceChanged = 0x460; // FMulticastInlineDelegate
		constexpr auto OnIconMaterialChanged = 0x470; // FMulticastInlineDelegate
		constexpr auto OnIconMaterialInstancesChanged = 0x480; // FMulticastInlineDelegate
		constexpr auto OnIconEnteredView = 0x490; // FMulticastInlineDelegate
		constexpr auto OnIconLeftView = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnIconDestroyed = 0x4b0; // FMulticastInlineDelegate
		constexpr auto OnIconHoverStart = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnIconHoverEnd = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnIconClicked = 0x4e0; // FMulticastInlineDelegate
		constexpr auto IconCategory = 0x4f0; // FName
		constexpr auto IconTexture = 0x4f8; // UTexture2D*
		constexpr auto IconMaterial_UMG = 0x500; // UMaterialInterface*
		constexpr auto IconMaterial_Canvas = 0x508; // UMaterialInterface*
		constexpr auto bIconVisible = 0x510; // bool
		constexpr auto bIconRotates = 0x511; // bool
		constexpr auto IconSizeUnit = 0x512; // EIconSizeUnit
		constexpr auto IconSize = 0x514; // float
		constexpr auto IconDrawColor = 0x518; // FLinearColor
		constexpr auto IconZOrder = 0x528; // int32_t
		constexpr auto bObjectiveArrowEnabled = 0x52c; // bool
		constexpr auto ObjectiveArrowTexture = 0x530; // UTexture2D*
		constexpr auto ObjectiveArrowMaterial_UMG = 0x538; // UMaterialInterface*
		constexpr auto ObjectiveArrowMaterial_Canvas = 0x540; // UMaterialInterface*
		constexpr auto bObjectiveArrowRotates = 0x548; // bool
		constexpr auto ObjectiveArrowSize = 0x54c; // float
		constexpr auto bIconInteractable = 0x550; // bool
		constexpr auto IconTooltipText = 0x554; // FName
		constexpr auto IconBackgroundInteraction = 0x55c; // EIconBackgroundInteraction
		constexpr auto IconFogInteraction = 0x55d; // EIconFogInteraction
		constexpr auto IconFogRevealThreshold = 0x560; // float
		constexpr auto bHideOwnerInsideFog = 0x564; // bool
		constexpr auto IsRenderedPerView = 0x568; // TMap<UMapViewComponent*, bool>
		constexpr auto InitialIconMaterial_UMG = 0x5b8; // UMaterialInterface*
		constexpr auto InitialIconMaterial_Canvas = 0x5c0; // UMaterialInterface*
		constexpr auto IconMaterialInstances_UMG = 0x5c8; // TMap<UUserWidget*, UMaterialInstanceDynamic*>
		constexpr auto IconMaterialInstances_Canvas = 0x618; // TMap<UMapRendererComponent*, UMaterialInstanceDynamic*>
		constexpr auto ObjectiveArrowMaterialInstances_Canvas = 0x668; // TMap<UMapRendererComponent*, UMaterialInstanceDynamic*>
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UMedalBase {
		constexpr auto GameMode = 0x28; // ABattalionGameMode*
		constexpr auto UUID = 0x30; // FString
		constexpr auto XPAward = 0x40; // int32_t
	}

	namespace n_UWBP_StaminaAndHealthBars_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HealthProgressBar = 0x268; // UWBP_ProgressBar_C*
		constexpr auto IMG_CriticalHealth = 0x270; // UImage*
		constexpr auto IMG_SideBars = 0x278; // UImage*
		constexpr auto InvalidationBox_4 = 0x280; // UInvalidationBox*
		constexpr auto StaminaProgressBar = 0x288; // UWBP_ProgressBar_C*
		constexpr auto Critical Health = 0x290; // float
		constexpr auto CurrentHealth = 0x294; // float
		constexpr auto MaxHealth = 0x298; // float
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_ABP_HandCannonFireUp_C {
		constexpr auto UberGraphFrame = 0x3e8; // FPointerToUberGraphFrame
		constexpr auto Fov_Amount_5036BB104963219A048D9184DE9560AE = 0x3f0; // float
		constexpr auto Fov__Direction_5036BB104963219A048D9184DE9560AE = 0x3f4; // ETimelineDirection
		constexpr auto FOV = 0x3f8; // UTimelineComponent*
		constexpr auto CameraModifier = 0x400; // UBP_HandCannonCameraModifier_C*
		constexpr auto MaxFovAddition = 0x408; // float
		constexpr auto IsClearingEffects = 0x40c; // bool
	}

	namespace n_UHUDTextDataAsset {
		constexpr auto HUDDataColour = 0x30; // FLinearColor
		constexpr auto HUDOverviewColour = 0x40; // FLinearColor
		constexpr auto HUDPromptColour = 0x50; // FLinearColor
		constexpr auto HUDIconColour = 0x60; // FLinearColor
		constexpr auto HUDHitKillSuccessColour = 0x70; // FLinearColor
		constexpr auto HUDMapTextColour = 0x80; // FLinearColor
		constexpr auto HUDWeaponIconColour = 0x90; // FLinearColor
		constexpr auto HUDDataColourBombPlanted = 0xa0; // FLinearColor
		constexpr auto HUDOverviewColourBombPlanted = 0xb0; // FLinearColor
		constexpr auto HUDPromptColourBombPlanted = 0xc0; // FLinearColor
		constexpr auto HUDIconColourBombPlanted = 0xd0; // FLinearColor
		constexpr auto HUDHitKillSuccessColourBombPlanted = 0xe0; // FLinearColor
		constexpr auto HUDMapTextColourBombPlanted = 0xf0; // FLinearColor
		constexpr auto HUDWeaponIconColourBombPlanted = 0x100; // FLinearColor
		constexpr auto HUDFriendlyColour = 0x110; // FLinearColor
		constexpr auto HUDFriendlyAlternateColour = 0x120; // FLinearColor
		constexpr auto HUDEnemyColour = 0x130; // FLinearColor
		constexpr auto HUDContestedColour = 0x140; // FLinearColor
	}

	namespace n_AWeapGun_ImpactsFailed_C {
		constexpr auto UberGraphFrame = 0x470; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x478; // USceneComponent*
	}

	namespace n_UMedalWorldWarZ {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_ABombPlayerState {
		constexpr auto bKeepClassOnLoadoutReset = 0x590; // bool
		constexpr auto Planting = 0x591; // bool
		constexpr auto QuickPlanting = 0x592; // bool
		constexpr auto Planted = 0x593; // bool
		constexpr auto Defusing = 0x594; // bool
		constexpr auto Plants = 0x598; // int32_t
		constexpr auto Defuses = 0x59c; // int32_t
		constexpr auto LastPurchasedWeapon = 0x5a0; // FString
		constexpr auto BombPlantingUpdate = 0x5b0; // FMulticastInlineDelegate
		constexpr auto BombDefusingUpdate = 0x5c0; // FMulticastInlineDelegate
		constexpr auto HasBomb = 0x5d0; // bool
	}

	namespace n_UBulkheadMulticastAudioEventWrapper {
		constexpr auto OwningPawn = 0x58; // APawn*
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UAB_Tactical_Smoke_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer = 0x2d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x358; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UBattalionSubtitlesDataAsset {
		constexpr auto Subtitles = 0x30; // TMap<float, FText>
	}

	namespace n_USMTransitionInstance {
		constexpr auto PriorityOrder = 0x80; // int32_t
		constexpr auto bRunParallel = 0x84; // bool
		constexpr auto bEvalIfNextStateActive = 0x85; // bool
		constexpr auto bCanEvaluate = 0x86; // bool
		constexpr auto bCanEvaluateFromEvent = 0x87; // bool
		constexpr auto bCanEvalWithStartState = 0x88; // bool
		constexpr auto OnTransitionEnteredEvent = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UWBP_Overtime_Shootout_Victory_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowScoreboard = 0x268; // UWidgetAnimation*
		constexpr auto Show = 0x270; // UWidgetAnimation*
		constexpr auto Feedback_GOOD = 0x278; // UWBP_CompletionFeedbackButton_C*
		constexpr auto Feedback_GREAT = 0x280; // UWBP_CompletionFeedbackButton_C*
		constexpr auto Feedback_MAD = 0x288; // UWBP_CompletionFeedbackButton_C*
		constexpr auto Feedback_SAD = 0x290; // UWBP_CompletionFeedbackButton_C*
		constexpr auto FeedbackBox = 0x298; // USizeBox*
		constexpr auto FeedbackHorizontalBox = 0x2a0; // UHorizontalBox*
		constexpr auto HB_SubScore = 0x2a8; // UHorizontalBox*
		constexpr auto Mov_Defeat = 0x2b0; // UImage*
		constexpr auto Mov_Flawless = 0x2b8; // UImage*
		constexpr auto Mov_Victory = 0x2c0; // UImage*
		constexpr auto Text_ScoreLeft = 0x2c8; // UTextBlock*
		constexpr auto Text_ScoreRight = 0x2d0; // UTextBlock*
		constexpr auto Text_SubScoreLeft = 0x2d8; // UTextBlock*
		constexpr auto Text_SubScoreRight = 0x2e0; // UTextBlock*
		constexpr auto Text_TimeLeftInState = 0x2e8; // UTextBlock*
		constexpr auto Text_VictorySubTitle = 0x2f0; // UTextBlock*
		constexpr auto Text_VictoryTitle = 0x2f8; // UTextBlock*
		constexpr auto WBP_SNDLeaderboard = 0x300; // UWBP_SNDLeaderboard_C*
		constexpr auto OVERTIME = 0x308; // bool
		constexpr auto Shotoout = 0x309; // bool
		constexpr auto Cargo = 0x30a; // bool
		constexpr auto WinningTeam = 0x30c; // int32_t
		constexpr auto Score_Team0 = 0x310; // int32_t
		constexpr auto Score_Team1 = 0x314; // int32_t
		constexpr auto MyTeamNum = 0x318; // int32_t
		constexpr auto MP_Defeat = 0x320; // UMediaPlayer*
		constexpr auto MP_Victory = 0x328; // UMediaPlayer*
		constexpr auto MP_Flawless = 0x330; // UMediaPlayer*
		constexpr auto Team 0Cargo Result = 0x338; // FCargoResultData
		constexpr auto Team 1Cargo Result = 0x368; // FCargoResultData
	}

	namespace n_UNuclearAssetHandle {
		constexpr auto Asset = 0x48; // UNuclearAsset*
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UAkGroupValue {
		constexpr auto GroupShortID = 0x40; // uint32_t
	}

	namespace n_UMedalArtilleryStrike {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UPFMatchmakingManager {
		constexpr auto OnFoundMatch = 0x30; // FMulticastInlineDelegate
		constexpr auto OnMatchmakingCancelled = 0x40; // FMulticastInlineDelegate
		constexpr auto OnStopMatchmakingCompleted = 0x50; // FMulticastInlineDelegate
		constexpr auto OnPartyMatchmakingReadyToJoin = 0x60; // FMulticastInlineDelegate
		constexpr auto PlayFabSubsystem = 0x70; // UPlayFabSubsystem*
		constexpr auto LonelyMatchmakerThreshold = 0x78; // float
	}

	namespace n_UJumper_LevelSelectBox_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Unselected = 0x268; // UWidgetAnimation*
		constexpr auto Selected = 0x270; // UWidgetAnimation*
		constexpr auto Blur-Steak = 0x278; // UImage*
		constexpr auto Border_1 = 0x280; // UBorder*
		constexpr auto Frame-UNLOCK = 0x288; // UOverlay*
		constexpr auto LevelButton = 0x290; // UButton*
		constexpr auto LevelName = 0x298; // UTextBlock*
		constexpr auto LevelOverlay = 0x2a0; // UImage*
		constexpr auto LevelTime = 0x2a8; // UTextBlock*
		constexpr auto Lock = 0x2b0; // UImage*
		constexpr auto MapImage = 0x2b8; // UImage*
		constexpr auto ProText = 0x2c0; // UTextBlock*
		constexpr auto SizeBox_1 = 0x2c8; // USizeBox*
		constexpr auto Star1 = 0x2d0; // UImage*
		constexpr auto Star1_2 = 0x2d8; // UImage*
		constexpr auto Star2 = 0x2e0; // UImage*
		constexpr auto Star3 = 0x2e8; // UImage*
		constexpr auto StarsHorizontalBox = 0x2f0; // UHorizontalBox*
		constexpr auto StarSizeBox = 0x2f8; // USizeBox*
		constexpr auto StarsRequiredCountText = 0x300; // UTextBlock*
		constexpr auto StarsRequiredHorizontalBox = 0x308; // UHorizontalBox*
		constexpr auto DisplayName = 0x310; // FString
		constexpr auto Level Name Text = 0x320; // FString
		constexpr auto ShouldShowTime = 0x330; // bool
		constexpr auto IsLocked = 0x331; // bool
		constexpr auto MapImageDataAsset = 0x338; // UMainMenuLevelSelectMapDataAsset*
		constexpr auto HoverColor = 0x340; // FLinearColor
		constexpr auto UnhoveredColor = 0x350; // FLinearColor
		constexpr auto LevelSelectScreen = 0x360; // UJumperLevelSelect*
		constexpr auto LoadoutDataAsset = 0x368; // UPromodLoadoutsDataAsset*
		constexpr auto Map Pack Manager = 0x370; // UMapPackManager*
		constexpr auto NewVar_1 = 0x378; // FText
		constexpr auto AskedForUpdate = 0x390; // bool
		constexpr auto KRStrings = 0x398; // TMap<FString, int32_t>
		constexpr auto ClassManagerDataAsset = 0x3e8; // UPromodClassManagerDataAsset*
		constexpr auto CurrentStarCount = 0x3f0; // int32_t
		constexpr auto StarUnlockRequirement = 0x3f4; // int32_t
		constexpr auto ShouldShowStars = 0x3f8; // bool
		constexpr auto ClickedEventDispatcher = 0x400; // FMulticastInlineDelegate
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_UMedalStealthCapture {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ACTFPlayerState {
		constexpr auto CarryingFlagHomeZone = 0x5a8; // ACTFMode_FlagZone*
		constexpr auto CarryingFlagTeam = 0x5b0; // char
		constexpr auto CarryingFlagNation = 0x5b1; // ENationType
		constexpr auto HasFlag = 0x5b2; // bool
		constexpr auto FlagsCaptured = 0x5b4; // int32_t
		constexpr auto FlagsReturned = 0x5b8; // int32_t
	}

	namespace n_UNUIConsoleGeneralOverview {
		constexpr auto GameOverview = 0x3a0; // EGameOverview
		constexpr auto Wartide = 0x3a1; // FGameOverviewConfig
		constexpr auto FFA = 0x3a6; // FGameOverviewConfig
		constexpr auto TDM = 0x3ab; // FGameOverviewConfig
		constexpr auto DOM = 0x3b0; // FGameOverviewConfig
		constexpr auto Grenade = 0x3b5; // FGameOverviewConfig
		constexpr auto ShowAll = 0x3ba; // FGameOverviewConfig
		constexpr auto CurrentOverviewConfig = 0x3bf; // FGameOverviewConfig
		constexpr auto LeftTeamWidgets = 0x3c8; // TArray<UNUIBombGameOverviewAvatar*>
		constexpr auto RightTeamWidgets = 0x3d8; // TArray<UNUIBombGameOverviewAvatar*>
		constexpr auto AvatarWidgetClass = 0x3e8; // UNUIBombGameOverviewAvatar*
		constexpr auto LeftPlayerList = 0x3f0; // TArray<ABombPlayerState*>
		constexpr auto RightPlayerList = 0x400; // TArray<ABombPlayerState*>
		constexpr auto LeftTeamAliveCount = 0x410; // FText
		constexpr auto RightTeamAliveCount = 0x428; // FText
		constexpr auto SpectatorScoreVisibility = 0x440; // ESlateVisibility
		constexpr auto LeftTeamAvatarsVisibility = 0x441; // ESlateVisibility
		constexpr auto RightTeamAvatarsVisibility = 0x442; // ESlateVisibility
		constexpr auto LeftTeamAliveCountVisibility = 0x443; // ESlateVisibility
		constexpr auto RightTeamAliveCountVisibility = 0x444; // ESlateVisibility
		constexpr auto SpectatorBombInteractionTimerVisibility = 0x445; // ESlateVisibility
		constexpr auto BombInteractionProgress = 0x448; // float
		constexpr auto OpponentPlayerState = 0x450; // AFFAPlayerState*
		constexpr auto LeftLeaderText = 0x458; // FText
		constexpr auto RightLeaderText = 0x470; // FText
		constexpr auto LeftLeaderVisibility = 0x488; // ESlateVisibility
		constexpr auto RightLeaderVisibility = 0x489; // ESlateVisibility
		constexpr auto LastZoneEntered = 0x490; // ADOMMode_Zone*
	}

	namespace n_UABP_Regen_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x340; // FAnimNode_SequencePlayer
	}

	namespace n_UNUIStyleScore {
		constexpr auto AllComboEntries = 0x260; // TArray<FOnFireAwardData>
	}

	namespace n_UHeader-Tab-WEAPONS-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Tab-Button = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
		constexpr auto bIsSelected = 0x2a0; // bool
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UHeader-Tab-OPTIONS-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Tab-Button = 0x288; // UButton*
		constexpr auto ButtonClicked = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UTextButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContentHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ContentTextBlock = 0x270; // UTextBlock*
		constexpr auto NewContentImage = 0x278; // UImage*
		constexpr auto RootButton = 0x280; // UButton*
		constexpr auto Text = 0x288; // FText
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto DefaultTextColor = 0x2b0; // FLinearColor
		constexpr auto HoverTextColor = 0x2c0; // FLinearColor
		constexpr auto DisabledTextColor = 0x2d0; // FLinearColor
		constexpr auto DefaultBackgroundColor = 0x2e0; // FLinearColor
		constexpr auto HoverBackgroundColor = 0x2f0; // FLinearColor
		constexpr auto DisabledBackgroundColor = 0x300; // FLinearColor
		constexpr auto StartEnabled = 0x310; // bool
		constexpr auto RoundedEdges = 0x311; // bool
		constexpr auto FontSize = 0x314; // int32_t
		constexpr auto NewNotificationRightAligned = 0x318; // bool
		constexpr auto Justification = 0x319; // ETextJustify
		constexpr auto ContentPadding = 0x31c; // FMargin
	}

	namespace n_UWBP_Spectating_C {
		constexpr auto Border_1 = 0x260; // UBorder*
		constexpr auto Border_2 = 0x268; // UBorder*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_161 = 0x278; // UImage*
		constexpr auto PlayerNameText = 0x280; // UTextBlock*
		constexpr auto HUDColour = 0x288; // UHUDTextDataAsset*
		constexpr auto BlueTeamPrimary = 0x290; // FLinearColor
		constexpr auto RedTeamPrimary = 0x2a0; // FLinearColor
		constexpr auto BlueTeamSecondary = 0x2b0; // FLinearColor
		constexpr auto RedTeamSecondary = 0x2c0; // FLinearColor
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UWishlist-button-Promod-LARGER_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_246 = 0x290; // UImage*
		constexpr auto Image_367 = 0x298; // UImage*
		constexpr auto Image_405 = 0x2a0; // UImage*
		constexpr auto Wish-Button = 0x2a8; // UButton*
		constexpr auto ButtonClicked = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_ATDMPlayerState {
		constexpr auto PendingInventory = 0x590; // FString
		constexpr auto FirstWeapon = 0x5a0; // bool
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_ABattalionWeapon_Melee {
		constexpr auto OffhandAnimClass = 0x890; // UAnimInstance*
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UBattalionCharacterMovement {
		constexpr auto MAXPOSITIONERRORSQUARED = 0xb30; // float
		constexpr auto LastClientAdjustmentTime = 0xb34; // float
		constexpr auto LastGoodMoveAckTime = 0xb38; // float
		constexpr auto bLargeCorrection = 0xb3c; // bool
		constexpr auto LargeCorrectionThreshold = 0xb40; // float
		constexpr auto MinTimeBetweenClientAdjustments = 0xb44; // float
		constexpr auto AvgSpeed = 0xb4c; // float
		constexpr auto MaxFallingAcceleration = 0xb50; // float
		constexpr auto MaxSwimmingAcceleration = 0xb54; // float
		constexpr auto FastInitialAcceleration = 0xb58; // float
		constexpr auto MaxFastAccelSpeed = 0xb5c; // float
		constexpr auto MaxTargetingClampAccel = 0xb60; // float
		constexpr auto MaxSprintingAccel = 0xb64; // float
		constexpr auto MaxRelativeSwimmingAccelNumerator = 0xb68; // float
		constexpr auto MaxRelativeSwimmingAccelDenominator = 0xb6c; // float
		constexpr auto BrakingDecelerationSliding = 0xb70; // float
		constexpr auto DefaultBrakingDecelerationWalking = 0xb74; // float
		constexpr auto LadderFriction = 0xb78; // float
		constexpr auto LadderJumpVelocity = 0xb7c; // float
		constexpr auto LadderMaxSpeed = 0xb80; // float
		constexpr auto PlayerLadderClimbingMultiplier = 0xb84; // float
		constexpr auto ADSLandPunishTimeScalar = 0xb88; // float
		constexpr auto LandForwardVelocityTolerance = 0xb8c; // float
		constexpr auto LandingPunishDivisorMin = 0xb90; // float
		constexpr auto LandingPunishDivisorMax = 0xb94; // float
		constexpr auto ADSLandPunishTimeHipMovementTimeDecayScalar = 0xb98; // float
		constexpr auto SprintLandPunishTimeScalar = 0xb9c; // float
		constexpr auto SprintLandPunishTimeScalarMax = 0xba0; // float
		constexpr auto SprintLandPunishTimeScalarMin = 0xba4; // float
		constexpr auto SprintJumpPunishTimeScalar = 0xba8; // float
		constexpr auto SprintLandTwicePunishTimeScalar = 0xbac; // float
		constexpr auto FlagSpeedModifierScalar = 0xbb0; // float
		constexpr auto MaxWaterSpeed = 0xbb4; // float
		constexpr auto SwimmingWallPushImpulse = 0xbb8; // float
		constexpr auto bFallingInWater = 0xbbc; // bool
		constexpr auto QuakeJumpScalar = 0xbc0; // float
		constexpr auto MaxWalkSpeedProne = 0xbc8; // float
		constexpr auto ProneHalfHeight = 0xbcc; // float
		constexpr auto ProneBlockDelta = 0xbe0; // float
		constexpr auto LastProneBlockCheck = 0xbe4; // FVector
		constexpr auto NewProneBlockCheck = 0xbf0; // FVector
		constexpr auto LastProneLocation = 0xbfc; // FVector
		constexpr auto CrouchToStandTime = 0xc14; // float
		constexpr auto ProneToCrouchTime = 0xc18; // float
		constexpr auto StandingToCrouchTime = 0xc1c; // float
		constexpr auto CrouchToProneTime = 0xc20; // float
		constexpr auto bProneMaintainsBaseLocation = 0xc24; // char : 1
		constexpr auto EasyImpactImpulse = 0xc28; // float
		constexpr auto EasyImpactDamage = 0xc2c; // float
		constexpr auto FullImpactImpulse = 0xc30; // float
		constexpr auto FullImpactDamage = 0xc34; // float
		constexpr auto ImpactMaxHorizontalVelocity = 0xc38; // float
		constexpr auto ImpactMaxVerticalFactor = 0xc3c; // float
		constexpr auto MaxUndampedImpulse = 0xc40; // float
		constexpr auto bIsTaunting = 0xc44; // bool
		constexpr auto MaxMultiJumpCount = 0xc48; // int32_t
		constexpr auto CurrentMultiJumpCount = 0xc4c; // int32_t
		constexpr auto bExplicitJump = 0xc50; // bool
		constexpr auto bAllowJumpMultijumps = 0xc51; // bool
		constexpr auto MaxMultiJumpZSpeed = 0xc54; // float
		constexpr auto bAlwaysAllowFallingMultiJump = 0xc58; // bool
		constexpr auto MultiJumpImpulse = 0xc5c; // float
		constexpr auto MultiJumpAirControl = 0xc60; // float
		constexpr auto bRestrictedJump = 0xc64; // bool
		constexpr auto LandingStepUp = 0xce4; // float
		constexpr auto LandingAssistBoost = 0xce8; // float
		constexpr auto bJumpAssisted = 0xcec; // bool
		constexpr auto JumpTime = 0xcf0; // float
		constexpr auto CrouchJumpVelocity = 0xcf4; // float
		constexpr auto JumpHalfJumpDivisor = 0xcf8; // float
		constexpr auto JumpHalfJumpTimeout = 0xcfc; // float
		constexpr auto JumpStartZ = 0xd00; // float
		constexpr auto bIsAgainstWall = 0xd04; // bool
		constexpr auto LastCheckedAgainstWall = 0xd08; // float
		constexpr auto SimulatedVelocity = 0xd0c; // FVector
		constexpr auto CurrentServerMoveTime = 0xd18; // float
		constexpr auto bWantsToInfectionSprint = 0xd21; // char : 1
	}

	namespace n_UMedal15BombWartide {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_UWBP_BlitzGameoverviewWidget_C {
		constexpr auto UberGraphFrame = 0x390; // FPointerToUberGraphFrame
		constexpr auto AttackBlock = 0x398; // UTextBlock*
		constexpr auto BackupTimer = 0x3a0; // UTextBlock*
		constexpr auto Bomb = 0x3a8; // UImage*
		constexpr auto Clock = 0x3b0; // UImage*
		constexpr auto DefenceBlock = 0x3b8; // UTextBlock*
		constexpr auto LeftTeamPlayerIcons = 0x3c0; // UHorizontalBox*
		constexpr auto LeftTeamPlayersAliveValue = 0x3c8; // UTextBlock*
		constexpr auto NotReady = 0x3d0; // UTextBlock*
		constexpr auto PlatformKeyImage = 0x3d8; // UPlatformKeyImage_C*
		constexpr auto PlayerList = 0x3e0; // UTextBlock*
		constexpr auto PressOrHoldTextBox = 0x3e8; // UTextBlock*
		constexpr auto Progress = 0x3f0; // UTextBlock*
		constexpr auto ReadyupBox = 0x3f8; // UHorizontalBox*
		constexpr auto RightTeamPlayerIcons = 0x400; // UHorizontalBox*
		constexpr auto RightTeamPlayersAliveValue = 0x408; // UTextBlock*
		constexpr auto ScaleBox_1 = 0x410; // UScaleBox*
		constexpr auto Spacer_3 = 0x418; // USpacer*
		constexpr auto Spacer_291 = 0x420; // USpacer*
		constexpr auto TeamInfoWidgetSwitcher = 0x428; // UWidgetSwitcher*
		constexpr auto TextBlock_4 = 0x430; // UTextBlock*
		constexpr auto Timer = 0x438; // UTextBlock*
		constexpr auto ToReadyUp = 0x440; // UTextBlock*
		constexpr auto VerticalBox_150 = 0x448; // UVerticalBox*
		constexpr auto WBP_BlitzBombProgress = 0x450; // UWBP_BlitzBombProgress_C*
		constexpr auto WBP_BlitzRoundTracker = 0x458; // UWBP_BlitzRoundTracker_C*
		constexpr auto WBP_BlitzScore_Team1 = 0x460; // UWBP_BlitzScore_C*
		constexpr auto WBP_BlitzScore_Team2 = 0x468; // UWBP_BlitzScore_C*
		constexpr auto WBP_BlitzTeamRole = 0x470; // UWBP_BlitzTeamRole_C*
		constexpr auto LeftTeamWidgets = 0x478; // TArray<UWBP_BlitzPlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x488; // TArray<UWBP_BlitzPlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x498; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x49c; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x4a0; // int32_t
		constexpr auto bIsShootout = 0x4a4; // bool
		constexpr auto HUDColour = 0x4a8; // UHUDTextDataAsset*
	}

	namespace n_UPFPlayerDataManager {
		constexpr auto OnReceivedTitleData = 0x28; // FMulticastInlineDelegate
		constexpr auto OnReceivedPlayerData = 0x38; // FMulticastInlineDelegate
		constexpr auto OnReceivedPlayerStats = 0x48; // FMulticastInlineDelegate
		constexpr auto PlayFabSubsystem = 0x58; // UPlayFabSubsystem*
		constexpr auto bIsServer = 0x60; // bool
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UOnFireAwardsDataAsset {
		constexpr auto AwardData = 0x30; // TMap<EOnFireAwardType, FOnFireAwardData>
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto CameraSettings = 0x268; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x270; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x278; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x280; // char : 1
		constexpr auto bOverrideInstanceData = 0x280; // char : 1
		constexpr auto bReplicatePlayback = 0x280; // char : 1
		constexpr auto DefaultInstanceData = 0x288; // UObject*
		constexpr auto BurnInInstance = 0x290; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x298; // bool
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UMapPlayerWidget {
		constexpr auto LinkedCharacter = 0x268; // ABattalionCharacter*
		constexpr auto CachedMaterial = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Beacon = 0x278; // ABeacon*
		constexpr auto BeaconScaleX = 0x280; // float
		constexpr auto BeaconScaleY = 0x284; // float
		constexpr auto Image = 0x288; // UImage*
		constexpr auto PlayerName = 0x290; // UTextBlock*
		constexpr auto SpectatingID = 0x298; // UTextBlock*
		constexpr auto SpecID = 0x2a0; // FString
		constexpr auto ScaledPlayerPos = 0x2b0; // FVector2D
		constexpr auto RotationAngle = 0x2b8; // float
		constexpr auto CanvasPanelSlot = 0x2c0; // UCanvasPanelSlot*
		constexpr auto bInActiveArray = 0x2f4; // bool
	}

	namespace n_UAB_Offensive_Frag_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_ACamPathSplineActor {
		constexpr auto SplineCompLoc = 0x220; // USplineComponent*
		constexpr auto SplineCompRot = 0x228; // USplineComponent*
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UAB_WW2_Sniper_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UCoinDataAsset {
		constexpr auto Coins = 0x30; // TArray<FCoinEntity>
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UNUIFFAPlayerScore {
		constexpr auto PlayerScore = 0x278; // int32_t
		constexpr auto OldPlayerScore = 0x27c; // int32_t
	}

	namespace n_AMapAreaBase {
		constexpr auto AreaBounds = 0x220; // UBoxComponent*
		constexpr auto AreaPrimitive = 0x228; // UMapAreaPrimitiveComponent*
		constexpr auto AreaMapView = 0x230; // UMapViewComponent*
	}

	namespace n_UABP_r700_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x4f0; // FAnimNode_Slot
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UWBP_KillSuccess_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Outro = 0x268; // UWidgetAnimation*
		constexpr auto Glitch = 0x270; // UWidgetAnimation*
		constexpr auto IB_Root = 0x278; // UInvalidationBox*
		constexpr auto KillFeedbackText = 0x280; // UTextBlock*
		constexpr auto KillFeedbackText_BLUE = 0x288; // UTextBlock*
		constexpr auto KillFeedbackText_RED = 0x290; // UTextBlock*
		constexpr auto CurrentlyVisible = 0x298; // bool
		constexpr auto CurrentVisibleTimer = 0x29c; // float
		constexpr auto MaxVisibleTimer = 0x2a0; // float
		constexpr auto HUDText Colour = 0x2a8; // UHUDTextDataAsset*
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x470; // bool
		constexpr auto bUseAsyncCooking = 0x471; // bool
		constexpr auto ProcMeshBodySetup = 0x478; // UBodySetup*
		constexpr auto ProcMeshSections = 0x480; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x490; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4a0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4c0; // TArray<UBodySetup*>
	}

	namespace n_UWBP_CircularProgressBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CPB_Image = 0x268; // UImage*
		constexpr auto CPB_SizeBox = 0x270; // USizeBox*
		constexpr auto Scale = 0x278; // float
		constexpr auto DMI = 0x280; // UMaterialInstanceDynamic*
		constexpr auto MaxValue = 0x288; // float
		constexpr auto MinValue = 0x28c; // float
		constexpr auto tmp = 0x290; // float
		constexpr auto CurrentPercentage = 0x294; // float
		constexpr auto CurrentRealValue = 0x298; // float
		constexpr auto Color And Opacity = 0x29c; // FLinearColor
		constexpr auto LastPercentage = 0x2ac; // float
		constexpr auto LastRealvalue = 0x2b0; // float
		constexpr auto EventProgressBarFilled = 0x2b8; // FMulticastInlineDelegate
		constexpr auto EventProgressBarZero = 0x2c8; // FMulticastInlineDelegate
		constexpr auto InitialValue = 0x2d8; // float
		constexpr auto IsInitialValueAPercentage = 0x2dc; // bool
		constexpr auto Tint = 0x2e0; // FLinearColor
		constexpr auto BackgroundColor = 0x2f0; // FLinearColor
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_AKillRunGrenadePickup {
		constexpr auto bUnlimitedSupply = 0x248; // bool
		constexpr auto NumSupply = 0x24c; // int32_t
		constexpr auto Grenade = 0x250; // ABattalionGrenade*
		constexpr auto GrenadeClass = 0x258; // ABattalionGrenade*
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_UMedal20BombTDM {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
	}

	namespace n_UNuclearAssetManager {
		constexpr auto PendingHandles = 0x458; // TMap<FPrimaryAssetId, UNuclearAssetHandle*>
		constexpr auto LoadedHandles = 0x4a8; // TMap<FPrimaryAssetId, UNuclearAssetHandle*>
	}

	namespace n_UMedal30BombFFA {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UWBP_ClosedPrototypeVersion_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto GameID = 0x298; // UTextBlock*
		constexpr auto PGRSizeBox = 0x2a0; // USizeBox*
		constexpr auto versionText = 0x2a8; // UTextBlock*
	}

	namespace n_ABlitzGameMode {
		constexpr auto CurrentStageID = 0xd18; // int32_t
		constexpr auto bUseRandomStages = 0xd1c; // bool
		constexpr auto BombRespawnTime = 0xd20; // float
		constexpr auto BombRespawnTimeLeft = 0xd24; // float
		constexpr auto bShouldBombRespawn = 0xd28; // bool
		constexpr auto BlitzGameState = 0xd30; // ABlitzGameState*
		constexpr auto BombCollectedSound = 0xd38; // UAkAudioEvent*
		constexpr auto BombCollectedEnemySound = 0xd40; // UAkAudioEvent*
		constexpr auto BombDefusedByEnemySound = 0xd48; // UAkAudioEvent*
		constexpr auto BombDefusedByFriendlySound = 0xd50; // UAkAudioEvent*
		constexpr auto BombDroppedFriendSound = 0xd58; // UAkAudioEvent*
		constexpr auto BombDroppedEnemySound = 0xd60; // UAkAudioEvent*
		constexpr auto BombPlantedDefendItSound = 0xd68; // UAkAudioEvent*
		constexpr auto BombPlantedDefuseItSound = 0xd70; // UAkAudioEvent*
		constexpr auto BombStartedBeepsSound = 0xd78; // UAkAudioEvent*
		constexpr auto BombStoppedBeepsSound = 0xd80; // UAkAudioEvent*
		constexpr auto GameStartSound = 0xd88; // UAkAudioEvent*
		constexpr auto GameStartInstructionsSound = 0xd90; // UAkAudioEvent*
		constexpr auto RespawnPlayerSound = 0xd98; // UAkAudioEvent*
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UNUIFFAGameOverview {
		constexpr auto OpponentPlayerState = 0x3a0; // AFFAPlayerState*
		constexpr auto LeftLeaderText = 0x3a8; // FText
		constexpr auto RightLeaderText = 0x3c0; // FText
		constexpr auto LeftLeaderVisibility = 0x3d8; // ESlateVisibility
		constexpr auto RightLeaderVisibility = 0x3d9; // ESlateVisibility
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UComboItemList_C {
		constexpr auto ScrollBox_1 = 0x260; // UScrollBox*
		constexpr auto Combo = 0x268; // UCombo_C*
	}

	namespace n_USMBlueprintGeneratedClass {
		constexpr auto RootGuid = 0x328; // FGuid
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UFOVParticleSystemComponent {
		constexpr auto FOV = 0x698; // float
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x470; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x478; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x480; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x490; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x598; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5a0; // int32_t
		constexpr auto MinLodModel = 0x5a4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5b0; // float
		constexpr auto LODInfo = 0x5c0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5f4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLOD = 0x5f6; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5f6; // char : 1
		constexpr auto bForceWireframe = 0x5f6; // char : 1
		constexpr auto bDisplayBones = 0x5f6; // char : 1
		constexpr auto bDisableMorphTarget = 0x5f6; // char : 1
		constexpr auto bHideSkin = 0x5f7; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5f7; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5f7; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5f7; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5f7; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5f7; // char : 1
		constexpr auto bRecentlyRendered = 0x5f7; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5f7; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5f8; // char : 1
		constexpr auto bCPUSkinning = 0x5f8; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bRenderStatic = 0x5f8; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5f8; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5f9; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5f9; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5fc; // float
		constexpr auto CachedWorldSpaceBounds = 0x610; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x630; // FMatrix
	}

	namespace n_UPlatformKeyImage_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto ControllerButton = 0x278; // UImage*
		constexpr auto PCText = 0x280; // UTextBlock*
		constexpr auto SizeBox_1 = 0x288; // USizeBox*
		constexpr auto xbox = 0x290; // UTexture2D*
		constexpr auto PlayStation = 0x298; // UTexture2D*
		constexpr auto Invert = 0x2a0; // bool
		constexpr auto PC = 0x2a8; // FText
		constexpr auto TEST = 0x2c0; // bool
		constexpr auto IsControllerImage = 0x2c1; // bool
		constexpr auto BindName = 0x2c4; // FName
		constexpr auto PrevKey = 0x2d0; // FText
		constexpr auto IsAvailable = 0x2e8; // bool
		constexpr auto TextClampRequired = 0x2e9; // bool
		constexpr auto TextClampLimit = 0x2ec; // int32_t
	}

	namespace n_AAkAcousticPortal {
		constexpr auto InitialState = 0x258; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x25c; // float
		constexpr auto ObstructionCollisionChannel = 0x260; // ECollisionChannel
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_UNUITimedPopup {
		constexpr auto ShowTime = 0x268; // float
		constexpr auto IsShowing = 0x26c; // bool
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UWBP_Inventory_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fire_Chromatic = 0x268; // UWidgetAnimation*
		constexpr auto Default = 0x270; // UWidgetAnimation*
		constexpr auto Fade_Out = 0x278; // UWidgetAnimation*
		constexpr auto Fade_In = 0x280; // UWidgetAnimation*
		constexpr auto Fade_In_and_out = 0x288; // UWidgetAnimation*
		constexpr auto Glitch = 0x290; // UWidgetAnimation*
		constexpr auto InventoryItem_Bomb = 0x298; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_MELEE = 0x2a0; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_MELEE_BLUE_2 = 0x2a8; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_MELEE_RED_2 = 0x2b0; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Primary = 0x2b8; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Primary_BLUE = 0x2c0; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Primary_RED = 0x2c8; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Secondary = 0x2d0; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Secondary_BLUE = 0x2d8; // UWBP_InventoryItem_C*
		constexpr auto InventoryItem_Secondary_RED = 0x2e0; // UWBP_InventoryItem_C*
		constexpr auto HighlightedSlotColour = 0x2e8; // FLinearColor
		constexpr auto NonHighlightedSlotColour = 0x2f8; // FLinearColor
		constexpr auto NonHighlightedColourAlpha = 0x308; // FLinearColor
		constexpr auto RedHighlightedColour = 0x318; // FLinearColor
		constexpr auto BlueHighLighted = 0x328; // FLinearColor
		constexpr auto Is Playing Fade in Out = 0x338; // bool
		constexpr auto HUDColour = 0x340; // UHUDTextDataAsset*
	}

	namespace n_UPFPlayerIdCache {
		constexpr auto PlayFabSubsystem = 0x30; // UPlayFabSubsystem*
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_UComboItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x268; // UButton*
		constexpr auto TextBlock_1 = 0x270; // UTextBlock*
		constexpr auto Combo = 0x278; // UCombo_C*
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_ABattalionPlayerSpawn {
		constexpr auto InitialSpawn = 0x250; // bool
		constexpr auto Team = 0x254; // int32_t
		constexpr auto ModeWeights = 0x258; // TArray<int32_t>
		constexpr auto SpawnWeightDistanceCurve = 0x268; // UCurveFloat*
		constexpr auto FinalWeight = 0x270; // float
		constexpr auto bIsShootoutSpawn = 0x274; // bool
	}

	namespace n_UABP_STimshot_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x378; // FAnimNode_Slot
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UPlayFabMatchmakerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xd8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xe0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xe8; // UPlayFabJsonObject*
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_ABattalionPlayerCameraManager {
		constexpr auto CurrentCamBonus = 0x27cc; // float
		constexpr auto HigherScoreBonus = 0x27d0; // float
		constexpr auto CurrentActionBonus = 0x27d4; // float
		constexpr auto SingleEnemyProximityBonus = 0x27d8; // float
		constexpr auto LastThirdPersonTarget = 0x2828; // AActor*
		constexpr auto ThirdPersonCameraSmoothingSpeed = 0x2830; // float
		constexpr auto ViewingCharacter = 0x2838; // ABattalionCharacter*
		constexpr auto BattInstance = 0x2840; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x2848; // UBattalionSettings*
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto NO = 0x40; // FExpressionInput
		constexpr auto YES = 0x54; // FExpressionInput
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UMedal30BombHQ {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_UWBP_ChatFeed_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto ChatEntriesContainer = 0x270; // UVerticalBox*
		constexpr auto ChatEntryBox = 0x278; // UBorder*
		constexpr auto Typing_Author_Text_2 = 0x280; // UTextBlock*
		constexpr auto Typing_Channel_Text = 0x288; // UTextBlock*
		constexpr auto Typing_Message_Text = 0x290; // UMultiLineEditableText*
		constexpr auto ChannelTypingIn = 0x298; // EChatChannels
		constexpr auto MessageToSend = 0x2a0; // FText
		constexpr auto MaxMessages = 0x2b8; // int32_t
		constexpr auto CurrentMessages = 0x2bc; // int32_t
		constexpr auto FullyVisibleTime = 0x2c0; // float
		constexpr auto bIsWriting = 0x2c4; // bool
		constexpr auto FadeOutTimer = 0x2c8; // FTimerHandle
		constexpr auto bIsDead = 0x2d0; // bool
		constexpr auto PlayerName = 0x2d8; // FString
		constexpr auto Is Shown = 0x2e8; // bool
		constexpr auto TextLengthMax = 0x2ec; // int32_t
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UWBP_Hitmarker_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FlashHitKilled = 0x268; // UWidgetAnimation*
		constexpr auto FlashHit = 0x270; // UWidgetAnimation*
		constexpr auto BottomLeftMarker = 0x278; // UImage*
		constexpr auto BottomRightMarker = 0x280; // UImage*
		constexpr auto Equipment = 0x288; // UImage*
		constexpr auto EquipmentDestroyed = 0x290; // UImage*
		constexpr auto HitMarkerContextSwitcher = 0x298; // UWidgetSwitcher*
		constexpr auto IB_Root = 0x2a0; // UInvalidationBox*
		constexpr auto TopLeftMarker = 0x2a8; // UImage*
		constexpr auto TopRightMarker = 0x2b0; // UImage*
		constexpr auto HUD Colour = 0x2b8; // UHUDTextDataAsset*
	}

	namespace n_AHeadquartersPlayerController {
		constexpr auto StartTickingEvent = 0xc10; // UAkAudioEvent*
		constexpr auto StopTickingEvent = 0xc18; // UAkAudioEvent*
		constexpr auto CurrentObjective = 0xc20; // AHeadquarters_Zone*
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_APostProcessingSettings {
		constexpr auto MinPP = 0x220; // UPostProcessComponent*
		constexpr auto MaxPP = 0x228; // UPostProcessComponent*
		constexpr auto GamePP = 0x230; // UPostProcessComponent*
		constexpr auto ColorStrength = 0x238; // float
		constexpr auto ColorTint = 0x23c; // float
		constexpr auto WorldContrast = 0x240; // float
		constexpr auto SkyFade = 0x244; // float
		constexpr auto Vignette = 0x248; // float
		constexpr auto LightbouncePower = 0x24c; // float
		constexpr auto AOStrength = 0x250; // float
		constexpr auto LensFlareIntensity = 0x254; // float
		constexpr auto ExposureAmount = 0x258; // float
		constexpr auto Sharpness = 0x25c; // float
	}

	namespace n_UWBP_HUDMasterWidget_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto BlockedMessagesVerticalBox = 0x270; // UVerticalBox*
		constexpr auto ClientFPS = 0x278; // USizeBox*
		constexpr auto DebugUI = 0x280; // UDebugUI_C*
		constexpr auto FrameTime = 0x288; // USizeBox*
		constexpr auto GameLatency = 0x290; // USizeBox*
		constexpr auto GameThreadTime = 0x298; // USizeBox*
		constexpr auto GameToRenderLatency = 0x2a0; // USizeBox*
		constexpr auto GPUTemp = 0x2a8; // USizeBox*
		constexpr auto IdleTime = 0x2b0; // USizeBox*
		constexpr auto InGameLeaderboard = 0x2b8; // UInGameLeaderboard_C*
		constexpr auto RenderLatency = 0x2c0; // USizeBox*
		constexpr auto RenderThreadTime = 0x2c8; // USizeBox*
		constexpr auto RHIThreadTime = 0x2d0; // USizeBox*
		constexpr auto WBP_ActionPrompt = 0x2d8; // UWBP_ActionPrompt_C*
		constexpr auto WBP_BasicScoreAward = 0x2e0; // UWBP_BasicScoreAward_C*
		constexpr auto WBP_ChatFeed_5 = 0x2e8; // UWBP_ChatFeed_C*
		constexpr auto WBP_Crosshair = 0x2f0; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x2f8; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_GrenadeIndicator = 0x300; // UWBP_GrenadeIndicator_C*
		constexpr auto WBP_Hitmarker = 0x308; // UWBP_Hitmarker_C*
		constexpr auto WBP_HUDEquipment_C = 0x310; // UWBP_SP_HUDEquipment_C*
		constexpr auto WBP_Interaction = 0x318; // UWBP_Interaction_C*
		constexpr auto WBP_InteractionEvent = 0x320; // UWBP_InteractionEvent_C*
		constexpr auto WBP_JumperTipIntro = 0x328; // UWBP_JumperTipIntro_C*
		constexpr auto WBP_Killfeed = 0x330; // UWBP_Killfeed_C*
		constexpr auto WBP_KillRunGameOverview = 0x338; // UWBP_KillRunGameOverview_C*
		constexpr auto WBP_KillSuccess = 0x340; // UWBP_KillSuccess_C*
		constexpr auto WBP_MiniMap = 0x348; // UWBP_MiniMap_C*
		constexpr auto WBP_SniperVignette = 0x350; // UWBP_SniperVignette_C*
		constexpr auto WBP_StaminaAndHealthBars = 0x358; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x360; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_StyleScoreAwardFeed = 0x368; // UWBP_StyleScoreAwardFeed_C*
		constexpr auto WBP_SystemTimeDisplay = 0x370; // UWBP_SystemTimeDisplay_C*
		constexpr auto WBP_Vault = 0x378; // UWBP_Vault_C*
		constexpr auto WBP_WeaponPickup = 0x380; // UWBP_WeaponPickup_C*
		constexpr auto IsPlayingHealth = 0x388; // bool
		constexpr auto bBlockedUIFound = 0x389; // bool
		constexpr auto CurrentBlockedMessages = 0x390; // TArray<UWBP_GenericBlockedMessage_C*>
		constexpr auto StaminaEvent = 0x3a0; // FStaminaEvent
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x258; // float
		constexpr auto Contrast = 0x25c; // float
		constexpr auto OcclusionExponent = 0x260; // float
		constexpr auto MinOcclusion = 0x264; // float
		constexpr auto OcclusionTint = 0x268; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x26c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x270; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x274; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x278; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x27c; // float
		constexpr auto OcclusionCombineMode = 0x280; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_APromodWorldSettings {
		constexpr auto bAutoAssignTeam = 0x3a0; // bool
		constexpr auto AssignedTeam = 0x3a4; // int32_t
		constexpr auto bHasDefaultClass = 0x3a8; // bool
		constexpr auto AssignedClass = 0x3ac; // int32_t
		constexpr auto DefaultSpecialGrenade = 0x3b0; // ESpecialGrenadeType
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_AOneInTheChamberPlayerState {
		constexpr auto NumLivesLeft = 0x5b0; // int32_t
	}

	namespace n_UVODataAsset {
		constexpr auto Category = 0x30; // TArray<FVOCategory>
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_UAkAssetBase {
		constexpr auto PlatformAssetData = 0x40; // UAkAssetPlatformData*
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UPFServerSlotManager {
		constexpr auto OnMatchStarted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBackfilledPlayers = 0x38; // FMulticastInlineDelegate
		constexpr auto OnTimedOutPlayers = 0x48; // FMulticastInlineDelegate
		constexpr auto PlayFabSubsystem = 0x58; // UPlayFabSubsystem*
	}

	namespace n_UBattalionAudio {
		constexpr auto MusicPlayEvent = 0x28; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto MusicStopEvent = 0x50; // TSoftObjectPtr<UAkAudioEvent>
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x51; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x58; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto SplitSwitchContainerMedia = 0xa8; // bool
		constexpr auto SplitMediaPerFolder = 0xa9; // bool
		constexpr auto UseEventBasedPackaging = 0xaa; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0xab; // bool
		constexpr auto CommandletCommitMessage = 0xb0; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0xc0; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x110; // bool
		constexpr auto bEnableMultiCoreRendering = 0x111; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x112; // bool
		constexpr auto FixupRedirectorsDuringMigration = 0x113; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x118; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x128; // FFilePath
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_ABattalionPlayerController {
		constexpr auto LookSensitivityZoomedZero = 0x570; // float
		constexpr auto BattalionPlayerState = 0x578; // ABattalionPlayerState*
		constexpr auto IsListeningForInput = 0x580; // bool
		constexpr auto JustJoined = 0x581; // bool
		constexpr auto LastUsedSpawnPoint = 0x588; // AActor*
		constexpr auto ForceNoRespawn = 0x590; // bool
		constexpr auto LastGoalYaw = 0x594; // float
		constexpr auto LastPingCalcTime = 0x598; // float
		constexpr auto MovementAndInputSpeedModifier = 0x59c; // float
		constexpr auto FinalViewTarget = 0x5a8; // AActor*
		constexpr auto bInfiniteClip = 0x5b0; // char : 1
		constexpr auto bHealthRegen = 0x5b0; // char : 1
		constexpr auto bGodMode = 0x5b1; // bool
		constexpr auto MatchWonSound = 0x5b8; // UAkAudioEvent*
		constexpr auto MatchLostSound = 0x5c0; // UAkAudioEvent*
		constexpr auto RoundWonSound = 0x5c8; // UAkAudioEvent*
		constexpr auto RoundLostSound = 0x5d0; // UAkAudioEvent*
		constexpr auto LastManSound = 0x5d8; // UAkAudioEvent*
		constexpr auto BombCollectedSound = 0x5e0; // UAkAudioEvent*
		constexpr auto BombDroppedSound = 0x5e8; // UAkAudioEvent*
		constexpr auto BombPlantedAllySound = 0x5f0; // UAkAudioEvent*
		constexpr auto BombPlantedEnemySound = 0x5f8; // UAkAudioEvent*
		constexpr auto DeathSpectatorPawn = 0x638; // ASpectatorPawn*
		constexpr auto BattInstance = 0x640; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x648; // UBattalionSettings*
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x468; // int32_t
		constexpr auto PreviousLODLevel = 0x46c; // int32_t
		constexpr auto MinLOD = 0x470; // int32_t
		constexpr auto SubDivisionStepSize = 0x474; // int32_t
		constexpr auto StaticMesh = 0x478; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x480; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x484; // char : 1
		constexpr auto bOverrideWireframeColor = 0x484; // char : 1
		constexpr auto bOverrideMinLOD = 0x484; // char : 1
		constexpr auto bOverrideNavigationExport = 0x484; // char : 1
		constexpr auto bForceNavigationObstacle = 0x484; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x484; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x484; // char : 1
		constexpr auto bOverrideLightMapRes = 0x484; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x485; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x485; // char : 1
		constexpr auto bUseSubDivisions = 0x485; // char : 1
		constexpr auto bUseDefaultCollision = 0x485; // char : 1
		constexpr auto bReverseCulling = 0x485; // char : 1
		constexpr auto OverriddenLightMapRes = 0x488; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x48c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x490; // float
		constexpr auto StreamingDistanceMultiplier = 0x494; // float
		constexpr auto LODData = 0x498; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4a8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4b8; // FLightmassPrimitiveSettings
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UPostEventAtLocationAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_UMinimapInternal_Background_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_Background = 0x268; // UImage*
		constexpr auto Image_Overlay = 0x270; // UImage*
		constexpr auto MapViewComp = 0x278; // UMapViewComponent*
		constexpr auto MapBackground = 0x280; // AMapBackground*
		constexpr auto CurrentTexture = 0x288; // UTexture*
		constexpr auto CurrentOverlay = 0x290; // UTextureRenderTarget2D*
		constexpr auto BackgroundMatInst = 0x298; // UMaterialInstanceDynamic*
		constexpr auto StartTime = 0x2a0; // float
		constexpr auto OverlayMatInst = 0x2a8; // UMaterialInstanceDynamic*
		constexpr auto AlwaysTickHandle = 0x2b0; // FTimerHandle
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UPromodBotSMInstance {
		constexpr auto PromodBot = 0x640; // APromodBot*
		constexpr auto PromodBotController = 0x648; // APromodBotController*
		constexpr auto PatrolPath = 0x650; // APatrolPath*
	}

	namespace n_AWartideHUD {
		constexpr auto RoundResult = 0x608; // UNUIWartideRoundResult*
		constexpr auto BuyScreen = 0x610; // UNUIBuyScreen*
		constexpr auto RoundResultClass = 0x618; // UNUIWartideRoundResult*
		constexpr auto BuyScreenClass = 0x620; // UNUIBuyScreen*
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UMinimapInternal_Camera_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MapViewComp = 0x268; // UMapViewComponent*
		constexpr auto bIsCircular = 0x270; // bool
		constexpr auto FloorDistance = 0x274; // float
		constexpr auto PanelSize = 0x278; // FVector2D
	}

	namespace n_UDebugUI_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ArrowDown = 0x268; // UCanvasPanel*
		constexpr auto ArrowLeft = 0x270; // UCanvasPanel*
		constexpr auto ArrowRight = 0x278; // UCanvasPanel*
		constexpr auto ArrowUp = 0x280; // UCanvasPanel*
		constexpr auto CourseTime = 0x288; // UTextBlock*
		constexpr auto Crosshair = 0x290; // UImage*
		constexpr auto CurrentViewHeight = 0x298; // UTextBlock*
		constexpr auto DebugLastDamage = 0x2a0; // UTextBlock*
		constexpr auto FloorAngle = 0x2a8; // UTextBlock*
		constexpr auto FloorAngleDisplay = 0x2b0; // UImage*
		constexpr auto FPS = 0x2b8; // UTextBlock*
		constexpr auto GameModeText = 0x2c0; // UTextBlock*
		constexpr auto GraphModelRecoilX = 0x2c8; // USimpleTimeSeriesPlot*
		constexpr auto GraphModelRecoilY = 0x2d0; // USimpleTimeSeriesPlot*
		constexpr auto GraphModelZ = 0x2d8; // USimpleTimeSeriesPlot*
		constexpr auto GraphUPS = 0x2e0; // USimpleTimeSeriesPlot*
		constexpr auto GraphVerticalSpeed = 0x2e8; // USimpleTimeSeriesPlot*
		constexpr auto Image_3 = 0x2f0; // UImage*
		constexpr auto Image_111 = 0x2f8; // UImage*
		constexpr auto Image_112 = 0x300; // UImage*
		constexpr auto Image_118 = 0x308; // UImage*
		constexpr auto IsSliding = 0x310; // UTextBlock*
		constexpr auto Jump = 0x318; // UImage*
		constexpr auto JumpQueued = 0x320; // UCanvasPanel*
		constexpr auto MapNameText = 0x328; // UTextBlock*
		constexpr auto MaxZ = 0x330; // UTextBlock*
		constexpr auto MoveMode = 0x338; // UTextBlock*
		constexpr auto Ping = 0x340; // UTextBlock*
		constexpr auto Position = 0x348; // UTextBlock*
		constexpr auto RecoilPlot = 0x350; // USimpleCartesianPlot*
		constexpr auto SavedZPos = 0x358; // UTextBlock*
		constexpr auto SprintState = 0x360; // UTextBlock*
		constexpr auto Stance = 0x368; // UTextBlock*
		constexpr auto TextBlock_3 = 0x370; // UTextBlock*
		constexpr auto TxtModelZ = 0x378; // UTextBlock*
		constexpr auto UPS = 0x380; // UTextBlock*
		constexpr auto ViewRotation = 0x388; // UTextBlock*
		constexpr auto VSpeed = 0x390; // UTextBlock*
		constexpr auto PromodCharacter = 0x398; // APromodCharacter*
		constexpr auto DeltaTime = 0x3a0; // float
		constexpr auto SavedZ = 0x3a4; // float
		constexpr auto ZMax = 0x3a8; // float
		constexpr auto FadeInMultiplier = 0x3ac; // float
		constexpr auto FadeOutMultiplier = 0x3b0; // float
		constexpr auto GameMode = 0x3b4; // EMapPackGamemode
		constexpr auto TimeWithNoRecoil = 0x3b8; // float
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFov = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UABP_HandCannon_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
	}

	namespace n_UMedalNeutralised {
		constexpr auto DOMGameMode = 0x48; // ADOMGameMode*
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_UNUIParty {
		constexpr auto SelectedPartyMember = 0x290; // int32_t
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UABP_Bomb_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UTugOfWarGameOverviewWidget {
		constexpr auto SpawnQueueTextVisibility = 0x390; // ESlateVisibility
		constexpr auto OvertimeTimeVisibility = 0x391; // ESlateVisibility
		constexpr auto CenterTimerVisibility = 0x392; // ESlateVisibility
		constexpr auto SideTimerVisibility = 0x393; // ESlateVisibility
		constexpr auto SpawnQueueText = 0x398; // FText
		constexpr auto CargoGameState = 0x3b0; // ACargoGameState*
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UWorldMarkerComponent {
		constexpr auto Icon = 0x1f8; // UTexture2D*
		constexpr auto NeutralLabel = 0x200; // FString
		constexpr auto FriendlyLabel = 0x210; // FString
		constexpr auto EnemyLabel = 0x220; // FString
		constexpr auto NeutralColor = 0x230; // FLinearColor
		constexpr auto NeutralOffColor = 0x240; // FLinearColor
		constexpr auto FriendlyColor = 0x250; // FLinearColor
		constexpr auto FriendlyOffColor = 0x260; // FLinearColor
		constexpr auto EnemyColor = 0x270; // FLinearColor
		constexpr auto EnemyOffColor = 0x280; // FLinearColor
		constexpr auto IconNeutralColor = 0x290; // FLinearColor
		constexpr auto IconFriendlyColor = 0x2a0; // FLinearColor
		constexpr auto IconEnemyColor = 0x2b0; // FLinearColor
		constexpr auto PreventColorOverrides = 0x2c0; // bool
		constexpr auto UseAlliedTeamNeutralColor = 0x2c1; // bool
		constexpr auto bUseProgressMarker = 0x2c2; // bool
		constexpr auto bUseTimerText = 0x2c3; // bool
		constexpr auto DefualtTimerTime = 0x2c4; // float
		constexpr auto HideOnFinishLerp = 0x2c8; // bool
		constexpr auto bIconUseOffColour = 0x2c9; // bool
		constexpr auto CurrentMarkerImage = 0x2d0; // UTexture2D*
		constexpr auto CurrentMarkerLabel = 0x2d8; // FString
		constexpr auto CurrentMarkerColor = 0x2e8; // FLinearColor
		constexpr auto CurrentMarkerOffColor = 0x2f8; // FLinearColor
		constexpr auto CurrentIconColor = 0x308; // FLinearColor
		constexpr auto bMarkerCurrentlyVisible = 0x318; // bool
		constexpr auto CurrentCaptureColor = 0x31c; // FLinearColor
		constexpr auto Progress = 0x32c; // float
		constexpr auto TimerTime = 0x330; // float
		constexpr auto bInHighlightAnimation = 0x334; // bool
		constexpr auto bShouldBeCountingDown = 0x335; // bool
		constexpr auto bOriginalShouldShowText = 0x336; // bool
		constexpr auto CurrentTimerTime = 0x338; // float
		constexpr auto TeamAllegiance = 0x340; // int32_t
		constexpr auto TeamVisibility = 0x344; // ETeamVisibility
		constexpr auto bAddedToScreen = 0x34c; // bool
		constexpr auto bIsStuckToScreen = 0x34d; // bool
		constexpr auto Widget = 0x350; // UHUDWorldMarker*
		constexpr auto WidgetClass = 0x358; // UHUDWorldMarker*
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_ATDMHUD {
		constexpr auto RoundResult = 0x5f8; // UNUIRoundResult*
		constexpr auto BuyScreen = 0x600; // UNUIBuyScreen*
		constexpr auto WeaponPrompt = 0x608; // UNUIWeaponPrompt*
		constexpr auto TDMObjectiveScores = 0x610; // UNUITDMObjectiveScores*
		constexpr auto RoundResultClass = 0x618; // UNUIRoundResult*
		constexpr auto BuyScreenClass = 0x620; // UNUIBuyScreen*
		constexpr auto WeaponPromptClass = 0x628; // UNUIWeaponPrompt*
		constexpr auto TDMObjectiveScoresClass = 0x630; // UNUITDMObjectiveScores*
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventId = 0x34; // int32_t
	}

	namespace n_AAnimAudioVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto AudioComponent = 0x228; // UAkComponent*
		constexpr auto Mesh = 0x230; // USkeletalMeshComponent*
		constexpr auto bIsEnabled = 0x238; // bool
		constexpr auto UniqueID = 0x23c; // int32_t
		constexpr auto playCooldown = 0x240; // float
		constexpr auto playNumLimit = 0x244; // int32_t
		constexpr auto LastPlayTime = 0x248; // FDateTime
		constexpr auto playNum = 0x250; // int32_t
		constexpr auto Animation = 0x258; // UAnimationAsset*
		constexpr auto LoopAnimation = 0x260; // bool
		constexpr auto AudioEventPtr = 0x268; // UAkAudioEvent*
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x468; // UPaperFlipbook*
		constexpr auto Material = 0x470; // UMaterialInterface*
		constexpr auto PlayRate = 0x478; // float
		constexpr auto bLooping = 0x47c; // char : 1
		constexpr auto bReversePlayback = 0x47c; // char : 1
		constexpr auto bPlaying = 0x47c; // char : 1
		constexpr auto AccumulatedTime = 0x480; // float
		constexpr auto CachedFrameIndex = 0x484; // int32_t
		constexpr auto SpriteColor = 0x488; // FLinearColor
		constexpr auto CachedBodySetup = 0x498; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4a0; // FMulticastInlineDelegate
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UNUIPlayerLoadout {
		constexpr auto PlayerState = 0x278; // ABattalionPlayerState*
		constexpr auto ClassCardData = 0x280; // FLoadoutCard
	}

	namespace n_UPromodInventoryComponent {
		constexpr auto SlotSelectionOrder = 0xd8; // TArray<ESlotType>
		constexpr auto ActiveSlotType = 0xe8; // ESlotType
		constexpr auto PreviousSlotType = 0xe9; // ESlotType
		constexpr auto DesiredSlotType = 0xea; // ESlotType
		constexpr auto PrimarySlot = 0xf0; // UWeaponSlot*
		constexpr auto SecondarySlot = 0xf8; // UWeaponSlot*
		constexpr auto MeleeSlot = 0x100; // UWeaponSlot*
		constexpr auto SpecialSlot = 0x108; // UWeaponSlot*
		constexpr auto OwningCharacter = 0x110; // APromodCharacter*
		constexpr auto BattalionSettings = 0x118; // UBattalionSettings*
		constexpr auto MinimumTimeAllowedBetweenEquips = 0x120; // float
		constexpr auto LastEquipTime = 0x124; // float
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UCourseTimesSaveData {
		constexpr auto CourseTimeData = 0x50; // TMap<FString, FPromodCourseTimeData>
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UWBP_JumperCompleteScreen_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto Footer-Intro = 0x298; // UWidgetAnimation*
		constexpr auto ButtonsScreen = 0x2a0; // UCanvasPanel*
		constexpr auto CheckpointList = 0x2a8; // UVerticalBox*
		constexpr auto CheckpointSplitsScreen = 0x2b0; // UCanvasPanel*
		constexpr auto CurrentTimeDisplay = 0x2b8; // UTimeDisplay_C*
		constexpr auto Header-Bar-Temp = 0x2c0; // UHeader-Bar-Temp_C*
		constexpr auto Header-Bar-Temp_2 = 0x2c8; // UHeader-Bar-Temp_C*
		constexpr auto InGameLeaderboard = 0x2d0; // UInGameLeaderboard_C*
		constexpr auto Jumper_LevelSelect = 0x2d8; // UJumper_LevelSelect_C*
		constexpr auto Leaderboard_Back-Legend-button-Promod = 0x2e0; // UBack-Legend-button-Promod_C*
		constexpr auto Leaderboard_CONTINUE-Legend-button-Promod = 0x2e8; // UCONTINUE-Legend-button-Promod_C*
		constexpr auto LevelSelectScreen = 0x2f0; // UCanvasPanel*
		constexpr auto MAIN-MENU-New_2 = 0x2f8; // UDebug_Button_C*
		constexpr auto Menu-Background = 0x300; // UMenu-Background_C*
		constexpr auto NextLevel-new = 0x308; // UDebug_Button_C*
		constexpr auto PersonalBestScreen = 0x310; // UCanvasPanel*
		constexpr auto PersonalBestTimeDisplay = 0x318; // UTimeDisplay_C*
		constexpr auto RESTART-F5-Legend-button-Promod = 0x320; // URESTART-Legend-button-Promod_C*
		constexpr auto Restart-New = 0x328; // UDebug_Button_C*
		constexpr auto SelectLevel-new = 0x330; // UDebug_Button_C*
		constexpr auto Vignette-Temp = 0x338; // UVignette-Temp_C*
		constexpr auto Vignette-Temp_2 = 0x340; // UVignette-Temp_C*
		constexpr auto WBP_CheckpointComparison = 0x348; // UWBP_CheckpointComparison_C*
		constexpr auto WBP_CompleteScreenPB = 0x350; // UWBP_CompleteScreenPB_C*
		constexpr auto WidgetSwitcher_45 = 0x358; // UWidgetSwitcher*
		constexpr auto MainMenuReference = 0x360; // UPromodMainMenuScreen*
		constexpr auto PlayersBestTime = 0x368; // bool
		constexpr auto MapsStatsList = 0x370; // FMapStatList
		constexpr auto NewVar_1 = 0x398; // bool
		constexpr auto CurrentTimeFloat = 0x39c; // float
		constexpr auto MapImageDataAsset = 0x3a0; // UMainMenuLevelSelectMapDataAsset*
		constexpr auto LoadoutsDataAsset = 0x3a8; // UPromodLoadoutsDataAsset*
		constexpr auto CurrentMapPackManager = 0x3b0; // UMapPackManager*
		constexpr auto PlayerName = 0x3b8; // FString
		constexpr auto MapName = 0x3c8; // FString
		constexpr auto ClassManagerDataAsset = 0x3d8; // UPromodClassManagerDataAsset*
		constexpr auto CurrentStarCount = 0x3e0; // int32_t
		constexpr auto FinalPage = 0x3e4; // bool
		constexpr auto WidgetIndexClamp = 0x3e8; // int32_t
	}

	namespace n_UNUISpectatorIconGroup {
		constexpr auto PlayerBars = 0x278; // TArray<UNUISpectatorStatBar*>
		constexpr auto VerticalLeft = 0x298; // UVerticalBox*
		constexpr auto VerticalMiddle = 0x2a0; // UVerticalBox*
		constexpr auto VerticalRight = 0x2a8; // UVerticalBox*
		constexpr auto TeamNum = 0x2b0; // int32_t
		constexpr auto Team = 0x2b8; // UBattalionTeam*
		constexpr auto RootBox = 0x2c0; // UHorizontalBox*
		constexpr auto bRightSide = 0x2c8; // bool
		constexpr auto bUseSmallIcons = 0x2c9; // bool
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x460; // FVector
		constexpr auto Gap = 0x46c; // float
		constexpr auto Length = 0x470; // float
		constexpr auto Thickness = 0x474; // float
	}

	namespace n_USNDLeaderBoard {
		constexpr auto MapNameText = 0x260; // FText
		constexpr auto TimerText = 0x278; // FText
		constexpr auto LeaderboardData = 0x290; // TArray<FLeaderboardData>
	}

	namespace n_UWBP_TugOfWarProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CP_Main = 0x268; // UCanvasPanel*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_241 = 0x278; // UImage*
		constexpr auto PayloadStatus = 0x280; // UWBP_CargoPayloadStatus_C*
		constexpr auto ProgressBar_TugOfWar_MyTeam = 0x288; // UWBP_ProgressBar_C*
		constexpr auto ProgressBar_TugOfWar_MyTeam_SuddenDeath = 0x290; // UWBP_ProgressBar_C*
		constexpr auto ProgressBar_TugOfWar_TheirTeam = 0x298; // UWBP_ProgressBar_C*
		constexpr auto ProgressBar_TugOfWar_TheirTeam_SuddenDeath = 0x2a0; // UWBP_ProgressBar_C*
		constexpr auto CheckpointWidgets = 0x2a8; // TArray<UWBP_CargoProgressCheckpoint_C*>
		constexpr auto Checkpoints = 0x2b8; // TArray<float>
		constexpr auto My Geometry = 0x2c8; // FGeometry
		constexpr auto CargoGameState = 0x300; // ACargoGameState*
		constexpr auto HUDColour = 0x308; // UHUDTextDataAsset*
		constexpr auto DividerImageGeometry = 0x310; // FGeometry
		constexpr auto OnSuddenDeathStartedAnimCurve = 0x348; // UCurveFloat*
		constexpr auto bTickSuddenDeathAnimation = 0x350; // bool
		constexpr auto SuddenDeathWinPercentage = 0x354; // float
		constexpr auto CurrentSuddenDeathWinPercentageDeltaTime = 0x358; // float
	}

	namespace n_UNUIJumperCourseComplete {
		constexpr auto GameModeType = 0x260; // EMapPackGamemode
		constexpr auto JumperGameMode = 0x268; // AJumperGameMode*
		constexpr auto KillRunGameMode = 0x270; // AKillRunGameMode*
		constexpr auto UNLOCKEDLEVELS = 0x278; // TArray<FString>
		constexpr auto PreviousDifficultyRating = 0x288; // int32_t
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_ADOMMode_Zone {
		constexpr auto ZoneRadius = 0x220; // float
		constexpr auto ZoneMesh = 0x228; // UStaticMeshComponent*
		constexpr auto CollisionComp = 0x230; // UBoxComponent*
		constexpr auto CurrentTeamAllegiance = 0x238; // int32_t
		constexpr auto CurrentNationAllegiance = 0x23c; // ENationType
		constexpr auto ImageID = 0x250; // FString
		constexpr auto CaptureProgress = 0x260; // float
		constexpr auto IsBeingCaptured = 0x264; // bool
		constexpr auto ShouldTick = 0x265; // bool
		constexpr auto TimeCaptured = 0x268; // float
		constexpr auto CapturingTeam = 0x26c; // int32_t
		constexpr auto CapturingNation = 0x270; // ENationType
		constexpr auto ReturnCaptureCoolDown = 0x274; // float
		constexpr auto NumPlayersCapping = 0x278; // int32_t
		constexpr auto IsContested = 0x27c; // bool
		constexpr auto PlayersInZone = 0x280; // TArray<ADOMPlayerController*>
		constexpr auto PlayerStatesInZone = 0x290; // TArray<ADOMPlayerState*>
		constexpr auto DefaultWorldMarker = 0x2a0; // UWorldMarkerComponent*
		constexpr auto ZoneProperties = 0x2a8; // FDOMMode_ZoneProperties
		constexpr auto CaptureTime = 0x2b8; // float
		constexpr auto CooldownTime = 0x2bc; // float
		constexpr auto AIcon = 0x2c0; // UTexture2D*
		constexpr auto BIcon = 0x2c8; // UTexture2D*
		constexpr auto CIcon = 0x2d0; // UTexture2D*
		constexpr auto NeutraliseTime = 0x2d8; // float
		constexpr auto Neutral = 0x2dc; // bool
		constexpr auto StraightCap = 0x2dd; // bool
		constexpr auto IsBeingNeutralised = 0x2de; // bool
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x440; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x448; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x458; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x469; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x469; // char : 1
		constexpr auto bAllowRecycling = 0x469; // char : 1
		constexpr auto bAutoManageAttachment = 0x469; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x469; // char : 1
		constexpr auto bWarmingUp = 0x46a; // char : 1
		constexpr auto bOverrideLODMethod = 0x46a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x46a; // char : 1
		constexpr auto LODMethod = 0x475; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x476; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x478; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4b8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4c8; // bool
		constexpr auto OldPosition = 0x4cc; // FVector
		constexpr auto PartSysVelocity = 0x4d8; // FVector
		constexpr auto WarmupTime = 0x4e4; // float
		constexpr auto WarmupTickRate = 0x4e8; // float
		constexpr auto SecondsBeforeInactive = 0x4f0; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4f8; // float
		constexpr auto ReplayClips = 0x518; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x530; // float
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5c8; // FMulticastInlineDelegate
	}

	namespace n_UNUIInteract {
		constexpr auto SpectatingPlayerState = 0x278; // ABattalionPlayerState*
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_ACinematics {
		constexpr auto Opening = 0x220; // ALevelSequenceActor*
		constexpr auto OpeningAudio = 0x228; // UAkAudioEvent*
		constexpr auto SwapSides = 0x230; // ALevelSequenceActor*
		constexpr auto SwapSidesAudio = 0x238; // UAkAudioEvent*
		constexpr auto MatchOver = 0x240; // ALevelSequenceActor*
		constexpr auto MatchOverAudio = 0x248; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UHideWeaponNotify_C {
		constexpr auto Show = 0x38; // bool
		constexpr auto ThirdPerson = 0x39; // bool
	}

	namespace n_UWBP_Overtime_Shootout_Transition_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show = 0x268; // UWidgetAnimation*
		constexpr auto Background = 0x270; // UImage*
		constexpr auto Img_LeftLine = 0x278; // UImage*
		constexpr auto Img_LeftTeamPip_2 = 0x280; // UImage*
		constexpr auto Img_LeftTeamPip_3 = 0x288; // UImage*
		constexpr auto Img_LeftTeamPip_4 = 0x290; // UImage*
		constexpr auto Img_LeftTeamPip_5 = 0x298; // UImage*
		constexpr auto Img_LeftTeamPip_6 = 0x2a0; // UImage*
		constexpr auto Img_RightLine = 0x2a8; // UImage*
		constexpr auto Img_RightTeamPip_2 = 0x2b0; // UImage*
		constexpr auto Img_RightTeamPip_3 = 0x2b8; // UImage*
		constexpr auto Img_RightTeamPip_4 = 0x2c0; // UImage*
		constexpr auto Img_RightTeamPip_5 = 0x2c8; // UImage*
		constexpr auto Img_RightTeamPip_6 = 0x2d0; // UImage*
		constexpr auto Text_LeftPlayerName = 0x2d8; // UTextBlock*
		constexpr auto Text_RightPlayerName = 0x2e0; // UTextBlock*
		constexpr auto VertBox_FooterWrap = 0x2e8; // UVerticalBox*
		constexpr auto AlivePipCol = 0x2f0; // FLinearColor
		constexpr auto DeadPipCol = 0x300; // FLinearColor
		constexpr auto MediaPlayer_Background = 0x310; // UMediaPlayer*
		constexpr auto SkipOneAudioCall = 0x318; // bool
		constexpr auto Video = 0x320; // UMediaSource*
		constexpr auto AudioEvent = 0x328; // UAkAudioEvent*
		constexpr auto VideoTexture = 0x330; // UMediaTexture*
	}

	namespace n_UBP_HandCannonCameraModifier_C {
		constexpr auto FovAddition = 0x48; // float
		constexpr auto FovCurve = 0x50; // UCurveFloat*
		constexpr auto Intensity = 0x58; // float
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UPromodDeathCamera {
		constexpr auto Duration = 0xb0; // float
		constexpr auto LerpAmount = 0xb4; // float
		constexpr auto LerpTimeSeconds = 0xb8; // float
		constexpr auto MaxZoomDistance = 0xd0; // float
		constexpr auto FOVAtMaxDistance = 0xd4; // float
		constexpr auto ZoomCurve = 0xd8; // UCurveFloat*
		constexpr auto ZoomTime = 0xe0; // float
		constexpr auto DesiredViewPosition = 0xe4; // FVector
		constexpr auto TranslationLerpAmount = 0xf0; // float
		constexpr auto DeathPosition = 0xf4; // FVector
		constexpr auto StartTime = 0x100; // float
		constexpr auto KillerCharacter = 0x108; // APromodCharacter*
		constexpr auto OwningCharacter = 0x110; // APromodCharacter*
		constexpr auto bIsRunning = 0x118; // bool
	}

	namespace n_UNUISpectatorStatBar {
		constexpr auto PlayerState = 0x278; // ABattalionPlayerState*
		constexpr auto Character = 0x280; // ABattalionCharacter*
		constexpr auto ID = 0x288; // FText
		constexpr auto ActualID = 0x2a0; // char
		constexpr auto Health = 0x2a8; // FText
		constexpr auto ActualHealth = 0x2c0; // float
		constexpr auto GrenadeCount = 0x2c4; // int32_t
		constexpr auto SmokeCount = 0x2c8; // int32_t
		constexpr auto PlayerName = 0x2d0; // FString
		constexpr auto Weapon = 0x2e0; // UBattalionDamageType*
		constexpr auto Switcher = 0x2e8; // UWidgetSwitcher*
		constexpr auto LargeBarAvatar = 0x2f0; // UNUIPlayerAvatar*
		constexpr auto SmallBarAvatar = 0x2f8; // UNUIPlayerAvatar*
		constexpr auto bDead = 0x300; // bool
		constexpr auto bLowHealth = 0x301; // bool
		constexpr auto bCurrentlyViewed = 0x302; // bool
		constexpr auto HealthBarColour = 0x304; // FLinearColor
		constexpr auto NationNum = 0x314; // int32_t
		constexpr auto bPrimaryEquipped = 0x318; // bool
	}

	namespace n_UVOManager {
		constexpr auto VOData = 0x28; // UVODataAsset*
		constexpr auto VoiceDistance = 0x30; // float
		constexpr auto CategoryImportance = 0x38; // TArray<FVOCategoryImportance>
	}

	namespace n_APromodPlayerController {
		constexpr auto StopPlayerSoundsEvent = 0xca0; // UAkAudioEvent*
		constexpr auto StopReloadSoundsEvent = 0xca8; // UAkAudioEvent*
		constexpr auto StopContinuousSoundsEvent = 0xcb0; // UAkAudioEvent*
		constexpr auto EnemyEliminatedSound = 0xcb8; // UAkAudioEvent*
		constexpr auto FriendlyEliminatedSound = 0xcc0; // UAkAudioEvent*
		constexpr auto InfinityRefreshSound = 0xcc8; // UAkAudioEvent*
		constexpr auto IsCinematicPlaying = 0xe18; // bool
		constexpr auto UpdateSpecHUDFailed = 0xe30; // bool
		constexpr auto StopWorldCollapseSound = 0xe48; // UAkAudioEvent*
		constexpr auto bIsShowingClassSelectionScreen = 0xe50; // bool
		constexpr auto bIsShowingGameOverScreen = 0xe51; // bool
		constexpr auto CurrentActionPrompt = 0xe52; // EPromodActionPrompt
		constexpr auto MatchResult = 0xe58; // FString
		constexpr auto WorldCollapseAkComp = 0xe80; // UAkComponent*
		constexpr auto StartWorldCollapseSound = 0xe88; // UAkAudioEvent*
		constexpr auto SavedPlayerLoadouts = 0xe90; // UPlayerLoadoutsSaveData*
		constexpr auto StunCameraShakeInstancePtr = 0xe98; // UCameraShakeBase*
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_ABattalionExplosionEffect {
		constexpr auto ExplosionFX = 0x220; // UParticleSystem*
		constexpr auto ExplosionLight = 0x228; // UPointLightComponent*
		constexpr auto ExplosionLightFadeOut = 0x230; // float
		constexpr auto ExplosionSound = 0x238; // UAkAudioEvent*
		constexpr auto Decal = 0x240; // FDecalData
		constexpr auto SurfaceHit = 0x258; // FHitResult
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UABP_Gadget_Rcon_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x448; // TArray<FNavigationLink>
	}

	namespace n_UMedalCapture {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UNUIDOMZoneStates {
		constexpr auto ZoneStates = 0x278; // TArray<FDOMZoneData>
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_ABP_TrophyFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Grenade = 0x3d0; // ABP_ThrowableTrophySystem_C*
		constexpr auto GrenadeAkComp = 0x3d8; // UAkComponent*
		constexpr auto GrenadeThrowTime = 0x3e0; // float
		constexpr auto OwningTeamNum = 0x3e4; // int32_t
		constexpr auto GrenadeThrowAnimEndTime = 0x3e8; // float
		constexpr auto System Template = 0x3f0; // UNiagaraSystem*
		constexpr auto StunRadius = 0x3f8; // float
		constexpr auto bHit = 0x3fc; // bool
	}

	namespace n_UBP_PlayerSilhouetteCameraModifier_C {
		constexpr auto PostProcessMaterialNew = 0x48; // UMaterialInstanceDynamic*
		constexpr auto Radius = 0x50; // float
		constexpr auto Intensity = 0x54; // float
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UWBP_BombRespawnTimer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto WBP_CircularProgressBar_C_2 = 0x268; // UWBP_CircularProgressBar_C*
		constexpr auto Time = 0x270; // float
		constexpr auto StartTime = 0x274; // float
	}

	namespace n_AKillRunGameMode {
		constexpr auto CurrentCourse = 0x850; // AKillRunCourse*
		constexpr auto RaceStartEvent = 0x890; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent = 0x898; // UAkAudioEvent*
	}

	namespace n_UInGameLeaderboard_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Intro = 0x3d0; // UWidgetAnimation*
		constexpr auto BackgroundBlur_451 = 0x3d8; // UBackgroundBlur*
		constexpr auto CheckBox_1 = 0x3e0; // UCheckBox*
		constexpr auto Footer = 0x3e8; // UCanvasPanel*
		constexpr auto FriendsToggleHorBox = 0x3f0; // UHorizontalBox*
		constexpr auto Header-Bar-Temp = 0x3f8; // UHeader-Bar-Temp_C*
		constexpr auto Image_249 = 0x400; // UImage*
		constexpr auto ingame-underlay-blur = 0x408; // UOverlay*
		constexpr auto LeaderboardItem_168 = 0x410; // ULeaderboardItem_C*
		constexpr auto MapNameBox = 0x418; // UTextBlock*
		constexpr auto MapNameText = 0x420; // UTextBlock*
		constexpr auto NameBox = 0x428; // UTextBlock*
		constexpr auto PlayerBox = 0x430; // UVerticalBox*
		constexpr auto RankBox = 0x438; // UTextBlock*
		constexpr auto SteamProfilePrivacy = 0x440; // UTextBlock*
		constexpr auto timeBox = 0x448; // UTextBlock*
		constexpr auto TITLEBOX = 0x450; // UTextBlock*
		constexpr auto underline_2 = 0x458; // UImage*
		constexpr auto Vignette-Temp = 0x460; // UVignette-Temp_C*
		constexpr auto TitleSet = 0x468; // bool
		constexpr auto RankModifier = 0x46c; // int32_t
		constexpr auto ShouldShowBottomBar = 0x470; // bool
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_UWBP_JumperMovementHUD_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ArrowDown = 0x268; // UCanvasPanel*
		constexpr auto ArrowLeft = 0x270; // UCanvasPanel*
		constexpr auto ArrowRight = 0x278; // UCanvasPanel*
		constexpr auto ArrowUp = 0x280; // UCanvasPanel*
		constexpr auto Image_3 = 0x288; // UImage*
		constexpr auto Image_111 = 0x290; // UImage*
		constexpr auto Image_112 = 0x298; // UImage*
		constexpr auto Jump = 0x2a0; // UImage*
		constexpr auto JumpQueued = 0x2a8; // UCanvasPanel*
		constexpr auto Character = 0x2b0; // ACharacter*
		constexpr auto ShowHUD = 0x2b8; // bool
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3a8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UNUIGameOverview {
		constexpr auto PrevTimerSeconds = 0x278; // int32_t
		constexpr auto TeamsReversed = 0x27c; // bool
		constexpr auto RoundTitleText = 0x280; // FText
		constexpr auto RoundTitleVisibility = 0x298; // ESlateVisibility
		constexpr auto RoundSubtitleText = 0x2a0; // FText
		constexpr auto RoundSubtitleVisibility = 0x2b8; // ESlateVisibility
		constexpr auto TimerText = 0x2c0; // FText
		constexpr auto TimerVisibility = 0x2d8; // ESlateVisibility
		constexpr auto DeathCountVisibility = 0x2d9; // ESlateVisibility
		constexpr auto LeftTeamNumber = 0x2dc; // int32_t
		constexpr auto RightTeamNumber = 0x2e0; // int32_t
		constexpr auto LeftScoreNation = 0x2e4; // ENationType
		constexpr auto RightScoreNation = 0x2e5; // ENationType
		constexpr auto LeftScoreTitleText = 0x2e8; // FText
		constexpr auto RightScoreTitleText = 0x300; // FText
		constexpr auto RightScoreCrossPlayGlobeVisiblity = 0x318; // ESlateVisibility
		constexpr auto LeftScoreColor = 0x31c; // FLinearColor
		constexpr auto LeftScoreTextColor = 0x32c; // FLinearColor
		constexpr auto RightScoreColor = 0x33c; // FLinearColor
		constexpr auto RightScoreTextColor = 0x34c; // FLinearColor
		constexpr auto LeftScoreValueText = 0x360; // FText
		constexpr auto RightScoreValueText = 0x378; // FText
		constexpr auto LeftScoreProgress = 0x390; // float
		constexpr auto RightScoreProgress = 0x394; // float
		constexpr auto LeftScoreVisibility = 0x398; // ESlateVisibility
		constexpr auto RightScoreVisibility = 0x399; // ESlateVisibility
		constexpr auto DOMProgressBarVisible = 0x39a; // bool
		constexpr auto DisplayRoundNumber = 0x39b; // bool
		constexpr auto MaxTeamNameLength = 0x39c; // int32_t
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_ACTFPlayerController {
		constexpr auto ShowActionTakeFlag = 0xc08; // bool
	}

	namespace n_UNUINadeControlInfo {
		constexpr auto GrenadeAvailableToView = 0x278; // bool
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UABP_UNDCKnife_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_UWBP_FireUpProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FireUpIcon = 0x268; // UImage*
		constexpr auto Flipbook_Unlock = 0x270; // UWBP_Flipbook_C*
		constexpr auto Flipbook_Unlocked = 0x278; // UWBP_Flipbook_C*
		constexpr auto Image_140 = 0x280; // UImage*
		constexpr auto Overlay_FireupProgress = 0x288; // UOverlay*
		constexpr auto PB_FireupProgress = 0x290; // UProgressBar*
		constexpr auto PlatformKeyImage_Ult = 0x298; // UPlatformKeyImage_C*
		constexpr auto TB_FireUpPercentage = 0x2a0; // UTextBlock*
		constexpr auto WS_PercentageKeybind = 0x2a8; // UWidgetSwitcher*
		constexpr auto WS_ShieldState = 0x2b0; // UWidgetSwitcher*
		constexpr auto bPrevFireUpAvailable = 0x2b8; // bool
		constexpr auto Fireup Data = 0x2c0; // FFireUpData
		constexpr auto NadesLeftColour = 0x3b8; // FLinearColor
		constexpr auto NoNadesLeftColour = 0x3c8; // FLinearColor
		constexpr auto TimeRemaining = 0x3d8; // float
		constexpr auto DeltaTime = 0x3dc; // float
		constexpr auto NoGrenadeImage = 0x3e0; // UTexture2D*
		constexpr auto TotalDuration = 0x3e8; // float
		constexpr auto ShouldTickProgressToTarget = 0x3ec; // bool
		constexpr auto TargetProgress = 0x3f0; // float
		constexpr auto PrevProgress = 0x3f4; // float
		constexpr auto CurrentProgress = 0x3f8; // float
		constexpr auto SpectatorAlreadyPlayed = 0x400; // TMap<APromodPlayerState*, bool>
		constexpr auto TacticalUtilDataAsset = 0x450; // UPromodTacticalUtilDataAsset*
		constexpr auto HUDColour = 0x458; // UHUDTextDataAsset*
		constexpr auto LethalUtilDataAsset = 0x460; // UPromodOffensiveUtilDataAsset*
		constexpr auto FireUpDataAsset = 0x468; // UPromodAllFireUpsDataAsset*
		constexpr auto Player State = 0x470; // APromodPlayerState*
		constexpr auto CameraModifierClasses = 0x478; // TArray<UCameraModifier*>
		constexpr auto FireupAchievedTriggered = 0x488; // bool
		constexpr auto TickSafetyTimer = 0x48c; // float
		constexpr auto TickSafetyTime = 0x490; // float
		constexpr auto Player Character = 0x498; // APromodCharacter*
		constexpr auto SpectatorFireUpActive = 0x4a0; // bool
		constexpr auto Fire Up Percentage = 0x4a4; // float
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UWBP_StaminaBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fade_In2 = 0x268; // UWidgetAnimation*
		constexpr auto Start = 0x270; // UWidgetAnimation*
		constexpr auto Cooldown = 0x278; // UWidgetAnimation*
		constexpr auto Default = 0x280; // UWidgetAnimation*
		constexpr auto Fade_Out = 0x288; // UWidgetAnimation*
		constexpr auto Fade_In = 0x290; // UWidgetAnimation*
		constexpr auto RetainerBox_1 = 0x298; // URetainerBox*
		constexpr auto StaminaProgressBar = 0x2a0; // UProgressBar*
		constexpr auto IsPlayingCooldown = 0x2a8; // bool
		constexpr auto Is Playing Fade In = 0x2a9; // bool
		constexpr auto RemainingStamina = 0x2ac; // float
		constexpr auto StaminaEvent = 0x2b0; // FStaminaEvent
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_RadialMenu_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x268; // UImage*
		constexpr auto BackgroundSegmentHighlight = 0x270; // UImage*
		constexpr auto CP_Arrow = 0x278; // UCanvasPanel*
		constexpr auto CP_MenuItems = 0x280; // UCanvasPanel*
		constexpr auto IMG_Arrow = 0x288; // UImage*
		constexpr auto RB_BackgroundSegment = 0x290; // URetainerBox*
		constexpr auto MousePos = 0x298; // FVector2D
		constexpr auto NumItems = 0x2a0; // int32_t
		constexpr auto ActiveItem = 0x2a4; // int32_t
		constexpr auto MouseAreaRadius = 0x2a8; // float
		constexpr auto PrevActiveItem = 0x2ac; // int32_t
		constexpr auto Radius = 0x2b0; // float
		constexpr auto CurrentRotation = 0x2b4; // float
		constexpr auto BackgroundMaterial = 0x2b8; // UMaterialInstanceDynamic*
		constexpr auto bEnableDebug = 0x2c0; // bool
		constexpr auto OnItemHovered = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnItemSelected = 0x2d8; // FMulticastInlineDelegate
		constexpr auto Items = 0x2e8; // TArray<FSlateBrush>
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_AVaultAntiVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UMedalDreamkiller {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_AJumperGameMode {
		constexpr auto CurrentCourse = 0x850; // AJumperCourse*
		constexpr auto SplitTimes = 0x888; // TArray<float>
		constexpr auto PersonalBestSplitTimes = 0x898; // TArray<float>
		constexpr auto RaceStartEvent = 0x8b0; // UAkAudioEvent*
		constexpr auto RaceCompletedEvent = 0x8b8; // UAkAudioEvent*
	}

	namespace n_UBreadcrumbDataAsset {
		constexpr auto breadCrumbs = 0x30; // TArray<FString>
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_UPlayFabLeaderboardsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x128; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x130; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x138; // UPlayFabJsonObject*
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNUIPickup {
		constexpr auto BindName = 0x278; // FText
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UNUIProneBlockPrompt {
		constexpr auto ShouldPlay = 0x278; // bool
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UMapNameToImageDataAsset {
		constexpr auto Maps = 0x30; // TArray<FMapImageData>
	}

	namespace n_UBattalionMedalManager {
		constexpr auto BattInstance = 0x28; // UBattalionGameInstance*
		constexpr auto PFPlayerData = 0x30; // UPFPlayerDataManager*
		constexpr auto PFPlayerCache = 0x38; // UPFPlayerIdCache*
		constexpr auto Medals = 0x40; // TArray<UMedalBase*>
		constexpr auto GameMode = 0x50; // ABattalionGameMode*
		constexpr auto GameState = 0x58; // ABattalionGameState*
		constexpr auto UpdateFrequency = 0x70; // float
	}

	namespace n_UKantanTimeSeriesPlotBase {
		constexpr auto bUseFixedTimeRange = 0x368; // bool
		constexpr auto DisplayTimeRange = 0x36c; // float
		constexpr auto LowerTimeBound = 0x370; // FCartesianRangeBound
		constexpr auto UpperTimeBound = 0x378; // FCartesianRangeBound
		constexpr auto LowerValueBound = 0x380; // FCartesianRangeBound
		constexpr auto UpperValueBound = 0x388; // FCartesianRangeBound
		constexpr auto bExtendValueRangeToZero = 0x390; // bool
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UPlayFabEconomyAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x5a8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x5b0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x5b8; // UPlayFabJsonObject*
	}

	namespace n_AHardpointZone {
		constexpr auto MiniMapIconComponent = 0x220; // UMapIconComponent*
		constexpr auto PlayersInZone = 0x228; // TArray<APromodCharacter*>
		constexpr auto HardpointName = 0x238; // FString
		constexpr auto ZoneIndex = 0x248; // int32_t
		constexpr auto CurrentlyCapturedTeamAllegiance = 0x24c; // int32_t
		constexpr auto CurrentHardpointState = 0x250; // EHardpointState
		constexpr auto WorldMarkerComponentFirstLocked = 0x258; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentCaptureNeutral = 0x260; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentCaptureEnemy = 0x268; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentDefend = 0x270; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentContest = 0x278; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentNext = 0x280; // UWorldMarkerComponent*
		constexpr auto SceneRoot = 0x288; // USceneComponent*
		constexpr auto bIsUnlocking = 0x290; // bool
		constexpr auto bIsActive = 0x291; // bool
		constexpr auto bIsFirstZone = 0x293; // bool
		constexpr auto LockedTime = 0x294; // float
		constexpr auto LockedTickTimer = 0x298; // float
		constexpr auto bIsFullyUnlocked = 0x29c; // bool
		constexpr auto LastCaptureTeam = 0x2a0; // int32_t
	}

	namespace n_UPromodCrosshair {
		constexpr auto GrenadeCrosshairs = 0x268; // TMap<EGrenadeType, ECrosshairType>
		constexpr auto SpecialGrenadeCrosshairs = 0x2b8; // TMap<ESpecialGrenadeType, ECrosshairType>
		constexpr auto CurrentCrosshairType = 0x308; // ECrosshairType
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_AFireUpAction {
		constexpr auto DefaultAkComp = 0x238; // UAkComponent*
		constexpr auto DeployAnimation = 0x250; // FCharacterAnim
		constexpr auto DeployScreenSway = 0x260; // UCurveVector*
		constexpr auto ActivationAnimation = 0x268; // FCharacterAnim
		constexpr auto ActivationScreenSway = 0x278; // UCurveVector*
		constexpr auto AdditionalMesh = 0x280; // FFireUpSocketMesh
		constexpr auto bFinishManually = 0x2b0; // bool
		constexpr auto FireUpData = 0x2b8; // FFireUpData
		constexpr auto OwningCharacter = 0x3b0; // APromodCharacter*
		constexpr auto OwningPlayerState = 0x3b8; // APromodPlayerState*
		constexpr auto CurrentState = 0x3c0; // EFireUpState
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UCONTINUE-Legend-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image_405 = 0x288; // UImage*
		constexpr auto Wish-Button = 0x290; // UButton*
		constexpr auto ButtonClicked = 0x298; // FMulticastInlineDelegate
	}

	namespace n_UBarChart {
		constexpr auto DataSource = 0x308; // UObject*
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UABP_Gizmo_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UAkInitBank {
		constexpr auto AvailableAudioCultures = 0x58; // TArray<FString>
		constexpr auto DefaultLanguage = 0x68; // FString
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_ULeftRight_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_2 = 0x268; // UButton*
		constexpr auto LeftImage = 0x270; // UImage*
		constexpr auto MiddleButton = 0x278; // UButton*
		constexpr auto RightButton = 0x280; // UButton*
		constexpr auto RightImage = 0x288; // UImage*
		constexpr auto SettingText = 0x290; // UTextBlock*
		constexpr auto EventLeft = 0x298; // FMulticastInlineDelegate
		constexpr auto EventRight = 0x2a8; // FMulticastInlineDelegate
		constexpr auto RightPressed = 0x2b8; // bool
		constexpr auto LeftPressed = 0x2b9; // bool
		constexpr auto RedArrowDuration = 0x2bc; // float
		constexpr auto Enabled = 0x2c0; // bool
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UNUIWeaponSwapPrompt {
		constexpr auto BindName = 0x278; // FText
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x468; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x478; // TArray<FSpriteInstanceData>
	}

	namespace n_ATUTGameMode {
		constexpr auto MapEditorControllerClass = 0x838; // AMapEditorController*
		constexpr auto MapEditorControllerRef = 0x840; // AMapEditorController*
		constexpr auto ActivePlayerController = 0x848; // APlayerController*
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UNUIHQGameOverview {
		constexpr auto ObjectiveStateProgress = 0x3a0; // float
		constexpr auto CurrentStateName = 0x3a8; // FText
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UPromodMetricsSubsystem {
		constexpr auto FlushNumber = 0x30; // int32_t
		constexpr auto FlushPaused = 0x34; // bool
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_UDebug_Button_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TEXT_MOTION = 0x268; // UWidgetAnimation*
		constexpr auto UNHOVER = 0x270; // UWidgetAnimation*
		constexpr auto HOVER = 0x278; // UWidgetAnimation*
		constexpr auto BLUETEXT = 0x280; // UTextBlock*
		constexpr auto Blur-Steak = 0x288; // UImage*
		constexpr auto DEBUG-BUTTON = 0x290; // UButton*
		constexpr auto REDTEXT = 0x298; // UTextBlock*
		constexpr auto TOPTEXT = 0x2a0; // UTextBlock*
		constexpr auto Text = 0x2a8; // FText
		constexpr auto NewVar_1 = 0x2c0; // bool
		constexpr auto ButtonClicked = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UBattalionGameInstance {
		constexpr auto KillRunMapPackManager = 0x1b8; // UMapPackManager*
		constexpr auto JumperMapPackManager = 0x1c0; // UMapPackManager*
		constexpr auto CurrentMapAndModeArrayIndex = 0x1c8; // int32_t
		constexpr auto DesiredLoadout = 0x1d8; // FLoadoutData
		constexpr auto bPlayIntroInMainMenu = 0x320; // bool
		constexpr auto CurrentConnectionStatus = 0x321; // char
		constexpr auto Viewport = 0x328; // UBattalionGameViewport*
		constexpr auto Player = 0x330; // ULocalPlayer*
		constexpr auto Settings = 0x338; // UBattalionSettings*
		constexpr auto PFSubsystem = 0x368; // UPlayFabSubsystem*
		constexpr auto Online = 0x370; // UBattalionOnline*
		constexpr auto CheatCodeManager = 0x378; // UCheatCodeManager*
		constexpr auto WelcomeScreen = 0x380; // UNUIWelcomeScreen*
		constexpr auto VersionWidget = 0x388; // UNUIClosedPrototypeVersion*
		constexpr auto WidgetReferences = 0x3b0; // UNUIWidgetReferences*
		constexpr auto StatManager = 0x3b8; // UBattalionStatManager*
		constexpr auto MedalManager = 0x3c0; // UBattalionMedalManager*
		constexpr auto ChallengeManager = 0x3c8; // UBattalionChallengeManager*
		constexpr auto AchievementManager = 0x3d0; // UBattalionAchievementManager*
		constexpr auto BattalionExperience = 0x3d8; // UBattalionExperience*
		constexpr auto UseRussianContent = 0x3f0; // bool
		constexpr auto SkinData = 0x418; // USkinDataAsset*
		constexpr auto PromodWeaponData = 0x420; // UPromodWeaponDataAsset*
		constexpr auto PromodLoadoutsData = 0x428; // UPromodLoadoutsDataAsset*
		constexpr auto ClassManagerDataAsset = 0x430; // UPromodClassManagerDataAsset*
		constexpr auto FireUpActionDataAsset = 0x438; // UPromodFireUpActionDataAsset*
		constexpr auto AllFireUpsDataAsset = 0x440; // UPromodAllFireUpsDataAsset*
		constexpr auto PingablesDataAsset = 0x448; // UPromodPingablesDataAsset*
		constexpr auto OffensiveUtilsDataAsset = 0x450; // UPromodOffensiveUtilDataAsset*
		constexpr auto TacticalUtilsDataAsset = 0x458; // UPromodTacticalUtilDataAsset*
		constexpr auto HatCosmeticsDataAsset = 0x460; // UPromodCosmeticsDataAsset*
		constexpr auto AllInGameMoviesPlaylist = 0x468; // UMediaPlaylist*
		constexpr auto Playlist_VICTORY = 0x470; // UMediaPlaylist*
		constexpr auto Playlist_Assault_Shootout = 0x478; // UMediaPlaylist*
		constexpr auto Playlist_DEFEAT = 0x480; // UMediaPlaylist*
		constexpr auto Playlist_FlawlessVictory = 0x488; // UMediaPlaylist*
		constexpr auto Playlist_OVERTIME = 0x490; // UMediaPlaylist*
		constexpr auto Playlist_SHOOTOUT = 0x498; // UMediaPlaylist*
		constexpr auto Playlist_ShootoutTransition = 0x4a0; // UMediaPlaylist*
		constexpr auto Playlist_SwitchingSides = 0x4a8; // UMediaPlaylist*
		constexpr auto RifleArchetypeDataAsset = 0x4b0; // UPromodWeaponArchetypeDataAsset*
		constexpr auto SMGArchetypeDataAsset = 0x4b8; // UPromodWeaponArchetypeDataAsset*
		constexpr auto SniperArchetypeDataAsset = 0x4c0; // UPromodWeaponArchetypeDataAsset*
		constexpr auto PistolArchetypeDataAsset = 0x4c8; // UPromodWeaponArchetypeDataAsset*
		constexpr auto MeleeArchetypeDataAsset = 0x4d0; // UPromodWeaponArchetypeDataAsset*
		constexpr auto MatchmadePlayersToTeams = 0x4d8; // TMap<FString, int32_t>
		constexpr auto SubModeLoadoutSchema = 0x528; // FSubModeSchema
		constexpr auto SubModeName = 0x538; // FString
		constexpr auto ServerId = 0x574; // FGuid
		constexpr auto PrivateServerUrl = 0x588; // FString
		constexpr auto SaveDataManager = 0x598; // USaveDataManager*
		constexpr auto FrontEndMap = 0x5a0; // FString
		constexpr auto MapsWithSupportedModes = 0x5c0; // TArray<FMapToModeSchema>
		constexpr auto bIsMapOrderRandom = 0x5d0; // bool
		constexpr auto SavedPlayerLoadouts = 0x5e0; // UPlayerLoadoutsSaveData*
		constexpr auto bIsFirstSpawnOnMap = 0x610; // bool
		constexpr auto SlotRestartedWith = 0x611; // ESlotType
		constexpr auto WelcomePopupAccepted = 0x628; // bool
		constexpr auto AdminIDFromCommandLineArgs = 0x6d0; // FString
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_AWeaponShowcase {
		constexpr auto OnShowcaseMaterialApplied = 0x220; // FMulticastInlineDelegate
		constexpr auto WeaponMesheComponents = 0x230; // TMap<EWeaponType, USkeletalMeshComponent*>
		constexpr auto WeaponMeshes = 0x280; // TMap<EWeaponType, USkeletalMesh*>
		constexpr auto WeaponAnimations = 0x2d0; // TMap<EWeaponType, UAnimSequence*>
		constexpr auto CurrentWeaponMesh = 0x320; // USkeletalMeshComponent*
		constexpr auto BaseWeaponOrientation = 0x330; // FQuat
		constexpr auto DesiredCameraPosition = 0x340; // FVector2D
		constexpr auto CurrentOffset = 0x348; // FVector
		constexpr auto DesiredWeaponOrientation = 0x360; // FQuat
		constexpr auto DesiredFOV = 0x370; // float
		constexpr auto MinFov = 0x374; // float
		constexpr auto MaxFov = 0x378; // float
		constexpr auto CameraDistance = 0x37c; // float
		constexpr auto MaxWeaponRotateSpeed = 0x380; // float
		constexpr auto WeaponRotateDampingAngle = 0x384; // float
		constexpr auto MaxCameraPanSpeed = 0x388; // float
		constexpr auto CameraPanDampingThreshold = 0x38c; // float
		constexpr auto MaxZoom = 0x390; // float
		constexpr auto MaxCameraZoomSpeed = 0x394; // float
		constexpr auto CameraZoomDampingThreshold = 0x398; // float
		constexpr auto MaxCameraRotateSpeed = 0x39c; // float
		constexpr auto CameraRotateDampingAngle = 0x3a0; // float
		constexpr auto AuthoredCamera = 0x3a4; // bool
		constexpr auto SelfLevelWeapon = 0x3a5; // bool
		constexpr auto SelfLevelSpeed = 0x3a8; // float
		constexpr auto WeaponBasePosition = 0x3ac; // FVector
		constexpr auto WeaponScale = 0x3b8; // float
		constexpr auto DefaultSettings = 0x3bc; // FShowcaseParameters
		constexpr auto WeaponSettings = 0x3d0; // TMap<EWeaponType, FShowcaseParameters>
		constexpr auto CameraComponent = 0x420; // USceneCaptureComponent2D*
		constexpr auto BARMeshComponent = 0x428; // USkeletalMeshComponent*
		constexpr auto Colt1911MeshComponent = 0x430; // USkeletalMeshComponent*
		constexpr auto Gewer43MeshComponent = 0x438; // USkeletalMeshComponent*
		constexpr auto Kar98KMeshComponent = 0x440; // USkeletalMeshComponent*
		constexpr auto Kar98KScopedMeshComponent = 0x448; // USkeletalMeshComponent*
		constexpr auto LugerMeshComponent = 0x450; // USkeletalMeshComponent*
		constexpr auto M1CarbineMeshComponent = 0x458; // USkeletalMeshComponent*
		constexpr auto M1GarandMeshComponent = 0x460; // USkeletalMeshComponent*
		constexpr auto MP40MeshComponent = 0x468; // USkeletalMeshComponent*
		constexpr auto SpringfieldScopedMeshComponent = 0x470; // USkeletalMeshComponent*
		constexpr auto STG44MeshComponent = 0x478; // USkeletalMeshComponent*
		constexpr auto KnifeMeshComponent = 0x480; // USkeletalMeshComponent*
		constexpr auto ThompsonMeshComponent = 0x488; // USkeletalMeshComponent*
		constexpr auto Winchester1897MeshComponent = 0x490; // USkeletalMeshComponent*
		constexpr auto GreaseGunMeshComponent = 0x498; // USkeletalMeshComponent*
		constexpr auto MP28MeshComponent = 0x4a0; // USkeletalMeshComponent*
		constexpr auto PPSH41MeshComponent = 0x4a8; // USkeletalMeshComponent*
		constexpr auto MosinNagantMeshComponent = 0x4b0; // USkeletalMeshComponent*
		constexpr auto ScopedMosinNagantMeshComponent = 0x4b8; // USkeletalMeshComponent*
		constexpr auto Baikal21MeshComponent = 0x4c0; // USkeletalMeshComponent*
		constexpr auto FedorovAvtomatMeshComponent = 0x4c8; // USkeletalMeshComponent*
		constexpr auto SVT40MeshComponent = 0x4d0; // USkeletalMeshComponent*
		constexpr auto TT33MeshComponent = 0x4d8; // USkeletalMeshComponent*
		constexpr auto PPS43MeshComponent = 0x4e0; // USkeletalMeshComponent*
		constexpr auto RevolverMeshComponent = 0x4e8; // USkeletalMeshComponent*
		constexpr auto BritishThompsonMeshComponent = 0x4f0; // USkeletalMeshComponent*
		constexpr auto JungleCarbineMeshComponent = 0x4f8; // USkeletalMeshComponent*
		constexpr auto LewisGunMeshComponent = 0x500; // USkeletalMeshComponent*
		constexpr auto EnfieldMeshComponent = 0x508; // USkeletalMeshComponent*
		constexpr auto Enfield_ScopedMeshComponent = 0x510; // USkeletalMeshComponent*
		constexpr auto StenMeshComponent = 0x518; // USkeletalMeshComponent*
		constexpr auto CurrentAnimSequence = 0x520; // UAnimSequence*
	}

	namespace n_UNUIBombGameOverviewAvatar {
		constexpr auto PlayerState = 0x280; // ABombPlayerState*
		constexpr auto AknowledgePlayerAliveState = 0x288; // bool
		constexpr auto BorderVisibility = 0x289; // ESlateVisibility
		constexpr auto ReadyVisibility = 0x28a; // ESlateVisibility
		constexpr auto BorderColor = 0x28c; // FLinearColor
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UKantanCategoryChart {
		constexpr auto bAutoPerCategoryStyles = 0x158; // bool
		constexpr auto CategoryStyleSet = 0x160; // UKantanCategoryStyleSet*
		constexpr auto ManualStyleMappings = 0x168; // TArray<FCategoryStyleManualMapping>
	}

	namespace n_UNUIMainMenu {
		constexpr auto IsInitialEntry = 0x291; // bool
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UAkXSXInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXSXApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXSXAdvancedInitializationSettings
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_UAkMediaAssetData {
		constexpr auto IsStreamed = 0x28; // bool
		constexpr auto UseDeviceMemory = 0x29; // bool
	}

	namespace n_UMedal25BombFFA {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_UABP_UNDCKnife_TP_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_KillRunGameOverview_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto Chromatic_Fire_Shift_01 = 0x2f8; // UWidgetAnimation*
		constexpr auto Timer_Countdown = 0x300; // UWidgetAnimation*
		constexpr auto Glitch = 0x308; // UWidgetAnimation*
		constexpr auto Image = 0x310; // UImage*
		constexpr auto Image_2 = 0x318; // UImage*
		constexpr auto Image_144 = 0x320; // UImage*
		constexpr auto Image_390 = 0x328; // UImage*
		constexpr auto TextBlock_JumperCheckpointCount = 0x330; // UTextBlock*
		constexpr auto TextBlock_JumperRespawnCount = 0x338; // UTextBlock*
		constexpr auto TextBlock_JumperTimer = 0x340; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_2 = 0x348; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_3 = 0x350; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_4 = 0x358; // UTextBlock*
		constexpr auto TextBlock_JumperTimer_5 = 0x360; // UTextBlock*
	}

	namespace n_UPromodFireUpDataAsset {
		constexpr auto FireUpData = 0x30; // FFireUpData
		constexpr auto FireUpActionClass = 0x128; // AFireUpAction*
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UWBP_CompletionFeedbackButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto UNHOVER = 0x268; // UWidgetAnimation*
		constexpr auto HOVER = 0x270; // UWidgetAnimation*
		constexpr auto FeedbackBackground = 0x278; // UImage*
		constexpr auto FeedbackFace = 0x280; // UImage*
		constexpr auto FeedbackText = 0x288; // UTextBlock*
		constexpr auto SelectButton = 0x290; // UButton*
		constexpr auto FeedbackEventDispatcher = 0x298; // FMulticastInlineDelegate
		constexpr auto BackgroundTexture = 0x2a8; // UTexture2D*
		constexpr auto FaceTexture = 0x2b0; // UTexture2D*
		constexpr auto FeedbackNameText = 0x2b8; // FString
		constexpr auto BackgroundCol = 0x2c8; // FLinearColor
		constexpr auto FaceCol = 0x2d8; // FLinearColor
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UMapPackManager {
		constexpr auto GameModeName = 0x30; // FString
		constexpr auto MapPacks = 0x40; // TArray<UMainMenuLevelSelectMapDataAsset*>
		constexpr auto TutorialMapsDataAsset = 0x50; // UMainMenuLevelSelectMapDataAsset*
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UABP_AK74u_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UMedalLastMinuteHero {
		constexpr auto TDMGameMode = 0x48; // ATDMGameMode*
		constexpr auto KillTrackers = 0x50; // TArray<FLastMinuteKillTracker>
	}

	namespace n_AMapEditorController {
		constexpr auto MapEditorObjectsDataTable = 0x570; // UDataTable*
		constexpr auto TransformSnapSettings = 0x578; // TMap<EMapEditorTransformMode, FMapEditorTransformSnapSettings>
		constexpr auto TransformMode = 0x5c8; // EMapEditorTransformMode
		constexpr auto TransformSpace = 0x5c9; // EMapEditorTransformSpace
		constexpr auto OnTransformModeUpdated = 0x5d0; // FMulticastInlineDelegate
		constexpr auto OnTransformSpaceUpdated = 0x5e0; // FMulticastInlineDelegate
		constexpr auto OnBuildFinished = 0x5f0; // FMulticastInlineDelegate
		constexpr auto OriginalControllerRef = 0x600; // APlayerController*
		constexpr auto OriginalPlayer = 0x608; // UPlayer*
		constexpr auto MapEditorPawn = 0x610; // AMapEditorPawn*
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_ACargoGameState {
		constexpr auto FirstTeamCheckpoint = 0x610; // int32_t
		constexpr auto FirstTeamPip = 0x614; // int32_t
		constexpr auto CargoActor = 0x618; // AMonorail*
		constexpr auto TugOfWarActor = 0x620; // ATugOfWarMonorail*
		constexpr auto SafeZones = 0x628; // TArray<ACargoSafeZone*>
		constexpr auto OnCargoReplicated = 0x648; // FMulticastInlineDelegate
		constexpr auto bAllowOvertime = 0x658; // bool
		constexpr auto TotalGracePeriod = 0x65c; // float
		constexpr auto MinimumGracePeriod = 0x660; // float
		constexpr auto CurrentMaxGracePeriod = 0x664; // float
		constexpr auto CurrentGracePeriod = 0x668; // float
		constexpr auto bHasDoneFirstOvertimeCheck = 0x66c; // bool
		constexpr auto bHasDoneFirstShootoutOvertimeCheck = 0x66d; // bool
		constexpr auto CurrentCheckpoint = 0x670; // int32_t
		constexpr auto bUseTugOfWar = 0x674; // bool
		constexpr auto CargoVictoryTime = 0x678; // float
		constexpr auto TugOfWarIdleTime = 0x67c; // float
		constexpr auto TugOfWarTime = 0x680; // float
		constexpr auto TugOfWarTime_SuddenDeath = 0x684; // float
		constexpr auto bIsInSuddenDeath = 0x688; // bool
		constexpr auto TugOfWarSuddenDeathWinPercentage = 0x68c; // float
		constexpr auto bTickGracePeriod = 0x6a0; // bool
		constexpr auto bTickRechargeGracePeriod = 0x6a1; // bool
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UHUDPlayerName {
		constexpr auto NameToShow = 0x260; // FString
		constexpr auto CrossPlayGlobeVisiblity = 0x270; // ESlateVisibility
		constexpr auto Health = 0x274; // float
		constexpr auto Location = 0x278; // FVector2D
		constexpr auto Text = 0x280; // UTextBlock*
		constexpr auto SpectatorCanvas = 0x288; // UCanvasPanel*
		constexpr auto LinkedCharacter = 0x290; // ABattalionCharacter*
		constexpr auto PlayerPawn = 0x298; // APawn*
		constexpr auto DistanceScalarCurve = 0x2a0; // UCurveFloat*
		constexpr auto DistanceQualityCurve = 0x2a8; // UCurveFloat*
		constexpr auto bEnemy = 0x2b1; // bool
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_USettingSlider_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ButtonContainer = 0x268; // UButton*
		constexpr auto EditableTextField = 0x270; // UEditableText*
		constexpr auto SliderMain = 0x278; // USlider*
		constexpr auto OnValueChanged = 0x280; // FMulticastInlineDelegate
		constexpr auto PreviousHasFocus = 0x290; // bool
		constexpr auto CurrentMultiplier = 0x294; // float
		constexpr auto Duration = 0x298; // float
		constexpr auto PreviousPressedStartTime = 0x2a0; // FDateTime
		constexpr auto PressedStartTime = 0x2a8; // FDateTime
		constexpr auto IsEnabled = 0x2b0; // bool
		constexpr auto OnManualSliderValueCommitted = 0x2b8; // FMulticastInlineDelegate
	}

	namespace n_UJumper_LevelSelect_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto MapPackNameText = 0x280; // UTextBlock*
		constexpr auto MapPackTitle = 0x288; // UTextBlock*
		constexpr auto MapPageSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto NextPageButton = 0x298; // ULevelSelect-Arrow-button-Promod_C*
		constexpr auto PrevPageButton = 0x2a0; // ULevelSelect-Arrow-button-Promod_C*
		constexpr auto VerticalBox_53 = 0x2a8; // UVerticalBox*
		constexpr auto MaxRows = 0x2b0; // int32_t
		constexpr auto MaxColumns = 0x2b4; // int32_t
		constexpr auto CurrentRow = 0x2b8; // int32_t
		constexpr auto CurrentColumn = 0x2bc; // int32_t
		constexpr auto StatNamesToRequest = 0x2c0; // TArray<FString>
		constexpr auto AllLevelSelectBoxes = 0x2d0; // TArray<UJumper_LevelSelectBox_C*>
		constexpr auto MapPackIndex = 0x2e0; // int32_t
		constexpr auto bIsHovered = 0x2e4; // bool
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UWBP_JumperTipIntro_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_Show = 0x268; // UWidgetAnimation*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_131 = 0x288; // UImage*
		constexpr auto Image_249 = 0x290; // UImage*
		constexpr auto Image_365 = 0x298; // UImage*
		constexpr auto IMG_Topbar = 0x2a0; // UImage*
		constexpr auto Key_LoadPos = 0x2a8; // UPlatformKeyImage_C*
		constexpr auto KEY_Reset = 0x2b0; // UPlatformKeyImage_C*
		constexpr auto Key_SavePos = 0x2b8; // UPlatformKeyImage_C*
		constexpr auto SB_SetPos = 0x2c0; // USizeBox*
		constexpr auto VB_LoadPos = 0x2c8; // UVerticalBox*
		constexpr auto VB_SavePos = 0x2d0; // UVerticalBox*
		constexpr auto ShowGizmoOptions = 0x2d8; // bool
	}

	namespace n_UWBP_HardpointZoneList_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_61 = 0x268; // UHorizontalBox*
		constexpr auto HardpointZoneEntries = 0x270; // TArray<UWBP_HardpointZoneListEntry_C*>
		constexpr auto ZonesIndex = 0x280; // TArray<int32_t>
		constexpr auto SortedZonesIndex = 0x290; // TArray<int32_t>
		constexpr auto HardpointZones = 0x2a0; // TArray<AHardpointZone*>
		constexpr auto ActiveZone = 0x2b0; // UWBP_HardpointZoneListEntry_C*
		constexpr auto ZoneIndex = 0x2b8; // int32_t
		constexpr auto MaxAmountOfZones = 0x2bc; // int32_t
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UJumperMapPackManager {
		constexpr auto MapPacks = 0x30; // TArray<UMainMenuLevelSelectMapDataAsset*>
		constexpr auto TutorialMapsDataAsset = 0x40; // UMainMenuLevelSelectMapDataAsset*
	}

	namespace n_AOneInTheChamberHUD {
		constexpr auto OINTLivesLeft = 0x628; // UNUIOneInTheChamberLivesLeft*
		constexpr auto OINTLivesLeftClass = 0x630; // UNUIOneInTheChamberLivesLeft*
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPlayFabAuthenticationContext {
		constexpr auto ClientSessionTicket = 0x28; // FString
		constexpr auto EntityToken = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
		constexpr auto PlayFabId = 0x58; // FString
	}

	namespace n_UJumper_LevelSelectPage_C {
		constexpr auto MapSelectGrid = 0x260; // UUniformGridPanel*
		constexpr auto StarsCountHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto StarsCountText = 0x270; // UTextBlock*
		constexpr auto StarsImage = 0x278; // UImage*
		constexpr auto CurrentColumn = 0x280; // int32_t
		constexpr auto CurrentRow = 0x284; // int32_t
		constexpr auto AllLevelSelectBoxes = 0x288; // TArray<UJumper_LevelSelectBox_C*>
		constexpr auto MaxColumns = 0x298; // int32_t
		constexpr auto Map Pack Manager = 0x2a0; // UMapPackManager*
		constexpr auto CurrentStarCount = 0x2a8; // int32_t
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x258; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x260; // UAkLateReverbComponent*
		constexpr auto Room = 0x268; // UAkRoomComponent*
	}

	namespace n_UWBP_RespawnTimer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto RespawnTimer = 0x268; // UTextBlock*
		constexpr auto RespawnTime = 0x270; // float
		constexpr auto CurrentlyVisible = 0x274; // bool
		constexpr auto FirstSpawn = 0x275; // bool
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x440; // FColor
		constexpr auto ArrowSize = 0x444; // float
		constexpr auto ArrowLength = 0x448; // float
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto bIsScreenSizeScaled = 0x450; // char : 1
		constexpr auto bTreatAsASprite = 0x450; // char : 1
	}

	namespace n_UAkInitBankAssetData {
		constexpr auto PluginInfos = 0x90; // TArray<FAkPluginInfo>
	}

	namespace n_UWBP_ModKitWeaponButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BorderBottom = 0x268; // UImage*
		constexpr auto BorderLeft = 0x270; // UImage*
		constexpr auto BorderRight = 0x278; // UImage*
		constexpr auto BorderTop = 0x280; // UImage*
		constexpr auto Btn_NextModKit = 0x288; // UButton*
		constexpr auto Btn_PrevModKit = 0x290; // UButton*
		constexpr auto ButtonScaleBox = 0x298; // UScaleBox*
		constexpr auto ButtonSpacer = 0x2a0; // USpacer*
		constexpr auto ClassImage = 0x2a8; // UImage*
		constexpr auto ClassSelectButton = 0x2b0; // UButton*
		constexpr auto HorBox_BottomBar = 0x2b8; // UHorizontalBox*
		constexpr auto Img_NextModKitArrow = 0x2c0; // UImage*
		constexpr auto Img_PrevModKitArrow = 0x2c8; // UImage*
		constexpr auto CurrentModKitIndex = 0x2d0; // int32_t
		constexpr auto ModKitImages = 0x2d8; // TArray<UTexture2D*>
		constexpr auto ModKitNames = 0x2e8; // TArray<FText>
		constexpr auto ParentModKits = 0x2f8; // TArray<EParentModKit>
		constexpr auto WeaponArchetype = 0x308; // TArray<EWeaponArchetype>
		constexpr auto BorderSize = 0x318; // float
		constexpr auto ButtonScale = 0x31c; // float
		constexpr auto SpacerSize = 0x320; // float
		constexpr auto RightAndBottomPadding = 0x324; // float
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_ATugOfWarMonorail {
		constexpr auto SelectedPath_TugOfWar = 0x2d0; // ATugOfWarMonorailPath*
		constexpr auto MonorailRotation = 0x2d8; // FRotator
		constexpr auto MonorailMovementScale = 0x2e4; // int32_t
		constexpr auto CurrentAttackerReEnableTimer = 0x2e8; // float
		constexpr auto CurrentDefenderSwapEnableTimer = 0x2ec; // float
		constexpr auto CurrentPayloadAllegiance = 0x2f0; // int32_t
	}

	namespace n_UAkAndroidInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_UAkMediaAsset {
		constexpr auto ID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x40; // UAkMediaAssetData*
	}

	namespace n_UWBP_LoadoutItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_FlashLocked = 0x268; // UWidgetAnimation*
		constexpr auto BTN_Main = 0x270; // UButton*
		constexpr auto IMG_EquipmentIcon = 0x278; // UImage*
		constexpr auto IMG_FireupIcon = 0x280; // UImage*
		constexpr auto IMG_FireupShield = 0x288; // UImage*
		constexpr auto IMG_LargeBorder = 0x290; // UImage*
		constexpr auto IMG_Locked = 0x298; // UImage*
		constexpr auto IMG_MediumBorder = 0x2a0; // UImage*
		constexpr auto IMG_MediumIcon = 0x2a8; // UImage*
		constexpr auto IMG_SmallBorder = 0x2b0; // UImage*
		constexpr auto IMG_WeaponIcon = 0x2b8; // UImage*
		constexpr auto WS_ItemTypeBorder = 0x2c0; // UWidgetSwitcher*
		constexpr auto WS_LargeImageType = 0x2c8; // UWidgetSwitcher*
		constexpr auto OnItemSelected = 0x2d0; // FMulticastInlineDelegate
		constexpr auto Selected = 0x2e0; // bool
		constexpr auto Hovered = 0x2e1; // bool
		constexpr auto LoadoutType = 0x2e2; // ELoadoutItem
		constexpr auto ItemData = 0x2e8; // FFLoadoutItemData
		constexpr auto OnItemHovered = 0x438; // FMulticastInlineDelegate
		constexpr auto OwningLoadout = 0x448; // FLoadoutData
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UHUDGrenadeIcon {
		constexpr auto Marker = 0x260; // UGrenadeMarker*
		constexpr auto Position = 0x268; // FVector2D
		constexpr auto RotationAngle = 0x270; // float
		constexpr auto Beacon = 0x278; // ABeacon*
		constexpr auto Scale = 0x280; // float
		constexpr auto ScaledPosition = 0x284; // FVector2D
		constexpr auto NormalisedPosition = 0x28c; // FVector2D
	}

	namespace n_UMedalShutdown {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UMapRendererComponent {
		constexpr auto OnMapClicked = 0xb0; // FMulticastInlineDelegate
		constexpr auto AutoLocateMapView = 0xc0; // EMapViewSearchOption
		constexpr auto bIsCircular = 0xc1; // bool
		constexpr auto bIsRendered = 0xc2; // bool
		constexpr auto bDrawFrustum = 0xc3; // bool
		constexpr auto FrustumFloorDistance = 0xc4; // float
		constexpr auto BackgroundFillColor = 0xc8; // FLinearColor
		constexpr auto HorizontalAlignment = 0xd8; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0xd9; // EVerticalAlignment
		constexpr auto Margin = 0xdc; // FMargin
		constexpr auto Size = 0xec; // FVector2D
		constexpr auto FillMaterial = 0xf8; // UMaterialInterface*
		constexpr auto FillMaterialInstance = 0x100; // UMaterialInstanceDynamic*
		constexpr auto MapTracker = 0x108; // UMapTrackerComponent*
		constexpr auto MapView = 0x110; // UMapViewComponent*
		constexpr auto HoveringIcons = 0x118; // TSet<UMapIconComponent*>
		constexpr auto BufferedHoverStartEvents = 0x168; // TArray<UMapIconComponent*>
		constexpr auto BufferedHoverEndEvents = 0x178; // TArray<UMapIconComponent*>
		constexpr auto LastCanvas = 0x188; // UCanvas*
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_AAkSplineAmbientSound {
		constexpr auto AmbientSoundSpline = 0x260; // USplineComponent*
		constexpr auto bStayStill = 0x268; // bool
		constexpr auto bDrawDebug = 0x269; // bool
	}

	namespace n_UAkAssetPlatformData {
		constexpr auto CurrentAssetData = 0x28; // UAkAssetData*
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_USkinDataAsset {
		constexpr auto skins = 0x30; // TArray<FSkinEntity>
		constexpr auto RarityColoursDataAsset = 0x40; // URarityColourDataAsset*
	}

	namespace n_AWorldCollapse {
		constexpr auto WorldCollapseType = 0x220; // EWorldCollapseType
	}

	namespace n_UWBP_CargoSingleTeamProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto 3_TimeToBeatText = 0x268; // UTextBlock*
		constexpr auto 4_TimeToBeatTimeText = 0x270; // UTextBlock*
		constexpr auto CenterProgressBarSpacer = 0x278; // USpacer*
		constexpr auto HB_ProgressOverview = 0x280; // UHorizontalBox*
		constexpr auto IMG_End = 0x288; // UImage*
		constexpr auto IMG_Initial = 0x290; // UImage*
		constexpr auto IMG_NonEnd = 0x298; // UImage*
		constexpr auto IMG_ProgressBackground = 0x2a0; // UImage*
		constexpr auto IMG_Push1 = 0x2a8; // UImage*
		constexpr auto IMG_Push2 = 0x2b0; // UImage*
		constexpr auto IMG_Push3 = 0x2b8; // UImage*
		constexpr auto ProgressText = 0x2c0; // UTextBlock*
		constexpr auto SpeedStateBackgroundImage = 0x2c8; // UImage*
		constexpr auto TeamContainer = 0x2d0; // UScaleBox*
		constexpr auto TeamProgress = 0x2d8; // UWBP_CargoProgress_C*
		constexpr auto TimeToBeatContainer = 0x2e0; // UVerticalBox*
		constexpr auto WS_CargoSpeedState = 0x2e8; // UWidgetSwitcher*
		constexpr auto CargoGameState = 0x2f0; // ACargoGameState*
		constexpr auto Progress = 0x2f8; // float
		constexpr auto Time = 0x2fc; // float
		constexpr auto CurrentTime = 0x300; // float
		constexpr auto bTickAnimation = 0x304; // bool
		constexpr auto HUDColour = 0x308; // UHUDTextDataAsset*
		constexpr auto bCenter = 0x310; // bool
		constexpr auto TimeText = 0x318; // FText
		constexpr auto bMyProgress = 0x330; // bool
		constexpr auto CurrentProgress = 0x334; // float
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_AStaticSpectatorCameraActor {
		constexpr auto CameraID = 0x7a0; // int32_t
		constexpr auto Name = 0x7a4; // FName
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_ABattalionSpectatorPawn {
		constexpr auto OwnerPC = 0x310; // ABattalionPlayerControllerGMBase*
		constexpr auto CurrentlyspectatingPC = 0x318; // ABattalionPlayerControllerGMBase*
		constexpr auto CurrentlySpectating = 0x320; // ABattalionCharacter*
		constexpr auto CurrentlySpectatingPS = 0x328; // APlayerState*
		constexpr auto ViewedGrenade = 0x330; // ABattalionGrenade*
		constexpr auto CameraMode = 0x358; // ESpectatorCameraMode
		constexpr auto bOutlinesEnabled = 0x35a; // bool
		constexpr auto bGrenadeLinesEnabled = 0x35b; // bool
		constexpr auto bActionCamera = 0x35c; // bool
		constexpr auto OutlinePostProcess = 0x360; // UPostProcessComponent*
		constexpr auto SnapshotPostProcess = 0x368; // UPostProcessComponent*
		constexpr auto FlashPostProcess = 0x370; // UPostProcessComponent*
		constexpr auto GrenadeLineRed = 0x378; // UParticleSystem*
		constexpr auto GrenadeLineGreen = 0x380; // UParticleSystem*
		constexpr auto GrenadeLineYellow = 0x388; // UParticleSystem*
		constexpr auto StaticCameras = 0x3c8; // TArray<AActor*>
		constexpr auto CurrentDOMZone = 0x3f0; // ADOMMode_Zone*
		constexpr auto Sphere = 0x408; // USphereComponent*
		constexpr auto CamPathCachedCamLocs = 0x428; // TArray<FVector>
		constexpr auto CamPathCachedCamRots = 0x438; // TArray<FRotator>
		constexpr auto CamPathCameras = 0x448; // TArray<AActor*>
		constexpr auto CamPathFocusActor = 0x458; // AActor*
		constexpr auto CamPathSpline = 0x460; // ACamPathSplineActor*
		constexpr auto CamPathCurrentTime = 0x468; // float
		constexpr auto CamPathTotalTime = 0x46c; // float
		constexpr auto bCamPathPlaying = 0x470; // bool
		constexpr auto BattInstance = 0x478; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x480; // UBattalionSettings*
		constexpr auto DebugCameraController = 0x488; // ADebugCameraController*
	}

	namespace n_UNUIScoreboardGroup {
		constexpr auto GroupName = 0x278; // FText
		constexpr auto MemberCountText = 0x290; // FText
		constexpr auto GroupColor = 0x2a8; // FLinearColor
		constexpr auto ParentWidget = 0x2b8; // UNUIScoreboard*
		constexpr auto GroupHeaderVisibility = 0x2c0; // ESlateVisibility
		constexpr auto PlayerCountVisibility = 0x2c1; // ESlateVisibility
		constexpr auto bMemberListChanged = 0x2c2; // bool
		constexpr auto bScoreboardLock = 0x2c3; // bool
		constexpr auto MemberWidgets = 0x2c8; // TArray<UNUIScoreboardRow*>
		constexpr auto MemberWidgetClass = 0x2d8; // UNUIScoreboardRow*
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_AMapEditorObject_Checkpoint {
		constexpr auto CourseClass = 0x318; // AJumperCourse*
		constexpr auto ObjectValue_CheckpointIndex = 0x320; // int32_t
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UABP_AK47_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x4f0; // FAnimNode_Slot
	}

	namespace n_UKillrunLevelStarsSaveData {
		constexpr auto LevelToStarsMap = 0x50; // TMap<FString, int32_t>
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UBattalionVideosDataAsset {
		constexpr auto Videos = 0x30; // TArray<FBattalionVideoDataEntity>
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UPromodCameraModifier {
		constexpr auto SmoothMaxLeanFrac = 0x4c; // float
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UPlayFabRuntimeSettings {
		constexpr auto ProductionEnvironmentURL = 0x28; // FString
		constexpr auto TitleId = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x468; // int32_t
		constexpr auto MapHeight = 0x46c; // int32_t
		constexpr auto TileWidth = 0x470; // int32_t
		constexpr auto TileHeight = 0x474; // int32_t
		constexpr auto DefaultLayerTileSet = 0x478; // UPaperTileSet*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto TileLayers = 0x488; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x498; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4a8; // int32_t
		constexpr auto bUseSingleLayer = 0x4ac; // bool
		constexpr auto TileMap = 0x4b0; // UPaperTileMap*
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UMenu-Button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContentHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ContentTextBlock = 0x270; // UTextBlock*
		constexpr auto NewContentImage = 0x278; // UImage*
		constexpr auto RootButton = 0x280; // UButton*
		constexpr auto Text = 0x288; // FText
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto DefaultTextColor = 0x2b0; // FLinearColor
		constexpr auto HoverTextColor = 0x2c0; // FLinearColor
		constexpr auto DisabledTextColor = 0x2d0; // FLinearColor
		constexpr auto DefaultBackgroundColor = 0x2e0; // FLinearColor
		constexpr auto HoverBackgroundColor = 0x2f0; // FLinearColor
		constexpr auto DisabledBackgroundColor = 0x300; // FLinearColor
		constexpr auto StartEnabled = 0x310; // bool
		constexpr auto RoundedEdges = 0x311; // bool
		constexpr auto FontSize = 0x314; // int32_t
		constexpr auto NewNotificationRightAligned = 0x318; // bool
		constexpr auto Justification = 0x319; // ETextJustify
		constexpr auto ContentPadding = 0x31c; // FMargin
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_ABP_DeployableCoverFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto Grenade = 0x3d0; // ABP_ThrowableDeployableCover_C*
		constexpr auto GrenadeAkComp = 0x3d8; // UAkComponent*
		constexpr auto GrenadeThrowTime = 0x3e0; // float
		constexpr auto OwningTeamNum = 0x3e4; // int32_t
		constexpr auto GrenadeThrowAnimEndTime = 0x3e8; // float
		constexpr auto System Template = 0x3f0; // UNiagaraSystem*
		constexpr auto StunRadius = 0x3f8; // float
		constexpr auto CharacterRotation = 0x3fc; // FRotator
		constexpr auto bHit = 0x408; // bool
	}

	namespace n_UWBP_ShootoutOverview_C {
		constexpr auto UberGraphFrame = 0x390; // FPointerToUberGraphFrame
		constexpr auto WBP_WartideOverviewScore = 0x398; // UWBP_WartideOverviewScore_C*
		constexpr auto LeftTeamWidgets = 0x3a0; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x3b0; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x3c0; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x3c4; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x3c8; // int32_t
		constexpr auto HUDColour = 0x3d0; // UHUDTextDataAsset*
	}

	namespace n_UWBP_ProgressBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CP_Main = 0x268; // UCanvasPanel*
		constexpr auto IMG_ProgressBorder = 0x270; // UImage*
		constexpr auto IMG_ProgressMarker = 0x278; // UImage*
		constexpr auto InvalidationBox_3 = 0x280; // UInvalidationBox*
		constexpr auto InvalidationBox_ProgressMarker = 0x288; // UInvalidationBox*
		constexpr auto PB_Progress = 0x290; // UProgressBar*
		constexpr auto Percent = 0x298; // float
		constexpr auto FillColor = 0x29c; // FLinearColor
		constexpr auto bShowProgressMarker = 0x2ac; // bool
		constexpr auto My Geometry = 0x2b0; // FGeometry
		constexpr auto bShowBorder = 0x2e8; // bool
		constexpr auto Background Image = 0x2f0; // FSlateBrush
		constexpr auto Fill Image = 0x378; // FSlateBrush
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_USelectedKitSaveData {
		constexpr auto ClassLoadouts = 0x50; // TMap<EClassName, FLoadoutData>
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UBattalionMapToGMDataAsset {
		constexpr auto Maps = 0x30; // TArray<FMapList>
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_AMapBackground {
		constexpr auto OnMapBackgroundTextureChanged = 0x238; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundMaterialChanged = 0x248; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundAppearanceChanged = 0x258; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundRendered = 0x268; // FMulticastInlineDelegate
		constexpr auto OnMapBackgroundOverlayChanged = 0x278; // FMulticastInlineDelegate
		constexpr auto BackgroundLevels = 0x288; // TArray<FMapBackgroundLevel>
		constexpr auto BackgroundMaterial_UMG = 0x298; // UMaterialInterface*
		constexpr auto BackgroundMaterial_Canvas = 0x2a0; // UMaterialInterface*
		constexpr auto bBackgroundVisible = 0x2a8; // bool
		constexpr auto BackgroundPriority = 0x2ac; // int32_t
		constexpr auto BackgroundZOrder = 0x2b0; // int32_t
		constexpr auto DynamicRenderTargetSize = 0x2b4; // int32_t
		constexpr auto bRenderNavigationMesh = 0x2b8; // bool
		constexpr auto HiddenActorClasses = 0x2c0; // TArray<AActor*>
		constexpr auto HiddenActors = 0x2d0; // TArray<AActor*>
		constexpr auto MaterialInstances = 0x2e0; // TMap<UMapRendererComponent*, UMaterialInstanceDynamic*>
		constexpr auto LevelVisualizers = 0x330; // TArray<UBoxComponent*>
		constexpr auto CaptureComponent2D = 0x348; // USceneCaptureComponent2D*
		constexpr auto NavMeshRenderingComponent = 0x350; // UNavMeshRenderingComponent*
	}

	namespace n_AMonorailCarriage {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto ContestantBox = 0x228; // UBoxComponent*
		constexpr auto MapIconComponent = 0x230; // UMapIconComponent*
		constexpr auto MapIconRotation = 0x238; // FRotator
		constexpr auto AmmoAddition = 0x244; // int32_t
		constexpr auto AmmoTime = 0x248; // float
		constexpr auto DamageTypeClass = 0x250; // UDamageType*
		constexpr auto AreAttackersPresent = 0x258; // bool
		constexpr auto NumberOfAttackersPresent = 0x25c; // int32_t
		constexpr auto AreDefendersPresent = 0x260; // bool
		constexpr auto bIsTeam0Present = 0x261; // bool
		constexpr auto bIsTeam1Present = 0x262; // bool
		constexpr auto AllPresentCharacters = 0x268; // TArray<APromodCharacter*>
		constexpr auto AllPresentPlayerStates = 0x278; // TArray<ACargoPlayerState*>
		constexpr auto PresentAttackingPlayerStates = 0x288; // TArray<ACargoPlayerState*>
		constexpr auto PresentDefendingPlayerStates = 0x298; // TArray<ACargoPlayerState*>
		constexpr auto PresentAttackingCharacters = 0x2a8; // TArray<APromodCharacter*>
		constexpr auto PresentDefendingCharacters = 0x2b8; // TArray<APromodCharacter*>
		constexpr auto WorldMarkerComponentEscortAttack = 0x2c8; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentDisabledRepair = 0x2d0; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentContested = 0x2d8; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentDisable = 0x2e0; // UWorldMarkerComponent*
		constexpr auto WorldMarkerComponentRepair = 0x2e8; // UWorldMarkerComponent*
		constexpr auto DefaultAkComp = 0x2f0; // UAkComponent*
		constexpr auto CargoVelocity = 0x304; // float
		constexpr auto StartCheckpointProgressSound = 0x310; // UAkAudioEvent*
		constexpr auto StopCheckpointProgressSound = 0x318; // UAkAudioEvent*
		constexpr auto UnlockedCheckpointSound = 0x320; // UAkAudioEvent*
		constexpr auto StartCargoMovementSound = 0x328; // UAkAudioEvent*
		constexpr auto StopCargoMovementSound = 0x330; // UAkAudioEvent*
		constexpr auto DefendLabel = 0x338; // FString
		constexpr auto RepairLabel = 0x348; // FString
		constexpr auto EscortLabel = 0x358; // FString
		constexpr auto DisableLabel = 0x368; // FString
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_ADOMHUD {
		constexpr auto DOMScores = 0x5f8; // UNUIDOMScores*
		constexpr auto RoundResult = 0x600; // UNUIRoundResult*
		constexpr auto BuyScreen = 0x608; // UNUIBuyScreen*
		constexpr auto WeaponPrompt = 0x610; // UNUIWeaponPrompt*
		constexpr auto DOMScoresClass = 0x618; // UNUIDOMScores*
		constexpr auto RoundResultClass = 0x620; // UNUIRoundResult*
		constexpr auto BuyScreenClass = 0x628; // UNUIBuyScreen*
		constexpr auto WeaponPromptClass = 0x630; // UNUIWeaponPrompt*
	}

	namespace n_UWBP_CargoObjectiveProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_Show = 0x268; // UWidgetAnimation*
		constexpr auto CanvasPanel_8 = 0x270; // UCanvasPanel*
		constexpr auto TB_UnlockPercent_2 = 0x278; // UTextBlock*
		constexpr auto TB_UnlockPercent_3 = 0x280; // UTextBlock*
		constexpr auto WBP_CargoObjectiveProgressBar = 0x288; // UWBP_CargoObjectiveProgressBar_C*
		constexpr auto WBP_CargoObjectiveProgressBar_2 = 0x290; // UWBP_CargoObjectiveProgressBar_C*
		constexpr auto WidgetSwitcher_50 = 0x298; // UWidgetSwitcher*
		constexpr auto Cargo Game State = 0x2a0; // ACargoGameState*
		constexpr auto Checkpoint Actor = 0x2a8; // ACargoCheckpoint*
		constexpr auto My Geometry = 0x2b0; // FGeometry
		constexpr auto bObjectiveCompleteShowing = 0x2e8; // bool
	}

	namespace n_UNUIScoreboard {
		constexpr auto bHideTeamsPostMatch = 0x278; // bool
		constexpr auto bShowTeamHeaders = 0x279; // bool
		constexpr auto bShowTeamNationIcons = 0x27a; // bool
		constexpr auto bShowTeamScores = 0x27b; // bool
		constexpr auto bShowTeamPlayerCount = 0x27c; // bool
		constexpr auto bIncludeSpectators = 0x27d; // bool
		constexpr auto bShowSpectatorPlayerCount = 0x27e; // bool
		constexpr auto TeamWidgets = 0x280; // TArray<UNUIScoreboardTeam*>
		constexpr auto SpectatorsWidget = 0x290; // UNUIScoreboardSpectators*
		constexpr auto TeamGroupWidgetClass = 0x298; // UNUIScoreboardTeam*
		constexpr auto SpectatorGroupWidgetClass = 0x2a0; // UNUIScoreboardSpectators*
		constexpr auto TeamsGroupVisibility = 0x2a8; // ESlateVisibility
		constexpr auto FFAVisibility = 0x2a9; // ESlateVisibility
		constexpr auto WartideVisibility = 0x2aa; // ESlateVisibility
		constexpr auto CTFVisibility = 0x2ab; // ESlateVisibility
		constexpr auto DOMVisibility = 0x2ac; // ESlateVisibility
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ULeftRightConfig_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LeftImage = 0x268; // UImage*
		constexpr auto MiddleButton = 0x270; // UButton*
		constexpr auto RightImage = 0x278; // UImage*
		constexpr auto SettingText = 0x280; // UTextBlock*
		constexpr auto EventLeft = 0x288; // FMulticastInlineDelegate
		constexpr auto EventRight = 0x298; // FMulticastInlineDelegate
		constexpr auto RightPressed = 0x2a8; // bool
		constexpr auto LeftPressed = 0x2a9; // bool
		constexpr auto RedArrowDuration = 0x2ac; // float
		constexpr auto Enabled = 0x2b0; // bool
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_ABattalionSpawnInfluencer {
		constexpr auto RootSceneComponent = 0x220; // USceneComponent*
		constexpr auto TeamToInfluence = 0x238; // int32_t
		constexpr auto InfluenceDistance = 0x23c; // float
		constexpr auto InfluenceValue = 0x240; // float
		constexpr auto InfluenceExponent = 0x244; // float
		constexpr auto ModeWeights = 0x248; // TMap<FString, float>
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_ABombCarrierTracker {
		constexpr auto TrackedActor = 0x220; // AActor*
		constexpr auto TeamAllegiance = 0x228; // int32_t
		constexpr auto bPingRequested = 0x22c; // bool
		constexpr auto RequestedPingFrequency = 0x230; // float
		constexpr auto TeamVisibility = 0x234; // ETeamVisibility
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CooldownTime = 0x68; // float
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_ADOMMode_ZoneLocation {
		constexpr auto ZoneName = 0x220; // FString
		constexpr auto ZoneProperties = 0x230; // FDOMMode_ZoneProperties
		constexpr auto RadiusHelper = 0x240; // USphereComponent*
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_APromodBotController {
		constexpr auto StateMachineInstance = 0x328; // UPromodBotSMInstance*
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UCustomIpNetDriver {
		constexpr auto Counter = 0x7b8; // int32_t
	}

	namespace n_UNUIWartideRoundResult {
		constexpr auto ResultText = 0x278; // FText
		constexpr auto ReasonText = 0x290; // FText
		constexpr auto ResultColor = 0x2a8; // FLinearColor
		constexpr auto ResultTextColor = 0x2b8; // FLinearColor
		constexpr auto RoundEndTokensWidgetWidth = 0x2c8; // float
		constexpr auto RoundEndTokensWidgetTop = 0x2cc; // float
		constexpr auto Spectating = 0x2d0; // bool
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UMedalHQAttacker {
		constexpr auto HQGameMode = 0x48; // AHQGameMode*
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_ATUTPlayerController {
		constexpr auto bHasDied = 0xc00; // bool
		constexpr auto PrimaryKilledWith = 0xc08; // ABattalionWeapon*
		constexpr auto SecondaryKilledWith = 0xc10; // ABattalionWeapon*
		constexpr auto MeleeKilledWith = 0xc18; // ABattalionWeapon*
		constexpr auto GrenadesKilledWith = 0xc20; // TArray<EGrenadeType>
		constexpr auto SpecialGrenadesKilledWith = 0xc30; // TArray<ESpecialGrenadeType>
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UNUIDamageIndicator {
		constexpr auto EffectMultiplier = 0x290; // float
	}

	namespace n_UWBP_CargoCheckpointPip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_Colour = 0x268; // UImage*
		constexpr auto SizeBox = 0x270; // USizeBox*
		constexpr auto CheckpointPipIdx = 0x278; // int32_t
		constexpr auto MaxCheckpointPips = 0x27c; // int32_t
	}

	namespace n_UWBP_LoadoutListItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FavouriteImage = 0x268; // UImage*
		constexpr auto LoadoutNameButton = 0x270; // UTextButton_C*
		constexpr auto ButtonClicked = 0x278; // FMulticastInlineDelegate
	}

	namespace n_UPlayFabDataAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xf8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x100; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x108; // UPlayFabJsonObject*
	}

	namespace n_UPromodSaveData {
		constexpr auto PlayerName = 0x28; // FString
		constexpr auto SaveSlotName = 0x38; // FString
		constexpr auto SaveSlotIndex = 0x48; // uint32_t
		constexpr auto Version = 0x4c; // uint32_t
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMinimapInternal_BoxSelect_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BoxMin = 0x268; // FVector2D
		constexpr auto BoxMax = 0x270; // FVector2D
		constexpr auto MapGeo = 0x278; // FGeometry
		constexpr auto OnBoxSelect = 0x2b0; // FMulticastInlineDelegate
		constexpr auto StartPos = 0x2c0; // FVector2D
		constexpr auto StartOffset = 0x2c8; // FVector2D
		constexpr auto IsLeftMouseButton = 0x2d0; // bool
		constexpr auto IsShiftSelect = 0x2d1; // bool
		constexpr auto IsCtrlSelect = 0x2d2; // bool
		constexpr auto BoxSelectColor = 0x2d4; // FLinearColor
	}

	namespace n_UWBP_SndGameoverviewWidget_C {
		constexpr auto UberGraphFrame = 0x390; // FPointerToUberGraphFrame
		constexpr auto FadeBombSecuredIn = 0x398; // UWidgetAnimation*
		constexpr auto FadeLastStandingIn = 0x3a0; // UWidgetAnimation*
		constexpr auto BombSecured = 0x3a8; // UImage*
		constexpr auto LastPlayerStanding = 0x3b0; // UImage*
		constexpr auto NotReady = 0x3b8; // UTextBlock*
		constexpr auto PlatformKeyImage = 0x3c0; // UPlatformKeyImage_C*
		constexpr auto PlayerList = 0x3c8; // UTextBlock*
		constexpr auto PlayerListBox = 0x3d0; // UCanvasPanel*
		constexpr auto PressOrHoldTextBox = 0x3d8; // UTextBlock*
		constexpr auto ReadyupBox = 0x3e0; // UHorizontalBox*
		constexpr auto ScaleBox_2 = 0x3e8; // UScaleBox*
		constexpr auto Spacer_3 = 0x3f0; // USpacer*
		constexpr auto Spacer_291 = 0x3f8; // USpacer*
		constexpr auto TextBlock_4 = 0x400; // UTextBlock*
		constexpr auto Timer = 0x408; // UTextBlock*
		constexpr auto ToReadyUp = 0x410; // UTextBlock*
		constexpr auto VerticalBox_150 = 0x418; // UVerticalBox*
		constexpr auto WaitingBox = 0x420; // UVerticalBox*
		constexpr auto WaitingText = 0x428; // UTextBlock*
		constexpr auto WBP_WartideOverviewScore = 0x430; // UWBP_WartideOverviewScore_C*
		constexpr auto LeftTeamWidgets = 0x438; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto RightTeamWidgets = 0x448; // TArray<UWBP_PlayerAliveIcon_C*>
		constexpr auto MissingWidgets = 0x458; // int32_t
		constexpr auto AlivePlayers_Team0 = 0x45c; // int32_t
		constexpr auto AlivePlayers_Team1 = 0x460; // int32_t
		constexpr auto bIsShootout = 0x464; // bool
		constexpr auto HUDColour = 0x468; // UHUDTextDataAsset*
		constexpr auto bBombPlanted = 0x470; // bool
		constexpr auto Bomb = 0x478; // ABombMode_Bomb*
		constexpr auto BombGameState = 0x480; // ABombGameState*
		constexpr auto PlayerSide = 0x488; // EBombZoneWorldMarkerState
		constexpr auto bBombPickedUpQueued = 0x489; // bool
		constexpr auto bHasBomb = 0x48a; // bool
	}

	namespace n_AMapEditorObject {
		constexpr auto OnStartedDragAction = 0x220; // FMulticastInlineDelegate
		constexpr auto OnEndedDragAction = 0x230; // FMulticastInlineDelegate
		constexpr auto OnObjectDetailsUpdated = 0x240; // FMulticastInlineDelegate
		constexpr auto MeshComponent = 0x250; // UStaticMeshComponent*
		constexpr auto SkeletalMeshComponent = 0x258; // USkeletalMeshComponent*
		constexpr auto ChildActorComponent = 0x260; // UChildActorComponent*
		constexpr auto bIsScalable = 0x268; // bool
		constexpr auto ObjectData = 0x270; // FMapEditorObjectData
		constexpr auto bSelected = 0x310; // bool
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UCheatCodeManager {
		constexpr auto BufferSize = 0x78; // int32_t
		constexpr auto Buffer = 0x80; // TArray<uint16_t>
	}

	namespace n_UBattalionCharacterMovementBase {
		constexpr auto WantedStance = 0xb00; // EStanceType
		constexpr auto LadderClimbing = 0xb08; // ALadder*
		constexpr auto ProneBlocked = 0xb10; // bool
		constexpr auto LeftProneBlocked = 0xb11; // bool
		constexpr auto RightProneBlocked = 0xb12; // bool
		constexpr auto MaxSprintEnergy = 0xb14; // float
		constexpr auto SprintEnergyRequiredForRun = 0xb18; // float
		constexpr auto InfectionSpeedModfier = 0xb1c; // float
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UNUIWelcomeScreen {
		constexpr auto PrivacyAccepted = 0x290; // bool
		constexpr auto OnPrivacyScreen = 0x291; // bool
		constexpr auto PrivacyPrompt = 0x298; // UNUIScreen*
		constexpr auto PromptContainer = 0x2a0; // UWidget*
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto Lifetime = 0x30; // FRawDistributionFloat
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UPromodGamePadSettingsDataAsset {
		constexpr auto GamePadDeadzoneHorizontal = 0x30; // float
		constexpr auto GamePadDeadzoneVertical = 0x34; // float
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_ABP_PingActor_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
	}

	namespace n_UWBP_VoteHUD_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_Show = 0x268; // UWidgetAnimation*
		constexpr auto Border_Background = 0x270; // UBorder*
		constexpr auto Border_Main = 0x278; // UBorder*
		constexpr auto IMG_No = 0x280; // UImage*
		constexpr auto IMG_Yes = 0x288; // UImage*
		constexpr auto TB_CalledBy = 0x290; // UTextBlock*
		constexpr auto TB_NoVotes = 0x298; // UTextBlock*
		constexpr auto TB_VoteTitle = 0x2a0; // UTextBlock*
		constexpr auto TB_YesVotes = 0x2a8; // UTextBlock*
		constexpr auto WBP_ProgressBar = 0x2b0; // UWBP_ProgressBar_C*
		constexpr auto VoteData = 0x2b8; // FVoteData
		constexpr auto CurrentVoteTime = 0x2f8; // float
		constexpr auto In Delta Time = 0x2fc; // float
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UWBP_HardpointGameOverview_C {
		constexpr auto UberGraphFrame = 0x3b8; // FPointerToUberGraphFrame
		constexpr auto Anim_Notification = 0x3c0; // UWidgetAnimation*
		constexpr auto NotReady = 0x3c8; // UTextBlock*
		constexpr auto PlatformKeyImage = 0x3d0; // UPlatformKeyImage_C*
		constexpr auto PlayerList = 0x3d8; // UTextBlock*
		constexpr auto PressOrHoldTextBox = 0x3e0; // UTextBlock*
		constexpr auto ReadyupBox = 0x3e8; // UHorizontalBox*
		constexpr auto ScaleBox = 0x3f0; // UScaleBox*
		constexpr auto Spacer_3 = 0x3f8; // USpacer*
		constexpr auto Spacer_291 = 0x400; // USpacer*
		constexpr auto TextBlock_4 = 0x408; // UTextBlock*
		constexpr auto Timer = 0x410; // UTextBlock*
		constexpr auto ToReadyUp = 0x418; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x420; // UVerticalBox*
		constexpr auto VerticalBox_150 = 0x428; // UVerticalBox*
		constexpr auto WaitingText = 0x430; // UTextBlock*
		constexpr auto WBP_HardpointZoneList = 0x438; // UWBP_HardpointZoneList_C*
		constexpr auto WBP_OverviewScore = 0x440; // UWBP_HardpointOverviewScore_C*
		constexpr auto WBP_PlayerIcons = 0x448; // UWBP_HardpointPlayerIcons_C*
		constexpr auto bIsShootout = 0x450; // bool
		constexpr auto HUDColour = 0x458; // UHUDTextDataAsset*
		constexpr auto CargoGameState = 0x460; // ACargoGameState*
		constexpr auto DramaticCountdownTime = 0x468; // float
		constexpr auto MaxScore = 0x46c; // float
	}

	namespace n_UWBP_CompleteScreenPB_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PersonalBest = 0x268; // UWidgetAnimation*
		constexpr auto Intro = 0x270; // UWidgetAnimation*
		constexpr auto Anim_HighlightStar3 = 0x278; // UWidgetAnimation*
		constexpr auto Anim_HighlightStar2 = 0x280; // UWidgetAnimation*
		constexpr auto Anim_HighlightStar1 = 0x288; // UWidgetAnimation*
		constexpr auto Anim_StampPro = 0x290; // UWidgetAnimation*
		constexpr auto BigTimeDisplay = 0x298; // UBigTimeDisplay_C*
		constexpr auto BLUR-STREAK = 0x2a0; // UImage*
		constexpr auto CompletedText = 0x2a8; // UTextBlock*
		constexpr auto CurrentTimeDisplay = 0x2b0; // UTimeDisplay_C*
		constexpr auto Header-Bar-Temp = 0x2b8; // UHeader-Bar-Temp_C*
		constexpr auto MapNameBox = 0x2c0; // UTextBlock*
		constexpr auto MapNameText = 0x2c8; // UTextBlock*
		constexpr auto ProText = 0x2d0; // UTextBlock*
		constexpr auto SmallPro = 0x2d8; // UTextBlock*
		constexpr auto SmallStar1 = 0x2e0; // UImage*
		constexpr auto SmallStar2 = 0x2e8; // UImage*
		constexpr auto SmallStar3 = 0x2f0; // UImage*
		constexpr auto SmallStar4 = 0x2f8; // UImage*
		constexpr auto SmallStar5 = 0x300; // UImage*
		constexpr auto SmallStar6 = 0x308; // UImage*
		constexpr auto Star1 = 0x310; // UImage*
		constexpr auto Star2 = 0x318; // UImage*
		constexpr auto Star3 = 0x320; // UImage*
		constexpr auto Stars = 0x328; // UOverlay*
		constexpr auto StarsStatPanel = 0x330; // UVerticalBox*
		constexpr auto TimeDisplayOne = 0x338; // UTimeDisplay_C*
		constexpr auto TimeDisplayPro = 0x340; // UTimeDisplay_C*
		constexpr auto TimeDisplayThree = 0x348; // UTimeDisplay_C*
		constexpr auto TimeDisplayTwo = 0x350; // UTimeDisplay_C*
		constexpr auto TITLEBOX = 0x358; // UTextBlock*
		constexpr auto Vignette-Temp = 0x360; // UVignette-Temp_C*
		constexpr auto CurrentTimeFloat = 0x368; // float
		constexpr auto MapsStatsList = 0x370; // FMapStatList
		constexpr auto Rating = 0x398; // int32_t
		constexpr auto GameMode = 0x39c; // EMapPackGamemode
		constexpr auto CurrentMapPackManager = 0x3a0; // UMapPackManager*
		constexpr auto MapName = 0x3a8; // FString
	}

	namespace n_UMedalStolen {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UHeader-Bar-Temp_C {
		constexpr auto Image_829 = 0x260; // UImage*
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_USMInstance {
		constexpr auto RootStateMachineGuid = 0x40; // FGuid
		constexpr auto OnStateMachineInitializedEvent = 0x50; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStartedEvent = 0x60; // FMulticastInlineDelegate
		constexpr auto OnStateMachineUpdatedEvent = 0x70; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStoppedEvent = 0x80; // FMulticastInlineDelegate
		constexpr auto OnStateMachineTransitionTakenEvent = 0x90; // FMulticastInlineDelegate
		constexpr auto OnStateMachineStateChangedEvent = 0xa0; // FMulticastInlineDelegate
		constexpr auto ComponentOwner = 0xb0; // USMStateMachineComponent*
		constexpr auto ServerStateMachine = 0xb8; // TScriptInterface<ISMStateMachineNetworkedInterface>
		constexpr auto ActiveTransactions = 0x208; // TArray<FSMNetworkedTransaction>
		constexpr auto RootStateMachine = 0x218; // FSMStateMachine
		constexpr auto R_StateMachineContext = 0x5d8; // UObject*
		constexpr auto R_ActiveStates = 0x5e0; // TArray<FGuid>
		constexpr auto ReferenceOwner = 0x5f0; // USMInstance*
		constexpr auto StateMachineClass = 0x5f8; // USMStateMachineInstance*
		constexpr auto bAutoManageTime = 0x600; // bool
		constexpr auto bStopOnEndState = 0x601; // bool
		constexpr auto bCanEverTick = 0x602; // bool
		constexpr auto bCanTickWhenPaused = 0x603; // bool
		constexpr auto TickInterval = 0x604; // float
		constexpr auto bTickRegistered = 0x608; // bool
		constexpr auto bTickBeforeInitialize = 0x609; // bool
		constexpr auto MaxTimeToWaitForUpdate = 0x60c; // float
		constexpr auto TimeSinceAllowedTick = 0x610; // float
		constexpr auto WorldSeconds = 0x614; // float
		constexpr auto WorldTimeDelta = 0x618; // float
		constexpr auto bCallTickOnManualUpdate = 0x61c; // bool
		constexpr auto bIsTicking = 0x61d; // bool
		constexpr auto bIsUpdating = 0x61e; // bool
		constexpr auto bCanEvaluateTransitionsLocally = 0x620; // char : 1
		constexpr auto bCanTakeTransitionsLocally = 0x620; // char : 1
		constexpr auto bCanExecuteStateLogic = 0x620; // char : 1
		constexpr auto R_bHasStarted = 0x620; // char : 1
		constexpr auto ReferenceTemplates = 0x628; // TArray<UObject*>
	}

	namespace n_UNUIBombRoundResult {
		constexpr auto ResultText = 0x278; // FText
		constexpr auto ReasonText = 0x290; // FText
		constexpr auto ResultColor = 0x2a8; // FLinearColor
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UABP_StickyGrenade_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x388; // FAnimNode_Slot
	}

	namespace n_UMedalLastStand {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_ABP_BlitzBombTracker_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Marker = 0x240; // UWorldMarkerComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto Escort Icon = 0x250; // UTexture2D*
		constexpr auto Kill Icon = 0x258; // UTexture2D*
		constexpr auto Escort Color = 0x260; // FColor
		constexpr auto Kill Color = 0x264; // FColor
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UNUIBaseHUDElement {
		constexpr auto BattInstance = 0x268; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x270; // UBattalionSettings*
	}

	namespace n_UWBP_StyleScoreAwardEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto On_Fire_Chromatic_Glitch = 0x268; // UWidgetAnimation*
		constexpr auto SytleScoreAwardText = 0x270; // UTextBlock*
		constexpr auto SytleScoreAwardText_BLUE = 0x278; // UTextBlock*
		constexpr auto SytleScoreAwardText_RED = 0x280; // UTextBlock*
		constexpr auto Title = 0x288; // FText
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x468; // UPaperSprite*
		constexpr auto MaterialOverride = 0x470; // UMaterialInterface*
		constexpr auto SpriteColor = 0x478; // FLinearColor
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_ABattalionProfilingSpectatorPawn {
		constexpr auto AutoProfile = 0x2a8; // bool
		constexpr auto RunningProfile = 0x2a9; // bool
		constexpr auto SplineMoving = 0x2aa; // bool
		constexpr auto CurrentMovementSpline = 0x2b0; // USplineComponent*
		constexpr auto SplineMovementTime = 0x2b8; // float
		constexpr auto SplineMovementSpeed = 0x2bc; // float
		constexpr auto SplineLerpSpeed = 0x2c0; // float
		constexpr auto GrenadeClass = 0x2c8; // ABattalionGrenade*
		constexpr auto SmokeGrenadeClass = 0x2d0; // ABattalionSmokeGrenade*
		constexpr auto GrenadeSpawning = 0x2d8; // bool
		constexpr auto GrenadeSpawnTimer = 0x2dc; // float
		constexpr auto SmokeGrenadeSpawnTimer = 0x2e0; // float
		constexpr auto GrenadeSpawnPoints = 0x2e8; // TArray<FTransform>
		constexpr auto SmokeGrenadeSpawnPoints = 0x2f8; // TArray<FTransform>
	}

	namespace n_ADOMPlayerState {
		constexpr auto Capturing = 0x5a8; // bool
		constexpr auto ZoneCaptures = 0x5ac; // int32_t
		constexpr auto ZoneNeutralizations = 0x5b0; // int32_t
		constexpr auto DefensiveZoneKills = 0x5b4; // int32_t
		constexpr auto OffensiveZoneKills = 0x5b8; // int32_t
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_ABP_IncendiaryEffect_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto FireSystem = 0x2f0; // UNiagaraSystem*
	}

	namespace n_AHeadquartersHUD {
		constexpr auto HQGameOverview = 0x638; // UNUIHQGameOverview*
		constexpr auto RespawnNotificationWidget = 0x640; // UNUIWeaponPrompt*
		constexpr auto RespawnNotificationClass = 0x648; // UNUIWeaponPrompt*
		constexpr auto HQGameOverviewClass = 0x650; // UNUIHQGameOverview*
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_ABotFollowActor {
		constexpr auto RootBox = 0x220; // UBoxComponent*
	}

	namespace n_UWBP_Overtime_Shootout_Title_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show = 0x268; // UWidgetAnimation*
		constexpr auto Mov_Title = 0x270; // UImage*
		constexpr auto MP_Title = 0x278; // UMediaPlayer*
		constexpr auto PlayAnnouncementOnce = 0x280; // bool
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UPFMatchmakingInterop {
		constexpr auto PlayFabSubsystem = 0x30; // UPlayFabSubsystem*
		constexpr auto ServerSlotManager = 0x38; // UPFServerSlotManager*
	}

	namespace n_ABattalionIncendiaryGrenade {
		constexpr auto bFuseTimerEnded = 0x3d0; // bool
		constexpr auto AkComponent = 0x3d8; // UAkComponent*
		constexpr auto IncendiaryEffectClass = 0x3e0; // ABattalionIncendiaryEffect*
		constexpr auto EmitterComponent = 0x3e8; // UParticleSystemComponent*
		constexpr auto IncendiaryEffect = 0x3f0; // ABattalionIncendiaryEffect*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UHUDChatController {
		constexpr auto CurrentChannel = 0x260; // EChatChannels
		constexpr auto CurrentMessage = 0x268; // FString
		constexpr auto ChatLog = 0x278; // UHUDRichTextBlock*
		constexpr auto ChannelText = 0x280; // UHUDRichTextBlock*
		constexpr auto GlobalChannelCol = 0x288; // FString
		constexpr auto TeamChannelCol = 0x298; // FString
		constexpr auto GroupChannelCol = 0x2a8; // FString
		constexpr auto DevMessageCol = 0x2b8; // FString
		constexpr auto MedalMessageCol = 0x2c8; // FString
		constexpr auto ChallengeMessageCol = 0x2d8; // FString
		constexpr auto ChatFadeTime = 0x2e8; // float
		constexpr auto LineBreak = 0x2f0; // FString
		constexpr auto ScrollBox = 0x300; // UScrollBox*
		constexpr auto OwnerController = 0x308; // ABattalionPlayerControllerGMBase*
		constexpr auto ChatOpacity = 0x320; // float
		constexpr auto IsTyping = 0x324; // bool
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_ABombGameMode {
		constexpr auto UseDecideTeamRound = 0x838; // bool
		constexpr auto DecideTeamRoundIsKnifeOnly = 0x839; // bool
		constexpr auto DecideRoundTime = 0x83c; // int32_t
		constexpr auto RoundTimeBackup = 0x840; // int32_t
		constexpr auto bUseOvertime = 0x844; // bool
		constexpr auto NumOvertimeRounds = 0x848; // int32_t
		constexpr auto RoundsToWinUntilStopBackfill = 0x84c; // int32_t
		constexpr auto PlantTime = 0x850; // float
		constexpr auto QuickPlantTime = 0x854; // float
		constexpr auto DefuseTime = 0x858; // float
		constexpr auto FuseTime = 0x85c; // float
		constexpr auto DistanceToPlant = 0x860; // float
		constexpr auto DistanceToDefuse = 0x864; // float
		constexpr auto DistanceToPickupBomb = 0x868; // float
		constexpr auto DefuseEndsRound = 0x86c; // bool
		constexpr auto AttackingTeam = 0x870; // int32_t
		constexpr auto EndOnMatchPointWin = 0x874; // bool
		constexpr auto NumOvertimeLoops = 0x878; // int32_t
		constexpr auto OvertimeSwapSidesRound = 0x87c; // int32_t
		constexpr auto BombClass = 0x880; // ABombMode_Bomb*
		constexpr auto RoundWinningTeam = 0x888; // int32_t
		constexpr auto GameBombObject = 0x890; // ABombMode_Bomb*
		constexpr auto PlantingSound = 0x898; // UAkAudioEvent*
		constexpr auto QuickPlantingSound = 0x8a0; // UAkAudioEvent*
		constexpr auto StopPlantingSound = 0x8a8; // UAkAudioEvent*
		constexpr auto PlantSuccessfulSound = 0x8b0; // UAkAudioEvent*
		constexpr auto DefusingSound = 0x8b8; // UAkAudioEvent*
		constexpr auto StopDefusingSound = 0x8c0; // UAkAudioEvent*
		constexpr auto DefuseSuccesfulSound = 0x8c8; // UAkAudioEvent*
		constexpr auto DetonateSound = 0x8d0; // UAkAudioEvent*
		constexpr auto BombDropInteract = 0x8d8; // UAkAudioEvent*
		constexpr auto BombPickupInteract = 0x8e0; // UAkAudioEvent*
		constexpr auto KnifeVoteHappened = 0x8f0; // bool
		constexpr auto bIsInShootout = 0x8f1; // bool
		constexpr auto UsedSpawns = 0x8f8; // TArray<AActor*>
		constexpr auto SpectatorsWaitingToSpawn = 0x908; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto PlantingBombEvent = 0x918; // UAkAudioEvent*
		constexpr auto DefusingBombEvent = 0x920; // UAkAudioEvent*
		constexpr auto BombExplosionEvent = 0x928; // UAkAudioEvent*
		constexpr auto PickedUpBombEvent = 0x930; // UAkAudioEvent*
		constexpr auto DroppedBombEvent = 0x938; // UAkAudioEvent*
		constexpr auto BombPlantedEvent = 0x940; // FNationSound
		constexpr auto BombDefusedEvent = 0x960; // FNationSound
		constexpr auto LastManStandingEvent = 0x980; // FNationSound
		constexpr auto KnifeRoundVOEvent = 0x9a0; // UAkAudioEvent*
		constexpr auto bEnteredOvertime = 0x9a8; // bool
		constexpr auto bEnteredShootout = 0x9a9; // bool
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UBIPF_PlatformHelper {
		constexpr auto PlayFabSubsystem = 0x28; // UPlayFabSubsystem*
	}

	namespace n_UMedal20BombFFA {
		constexpr auto FFAGameMode = 0x48; // AFFAGameMode*
	}

	namespace n_UClassSelectionScreen {
		constexpr auto AssaultLimitText = 0x260; // FText
		constexpr auto BreacherLimitText = 0x278; // FText
		constexpr auto ReconLimitText = 0x290; // FText
		constexpr auto bIsAssaultDisabled = 0x2a8; // bool
		constexpr auto bIsBreacherDisabled = 0x2a9; // bool
		constexpr auto bIsReconDisabled = 0x2aa; // bool
		constexpr auto AvailableLoadouts = 0x2b0; // TMap<EClassName, FLoadoutData>
		constexpr auto pOwningPlayercontroller = 0x300; // APromodPlayerController*
		constexpr auto pGameState = 0x308; // APromodGameState*
		constexpr auto AssaultDefaultLoadout = 0x310; // FLoadoutData
		constexpr auto BreacherDefaultLoadout = 0x458; // FLoadoutData
		constexpr auto ReconDefaultLoadout = 0x5a0; // FLoadoutData
		constexpr auto KitSavedData = 0x6e8; // USelectedKitSaveData*
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_UGrenadeIndicator {
		constexpr auto CurrentGrenadeInfo = 0x260; // TArray<FGrenadeInfo>
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UHUD_LINES_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Chromatic_Fire = 0x268; // UWidgetAnimation*
		constexpr auto FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto Glitch = 0x278; // UWidgetAnimation*
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UMedalReturn {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_ABP_CargoFirstTeamProgressPoint_C {
		constexpr auto DecalCorner3 = 0x220; // UDecalComponent*
		constexpr auto DecalCorner2 = 0x228; // UDecalComponent*
		constexpr auto DecalCorner1 = 0x230; // UDecalComponent*
		constexpr auto DecalCorner = 0x238; // UDecalComponent*
		constexpr auto Decal3 = 0x240; // UDecalComponent*
		constexpr auto Decal2 = 0x248; // UDecalComponent*
		constexpr auto Decal1 = 0x250; // UDecalComponent*
		constexpr auto DefaultSceneRoot = 0x258; // USceneComponent*
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UAkIOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2b4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2b8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2bc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c0; // int32_t
		constexpr auto CollisionRadius = 0x2c4; // float
		constexpr auto ShadeRadius = 0x2c8; // float
		constexpr auto NumSteps = 0x2cc; // int32_t
		constexpr auto InitialSeedDensity = 0x2d0; // float
		constexpr auto AverageSpreadDistance = 0x2d4; // float
		constexpr auto SpreadVariance = 0x2d8; // float
		constexpr auto SeedsPerStep = 0x2dc; // int32_t
		constexpr auto DistributionSeed = 0x2e0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2e4; // float
		constexpr auto bCanGrowInShade = 0x2e8; // bool
		constexpr auto bSpawnsInShade = 0x2e9; // bool
		constexpr auto MaxInitialAge = 0x2ec; // float
		constexpr auto MaxAge = 0x2f0; // float
		constexpr auto OverlapPriority = 0x2f4; // float
		constexpr auto ProceduralScale = 0x2f8; // FFloatInterval
		constexpr auto ScaleCurve = 0x300; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x388; // int32_t
		constexpr auto ReapplyDensity = 0x38c; // char : 1
		constexpr auto ReapplyRadius = 0x38c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x38c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x38c; // char : 1
		constexpr auto ReapplyScaling = 0x38c; // char : 1
		constexpr auto ReapplyScaleX = 0x38c; // char : 1
		constexpr auto ReapplyScaleY = 0x38c; // char : 1
		constexpr auto ReapplyScaleZ = 0x38c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x38d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x38d; // char : 1
		constexpr auto ReapplyHeight = 0x38d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x38d; // char : 1
		constexpr auto ReapplyZOffset = 0x38d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x38d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x38d; // char : 1
		constexpr auto bEnableDensityScaling = 0x38d; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x38e; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x390; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3a4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UJumperGameOverviewWidget {
		constexpr auto JumperTimerText = 0x260; // FText
		constexpr auto JumperTimerTextMilliseconds = 0x278; // FText
		constexpr auto JumperTimerTextSeconds = 0x290; // FText
		constexpr auto JumperTimerTextMinutes = 0x2a8; // FText
		constexpr auto JumperCheckpointText = 0x2c0; // FText
		constexpr auto JumperRespawnText = 0x2d8; // FText
	}

	namespace n_UWBP_VersusNotification_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutNewNumber = 0x268; // UWidgetAnimation*
		constexpr auto FadeInTheirNewNumber = 0x270; // UWidgetAnimation*
		constexpr auto FadeInOurNewNumber = 0x278; // UWidgetAnimation*
		constexpr auto FadeInOldNumber = 0x280; // UWidgetAnimation*
		constexpr auto OurVersus_ScaleBox = 0x288; // UScaleBox*
		constexpr auto OurVersus_Text = 0x290; // UTextBlock*
		constexpr auto OurVersusBG = 0x298; // UImage*
		constexpr auto TheirVersus_ScaleBox = 0x2a0; // UScaleBox*
		constexpr auto TheirVersus_Text = 0x2a8; // UTextBlock*
		constexpr auto TheirVersusBG = 0x2b0; // UImage*
		constexpr auto Versus_CP = 0x2b8; // UCanvasPanel*
		constexpr auto bOurPlayerKilled = 0x2c0; // bool
		constexpr auto Our Players Before = 0x2c4; // int32_t
		constexpr auto Our Players After = 0x2c8; // int32_t
		constexpr auto Their Players Before = 0x2cc; // int32_t
		constexpr auto Their Players After = 0x2d0; // int32_t
		constexpr auto OnFinishedAnimation = 0x2d8; // FMulticastInlineDelegate
		constexpr auto State = 0x2e8; // EVersusNotificationWidgetState
		constexpr auto CurrentTallyInformationPacket = 0x2ec; // FTallyInformationPacket
		constexpr auto TallyInformationPacketQueue = 0x300; // TArray<FTallyInformationPacket>
		constexpr auto PromodGameState = 0x310; // APromodGameState*
		constexpr auto TimerHandle_ShowNewNumberStatic = 0x318; // FTimerHandle
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_AInfectionGameMode {
		constexpr auto SurvivorVsInfectedThreshold = 0x878; // int32_t
		constexpr auto SurvivorExperienceTime = 0x87c; // float
		constexpr auto InfectedMaxHealth = 0x880; // int32_t
		constexpr auto InfectedSpeedModifier = 0x884; // float
		constexpr auto InfectedKnifeDamage = 0x888; // int32_t
		constexpr auto InfectionHealthRegenPercentage = 0x88c; // float
		constexpr auto AlliesVictoryXPBonus = 0x890; // int32_t
		constexpr auto AlliesTeamCount = 0x894; // int32_t
		constexpr auto AxisTeamCount = 0x898; // int32_t
		constexpr auto InfectedPlayers = 0x8a0; // TArray<ABattalionPlayerControllerGMBase*>
		constexpr auto SurvivorTimer = 0x8b0; // float
		constexpr auto InfectedPlayerUUIDs = 0x8b8; // TArray<FString>
		constexpr auto GameStartNotification = 0x8d0; // UAkAudioEvent*
		constexpr auto ZombieAttackVocal = 0x8d8; // UAkAudioEvent*
		constexpr auto PlusTenCue = 0x8e0; // UAkAudioEvent*
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UWBP_CargoProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CP_Main = 0x268; // UCanvasPanel*
		constexpr auto ProgressBar_Cargo = 0x270; // UProgressBar*
		constexpr auto WBP_CargoPayloadStatus = 0x278; // UWBP_CargoPayloadStatus_C*
		constexpr auto CheckpointWidgets = 0x280; // TArray<UWBP_CargoProgressCheckpoint_C*>
		constexpr auto Checkpoints = 0x290; // TArray<float>
		constexpr auto My Geometry = 0x2a0; // FGeometry
		constexpr auto FirstTeamProgress = 0x2d8; // float
		constexpr auto FirstTeamProgressWidget = 0x2e0; // UWBP_CargoProgressCheckpoint_C*
		constexpr auto CargoGameState = 0x2e8; // ACargoGameState*
		constexpr auto FillColour = 0x2f0; // FLinearColor
		constexpr auto StartAtProgress = 0x300; // float
		constexpr auto PlayerSide = 0x304; // ECargoPlayerSideState
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_AAimTrainingTarget {
		constexpr auto TargetMeshPtr = 0x228; // UStaticMeshComponent*
		constexpr auto WeakManagerPtr = 0x230; // TWeakObjectPtr<AAimTrainingManager>
	}

	namespace n_UPromodMetric {
		constexpr auto bSmoothSamples = 0x28; // bool
		constexpr auto SmoothingFactor = 0x2c; // float
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkAssetDataWithMedia {
		constexpr auto MediaList = 0x70; // TArray<TSoftObjectPtr<UAkMediaAsset>>
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_UMedal20BombWartide {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_ACallOutVolume {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto CallOutName = 0x228; // FText
		constexpr auto BoxSize = 0x240; // FVector
		constexpr auto bIsEnabled = 0x24c; // bool
		constexpr auto UniqueID = 0x250; // int32_t
		constexpr auto PlayerList = 0x258; // TArray<ABattalionCharacter*>
		constexpr auto CheckOverlappedPlayersTimer = 0x268; // FTimerHandle
	}

	namespace n_ABattalionDeathSpectatorPawn {
		constexpr auto OwnerPC = 0x2d8; // ABattalionPlayerControllerGMBase*
		constexpr auto DeathPostProcess = 0x2e0; // UPostProcessComponent*
		constexpr auto BattInstance = 0x2f0; // UBattalionGameInstance*
		constexpr auto BattSettings = 0x2f8; // UBattalionSettings*
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto HandleSize = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto Direction = 0x474; // FVector
		constexpr auto Length = 0x480; // float
		constexpr auto bImageScale = 0x484; // bool
	}

	namespace n_AKillRunWeaponPickup {
		constexpr auto DefaultAkComp = 0x248; // UAkComponent*
		constexpr auto SaveData = 0x258; // USaveGame*
		constexpr auto KitSaveData = 0x260; // USelectedKitSaveData*
	}

	namespace n_UPlatformKeyImage {
		constexpr auto CurrentForcingPlatform = 0x260; // FString
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UTP_PromodAnimInstance_C {
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_18 = 0x678; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_17 = 0x6c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x730; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x7a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x7d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x7f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x8c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x948; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x9e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0xa88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0xb08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0xb38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0xbb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0xc38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0xcd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0xd78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0xdf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0xe28; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_6 = 0xe48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0xf50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0xf70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x1058; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByInt_15 = 0x1140; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x11e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x1260; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1380; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x1500; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x15a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x1640; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_4 = 0x16e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x1710; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x1818; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x1838; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x1858; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x1960; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x1a48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1b30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x1b50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x1c58; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x1c78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x1d60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x1e48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1f30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1f50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x2058; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x2140; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x2208; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x22f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x23d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x24c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x25a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_14 = 0x2648; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x26e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2788; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x27a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x27c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x28d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x2998; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x2a80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x2b68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2c50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2d38; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2d58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByInt_13 = 0x2e20; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2ec0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x2fa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x3048; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_12 = 0x30e8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x3188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_3 = 0x3228; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3258; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x3308; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByInt_11 = 0x3460; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x3500; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_16 = 0x3528; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x3570; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x3598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x35c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x35e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x3610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x3690; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x3710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_10 = 0x3790; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x3830; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x38d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x3950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x39d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x3a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x3ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x3b50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_9 = 0x3bd0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x3c70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_8 = 0x3d10; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_2 = 0x3db0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x3de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x3e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x3ee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_7 = 0x3f60; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x4000; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x40a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x4120; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x41a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x4220; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x4308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x4388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_6 = 0x4408; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x44a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_5 = 0x4548; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult = 0x45e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4618; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x46c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x4820; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x48c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x4a18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x4a40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x4a68; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x4bc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x4be8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x4c88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x4de0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x4f38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x4fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x5058; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_IdentityPose_2 = 0x51b0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x51c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x5248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x52c8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x5398; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x54d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x5598; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x56f0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x57c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_15 = 0x5918; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x5960; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x5988; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x5a50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x5a78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_14 = 0x5b18; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x5b60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x5b88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x5c28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByInt_4 = 0x5c78; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x5d18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0x5db8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x5e58; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_Slot_13 = 0x5f28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5f70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x6010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_12 = 0x60b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_11 = 0x60f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x6140; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x6168; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_10 = 0x6228; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x6270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_9 = 0x6330; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x6378; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x6418; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x64d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x6500; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x6528; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x6550; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x6578; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_8 = 0x65a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x65e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_7 = 0x6610; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x6658; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x66a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x66e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3 = 0x6730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x6778; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x67c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x67f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x6818; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x6840; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x68e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x6a38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x6a60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x6b48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x6c30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Inertialization = 0x6cb0; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_IdentityPose = 0x6d20; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_Slot_2 = 0x6d38; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x6d80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_RotateRootBone = 0x6dc8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_Root = 0x6e68; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x6e98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x6f80; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByInt = 0x7050; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SaveCachedPose = 0x70f0; // FAnimNode_SaveCachedPose
		constexpr auto StartPos = 0x7248; // float
		constexpr auto As Promod Pawn = 0x7250; // APromodPawn_C*
		constexpr auto Velocity = 0x7258; // FVector
		constexpr auto Acceleration = 0x7264; // FVector
		constexpr auto MovementInput = 0x7270; // FVector
		constexpr auto IsMoving = 0x727c; // bool
		constexpr auto HasMovementInput = 0x727d; // bool
		constexpr auto MovementInputAmount = 0x7280; // float
		constexpr auto MovementState = 0x7284; // ENUM_MovementState
		constexpr auto PrevMovementState = 0x7285; // ENUM_MovementState
		constexpr auto MovementAction = 0x7286; // ENUM_MovementAction
		constexpr auto Gait = 0x7287; // ENUM_Gait
		constexpr auto AimingRotation = 0x7288; // FRotator
		constexpr auto AimYawRate = 0x7294; // float
		constexpr auto DeltaTimeX = 0x7298; // float
		constexpr auto ShouldMove = 0x729c; // bool
		constexpr auto ElapsedDelayTime = 0x72a0; // float
		constexpr auto Rotate_L = 0x72a4; // bool
		constexpr auto Rotate_R = 0x72a5; // bool
		constexpr auto VelocityBlendInterpSpeed = 0x72a8; // float
		constexpr auto DiagonalScaleAmount = 0x72ac; // float
		constexpr auto RelativeAccelerationAmount = 0x72b0; // FVector
		constexpr auto WalkRunBlend = 0x72bc; // float
		constexpr auto StrideBlend = 0x72c0; // float
		constexpr auto GroundedLeanInterpSpeed = 0x72c4; // float
		constexpr auto VelocityBlend = 0x72c8; // FVelocityBlend
		constexpr auto LocRelativeVelocityDir = 0x72d8; // FVector
		constexpr auto Sum = 0x72e4; // float
		constexpr auto RelativeDirection = 0x72e8; // FVector
		constexpr auto DiagonalScaleAmountCurve = 0x72f8; // UCurveFloat*
		constexpr auto LeanAmount = 0x7300; // FLeanAmount
		constexpr auto StrideBlend_N_Walk = 0x7308; // UCurveFloat*
		constexpr auto StrideBlend_N_Run = 0x7310; // UCurveFloat*
		constexpr auto StrideBlend_C_Walk = 0x7318; // UCurveFloat*
		constexpr auto VaultStage = 0x7320; // float
		constexpr auto VaultHeightSelect = 0x7324; // int32_t
		constexpr auto VaultHighAnim = 0x7328; // UAnimSequence*
		constexpr auto VaultMIdAnim = 0x7330; // UAnimSequence*
		constexpr auto VaultLowAnim = 0x7338; // UAnimSequence*
		constexpr auto VaultUsedAnim = 0x7340; // UAnimSequence*
		constexpr auto VaultUsed_Legth = 0x7348; // float
		constexpr auto IsVaulting = 0x734c; // bool
		constexpr auto Trace Channel = 0x734d; // ETraceTypeQuery
		constexpr auto Object Types = 0x7350; // TArray<EObjectTypeQuery>
		constexpr auto CanVault = 0x7360; // bool
		constexpr auto VaultHeight = 0x7364; // float
		constexpr auto VaultStartPos = 0x7368; // FVector
		constexpr auto VaultTargetPos = 0x7374; // FVector
		constexpr auto BombLerp = 0x7380; // float
		constexpr auto LerpTimer = 0x7384; // float
		constexpr auto BombBlendBool = 0x7388; // bool
		constexpr auto BombPlantingBool = 0x7389; // bool
		constexpr auto PitchClamped = 0x738c; // float
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UNUISettingsMenu {
		constexpr auto ShoulderFirstDelay = 0x290; // float
		constexpr auto ShoulderDelay = 0x294; // float
		constexpr auto CurrentSelectedControl = 0x2a4; // int32_t
		constexpr auto Items = 0x2a8; // TArray<UNUISettingsMenuItem*>
		constexpr auto Headers = 0x2b8; // TArray<UNUISettingsMenuHeader*>
		constexpr auto AudioItems = 0x2c8; // TArray<UNUISettingsMenuItem*>
		constexpr auto HudItems = 0x2d8; // TArray<UNUISettingsMenuItem*>
		constexpr auto BindingItems = 0x2e8; // TArray<UNUISettingsMenuItem*>
		constexpr auto MaxComboSize = 0x320; // int32_t
		constexpr auto MaxComboDelay = 0x324; // float
		constexpr auto MaxComboDelayBetweenKeys = 0x328; // float
		constexpr auto Combos = 0x330; // TArray<FCombo>
		constexpr auto BindMapNames = 0x340; // TMap<FString, FText>
		constexpr auto BindCombos = 0x390; // TArray<FCombo>
		constexpr auto ChangedSettings = 0x3a0; // TMap<FString, FString>
		constexpr auto HeaderWidgetClass = 0x3f0; // UNUISettingsMenuHeader*
		constexpr auto ItemWidgetClass = 0x3f8; // UNUISettingsMenuItem*
		constexpr auto ControllerLayoutItemWidgetClass = 0x400; // UNUISettingsMenuItem*
		constexpr auto KeyBindWidgetClass = 0x408; // UNUISettingsMenuItem*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UBP_PlayerOutlineCameraModifier_C {
		constexpr auto PostProcessMaterial = 0x48; // UMaterialInstanceDynamic*
		constexpr auto Radius = 0x50; // float
		constexpr auto Intensity = 0x54; // float
		constexpr auto Strength = 0x58; // float
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UWBP_SNDHUD_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto FlashBang = 0x270; // UWidgetAnimation*
		constexpr auto Kill+15-And-Beyond = 0x278; // UWidgetAnimation*
		constexpr auto Kill+10 = 0x280; // UWidgetAnimation*
		constexpr auto Kill+5 = 0x288; // UWidgetAnimation*
		constexpr auto DamageTaken = 0x290; // UWidgetAnimation*
		constexpr auto BlockedMessagesVerticalBox = 0x298; // UVerticalBox*
		constexpr auto ClientFPS = 0x2a0; // USizeBox*
		constexpr auto FlashBangableWidgets = 0x2a8; // UCanvasPanel*
		constexpr auto FrameTime = 0x2b0; // USizeBox*
		constexpr auto GameLatency = 0x2b8; // USizeBox*
		constexpr auto GameThreadTime = 0x2c0; // USizeBox*
		constexpr auto GameToRenderLatency = 0x2c8; // USizeBox*
		constexpr auto GPUTemp = 0x2d0; // USizeBox*
		constexpr auto HudPanel = 0x2d8; // UCanvasPanel*
		constexpr auto IdleTime = 0x2e0; // USizeBox*
		constexpr auto NonFlashBangableWidgets = 0x2e8; // UCanvasPanel*
		constexpr auto OverviewSwitcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto RB_CurvedHud = 0x2f8; // URetainerBox*
		constexpr auto RenderLatency = 0x300; // USizeBox*
		constexpr auto RenderThreadTime = 0x308; // USizeBox*
		constexpr auto RHIThreadTime = 0x310; // USizeBox*
		constexpr auto WBP_ActionPrompt = 0x318; // UWBP_ActionPrompt_C*
		constexpr auto WBP_Announcement = 0x320; // UWBP_Announcement_C*
		constexpr auto WBP_BasicScoreAward = 0x328; // UWBP_BasicScoreAward_C*
		constexpr auto WBP_BombInfo = 0x330; // UWBP_BombInfo_C*
		constexpr auto WBP_ChatFeed = 0x338; // UWBP_ChatFeed_C*
		constexpr auto WBP_ClassChanged = 0x340; // UWBP_ClassChanged_C*
		constexpr auto WBP_Crosshair = 0x348; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x350; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_FireUpProgress = 0x358; // UWBP_FireUpProgress_C*
		constexpr auto WBP_GameOverScreen = 0x360; // UWBP_GameOverScreen_C*
		constexpr auto WBP_GrenadeIndicator = 0x368; // UWBP_GrenadeIndicator_C*
		constexpr auto WBP_Hitmarker = 0x370; // UWBP_Hitmarker_C*
		constexpr auto WBP_HUDEquipment_C = 0x378; // UWBP_HUDEquipment_C*
		constexpr auto WBP_Interaction = 0x380; // UWBP_Interaction_C*
		constexpr auto WBP_Killfeed = 0x388; // UWBP_Killfeed_C*
		constexpr auto WBP_KillSuccess = 0x390; // UWBP_KillSuccess_C*
		constexpr auto WBP_LoadoutScreen = 0x398; // UWBP_LoadoutScreen_C*
		constexpr auto WBP_Message = 0x3a0; // UWBP_Message_C*
		constexpr auto WBP_MiniMap = 0x3a8; // UWBP_MiniMap_C*
		constexpr auto WBP_Overtime_Shootout_Title = 0x3b0; // UWBP_Overtime_Shootout_Title_C*
		constexpr auto WBP_Overtime_Shootout_Transition = 0x3b8; // UWBP_Overtime_Shootout_Transition_C*
		constexpr auto WBP_Overtime_Shootout_Victory = 0x3c0; // UWBP_Overtime_Shootout_Victory_C*
		constexpr auto WBP_Overtime_Title = 0x3c8; // UWBP_Overtime_Title_C*
		constexpr auto WBP_PingSelection = 0x3d0; // UWBP_PingSelection_C*
		constexpr auto WBP_PlantProgressBar = 0x3d8; // UWBP_PlantProgressBar_C*
		constexpr auto WBP_ShootoutOverview_C_2 = 0x3e0; // UWBP_ShootoutOverview_C*
		constexpr auto WBP_SndGameoverviewWidget = 0x3e8; // UWBP_SndGameoverviewWidget_C*
		constexpr auto WBP_SNDLeaderboard = 0x3f0; // UWBP_SNDLeaderboard_C*
		constexpr auto WBP_SniperVignette = 0x3f8; // UWBP_SniperVignette_C*
		constexpr auto WBP_Spectating = 0x400; // UWBP_Spectating_C*
		constexpr auto WBP_StaminaAndHealthBars_C_3 = 0x408; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x410; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_SwappingSides = 0x418; // UWBP_SwappingSides_C*
		constexpr auto WBP_Vault = 0x420; // UWBP_Vault_C*
		constexpr auto WBP_VictoryState = 0x428; // UWBP_VictoryState_C*
		constexpr auto WBP_VoteHUD = 0x430; // UWBP_VoteHUD_C*
		constexpr auto WBP_WeaponPickup = 0x438; // UWBP_WeaponPickup_C*
		constexpr auto In Visibility = 0x440; // ESlateVisibility
		constexpr auto OnShowUpdateLeaderboard = 0x448; // FMulticastInlineDelegate
		constexpr auto IsPlayingHealth = 0x458; // bool
		constexpr auto OnShowUpdateGameOverScreen = 0x460; // FMulticastInlineDelegate
		constexpr auto CurrentBlockedMessages = 0x470; // TArray<UWBP_GenericBlockedMessage_C*>
		constexpr auto bBlockedUIFound = 0x480; // bool
		constexpr auto RemainingStamina = 0x484; // float
		constexpr auto StaminaRegenMultiplier = 0x488; // float
		constexpr auto StaminaDirection = 0x48c; // int32_t
		constexpr auto StaminaEvent = 0x490; // FStaminaEvent
		constexpr auto CameraModifiers = 0x4a8; // TArray<UCameraModifier*>
		constexpr auto BattalionGameInstance = 0x4b8; // UBattalionGameInstance*
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_ABP_StimshotFireUp_C {
		constexpr auto UberGraphFrame = 0x3c8; // FPointerToUberGraphFrame
		constexpr auto CameraModifier = 0x3d0; // UBP_RegenCameraModifier_C*
		constexpr auto Health Regen Event = 0x3d8; // FHealthRegenEvent
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UPlayerSceneCaptureComponent2D {
		constexpr auto CachedCharacter = 0x8a8; // ABattalionCharacter*
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UWBP_BlitzTeamRole_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Role = 0x268; // UTextBlock*
		constexpr auto PickupText = 0x270; // FText
		constexpr auto PlantText = 0x288; // FText
		constexpr auto EscortText = 0x2a0; // FText
		constexpr auto KillText = 0x2b8; // FText
		constexpr auto DefendText = 0x2d0; // FText
		constexpr auto DefuseText = 0x2e8; // FText
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UNuclearAnalyticsSystem {
		constexpr auto ReportEndpoint = 0x30; // FString
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_AAkIndoorReverbVolume {
		constexpr auto VolumeType = 0x290; // EVolumeType
		constexpr auto MaxRTPCValue = 0x294; // float
		constexpr auto AkComponent = 0x298; // UAkComponent*
		constexpr auto OnEnteredEvent = 0x2a0; // UAkAudioEvent*
		constexpr auto OnExitEvent = 0x2a8; // UAkAudioEvent*
	}

	namespace n_ACargoGameMode {
		constexpr auto bCheckpointPipsCountForDraws = 0xd4d; // bool
		constexpr auto TugOfWarTitleTime = 0xd50; // float
		constexpr auto TugOfWarTransitionTime = 0xd54; // float
		constexpr auto TugOfWarPercentageAdvantageIncrementSize = 0xd58; // float
		constexpr auto TugOfWarPercentageAdvantageTickSize = 0xd5c; // float
		constexpr auto TugOfWarMaxAdvantageCap = 0xd60; // float
		constexpr auto bTugOfWarFireupsAllowed = 0xd64; // bool
		constexpr auto TugOfWarPassiveFireupMultiplier = 0xd68; // float
		constexpr auto TugOfWarTime = 0xd6c; // float
		constexpr auto TugOfWarTime_SuddenDeath = 0xd70; // float
		constexpr auto TugOfWarSuddenDeathWinPercentage = 0xd74; // float
		constexpr auto TugOfWarRespawnTime = 0xd78; // float
		constexpr auto TugOfWarIdleTime = 0xd7c; // float
		constexpr auto bUseTugOfWar = 0xd80; // bool
		constexpr auto CargoVictoryTime = 0xd84; // float
		constexpr auto EndOfRoundMusicStart = 0xd88; // float
		constexpr auto FirstAttackerPayloadSpeed = 0xd8c; // float
		constexpr auto PassivePayloadSpeed = 0xd90; // float
		constexpr auto MaxSpeedIncreaseAttackers = 0xd94; // int32_t
		constexpr auto ExtraAttackerPayloadSpeed = 0xd98; // float
		constexpr auto CargoIdleReverseTime = 0xd9c; // float
		constexpr auto bAllowOvertime = 0xda0; // bool
		constexpr auto TotalGracePeriod = 0xda4; // float
		constexpr auto MinimumGracePeriod = 0xda8; // float
		constexpr auto PayloadCloseTrigger = 0xdb0; // float
		constexpr auto TugOfWarCloseTrigger = 0xdb4; // float
		constexpr auto CheckPointReachedSound = 0xdb8; // UAkAudioEvent*
		constexpr auto CheckPointUnlockedSound = 0xdc0; // UAkAudioEvent*
		constexpr auto PayloadBlockedSound = 0xdc8; // UAkAudioEvent*
		constexpr auto PayloadUnblockedSound = 0xdd0; // UAkAudioEvent*
		constexpr auto TugOfWarPayloadBlockedSound = 0xdd8; // UAkAudioEvent*
		constexpr auto TugOfWarPayloadUnblockedSound = 0xde0; // UAkAudioEvent*
		constexpr auto CargoGameState = 0xde8; // ACargoGameState*
		constexpr auto CargoActor = 0xdf0; // AMonorail*
		constexpr auto TugOfWarActor = 0xdf8; // ATugOfWarMonorail*
		constexpr auto CargoPathActor = 0xe00; // AMonorailPath*
		constexpr auto TugOfWarPathActor = 0xe08; // ATugOfWarMonorailPath*
		constexpr auto CurrentCheckpoint = 0xe10; // int32_t
		constexpr auto LastRoundEndTime = 0xe14; // float
		constexpr auto TotalOvertimeUsed = 0xe18; // float
		constexpr auto GameStartSound = 0xe20; // UAkAudioEvent*
		constexpr auto AttackerInstructionsSound = 0xe28; // UAkAudioEvent*
		constexpr auto DefenderInstructionsSound = 0xe30; // UAkAudioEvent*
		constexpr auto NearFinalCheckpointSound = 0xe38; // UAkAudioEvent*
		constexpr auto StartRoundEndMusic = 0xe40; // UAkAudioEvent*
		constexpr auto StopRoundEndMusic = 0xe48; // UAkAudioEvent*
		constexpr auto OvertimeAnnouncerSound = 0xe50; // UAkAudioEvent*
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x440; // FText
		constexpr auto TextMaterial = 0x458; // UMaterialInterface*
		constexpr auto Font = 0x460; // UFont*
		constexpr auto HorizontalAlignment = 0x468; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x469; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x46c; // FColor
		constexpr auto XScale = 0x470; // float
		constexpr auto YScale = 0x474; // float
		constexpr auto WorldSize = 0x478; // float
		constexpr auto InvDefaultSize = 0x47c; // float
		constexpr auto HorizSpacingAdjust = 0x480; // float
		constexpr auto VertSpacingAdjust = 0x484; // float
		constexpr auto bAlwaysRenderAsText = 0x488; // char : 1
	}

	namespace n_UABP_Socom_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UKantanSeriesStyleSet {
		constexpr auto Styles = 0x30; // TArray<FKantanSeriesStyle>
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UNUIScoreboardTeamMember {
		constexpr auto PlayerScore = 0x320; // FText
		constexpr auto PlayerStartingXP = 0x338; // int32_t
		constexpr auto PlayerStartingProScore = 0x33c; // int32_t
		constexpr auto PlayerKills = 0x340; // FText
		constexpr auto PlayerAssists = 0x358; // FText
		constexpr auto PlayerDeaths = 0x370; // FText
		constexpr auto FFAPlayerKDR = 0x388; // FText
		constexpr auto CTFPlayerCaptures = 0x3a0; // FText
		constexpr auto CTFPlayerReturns = 0x3b8; // FText
		constexpr auto DOMPlayerCaptures = 0x3d0; // FText
		constexpr auto DOMPlayerNeutralizations = 0x3e8; // FText
		constexpr auto bPlayerReady = 0x400; // bool
		constexpr auto FFAVisibility = 0x401; // ESlateVisibility
		constexpr auto WartideVisibility = 0x402; // ESlateVisibility
		constexpr auto CTFVisibility = 0x403; // ESlateVisibility
		constexpr auto DOMVisibility = 0x404; // ESlateVisibility
		constexpr auto INFVisibility = 0x405; // ESlateVisibility
		constexpr auto PlatformId = 0x408; // FUniqueNetIdRepl
	}

	namespace n_UWBP_ServerBrowser_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_Filters = 0x268; // UBorder*
		constexpr auto BTN_ApplyFilters = 0x270; // UButton*
		constexpr auto BTN_Filters = 0x278; // UButton*
		constexpr auto BTN_HostPrivateServer = 0x280; // UButton*
		constexpr auto BTN_Join = 0x288; // UButton*
		constexpr auto BTN_NextPage = 0x290; // UButton*
		constexpr auto BTN_PrevPage = 0x298; // UButton*
		constexpr auto BTN_Refresh = 0x2a0; // UButton*
		constexpr auto BTN_ResetFilters = 0x2a8; // UButton*
		constexpr auto BTN_Search = 0x2b0; // UButton*
		constexpr auto CP_Extras = 0x2b8; // UCanvasPanel*
		constexpr auto ET_SearchBox = 0x2c0; // UEditableText*
		constexpr auto ETB_Password = 0x2c8; // UEditableText*
		constexpr auto Filter_Mode_Wartide = 0x2d0; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Players_LessThanFive = 0x2d8; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Players_None = 0x2e0; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Players_NotFull = 0x2e8; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Type_Locked = 0x2f0; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Type_Public = 0x2f8; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Filter_Type_VersionNumber = 0x300; // UWBP_ServerBrowserFilterOption_C*
		constexpr auto Image = 0x308; // UImage*
		constexpr auto Image_2 = 0x310; // UImage*
		constexpr auto Image_3 = 0x318; // UImage*
		constexpr auto Image_4 = 0x320; // UImage*
		constexpr auto Image_5 = 0x328; // UImage*
		constexpr auto Image_6 = 0x330; // UImage*
		constexpr auto Image_7 = 0x338; // UImage*
		constexpr auto Image_8 = 0x340; // UImage*
		constexpr auto Image_9 = 0x348; // UImage*
		constexpr auto Image_165 = 0x350; // UImage*
		constexpr auto Image_389 = 0x358; // UImage*
		constexpr auto Image_580 = 0x360; // UImage*
		constexpr auto IMG_FiltersBtnBackground = 0x368; // UImage*
		constexpr auto IMG_FiltersBtnBackground_2 = 0x370; // UImage*
		constexpr auto IMG_FiltersBtnBackground_3 = 0x378; // UImage*
		constexpr auto IMG_FiltersBtnBackground_4 = 0x380; // UImage*
		constexpr auto IMG_FiltersBtnBottomBar = 0x388; // UImage*
		constexpr auto IMG_FiltersBtnBottomBar_2 = 0x390; // UImage*
		constexpr auto IMG_FiltersBtnBottomBar_3 = 0x398; // UImage*
		constexpr auto IMG_FiltersBtnBottomBar_4 = 0x3a0; // UImage*
		constexpr auto IMG_MapPreview = 0x3a8; // UImage*
		constexpr auto MapArrowImg = 0x3b0; // UImage*
		constexpr auto MapBtn = 0x3b8; // UButton*
		constexpr auto ModeArrowImg = 0x3c0; // UImage*
		constexpr auto ModeBtn = 0x3c8; // UButton*
		constexpr auto PingArrowImg = 0x3d0; // UImage*
		constexpr auto PingBtn = 0x3d8; // UButton*
		constexpr auto PlayerCountArrowImg = 0x3e0; // UImage*
		constexpr auto PlayerCountBtn = 0x3e8; // UButton*
		constexpr auto SB_Password = 0x3f0; // USizeBox*
		constexpr auto ServerListContainer = 0x3f8; // UScrollBox*
		constexpr auto ServerNameArrowImg = 0x400; // UImage*
		constexpr auto ServerNameBtn = 0x408; // UButton*
		constexpr auto TB_ButtonText = 0x410; // UTextBlock*
		constexpr auto TB_ButtonText_2 = 0x418; // UTextBlock*
		constexpr auto TB_ButtonText_3 = 0x420; // UTextBlock*
		constexpr auto TB_FiltersBtnText = 0x428; // UTextBlock*
		constexpr auto TB_FiltersBtnText_2 = 0x430; // UTextBlock*
		constexpr auto TB_FiltersBtnText_3 = 0x438; // UTextBlock*
		constexpr auto TB_FiltersBtnText_4 = 0x440; // UTextBlock*
		constexpr auto TB_Info_Map = 0x448; // UTextBlock*
		constexpr auto TB_Info_Mode = 0x450; // UTextBlock*
		constexpr auto TB_Info_PlayerCount = 0x458; // UTextBlock*
		constexpr auto TB_Info_Title = 0x460; // UTextBlock*
		constexpr auto TB_Info_Type = 0x468; // UTextBlock*
		constexpr auto ThrobberContainer = 0x470; // UOverlay*
		constexpr auto TypeArrowImg = 0x478; // UImage*
		constexpr auto TypeBtn = 0x480; // UButton*
		constexpr auto VB_ServerInfo = 0x488; // UVerticalBox*
		constexpr auto WB_MapNames = 0x490; // UWrapBox*
		constexpr auto WBP_ServerBrowserItem = 0x498; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_2 = 0x4a0; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_3 = 0x4a8; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_4 = 0x4b0; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_5 = 0x4b8; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_885 = 0x4c0; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_941 = 0x4c8; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_1031 = 0x4d0; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_1160 = 0x4d8; // UWBP_ServerBrowserItem_C*
		constexpr auto WBP_ServerBrowserItem_1296 = 0x4e0; // UWBP_ServerBrowserItem_C*
		constexpr auto WS_Extras = 0x4e8; // UWidgetSwitcher*
		constexpr auto SearchParams = 0x4f0; // FNuclearSessionSettings
		constexpr auto ServerListWidgets = 0x570; // TArray<UWBP_ServerBrowserItem_C*>
		constexpr auto SelectedServerWidget = 0x580; // UWBP_ServerBrowserItem_C*
		constexpr auto SortColumn = 0x588; // int32_t
		constexpr auto SortDirection = 0x58c; // ENuclearSortDirection
		constexpr auto PendingJoinWidget = 0x590; // UWBP_ServerBrowserItem_C*
		constexpr auto PendingJoinOptions = 0x598; // FString
		constexpr auto FiltersOpen = 0x5a8; // bool
		constexpr auto ServersPerPage = 0x5ac; // int32_t
		constexpr auto PagedServers = 0x5b0; // TArray<FSessionArray>
		constexpr auto AllSessions = 0x5c0; // TArray<FNuclearSessionResult>
		constexpr auto CurrentPageIdx = 0x5d0; // int32_t
		constexpr auto AvailableMaps = 0x5d8; // TArray<FString>
		constexpr auto SearchText = 0x5e8; // FString
		constexpr auto MapDetailsAssets = 0x5f8; // TMap<FString, UGuardiansMapAsset*>
		constexpr auto FilterProtected = 0x648; // bool
		constexpr auto FilterProtectedSet = 0x649; // bool
		constexpr auto Max Players = 0x64c; // int32_t
	}

	namespace n_UBattalionColoursDataAsset {
		constexpr auto Colours = 0x30; // TArray<FBattalionColourEntity>
	}

	namespace n_UWBP_Crosshair_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto CenterCrosshair = 0x318; // UImage*
		constexpr auto CenterCrosshair_Grenade = 0x320; // UImage*
		constexpr auto CenterCrosshair_ThrowingKnife = 0x328; // UImage*
		constexpr auto CrosshairSwitcher = 0x330; // UWidgetSwitcher*
		constexpr auto DownCrosshair = 0x338; // UImage*
		constexpr auto Grenade = 0x340; // UCanvasPanel*
		constexpr auto LeftCrosshair = 0x348; // UImage*
		constexpr auto RightCrosshair = 0x350; // UImage*
		constexpr auto Standard = 0x358; // UCanvasPanel*
		constexpr auto ThrowingKnife = 0x360; // UCanvasPanel*
		constexpr auto UpCrosshair = 0x368; // UImage*
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UReset-Legend-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image_405 = 0x288; // UImage*
		constexpr auto Wish-Button = 0x290; // UButton*
		constexpr auto ButtonClicked = 0x298; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_AMonorail {
		constexpr auto CurrentTime = 0x220; // float
		constexpr auto CurrentCheckpointSplineKey = 0x224; // float
		constexpr auto CurrentCheckpoint = 0x228; // int32_t
		constexpr auto CurrentTotalMonorailMultiplier = 0x22c; // float
		constexpr auto bCargoInitialized = 0x230; // bool
		constexpr auto bCargoDisabled = 0x231; // bool
		constexpr auto CurrentDisableTimer = 0x234; // float
		constexpr auto CurrentEnableTimer = 0x238; // float
		constexpr auto CurrentInitializationTimer = 0x23c; // float
		constexpr auto FirstTeamScore = 0x240; // float
		constexpr auto SelectedPath = 0x248; // AMonorailPath*
		constexpr auto CrawlerState = 0x250; // ECrawlerState
		constexpr auto CargoMeshActor = 0x258; // AMonorailCarriage*
		constexpr auto TimeUntilReverse = 0x260; // float
		constexpr auto DecayTimer = 0x264; // float
		constexpr auto OnCheckpointReached = 0x280; // FMulticastInlineDelegate
		constexpr auto OnCheckpointPassed = 0x290; // FMulticastInlineDelegate
		constexpr auto CargoGameMode = 0x2b0; // ACargoGameMode*
		constexpr auto CargoGameState = 0x2b8; // ACargoGameState*
	}

	namespace n_UWBP_ToolTip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x268; // UWidgetAnimation*
		constexpr auto ToolTipText1 = 0x270; // UTextBlock*
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UNUICallVoteMenu {
		constexpr auto TimeoutTypes = 0x278; // TArray<FString>
		constexpr auto Title = 0x288; // UTextBlock*
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UKillFeedTimeDisplay_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_ComparisonArrow = 0x268; // UImage*
		constexpr auto IMG_ComparisonArrow_2 = 0x270; // UImage*
		constexpr auto IMG_ComparisonIndicator = 0x278; // UImage*
		constexpr auto IMG_PlusIcon = 0x280; // UImage*
		constexpr auto TimeDisplayText = 0x288; // UTextBlock*
		constexpr auto WS_ComparisonType = 0x290; // UWidgetSwitcher*
		constexpr auto WS_CompArrow = 0x298; // UWidgetSwitcher*
		constexpr auto Seconds = 0x2a0; // float
		constexpr auto ShouldColourText = 0x2a4; // bool
		constexpr auto ShouldUseTriangle = 0x2a5; // bool
		constexpr auto DownColour = 0x2a8; // FLinearColor
		constexpr auto UpColour = 0x2b8; // FLinearColor
		constexpr auto DownOutlineColour = 0x2c8; // FLinearColor
		constexpr auto UpOutlineColour = 0x2d8; // FLinearColor
	}

	namespace n_UAkTVOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UWBP_Metric_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto LabelTextBlock = 0x278; // UTextBlock*
		constexpr auto ValueTextBlock = 0x280; // UTextBlock*
		constexpr auto Label = 0x288; // FText
		constexpr auto ValueFormat = 0x2a0; // FText
		constexpr auto MinIntegralDigits = 0x2b8; // int32_t
		constexpr auto MinFractionalDigits = 0x2bc; // int32_t
		constexpr auto MaxFractionalDigits = 0x2c0; // int32_t
		constexpr auto bShowAverage = 0x2c4; // bool
	}

	namespace n_UNUIClosedPrototypeVersion {
		constexpr auto MilestoneText = 0x260; // FText
		constexpr auto MatchIdText = 0x278; // FText
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UMedal30BombCTF {
		constexpr auto CTFGameMode = 0x48; // ACTFGameMode*
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_APromodGameState {
		constexpr auto CleanClassSettings = 0x540; // APromodClassSettings*
		constexpr auto FuseTime = 0x548; // float
		constexpr auto Delegate_SpawnVFXManager = 0x550; // FMulticastInlineDelegate
		constexpr auto Delegate_DespawnAllVFX = 0x560; // FMulticastInlineDelegate
		constexpr auto OnBombPlanted = 0x570; // FMulticastInlineDelegate
		constexpr auto OnBombDefused = 0x580; // FMulticastInlineDelegate
		constexpr auto NumLives_Team0 = 0x590; // int32_t
		constexpr auto NumLives_Team1 = 0x594; // int32_t
		constexpr auto ShootoutOrderedPlayerList_Team0 = 0x598; // TArray<APromodPlayerState*>
		constexpr auto ShootoutOrderedPlayerList_Team1 = 0x5a8; // TArray<APromodPlayerState*>
		constexpr auto NextShootoutPlayer_Team0 = 0x5b8; // APromodPlayerState*
		constexpr auto NextShootoutPlayer_Team1 = 0x5c0; // APromodPlayerState*
		constexpr auto SmokeVFXOverridden = 0x5c8; // bool
		constexpr auto SmokeVFXName = 0x5cc; // FName
		constexpr auto bShouldFlashGrenadeBeBlockedBySmoke = 0x5d4; // bool
		constexpr auto NumRounds = 0x5d8; // int32_t
		constexpr auto LeftScorePreShootout = 0x5dc; // int32_t
		constexpr auto ActiveInteractableActors = 0x5e8; // TArray<AActor*>
		constexpr auto AssaultLimit = 0x5f8; // int32_t
		constexpr auto BreacherLimit = 0x5fc; // int32_t
		constexpr auto ReconLimit = 0x600; // int32_t
	}

	namespace n_AVolatileAsset {
		constexpr auto MeshComponentPtr = 0x230; // UStaticMeshComponent*
		constexpr auto CameraShakeComponentPtr = 0x238; // UCameraShakeSourceComponent*
		constexpr auto ExplosionSequencePtr = 0x240; // UActorSequenceComponent*
		constexpr auto AudioComponent = 0x248; // UAkComponent*
		constexpr auto BaseHealth = 0x250; // float
		constexpr auto DecayRatePtr = 0x258; // UCurveFloat*
		constexpr auto Stages = 0x260; // TArray<FVolatileStage>
		constexpr auto BaseDamage = 0x270; // float
		constexpr auto MinimumDamage = 0x274; // float
		constexpr auto DamageInnerRadius = 0x278; // float
		constexpr auto DamageOuterRadius = 0x27c; // float
		constexpr auto DamageFalloff = 0x280; // float
		constexpr auto DamageType = 0x288; // UDamageType*
		constexpr auto DamageModifiers = 0x290; // TArray<FVolatileDamageModifier>
		constexpr auto DisplayDamageDebug = 0x2a0; // bool
		constexpr auto CurrentHealth = 0x2a4; // float
		constexpr auto IsDead = 0x2a8; // bool
		constexpr auto ActiveParticleSystem = 0x2b0; // UParticleSystemComponent*
		constexpr auto LastDamageEventInstigator = 0x2b8; // AController*
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UTimeSeriesPlot {
		constexpr auto DataSource = 0x398; // UObject*
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UWBP_CargoVictoryProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CenterProgressBarSpacer = 0x268; // USpacer*
		constexpr auto CenterProgressBarSpacer_2 = 0x270; // USpacer*
		constexpr auto HB_ProgressOverview = 0x278; // UHorizontalBox*
		constexpr auto HB_ProgressOverview_2 = 0x280; // UHorizontalBox*
		constexpr auto IMG_Contested = 0x288; // UImage*
		constexpr auto IMG_Contested_2 = 0x290; // UImage*
		constexpr auto IMG_Disabled_2 = 0x298; // UImage*
		constexpr auto IMG_Lost = 0x2a0; // UImage*
		constexpr auto IMG_ProgressBackground = 0x2a8; // UImage*
		constexpr auto IMG_ProgressBackground_2 = 0x2b0; // UImage*
		constexpr auto IMG_Push1 = 0x2b8; // UImage*
		constexpr auto IMG_Push1_2 = 0x2c0; // UImage*
		constexpr auto IMG_Push2 = 0x2c8; // UImage*
		constexpr auto IMG_Push2_2 = 0x2d0; // UImage*
		constexpr auto IMG_Push3 = 0x2d8; // UImage*
		constexpr auto IMG_Push3_2 = 0x2e0; // UImage*
		constexpr auto IMG_Won = 0x2e8; // UImage*
		constexpr auto IMG_Won_2 = 0x2f0; // UImage*
		constexpr auto MyTeamContainer = 0x2f8; // UScaleBox*
		constexpr auto MyTeamProgress = 0x300; // UWBP_CargoProgress_C*
		constexpr auto SpeedStateBackgroundImage = 0x308; // UImage*
		constexpr auto SpeedStateBackgroundImage_2 = 0x310; // UImage*
		constexpr auto TheirTeamContainer = 0x318; // UScaleBox*
		constexpr auto TheirTeamProgress = 0x320; // UWBP_CargoProgress_C*
		constexpr auto WS_CargoSpeedState = 0x328; // UWidgetSwitcher*
		constexpr auto WS_CargoSpeedState_2 = 0x330; // UWidgetSwitcher*
		constexpr auto CargoGameState = 0x338; // ACargoGameState*
		constexpr auto My Team Progress = 0x340; // float
		constexpr auto Their Team Progress = 0x344; // float
		constexpr auto MyTeamTime = 0x348; // float
		constexpr auto TheirTeamTime = 0x34c; // float
		constexpr auto CurrentTime = 0x350; // float
		constexpr auto bTickAnimation = 0x354; // bool
		constexpr auto HUDColour = 0x358; // UHUDTextDataAsset*
		constexpr auto bCenter = 0x360; // bool
		constexpr auto bWeWon = 0x361; // bool
	}

	namespace n_UMedalKillInfected {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_APatrolPath {
		constexpr auto RootComp = 0x220; // USceneComponent*
		constexpr auto SplineComp = 0x228; // USplineComponent*
		constexpr auto PathSplineComp = 0x230; // USplineComponent*
		constexpr auto PatrolPoints = 0x238; // TArray<APatrolPoint*>
		constexpr auto LoopPath = 0x248; // bool
		constexpr auto PathName = 0x250; // FText
		constexpr auto PathColor = 0x268; // FColor
		constexpr auto ShowAIPath = 0x26c; // bool
		constexpr auto NavigationPathColor = 0x270; // FColor
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UNUINetworkStatus {
		constexpr auto EstimatedPing = 0x2c8; // float
		constexpr auto CheatsEnabled = 0x2cc; // bool
		constexpr auto PingQuality = 0x2cd; // ENetworkStatus
		constexpr auto PingVariationQuality = 0x2ce; // ENetworkStatus
		constexpr auto FramerateQuality = 0x2cf; // ENetworkStatus
		constexpr auto RefreshRateQuality = 0x2d0; // ENetworkStatus
		constexpr auto PacketLossQuality = 0x2d1; // ENetworkStatus
		constexpr auto ServerPerformanceQuality = 0x2d2; // ENetworkStatus
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UWBP_InventoryItem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IndexText = 0x268; // UTextBlock*
		constexpr auto ItemImage = 0x270; // UImage*
		constexpr auto ItemTexture = 0x278; // UTexture2D*
		constexpr auto Key = 0x280; // FText
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UWBP_BombProgressBar_C {
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UBattalionNationDataAsset {
		constexpr auto Nations = 0x30; // TArray<FNationDataEntity>
	}

	namespace n_UMedal1v4Clutch {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto ClutcherPC = 0x50; // ABattalionPlayerControllerGMBase*
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_ABattalionReplaySpectatorPlayerController {
		constexpr auto CurrentPlayerIndex = 0xc00; // int32_t
		constexpr auto SpecPawn = 0xc08; // ABattalionSpectatorPawn*
		constexpr auto IsPlayingReplay = 0xc10; // bool
		constexpr auto CurrentSpecPlayer = 0xc18; // ABattalionCharacter*
		constexpr auto ReplayDataActor = 0xc20; // AReplayDataActor*
		constexpr auto VTTransitionParams = 0xc28; // FViewTargetTransitionParams
		constexpr auto IsUIHidden = 0xc38; // bool
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UPlayerAnimInstance {
		constexpr auto StandToCrouchMontage = 0x330; // UAnimMontage*
		constexpr auto CrouchToProneMontage = 0x338; // UAnimMontage*
		constexpr auto ProneToCrouchMontage = 0x340; // UAnimMontage*
		constexpr auto CrouchToStandMontage = 0x348; // UAnimMontage*
		constexpr auto JumpLandMontage = 0x350; // UAnimMontage*
		constexpr auto DefaultGripPoseSequence = 0x358; // UAnimSequence*
		constexpr auto Turn90HalfSecondCurve = 0x360; // UCurveFloat*
		constexpr auto StandShuffleMontage = 0x368; // UAnimMontage*
		constexpr auto StandShuffleMontageReverse = 0x370; // UAnimMontage*
		constexpr auto CrouchTurnLeft90 = 0x378; // UAnimMontage*
		constexpr auto CrouchTurnRight90 = 0x380; // UAnimMontage*
		constexpr auto StandShuffle180Montage = 0x388; // UAnimMontage*
		constexpr auto StandShuffle180MontageReverse = 0x390; // UAnimMontage*
		constexpr auto CrouchTurnLeft180 = 0x398; // UAnimMontage*
		constexpr auto CrouchTurnRight180 = 0x3a0; // UAnimMontage*
		constexpr auto FootPosition = 0x42c; // float
		constexpr auto FootPositionDirection = 0x430; // float
		constexpr auto Speed = 0x434; // float
		constexpr auto ThirdPersonPawn = 0x438; // APromodCharacter*
		constexpr auto InAir = 0x440; // bool
		constexpr auto Direction = 0x444; // float
		constexpr auto StartPosition = 0x448; // float
		constexpr auto RootOffsetYaw = 0x44c; // float
		constexpr auto Stance = 0x450; // int32_t
		constexpr auto StanceEquals2 = 0x454; // bool
		constexpr auto AdditiveGripPose3P = 0x458; // UAnimSequence*
		constexpr auto AdditiveGripTransform = 0x460; // FTransform
		constexpr auto IsOneHanded = 0x490; // bool
		constexpr auto TargetingAnimTransition = 0x494; // float
		constexpr auto IsRunning = 0x498; // bool
		constexpr auto RunLean = 0x49c; // float
		constexpr auto ShouldStandStill = 0x4a0; // bool
		constexpr auto InstantDirection = 0x4a4; // float
		constexpr auto IsFiring = 0x4a8; // bool
		constexpr auto bDisplayDead = 0x4a9; // bool
		constexpr auto OnLadder = 0x4aa; // bool
		constexpr auto LadderAnimationProgress = 0x4ac; // float
		constexpr auto LeanTranslation = 0x4b0; // FVector
		constexpr auto LeanUpperBodyRotation = 0x4bc; // FRotator
		constexpr auto LeanLowerBodyRotation = 0x4c8; // FRotator
		constexpr auto BlendGripPose = 0x4d4; // bool
		constexpr auto BlendGripPoseFlt = 0x4d8; // float
		constexpr auto AdditiveInvertedGripFixApply = 0x4dc; // float
		constexpr auto AdditiveInvertedGripFixApplyBool = 0x4e0; // bool
		constexpr auto AODulledInverted = 0x4e4; // FVector2D
		constexpr auto AODulledInvertedClamped = 0x4ec; // FVector2D
		constexpr auto IsOneHandedFloat = 0x4f4; // float
		constexpr auto LastTimeInAirST1 = 0x4f8; // bool
		constexpr auto CardinalLerpDirection = 0x4fc; // float
		constexpr auto IsKnife = 0x500; // bool
		constexpr auto IsThompsonOrTargeting = 0x501; // bool
		constexpr auto IsSliding = 0x502; // bool
	}

	namespace n_UPromodFireUpActionDataAsset {
		constexpr auto ActionData = 0x30; // TMap<EFireUpActionType, FFireUpActionData>
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x440; // FColor
		constexpr auto FrustumAngle = 0x444; // float
		constexpr auto FrustumAspectRatio = 0x448; // float
		constexpr auto FrustumStartDist = 0x44c; // float
		constexpr auto FrustumEndDist = 0x450; // float
		constexpr auto Texture = 0x458; // UTexture*
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_ATUTHUD {
		constexpr auto BuyScreen = 0x5f8; // UNUIBuyScreen*
		constexpr auto BuyScreenClass = 0x600; // UNUIBuyScreen*
	}

	namespace n_UAnimNotify_ScreenSwayCurve {
		constexpr auto ScreenSwayCurve = 0x38; // UCurveVector*
	}

	namespace n_UWBP_HardpointOverviewScore_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LockFadeIn = 0x268; // UWidgetAnimation*
		constexpr auto BottomTeamBars = 0x270; // UImage*
		constexpr auto BottomTeamBars_2 = 0x278; // UImage*
		constexpr auto LeftTeamProgressBar = 0x280; // UProgressBar*
		constexpr auto LeftTeamScore = 0x288; // UTextBlock*
		constexpr auto Lock = 0x290; // UImage*
		constexpr auto MatchTime = 0x298; // UImage*
		constexpr auto MatchTimer = 0x2a0; // UTextBlock*
		constexpr auto Overlay_1 = 0x2a8; // UOverlay*
		constexpr auto RightTeamProgressBar = 0x2b0; // UProgressBar*
		constexpr auto RightTeamScore = 0x2b8; // UTextBlock*
		constexpr auto SecondaryTimer = 0x2c0; // UTextBlock*
		constexpr auto WhiteTimer = 0x2c8; // UImage*
		constexpr auto TimerLocked = 0x2d0; // bool
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABattalionWeapon_Projectile {
		constexpr auto ProjectileConfig = 0x7c0; // FProjectileWeaponData
	}

	namespace n_UPromodGameModeScoreAwardsDataAsset {
		constexpr auto ScoreAwards = 0x30; // TMap<EScoreAwardType, int32_t>
		constexpr auto FireUpAwards = 0x80; // TMap<EScoreAwardType, float>
		constexpr auto TimedObjectiveAwardTickInterval = 0xd0; // float
		constexpr auto MaxTimedObjectiveAward = 0xd4; // int32_t
	}

	namespace n_UNUIScoreboardScreen {
		constexpr auto CurrentScoreboard = 0x278; // UNUIScoreboard*
		constexpr auto ModeName = 0x280; // FText
		constexpr auto MapName = 0x298; // FText
		constexpr auto MatchTime = 0x2b0; // FText
		constexpr auto DisplayMapNames = 0x2c8; // TMap<FString, FText>
		constexpr auto DisplayModeNames = 0x318; // TMap<FString, FText>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UWBP_CustomLoadoutButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BTN_Main = 0x268; // UButton*
		constexpr auto IMG_Background = 0x270; // UImage*
		constexpr auto IMG_BackgroundAdd = 0x278; // UImage*
		constexpr auto IMG_BackgroundInvisible = 0x280; // UImage*
		constexpr auto IMG_Favourite = 0x288; // UImage*
		constexpr auto IMG_FireupIcon = 0x290; // UImage*
		constexpr auto TB_LoadoutIndex = 0x298; // UTextBlock*
		constexpr auto TB_LoadoutName = 0x2a0; // UTextBlock*
		constexpr auto WS_Type = 0x2a8; // UWidgetSwitcher*
		constexpr auto HoverColor = 0x2b0; // FLinearColor
		constexpr auto UnHoverColor = 0x2c0; // FLinearColor
		constexpr auto Loadout Name = 0x2d0; // FString
		constexpr auto Loadout Index = 0x2e0; // int32_t
		constexpr auto MaxCharacters = 0x2e4; // int32_t
		constexpr auto Loadout = 0x2e8; // FLoadoutData
		constexpr auto Type = 0x430; // int32_t
		constexpr auto LoadoutHovered = 0x438; // FMulticastInlineDelegate
		constexpr auto LoadoutSelected = 0x448; // FMulticastInlineDelegate
		constexpr auto LoadoutDeleted = 0x458; // FMulticastInlineDelegate
		constexpr auto Selected = 0x468; // bool
		constexpr auto Hovered = 0x469; // bool
	}

	namespace n_ABP_MonorailCarriage_C {
		constexpr auto UberGraphFrame = 0x3b0; // FPointerToUberGraphFrame
		constexpr auto Niagara_Fire2 = 0x3b8; // UNiagaraComponent*
		constexpr auto Niagara_Fire1 = 0x3c0; // UNiagaraComponent*
		constexpr auto Niagara_Volatile_Fire = 0x3c8; // UNiagaraComponent*
		constexpr auto Volatile_Fire2 = 0x3d0; // UParticleSystemComponent*
		constexpr auto Volatile_Fire1 = 0x3d8; // UParticleSystemComponent*
		constexpr auto Volatile_HighDamage2 = 0x3e0; // UParticleSystemComponent*
		constexpr auto Volatile_HighDamage1 = 0x3e8; // UParticleSystemComponent*
		constexpr auto Volatile_Fire = 0x3f0; // UParticleSystemComponent*
		constexpr auto Volatile_HighDamage = 0x3f8; // UParticleSystemComponent*
		constexpr auto Cube = 0x400; // UStaticMeshComponent*
		constexpr auto ActiveMarkerState = 0x408; // ECargoWorldMarkers
		constexpr auto MarkerScreenScale = 0x40c; // float
		constexpr auto MarkerScreenPos = 0x410; // FVector2D
		constexpr auto ActiveWorldMarker = 0x418; // UWorldMarkerComponent*
		constexpr auto PlayerSide = 0x420; // ECargoPlayerSideState
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto DepthPriorityGroup = 0x20c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x20d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x20e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x20f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x210; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x210; // char : 1
		constexpr auto bNeverDistanceCull = 0x210; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x210; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x211; // char : 1
		constexpr auto bMultiBodyOverlap = 0x211; // char : 1
		constexpr auto bTraceComplexOnMove = 0x211; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x211; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x211; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x211; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x211; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x211; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x212; // char : 1
		constexpr auto bVisibleInRayTracing = 0x212; // char : 1
		constexpr auto bRenderInMainPass = 0x212; // char : 1
		constexpr auto bRenderInDepthPass = 0x212; // char : 1
		constexpr auto bReceivesDecals = 0x212; // char : 1
		constexpr auto bOwnerNoSee = 0x212; // char : 1
		constexpr auto bOnlyOwnerSee = 0x212; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x212; // char : 1
		constexpr auto bUseAsOccluder = 0x213; // char : 1
		constexpr auto bSelectable = 0x213; // char : 1
		constexpr auto bForceMipStreaming = 0x213; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x213; // char : 1
		constexpr auto CastShadow = 0x213; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x213; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x213; // char : 1
		constexpr auto bCastDynamicShadow = 0x213; // char : 1
		constexpr auto bCastStaticShadow = 0x214; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x214; // char : 1
		constexpr auto bCastContactShadow = 0x214; // char : 1
		constexpr auto bSelfShadowOnly = 0x214; // char : 1
		constexpr auto bCastFarShadow = 0x214; // char : 1
		constexpr auto bCastInsetShadow = 0x214; // char : 1
		constexpr auto bCastCinematicShadow = 0x214; // char : 1
		constexpr auto bCastHiddenShadow = 0x214; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x215; // char : 1
		constexpr auto bLightAsIfStatic = 0x215; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x215; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x215; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x215; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x215; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x215; // char : 1
		constexpr auto bIgnoreRadialForce = 0x215; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x216; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x216; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x216; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x216; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x216; // char : 1
		constexpr auto bUseEditorCompositing = 0x216; // char : 1
		constexpr auto bRenderCustomDepth = 0x216; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x217; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x219; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x21c; // int32_t
		constexpr auto CustomPrimitiveData = 0x220; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x230; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x248; // int32_t
		constexpr auto VisibilityId = 0x24c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x250; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x260; // int8_t
		constexpr auto VirtualTextureCullMips = 0x261; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x262; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x263; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x268; // float
		constexpr auto BoundsScale = 0x274; // float
		constexpr auto MoveIgnoreActors = 0x288; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x298; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2b8; // FBodyInstance
		constexpr auto OnComponentHit = 0x410; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x411; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x412; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x413; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x414; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x416; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x417; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x418; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x419; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x41a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x41b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x41c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x41d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x438; // UPrimitiveComponent*
	}

	namespace n_UPromodWeaponArchetypeDataAsset {
		constexpr auto WeaponArchetype = 0x30; // EWeaponArchetype
		constexpr auto ModKits = 0x38; // TArray<ABattalionWeapon*>
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_UAsyncActionShowPrompt {
		constexpr auto OnClosed = 0x30; // FMulticastInlineDelegate
		constexpr auto WorldContextObject = 0x40; // UObject*
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UMedal1v3Clutch {
		constexpr auto WartideGameMode = 0x48; // AWartideGameMode*
		constexpr auto ClutcherPC = 0x50; // ABattalionPlayerControllerGMBase*
	}

	namespace n_USettingsHeader_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto InvalidationBox_1 = 0x270; // UInvalidationBox*
		constexpr auto NameText = 0x278; // UTextBlock*
		constexpr auto Spacer_4 = 0x280; // USpacer*
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UWBP_CargoObjectiveProgressBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CP_Main = 0x268; // UCanvasPanel*
		constexpr auto Image_241 = 0x270; // UImage*
		constexpr auto IMG_ProgressMarker = 0x278; // UImage*
		constexpr auto InvalidationBox_ProgressMarker = 0x280; // UInvalidationBox*
		constexpr auto ProgressBar_Cargo = 0x288; // UProgressBar*
		constexpr auto PipWidgets = 0x290; // TArray<UWBP_CargoCheckpointPip_C*>
		constexpr auto Pips = 0x2a0; // int32_t
		constexpr auto My Geometry = 0x2a4; // FGeometry
		constexpr auto FirstTeamPipIdx = 0x2dc; // int32_t
		constexpr auto FirstTeamProgressWidget = 0x2e0; // UWBP_CargoProgressCheckpoint_C*
		constexpr auto CargoGameState = 0x2e8; // ACargoGameState*
		constexpr auto FillColour = 0x2f0; // FLinearColor
		constexpr auto StartAtProgress = 0x300; // float
		constexpr auto Percent = 0x304; // float
	}

	namespace n_USettingsItem_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto DoSetDisabled = 0x300; // UWidgetAnimation*
		constexpr auto BackdropSelected = 0x308; // USettings_Backdrop__Option_Selected_C*
		constexpr auto BackdropUnselected = 0x310; // USettings_Backdrop__Option_Unselected_C*
		constexpr auto Border_1 = 0x318; // UBorder*
		constexpr auto Border_2 = 0x320; // UBorder*
		constexpr auto Combo = 0x328; // UCombo_C*
		constexpr auto KeyBind = 0x330; // UKeyBind_C*
		constexpr auto LeftRightSetting = 0x338; // ULeftRight_C*
		constexpr auto NameText = 0x340; // UTextBlock*
		constexpr auto SettingSlider = 0x348; // USettingSlider_C*
		constexpr auto SizeBox = 0x350; // USizeBox*
		constexpr auto SizeBox_21 = 0x358; // USizeBox*
		constexpr auto ToolTipHit = 0x360; // USizeBox*
		constexpr auto WidgetSwitcher_1 = 0x368; // UWidgetSwitcher*
		constexpr auto Settings = 0x370; // USettings_C*
		constexpr auto LeftRightInt = 0x378; // int32_t
		constexpr auto LeftRightMin = 0x37c; // int32_t
		constexpr auto LeftRightMax = 0x380; // int32_t
		constexpr auto SelectedColour = 0x384; // FLinearColor
		constexpr auto UnselectedColour = 0x394; // FLinearColor
		constexpr auto AlternateColor = 0x3a4; // FLinearColor
	}

	namespace n_UWeaponAnimInstance {
		constexpr auto Empty = 0x2b8; // bool
		constexpr auto TransitionProgress = 0x2bc; // float
		constexpr auto TPStandingOrCrouched = 0x2c0; // float
		constexpr auto bIsMeleeing = 0x2c4; // bool
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_AFireUp_Dash {
		constexpr auto AccumulateMode = 0x3c8; // ERootMotionAccumulateMode
		constexpr auto DashDistance = 0x3cc; // float
		constexpr auto Duration = 0x3d0; // float
		constexpr auto bRestrictSpeedToExpected = 0x3d4; // bool
		constexpr auto FinishVelocityMode = 0x3d5; // ERootMotionFinishVelocityMode
		constexpr auto FinishSetVelocity = 0x3d8; // FVector
		constexpr auto FinishClampVelocity = 0x3e4; // float
		constexpr auto DashDirection = 0x3e8; // EDashDirection
		constexpr auto TimeBeforeMeleeAllowed = 0x3ec; // float
	}

	namespace n_UABP_M4_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UWBP_Flipbook_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IMG_Sprite = 0x268; // UImage*
		constexpr auto flipbook = 0x270; // UPaperFlipbook*
		constexpr auto Loop = 0x278; // bool
		constexpr auto Active = 0x279; // bool
		constexpr auto CurrentTime = 0x27c; // float
		constexpr auto Delta Time = 0x280; // float
		constexpr auto OnFlipbookFinished = 0x288; // FMulticastInlineDelegate
		constexpr auto StartActive = 0x298; // bool
		constexpr auto SpriteSize = 0x29c; // FVector2D
		constexpr auto PreviewFrame = 0x2a4; // int32_t
		constexpr auto bFadeOut = 0x2a8; // bool
		constexpr auto FadeOutTime = 0x2ac; // float
		constexpr auto FadeOutCurve = 0x2b0; // UCurveFloat*
		constexpr auto FadeOutStartTime = 0x2b8; // float
		constexpr auto CurrentFadeOutPercentage = 0x2bc; // float
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UMedalTacNade {
		constexpr auto KillerExpiryArray = 0x48; // TArray<FOneTapKillerExpiry>
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AFFAHUD {
		constexpr auto BuyScreen = 0x5f8; // UNUIBuyScreen*
		constexpr auto WeaponPrompt = 0x600; // UNUIWeaponPrompt*
		constexpr auto FFAObjectiveScore = 0x608; // UNUIFFAObjectiveScores*
		constexpr auto BuyScreenClass = 0x610; // UNUIBuyScreen*
		constexpr auto WeaponPromptClass = 0x618; // UNUIWeaponPrompt*
		constexpr auto FFAObjectiveScoreClass = 0x620; // UNUIFFAObjectiveScores*
	}

	namespace n_ASnapshotGrenade {
		constexpr auto CollisionComponent = 0x220; // USphereComponent*
		constexpr auto MeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto MovementComponent = 0x230; // UProjectileMovementComponent*
		constexpr auto DefaultAkComp = 0x238; // UAkComponent*
		constexpr auto BleepSound = 0x240; // UAkAudioEvent*
		constexpr auto DetonateSound = 0x248; // UAkAudioEvent*
		constexpr auto PlayerDetected = 0x250; // UAkAudioEvent*
		constexpr auto DematerializeTimeline = 0x258; // UTimelineComponent*
		constexpr auto WeaponMIDs = 0x260; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DematerializeTimelineLength = 0x270; // float
		constexpr auto DematerializeTimelineCurve = 0x278; // UCurveFloat*
		constexpr auto DartDematerializationData = 0x280; // FSnapshotDartDematerializationData
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x458; // float
	}

	namespace n_UGameOverScreen {
		constexpr auto ResultText = 0x260; // FText
		constexpr auto ScoreText = 0x278; // FText
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UWBP_HUDEquipment_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_AmmoAdded = 0x268; // UWidgetAnimation*
		constexpr auto HB_Ammo = 0x270; // UHorizontalBox*
		constexpr auto IB_Ammo = 0x278; // UInvalidationBox*
		constexpr auto IB_OffensiveUtil = 0x280; // UInvalidationBox*
		constexpr auto IB_QuickUtil = 0x288; // UInvalidationBox*
		constexpr auto IB_TacticalUtil = 0x290; // UInvalidationBox*
		constexpr auto IB_WeaponSlot = 0x298; // UInvalidationBox*
		constexpr auto IMG_OffensiveUtilBackground = 0x2a0; // UImage*
		constexpr auto IMG_OffensiveUtilImage = 0x2a8; // UImage*
		constexpr auto IMG_QuickUtilBackground = 0x2b0; // UImage*
		constexpr auto IMG_QuickUtilImage = 0x2b8; // UImage*
		constexpr auto IMG_Slot1 = 0x2c0; // UImage*
		constexpr auto IMG_Slot2 = 0x2c8; // UImage*
		constexpr auto IMG_Slot3 = 0x2d0; // UImage*
		constexpr auto IMG_TacticalUtilBackground = 0x2d8; // UImage*
		constexpr auto IMG_TacticalUtilImage = 0x2e0; // UImage*
		constexpr auto IMG_WeaponBackground = 0x2e8; // UImage*
		constexpr auto IMG_WeaponIconSlot1 = 0x2f0; // UImage*
		constexpr auto IMG_WeaponIconSlot2 = 0x2f8; // UImage*
		constexpr auto IMG_WeaponIconSlot3 = 0x300; // UImage*
		constexpr auto KEY_OffensiveUtil = 0x308; // UPlatformKeyImage_C*
		constexpr auto KEY_QuickUtil = 0x310; // UPlatformKeyImage_C*
		constexpr auto KEY_TacticalUtil = 0x318; // UPlatformKeyImage_C*
		constexpr auto PB_QuickUtilRegen = 0x320; // UProgressBar*
		constexpr auto TB_AddedAmmo = 0x328; // UTextBlock*
		constexpr auto TB_ClipAmmo = 0x330; // UTextBlock*
		constexpr auto TB_ReserveAmmo = 0x338; // UTextBlock*
		constexpr auto WS_QuickUtilBackground = 0x340; // UWidgetSwitcher*
		constexpr auto WS_SlotIcon = 0x348; // UWidgetSwitcher*
		constexpr auto WS_SlotIndex = 0x350; // UWidgetSwitcher*
		constexpr auto Clip Ammo = 0x358; // int32_t
		constexpr auto Reserve Ammo = 0x35c; // int32_t
		constexpr auto Tactical Util Type = 0x360; // ESpecialGrenadeType
		constexpr auto Offensive Util Type = 0x361; // EGrenadeType
		constexpr auto Quick Util Type = 0x362; // EFireUpType
		constexpr auto Offensive Util Count = 0x364; // int32_t
		constexpr auto Tactical Util Count = 0x368; // int32_t
		constexpr auto Quick Util Count = 0x36c; // int32_t
		constexpr auto Player State = 0x370; // APromodPlayerState*
		constexpr auto ActiveSlot = 0x378; // ESlotType
		constexpr auto AvailableBackground = 0x380; // UTexture2D*
		constexpr auto NotAvailableBackground = 0x388; // UTexture2D*
		constexpr auto OwningController = 0x390; // APromodPlayerController*
		constexpr auto SpectatedPlayerCharacter = 0x398; // APromodPawn_C*
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UPlatformKeyGeneral {
		constexpr auto CurrentForcingPlatform = 0x260; // FString
	}

	namespace n_URESTART-Legend-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Clicked = 0x270; // UWidgetAnimation*
		constexpr auto Unselected = 0x278; // UWidgetAnimation*
		constexpr auto Selected = 0x280; // UWidgetAnimation*
		constexpr auto Image_405 = 0x288; // UImage*
		constexpr auto Text_Button = 0x290; // UTextBlock*
		constexpr auto Wish-Button = 0x298; // UButton*
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto MapIndex = 0x2b0; // int32_t
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UMinimapInternal_Tooltip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TextBlock_17 = 0x268; // UTextBlock*
		constexpr auto MapTooltipText = 0x270; // FText
		constexpr auto MapIconComp = 0x288; // UMapIconComponent*
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_ABP_SmokeGrenade_C {
		constexpr auto UberGraphFrame = 0x420; // FPointerToUberGraphFrame
	}

	namespace n_UWBP_BombInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_60 = 0x268; // UImage*
		constexpr auto HUDText Colour = 0x270; // UHUDTextDataAsset*
		constexpr auto HUDColour = 0x278; // UHUDTextDataAsset*
	}

	namespace n_UNUIAnnouncementList {
		constexpr auto Announcements = 0x278; // TArray<UNUIAnnouncement*>
		constexpr auto AnnouncementClass = 0x288; // UNUIAnnouncement*
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_ABlitzBombBP_C {
		constexpr auto UberGraphFrame = 0x338; // FPointerToUberGraphFrame
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UABP_UNDC_SMG_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoWayBlend = 0x350; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot = 0x418; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Targeting Transition = 0x560; // float
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4d0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4e0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4e8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x4f8; // int32_t
		constexpr auto InstanceStartCullDistance = 0x4fc; // int32_t
		constexpr auto InstanceEndCullDistance = 0x500; // int32_t
		constexpr auto InstanceReorderTable = 0x508; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x560; // int32_t
		constexpr auto CachedMappings = 0x568; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UWBP_PlantProgressBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Default = 0x268; // UWidgetAnimation*
		constexpr auto Fade_Out = 0x270; // UWidgetAnimation*
		constexpr auto Fade_In = 0x278; // UWidgetAnimation*
		constexpr auto RetainerBox_1 = 0x280; // URetainerBox*
		constexpr auto StaminaProgressBar = 0x288; // UProgressBar*
		constexpr auto FadedIn = 0x290; // bool
		constexpr auto CurrentProgress = 0x294; // float
		constexpr auto ExpectedDuration = 0x298; // float
		constexpr auto bIsPlanting = 0x29c; // bool
		constexpr auto bIsDefusing = 0x29d; // bool
		constexpr auto OwningPlayer = 0x2a0; // APromodPlayerController*
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_ABP_DashFireUp_C {
		constexpr auto UberGraphFrame = 0x400; // FPointerToUberGraphFrame
		constexpr auto Fov_Amount_3B20B9E44814D202930ABFBA3BA0B96E = 0x408; // float
		constexpr auto Fov__Direction_3B20B9E44814D202930ABFBA3BA0B96E = 0x40c; // ETimelineDirection
		constexpr auto FOV = 0x410; // UTimelineComponent*
		constexpr auto ChromaticAberration_Amount_187BF6614619C30E9F3222901B0F536A = 0x418; // float
		constexpr auto ChromaticAberration__Direction_187BF6614619C30E9F3222901B0F536A = 0x41c; // ETimelineDirection
		constexpr auto ChromaticAberration = 0x420; // UTimelineComponent*
		constexpr auto MaxChromaticAberration = 0x428; // float
		constexpr auto CameraModifier = 0x430; // UBP_DashCameraModifier_C*
		constexpr auto MaxFovAddition = 0x438; // float
	}

	namespace n_UAB_WW2Sidearm_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x388; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x3d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x4b8; // FAnimNode_SequencePlayer
	}

	namespace n_UWBP_KillfeedEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowThenHide = 0x268; // UWidgetAnimation*
		constexpr auto AssisterSpacer1 = 0x270; // USpacer*
		constexpr auto AssisterSpacer2 = 0x278; // USpacer*
		constexpr auto Border_AssisterPlayer = 0x280; // UBorder*
		constexpr auto Border_KilledPlayer = 0x288; // UBorder*
		constexpr auto Border_KillerPlayer = 0x290; // UBorder*
		constexpr auto Border_TimeDisplay = 0x298; // UBorder*
		constexpr auto CheckpointNumberText = 0x2a0; // UTextBlock*
		constexpr auto GizmoIcon = 0x2a8; // UImage*
		constexpr auto GizmoUseText = 0x2b0; // UTextBlock*
		constexpr auto IMG_CheckpointIcon = 0x2b8; // UImage*
		constexpr auto KILL_ICON = 0x2c0; // UImage*
		constexpr auto KILL_ICON_3 = 0x2c8; // UImage*
		constexpr auto KillFeedTimeDisplay_C_1 = 0x2d0; // UKillFeedTimeDisplay_C*
		constexpr auto KILLICON = 0x2d8; // UHorizontalBox*
		constexpr auto KILLICON2 = 0x2e0; // UHorizontalBox*
		constexpr auto PlusIcon = 0x2e8; // UImage*
		constexpr auto TB_AssisterPlayer = 0x2f0; // UTextBlock*
		constexpr auto TB_KilledPlayer = 0x2f8; // UTextBlock*
		constexpr auto TB_KillerPlayer = 0x300; // UTextBlock*
		constexpr auto WeaponIcon = 0x308; // UImage*
		constexpr auto WidgetSwitcher_368 = 0x310; // UWidgetSwitcher*
		constexpr auto Headshot = 0x318; // FSlateBrush
		constexpr auto Wallbang = 0x3a0; // FSlateBrush
		constexpr auto noscope = 0x428; // FSlateBrush
		constexpr auto Nade = 0x4b0; // FSlateBrush
		constexpr auto LocationSavedText = 0x538; // FText
		constexpr auto LocationLoadedText = 0x550; // FText
		constexpr auto SplitDifference = 0x568; // float
		constexpr auto BombDamage = 0x570; // UBattalionDamageType*
		constexpr auto FellToDeath = 0x578; // FSlateBrush
		constexpr auto CarBomb = 0x600; // FSlateBrush
		constexpr auto BombExplode = 0x688; // FSlateBrush
		constexpr auto HUDText Colour = 0x710; // UHUDTextDataAsset*
		constexpr auto Damage Type = 0x718; // UBattalionDamageType*
		constexpr auto UpColour = 0x720; // FLinearColor
		constexpr auto DownColour = 0x730; // FLinearColor
		constexpr auto Kill Meta Data = 0x740; // FKillMetaData
		constexpr auto FriendlyColour = 0x780; // FLinearColor
		constexpr auto EnemyColour = 0x790; // FLinearColor
		constexpr auto FriendlyBackgroundColour = 0x7a0; // FLinearColor
		constexpr auto EnemyBackgroundColour = 0x7b0; // FLinearColor
		constexpr auto Killer Player Name = 0x7c0; // FString
		constexpr auto Killed Player Name = 0x7d0; // FString
		constexpr auto Assister Player Name = 0x7e0; // FString
		constexpr auto EnemyOutlineColour = 0x7f0; // FLinearColor
		constexpr auto FriendlyOutlineColour = 0x800; // FLinearColor
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_ABattalionProjectile {
		constexpr auto MovementComp = 0x220; // UProjectileMovementComponent*
		constexpr auto CollisionComp = 0x228; // USphereComponent*
		constexpr auto ParticleComp = 0x230; // UParticleSystemComponent*
		constexpr auto ExplosionTemplate = 0x238; // ABattalionExplosionEffect*
		constexpr auto bExploded = 0x268; // bool
	}

	namespace n_UControllerLayoutLabel_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AltLabel1 = 0x268; // UControllerLayoutLabelText_C*
		constexpr auto AltLabel2 = 0x270; // UControllerLayoutLabelText_C*
		constexpr auto AltLabel3 = 0x278; // UControllerLayoutLabelText_C*
		constexpr auto AltLabelBox1 = 0x280; // UHorizontalBox*
		constexpr auto AltLabelBox2 = 0x288; // UHorizontalBox*
		constexpr auto AltLabelBox3 = 0x290; // UHorizontalBox*
		constexpr auto AltSpacer1 = 0x298; // USpacer*
		constexpr auto AltSpacer2 = 0x2a0; // USpacer*
		constexpr auto AltSpacer3 = 0x2a8; // USpacer*
		constexpr auto Icon1 = 0x2b0; // UImage*
		constexpr auto Icon2 = 0x2b8; // UImage*
		constexpr auto Icon3 = 0x2c0; // UImage*
		constexpr auto Label1 = 0x2c8; // UControllerLayoutLabelText_C*
		constexpr auto Label2 = 0x2d0; // UControllerLayoutLabelText_C*
		constexpr auto Label3 = 0x2d8; // UControllerLayoutLabelText_C*
		constexpr auto RightAlignmentSpacer = 0x2e0; // USpacer*
		constexpr auto RightAlignmentSpacer2 = 0x2e8; // USpacer*
		constexpr auto RightAlignmentSpacer3 = 0x2f0; // USpacer*
		constexpr auto RightAlignmentSpacer4 = 0x2f8; // USpacer*
		constexpr auto RightAlignmentSpacer5 = 0x300; // USpacer*
		constexpr auto Spacer1 = 0x308; // UTextBlock*
		constexpr auto Spacer2 = 0x310; // UTextBlock*
		constexpr auto WidgetSwitcher_2 = 0x318; // UWidgetSwitcher*
		constexpr auto TextJustification = 0x320; // ETextJustify
		constexpr auto IsCustom = 0x321; // bool
		constexpr auto Labels = 0x328; // TArray<UControllerLayoutLabelText_C*>
		constexpr auto Spacers = 0x338; // TArray<UTextBlock*>
		constexpr auto UseAlternateLayout = 0x348; // bool
		constexpr auto VerticalLabels = 0x350; // TArray<UControllerLayoutLabelText_C*>
		constexpr auto VerticalIcons = 0x360; // TArray<UImage*>
		constexpr auto Binds = 0x370; // TArray<FKey>
	}

	namespace n_UPromodWeaponStatsDataAsset {
		constexpr auto WeaponArchetype = 0x30; // EWeaponArchetype
		constexpr auto ValidGameModesForPickupCreationFromDeath = 0x38; // TArray<ABattalionGameMode*>
		constexpr auto ValidGameModesForPickupCreationFromDeathDuringShootout = 0x48; // TArray<ABattalionGameMode*>
		constexpr auto bInfiniteAmmo = 0x58; // bool
		constexpr auto bInfiniteClip = 0x59; // bool
		constexpr auto MaxAmmo = 0x5c; // int32_t
		constexpr auto AmmoPerClip = 0x60; // int32_t
		constexpr auto InitialClips = 0x64; // int32_t
		constexpr auto bMultiReloadable = 0x68; // bool
		constexpr auto ReloadAmount = 0x6c; // int32_t
		constexpr auto AccumulateTargetingScale = 0x70; // float
		constexpr auto AccumulateHipScale = 0x74; // float
		constexpr auto AccumulateAdd = 0x78; // float
		constexpr auto AccumulateRecoverySpeed = 0x7c; // float
		constexpr auto AccumulateMax = 0x80; // float
		constexpr auto AccumulationRotationRange = 0x84; // float
		constexpr auto AccumulationRotationPoint = 0x88; // FVector
		constexpr auto DematerializeTimelineCurve = 0x98; // UCurveFloat*
		constexpr auto TimeBetweenShots = 0xa0; // float
		constexpr auto SemiAutoMercyRatio = 0xa4; // float
		constexpr auto bReloadEmptyOnly = 0xa8; // bool
		constexpr auto NoAnimReloadDuration = 0xac; // float
		constexpr auto bReloadSegmented = 0xb0; // bool
		constexpr auto ReloadFromEmptyAnimReloadDuration = 0xb4; // float
		constexpr auto ReloadSegmentedStartAnimDuration = 0xb8; // float
		constexpr auto ReloadSegmentedLoopAnimDuration = 0xbc; // float
		constexpr auto ReloadSegmentedEndAnimDuration = 0xc0; // float
		constexpr auto ClipLoadTime = 0xc4; // float
		constexpr auto ClipLoadTimeFromEmpty = 0xc8; // float
		constexpr auto ReloadFromNotEmptyAnimReloadDuration = 0xcc; // float
		constexpr auto EquipDuration = 0xd0; // float
		constexpr auto QuickEquipDuration = 0xd4; // float
		constexpr auto AltEquipDuration = 0xd8; // float
		constexpr auto HolsterDuration = 0xdc; // float
		constexpr auto CancelHolsterAnimSpeed = 0xe0; // float
		constexpr auto CancelHolsterReverseTime = 0xe4; // float
		constexpr auto bSemiAuto = 0xe8; // bool
		constexpr auto bHeavy = 0xe9; // bool
		constexpr auto bCanADS = 0xea; // bool
		constexpr auto bCanOneTap = 0xeb; // bool
		constexpr auto bEjectMagazineFinalShot = 0xec; // bool
		constexpr auto bUseSniperVignette = 0xed; // bool
		constexpr auto TargetingTransitionInTime = 0xf0; // float
		constexpr auto TargetingTransitionOutTime = 0xf4; // float
		constexpr auto TargetingTransitionFOVRatio = 0xf8; // float
		constexpr auto MoveSpeedScalar = 0xfc; // float
		constexpr auto MoveSpeedTargetingScalar = 0x100; // float
		constexpr auto MoveSpeedTargetingForwardsBackwardsLandingPunishmentScalar = 0x104; // float
		constexpr auto TargetingFOV = 0x108; // float
		constexpr auto bUseFixedADSFOV = 0x10c; // bool
		constexpr auto bBoltAction = 0x10d; // bool
		constexpr auto RechamberDuration = 0x110; // float
		constexpr auto RechamberAnimDuration = 0x114; // float
		constexpr auto EarlyRechamberDuration = 0x118; // float
		constexpr auto FireWaitToRechamberDuration = 0x11c; // float
		constexpr auto bExitTargetingOnRechambering = 0x120; // bool
		constexpr auto bFastRechamber = 0x121; // bool
		constexpr auto ExitTargetingAfterRechamberEarlyTime = 0x124; // float
		constexpr auto FastRechamberFOV = 0x128; // float
		constexpr auto FireWaitToReloadDuration = 0x12c; // float
		constexpr auto bWeaponRecoilDelay = 0x130; // bool
		constexpr auto bSingleHandedTP = 0x131; // bool
		constexpr auto ADSFOVAspectFix = 0x134; // float
		constexpr auto SpawnRotationOffset = 0x138; // FRotator
		constexpr auto SprintingTransitionInTime = 0x144; // float
		constexpr auto SprintingTransitionOutTime = 0x148; // float
		constexpr auto bAllowAutoAim = 0x14c; // bool
		constexpr auto ADSTransitionCurve = 0x150; // UCurveFloat*
		constexpr auto ReloadEndTransitionPoint = 0x158; // float
		constexpr auto MaxPenetrationThickness = 0x15c; // float
		constexpr auto MaxPenetrationCount = 0x160; // int32_t
		constexpr auto DamageReductionPerCm = 0x164; // float
		constexpr auto DamageReductionCurve = 0x168; // UCurveFloat*
		constexpr auto PenetrationThicknessModifiers = 0x170; // TArray<FPhysMatModifier>
		constexpr auto PenetrationDamageModifiers = 0x180; // TArray<FPhysMatModifier>
		constexpr auto AdsSensitivityScalar = 0x190; // float
		constexpr auto MovementSpeedSpreadCurve = 0x198; // UCurveFloat*
		constexpr auto TargetingWeaponSpread = 0x1a0; // float
		constexpr auto InAirTargetingWeaponSpread = 0x1a4; // float
		constexpr auto HipFiringSpreadIncrement = 0x1a8; // float
		constexpr auto HipFiringMovementIncrement = 0x1ac; // float
		constexpr auto HipFiringSpreadStandingMax = 0x1b0; // float
		constexpr auto HipFiringSpreadCrouchingMax = 0x1b4; // float
		constexpr auto HipFiringSpreadProneMax = 0x1b8; // float
		constexpr auto HipFiringSpreadStandingMin = 0x1bc; // float
		constexpr auto HipFiringSpreadCrouchingMin = 0x1c0; // float
		constexpr auto HipFiringSpreadProneMin = 0x1c4; // float
		constexpr auto HipSpreadRecoveryRate = 0x1c8; // float
		constexpr auto SpreadMovementTolerance = 0x1cc; // float
		constexpr auto YawViewRecoilCurve = 0x1d0; // UCurveFloat*
		constexpr auto PitchViewRecoilCurve = 0x1d8; // UCurveFloat*
		constexpr auto ADSYawViewRecoilCurve = 0x1e0; // UCurveFloat*
		constexpr auto ADSPitchViewRecoilCurve = 0x1e8; // UCurveFloat*
		constexpr auto ViewKickCurve = 0x1f0; // UCurveFloat*
		constexpr auto ViewKickRecoveryCurve = 0x1f8; // UCurveFloat*
		constexpr auto UseSeparateRecoils = 0x200; // bool
		constexpr auto ViewRecoilRecovery = 0x204; // float
		constexpr auto ADSViewRecoilRecovery = 0x208; // float
		constexpr auto MaxViewRecoil = 0x20c; // FVector2D
		constexpr auto ViewRecoilFriction = 0x214; // float
		constexpr auto ADSViewRecoilFriction = 0x218; // float
		constexpr auto MinRange = 0x21c; // float
		constexpr auto MaxRange = 0x220; // float
		constexpr auto MaxTraceRange = 0x224; // float
		constexpr auto BaseDamage = 0x228; // float
		constexpr auto MinDamage = 0x22c; // float
		constexpr auto MaxRangeDamageModifier = 0x230; // float
		constexpr auto MinRangeDamageModifier = 0x234; // float
		constexpr auto RangeGridSnap = 0x238; // float
		constexpr auto HeadshotDamage = 0x23c; // float
		constexpr auto NeckDamage = 0x240; // float
		constexpr auto UpperTorsoDamage = 0x244; // float
		constexpr auto LowerTorsoDamage = 0x248; // float
		constexpr auto UpperArmDamage = 0x24c; // float
		constexpr auto LowerArmDamage = 0x250; // float
		constexpr auto HandDamage = 0x254; // float
		constexpr auto UpperLegDamage = 0x258; // float
		constexpr auto LowerLegDamage = 0x25c; // float
		constexpr auto FootDamage = 0x260; // float
		constexpr auto ClientSideHitLeeway = 0x264; // float
		constexpr auto MassiveBoxLeeway = 0x268; // float
		constexpr auto AllowedViewDotHitDir = 0x26c; // float
		constexpr auto bIsBuckshot = 0x270; // bool
		constexpr auto BuckshotRotations = 0x278; // TArray<FVector2D>
		constexpr auto bCollateral = 0x288; // bool
		constexpr auto bUseMIDIFire = 0x289; // bool
		constexpr auto MIDIOffSampleValue = 0x28c; // float
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_ULevelSelect-Arrow-button-Promod_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Pressed = 0x268; // UWidgetAnimation*
		constexpr auto Default = 0x270; // UWidgetAnimation*
		constexpr auto Clicked = 0x278; // UWidgetAnimation*
		constexpr auto Unhovered = 0x280; // UWidgetAnimation*
		constexpr auto Hovered = 0x288; // UWidgetAnimation*
		constexpr auto Image_117 = 0x290; // UImage*
		constexpr auto Wish-Button = 0x298; // UButton*
		constexpr auto ButtonClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto bHovered = 0x2b0; // bool
		constexpr auto bPressed = 0x2b1; // bool
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UAkWindowsInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_AWartideGameMode {
		constexpr auto WartideStartAlliesEvent = 0x9b0; // UAkAudioEvent*
		constexpr auto WartideStartAxisEvent = 0x9b8; // UAkAudioEvent*
	}

	namespace n_UMedalZombieland {
		constexpr auto INFGameMode = 0x48; // AInfectionGameMode*
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UWBP_HardpointHUD_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto FlashBang = 0x270; // UWidgetAnimation*
		constexpr auto Kill+15-And-Beyond = 0x278; // UWidgetAnimation*
		constexpr auto Kill+10 = 0x280; // UWidgetAnimation*
		constexpr auto Kill+5 = 0x288; // UWidgetAnimation*
		constexpr auto DamageTaken = 0x290; // UWidgetAnimation*
		constexpr auto BlockedMessagesVerticalBox = 0x298; // UVerticalBox*
		constexpr auto ClientFPS = 0x2a0; // USizeBox*
		constexpr auto FlashBangableWidgets = 0x2a8; // UCanvasPanel*
		constexpr auto FrameTime = 0x2b0; // USizeBox*
		constexpr auto GameLatency = 0x2b8; // USizeBox*
		constexpr auto GameThreadTime = 0x2c0; // USizeBox*
		constexpr auto GameToRenderLatency = 0x2c8; // USizeBox*
		constexpr auto GPUTemp = 0x2d0; // USizeBox*
		constexpr auto HudPanel = 0x2d8; // UCanvasPanel*
		constexpr auto IdleTime = 0x2e0; // USizeBox*
		constexpr auto OverviewSwitcher = 0x2e8; // UWidgetSwitcher*
		constexpr auto RB_CurvedHud = 0x2f0; // URetainerBox*
		constexpr auto RenderLatency = 0x2f8; // USizeBox*
		constexpr auto RenderThreadTime = 0x300; // USizeBox*
		constexpr auto RHIThreadTime = 0x308; // USizeBox*
		constexpr auto WBP_ActionPrompt = 0x310; // UWBP_ActionPrompt_C*
		constexpr auto WBP_Announcement = 0x318; // UWBP_Announcement_C*
		constexpr auto WBP_BasicScoreAward = 0x320; // UWBP_BasicScoreAward_C*
		constexpr auto WBP_ChatFeed = 0x328; // UWBP_ChatFeed_C*
		constexpr auto WBP_ClassChanged = 0x330; // UWBP_ClassChanged_C*
		constexpr auto WBP_Crosshair = 0x338; // UWBP_Crosshair_C*
		constexpr auto WBP_DamageTakenIndicator = 0x340; // UWBP_DamageTakenIndicator_C*
		constexpr auto WBP_FireUpProgress = 0x348; // UWBP_FireUpProgress_C*
		constexpr auto WBP_GrenadeIndicator = 0x350; // UWBP_GrenadeIndicator_C*
		constexpr auto WBP_HardpointGameOverview = 0x358; // UWBP_HardpointGameOverview_C*
		constexpr auto WBP_Hitmarker = 0x360; // UWBP_Hitmarker_C*
		constexpr auto WBP_HUDEquipment_C_170 = 0x368; // UWBP_HUDEquipment_C*
		constexpr auto WBP_InGameLoadoutSelection_304 = 0x370; // UWBP_InGameLoadoutSelection_C*
		constexpr auto WBP_Interaction = 0x378; // UWBP_Interaction_C*
		constexpr auto WBP_Killfeed = 0x380; // UWBP_Killfeed_C*
		constexpr auto WBP_KillSuccess = 0x388; // UWBP_KillSuccess_C*
		constexpr auto WBP_Message = 0x390; // UWBP_Message_C*
		constexpr auto WBP_MiniMap = 0x398; // UWBP_MiniMap_C*
		constexpr auto WBP_Overtime_Shootout_Title = 0x3a0; // UWBP_Overtime_Shootout_Title_C*
		constexpr auto WBP_Overtime_Shootout_Transition = 0x3a8; // UWBP_Overtime_Shootout_Transition_C*
		constexpr auto WBP_Overtime_Shootout_Victory = 0x3b0; // UWBP_Overtime_Shootout_Victory_C*
		constexpr auto WBP_Overtime_Title = 0x3b8; // UWBP_Overtime_Title_C*
		constexpr auto WBP_PingSelection = 0x3c0; // UWBP_PingSelection_C*
		constexpr auto WBP_RespawnTimer = 0x3c8; // UWBP_RespawnTimer_C*
		constexpr auto WBP_ShootoutOverview_C_2 = 0x3d0; // UWBP_ShootoutOverview_C*
		constexpr auto WBP_SNDLeaderboard = 0x3d8; // UWBP_SNDLeaderboard_C*
		constexpr auto WBP_SniperVignette = 0x3e0; // UWBP_SniperVignette_C*
		constexpr auto WBP_Spectating = 0x3e8; // UWBP_Spectating_C*
		constexpr auto WBP_StaminaAndHealthBars = 0x3f0; // UWBP_StaminaAndHealthBars_C*
		constexpr auto WBP_StrafeJumpSpeedFeedback = 0x3f8; // UWBP_StrafeJumpSpeedFeedback_C*
		constexpr auto WBP_SwappingSides = 0x400; // UWBP_SwappingSides_C*
		constexpr auto WBP_Vault = 0x408; // UWBP_Vault_C*
		constexpr auto WBP_WeaponPickup = 0x410; // UWBP_WeaponPickup_C*
		constexpr auto In Visibility = 0x418; // ESlateVisibility
		constexpr auto OnShowUpdateLeaderboard = 0x420; // FMulticastInlineDelegate
		constexpr auto IsPlayingHealth = 0x430; // bool
		constexpr auto OnShowUpdateGameOverScreen = 0x438; // FMulticastInlineDelegate
		constexpr auto CurrentBlockedMessages = 0x448; // TArray<UWBP_GenericBlockedMessage_C*>
		constexpr auto bBlockedUIFound = 0x458; // bool
		constexpr auto RemainingStamina = 0x45c; // float
		constexpr auto StaminaRegenMultiplier = 0x460; // float
		constexpr auto StaminaDirection = 0x464; // int32_t
		constexpr auto StaminaEvent = 0x468; // FStaminaEvent
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

}