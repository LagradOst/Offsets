namespace off {
	constexpr auto GNames = 0x5b53240;
	constexpr auto GObjects = 0x5b6ba08;
	constexpr auto GWorld = 0x5ca6630;
	constexpr auto DecryptionDword = 0x5a9aab0;
	constexpr auto DecryptionX = 0x5a9aa98;
	constexpr auto DecryptionXPlus10 = 0x5a9aaa8;

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_AWeatherAmbientSounds {
		constexpr auto WeatherRTPCsUpdateInterval = 0x220; // float
		constexpr auto TimeOfDayRTPCUpdateInterval = 0x224; // float
		constexpr auto TimeOfDayRTPCInterpolationSpeed = 0x228; // float
		constexpr auto RainAudioEvent = 0x230; // UAkAudioEvent*
		constexpr auto WindAudioEvent = 0x238; // UAkAudioEvent*
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UCharacterSoundComponent {
		constexpr auto AttachedSoundsAttachPointName = 0xb0; // FName
		constexpr auto ImpactSounds = 0xb8; // UCharacterImpactSoundsData*
		constexpr auto PainSounds = 0xc0; // UCharacterPainSoundsData*
		constexpr auto MinDurationBetweenPainSounds = 0xc8; // float
		constexpr auto MaxDurationBetweenPainSounds = 0xcc; // float
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UPolyEditInsetProperties {
		constexpr auto bReproject = 0x60; // bool
		constexpr auto Softness = 0x64; // float
		constexpr auto bBoundaryOnly = 0x68; // bool
		constexpr auto AreaScale = 0x6c; // float
	}

	namespace n_AAmmunitionExplosiveArrow {
		constexpr auto _startBeepingEvent = 0x830; // UAkAudioEvent*
		constexpr auto _stopBeepingEvent = 0x838; // UAkAudioEvent*
		constexpr auto _startOfBeepingBeforeDetonation = 0x840; // float
		constexpr auto _innerExplosionRadius = 0x844; // float
		constexpr auto _outerExplosionRadius = 0x848; // float
		constexpr auto _explosionBaseDamage = 0x84c; // float
		constexpr auto _explosionMinDamage = 0x850; // float
		constexpr auto _explosionDistanceFalloff = 0x854; // float
		constexpr auto _explosionTimerTime = 0x858; // float
		constexpr auto _explosionForce = 0x85c; // float
		constexpr auto _detonationPointSocketName = 0x860; // FName
		constexpr auto _effectsActorClass = 0x868; // AReplicatedExplosionEffectsActor*
		constexpr auto _shouldStartCountdown = 0x880; // bool
	}

	namespace n_UPrisonerBodyCondition_FootAbrasions {
		constexpr auto _baseAbrasionsRaiseRateVsConstitution = 0xa8; // FFloatInterval
		constexpr auto _abrasionsWeightFactor = 0xb0; // float
		constexpr auto _abrasionsFallRate = 0xb4; // float
		constexpr auto _severityVsAbrasions = 0xb8; // FRuntimeFloatCurve
		constexpr auto _abrasions = 0x140; // float
		constexpr auto _abrasionsTreated = 0x144; // float
		constexpr auto _abrasionsAtRecoveryStart = 0x148; // float
		constexpr auto _bandagesProtection = 0x14c; // float
		constexpr auto _remainingBandagesProtection = 0x150; // float
		constexpr auto _bandagesProtectionDecreaseNotification = 0x158; // UNotificationDescription*
		constexpr auto _bandagesProtectionDecreaseNotificationCooldown = 0x160; // float
		constexpr auto _treatmentBaseExperienceGainVsSkillLevel = 0x164; // float [0x5]
		constexpr auto _physicianSkillLevel = 0x178; // ESkillLevel
		constexpr auto _stabilizationDurationVsSeverity = 0x180; // FRuntimeFloatCurve
		constexpr auto _stabilizationDurationBiasVsSkillLevel = 0x208; // float [0x5]
		constexpr auto _stabilizationDurationReductionByItems = 0x21c; // float
		constexpr auto _recoveryDurationVsSeverity = 0x220; // FRuntimeFloatCurve
		constexpr auto _bleedingSeverityVsSeverity = 0x2a8; // FRuntimeFloatCurve
		constexpr auto _bleedingSymptomClass = 0x330; // UPrisonerBodySymptom_Bleeding*
		constexpr auto _bleedingSymptomCause = 0x338; // UPrisonerBodySymptomCause_Bleeding*
		constexpr auto _bloodLoss = 0x348; // float
		constexpr auto _bloodLossToRecover = 0x34c; // float
		constexpr auto _painGruntAudioEvent = 0x350; // UAkAudioEvent*
		constexpr auto _painGruntIntervalVsSeverity = 0x358; // FRuntimeFloatCurve
		constexpr auto _painSymptomClass = 0x3e8; // UPrisonerBodySymptom_Pain*
		constexpr auto _painSymptomCause = 0x3f0; // UPrisonerBodySymptomCause_Pain*
		constexpr auto _painSymptomOverallIntensityVsSeverity = 0x3f8; // FRuntimeFloatCurve
		constexpr auto _painSymptomLimpingIntensityVsSeverity = 0x480; // FRuntimeFloatCurve
		constexpr auto _painSymptomMaxMovementPaceVsSeverity = 0x508; // FPrisonerMaxMovementPaceVsSeverity
		constexpr auto _painSymptomMovementSpeedModifierVsSeverity = 0x518; // FRuntimeFloatCurve
		constexpr auto _state = 0x5a0; // EPrisonerBodyConditionState
		constexpr auto _timerElapsedTime = 0x5a8; // float
		constexpr auto _timerDuration = 0x5ac; // float
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_AKillBoxDetectionField {
		constexpr auto BoxCollisionComponent = 0x220; // UBoxComponent*
	}

	namespace n_UTradingWidget {
		constexpr auto _purchaseButton = 0x260; // UButton*
		constexpr auto _purchaseButton2 = 0x268; // UButton*
		constexpr auto _purchaseButton3 = 0x270; // UButton*
		constexpr auto _purchaseButton4 = 0x278; // UButton*
		constexpr auto _button1TextBlock = 0x280; // UTextBlock*
		constexpr auto _button2TextBlock = 0x288; // UTextBlock*
		constexpr auto _button3TextBlock = 0x290; // UTextBlock*
		constexpr auto _button4TextBlock = 0x298; // UTextBlock*
		constexpr auto _tradeableImage1 = 0x2a0; // UImage*
		constexpr auto _tradeableImage2 = 0x2a8; // UImage*
		constexpr auto _tradeableImage3 = 0x2b0; // UImage*
		constexpr auto _tradeableImage4 = 0x2b8; // UImage*
		constexpr auto _closeButton = 0x2c0; // UButton*
		constexpr auto _traderAvailableFundsTextBlock = 0x2c8; // UTextBlock*
		constexpr auto _availableFundsTextBlock = 0x2d0; // UTextBlock*
		constexpr auto _availableCashTextBlock = 0x2d8; // UTextBlock*
	}

	namespace n_AGlassBottle03_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UUpgradeWidget {
		constexpr auto _upgradeClass = 0x278; // AItem*
		constexpr auto _itemIcon = 0x280; // UImage*
		constexpr auto _backgroundImage = 0x288; // UImage*
		constexpr auto _priceText = 0x290; // UTextBlock*
		constexpr auto _regularColour = 0x298; // FLinearColor
		constexpr auto _unavailableColour = 0x2a8; // FLinearColor
		constexpr auto _availableColour = 0x2b8; // FLinearColor
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x448; // FText
		constexpr auto TextMaterial = 0x460; // UMaterialInterface*
		constexpr auto Font = 0x468; // UFont*
		constexpr auto HorizontalAlignment = 0x470; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x471; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x474; // FColor
		constexpr auto XScale = 0x478; // float
		constexpr auto YScale = 0x47c; // float
		constexpr auto WorldSize = 0x480; // float
		constexpr auto InvDefaultSize = 0x484; // float
		constexpr auto HorizSpacingAdjust = 0x488; // float
		constexpr auto VertSpacingAdjust = 0x48c; // float
		constexpr auto bAlwaysRenderAsText = 0x490; // char : 1
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UCraftingPanelWidget {
		constexpr auto RecipeItemClicked = 0x278; // FMulticastInlineDelegate
		constexpr auto _craftingInfo = 0x288; // UCraftingInfoWidget*
		constexpr auto _searchWidget = 0x290; // UWidget*
		constexpr auto _inventoryBox = 0x298; // UGridPanel*
		constexpr auto _vicinityBox = 0x2a0; // UGridPanel*
		constexpr auto _toolsAndWeaponsBox = 0x2a8; // UGridPanel*
		constexpr auto _toolsAndWeaponsSubBox1 = 0x2b0; // UGridPanel*
		constexpr auto _toolsAndWeaponsSubBox2 = 0x2b8; // UGridPanel*
		constexpr auto _toolsAndWeaponsSubBox3 = 0x2c0; // UGridPanel*
		constexpr auto _toolsAndWeaponsSubBox4 = 0x2c8; // UGridPanel*
		constexpr auto _toolsAndWeaponsSubBox5 = 0x2d0; // UGridPanel*
		constexpr auto ToolsAndWeaponsSubContainer1 = 0x2d8; // UUserWidget*
		constexpr auto ToolsAndWeaponsSubContainer2 = 0x2e0; // UUserWidget*
		constexpr auto ToolsAndWeaponsSubContainer3 = 0x2e8; // UUserWidget*
		constexpr auto ToolsAndWeaponsSubContainer4 = 0x2f0; // UUserWidget*
		constexpr auto ToolsAndWeaponsSubContainer5 = 0x2f8; // UUserWidget*
		constexpr auto _itemsBox = 0x300; // UGridPanel*
		constexpr auto _itemsSubBox1 = 0x308; // UGridPanel*
		constexpr auto _itemsSubBox2 = 0x310; // UGridPanel*
		constexpr auto _itemsSubBox3 = 0x318; // UGridPanel*
		constexpr auto _itemsSubBox4 = 0x320; // UGridPanel*
		constexpr auto _itemsSubBox5 = 0x328; // UGridPanel*
		constexpr auto ItemsSubContainer1 = 0x330; // UUserWidget*
		constexpr auto ItemsSubContainer2 = 0x338; // UUserWidget*
		constexpr auto ItemsSubContainer3 = 0x340; // UUserWidget*
		constexpr auto ItemsSubContainer4 = 0x348; // UUserWidget*
		constexpr auto ItemsSubContainer5 = 0x350; // UUserWidget*
		constexpr auto _foodBox = 0x358; // UGridPanel*
		constexpr auto _foodSubBox1 = 0x360; // UGridPanel*
		constexpr auto _foodSubBox2 = 0x368; // UGridPanel*
		constexpr auto _foodSubBox3 = 0x370; // UGridPanel*
		constexpr auto _foodSubBox4 = 0x378; // UGridPanel*
		constexpr auto _foodSubBox5 = 0x380; // UGridPanel*
		constexpr auto FoodSubContainer1 = 0x388; // UUserWidget*
		constexpr auto FoodSubContainer2 = 0x390; // UUserWidget*
		constexpr auto FoodSubContainer3 = 0x398; // UUserWidget*
		constexpr auto FoodSubContainer4 = 0x3a0; // UUserWidget*
		constexpr auto FoodSubContainer5 = 0x3a8; // UUserWidget*
		constexpr auto _placeablesBox = 0x3b0; // UGridPanel*
		constexpr auto _placeablesSubBox1 = 0x3b8; // UGridPanel*
		constexpr auto _placeablesSubBox2 = 0x3c0; // UGridPanel*
		constexpr auto _placeablesSubBox3 = 0x3c8; // UGridPanel*
		constexpr auto _placeablesSubBox4 = 0x3d0; // UGridPanel*
		constexpr auto _placeablesSubBox5 = 0x3d8; // UGridPanel*
		constexpr auto PlaceablesSubContainer1 = 0x3e0; // UUserWidget*
		constexpr auto PlaceablesSubContainer2 = 0x3e8; // UUserWidget*
		constexpr auto PlaceablesSubContainer3 = 0x3f0; // UUserWidget*
		constexpr auto PlaceablesSubContainer4 = 0x3f8; // UUserWidget*
		constexpr auto PlaceablesSubContainer5 = 0x400; // UUserWidget*
		constexpr auto _basebuildingBox = 0x408; // UGridPanel*
		constexpr auto _basebuildingSubBox1 = 0x410; // UGridPanel*
		constexpr auto _basebuildingSubBox2 = 0x418; // UGridPanel*
		constexpr auto _basebuildingSubBox3 = 0x420; // UGridPanel*
		constexpr auto _basebuildingSubBox4 = 0x428; // UGridPanel*
		constexpr auto _basebuildingSubBox5 = 0x430; // UGridPanel*
		constexpr auto BaseBuildingContainer = 0x438; // UUserWidget*
		constexpr auto BaseBuildingSubContainer1 = 0x440; // UUserWidget*
		constexpr auto BaseBuildingSubContainer2 = 0x448; // UUserWidget*
		constexpr auto BaseBuildingSubContainer3 = 0x450; // UUserWidget*
		constexpr auto BaseBuildingSubContainer4 = 0x458; // UUserWidget*
		constexpr auto BaseBuildingSubContainer5 = 0x460; // UUserWidget*
		constexpr auto _inventoryScrollBox = 0x468; // UScrollBox*
		constexpr auto _vicinityScrollBox = 0x470; // UScrollBox*
		constexpr auto _toolsAndWeaponsScrollBox = 0x478; // UScrollBox*
		constexpr auto _itemsScrollBox = 0x480; // UScrollBox*
		constexpr auto _foodScrollBox = 0x488; // UScrollBox*
		constexpr auto _placeablesScrollBox = 0x490; // UScrollBox*
		constexpr auto _toolsAndWeaponsScaleBox = 0x498; // UScaleBox*
		constexpr auto _itemsScaleBox = 0x4a0; // UScaleBox*
		constexpr auto _foodScaleBox = 0x4a8; // UScaleBox*
		constexpr auto _placeablesScaleBox = 0x4b0; // UScaleBox*
		constexpr auto _selectedRecipeWidget = 0x4b8; // TWeakObjectPtr<UCraftingRecipeWidget>
		constexpr auto _placedPlaceableWidget = 0x4c0; // UPlacedPlaceableWidget*
	}

	namespace n_UExplosiveAmmunitionArrowSpawningParams {
		constexpr auto HitPhysicalSurface = 0x38; // EPhysicalSurface
	}

	namespace n_UConvertToPolygonsTool {
		constexpr auto Settings = 0x88; // UConvertToPolygonsToolProperties*
		constexpr auto PreviewMesh = 0x90; // UPreviewMesh*
	}

	namespace n_UInventoryItemWidget2Test {
		constexpr auto _itemIcon = 0x260; // UImage*
		constexpr auto _itemCaption = 0x268; // UTextBlock*
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_ACuttingObjective {
		constexpr auto _targetMeshes = 0x330; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _specificItem = 0x340; // bool
		constexpr auto _itemToFound = 0x348; // AItem*
		constexpr auto _itemAmount = 0x350; // int32_t
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UUI_CharacterCreationPanel_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AttributeConfirmationOverlay = 0x278; // UOverlay*
		constexpr auto AttributeDisplayConstitution = 0x280; // UUI_CC_NonSelectableText_C*
		constexpr auto AttributeDisplayDexterity = 0x288; // UUI_CC_NonSelectableText_C*
		constexpr auto AttributeDisplayIntelligence = 0x290; // UUI_CC_NonSelectableText_C*
		constexpr auto AttributeDisplayStrength = 0x298; // UUI_CC_NonSelectableText_C*
		constexpr auto B_Name = 0x2a0; // UBorder*
		constexpr auto BackgroundTint = 0x2a8; // UImage*
		constexpr auto Button_CancelAttribute = 0x2b0; // UUI_TrashMenuButton_C*
		constexpr auto Button_CancelSkill = 0x2b8; // UUI_TrashMenuButton_C*
		constexpr auto Button_ContinueAttribute = 0x2c0; // UUI_TrashMenuButton_C*
		constexpr auto Button_ContinueSkill = 0x2c8; // UUI_TrashMenuButton_C*
		constexpr auto ButtonCancel = 0x2d0; // UUI_TrashMenuButton_C*
		constexpr auto ButtonRandomizeAttributes = 0x2d8; // UUI_TrashMenuButton_C*
		constexpr auto ButtonRandomizeSkills = 0x2e0; // UUI_TrashMenuButton_C*
		constexpr auto ButtonSwitchToAttributes = 0x2e8; // UUI_TrashMenuButton_C*
		constexpr auto ButtonSwitchToCriminalRecord = 0x2f0; // UUI_TrashMenuButton_C*
		constexpr auto ButtonSwitchToSkillsPlanel = 0x2f8; // UUI_TrashMenuButton_C*
		constexpr auto Carousel_Gender = 0x300; // UUI_Trash_LeftNamedCarousel_Widget_C*
		constexpr auto Carousel_GrowOverTime = 0x308; // UUI_Trash_LeftNamedCarousel_Widget_C*
		constexpr auto Carousel_Tattoos = 0x310; // UUI_Trash_LeftNamedCarousel_Widget_C*
		constexpr auto ContentCanvas = 0x318; // UCanvasPanel*
		constexpr auto CriminalRecordOverlay = 0x320; // UOverlay*
		constexpr auto Image = 0x328; // UImage*
		constexpr auto Image_1 = 0x330; // UImage*
		constexpr auto Image_2 = 0x338; // UImage*
		constexpr auto Image_3 = 0x340; // UImage*
		constexpr auto Image_4 = 0x348; // UImage*
		constexpr auto Image_5 = 0x350; // UImage*
		constexpr auto Image_6 = 0x358; // UImage*
		constexpr auto Image_7 = 0x360; // UImage*
		constexpr auto Image_9 = 0x368; // UImage*
		constexpr auto Image_91 = 0x370; // UImage*
		constexpr auto Image_93 = 0x378; // UImage*
		constexpr auto MainCanvas = 0x380; // UCanvasPanel*
		constexpr auto MenuOverlay = 0x388; // UOverlay*
		constexpr auto NameText = 0x390; // UEditableTextBox*
		constexpr auto NameTextSecondPage = 0x398; // UEditableTextBox*
		constexpr auto SkillBoxConstitution = 0x3a0; // UVerticalBox*
		constexpr auto SkillBoxDexterity = 0x3a8; // UVerticalBox*
		constexpr auto SkillBoxIntelligence = 0x3b0; // UVerticalBox*
		constexpr auto SkillBoxStrength = 0x3b8; // UVerticalBox*
		constexpr auto SkillConfirmationOverlay = 0x3c0; // UOverlay*
		constexpr auto SkillPointDisplayBonus = 0x3c8; // UUI_CC_NonSelectableText_C*
		constexpr auto SkillPointDisplayConstitution = 0x3d0; // UUI_CC_NonSelectableText_C*
		constexpr auto SkillPointDisplayDexterity = 0x3d8; // UUI_CC_NonSelectableText_C*
		constexpr auto SkillPointDisplayIntelligence = 0x3e0; // UUI_CC_NonSelectableText_C*
		constexpr auto SkillPointDisplayStrength = 0x3e8; // UUI_CC_NonSelectableText_C*
		constexpr auto Slider_CON = 0x3f0; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_DEX = 0x3f8; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_Head = 0x400; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_INT = 0x408; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_PenisBreastSize = 0x410; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_STR = 0x418; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto Slider_TattooStyle = 0x420; // UUI_Trash_LeftNamedSlider_Widget_C*
		constexpr auto T_AttributeConfirmation = 0x428; // UTextBlock*
		constexpr auto T_NameAlreadyTaken = 0x430; // UTextBlock*
		constexpr auto T_SkillConfirmation = 0x438; // UTextBlock*
		constexpr auto TextAvailableAttributePoints = 0x440; // UUI_CC_NonSelectableText_C*
		constexpr auto TextBackgroundImageSecondPanel = 0x448; // UImage*
		constexpr auto UI_CriminalRecord = 0x450; // UUI_CriminalRecord_C*
		constexpr auto WidgetSwitcher = 0x458; // UWidgetSwitcher*
		constexpr auto _prisoners = 0x460; // TArray<APrisoner*>
		constexpr auto _characterTemplate = 0x470; // FCharacterTemplate
		constexpr auto _attributeAdjustmentStep = 0x4f8; // float
		constexpr auto _availableAttributePoints = 0x4fc; // int32_t
		constexpr auto _wereAttributesManuallyAdjusted = 0x500; // bool
		constexpr auto LastAttributeValues = 0x510; // FVector4
		constexpr auto _skillPointsStrength = 0x520; // float
		constexpr auto _skillPointsConstitution = 0x524; // float
		constexpr auto _skillPointsDexterity = 0x528; // float
		constexpr auto _skillPointsIntelligence = 0x52c; // float
		constexpr auto _maxSkillPointsStrength = 0x530; // int32_t
		constexpr auto _maxSkillPointsConstitution = 0x534; // int32_t
		constexpr auto _maxSkillPointsDexterity = 0x538; // int32_t
		constexpr auto _maxSkillPointsIntelligence = 0x53c; // int32_t
		constexpr auto _nonImplementedSkills = 0x540; // TArray<FNonImplementedSkill>
		constexpr auto _skillsCountStrength = 0x550; // int32_t
		constexpr auto _skillsCountConstitution = 0x554; // int32_t
		constexpr auto _skillsCountDexterity = 0x558; // int32_t
		constexpr auto _skillsCountIntelligence = 0x55c; // int32_t
		constexpr auto _lastName = 0x560; // FText
		constexpr auto _nameInUse = 0x578; // bool
		constexpr auto Remaining Skill Points = 0x57c; // float
		constexpr auto confirmation = 0x580; // bool
		constexpr auto SkillPointsRemaining = 0x588; // TArray<int32_t>
		constexpr auto SkillPointsSum = 0x598; // int32_t
		constexpr auto ConfirmationTimer = 0x59c; // float
		constexpr auto LastBreastSize = 0x5a0; // float
		constexpr auto LastPenisSize = 0x5a4; // float
		constexpr auto FullyInitialized = 0x5a8; // bool
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_AFishingAttachmentBait {
		constexpr auto _baitCatchingChanceMultiplier = 0x7e0; // TMap<EAquaticIndividualSize, float>
	}

	namespace n_UHitReactLandingParams {
		constexpr auto MontageToPlay = 0x30; // UAnimMontage*
		constexpr auto RegainControlDurationMultiplier = 0x38; // float
		constexpr auto RagdollImpactSpeedRange = 0x3c; // FFloatInterval
		constexpr auto RagdollDuration = 0x44; // FFloatInterval
		constexpr auto LandingDamageCurve = 0x50; // UCurveFloat*
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UMenuButton {
		constexpr auto PreviewSelectedState = 0x2b8; // bool
		constexpr auto _backgroundFocusImage = 0x2c0; // UImage*
		constexpr auto _text = 0x2c8; // UTextBlock*
		constexpr auto _sizeBox = 0x2d0; // USizeBox*
		constexpr auto _initialTitle = 0x2d8; // FText
		constexpr auto _selectedTextStyle = 0x2f0; // FTabTextStyle
		constexpr auto _deselectedTextStyle = 0x388; // FTabTextStyle
	}

	namespace n_UInspectedItemWidget {
		constexpr auto ItemWidget = 0x278; // UItemClassWidget*
		constexpr auto SkillText = 0x280; // UTextBlock*
		constexpr auto SkillLevelText = 0x288; // UTextBlock*
	}

	namespace n_UMetabolism_ICU_RR_Stats {
		constexpr auto _rrMinMax = 0x278; // UTextBlock*
		constexpr auto _rrTextValue = 0x280; // UTextBlock*
	}

	namespace n_UAddPrimitiveTool {
		constexpr auto ShapeSettings = 0x90; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto LastGenerated = 0xa8; // ULastActorInfo*
		constexpr auto AssetName = 0xb0; // FString
	}

	namespace n_UAnimNotify_MagazineUpdateAmmunitionMeshes {
		constexpr auto showReversed = 0x38; // bool
		constexpr auto ammoIndices = 0x40; // TArray<int32_t>
	}

	namespace n_UModularTooltipElement_Value {
		constexpr auto _nameTextBlock = 0x2e8; // UTextBlock*
		constexpr auto _valueTextBlock = 0x2f0; // UTextBlock*
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_USharpPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UDogTagItemState {
		constexpr auto UserProfileName = 0xf8; // FString
	}

	namespace n_ABP_CTFGameEvent_C {
		constexpr auto DefaultSceneRoot = 0x6c0; // USceneComponent*
	}

	namespace n_UABP_Drum_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x318; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x360; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x438; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x510; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x6b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x6f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x740; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x958; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x978; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_RigidBody = 0x9a0; // FAnimNode_RigidBody
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xff0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x1190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x1230; // FAnimNode_SequencePlayer
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UTriggerItemTag {
		constexpr auto TriggerType = 0x30; // ETrapTriggerType
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAdminCommand_SpawnReflectionSphere {
		constexpr auto _actorClass = 0x80; // UObject*
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UDoorLockingRegistry {
		constexpr auto _doorUnlockDataByType = 0xb0; // TMap<EDoorUnlockDataType, FDoorUnlockDataCollection>
		constexpr auto _countNormalizationThreshold = 0x100; // int32_t
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGameEventPanelWidget {
		constexpr auto _GEManager = 0x278; // AGameEventManager*
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UUI_ItemInventoryVicinity_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto BlinkAnim = 0x2f8; // UWidgetAnimation*
		constexpr auto _weightHorizontalBox = 0x300; // UHorizontalBox*
		constexpr auto DeadCellsImage = 0x308; // UImage*
		constexpr auto ExtraSlotBackground = 0x310; // UImage*
		constexpr auto ExtraSlotsOverlay = 0x318; // UOverlay*
		constexpr auto GreenText = 0x320; // UTextBlock*
		constexpr auto Image_1 = 0x328; // UImage*
		constexpr auto Image_2 = 0x330; // UImage*
		constexpr auto Image_3 = 0x338; // UImage*
		constexpr auto Image_4 = 0x340; // UImage*
		constexpr auto Image_5 = 0x348; // UImage*
		constexpr auto Image_7 = 0x350; // UImage*
		constexpr auto Image_84 = 0x358; // UImage*
		constexpr auto LoadingBackground = 0x360; // UImage*
		constexpr auto MainExtraSlotImage = 0x368; // UImage*
		constexpr auto ProgressBar_1 = 0x370; // UProgressBar*
		constexpr auto RedText = 0x378; // UTextBlock*
		constexpr auto RetainerBoxDeadCells = 0x380; // URetainerBox*
		constexpr auto SeparatorOverlay = 0x388; // UOverlay*
		constexpr auto SlotsText = 0x390; // UTextBlock*
		constexpr auto WeightAndExpandSizeBox = 0x398; // USizeBox*
		constexpr auto _inventoryNode = 0x3a0; // TScriptInterface<IInventoryNode>
		constexpr auto NewVar_1 = 0x3b0; // bool
		constexpr auto Item = 0x3b8; // AItem*
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UScaleKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_AMainMenuGameMode {
		constexpr auto BaseGameModeMenu = 0x308; // EConZMenu
		constexpr auto _masterMenuClass = 0x318; // UMasterMenu*
	}

	namespace n_UPlaceableCraftableItem {
		constexpr auto MaxPlacementAngle = 0x128; // float
		constexpr auto AdjustRotation = 0x12c; // bool
		constexpr auto GroundOffsetWhilePlacing = 0x130; // float
		constexpr auto MaxDistanceFromGroundWhilePlacing = 0x134; // float
		constexpr auto ReachabilityVerticalOffset = 0x138; // float
		constexpr auto IgnoreFloatingCheckWhilePlacing = 0x13c; // bool
		constexpr auto PlacementLocationOffset = 0x140; // FVector
		constexpr auto BoundsExtensionWhilePlacingMin = 0x14c; // FVector
		constexpr auto BoundsExtensionWhilePlacingMax = 0x158; // FVector
		constexpr auto PlacementTracesBoundsExtension = 0x164; // FVector
		constexpr auto FloatingTracesBoundsExtension = 0x170; // FVector
		constexpr auto FloatingTracesCenterOffset = 0x17c; // FVector
		constexpr auto MaxHeightAdjustmentWhilePlacing = 0x188; // float
		constexpr auto MinHeightAdjustmentWhilePlacing = 0x18c; // float
		constexpr auto CanPlaceOnWater = 0x190; // bool
		constexpr auto UseMeshCollisionForPlacement = 0x191; // bool
		constexpr auto OnlyPlaceableInFriendlyFlagArea = 0x192; // bool
		constexpr auto CanPlaceInEnemyFlagArea = 0x193; // bool
		constexpr auto CheckBaseBuildingPlacementMask = 0x194; // bool
		constexpr auto PlacementAlgorithm = 0x195; // EPlacementAlgorithm
		constexpr auto MaxMissedPlacementTracesPercent = 0x198; // float
		constexpr auto ShowDirectionIndicator = 0x19c; // bool
		constexpr auto DirectionIndicatorOffset = 0x1a0; // FVector
		constexpr auto DirectionIndicatorRotation = 0x1ac; // float
		constexpr auto DirectionIndicatorSize = 0x1b0; // float
		constexpr auto OutlineMaterialBaseOffset = 0x1b4; // float
		constexpr auto OutlineMaterialThinness = 0x1b8; // float
		constexpr auto IsOutlineMaterialTwoSided = 0x1bc; // bool
		constexpr auto PlacementAllowedMaterialOverride = 0x1c0; // UMaterialInterface*
		constexpr auto PlacementDisallowedMaterialOverride = 0x1c8; // UMaterialInterface*
		constexpr auto OutlineMaterialOverride = 0x1d0; // UMaterialInterface*
		constexpr auto DepthMaterialOverride = 0x1d8; // UMaterialInterface*
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UPrisonerBodySymptom_NeedToUrinate {
		constexpr auto _severityVsBladderFullness = 0xb8; // FRuntimeFloatCurve
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UCustomGUIWindow_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto _title = 0x280; // FText
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_ATradeOutpostBuilding {
		constexpr auto _buildingMesh = 0x328; // UStaticMeshComponent*
		constexpr auto _interactionArea = 0x330; // UBoxComponent*
		constexpr auto _sedentaryNPCMarkers = 0x358; // TArray<FSedentaryNPCMarker>
		constexpr auto _spawnedSedentaryNPCs = 0x368; // TArray<ASedentaryNPC*>
	}

	namespace n_UABP_Prisoner_Aerial_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x328; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x358; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x408; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x588; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x638; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x700; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x7b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x800; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x850; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x8f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x940; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x990; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x9e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0xa80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0xad0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0xb20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xbc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0xc80; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0xdd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0xe00; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0xf58; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x10b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x1208; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x1360; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x14b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x14e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x1508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x1530; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x1558; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x1580; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x15a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x15d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x15f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x1620; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x1648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x1670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x1698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x16c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x1788; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x18e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x1908; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x19b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x1a60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1b00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1ba0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1c40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1cc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1dc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1f40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2028; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x2110; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_PoseSnapshot = 0x2268; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x22f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x2320; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x2348; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x2370; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x2398; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x23e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x2468; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x2508; // FAnimNode_SequencePlayer
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UMovieSceneLiveLinkSection {
		constexpr auto SubjectPreset = 0xe8; // FLiveLinkSubjectPreset
		constexpr auto ChannelMask = 0x120; // TArray<bool>
		constexpr auto SubSections = 0x130; // TArray<UMovieSceneLiveLinkSubSection*>
		constexpr auto SubjectName = 0x150; // FName
		constexpr auto TemplateToPush = 0x158; // FLiveLinkFrameData
		constexpr auto RefSkeleton = 0x1e8; // FLiveLinkRefSkeleton
		constexpr auto CurveNames = 0x208; // TArray<FName>
		constexpr auto PropertyFloatChannels = 0x218; // TArray<FMovieSceneFloatChannel>
	}

	namespace n_UObjectivesContainerWidget {
		constexpr auto _mainMissionContainerWidget = 0x260; // UMissionContainerWidget*
		constexpr auto _sideMissionContainerWidget = 0x268; // UMissionContainerWidget*
		constexpr auto _tutorialMissionContainerWidget = 0x270; // UMissionContainerWidget*
	}

	namespace n_USimpleParachuteItemTag {
		constexpr auto MovementParameters = 0x30; // FPrisonerAirMovementParameters
		constexpr auto OpeningAnimation = 0x50; // UAnimSequence*
		constexpr auto OpeningAnimationTimeRange = 0x58; // FFloatInterval
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x470; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x480; // TArray<FSpriteInstanceData>
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UBakeMeshAttributeMapsTool {
		constexpr auto Settings = 0x90; // UBakeMeshAttributeMapsToolProperties*
		constexpr auto NormalMapProps = 0x98; // UBakedNormalMapToolProperties*
		constexpr auto OcclusionMapProps = 0xa0; // UBakedOcclusionMapToolProperties*
		constexpr auto CurvatureMapProps = 0xa8; // UBakedCurvatureMapToolProperties*
		constexpr auto Texture2DProps = 0xb0; // UBakedTexture2DImageProperties*
		constexpr auto VisualizationProps = 0xb8; // UBakedOcclusionMapVisualizationProperties*
		constexpr auto PreviewMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto CachedNormalMap = 0x430; // UTexture2D*
		constexpr auto CachedOcclusionMap = 0x450; // UTexture2D*
		constexpr auto CachedCurvatureMap = 0x480; // UTexture2D*
		constexpr auto CachedMeshPropertyMap = 0x498; // UTexture2D*
		constexpr auto CachedTexture2DImageMap = 0x4b0; // UTexture2D*
		constexpr auto EmptyNormalMap = 0x4b8; // UTexture2D*
		constexpr auto EmptyColorMapBlack = 0x4c0; // UTexture2D*
		constexpr auto EmptyColorMapWhite = 0x4c8; // UTexture2D*
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UFoliageAssetData {
		constexpr auto GeneralData = 0x28; // FFoliageGeneralData
		constexpr auto EffectsData = 0x38; // FFoliageEffectsData
		constexpr auto AIPerceptionData = 0x50; // FFoliageAIPerceptionData
		constexpr auto CanopyData = 0x54; // FFoliageCanopyData
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UUI_MissionItemContainer_C {
		constexpr auto _completedVerticalLine = 0x328; // UImage*
		constexpr auto _dividerBottom = 0x330; // UImage*
		constexpr auto _verticalLine = 0x338; // UImage*
		constexpr auto Image_1 = 0x340; // UImage*
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_AWaterMeshActor {
		constexpr auto WaterVelocityTexture = 0x220; // UTexture2D*
		constexpr auto WaterMesh = 0x228; // UWaterMeshComponent*
	}

	namespace n_AFollowsMouseActor {
		constexpr auto DistanceFromCamera = 0x220; // float
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UModularTooltipElementData_AffectedBy {
		constexpr auto Affect = 0x40; // UModularTooltipElementData*
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_ABP_MainMenuGameMode_C {
		constexpr auto UberGraphFrame = 0x370; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x378; // USceneComponent*
		constexpr auto MenuHelpers = 0x380; // UMenuHelpers*
	}

	namespace n_UConstructionPlaneMechanic {
		constexpr auto PlaneTransformGizmo = 0xc8; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xd0; // UTransformProxy*
		constexpr auto ClickToSetPlaneBehavior = 0xe8; // USingleClickInputBehavior*
	}

	namespace n_UPrisonerAnimInstance_Fishing {
		constexpr auto _aimOffsetYaw = 0x2b8; // float
		constexpr auto _aimOffsetPitch = 0x2bc; // float
		constexpr auto _isActivelyFishing = 0x2c0; // bool
		constexpr auto _castingFinished = 0x2c1; // bool
		constexpr auto _floaterHitWaterSurface = 0x2c2; // bool
		constexpr auto _fishIsHooked = 0x2c3; // bool
		constexpr auto _stance = 0x2c4; // EPrisonerStance
		constexpr auto _isInFirstPersonView = 0x2c5; // bool
		constexpr auto _armsLagRotation = 0x2c8; // FRotator
		constexpr auto _armsLagPitch = 0x2d4; // float
		constexpr auto _armsLagYaw = 0x2d8; // float
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto bClampBandwithDeltaTime = 0x58; // int32_t
		constexpr auto MinBandwithDeltaTime = 0x5c; // float
		constexpr auto DeltaBitsMultiplier = 0x60; // float
		constexpr auto NetServerMaxTickRate = 0x64; // int32_t
		constexpr auto MaxNetTickRate = 0x68; // int32_t
		constexpr auto MaxInternetClientRate = 0x6c; // int32_t
		constexpr auto MaxClientRate = 0x70; // int32_t
		constexpr auto ServerTravelPause = 0x74; // float
		constexpr auto SpawnPrioritySeconds = 0x78; // float
		constexpr auto RelevantTimeout = 0x7c; // float
		constexpr auto KeepAliveTime = 0x80; // float
		constexpr auto InitialConnectTimeout = 0x84; // float
		constexpr auto ConnectionTimeout = 0x88; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x8c; // float
		constexpr auto bNoTimeouts = 0x90; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x91; // bool
		constexpr auto ServerConnection = 0x98; // UNetConnection*
		constexpr auto ClientConnections = 0xa0; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x110; // int32_t
		constexpr auto World = 0x150; // UWorld*
		constexpr auto WorldPackage = 0x158; // UPackage*
		constexpr auto NetConnectionClass = 0x180; // UObject*
		constexpr auto ReplicationDriverClass = 0x188; // UObject*
		constexpr auto NetDriverName = 0x1a0; // FName
		constexpr auto ChannelDefinitions = 0x1a8; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1b8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x208; // TArray<UChannel*>
		constexpr auto Time = 0x220; // float
		constexpr auto ReplicationDriver = 0x6f8; // UReplicationDriver*
	}

	namespace n_UUI_MissionItem_C {
		constexpr auto _background = 0x448; // UImage*
		constexpr auto _selectionBackground = 0x450; // UImage*
		constexpr auto _selectionIcon = 0x458; // UImage*
		constexpr auto _verticalImage = 0x460; // UImage*
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_UMovableWindow_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Body = 0x2a0; // UNamedSlot*
		constexpr auto isDragging = 0x2a8; // bool
		constexpr auto _relativeOffset = 0x2ac; // FVector2D
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_AGlassBottle04_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UPrisonerFirstPersonSubviewComponent {
		constexpr auto SubviewID = 0x7c8; // EPrisonerFirstPersonSubview
		constexpr auto WeaponFOV = 0x7cc; // float
		constexpr auto WeaponFoveationOffset = 0x7d0; // FVector
		constexpr auto MinViewPitch = 0x7dc; // float
		constexpr auto MaxViewPitch = 0x7e0; // float
		constexpr auto MinViewYaw = 0x7e4; // float
		constexpr auto MaxViewYaw = 0x7e8; // float
		constexpr auto MinMaxViewPitchByYawAndSpeed = 0x7f0; // UCurveLinearColor*
		constexpr auto LocalSpaceOffsetByYaw = 0x7f8; // UCurveVector*
		constexpr auto LocalSpaceOffsetByPitch = 0x800; // UCurveVector*
		constexpr auto ActorSpaceOffsetByYaw = 0x808; // UCurveVector*
		constexpr auto ActorSpaceOffsetByPitch = 0x810; // UCurveVector*
		constexpr auto LockRotationToSocketAnimationCurveName = 0x818; // FName
		constexpr auto LockRotationToSocketSocketName = 0x820; // FName
		constexpr auto ProbeSize = 0x828; // float
		constexpr auto ProbeChannel = 0x82c; // ECollisionChannel
		constexpr auto DoCollisionTest = 0x82d; // bool
		constexpr auto AnimationBobbingTXCurveName = 0x830; // FName
		constexpr auto AnimationBobbingTYCurveName = 0x838; // FName
		constexpr auto AnimationBobbingTZCurveName = 0x840; // FName
		constexpr auto AnimationBobbingRYCurveName = 0x848; // FName
		constexpr auto AnimationBobbingRPCurveName = 0x850; // FName
		constexpr auto AnimationBobbingRRCurveName = 0x858; // FName
		constexpr auto AnimationBobbingTScale = 0x860; // float
		constexpr auto AnimationBobbingRScale = 0x864; // float
		constexpr auto AnimationCameraOffsetTXCurveName = 0x868; // FName
		constexpr auto AnimationCameraOffsetTYCurveName = 0x870; // FName
		constexpr auto AnimationCameraOffsetTZCurveName = 0x878; // FName
		constexpr auto AnimationCameraOffsetRYCurveName = 0x880; // FName
		constexpr auto AnimationCameraOffsetRPCurveName = 0x888; // FName
		constexpr auto AnimationCameraOffsetRRCurveName = 0x890; // FName
		constexpr auto AnimationCameraOffsetTScale = 0x898; // float
		constexpr auto AnimationCameraOffsetRScale = 0x89c; // float
		constexpr auto blendInDuration = 0x8a0; // float
		constexpr auto blendOutDuration = 0x8a4; // float
		constexpr auto _minFactorForPrisonerHiding = 0x8a8; // float
	}

	namespace n_USoundSimple {
		constexpr auto Variations = 0x1b8; // TArray<FSoundVariation>
		constexpr auto SoundWave = 0x1c8; // USoundWave*
	}

	namespace n_UPBCTT_FootAbrasions {
		constexpr auto SeverityConstraint = 0x50; // FFloatRange
		constexpr auto TreatmentDurationPerSeverityLevel = 0x60; // TArray<float>
		constexpr auto TreatmentDurationPerUsePerSeverityLevel = 0x70; // TArray<float>
		constexpr auto StabilizationDurationReduction = 0x80; // float
		constexpr auto SkillData = 0x88; // FPBCTT_FootAbrasions_SkillData [0x5]
	}

	namespace n_UShotsFiredTrackerWidget {
		constexpr auto _widgetText = 0x278; // UTextBlock*
	}

	namespace n_UEditNormalsTool {
		constexpr auto BasicProperties = 0x90; // UEditNormalsToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UEditNormalsAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
	}

	namespace n_USliderWithLabelAndNumber {
		constexpr auto _name = 0xdb8; // UTextBlock*
		constexpr auto _valueDisplay = 0xdc0; // UTextBlock*
		constexpr auto _focusBackgroundImage = 0xdc8; // UImage*
		constexpr auto _selectedAndFocusedSWNANStyle = 0xdd0; // FSliderWithLabelAndNumberStyle
		constexpr auto _selectedAndUnfocusedSWNANStyle = 0xf28; // FSliderWithLabelAndNumberStyle
		constexpr auto _unselectedSWNANStyle = 0x1080; // FSliderWithLabelAndNumberStyle
		constexpr auto _highlightedSWNANStyle = 0x11d8; // FSliderWithLabelAndNumberStyle
		constexpr auto _disabledSWNANStyle = 0x1330; // FSliderWithLabelAndNumberStyle
		constexpr auto _label = 0x1488; // FText
		constexpr auto _decimalPlacesShown = 0x14a0; // int32_t
		constexpr auto _decimalPlacesShifted = 0x14a4; // int32_t
	}

	namespace n_URemeshMeshTool {
		constexpr auto BasicProperties = 0x98; // URemeshMeshToolProperties*
		constexpr auto MeshStatisticsProperties = 0xa0; // UMeshStatisticsProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UVisualOverlayItemTag {
		constexpr auto OverlayMaterial = 0x30; // UMaterialInterface*
		constexpr auto Priority = 0x38; // int32_t
		constexpr auto ShouldBeVisibleInFirstPersonView = 0x3c; // bool
		constexpr auto ShouldBeVisibleInThirdPersonView = 0x3d; // bool
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UUI_GameEventMiniScoreboardWidget_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto EmptyMsg = 0x2b8; // UTextBlock*
		constexpr auto Header = 0x2c0; // UBorder*
		constexpr auto Info = 0x2c8; // UUniformGridPanel*
		constexpr auto Rows = 0x2d0; // UScrollBox*
		constexpr auto List = 0x2d8; // TArray<UWidget*>
		constexpr auto TeamNames = 0x2e8; // TArray<FText>
		constexpr auto TeamColors = 0x2f8; // TArray<FGameEventTeamColours>
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UGrenadeAnimInstance {
		constexpr auto _owningPrisonerStance = 0x2c0; // EPrisonerStance
		constexpr auto _isOwningPrisonerInFirstPersonView = 0x2c1; // bool
		constexpr auto _isPinPulled = 0x2c2; // bool
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UCharacterSpawnerPreset {
		constexpr auto SpawnerData = 0x28; // FCharacterSpawnerData
	}

	namespace n_AProjectileShotgun {
		constexpr auto projectileClass = 0x418; // AProjectile*
		constexpr auto ShotsCount = 0x420; // int32_t
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x460; // float
	}

	namespace n_UUI_DoorUpgradeSlot_C {
		constexpr auto _backgroundImage_2 = 0x2f8; // UImage*
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto eventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_UClearRoundNotLoaded {
		constexpr auto MontageEndSectionName = 0xb8; // FName
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_AConZBase {
		constexpr auto _baseElementActor = 0x220; // TWeakObjectPtr<AConZBaseElement>
		constexpr auto _overrideBlockStackingRules = 0x2c0; // bool
		constexpr auto _debugRenderingDistance = 0x2c4; // float
		constexpr auto _decayProcessingNumberOfFrames = 0x2c8; // int32_t
		constexpr auto _decayProcessingMaxDestroyedElementsPerUpdate = 0x2cc; // int32_t
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UMetabolism_ICU_ST_Stats {
		constexpr auto _bloodPressure_mmHg = 0x278; // UTextBlock*
		constexpr auto _bloodPressure_kPa = 0x280; // UTextBlock*
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UUI_Metabolism_BodyStats_C {
		constexpr auto UI_CollapsableContainer = 0x2d8; // UUI_CollapsableContainer_C*
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UAnimNotifyState_WeaponShowAmmunitionMeshes {
		constexpr auto showReversed = 0x30; // bool
		constexpr auto ammoIndices = 0x38; // TArray<int32_t>
	}

	namespace n_ABP_MissionObjective_C {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto Changed = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_AMagicLeapARPinInfoActor_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Right = 0x240; // UStaticMeshComponent*
		constexpr auto Forward = 0x248; // UStaticMeshComponent*
		constexpr auto Up = 0x250; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x258; // USphereComponent*
		constexpr auto AxisRoot = 0x260; // USceneComponent*
		constexpr auto VisualizerRoot = 0x268; // USceneComponent*
		constexpr auto TypeValue = 0x270; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x278; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x280; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x288; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x290; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2a8; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b0; // USceneComponent*
		constexpr auto Root = 0x2b8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c0; // float
	}

	namespace n_UInputWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto CombatControlsScrollBox = 0x288; // UScrollBox*
		constexpr auto ControlsWidgetSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto GesturesScrollBox = 0x298; // UScrollBox*
		constexpr auto InstrumentsScrollBox = 0x2a0; // UScrollBox*
		constexpr auto MilitaryCommandsScrollBox = 0x2a8; // UScrollBox*
		constexpr auto ModeControlsScrollBox = 0x2b0; // UScrollBox*
		constexpr auto MovementControlsScrollBox = 0x2b8; // UScrollBox*
		constexpr auto QuickAccessScrollBox = 0x2c0; // UScrollBox*
		constexpr auto SectionSwitcher = 0x2c8; // UUI_OptionsSlider_C*
		constexpr auto UI_KeyBinding = 0x2d0; // UUI_KeyBinding_C*
		constexpr auto UI_KeyBinding_90 = 0x2d8; // UUI_KeyBinding_C*
		constexpr auto UI_KeyBinding_153 = 0x2e0; // UUI_KeyBinding_C*
		constexpr auto UI_KeyBinding_203 = 0x2e8; // UUI_KeyBinding_C*
		constexpr auto UI_KeyBinding_245 = 0x2f0; // UUI_KeyBinding_C*
		constexpr auto UI_KeyBinding_364 = 0x2f8; // UUI_KeyBinding_C*
		constexpr auto VehiclesScrollBox = 0x300; // UScrollBox*
		constexpr auto WeaponControlsScrollBox = 0x308; // UScrollBox*
		constexpr auto _lastWidget = 0x310; // UWidget*
		constexpr auto _lastButton = 0x318; // UUI_TrashMenuButton_C*
		constexpr auto _widgetToRebind = 0x320; // UUI_KeyBinding_C*
		constexpr auto _backConfirmationWidget = 0x328; // UUI_YesNoMenuConfirmation_C*
	}

	namespace n_ACan01_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UMonitoredWindowsContent_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto _prisoner = 0x2c0; // APrisoner*
		constexpr auto _isPrisonerSet = 0x2c8; // bool
		constexpr auto _updateContentTimer = 0x2d0; // FTimerHandle
		constexpr auto HasToolTip = 0x2d8; // bool
		constexpr auto ToolTip = 0x2e0; // FText
	}

	namespace n_UUI_CircularMenu_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto CenterImage = 0x2c8; // UImage*
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_ULineSetComponent {
		constexpr auto LineMaterial = 0x470; // UMaterialInterface*
		constexpr auto Bounds = 0x478; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x494; // bool
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_ULockableItemComponent {
		constexpr auto _staticLocks = 0xc0; // TArray<FLockData>
		constexpr auto _activeAccessLevel = 0xd0; // EAccessLevel
	}

	namespace n_UVehicleMountSlotsWidget {
		constexpr auto _mountSlotsCanvas = 0x260; // UCanvasPanel*
	}

	namespace n_UEditNormalsToolProperties {
		constexpr auto bRecomputeNormals = 0x60; // bool
		constexpr auto NormalCalculationMethod = 0x61; // ENormalCalculationMethod
		constexpr auto bFixInconsistentNormals = 0x62; // bool
		constexpr auto bInvertNormals = 0x63; // bool
		constexpr auto SplitNormalMethod = 0x64; // ESplitNormalMethod
		constexpr auto SharpEdgeAngleThreshold = 0x68; // float
		constexpr auto bAllowSharpVertices = 0x6c; // bool
	}

	namespace n_UUI_WeaponOverviewTooltipPanelAbsolute_C {
		constexpr auto Image_9 = 0x2c8; // UImage*
		constexpr auto UI_TooltipOverviewElement_C_1 = 0x2d0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_2 = 0x2d8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_3 = 0x2e0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_4 = 0x2e8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_5 = 0x2f0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_6 = 0x2f8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_7 = 0x300; // UUI_TooltipOverviewElement_C*
	}

	namespace n_UOffsetWeightMapSetProperties {
		constexpr auto MinDistance = 0x80; // float
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x590; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5a0; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5a8; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5c4; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5e0; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5f0; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5f8; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5fc; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x618; // bool
		constexpr auto InstanceCountToRender = 0x61c; // int32_t
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_UClearClipPartiallyEjected {
		constexpr auto MontageEndSectionName = 0xb8; // FName
	}

	namespace n_UEnduranceSkill {
		constexpr auto NoSkillParameters = 0xc0; // FEnduranceSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0xd8; // FEnduranceSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0xf0; // FEnduranceSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x108; // FEnduranceSkillParametersPerSkillLevel
	}

	namespace n_UPrisonerAnimInstance_Boat {
		constexpr auto _vehicleSpeed = 0x2b8; // float
		constexpr auto _vehicleSpeedKph = 0x2bc; // float
		constexpr auto _isVehicleDriver = 0x2c0; // bool
		constexpr auto _isRowing = 0x2c1; // bool
		constexpr auto _isPaddling = 0x2c2; // bool
		constexpr auto _isMotorPropelled = 0x2c3; // bool
		constexpr auto _isSailing = 0x2c4; // bool
		constexpr auto _sailsDeployAmount = 0x2c8; // float
		constexpr auto _sailsSteerAmount = 0x2cc; // float
		constexpr auto _sailsTurnAmount = 0x2d0; // float
		constexpr auto _paddleCounter = 0x2d4; // int32_t
		constexpr auto _vehicleThrottleAmount = 0x2d8; // float
		constexpr auto _vehicleBrakeAmount = 0x2dc; // float
		constexpr auto _vehicleSteerAmount = 0x2e0; // float
		constexpr auto _numPaddleSwingsInOneHand = 0x2e4; // int32_t
		constexpr auto _vehicleDriverForwardIdleAnimation = 0x2e8; // UBlendSpace*
		constexpr auto _vehiclePassengerIdleAnimation = 0x2f0; // UBlendSpace*
		constexpr auto _boatDriverPaddleLAnimation = 0x2f8; // UBlendSpace*
		constexpr auto _boatDriverPaddleRAnimation = 0x300; // UBlendSpace*
		constexpr auto _boatDriverPaddleLToRAnimation = 0x308; // UAnimSequence*
		constexpr auto _boatDriverPaddleRToLAnimation = 0x310; // UAnimSequence*
		constexpr auto _paddleInHand = 0x318; // float
		constexpr auto _motorHandleSocketTransform = 0x320; // FTransform
		constexpr auto _sailsHandleSocketTransform = 0x350; // FTransform
		constexpr auto _rudderSocketTransform = 0x380; // FTransform
		constexpr auto _maxSpineLeanAngle = 0x3b0; // float
		constexpr auto _spineLeanAmountForHandlingMotor = 0x3b4; // float
		constexpr auto _movementPace = 0x3b8; // EPrisonerMovementPace
		constexpr auto _normalizedMovementPace = 0x3bc; // float
		constexpr auto _playRateFromMovementPace = 0x3c0; // float
		constexpr auto _engineState = 0x3c4; // EVehicleEngineState
		constexpr auto _useVehicleWAPLowerBodyIdleTP = 0x3c5; // bool
		constexpr auto _vehicleWAPLowerBodyIdleAimingTP = 0x3c8; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedTP = 0x3d0; // UAnimSequenceBase*
		constexpr auto _isInCombatMode = 0x3d8; // bool
		constexpr auto _startEngineStartAnimation = 0x3e0; // UAnimSequence*
		constexpr auto _startEngineLoopAnimation = 0x3e8; // UAnimSequence*
		constexpr auto _startEngineLongLoopAnimation = 0x3f0; // UAnimSequence*
		constexpr auto _startEngineEndAnimation = 0x3f8; // UAnimSequence*
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UImportedSoundWave {
		constexpr auto OnAudioPlaybackFinished = 0x3c0; // FMulticastInlineDelegate
		constexpr auto PlaybackFinishedBroadcast = 0x3d0; // bool
		constexpr auto PCMBufferInfo = 0x3d8; // FPCMStruct
		constexpr auto CurrentNumOfFrames = 0x3f0; // int32_t
	}

	namespace n_ASmokeGrenadeItem {
		constexpr auto _smokeParticle = 0x850; // UParticleSystem*
		constexpr auto _smokeStartedAudioEvent = 0x858; // UAkAudioEvent*
		constexpr auto _smokeStoppedAudioEvent = 0x860; // UAkAudioEvent*
		constexpr auto _smokeSoundDuration = 0x868; // float
		constexpr auto _smokeAudioComponent = 0x870; // UAkComponent*
	}

	namespace n_ABP_PrisonerCorpse_C {
		constexpr auto UberGraphFrame = 0x600; // FPointerToUberGraphFrame
		constexpr auto ShortHairCurve = 0x608; // UCurveFloat*
		constexpr auto MediumHairCurve = 0x610; // UCurveFloat*
		constexpr auto MediumHairCurvePDO = 0x618; // UCurveFloat*
		constexpr auto MediumHairCurveTopOpacity = 0x620; // UCurveFloat*
		constexpr auto LongHairCurve = 0x628; // UCurveFloat*
		constexpr auto LongHairCurvePDO = 0x630; // UCurveFloat*
		constexpr auto LongHairCurveTopOpacity = 0x638; // UCurveFloat*
		constexpr auto ShortFacialHairCurve = 0x640; // UCurveFloat*
		constexpr auto MediumFacialHairCurve = 0x648; // UCurveFloat*
		constexpr auto MediumFacialHairCurvePDO = 0x650; // UCurveFloat*
		constexpr auto MediumFacialHairCurveTopOpacity = 0x658; // UCurveFloat*
		constexpr auto LongFacialHairCurve = 0x660; // UCurveFloat*
		constexpr auto LongFacialHairCurvePDO = 0x668; // UCurveFloat*
		constexpr auto LongFacialHairCurveTopOpacity = 0x670; // UCurveFloat*
		constexpr auto AfroMediumHairCurve = 0x678; // UCurveFloat*
	}

	namespace n_USquadPanelWidget {
		constexpr auto squadRank = 0x260; // int32_t
		constexpr auto squadIndex = 0x264; // int32_t
		constexpr auto SquadTopNames = 0x268; // TArray<FString>
		constexpr auto SquadTopInformation = 0x278; // TArray<FString>
		constexpr auto SquadTopEmblems = 0x288; // TArray<FConZSquadEmblem>
		constexpr auto SquadTopScore = 0x298; // TArray<float>
		constexpr auto SquadRankingNames = 0x2a8; // TArray<FString>
		constexpr auto SquadRankingInformation = 0x2b8; // TArray<FString>
		constexpr auto SquadRankingEmblems = 0x2c8; // TArray<FConZSquadEmblem>
		constexpr auto SquadRankingScore = 0x2d8; // TArray<float>
		constexpr auto MemberUserProfileIds = 0x2e8; // TArray<FDbIntegerId>
		constexpr auto MemberNames = 0x2f8; // TArray<FString>
		constexpr auto MemberRanks = 0x308; // TArray<EConZSquadMemberRank>
		constexpr auto MemberFamePoints = 0x318; // TArray<float>
		constexpr auto MemberOnline = 0x328; // TArray<bool>
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_USurvivalSkill {
		constexpr auto NoSkillParameters = 0xa8; // FCompassSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0xa9; // FCompassSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0xaa; // FCompassSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0xab; // FCompassSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0xac; // FCompassSkillParametersPerSkillLevel
	}

	namespace n_UChatSuggestionWidget {
		constexpr auto _border = 0x278; // UBorder*
		constexpr auto _textBlock = 0x280; // UChatText*
		constexpr auto _defaultColor = 0x288; // FLinearColor
		constexpr auto _highlightedColor = 0x298; // FLinearColor
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UBP_M1_InsertClipInsertBullet_C {
		constexpr auto LoadedAmmoCount = 0xa0; // int32_t
	}

	namespace n_ABP_Survival_Tutorial_SearchGroundObjective_C {
		constexpr auto DefaultSceneRoot = 0x340; // USceneComponent*
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UVDProceduralClothComponent {
		constexpr auto StretchStiffness = 0x678; // float
		constexpr auto BendStiffness = 0x67c; // float
		constexpr auto Mass = 0x680; // float
		constexpr auto DragCoefficient = 0x684; // float
		constexpr auto Width = 0x688; // float
		constexpr auto Height = 0x68c; // float
		constexpr auto NumParticlesWide = 0x690; // int32_t
		constexpr auto NumParticlesHigh = 0x694; // int32_t
		constexpr auto TileMaterialAlongWidth = 0x698; // float
		constexpr auto TileMaterialAlongHeight = 0x69c; // float
		constexpr auto StretchConstraints = 0x6c0; // TArray<UVDParticleSpringConstraint*>
		constexpr auto BendConstraints = 0x6d0; // TArray<UVDParticleSpringConstraint*>
	}

	namespace n_UPrisonerBodySymptom_Nausea {
		constexpr auto _maxSeverity = 0xb8; // float
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ADropZoneCrate {
		constexpr auto KeyClass = 0x280; // ADropZoneKey*
		constexpr auto _hasKey = 0x288; // bool
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_UUI_HandsHolstersWidget3_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto AddonsHighlightBorder = 0x2f0; // UUI_Border_C*
		constexpr auto AmmoTypeText = 0x2f8; // UTextBlock*
		constexpr auto ExtraSlotBackground = 0x300; // UImage*
		constexpr auto ExtraSlotsOverlay = 0x308; // UOverlay*
		constexpr auto GridPanel = 0x310; // UGridPanel*
		constexpr auto HighlightBorder = 0x318; // UUI_Border_C*
		constexpr auto Image_1 = 0x320; // UImage*
		constexpr auto Image_2 = 0x328; // UImage*
		constexpr auto MainExtraSlotImage = 0x330; // UImage*
		constexpr auto SlotTypeText = 0x338; // UTextBlock*
		constexpr auto SlotName = 0x340; // FText
	}

	namespace n_UUI_DropdownMenuTextureSelectionWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto SelectionBorder = 0x2a0; // UUI_CustomBorder_C*
		constexpr auto SelectionImage = 0x2a8; // UImage*
		constexpr auto Texture = 0x2b0; // UTexture2D*
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UFixedPlaneBrushProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_AFlareTrapItem {
		constexpr auto _triggerSound = 0x910; // UAkAudioEvent*
		constexpr auto _detonationDelay = 0x918; // float
		constexpr auto _projectileClass = 0x920; // AProjectile*
		constexpr auto _projectileLocation = 0x928; // FVector
		constexpr auto _projectileRotation = 0x934; // FRotator
		constexpr auto _projectileMuzzleVelocity = 0x940; // float
		constexpr auto _projectileLifetime = 0x944; // float
	}

	namespace n_UTraderMainUIController {
		constexpr auto TraderBuyUIController = 0x28; // UTraderBuyUIController*
		constexpr auto TraderSellUIController = 0x30; // UTraderSellUIController*
	}

	namespace n_UVoiceChatComponent {
		constexpr auto MaxVoiceDistance = 0xb8; // float
		constexpr auto ActiveTalker = 0xbc; // bool
		constexpr auto StopTalkingTimeThreshold = 0xc0; // float
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UUI_CriminalRecordSkill_C {
		constexpr auto ExperienceText = 0x260; // UTextBlock*
		constexpr auto NameText = 0x268; // UTextBlock*
		constexpr auto PercentageText = 0x270; // UTextBlock*
		constexpr auto PieProgressBar = 0x278; // UPieProgressBar_C*
	}

	namespace n_UTwistKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UMetabolism_ICU_SPO2_Stats {
		constexpr auto _spo2MinMax = 0x278; // UTextBlock*
		constexpr auto _spo2TextValue = 0x280; // UTextBlock*
		constexpr auto _spo2ProgBar = 0x288; // UProgressBar*
	}

	namespace n_UKillBoxTimerWidget {
		constexpr auto _remainingTimeMinutes1 = 0x278; // UTextBlock*
		constexpr auto _remainingTimeMinutes2 = 0x280; // UTextBlock*
		constexpr auto _remainingTimeSeconds1 = 0x288; // UTextBlock*
		constexpr auto _remainingTimeSeconds2 = 0x290; // UTextBlock*
	}

	namespace n_UThrowingQuickAccessItemWidget {
		constexpr auto MaxWidth = 0x278; // char
		constexpr auto MaxHeight = 0x279; // char
		constexpr auto _imageWidget = 0x280; // UImage*
		constexpr auto _item = 0x288; // TWeakObjectPtr<AItem>
		constexpr auto DefaultWidth = 0x290; // float
		constexpr auto DefaultHeight = 0x294; // float
		constexpr auto DefaultPosition = 0x298; // FVector2D
		constexpr auto _additionalIcon = 0x2a8; // UImage*
		constexpr auto _additionalText = 0x2b0; // UTextBlock*
	}

	namespace n_UPolyEditOffsetProperties {
		constexpr auto bUseFaceNormals = 0x60; // bool
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x460; // float
		constexpr auto CapsuleRadius = 0x464; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UDrinkItemState {
		constexpr auto RemainingNutrientsCoefficient = 0x110; // float
		constexpr auto Water = 0x114; // float
		constexpr auto Sodium = 0x118; // float
	}

	namespace n_AThermometer {
		constexpr auto _thermalSensorComponent = 0x7c0; // UThermalSensorComponent*
		constexpr auto _thermometerFluidMaterialId = 0x7c8; // int32_t
	}

	namespace n_UUI_KeyBinding_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto ActionKeyText = 0x280; // UTextBlock*
		constexpr auto ActionNameText = 0x288; // UTextBlock*
		constexpr auto Image_1 = 0x290; // UImage*
		constexpr auto _isChangingKey = 0x298; // bool
		constexpr auto KeyPressed = 0x2a0; // FMulticastInlineDelegate
		constexpr auto UserFriendlyName = 0x2b0; // FText
		constexpr auto Name = 0x2c8; // FName
		constexpr auto OnRebindInitiated = 0x2d0; // FMulticastInlineDelegate
		constexpr auto IsAxis = 0x2e0; // bool
		constexpr auto _key = 0x2e8; // FKey
		constexpr auto AxisScale = 0x300; // float
		constexpr auto GroupName = 0x304; // FName
		constexpr auto CheckOnlySameKeyWithinGroup = 0x30c; // bool
		constexpr auto SameKeyBlockerGroupName = 0x310; // FName
	}

	namespace n_UPrisonerAnimInstance_Vehicle2W {
		constexpr auto _vehicle2WSpeed = 0x2b8; // float
		constexpr auto _vehicle2WSpeedKmh = 0x2bc; // float
		constexpr auto _steerAmount = 0x2c0; // float
		constexpr auto _brakeAmount = 0x2c4; // float
		constexpr auto _throttleAmount = 0x2c8; // float
		constexpr auto _isInCombatMode = 0x2cc; // bool
		constexpr auto _isDriver = 0x2cd; // bool
		constexpr auto _isBicycle = 0x2ce; // bool
		constexpr auto _vehicleRoll = 0x2d0; // float
		constexpr auto _lerpedBrakeThrottle = 0x2d4; // float
		constexpr auto _inAirTimer = 0x2d8; // float
		constexpr auto _engineState = 0x2dc; // EVehicleEngineState
		constexpr auto _driverIdleAnimation = 0x2e0; // UBlendSpace*
		constexpr auto _driverReverseIdleAnimation = 0x2e8; // UBlendSpace*
		constexpr auto _driverLHandleTransform = 0x2f0; // FTransform
		constexpr auto _driverRHandleTransform = 0x320; // FTransform
		constexpr auto _driverReverseSeatHandTransform = 0x350; // FTransform
		constexpr auto _driverLFootRestTransform = 0x380; // FTransform
		constexpr auto _driverRFootRestTransform = 0x3b0; // FTransform
		constexpr auto _passengerIdleAnimation = 0x3e0; // UBlendSpace*
		constexpr auto _useVehicleWAPLowerBodyIdleTP = 0x3e8; // bool
		constexpr auto _vehicleWAPLowerBodyIdleAimingTP = 0x3f0; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedTP = 0x3f8; // UAnimSequenceBase*
		constexpr auto _startEngineStartAnimation = 0x400; // UAnimSequence*
		constexpr auto _startEngineLoopAnimation = 0x408; // UAnimSequence*
		constexpr auto _startEngineLongLoopAnimation = 0x410; // UAnimSequence*
		constexpr auto _startEngineEndAnimation = 0x418; // UAnimSequence*
		constexpr auto _standUpStartAnimation = 0x420; // UAnimSequence*
		constexpr auto _standUpLoopAnimation = 0x428; // UAnimSequence*
		constexpr auto _standUpEndAnimation = 0x430; // UAnimSequence*
	}

	namespace n_UBaseProgressBar_C {
		constexpr auto _titleBase = 0x2b8; // FText
		constexpr auto _percentage = 0x2d0; // float
		constexpr auto _previousPercentage = 0x2d4; // float
		constexpr auto _alarmThreshold = 0x2d8; // float
		constexpr auto _isClampingOn = 0x2dc; // bool
		constexpr auto _isAlarmOn = 0x2dd; // bool
		constexpr auto _alarmThresholdHigh = 0x2e0; // float
		constexpr auto _isAlarmThresholdHighActive = 0x2e4; // bool
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_AAquaticLifeSpawningVolume {
		constexpr auto _waterZoneType = 0x258; // EWaterZoneType
		constexpr auto _fishSpeciesPreset = 0x260; // UFishSpeciesPreset*
		constexpr auto _fishSpawningPreset = 0x268; // UFishSpawningPreset*
		constexpr auto _requiredDepthForSpawning = 0x270; // float
		constexpr auto _fishSchoolManagerSpawningExtent = 0x274; // float
		constexpr auto _maxSchoolsPerFishSchoolManager = 0x278; // int32_t
		constexpr auto _fishingZoneIndicatorMinSpawnTime = 0x27c; // float
		constexpr auto _fishingZoneIndicatorMaxSpawnTime = 0x280; // float
		constexpr auto _fishingZoneIndicatorMinLifetime = 0x284; // float
		constexpr auto _fishingZoneIndicatorMaxLifetime = 0x288; // float
		constexpr auto _maxFishingZoneIndicatorPerPlayer = 0x28c; // int32_t
		constexpr auto _fishingZoneIndicatorMinSpawningExtent = 0x290; // float
		constexpr auto _fishingZoneIndicatorMaxSpawningExtent = 0x294; // float
		constexpr auto _fishingZoneIndicatorMinRadius = 0x298; // float
		constexpr auto _fishingZoneIndicatorMaxRadius = 0x29c; // float
		constexpr auto _requiredDepthForFishingIndicator = 0x2a0; // float
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UVoxelMorphologyMeshesTool {
		constexpr auto MorphologyProperties = 0x108; // UVoxelMorphologyMeshesToolProperties*
	}

	namespace n_UHoleFillTool {
		constexpr auto SmoothHoleFillProperties = 0x98; // USmoothHoleFillProperties*
		constexpr auto Properties = 0xa0; // UHoleFillToolProperties*
		constexpr auto Actions = 0xa8; // UHoleFillToolActions*
		constexpr auto Statistics = 0xb0; // UHoleFillStatisticsProperties*
		constexpr auto Preview = 0xb8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto SelectionMechanic = 0xc0; // UPolygonSelectionMechanic*
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x670; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x680; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x690; // FGuid
	}

	namespace n_UPolyEditCommonProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bSelectEdgeLoops = 0x61; // bool
		constexpr auto LocalFrameMode = 0x64; // ELocalFrameMode
		constexpr auto bLockRotation = 0x68; // bool
		constexpr auto bSnapToWorldGrid = 0x69; // bool
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UAdminCommand_EquipParachute {
		constexpr auto _parachuteClass = 0x80; // AClothesItem*
	}

	namespace n_UDerivedWidgetsData {
		constexpr auto CraftingPanel = 0x30; // UUserWidget*
		constexpr auto CraftingInfo = 0x38; // UUserWidget*
		constexpr auto CraftingSectionContainer = 0x40; // UUserWidget*
		constexpr auto CraftableItem = 0x48; // UUserWidget*
		constexpr auto CraftingIngredient = 0x50; // UUserWidget*
		constexpr auto CraftingPossibleItem = 0x58; // UUserWidget*
		constexpr auto StripedFiller = 0x60; // UUserWidget*
		constexpr auto AvailableItem = 0x68; // UUserWidget*
		constexpr auto WorldCraftingMarker = 0x70; // UWorldCraftingMarkerWidget*
		constexpr auto LoadingScreen = 0x78; // ULoadingScreen*
		constexpr auto InteractionWidgetClass = 0x80; // UUserWidget*
		constexpr auto InteractionGroupWidgetClass = 0x88; // UUserWidget*
		constexpr auto InteractionContainerWidgetClass = 0x90; // UUserWidget*
		constexpr auto ItemWidgetClass = 0x98; // UUserWidget*
		constexpr auto InventoryWidgetClass = 0xa0; // UUserWidget*
		constexpr auto InventorySlotWidgetClass = 0xa8; // UUserWidget*
		constexpr auto WarningWidgetClass = 0xb0; // UUserWidget*
		constexpr auto HudWidgetClass = 0xb8; // UUserWidget*
		constexpr auto LoadingWidgetClass = 0xc0; // UUserWidget*
		constexpr auto LoadingIconWidgetClass = 0xc8; // UUserWidget*
		constexpr auto SpawnScreenWidgetClass = 0xd0; // UUserWidget*
		constexpr auto WaypointScreenWidgetClass = 0xd8; // UUserWidget*
		constexpr auto HoverPanelWidgetClass = 0xe0; // UUserWidget*
		constexpr auto ActionProgressWidgetClass = 0xe8; // UUserWidget*
		constexpr auto ItemSelectionWidgetClass = 0xf0; // UUserWidget*
		constexpr auto ExamineWidgetClass = 0xf8; // UUserWidget*
		constexpr auto HandsInventoryWidgetClass = 0x100; // UUserWidget*
		constexpr auto GenericItemInventoryWidgetClass = 0x108; // UUserWidget*
		constexpr auto InventoryContainersWidgetClass = 0x110; // UUserWidget*
		constexpr auto CombinedInventoryWidgetClass = 0x118; // UUserWidget*
		constexpr auto TeamInvitationWidgetClass = 0x120; // UUserWidget*
		constexpr auto CraftingInfoWidgetClass = 0x128; // UUserWidget*
		constexpr auto CraftingComponentWidgetClass = 0x130; // UUserWidget*
		constexpr auto CraftingRecipeWidgetClass = 0x138; // UUserWidget*
		constexpr auto EmptySlotWidgetClass = 0x140; // UUserWidget*
		constexpr auto TeamInfoWidgetClass = 0x148; // UUserWidget*
		constexpr auto TeammateNameWidgetClass = 0x150; // UUserWidget*
		constexpr auto PreviousNextSwitchWidgetClass = 0x158; // UUserWidget*
		constexpr auto VicinityItemContainerWidgetClass = 0x160; // UUserWidget*
		constexpr auto QuickAccessItemWidget = 0x168; // UUserWidget*
		constexpr auto ChangeTextWidgetClass = 0x170; // UChangeTextWidget*
		constexpr auto ItemStatusWidgetClass = 0x178; // UItemStatusWidget*
		constexpr auto HealthWidgetClass = 0x180; // UHealthWidget*
		constexpr auto GameEventPanelWidgetClass = 0x188; // UUserWidget*
		constexpr auto GameEventCardWidgetClass = 0x190; // UUserWidget*
		constexpr auto GameEventScoreboardWidgetClass = 0x198; // UUserWidget*
		constexpr auto GameEventMiniScoreboardWidgetClass = 0x1a0; // UUserWidget*
		constexpr auto TournamentScoreboardWidgetClass = 0x1a8; // UUserWidget*
		constexpr auto CircularMenuWidgetClass = 0x1b0; // UUserWidget*
		constexpr auto CircularMenuSegmentWidgetClass = 0x1b8; // UUserWidget*
		constexpr auto LockpickingWidgetClass = 0x1c0; // UUserWidget*
		constexpr auto DoorUpgradeWidgetClass = 0x1c8; // UDoorUpgradeWidget*
		constexpr auto UpgradeWidgetClass = 0x1d0; // UUserWidget*
		constexpr auto InventoryContainerWidget2Test = 0x1d8; // UUserWidget*
		constexpr auto InventoryItemWidget2Test = 0x1e0; // UUserWidget*
		constexpr auto ItemInventoryWidget2 = 0x1e8; // UUserWidget*
		constexpr auto InventoryPanelSideLayerWidget = 0x1f0; // UUserWidget*
		constexpr auto ItemSplittingWidgetClass = 0x1f8; // UUserWidget*
		constexpr auto Widgets = 0x200; // TMap<EWidgetType, UUserWidget*>
		constexpr auto ObjectivesWidgetClass = 0x250; // UUserWidget*
		constexpr auto MissionPromptClass = 0x258; // UUserWidget*
		constexpr auto MissionResultClass = 0x260; // UUserWidget*
		constexpr auto MissionItemClass = 0x268; // UUserWidget*
		constexpr auto ObjectiveItemClass = 0x270; // UUserWidget*
		constexpr auto MissionRewardClass = 0x278; // UUserWidget*
		constexpr auto RewardItemWidgetClass = 0x280; // UUserWidget*
		constexpr auto StatisticsListRow = 0x288; // UUserWidget*
		constexpr auto ItemTooltipPanels = 0x290; // TArray<FTooltipPanelData>
		constexpr auto MalfunctionsContainerClass = 0x2a0; // UUserWidget*
		constexpr auto WeaponAmmoCountContainerClass = 0x2a8; // UUserWidget*
		constexpr auto PlaceableElementWidgetClass = 0x2b0; // UUserWidget*
	}

	namespace n_UPrisonerSkillsUIDataImpl {
		constexpr auto SkillsUIData = 0x28; // TArray<UPrisonerSkillUIData*>
	}

	namespace n_UMagicLeapTouchpadGesturesComponent {
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UStatisticsDetailsWidget {
		constexpr auto _generalSubcategoryTab = 0x260; // UStatisticsSubcategoryTab*
		constexpr auto _foodSubcategoryTab = 0x268; // UStatisticsSubcategoryTab*
		constexpr auto _huntingSubcategoryTab = 0x270; // UStatisticsSubcategoryTab*
		constexpr auto _fishingSubcategoryTab = 0x278; // UStatisticsSubcategoryTab*
		constexpr auto _travelSubcategoryTab = 0x280; // UStatisticsSubcategoryTab*
		constexpr auto _metabolismSubcategoryTab = 0x288; // UStatisticsSubcategoryTab*
		constexpr auto _craftingSubcategoryTab = 0x290; // UStatisticsSubcategoryTab*
		constexpr auto _combatSubcategoryTab = 0x298; // UStatisticsSubcategoryTab*
		constexpr auto _eventsSubcategoryTab = 0x2a0; // UStatisticsSubcategoryTab*
		constexpr auto _subcategorySwitcher = 0x2a8; // UWidgetSwitcher*
		constexpr auto _generalStatisticsList = 0x348; // UStatisticsListWidget*
		constexpr auto _foodStatisticsList = 0x350; // UStatisticsListWidget*
		constexpr auto _huntingStatisticsList = 0x358; // UStatisticsListWidget*
		constexpr auto _fishingStatisticsList = 0x360; // UStatisticsListWidget*
		constexpr auto _travelStatisticsList = 0x368; // UStatisticsListWidget*
		constexpr auto _metabolismStatisticsList = 0x370; // UStatisticsListWidget*
		constexpr auto _craftingStatisticsList = 0x378; // UStatisticsListWidget*
		constexpr auto _combatStatisticsList = 0x380; // UStatisticsListWidget*
		constexpr auto _eventsStatisticsList = 0x388; // UStatisticsListWidget*
	}

	namespace n_UUI_CC_NonSelectableText_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x280; // UImage*
		constexpr auto RetainerBox_1 = 0x288; // URetainerBox*
		constexpr auto SizeBox_1 = 0x290; // USizeBox*
		constexpr auto TextBlock_1 = 0x298; // UTextBlock*
		constexpr auto Text = 0x2a0; // FText
		constexpr auto FontSize = 0x2b8; // int32_t
		constexpr auto TextPadding = 0x2bc; // FMargin
		constexpr auto SizeOverride = 0x2cc; // FVector2D
		constexpr auto TextHorizontalAlignment = 0x2d4; // EHorizontalAlignment
		constexpr auto TextColour = 0x2d8; // FLinearColor
	}

	namespace n_UUI_SpawnScreenWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Blackout = 0x2a0; // UBorder*
		constexpr auto PenaltyCountdown = 0x2a8; // UBorder*
		constexpr auto RespawnButton = 0x2b0; // UButton*
		constexpr auto Scoreboard = 0x2b8; // UOverlay*
		constexpr auto ScoreBoardButton = 0x2c0; // UButton*
		constexpr auto SpawnInterface = 0x2c8; // UScaleBox*
		constexpr auto UI_GameEventLoadoutMenuWidget = 0x2d0; // UUI_GameEventLoadoutMenuWidget_C*
		constexpr auto UI_SpawnMenuWidget = 0x2d8; // UUI_SpawnMenuWidget_C*
		constexpr auto WaitTimeText = 0x2e0; // UTextBlock*
		constexpr auto InEvent = 0x2e8; // bool
		constexpr auto WaitTime = 0x2ec; // float
		constexpr auto _tournamentScoreboard = 0x2f0; // UTournamentScoreboardWidget*
	}

	namespace n_UGroomHairGroupsPreview {
		constexpr auto Groups = 0x28; // TArray<FGroomHairGroupPreview>
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_AGameEventBorder {
		constexpr auto Mesh = 0x220; // UStaticMeshComponent*
		constexpr auto Material = 0x228; // UMaterialInstanceDynamic*
		constexpr auto SoundSpline = 0x230; // UChildActorComponent*
		constexpr auto AudioEvent = 0x238; // UAkAudioEvent*
		constexpr auto _state = 0x240; // EGameEventBorderState
		constexpr auto _desiredRadius = 0x244; // float
		constexpr auto _desiredOffset = 0x24c; // FVector
		constexpr auto _desiredHeat = 0x264; // float
		constexpr auto _radiusChangeSpeed = 0x26c; // float
		constexpr auto _offsetChangeSpeed = 0x270; // float
		constexpr auto _heatChangeSpeed = 0x274; // float
		constexpr auto _collisionEnabled = 0x278; // bool
		constexpr auto _blockPawns = 0x279; // bool
	}

	namespace n_UInfiniteResourceAssetData {
		constexpr auto ResourceType = 0x30; // UGameResourceType*
		constexpr auto InSocketTypes = 0x38; // FGameplayTagContainer
		constexpr auto OutSocketTypes = 0x58; // FGameplayTagContainer
		constexpr auto RequiredItemTagsForFilling = 0x78; // TArray<UBaseItemTag*>
		constexpr auto FillBaseActionDuration = 0x88; // float
		constexpr auto FillActionDurationPerAmountFilled = 0x8c; // float
		constexpr auto FillResourceFillingExperiencePerAmount = 0x90; // float
		constexpr auto FillMontage = 0x98; // UAnimMontage*
		constexpr auto FillStartAudioEvent = 0xa0; // UAkAudioEvent*
		constexpr auto FillStopAudioEvent = 0xa8; // UAkAudioEvent*
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_AMissionDialogueManager {
		constexpr auto _lineDurationModifier = 0x23c; // float
		constexpr auto _delayBetweenDialogues = 0x240; // float
	}

	namespace n_ABP_Survival_BagCrafting_CutPants_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UBakeMeshAttributeMapsToolProperties {
		constexpr auto MapType = 0x60; // EBakeMapType
		constexpr auto Resolution = 0x64; // EBakeTextureResolution
		constexpr auto UVLayer = 0x68; // FString
		constexpr auto UVLayerNamesList = 0x78; // TArray<FString>
		constexpr auto bUseWorldSpace = 0x88; // bool
		constexpr auto Result = 0x90; // UTexture2D*
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UPrisonerUIDataResponse {
		constexpr auto _payload = 0x28; // UPrisonerUIData*
	}

	namespace n_UABP_Prisoner_SpineLeaning_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose = 0x2f8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x410; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x518; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x620; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x728; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x830; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x938; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x958; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto LeanAmount = 0x978; // float
		constexpr auto Spine1LeanAngle = 0x97c; // float
		constexpr auto Spine2LeanAngle = 0x980; // float
		constexpr auto Spine3LeanAngle = 0x984; // float
		constexpr auto RibcageLeanAngle = 0x988; // float
	}

	namespace n_UAnimBP_ImprovisedPistol50cal_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_4 = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3 = 0x380; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x3c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x410; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum = 0x458; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x530; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x558; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x580; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer = 0x6d8; // FAnimNode_SequencePlayer
	}

	namespace n_UInflateBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UUI_TextInput_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x280; // UImage*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto InputImage = 0x290; // UImage*
		constexpr auto InputSizeBox = 0x298; // USizeBox*
		constexpr auto MainButton = 0x2a0; // UButton*
		constexpr auto TextBlock_1 = 0x2a8; // UTextBlock*
		constexpr auto TextBox = 0x2b0; // UEditableTextBox*
		constexpr auto TitleSizeBox = 0x2b8; // USizeBox*
		constexpr auto InputFontSize = 0x2c0; // int32_t
		constexpr auto TitleFontSize = 0x2c4; // int32_t
		constexpr auto TitleFontSizeHighlighted = 0x2c8; // int32_t
		constexpr auto TitleWidth = 0x2cc; // float
		constexpr auto InputWidth = 0x2d0; // float
		constexpr auto Height = 0x2d4; // float
		constexpr auto Title = 0x2d8; // FText
		constexpr auto DefaultValue = 0x2f0; // FText
		constexpr auto InputPadding = 0x308; // float
		constexpr auto InputType = 0x30c; // TextInputType
		constexpr auto OnTextCommitted = 0x310; // FMulticastInlineDelegate
		constexpr auto ValueJustification = 0x320; // EHorizontalAlignment
		constexpr auto InputBackgroundColor = 0x324; // FLinearColor
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ABP_WeaponBullet_ShotgunShell_C {
		constexpr auto UberGraphFrame = 0x428; // FPointerToUberGraphFrame
	}

	namespace n_UHeatSourceMarkersComponent {
		constexpr auto _heatSources = 0x1f8; // TArray<FHeatSource>
	}

	namespace n_UUI_ItemInventory2_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto BlinkAnim = 0x2f8; // UWidgetAnimation*
		constexpr auto _weightHorizontalBox = 0x300; // UHorizontalBox*
		constexpr auto DeadCellsImage = 0x308; // UImage*
		constexpr auto ExtraSlotBackground = 0x310; // UImage*
		constexpr auto ExtraSlotsOverlay = 0x318; // UOverlay*
		constexpr auto GreenText = 0x320; // UTextBlock*
		constexpr auto Image_1 = 0x328; // UImage*
		constexpr auto Image_2 = 0x330; // UImage*
		constexpr auto Image_3 = 0x338; // UImage*
		constexpr auto Image_4 = 0x340; // UImage*
		constexpr auto Image_5 = 0x348; // UImage*
		constexpr auto Image_6 = 0x350; // UImage*
		constexpr auto Image_7 = 0x358; // UImage*
		constexpr auto MainExtraSlotImage = 0x360; // UImage*
		constexpr auto ProgressBar_1 = 0x368; // UProgressBar*
		constexpr auto RedText = 0x370; // UTextBlock*
		constexpr auto RetainerBoxDeadCells = 0x378; // URetainerBox*
		constexpr auto SeparatorOverlay = 0x380; // UOverlay*
		constexpr auto SlotsText = 0x388; // UTextBlock*
		constexpr auto WeightAndExpandSizeBox = 0x390; // USizeBox*
		constexpr auto NewVar_1 = 0x398; // TScriptInterface<IInventoryNode>
	}

	namespace n_UUI_CircularMenuSegment_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x448; // TArray<FMaterialSpriteElement>
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UClientSettingsUIController {
		constexpr auto InputWidget = 0x70; // UInputWidget*
	}

	namespace n_ATrader {
		constexpr auto _assignedTradePost = 0x7e8; // ATradePost*
		constexpr auto _tradeableCategories = 0x7f0; // TArray<ETradeCategory>
		constexpr auto _tradeableClasses = 0x800; // TArray<UObject*>
	}

	namespace n_UBasicGameResourceContainerComponentState {
		constexpr auto IsActive = 0x40; // bool
		constexpr auto ResourceAmount = 0x44; // float
		constexpr auto CurrentResourceType = 0x48; // UGameResourceType*
	}

	namespace n_ABP_FishingRod_C {
		constexpr auto UberGraphFrame = 0xac0; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UInventoryItemData2D {
		constexpr auto SizeX = 0x30; // int32_t
		constexpr auto SizeY = 0x34; // int32_t
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UTraderSellPanel {
		constexpr auto _sellList = 0x260; // UVerticalBox*
		constexpr auto _prisonerCashOnHand = 0x268; // UTextBlock*
		constexpr auto _prisonerCashInBank = 0x270; // UTextBlock*
		constexpr auto _traderFunds = 0x278; // UTextBlock*
		constexpr auto _saleTotal = 0x280; // UTextBlock*
		constexpr auto _warningMessage = 0x288; // UTextBlock*
		constexpr auto _btnCancel = 0x290; // UButton*
		constexpr auto _btnSell = 0x298; // UButton*
		constexpr auto _sellListEntryWidgetClass = 0x2a0; // UTraderSellListEntry*
	}

	namespace n_UGroomAssetImportData {
		constexpr auto ImportOptions = 0x28; // UGroomImportOptions*
	}

	namespace n_UPrisonerBodyCondition_BleedingInjury {
		constexpr auto _selfStabilizationDurationVsSeverity = 0xa8; // FRuntimeFloatCurve
		constexpr auto _stabilizationDurationVsBloodLossRatio = 0x130; // FRuntimeFloatCurve
		constexpr auto _stabilizationDurationBiasVsSkillLevel = 0x1b8; // float [0x5]
		constexpr auto _destabilizationActionDifficultyRatioVsSeverity = 0x1d0; // FRuntimeFloatCurve
		constexpr auto _destabilizationNotification = 0x258; // UNotificationDescription*
		constexpr auto _destabilizationNotificationCooldown = 0x260; // float
		constexpr auto _recoveryDurationVsBloodLossRatio = 0x268; // FRuntimeFloatCurve
		constexpr auto _baseTreatmentDuration = 0x2f0; // float
		constexpr auto _treatmentDurationLimits = 0x2f4; // FFloatRange
		constexpr auto _stopBleedingBaseExperienceGainVsSkillLevel = 0x304; // float [0x5]
		constexpr auto _bleedingSymptomClass = 0x318; // UPrisonerBodySymptom_Bleeding*
		constexpr auto _painSymptomClass = 0x320; // UPrisonerBodySymptom_Pain*
		constexpr auto _painIntensityVsSeverity = 0x328; // FRuntimeFloatCurve
		constexpr auto _limpingIntensityPerLegsDamageRatio = 0x3b0; // float
		constexpr auto _legsBleedingSeverityThresholdToLimp = 0x3b4; // float
		constexpr auto _bodyPart = 0x3b8; // EPrisonerBodyMuscleGroup
		constexpr auto _muscleGroup = 0x3b9; // EPrisonerBodyMuscleGroup
		constexpr auto _damage = 0x410; // float
		constexpr auto _damageToRecover = 0x414; // float
		constexpr auto _bloodLoss = 0x418; // float
		constexpr auto _bloodLossToRecover = 0x41c; // float
		constexpr auto _bloodLossRate = 0x420; // float
		constexpr auto _bloodLossRateUntreated = 0x424; // float
		constexpr auto _treatmentProgress = 0x428; // float
		constexpr auto _stabilizationDurationReductionByItems = 0x42c; // float
		constexpr auto _physicianSkillLevel = 0x430; // ESkillLevel
		constexpr auto _state = 0x431; // EPrisonerBodyConditionState
		constexpr auto _timerElapsedTime = 0x43c; // float
		constexpr auto _timerDuration = 0x440; // float
		constexpr auto _bleedingSymptomCause = 0x448; // UPrisonerBodySymptomCause_Bleeding*
		constexpr auto _painSymptomCause = 0x450; // UPrisonerBodySymptomCause_Pain*
	}

	namespace n_UMeleeDetectHitCollisionCapsule {
		constexpr auto DetectHitCollisionType = 0x468; // EDetectHitCollisionType
	}

	namespace n_UTabGroup {
		constexpr auto _tabPanel = 0x290; // UPanelWidget*
		constexpr auto _previous = 0x298; // EUINavigation
		constexpr auto _next = 0x299; // EUINavigation
		constexpr auto _in = 0x29a; // EUINavigation
		constexpr auto _canWrap = 0x29b; // bool
		constexpr auto _tabHorizontalAlignment = 0x29c; // EHorizontalAlignment
		constexpr auto _tabVerticalAlignment = 0x29d; // EVerticalAlignment
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_ULiveLinkComponent {
		constexpr auto OnLiveLinkUpdated = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UCraftingComponentWidget {
		constexpr auto ItemWidget = 0x278; // UItemClassWidget*
		constexpr auto _isTool = 0x280; // bool
		constexpr auto _itemClass = 0x288; // AItem*
		constexpr auto _isAvailable = 0x290; // bool
	}

	namespace n_AConZBaseElement {
		constexpr auto _weatherMaskComponentClass = 0x248; // USceneComponent*
		constexpr auto _elementClassMap = 0x258; // TMap<UStaticMesh*, UHierarchicalInstancedStaticMeshComponent*>
	}

	namespace n_UWeaponRecoilGroup {
		constexpr auto Up = 0x30; // float
		constexpr auto Down = 0x34; // float
		constexpr auto Left = 0x38; // float
		constexpr auto Right = 0x3c; // float
	}

	namespace n_ABird2AIController {
		constexpr auto FlyDurationMin = 0x328; // float
		constexpr auto FlyDurationMax = 0x32c; // float
		constexpr auto RemainOnGroundDurationMin = 0x330; // float
		constexpr auto RemainOnGroundDurationMax = 0x334; // float
		constexpr auto TurnSpeed = 0x338; // float
		constexpr auto FlightSegmentDistance = 0x33c; // float
		constexpr auto LandingDistance = 0x340; // float
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBuriableChestItemComponent {
		constexpr auto _decayInDaysWhenBuried = 0x180; // int64_t
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UBaseCreateFromSelectedHandleSourceProperties {
		constexpr auto WriteOutputTo = 0x68; // EBaseCreateFromSelectedTargetType
		constexpr auto OutputName = 0x70; // FString
		constexpr auto OutputAsset = 0x80; // FString
	}

	namespace n_UMetabolismMacronutrientReserve {
		constexpr auto Title = 0x260; // FText
		constexpr auto _title = 0x278; // UTextBlock*
		constexpr auto _value = 0x280; // UTextBlock*
		constexpr auto _spb_ReservesBar = 0x288; // UMetabolismSegmentedProgressBar*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UFortificationCraftableItem {
		constexpr auto FortificationClass = 0x1e0; // UObject*
		constexpr auto Icon = 0x1e8; // UTexture2D*
		constexpr auto Caption = 0x1f0; // FText
		constexpr auto Description = 0x208; // FText
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UBuriableItemComponent {
		constexpr auto _canEverShowMarker = 0xc0; // bool
		constexpr auto _canBeBuried = 0xd0; // bool
		constexpr auto _repBurialInformation = 0xd8; // FBurialInformation
		constexpr auto _buriedMesh = 0xf8; // UStaticMesh*
		constexpr auto _buriedMeshScale = 0x100; // FVector
		constexpr auto _buriedMeshRelativeLocation = 0x10c; // FVector
		constexpr auto _spriteMarkerBillboard = 0x128; // UMaterialBillboardComponent*
		constexpr auto _spriteMarkerData = 0x130; // FMaterialSpriteElement
		constexpr auto _spriteMarkerRelativeLocation = 0x158; // FVector
		constexpr auto _applyBuryMaterial = 0x164; // bool
		constexpr auto _startMeshFadeDistance = 0x168; // float
		constexpr auto _endMeshFadeDistance = 0x16c; // float
		constexpr auto _skillToIncrease = 0x170; // USkill*
		constexpr auto _skillIncreaseAmount = 0x178; // float
		constexpr auto _skillIncreaseModifier = 0x17c; // float
	}

	namespace n_UMissionItemWidget {
		constexpr auto _missionItemName = 0x290; // UTextBlock*
		constexpr auto _missionItemCategory = 0x298; // UTextBlock*
		constexpr auto _selectionBorder = 0x2a0; // UOverlay*
		constexpr auto _stateImageIcon = 0x2a8; // UImage*
		constexpr auto _expandButton = 0x2b0; // UButton*
		constexpr auto _objectiveContentOverlay = 0x2b8; // UOverlay*
		constexpr auto _objectiveContainer = 0x2c0; // UVerticalBox*
		constexpr auto _availableMissionIcon = 0x2c8; // UTexture2D*
		constexpr auto _startedMissionIcon = 0x2d0; // UTexture2D*
		constexpr auto _completedMissionIcon = 0x2d8; // UTexture2D*
		constexpr auto _failedMissionIcon = 0x2e0; // UTexture2D*
		constexpr auto _widgetNormalColor = 0x2e8; // FLinearColor
		constexpr auto _widgetCompletedColor = 0x2f8; // FLinearColor
		constexpr auto _activeTextFontSize = 0x308; // float
		constexpr auto _inactiveTextFontSize = 0x30c; // float
		constexpr auto _expandButtonOpenSound = 0x310; // UAkAudioEvent*
		constexpr auto _expandButtonClosedSound = 0x318; // UAkAudioEvent*
		constexpr auto _objectiveItemWidgets = 0x3e8; // TMap<FString, TWeakObjectPtr<UObjectiveItemWidget>>
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UPowerCableMeshSet {
		constexpr auto Meshes = 0x30; // TArray<FPowerCableMeshInfo>
	}

	namespace n_AVoteSystemManager {
		constexpr auto VoteTopics = 0x220; // TArray<UVoteTopic*>
		constexpr auto _activeTopicDesc = 0x230; // UUpdateableNotificationDescription*
		constexpr auto _activeTopic = 0x238; // UVoteTopic*
	}

	namespace n_UVICODynamicsSettings {
		constexpr auto ReserveParticleBudget = 0x28; // int32_t
		constexpr auto NumberOfThreadsToUse = 0x2c; // int32_t
		constexpr auto EnableSelfCollision = 0x30; // bool
		constexpr auto EnablePhysXSceneCollision = 0x31; // bool
		constexpr auto PerformExtraCollisionResolutionLoop = 0x32; // bool
		constexpr auto EnableExplicitRigidBodyCollision = 0x33; // bool
		constexpr auto SimulationFramerate = 0x34; // int32_t
		constexpr auto RunSimulationOnWorkerThread = 0x38; // bool
		constexpr auto WorkerThreadCoreAffinity = 0x3c; // int32_t
		constexpr auto SimulationIterations = 0x40; // int32_t
		constexpr auto ConstraintIterations = 0x44; // int32_t
		constexpr auto ConstrainSimulationTo2DPlane = 0x48; // bool
		constexpr auto PlaneOrigin = 0x4c; // FVector
		constexpr auto PlaneNormal = 0x58; // FVector
		constexpr auto bCachePerFrameResults = 0x64; // char : 1
		constexpr auto bCacheOnlyCollisionsWithStaticRigidBodies = 0x64; // char : 1
		constexpr auto bCacheNonHitsAlso = 0x64; // char : 1
		constexpr auto DrawCollisionDebug = 0x64; // char : 1
		constexpr auto bShowOnScreenStats = 0x64; // char : 1
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_UMeshAttributePaintTool {
		constexpr auto AttribProps = 0x200; // UMeshAttributePaintToolProperties*
	}

	namespace n_UAnimNotify_CharacterActionNotify {
		constexpr auto CharacterActionNotifyType = 0x38; // ECharacterActionNotifyType
	}

	namespace n_UInventoryPanelWidget2Test {
		constexpr auto _itemContainer = 0x278; // UScrollBox*
	}

	namespace n_UHandsCorrectionsData {
		constexpr auto Corrections = 0x30; // FHandsPoseCorrections [0x4]
		constexpr auto FirstPersonCorrections = 0x130; // FHandsPoseCorrections [0x4]
		constexpr auto OverrideFingersOnlyInProne = 0x230; // bool
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UUI_GameEventParticipantStatsWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto TextColor = 0x2a0; // FLinearColor
		constexpr auto _lastTeamIndex = 0x2b0; // int32_t
		constexpr auto TeamColours = 0x2b4; // FGameEventTeamColours
	}

	namespace n_UTraderSellListEntry {
		constexpr auto _entryIcon = 0x260; // UImage*
		constexpr auto _deselectionForeground = 0x268; // UImage*
		constexpr auto _entryCaption = 0x270; // UTextBlock*
		constexpr auto _buttonSwitcher = 0x278; // UWidgetSwitcher*
		constexpr auto _btnCancel = 0x280; // UButton*
		constexpr auto _btnConfirm = 0x288; // UButton*
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x448; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x450; // char : 1
		constexpr auto ScreenSize = 0x454; // float
		constexpr auto U = 0x458; // float
		constexpr auto UL = 0x45c; // float
		constexpr auto V = 0x460; // float
		constexpr auto VL = 0x464; // float
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UPrisonerBodySymptom_Fatigue {
		constexpr auto _maxSeverity = 0xb8; // float
		constexpr auto _maxSeverityMaxStaminaModifier = 0xbc; // float
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UInteractionContainerWidget_C {
		constexpr auto Border = 0x2c0; // UUI_Border_C*
		constexpr auto UI_Border = 0x2c8; // UUI_Border_C*
	}

	namespace n_UGroomAsset {
		constexpr auto HairGroupsInfo = 0x30; // TArray<FHairGroupInfoWithVisibility>
		constexpr auto HairGroupsRendering = 0x40; // TArray<FHairGroupsRendering>
		constexpr auto HairGroupsPhysics = 0x50; // TArray<FHairGroupsPhysics>
		constexpr auto HairGroupsInterpolation = 0x60; // TArray<FHairGroupsInterpolation>
		constexpr auto HairGroupsLOD = 0x70; // TArray<FHairGroupsLOD>
		constexpr auto HairGroupsCards = 0x80; // TArray<FHairGroupsCardsSourceDescription>
		constexpr auto HairGroupsMeshes = 0x90; // TArray<FHairGroupsMeshesSourceDescription>
		constexpr auto HairGroupsMaterials = 0xa0; // TArray<FHairGroupsMaterial>
		constexpr auto EnableGlobalInterpolation = 0xc0; // bool
		constexpr auto HairInterpolationType = 0xc1; // EGroomInterpolationType
		constexpr auto LODSelectionType = 0xc2; // EHairLODSelectionType
		constexpr auto MinLOD = 0xc4; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0xc8; // FPerPlatformBool
		constexpr auto EffectiveLODBias = 0xd0; // TArray<float>
		constexpr auto AssetUserData = 0xe0; // TArray<UAssetUserData*>
	}

	namespace n_APot1_C {
		constexpr auto BasicGameResourceContainer = 0x7e0; // UBasicGameResourceContainerComponent*
		constexpr auto RainCollector = 0x7e8; // URainCollectorComponent*
	}

	namespace n_ACan04_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_AGlobalAnimalSpawner {
		constexpr auto SpawnInfo = 0x220; // TMap<AAnimal2*, FGlobalAnimalSpawnInfo>
		constexpr auto SpawnAnythingChance = 0x270; // float
		constexpr auto AllowedSurfaces = 0x278; // TArray<EPhysicalSurface>
		constexpr auto MaxCarcassesAllowed = 0x288; // int32_t
		constexpr auto AnimalSpawners = 0x290; // TArray<AAnimalSpawner2*>
		constexpr auto Sprite = 0x2a0; // UBillboardComponent*
	}

	namespace n_ABP_Survival_Tutorial_TakeKnifeInHands_C {
		constexpr auto DefaultSceneRoot = 0x378; // USceneComponent*
	}

	namespace n_A1H_Metal_Pipe_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UHitReactMapping {
		constexpr auto HitReactTypes = 0x30; // FGameplayTagContainer
		constexpr auto RegainControlMultiplier = 0x50; // float
		constexpr auto HeadHit = 0x58; // FHitReactMagnitudeData
		constexpr auto BodyHit = 0x178; // FHitReactMagnitudeData
		constexpr auto LegsHit = 0x298; // FHitReactMagnitudeData
		constexpr auto LandingHit = 0x3b8; // FHitReactLandingData
	}

	namespace n_ALocationObjective {
		constexpr auto _locationTrigger = 0x320; // TSoftObjectPtr<ALocationTrigger>
		constexpr auto _locationMarkerClass = 0x348; // ALocationMarker*
		constexpr auto _shouldRemoveObjectiveItem = 0x350; // bool
		constexpr auto _objectiveItemToRemove = 0x358; // AItem*
		constexpr auto _locationMarker = 0x360; // AActor*
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UCSGMeshesToolProperties {
		constexpr auto Operation = 0x60; // ECSGOperation
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bAttemptFixHoles = 0x62; // bool
		constexpr auto bOnlyUseFirstMeshMaterials = 0x63; // bool
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UConZGameInstance {
		constexpr auto CommonMapNames = 0x1a8; // FCommonMapNames
		constexpr auto CharacterCreationMenuContext = 0x1c0; // FCharacterCreationMenuContext
		constexpr auto NetworkFailed = 0x1f0; // bool
		constexpr auto WasKickedFromGameSession = 0x1f1; // bool
		constexpr auto GameplayLogLogin = 0x208; // UGameplayLog*
		constexpr auto GameplayLogAdmin = 0x210; // UGameplayLog*
		constexpr auto GameplayLogKill = 0x218; // UGameplayLog*
		constexpr auto GameplayLogViolations = 0x220; // UGameplayLog*
		constexpr auto GameplayLogChat = 0x228; // UGameplayLog*
		constexpr auto GameplayLogMine = 0x230; // UGameplayLog*
		constexpr auto _databaseConnections = 0x258; // TMap<uint32_t, UDbConnection*>
		constexpr auto _dedicatedServerRequest = 0x2e0; // UDedicatedServerRequest*
		constexpr auto _userManager = 0x2e8; // UUserManager*
		constexpr auto _currentUser = 0x2f0; // UUser*
		constexpr auto _currentUserProfile = 0x2f8; // UUserProfile*
		constexpr auto _loadingScreenTexture = 0x300; // UTexture2D*
		constexpr auto _loadingScreen = 0x308; // ULoadingScreen*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UDamageData {
		constexpr auto DamageResponseTag = 0x30; // FGameplayTag
		constexpr auto GameEventTag = 0x38; // FGameplayTag
		constexpr auto IgnoreForStatsTag = 0x40; // FGameplayTag
		constexpr auto CauseHeadExplosionTag = 0x48; // FGameplayTag
		constexpr auto ApplyBleedingOnlyTag = 0x50; // FGameplayTag
		constexpr auto WeaponDescTable = 0x58; // UDataTable*
	}

	namespace n_AReportingManager {
		constexpr auto PrisonerWhistled = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UUI_BombDefusalWidget_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto ShowSuccess = 0x2b8; // UWidgetAnimation*
		constexpr auto BlurWaitingForPlayer = 0x2c0; // UWidgetAnimation*
		constexpr auto InfoFade = 0x2c8; // UWidgetAnimation*
		constexpr auto _tries = 0x2d0; // UTextBlock*
		constexpr auto BloomRetainerBox = 0x2d8; // URetainerBox*
		constexpr auto Image = 0x2e0; // UImage*
		constexpr auto Image_62 = 0x2e8; // UImage*
		constexpr auto Image_185 = 0x2f0; // UImage*
		constexpr auto Image_260 = 0x2f8; // UImage*
		constexpr auto InfinitySymbol = 0x300; // UImage*
		constexpr auto InfoPanelSecondary = 0x308; // UCanvasPanel*
		constexpr auto MaskRetainerBox = 0x310; // URetainerBox*
		constexpr auto RenderedMinigame = 0x318; // UImage*
		constexpr auto TextBackground = 0x320; // UImage*
		constexpr auto TextBlockDots = 0x328; // UTextBlock*
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_UUI_Metabolism_Nutrition_C {
		constexpr auto _energyTextBlock = 0x278; // UTextBlock*
		constexpr auto _waterTextBlock = 0x280; // UTextBlock*
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UVehicle2WAnimInstance {
		constexpr auto Speed = 0xa38; // float
		constexpr auto SpeedKph = 0xa3c; // float
		constexpr auto SteerRotation = 0xa40; // float
		constexpr auto SteerAmount = 0xa44; // float
		constexpr auto ThrottleAmount = 0xa48; // float
		constexpr auto BrakeAmount = 0xa4c; // float
		constexpr auto FrontWheelRotator = 0xa50; // FRotator
		constexpr auto RearWheelRotator = 0xa5c; // FRotator
		constexpr auto TransmissionRotator = 0xa68; // FRotator
		constexpr auto FrontSuspensionOffset = 0xa74; // float
		constexpr auto RearSuspensionRotation = 0xa78; // float
		constexpr auto MeshLocation = 0xa7c; // FVector
		constexpr auto IsMounteeDriver = 0xa88; // bool
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_ULuminApplicationLifecycleComponent {
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UPrisonerBodyEffect_ForeignSubstance {
		constexpr auto _substanceMaxAmount = 0x40; // float
		constexpr auto _substanceDiscardRate = 0x44; // float
		constexpr auto _substanceDiscardRateMultiplierPerOverflow = 0x48; // float
		constexpr auto _substanceAmount = 0x4c; // float
	}

	namespace n_UPrisonerUIDataController {
		constexpr auto BodySimulationUIController = 0x28; // UPrisonerBodySimulationUIController*
		constexpr auto SkillComponentUIController = 0x30; // UPrisonerSkillComponentUIController*
		constexpr auto TreatmentUIController = 0x38; // UPrisonerTreatmentUIController*
		constexpr auto _prisonerUIData = 0x58; // UPrisonerUIData*
		constexpr auto _tooltipCache = 0x60; // UPrisonerUITooltipCache*
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UTradeableItemTag {
		constexpr auto TradeableParams = 0x30; // FTradeableTagParams
	}

	namespace n_UUI_VehicleHUD_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Blink = 0x288; // UWidgetAnimation*
		constexpr auto BatteryBar = 0x290; // UProgressBar*
		constexpr auto EngineBrokenIndicator = 0x298; // UImage*
		constexpr auto FuelBar = 0x2a0; // UProgressBar*
		constexpr auto Gear = 0x2a8; // UTextBlock*
		constexpr auto HealthBar = 0x2b0; // UProgressBar*
		constexpr auto Image_1 = 0x2b8; // UImage*
		constexpr auto Image_2 = 0x2c0; // UImage*
		constexpr auto Image_3 = 0x2c8; // UImage*
		constexpr auto Image_4 = 0x2d0; // UImage*
		constexpr auto Image_5 = 0x2d8; // UImage*
		constexpr auto Image_6 = 0x2e0; // UImage*
		constexpr auto Overlay_1 = 0x2e8; // UOverlay*
		constexpr auto SizeBox_3 = 0x2f0; // USizeBox*
		constexpr auto SizeBox_4 = 0x2f8; // USizeBox*
		constexpr auto Speed100s = 0x300; // UTextBlock*
		constexpr auto Speed10s = 0x308; // UTextBlock*
		constexpr auto Speed1s = 0x310; // UTextBlock*
		constexpr auto TextBlock_2 = 0x318; // UTextBlock*
		constexpr auto TextBlock_3 = 0x320; // UTextBlock*
	}

	namespace n_URewardItemWidget {
		constexpr auto _bulletImage = 0x260; // UImage*
		constexpr auto _rewardItemText = 0x268; // UTextBlock*
	}

	namespace n_UZombieKamikazeComponent {
		constexpr auto _owningCharacter = 0xb0; // AConZCharacter*
		constexpr auto _beepingDistance = 0xb8; // float
		constexpr auto _explosionDistance = 0xbc; // float
		constexpr auto _autoExplosionTime = 0xc0; // float
		constexpr auto _postMortemExplosionTime = 0xc4; // float
		constexpr auto _criticalPostMortemExplosionTime = 0xc8; // float
		constexpr auto _baseDamage = 0xd0; // float
		constexpr auto _minimumDamage = 0xd4; // float
		constexpr auto _damageInnerRadius = 0xd8; // float
		constexpr auto _damageOuterRadius = 0xdc; // float
		constexpr auto _damageFalloff = 0xe0; // float
		constexpr auto _netCullDistanceSquaredMeters = 0xe4; // float
		constexpr auto _explosionAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto _beepingStartAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto _beepingEndAudioEvent = 0xf8; // UAkAudioEvent*
		constexpr auto _beepingAudioComponent = 0x100; // UAkComponent*
		constexpr auto _explosionPS = 0x108; // UParticleSystem*
		constexpr auto _explosionCameraShakeClass = 0x110; // UMatineeCameraShake*
		constexpr auto _sootDecal = 0x118; // UMaterialInterface*
		constexpr auto _minSootDecalSize = 0x120; // float
		constexpr auto _maxSootDecalSize = 0x124; // float
		constexpr auto _minSootScalarParamValue = 0x128; // float
		constexpr auto _maxSootScalarParamValue = 0x12c; // float
		constexpr auto _sootScalarParameterValueName = 0x130; // FName
		constexpr auto _decalsLifeSpan = 0x138; // float
		constexpr auto _decalFadeFactor = 0x13c; // float
		constexpr auto _maximumNumberOfChunksSpawned = 0x140; // int32_t
		constexpr auto _minVelocityMagnitude = 0x144; // float
		constexpr auto _maxVelocityMagnitude = 0x148; // float
		constexpr auto _velocityHalfAngle = 0x14c; // float
		constexpr auto _timeAfterChunksAreDeleted = 0x150; // float
		constexpr auto _bodyPartChunks = 0x158; // TArray<UStaticMesh*>
		constexpr auto _minigameClass = 0x168; // AMinigame*
		constexpr auto _minigameToolTag = 0x170; // UBaseItemTag*
		constexpr auto _dummyTrapItemClass = 0x178; // AZombieKamikazeDummyTrap*
		constexpr auto _spawnerPresets = 0x180; // TArray<UItemSpawnerPreset*>
		constexpr auto _isCriticalPostMortemPhase = 0x19a; // bool
		constexpr auto _isDisarmed = 0x19b; // bool
		constexpr auto _shouldExplodeOnDeath = 0x1b8; // bool
		constexpr auto _dummyTrapItemDestroyDelay = 0x1bc; // float
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UDoorUnlockItemComponentState {
		constexpr auto DoorUnlockData = 0x40; // UDoorUnlockData*
		constexpr auto ItemCreatedTimestamp = 0x48; // int64_t
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UAdminCommand_ListSpawnedVehicles {
		constexpr auto _vehicleSpawnGroupsByCategory = 0x80; // FGameplayTagContainer [0x8]
	}

	namespace n_ULuminARCandidateImage {
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_AGameEventLocationMarker {
		constexpr auto LocationName = 0x220; // FText
		constexpr auto LocationImage = 0x238; // UTexture2D*
		constexpr auto LocationImageGrayscale = 0x240; // UTexture2D*
		constexpr auto EligibleForRandomPick = 0x248; // bool
		constexpr auto GameEventClass = 0x250; // AGameEventBase*
		constexpr auto GameEventParameters = 0x258; // FGameEventParameters
		constexpr auto BorderClass = 0x3e0; // AGameEventBorder*
		constexpr auto AreaCenterOffset = 0x3e8; // FVector
		constexpr auto Radius = 0x3f4; // float
		constexpr auto SpawnAreas = 0x3f8; // TArray<FSpawnArea>
		constexpr auto Sphere = 0x408; // USphereComponent*
		constexpr auto Sprite = 0x410; // UBillboardComponent*
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26c0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26e0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26f0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26f8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2738; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2778; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2780; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2780; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2780; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2780; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2781; // char : 1
		constexpr auto ViewPitchMin = 0x2784; // float
		constexpr auto ViewPitchMax = 0x2788; // float
		constexpr auto ViewYawMin = 0x278c; // float
		constexpr auto ViewYawMax = 0x2790; // float
		constexpr auto ViewRollMin = 0x2794; // float
		constexpr auto ViewRollMax = 0x2798; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27a0; // float
	}

	namespace n_APlaceableActorBaseBuilding {
		constexpr auto _maxNumberOfTiles = 0x4c0; // int32_t
		constexpr auto _maxHeightDifferenceForTiling = 0x4c4; // float
		constexpr auto _maxTileHeightAdjustionUp = 0x4c8; // float
		constexpr auto _maxTileHeightAdjustionDown = 0x4cc; // float
		constexpr auto _tileSnappingAngle = 0x4d0; // float
		constexpr auto _sizeVariatedTilesMaxHeightDifference = 0x4d4; // float
		constexpr auto _maxGroundPointDistance = 0x4d8; // float
		constexpr auto _groundPointsTraceHeight = 0x4dc; // float
		constexpr auto _groundPointsTraceDepth = 0x4e0; // float
		constexpr auto _maxPlacementLengthForSizeVariatedTiles = 0x4e4; // float
		constexpr auto _tilesData = 0x518; // FTilesData
		constexpr auto _flagAreaMeshComponent = 0x530; // UStaticMeshComponent*
		constexpr auto _primaryMaterialFriendlyFlag = 0x538; // UMaterialInstanceDynamic*
		constexpr auto _replicatedFirstPointLocation = 0x540; // FVector
		constexpr auto _replicatedFirstPointRotation = 0x54c; // FRotator
		constexpr auto _placementSubState = 0x558; // EPlacementBaseBuildingState
		constexpr auto _stateFlags = 0x559; // EStateFlags
		constexpr auto _sizeVariationData = 0x590; // TArray<FSizeVariatedTilesData>
	}

	namespace n_UPrisonerActionTuneBow {
		constexpr auto _tuneBowAudioEvent = 0x108; // UAkAudioEvent*
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_AWaterBodyRiver {
		constexpr auto RiverGenerator = 0xdd0; // URiverGenerator*
		constexpr auto LakeTransitionMaterial = 0xdd8; // UMaterialInterface*
		constexpr auto LakeTransitionMID = 0xde0; // UMaterialInstanceDynamic*
		constexpr auto OceanTransitionMaterial = 0xde8; // UMaterialInterface*
		constexpr auto OceanTransitionMID = 0xdf0; // UMaterialInstanceDynamic*
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UInventoryContainerHandsHolsters {
		constexpr auto _handWidget = 0x38; // UInventoryContainerWidget2*
		constexpr auto _shoulderLeftWidget = 0x40; // UInventoryContainerWidget2*
		constexpr auto _shoulderRightWidget = 0x48; // UInventoryContainerWidget2*
		constexpr auto _data = 0x60; // FInventoryContainerHandsHolstersData
		constexpr auto _oldData = 0x80; // FInventoryContainerHandsHolstersData
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UPrisonerActionWashWithReplenishableResourceDescription {
		constexpr auto ProxyForReplenishableResource = 0x80; // UGameResourceContainerProxyForReplenishableResource*
	}

	namespace n_ACan03_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UUI_Metabolism_TreatmentItemsPanel_C {
		constexpr auto downArrow = 0x310; // UImage*
		constexpr auto line = 0x318; // UImage*
		constexpr auto UI_AdjustableHorizontalSeparator = 0x320; // UUI_AdjustableHorizontalSeparator_C*
		constexpr auto upArrow = 0x328; // UImage*
	}

	namespace n_UUI_SquadEmblem_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto BackgroundRetainerBox = 0x270; // URetainerBox*
		constexpr auto EmblemOverlay = 0x278; // UOverlay*
		constexpr auto Symbol = 0x280; // UImage*
		constexpr auto SymbolRetainerBox = 0x288; // URetainerBox*
		constexpr auto Horizontal = 0x290; // EHorizontalAlignment
		constexpr auto Vertical = 0x291; // EVerticalAlignment
		constexpr auto Data = 0x292; // FConZSquadEmblem
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UAnimal2SoundComponent {
		constexpr auto IdleAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto AngryAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto AttackAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto ScaredAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto AlertedAudioEvent = 0xf8; // UAkAudioEvent*
		constexpr auto TakeDamageAudioEvent = 0x100; // UAkAudioEvent*
		constexpr auto KillAudioEvent = 0x108; // UAkAudioEvent*
		constexpr auto AnimalFootstep = 0x110; // UAkAudioEvent*
		constexpr auto FootstepSoundOverlap = 0x118; // float
		constexpr auto FixedFootstepVolume = 0x11c; // float
		constexpr auto SpeedFootstepVolume = 0x120; // float
		constexpr auto MinSilenceTimeout = 0x124; // float
		constexpr auto MaxSilenceTimeout = 0x128; // float
	}

	namespace n_UVDColliderComponent {
		constexpr auto SimulationInstance = 0xb0; // UVDSimulation*
		constexpr auto AssociatedVDComponents = 0xb8; // TArray<FComponentReference>
		constexpr auto bAddAllComponents = 0xc8; // char : 1
		constexpr auto bIgnoreConvexShapes = 0xc8; // char : 1
		constexpr auto SpecificColliders = 0xd0; // TArray<FName>
	}

	namespace n_UMeshSculptToolBase {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto GizmoProperties = 0xc8; // UWorkPlaneProperties*
		constexpr auto BrushOpPropSets = 0x1b0; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto SecondaryBrushOpPropSets = 0x250; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto ViewProperties = 0x870; // UMeshEditingViewProperties*
		constexpr auto ActiveOverrideMaterial = 0x878; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicator = 0x880; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x888; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x890; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x898; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x8a0; // UTransformProxy*
	}

	namespace n_UViewAlignedSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UDropdownMenuWidget {
		constexpr auto OnUpdate = 0x260; // FDelegate
		constexpr auto _panelSlot = 0x278; // UNamedSlot*
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_UTeleportComponent {
		constexpr auto _repData = 0xb8; // FTeleportRepData
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_ARegularDoorStatic {
		constexpr auto _openRotation = 0x408; // FRotator
		constexpr auto _closedRotation = 0x414; // FRotator
	}

	namespace n_UUI_TooltipOverviewTextElement_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ExtendedRichTextBlock_1 = 0x288; // UExtendedRichTextBlock*
		constexpr auto TextFormat = 0x290; // FText
		constexpr auto TextStyle = 0x2a8; // FTextBlockStyle
		constexpr auto Color = 0x518; // FSlateColor
		constexpr auto MinimumIntegralDigits = 0x540; // int32_t
		constexpr auto MaximumIntegralDigits = 0x544; // int32_t
		constexpr auto MinimumFractionalDigits = 0x548; // int32_t
		constexpr auto MaximumFractionalDigits = 0x54c; // int32_t
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBuoyancyComponent {
		constexpr auto Pontoons = 0xb0; // TArray<FSphericalPontoon>
		constexpr auto OnEnteredWaterDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnExitedWaterDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto BuoyancyData = 0xe0; // FBuoyancyData
		constexpr auto CurrentWaterBodies = 0x130; // TArray<AWaterBody*>
		constexpr auto SimulatingComponent = 0x140; // UPrimitiveComponent*
	}

	namespace n_UTractor4WAnimInstance {
		constexpr auto FLWheelData = 0xa78; // FTractor4WAnimWheelData
		constexpr auto FRWheelData = 0xa80; // FTractor4WAnimWheelData
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_ULiveLinkBasicFrameInterpolationProcessor {
		constexpr auto bInterpolatePropertyValues = 0x28; // bool
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UExtractCollisionGeometryTool {
		constexpr auto VizSettings = 0x88; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectProps = 0x90; // UPhysicsObjectToolPropertySet*
		constexpr auto PreviewElements = 0x98; // UPreviewGeometry*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UPickupItemAssetData {
		constexpr auto Item = 0x30; // AItem*
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x460; // FVector
		constexpr auto LineThickness = 0x46c; // float
	}

	namespace n_UAlignObjectsTool {
		constexpr auto AlignProps = 0x98; // UAlignObjectsToolProperties*
	}

	namespace n_UAirplanePassengerMountSlot {
		constexpr auto _idleAnimation = 0x138; // UBlendSpace*
	}

	namespace n_UCharacterPainSoundsData {
		constexpr auto AudioEvent = 0x30; // UAkAudioEvent*
	}

	namespace n_UFishSpeciesData {
		constexpr auto FishSpecies = 0x30; // EFishSpecies
		constexpr auto SingleFishStaticMesh = 0x38; // UStaticMesh*
		constexpr auto SingleFishSkeletalMesh = 0x40; // USkeletalMesh*
		constexpr auto MaterialOverride = 0x48; // UMaterialInterface*
		constexpr auto CaughtFishAnimSequence = 0x50; // UAnimSequence*
		constexpr auto SchoolClass = 0x58; // AFishSchoolActor*
		constexpr auto caughtFishClass = 0x60; // AActor*
		constexpr auto Predator = 0x68; // bool
		constexpr auto MinDepth = 0x6c; // float
		constexpr auto MaxDepth = 0x70; // float
		constexpr auto MinMass = 0x74; // float
		constexpr auto MaxMass = 0x78; // float
		constexpr auto MaxLength = 0x7c; // float
		constexpr auto Size = 0x80; // EAquaticIndividualSize
		constexpr auto TimeOfDayPercentageCurve = 0x88; // UCurveFloat*
	}

	namespace n_UUpgradeItemTag {
		constexpr auto Price = 0x30; // int32_t
	}

	namespace n_UWorkPlaneProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_USpawnDecalWhenParticleCollides {
		constexpr auto Decals = 0x28; // TArray<FParticleCollisionDecalData>
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UTacticsSkill {
		constexpr auto _updateTime = 0xf8; // float
		constexpr auto _serverUpdateTime = 0xfc; // float
		constexpr auto _noSkillDetectionRange = 0x100; // float
		constexpr auto _basicDetectionRange = 0x104; // float
		constexpr auto _mediumDetectionRange = 0x108; // float
		constexpr auto _advancedDetectionRange = 0x10c; // float
		constexpr auto _aboveAdvancedDetectionRange = 0x110; // float
		constexpr auto _noSkillDetectionTime = 0x114; // float
		constexpr auto _basicDetectionTime = 0x118; // float
		constexpr auto _mediumDetectionTime = 0x11c; // float
		constexpr auto _advancedDetectionTime = 0x120; // float
		constexpr auto _aboveAdvancedDetectionTime = 0x124; // float
		constexpr auto _fadeOutTime = 0x128; // float
		constexpr auto _detectionTimeDistanceScale = 0x130; // UCurveFloat*
		constexpr auto _noSkillExperiencePerSecond = 0x138; // float
		constexpr auto _basicExperiencePerSecond = 0x13c; // float
		constexpr auto _mediumExperiencePerSecond = 0x140; // float
		constexpr auto _advancedExperiencePerSecond = 0x144; // float
		constexpr auto _tacticsDetectionCurveCoefficient1 = 0x148; // float
		constexpr auto _tacticsDetectionCurveCoefficient2 = 0x14c; // float
		constexpr auto _tacticsDetectionCurveCoefficient3 = 0x150; // float
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_ADistantLevel {
		constexpr auto _previewMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto _streamingLevelName = 0x228; // FString
		constexpr auto _meshStreamingBehavior = 0x238; // EDistantMeshStreamingBehavior
		constexpr auto _maxDrawDistance = 0x23c; // float
		constexpr auto _neverDistanceCull = 0x240; // bool
		constexpr auto _meshBounds = 0x244; // FBoxSphereBounds
		constexpr auto _collisionMesh = 0x260; // TSoftObjectPtr<UStaticMesh>
		constexpr auto _meshLODs = 0x288; // TArray<TSoftObjectPtr<UStaticMesh>>
	}

	namespace n_UUI_Objective_C {
		constexpr auto _icon = 0x2c0; // UImage*
	}

	namespace n_UUI_CraftingInfoSecondIteration_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x370; // UImage*
		constexpr auto CraftingTitle = 0x378; // UImage*
		constexpr auto DescriptionText = 0x380; // UTextBlock*
		constexpr auto ExpandedSpacingLine = 0x388; // UImage*
		constexpr auto Image_1 = 0x390; // UImage*
		constexpr auto TitleText = 0x398; // UTextBlock*
	}

	namespace n_UFillItemWithReplenishableResourceAssetData {
		constexpr auto InteractionData = 0x30; // FFillItemWithReplenishableResourceInteractionData
	}

	namespace n_UMetabolismTissueGroupCheckbox {
		constexpr auto Title = 0x260; // FText
		constexpr auto IsCheckdByDefault = 0x278; // bool
		constexpr auto _title = 0x280; // UTextBlock*
		constexpr auto _checkBox = 0x288; // UCheckBox*
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_WeaponBullet_ShotgunShell_Crafted_C {
		constexpr auto UberGraphFrame = 0x428; // FPointerToUberGraphFrame
	}

	namespace n_ULockpickableLocksVisualComponent {
		constexpr auto _lockStaticMeshComponentNames = 0x208; // TArray<FString>
		constexpr auto _lockMeshPerLockDifficulty = 0x218; // UStaticMesh* [0x4]
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UFishingRodState {
		constexpr auto FishingAttachments = 0xf8; // TArray<FDbIntegerId>
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UPrisonerMovementComponent {
		constexpr auto CapsuleHalfHeightWhenCrouched = 0xc18; // float
		constexpr auto CapsuleHalfHeightWhenProne = 0xc1c; // float
		constexpr auto CapsuleHalfHeightWhenSwimming = 0xc20; // float
		constexpr auto UseCustomRotationRate = 0xc24; // bool
		constexpr auto RequestedPathMovesForwardOnly = 0xc25; // bool
		constexpr auto RotationInterpolationSpeed = 0xc28; // float
		constexpr auto MaxRotationRateCurve = 0xc30; // UCurveFloat*
		constexpr auto RotationRateMultiplierWhenStanding = 0xc38; // float
		constexpr auto RotationRateMultiplierWhenCrouched = 0xc3c; // float
		constexpr auto RotationRateMultiplierWhenProne = 0xc40; // float
		constexpr auto RotationRateMultiplierWhenSwimming = 0xc44; // float
		constexpr auto RotationRateMultiplierWhenSwimmingAndDiving = 0xc48; // float
		constexpr auto GroundSlopeAngleForSpeedScalingSmoothingRate = 0xc4c; // float
		constexpr auto GroundSlopeAngleSmoothingRate = 0xc50; // float
		constexpr auto UseSmoothedGroundSlopeAngleForPaceChecks = 0xc54; // bool
		constexpr auto MinGroundSlopeAngleForJogging = 0xc58; // float
		constexpr auto MaxGroundSlopeAngleForJogging = 0xc5c; // float
		constexpr auto MinGroundSlopeAngleForRunning = 0xc60; // float
		constexpr auto MaxGroundSlopeAngleForRunning = 0xc64; // float
		constexpr auto MinSpeedModifierWhenMovingUphill = 0xc68; // float
		constexpr auto BaseJumpZVelocity = 0xc6c; // float
		constexpr auto MaxAbsoluteVelocityZAfterClimb = 0xca8; // float
		constexpr auto StaminaUnitsToDrainOnJump = 0xcac; // float
		constexpr auto JumpZVelocityMultiplierVsSpeed = 0xcb0; // UCurveFloat*
		constexpr auto JumpZVelocityMultiplierVsGroundSlopeAngle = 0xcb8; // UCurveFloat*
		constexpr auto ClimbAnimations = 0xcc0; // TArray<FPrisonerClimbAnimationInfo>
		constexpr auto ClimbingStaminaDrainModifier = 0xcd0; // float
		constexpr auto ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree = 0xcd4; // float
		constexpr auto ClimbingDebuggingEnabled = 0xcd8; // bool
		constexpr auto ClimbingDebuggingDrawTime = 0xcdc; // float
		constexpr auto LadderClimbingCapsuleBias = 0xce0; // FVector
		constexpr auto LadderClimbingMaxSpeed = 0xcec; // float
		constexpr auto CanClimbOffLadderUpwardsAutomatically = 0xcf0; // bool
		constexpr auto CanClimbOffLadderDownwardsAutomatically = 0xcf1; // bool
		constexpr auto MaxHorzDistanceToLadderForClimbing = 0xcf4; // float
		constexpr auto NumberOfLadderPeekSteps = 0xcf8; // int32_t
		constexpr auto PostLadderClimbingLaunchVelocity = 0xcfc; // FVector
		constexpr auto MaxHeightToJumpOffLadderSafely = 0xd08; // float
		constexpr auto MaxFallingSpeedAllowedForLadderClimbing = 0xd0c; // float
		constexpr auto MaxGroundSlopeAllowedForLadderClimbing = 0xd10; // float
		constexpr auto MaxHorzDistanceToWindowForClimbingVsSpeed = 0xd18; // UCurveFloat*
		constexpr auto WindowClimbingAnimations = 0xd20; // TArray<FWindowClimbingAnimationInfo>
		constexpr auto WaterImmersionToStartSwimming = 0xd30; // float
		constexpr auto WaterImmersionToStopSwimming = 0xd34; // float
		constexpr auto SwimmingToWalkingDepthTolerance = 0xd38; // float
		constexpr auto SwimmingToWalkingCapsuleCollisionTolerance = 0xd3c; // float
		constexpr auto DesiredWaterImmersion = 0xd40; // float
		constexpr auto DesiredWaterImmersionCorrectionAcceleration = 0xd44; // float
		constexpr auto DesiredWaterImmersionCorrectionAccelerationCurve = 0xd48; // UCurveFloat*
		constexpr auto WaterResurfaceAcceleration = 0xd50; // float
		constexpr auto OceanWavesAcceleration = 0xd54; // FVector2D
		constexpr auto WaterImmersionAfterWhichRunningIsDisabled = 0xd5c; // float
		constexpr auto ImmersionCorrectionDownMultiplier = 0xd60; // float
		constexpr auto RotationRateMultiplierWhenImmersedInWater = 0xd64; // float
		constexpr auto DiveInAccelerationScale = 0xd68; // float
		constexpr auto DiveInAccelerationTimeout = 0xd6c; // float
		constexpr auto DiveInCollisionCheckOffset = 0xd70; // float
		constexpr auto BuoyancyWhenDiving = 0xd74; // float
		constexpr auto BuoyancyWhenNotDiving = 0xd78; // float
		constexpr auto RotationRatePitchWhenDiving = 0xd7c; // float
		constexpr auto SurfaceTensionForce = 0xd80; // float
		constexpr auto MaxWindSpeedForAerialDrag = 0xd84; // float
		constexpr auto LongFallSpeedThreshold = 0xd88; // float
		constexpr auto BodyRotationCorrectionRate = 0xd8c; // float
		constexpr auto BodyRotationDrag = 0xd90; // FVector
		constexpr auto WaterForceWhenSwimmingParams = 0xd9c; // FWaterForceWhenSwimmingParams
		constexpr auto _repAccelerationNormal = 0xdb0; // FVector_NetQuantizeNormal
		constexpr auto _repBuoyancy = 0xf1c; // char
		constexpr auto _ladderInfoRepData = 0x10e0; // FLadderInfoRepData
		constexpr auto _fallingPoseBlendRepData = 0x1328; // uint16_t
		constexpr auto _fallingControlRepData = 0x132a; // char
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UItemTooltip {
		constexpr auto _mainPanel = 0x278; // UItemTooltipPanel*
		constexpr auto _overviewPanels = 0x280; // UItemTooltipTab*
		constexpr auto _additionalPanels = 0x288; // UItemTooltipTab*
		constexpr auto _pageIndicatorBar = 0x290; // UImage*
		constexpr auto _expandHintText = 0x298; // UTextBlock*
		constexpr auto _pageIndicatorGrid = 0x2a0; // UGridPanel*
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision {
		constexpr auto _symptomClass = 0x30; // UPrisonerBodySymptom_DoubleVision*
		constexpr auto _symptomCause = 0x38; // UPrisonerBodySymptomCause_DoubleVision*
		constexpr auto _intensityVsSeverity = 0x40; // FRuntimeFloatCurve
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UBakeTransformTool {
		constexpr auto BasicProperties = 0x90; // UBakeTransformToolProperties*
	}

	namespace n_UProceduralDiscToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto RadialSlices = 0x74; // int32_t
		constexpr auto RadialSubdivisions = 0x78; // int32_t
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4d8; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4e8; // int32_t
		constexpr auto bKeepInstanceBufferCPUAccess = 0x4ec; // bool
		constexpr auto PerInstanceSMCustomData = 0x4f0; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x500; // int32_t
		constexpr auto InstanceStartCullDistance = 0x504; // int32_t
		constexpr auto InstanceEndCullDistance = 0x508; // int32_t
		constexpr auto InstanceReorderTable = 0x510; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x568; // int32_t
		constexpr auto CachedMappings = 0x570; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UDisplaceMeshTextureMapProperties {
		constexpr auto DisplacementMap = 0x60; // UTexture2D*
	}

	namespace n_UVDWindDirectionalSourceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Strength = 0x1fc; // float
		constexpr auto Speed = 0x200; // float
		constexpr auto MinGustAmount = 0x204; // float
		constexpr auto MaxGustAmount = 0x208; // float
		constexpr auto MinGustDuration = 0x20c; // float
		constexpr auto MaxGustDuration = 0x210; // float
		constexpr auto MinGustTransitionSpeed = 0x214; // float
		constexpr auto MaxGustTransitionSpeed = 0x218; // float
		constexpr auto MinSecondsBetweenGusts = 0x21c; // float
		constexpr auto MaxSecondsBetweenGusts = 0x220; // float
	}

	namespace n_AConZSquad {
		constexpr auto squadId = 0x220; // FDbIntegerId
		constexpr auto SquadName = 0x228; // FString
		constexpr auto SquadMessage = 0x238; // FString
		constexpr auto SquadInformation = 0x248; // FString
		constexpr auto SquadEmblem = 0x258; // FConZSquadEmblem
		constexpr auto _pendingMembers = 0x260; // TArray<FConZSquadPendingMember>
		constexpr auto _members = 0x270; // TArray<FConZSquadMember>
		constexpr auto _oldMembers = 0x280; // TArray<FConZSquadMember>
		constexpr auto _repEmblem = 0x290; // uint64_t
		constexpr auto _maxAllowedSquadMembers = 0x298; // int32_t
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_AWorldEvent {
		constexpr auto Location = 0x220; // FVector
		constexpr auto Radius = 0x22c; // float
		constexpr auto IconTexture = 0x230; // UTexture*
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier {
		constexpr auto _modifierVsSeverity = 0x30; // FRuntimeFloatCurve
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UDrawPolyPathTool {
		constexpr auto TransformProps = 0xa0; // UDrawPolyPathProperties*
		constexpr auto ExtrudeProperties = 0xa8; // UDrawPolyPathExtrudeProperties*
		constexpr auto MaterialProperties = 0xb0; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x140; // UConstructionPlaneMechanic*
		constexpr auto EditPreview = 0x1e8; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x1f0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x1f8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x200; // UCollectSurfacePathMechanic*
	}

	namespace n_UInventoryItemDataIcon {
		constexpr auto Icon = 0x30; // UTexture2D*
	}

	namespace n_UAdminCommand_AdminLight {
		constexpr auto _adminLightComponent = 0x80; // UAdminLight*
		constexpr auto _maxIntensityMultiplier = 0x88; // float
	}

	namespace n_UPrisonerAppearanceDataAsset {
		constexpr auto FemaleCharacterData = 0x30; // TArray<FPrisonerAppearanceData>
		constexpr auto MaleCharacterData = 0x40; // TArray<FPrisonerAppearanceData>
		constexpr auto MeshSets = 0x50; // TMap<FGameplayTag, FPrisonerAppearanceMeshSet>
		constexpr auto MaterialSets = 0xa0; // TMap<FGameplayTag, FPrisonerAppearanceMaterialSet>
		constexpr auto FemaleTattoos = 0xf0; // TArray<FPrisonerTattooMaterialSet>
		constexpr auto MaleTattoos = 0x100; // TArray<FPrisonerTattooMaterialSet>
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UPrisonerBodyCondition_ColonFull {
		constexpr auto _colonFullnessToExist = 0xa8; // float
		constexpr auto _colonFullnessToForceDefecate = 0xac; // float
		constexpr auto _needToDefecateSymptomClass = 0xb0; // UPrisonerBodySymptom_NeedToDefecate*
		constexpr auto _needToDefecateSymptomCause = 0xb8; // UPrisonerBodySymptomCause*
		constexpr auto _colonFullnessAtWhichFartingStarts = 0xc8; // float
		constexpr auto _fartingInterval = 0xcc; // float
		constexpr auto _fartingSymptomClass = 0xd0; // UPrisonerBodySymptom_Farting*
		constexpr auto _fartingSymptomCause = 0xd8; // UPrisonerBodySymptomCause_Farting*
	}

	namespace n_UPrisonerBodySimulationSave {
		constexpr auto BaseStrength = 0x28; // double
		constexpr auto BaseConstitution = 0x30; // double
		constexpr auto BaseDexterity = 0x38; // double
		constexpr auto BaseIntelligence = 0x40; // double
		constexpr auto LifeTimeSinceInitialization = 0x48; // double
		constexpr auto LifeTimeSinceSpawn = 0x50; // double
		constexpr auto TimeOfDeath = 0x58; // int64_t
		constexpr auto TimeOfRevive = 0x60; // int64_t
		constexpr auto TimeOfComa = 0x68; // int64_t
		constexpr auto TimeOfComaWakeUp = 0x70; // int64_t
		constexpr auto Stamina = 0x78; // float
		constexpr auto HeartRate = 0x7c; // float
		constexpr auto BreathingRate = 0x80; // float
		constexpr auto OxygenSaturation = 0x84; // float
		constexpr auto BodyTemperature = 0x88; // float
		constexpr auto BodyEffects = 0x90; // TArray<FPrisonerBodyEffectSave>
		constexpr auto Metabolism = 0xa0; // TArray<char>
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x470; // UPaperSprite*
		constexpr auto MaterialOverride = 0x478; // UMaterialInterface*
		constexpr auto SpriteColor = 0x480; // FLinearColor
	}

	namespace n_UMetabolismBodyReservesPanel {
		constexpr auto _rpb_Muscle = 0x260; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Fat = 0x268; // UMetabolismRadialProgressBar*
	}

	namespace n_UPrisonerBodyCondition_NutrientDeficiency {
		constexpr auto _nutrient = 0xa8; // ENutrient
		constexpr auto _severityVsNutrientDeficiencyRatio = 0xb0; // FRuntimeFloatCurve
		constexpr auto _maxRatioOfAbsorbedNutrientCapacityToBeRecovered = 0x138; // float
		constexpr auto _nutrientDeficiency = 0x13c; // float
		constexpr auto _nutrientDeficiencyToRecover = 0x140; // float
	}

	namespace n_UPrisonerBodySimulationUIDataImpl {
		constexpr auto BodyEffectsUIData = 0xf0; // TArray<UPrisonerBodyEffectUIData*>
		constexpr auto MetabolismUIData = 0x100; // UPrisonerMetabolismUIData*
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UVehicleHitZoneManager {
		constexpr auto _vehicleHitMeshName = 0xd0; // FName
		constexpr auto _engineBlock = 0xd8; // TArray<UMaterialInterface*>
		constexpr auto _doors = 0xe8; // TArray<FVehicleHitZoneData>
		constexpr auto _doorWindows = 0xf8; // TArray<FVehicleHitZoneData>
		constexpr auto _wheelTires = 0x108; // TArray<FVehicleHitZoneData>
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_ABP_Survival_Blueprints_CompleteShelter_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UCharacterAction {
		constexpr auto PreActionsDescriptions = 0x58; // TArray<UCharacterActionDescription*>
		constexpr auto PostActionsDescriptions = 0x68; // TArray<UCharacterActionDescription*>
		constexpr auto ParentAction = 0x78; // UCharacterAction*
		constexpr auto _preActions = 0x80; // TArray<UCharacterAction*>
		constexpr auto _postActions = 0x90; // TArray<UCharacterAction*>
		constexpr auto _progressWidget = 0xa0; // UActionProgressWidget*
		constexpr auto _description = 0xb0; // UCharacterActionDescription*
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UMeshBoundaryToolBase {
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto LoopSelectClickBehavior = 0x140; // USingleClickInputBehavior*
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UPrisonerFishingComponent {
		constexpr auto _fishingState = 0xc0; // EFishingState
	}

	namespace n_UItemWeaponState {
		constexpr auto ZeroRange = 0xf8; // int32_t
		constexpr auto FiringMode = 0xfc; // EWeaponFiringMode
		constexpr auto malfunction = 0xfd; // EWeaponMalfunction
		constexpr auto LoadedAmmoData = 0x100; // TArray<FAmmunitionData>
		constexpr auto InternalMagazineAmmoData = 0x110; // TArray<FAmmunitionData>
		constexpr auto LoadedAmmunitionItemClass = 0x120; // UObject*
		constexpr auto WeaponAttachments = 0x128; // TArray<FDbIntegerId>
	}

	namespace n_ABP_Dropping_01_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto MyConstraintComp1 = 0x228; // UPhysicsConstraintComponent*
		constexpr auto MyConstraintComp = 0x230; // UPhysicsConstraintComponent*
		constexpr auto Shit_03 = 0x238; // UStaticMeshComponent*
		constexpr auto Shit_02 = 0x240; // UStaticMeshComponent*
		constexpr auto Shit_01 = 0x248; // UStaticMeshComponent*
		constexpr auto SharedRoot = 0x250; // USceneComponent*
		constexpr auto OffsetTimeline_Offset_509AAF33465941489534FEBEC2819093 = 0x258; // FVector
		constexpr auto OffsetTimeline__Direction_509AAF33465941489534FEBEC2819093 = 0x264; // ETimelineDirection
		constexpr auto OffsetTimeline = 0x268; // UTimelineComponent*
		constexpr auto Shit_01_Relative_Location = 0x270; // FVector
		constexpr auto HasSpawnedEffects = 0x27c; // bool
		constexpr auto DecalSize = 0x280; // FVector
		constexpr auto ParticlesToSpawn = 0x290; // UParticleSystem*
		constexpr auto DecalToSpawn = 0x298; // UMaterialInterface*
		constexpr auto SoundToSpawn = 0x2a0; // USoundBase*
		constexpr auto LifeTime = 0x2a8; // float
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UUI_CTFRoundInfoWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto RoundStatus = 0x280; // UTextBlock*
		constexpr auto TimeLeft = 0x288; // UTextBlock*
		constexpr auto TimeLeftBox = 0x290; // UHorizontalBox*
		constexpr auto TimeLeftLabel = 0x298; // UTextBlock*
		constexpr auto gameEvent = 0x2a0; // ABP_CTFGameEvent_C*
	}

	namespace n_UUI_StatisticsPanelWidget_C {
		constexpr auto _categorySwitcher = 0x270; // UWidgetSwitcher*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto MainCanvas = 0x280; // UCanvasPanel*
		constexpr auto LastMenuWidget = 0x288; // UUserWidget*
		constexpr auto _lastWidget = 0x290; // UWidget*
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UUI_AdjustableHorizontalSeparator_C {
		constexpr auto Content = 0x280; // UNamedSlot*
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UMirrorToolProperties {
		constexpr auto OperationMode = 0x60; // EMirrorOperationMode
		constexpr auto bCropAlongMirrorPlaneFirst = 0x61; // bool
		constexpr auto bWeldVerticesOnMirrorPlane = 0x62; // bool
		constexpr auto bAllowBowtieVertexCreation = 0x63; // bool
		constexpr auto bSnapToWorldGrid = 0x64; // bool
		constexpr auto CtrlClickBehavior = 0x65; // EMirrorCtrlClickBehavior
		constexpr auto bButtonsOnlyChangeOrientation = 0x66; // bool
		constexpr auto bShowPreview = 0x67; // bool
		constexpr auto SaveMode = 0x68; // EMirrorSaveMode
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_UAnimBP_M1887_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_4 = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3 = 0x380; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x3c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x410; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum = 0x458; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose = 0x508; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x660; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x688; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x6b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x6d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x758; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x7f8; // FAnimNode_SequencePlayer
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_AHUD_John {
		constexpr auto NormalFont = 0x318; // UFont*
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_AFlareItem {
		constexpr auto _repState = 0x7c1; // EFlareIgniteState
		constexpr auto _effectsSocket = 0x7c4; // FName
		constexpr auto _flareIgnitedAudioEvent = 0x7d8; // UAkAudioEvent*
		constexpr auto _flareExtinguishedAudioEvent = 0x7e0; // UAkAudioEvent*
		constexpr auto _particlesLoopStartBlend = 0x7e8; // float
		constexpr auto _particlesLoopDuration = 0x7ec; // float
		constexpr auto _flareIgnitedParticle = 0x7f0; // UParticleSystem*
		constexpr auto _flareLoopParticle = 0x7f8; // UParticleSystem*
		constexpr auto _flareExtinguishedParticle = 0x800; // UParticleSystem*
		constexpr auto _autoDestroyTimeOnUse = 0x808; // float
		constexpr auto _flareIgnitedParticlesDuration = 0x80c; // float
		constexpr auto _flareExtinguishedParticleDuration = 0x810; // float
		constexpr auto _noiseLoudnessWhileIgnited = 0x814; // float
		constexpr auto _noiseLoudnessUpdateFrequencyPerHour = 0x818; // float
		constexpr auto _burningNoiseTag = 0x81c; // FName
		constexpr auto _pointLightColor = 0x830; // FLinearColor
		constexpr auto _pointLightFunctionMaterial = 0x840; // UMaterialInterface*
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_ASentrySpawner2 {
		constexpr auto ActivationDistance = 0x220; // float
		constexpr auto SentryClass = 0x228; // ASentry2*
		constexpr auto PatrolPoints = 0x230; // TArray<FSentryPatrolPoint>
		constexpr auto Sprite = 0x240; // UBillboardComponent*
		constexpr auto ForceUndergroundSentry = 0x248; // bool
		constexpr auto _shouldSaveAndLoadSentry = 0x274; // bool
		constexpr auto _autoSaveTime = 0x278; // float
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UVertexBrushSculptProperties {
		constexpr auto PrimaryBrushType = 0x60; // EMeshVertexSculptBrushType
		constexpr auto PrimaryFalloffType = 0x61; // EMeshSculptFalloffType
		constexpr auto bFreezeTarget = 0x62; // bool
		constexpr auto bSmoothErases = 0x63; // bool
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x1f8; // char : 1
		constexpr auto AuxBus = 0x200; // UAkAuxBus*
		constexpr auto AuxBusName = 0x208; // FString
		constexpr auto SendLevel = 0x218; // float
		constexpr auto FadeRate = 0x21c; // float
		constexpr auto Priority = 0x220; // float
		constexpr auto NextLowerPriorityComponent = 0x228; // UAkLateReverbComponent*
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UUI_CC_SkillSlider_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto T_SkillName = 0x280; // UTextBlock*
		constexpr auto UI_CC_NonSelectableText = 0x288; // UUI_CC_NonSelectableText_C*
		constexpr auto UI_Trash_Slider_Widget = 0x290; // UUI_Trash_Slider_Widget_C*
		constexpr auto EnabledState = 0x298; // bool
		constexpr auto SkillTemplate = 0x2a0; // FSkillTemplate
		constexpr auto SliderChanged = 0x2d8; // FMulticastInlineDelegate
		constexpr auto SliderSelected = 0x2e8; // FMulticastInlineDelegate
		constexpr auto SliderDeselected = 0x2f8; // FMulticastInlineDelegate
	}

	namespace n_ABP_WeaponBullet_CarbonArrow_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_UNiagaraDataInterfaceHairStrands {
		constexpr auto DefaultSource = 0x38; // UGroomAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier {
		constexpr auto _modifierVsSeverity = 0x30; // FRuntimeFloatCurve
	}

	namespace n_UUI_MicInputIndicator_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x268; // UImage*
		constexpr auto Image_5 = 0x270; // UImage*
		constexpr auto Image_6 = 0x278; // UImage*
		constexpr auto Image_7 = 0x280; // UImage*
		constexpr auto Image_8 = 0x288; // UImage*
		constexpr auto Image_33 = 0x290; // UImage*
		constexpr auto Overlay_28 = 0x298; // UOverlay*
		constexpr auto Ring = 0x2a0; // UImage*
		constexpr auto RingsOverlay = 0x2a8; // UOverlay*
		constexpr auto _rings = 0x2b0; // TArray<UWidget*>
		constexpr auto _scales = 0x2c0; // TArray<float>
		constexpr auto VoiceChatComponent = 0x2d0; // UVoiceChatComponent*
		constexpr auto OwningActor = 0x2d8; // APawn*
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UPaddleItemTag {
		constexpr auto PaddlingLHandAnimation = 0x30; // UBlendSpace*
		constexpr auto PaddlingRHandAnimation = 0x38; // UBlendSpace*
		constexpr auto PaddlingLToRAnimation = 0x40; // UAnimSequence*
		constexpr auto PaddlingRToLAnimation = 0x48; // UAnimSequence*
	}

	namespace n_ADroneAIController {
		constexpr auto _followingDuration = 0x328; // float
		constexpr auto _followingTargetSpeedThreshold = 0x32c; // float
		constexpr auto _forcedSelfDestructTime = 0x330; // float
		constexpr auto _followingHeight = 0x334; // float
		constexpr auto _followingDistance = 0x338; // float
		constexpr auto _resumeFollowingExtraDistance = 0x33c; // float
		constexpr auto _resumeFollowingSeconds = 0x340; // float
		constexpr auto _resumeFollowingExtendedSeconds = 0x344; // float
		constexpr auto _followingCirclingMinTime = 0x34c; // float
		constexpr auto _followingCirclingMaxTime = 0x350; // float
		constexpr auto _followingCirclingNewDirectionMinTime = 0x354; // float
		constexpr auto _followingCirclingNewDirectionMaxTime = 0x358; // float
		constexpr auto _switchFollowingTargetsMaxDistance = 0x35c; // float
		constexpr auto _flybyHorizontalDistanceFromTarget = 0x390; // float
		constexpr auto _flybyVerticalDistanceFromTarget = 0x394; // float
		constexpr auto _flybyPathLength = 0x398; // float
		constexpr auto _minFlybyAngleDeg = 0x39c; // float
		constexpr auto _maxFlybyAngleDeg = 0x3a0; // float
		constexpr auto _crashingDistance = 0x3b8; // float
		constexpr auto _leavingForwardDistance = 0x3c0; // float
		constexpr auto _leavingVerticalDistance = 0x3c4; // float
		constexpr auto _minimumNavigationProximityPerState = 0x3c8; // float [0x6]
		constexpr auto _boundsInflation = 0x3e0; // float
		constexpr auto _bypassAccelerationScale = 0x3e4; // float
		constexpr auto _bypassTurningSpeed = 0x3e8; // float
		constexpr auto _findPathBypassMultiplier = 0x3ec; // float
		constexpr auto _maxTimePerDestinationMultiplier = 0x3f0; // float
		constexpr auto _droneTurningSpeed = 0x3f4; // float
		constexpr auto _maxPathSegment = 0x3f8; // float
		constexpr auto _flyUpwardsDistance = 0x3fc; // float
		constexpr auto _maximumAttemptedHeightGains = 0x400; // int32_t
		constexpr auto _randomMovementExtent = 0x408; // FVector
		constexpr auto _repeatChooseLocationTime = 0x414; // float
		constexpr auto _highAccelerationScaleMultiplier = 0x418; // float
		constexpr auto _distanceForHighAcceleration = 0x41c; // float
		constexpr auto _brakingDecelerationFlyingMovementRestore = 0x428; // float
	}

	namespace n_UGraph2DWidget {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto GraphLineThickness = 0x1c0; // float
		constexpr auto GraphLineSpriteSpacing = 0x1c4; // float
		constexpr auto GraphSize = 0x1c8; // FVector2D
		constexpr auto InitializeGraphWithDefaultValue = 0x1d0; // bool
		constexpr auto SampleMax = 0x1d4; // int32_t
		constexpr auto DefaultSampleValue = 0x1d8; // float
		constexpr auto UseLineAntialiasing = 0x1dc; // bool
	}

	namespace n_UDcxVehicleTire {
		constexpr auto LateralStiffnessX = 0x34; // float
		constexpr auto LateralStiffnessY = 0x38; // float
		constexpr auto LongitudinalStiffnessPerUnitGravity = 0x3c; // float
		constexpr auto CamberStiffnessPerUnitGravity = 0x40; // float
		constexpr auto FrictionVsSlipGraph = 0x48; // FRuntimeFloatCurve
		constexpr auto DrivableSurfaceToTireFrictionPairs = 0xd0; // TArray<FDcxDrivableSurfaceToTireFrictionPair>
	}

	namespace n_ABP_Survival_BagCrafting_CutUndershirt_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UServerBrowserWidget_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto Back = 0x370; // UUI_TrashMenuButton_C*
		constexpr auto Button_1 = 0x378; // UButton*
		constexpr auto CircularThrobber_53 = 0x380; // UCircularThrobber*
		constexpr auto DirectConnectPasswordTextBox = 0x388; // UEditableTextBox*
		constexpr auto DirectConnectTextBox = 0x390; // UEditableTextBox*
		constexpr auto FilterButton = 0x398; // UUI_TrashMenuButton_C*
		constexpr auto FilterCategorySizeBox = 0x3a0; // USizeBox*
		constexpr auto HostTextInput = 0x3a8; // UUI_TextInput_C*
		constexpr auto Image_1 = 0x3b0; // UImage*
		constexpr auto Image_5 = 0x3b8; // UImage*
		constexpr auto Image_8 = 0x3c0; // UImage*
		constexpr auto Image_12 = 0x3c8; // UImage*
		constexpr auto Image_351 = 0x3d0; // UImage*
		constexpr auto MainCanvas = 0x3d8; // UCanvasPanel*
		constexpr auto MainOverlay = 0x3e0; // UOverlay*
		constexpr auto MainVerticalBox = 0x3e8; // UVerticalBox*
		constexpr auto MaxPingTextInput = 0x3f0; // UUI_TextInput_C*
		constexpr auto MaxPlayersTextInput = 0x3f8; // UUI_TextInput_C*
		constexpr auto MinPlayersTextInput = 0x400; // UUI_TextInput_C*
		constexpr auto PasswordPopupCancelButton = 0x408; // UUI_TrashMenuButton_C*
		constexpr auto PasswordPopupOkButton = 0x410; // UUI_TrashMenuButton_C*
		constexpr auto PasswordPopupOverlay = 0x418; // UOverlay*
		constexpr auto PasswordPopupTextBox = 0x420; // UEditableTextBox*
		constexpr auto Refresh = 0x428; // UUI_TrashMenuButton_C*
		constexpr auto RentServerButton = 0x430; // UUI_TrashMenuButton_C*
		constexpr auto SearchBox = 0x438; // UEditableTextBox*
		constexpr auto ServerInfoWidget_63 = 0x440; // UServerInfoWidget_C*
		constexpr auto ServersButton = 0x448; // UUI_TrashMenuButton_C*
		constexpr auto ServersCategoryOverlay = 0x450; // UOverlay*
		constexpr auto ServersCategorySwitch = 0x458; // UUI_OptionsSlider_C*
		constexpr auto ShowFullServersSlider = 0x460; // UUI_OptionsSlider_C*
		constexpr auto ShowPasswordedOnlySlider = 0x468; // UUI_OptionsSlider_C*
		constexpr auto SortByFriends = 0x470; // UUI_SortByButton_C*
		constexpr auto SortByHost = 0x478; // UUI_SortByButton_C*
		constexpr auto SortByMode = 0x480; // UUI_SortByButton_C*
		constexpr auto SortByPassword = 0x488; // UUI_SortByButton_C*
		constexpr auto SortByPing = 0x490; // UUI_SortByButton_C*
		constexpr auto SortByPlayers = 0x498; // UUI_SortByButton_C*
		constexpr auto SortByTime = 0x4a0; // UUI_SortByButton_C*
		constexpr auto SortByVersion = 0x4a8; // UUI_SortByButton_C*
		constexpr auto UI_ScrollBar = 0x4b0; // UUI_ScrollBar_C*
		constexpr auto SelectedServer = 0x4b8; // UServerInfoWidget_C*
		constexpr auto SelectedServerIndex = 0x4c0; // int32_t
		constexpr auto HighlightedColor = 0x4c4; // FLinearColor
		constexpr auto NormalColor = 0x4d4; // FLinearColor
		constexpr auto _lastButton = 0x4e8; // UUI_TrashMenuButton_C*
		constexpr auto _lastWidget = 0x4f0; // UWidget*
		constexpr auto _continueOrNewCharacterDialog = 0x4f8; // UUI_ContinueOrNewCharacterDialog_C*
		constexpr auto _wasRequestingServerList = 0x500; // bool
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UVoxelProperties {
		constexpr auto VoxelCount = 0x60; // int32_t
		constexpr auto bAutoSimplify = 0x64; // bool
		constexpr auto bRemoveInternalSurfaces = 0x65; // bool
		constexpr auto SimplifyMaxErrorFactor = 0x68; // double
		constexpr auto CubeRootMinComponentVolume = 0x70; // double
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x470; // int32_t
		constexpr auto MapHeight = 0x474; // int32_t
		constexpr auto TileWidth = 0x478; // int32_t
		constexpr auto TileHeight = 0x47c; // int32_t
		constexpr auto DefaultLayerTileSet = 0x480; // UPaperTileSet*
		constexpr auto Material = 0x488; // UMaterialInterface*
		constexpr auto TileLayers = 0x490; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x4a0; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4b0; // int32_t
		constexpr auto bUseSingleLayer = 0x4b4; // bool
		constexpr auto TileMap = 0x4b8; // UPaperTileMap*
	}

	namespace n_URemoveCartridge {
		constexpr auto MontageEndSectionName = 0x50; // FName
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_UItemAnimInstance {
		constexpr auto _owningPrisonerStance = 0x2c0; // EPrisonerStance
		constexpr auto _isOwningPrisonerInFirstPersonView = 0x2c1; // bool
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3a8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b0; // bool
	}

	namespace n_AFishingRod {
		constexpr auto AttachmentAdded = 0x7c0; // FMulticastInlineDelegate
		constexpr auto AttachmentRemoved = 0x7d0; // FMulticastInlineDelegate
		constexpr auto SkeletalMesh = 0x7e0; // USkeletalMeshComponent*
		constexpr auto FishingAreaRadius = 0x7e8; // float
		constexpr auto _fishingRodOwner = 0x7f0; // APrisoner*
		constexpr auto _fishingAttachmentsReplicated = 0x810; // TArray<AFishingAttachment*>
		constexpr auto _reelingAmount = 0x820; // float
		constexpr auto _fishSpeciesData = 0x870; // UFishSpeciesData*
		constexpr auto _minigameCaughtItem = 0x8f0; // AItem*
		constexpr auto _minigameTrophyActor = 0x8f8; // AFishingTrophyActor*
		constexpr auto _isInTrophyState = 0x901; // bool
		constexpr auto _floaterSimulatedWeight = 0x908; // float
		constexpr auto _floaterSimulatedWeightDuringFastReeling = 0x90c; // float
		constexpr auto _shortCastingPower = 0x910; // float
		constexpr auto _minCastingPower = 0x914; // float
		constexpr auto _maxCastingPower = 0x918; // float
		constexpr auto _safeAreaRadius = 0x91c; // float
		constexpr auto _fishNotBitingAreaRadius = 0x920; // float
		constexpr auto _minigameSafeAreaRadius = 0x924; // float
		constexpr auto _baseReelingSpeed = 0x928; // float
		constexpr auto _fastReelingSpeed = 0x92c; // float
		constexpr auto _defaultWaterVelocityMultiplier = 0x930; // float
		constexpr auto _shortCastingAngle = 0x934; // float
		constexpr auto _longCastingAngle = 0x938; // float
		constexpr auto _fishingLineTensionToHookThreshold = 0x93c; // float
		constexpr auto _caughtFishOffsetTransform = 0x940; // FTransform
		constexpr auto _trophyActorClass = 0x970; // AFishingTrophyActor*
		constexpr auto _sendStateInterval = 0x978; // float
		constexpr auto _fishIdleTimeAtStart = 0x9f0; // float
		constexpr auto _fishStruggleOffsetAmplitude = 0x9f4; // float
		constexpr auto _fishStruggleOffsetPeriod = 0x9f8; // float
		constexpr auto _minDistanceToApplyStruggleOffset = 0x9fc; // float
		constexpr auto _fishToSurfaceRadius = 0xa00; // float
		constexpr auto _fishGenericSpeed = 0xa04; // float
		constexpr auto _minFishDirectionChangeTime = 0xa08; // float
		constexpr auto _maxFishDirectionChangeTime = 0xa0c; // float
		constexpr auto _fishDrainStaminaModifier = 0xa10; // float
		constexpr auto _fishRecoveryStaminaModifier = 0xa14; // float
		constexpr auto _lineBreakConstant = 0xa18; // float
		constexpr auto _reelingTensionModifier = 0xa1c; // float
		constexpr auto _fishRecoveryRadiusBuffer = 0xa20; // float
		constexpr auto _fishUnderWaterSurfaceOffset = 0xa24; // float
		constexpr auto _fishStrengthModifier = 0xa28; // float
		constexpr auto _fishingBoundsAngle = 0xa2c; // float
		constexpr auto _fishingBoundsRadius = 0xa30; // float
		constexpr auto _fishingLineInTensionDamageAmount = 0xa34; // float
		constexpr auto _fishingLineOnBreakDamageAmount = 0xa38; // float
		constexpr auto _fishStuckTimeThreshold = 0xa3c; // float
		constexpr auto _fishNewDirectionAngleStep = 0xa40; // float
		constexpr auto _useRodAsRootLocation = 0xa44; // bool
		constexpr auto _castingObjectDropToWaterAudioEvent = 0xa48; // UAkAudioEvent*
		constexpr auto _fishHookedAudioEvent = 0xa50; // UAkAudioEvent*
		constexpr auto _wireBreakAudioEvent = 0xa58; // UAkAudioEvent*
		constexpr auto _wireTensionStartAudioEvent = 0xa60; // UAkAudioEvent*
		constexpr auto _wireTensionEndAudioEvent = 0xa68; // UAkAudioEvent*
		constexpr auto _castPower = 0xa70; // float
		constexpr auto _shouldShortCast = 0xa74; // bool
		constexpr auto _minFishRecoveryTime = 0xa84; // float
		constexpr auto _maxFishRecoveryTime = 0xa88; // float
		constexpr auto _minFishStaminaDrainTime = 0xa8c; // float
		constexpr auto _maxFishStaminaDrainTime = 0xa90; // float
		constexpr auto _randomFishDrainAndRecovery = 0xa94; // bool
		constexpr auto _isFastReeling = 0xa9c; // bool
	}

	namespace n_UUI_GameEventLoadoutMenuWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x288; // UImage*
		constexpr auto OutfitSelection = 0x290; // UUI_ItemSelectionSlotWidget_C*
		constexpr auto PrimarySelection = 0x298; // UUI_ItemSelectionSlotWidget_C*
		constexpr auto SecondarySelection = 0x2a0; // UUI_ItemSelectionSlotWidget_C*
		constexpr auto SupportSelection = 0x2a8; // UUI_ItemSelectionSlotWidget_C*
		constexpr auto TertiarySelection = 0x2b0; // UUI_ItemSelectionSlotWidget_C*
		constexpr auto MandatoryGear = 0x2b8; // TArray<UItemSelection*>
	}

	namespace n_UBaseBuildingComponent {
		constexpr auto _name = 0x4d8; // FString
		constexpr auto _baseElementType = 0x4e8; // EBaseElementType
		constexpr auto _isClimbable = 0x4ea; // bool
		constexpr auto _isBlockingItemPlacement = 0x4eb; // bool
		constexpr auto _staticMeshVariations = 0x4f0; // TArray<UStaticMesh*>
		constexpr auto _choppingRecipeAsset = 0x500; // UChoppingRecipeDataAsset*
		constexpr auto _healthPoints = 0x508; // float
		constexpr auto _canBeDamaged = 0x50c; // bool
		constexpr auto _hoursToDecay = 0x510; // float
		constexpr auto _isUsedForRespawn = 0x514; // bool
		constexpr auto _explosionResistance = 0x518; // float
		constexpr auto _collisionEnergyResistance = 0x51c; // float
		constexpr auto _collisionDamageModifierFromEnergy = 0x520; // UCurveFloat*
		constexpr auto _weatherMaskMesh = 0x528; // UStaticMesh*
		constexpr auto _maxInstancesPerFlagArea = 0x530; // int32_t
		constexpr auto _upgradeRecipe = 0x538; // UPlaceableCraftableItem*
		constexpr auto _cascadeDestroySnappedElementsOnUpgrade = 0x540; // bool
		constexpr auto _isTileable = 0x541; // bool
		constexpr auto _mustBePlacedOnFoundation = 0x542; // bool
		constexpr auto _canEverBePlacedOnFoundation = 0x543; // bool
		constexpr auto _canBePlacedOnOtherBaseElements = 0x544; // bool
		constexpr auto _canBePlacedWithoutSnapping = 0x545; // bool
		constexpr auto _shouldIgnoreSelfWhilePlacing = 0x546; // bool
		constexpr auto _canBeGroundedOnOtherElements = 0x547; // bool
		constexpr auto _maxHeightLevel = 0x548; // char
		constexpr auto _maxHeightDifference = 0x54c; // float
		constexpr auto _addRandomRotation = 0x550; // bool
		constexpr auto _mustGroundAllPoints = 0x551; // bool
		constexpr auto _traceComplexWhilePlacing = 0x552; // bool
		constexpr auto _mustBePlacedUpright = 0x553; // bool
		constexpr auto _placementHeightType = 0x554; // EConZPlacementHeightType
		constexpr auto _useSimpleCollisionForOverlaps = 0x555; // bool
		constexpr auto _maxRotationWhilePlacing = 0x558; // FRotator
		constexpr auto _elementSnapMarkers = 0x568; // TArray<FElementSnapMarker>
		constexpr auto _useEncapsulationTestWhenSnapping = 0x578; // bool
		constexpr auto _sizeVariations = 0x580; // TArray<FBaseBuildingSizeVariation>
		constexpr auto _sizeVariationsSpacing = 0x594; // float
		constexpr auto _repairTime = 0x598; // float
		constexpr auto _repairableParams = 0x5a0; // FRepairableParams
		constexpr auto _experienceAwardForBuilding = 0x5d8; // float
		constexpr auto _destructionParticles = 0x5e0; // TArray<UParticleSystem*>
		constexpr auto _destructionParticlesSpawnTransforms = 0x5f0; // TArray<FTransform>
		constexpr auto _destructionSound = 0x600; // UAkAudioEvent*
		constexpr auto _isDoor = 0x608; // bool
		constexpr auto _doorClass = 0x610; // ADoor*
		constexpr auto _hasLadder = 0x618; // bool
		constexpr auto _ladderMarkers = 0x620; // TArray<FLadderMarker>
		constexpr auto _damageZones = 0x630; // TArray<FBaseElementDamageZone>
		constexpr auto _shouldDestroyElementsOnTopWhenDestroyed = 0x640; // bool
		constexpr auto _destructionTime = 0x644; // float
		constexpr auto _shouldRemoveIntersectingElementsOnDestroy = 0x648; // bool
		constexpr auto _destructionZones = 0x650; // TArray<FBaseElementDestructionZone>
		constexpr auto _useAsReplenishableResource = 0x660; // bool
		constexpr auto _replenishableResourceDescription = 0x668; // FReplenishableResourceDescription
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMessageBox {
		constexpr auto _message = 0x278; // UTextBlock*
		constexpr auto _buttonRow = 0x280; // UHorizontalBox*
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UCircularMenuSegmentWidget {
		constexpr auto _nonSelectableAlpha = 0x278; // float
		constexpr auto _highlightedColour = 0x27c; // FLinearColor
		constexpr auto _unHighlightedColour = 0x28c; // FLinearColor
		constexpr auto _info = 0x2a0; // UCircularMenuSegmentInfo*
		constexpr auto _parentSegmentWidget = 0x2a8; // UCircularMenuSegmentWidget*
		constexpr auto _segment = 0x2b0; // UImage*
		constexpr auto _iconsOverlay = 0x2b8; // UOverlay*
		constexpr auto _iconSizeBox = 0x2c0; // USizeBox*
		constexpr auto _icon = 0x2c8; // UImage*
		constexpr auto _overlayIconSizeBox = 0x2d0; // USizeBox*
		constexpr auto _overlayIcon = 0x2d8; // UImage*
	}

	namespace n_UArcherySkill {
		constexpr auto _drawWeightNoSkillValue = 0xe8; // float
		constexpr auto _drawWeightBasicSkillValue = 0xec; // float
		constexpr auto _drawWeightMediumSkillValue = 0xf0; // float
		constexpr auto _drawWeightAdvancedSkillValue = 0xf4; // float
		constexpr auto _drawWeightAboveAvancedSkillValue = 0xf8; // float
		constexpr auto _holdTimeInFullDrawNoSkillValue = 0xfc; // float
		constexpr auto _holdTimeInFullDrawBasicSkillValue = 0x100; // float
		constexpr auto _holdTimeInFullDrawMediumSkillValue = 0x104; // float
		constexpr auto _holdTimeInFullDrawAdvancedSkillValue = 0x108; // float
		constexpr auto _holdTimeInFullDrawAboveAvancedSkillValue = 0x10c; // float
		constexpr auto _armsShakeMultiplierNoSkillValue = 0x110; // float
		constexpr auto _armsShakeMultiplierBasicSkillValue = 0x114; // float
		constexpr auto _armsShakeMultiplierMediumSkillValue = 0x118; // float
		constexpr auto _armsShakeMultiplierAdvancedSkillValue = 0x11c; // float
		constexpr auto _armsShakeMultiplierAboveAvancedSkillValue = 0x120; // float
		constexpr auto _tuneBowDurationNoSkillValue = 0x124; // float
		constexpr auto _tuneBowDurationBasicSkillValue = 0x128; // float
		constexpr auto _tuneBowDurationMediumSkillValue = 0x12c; // float
		constexpr auto _tuneBowDurationAdvancedSkillValue = 0x130; // float
		constexpr auto _tuneBowDurationAboveAvancedSkillValue = 0x134; // float
		constexpr auto _drawCenterDotExtraTimeLimitNoSkillValue = 0x138; // float
		constexpr auto _drawCenterDotExtraTimeLimitBasicSkillValue = 0x13c; // float
		constexpr auto _drawCenterDotExtraTimeLimitMediumSkillValue = 0x140; // float
		constexpr auto _drawCenterDotExtraTimeLimitAdvancedSkillValue = 0x144; // float
		constexpr auto _drawCenterDotExtraTimeLimitAboveAvancedSkillValue = 0x148; // float
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x850; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9fc; // float
		constexpr auto MulticastRecordOptions = 0xa20; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa30; // bool
		constexpr auto SpectatorControllers = 0xa38; // TArray<APlayerController*>
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UExplosiveProtectionItemComponent {
		constexpr auto _minigameClass = 0xc0; // AMinigame*
		constexpr auto _minigameToolTag = 0xc8; // UBaseItemTag*
		constexpr auto _lockData = 0xd0; // FLockData
		constexpr auto _explosionParticles = 0x158; // UParticleSystem*
		constexpr auto _explosionParticlesLocation = 0x160; // FVector
		constexpr auto _explosionAudioEvent = 0x170; // UAkAudioEvent*
		constexpr auto _explosionBaseDamage = 0x178; // float
		constexpr auto _explosionMinimalDamage = 0x17c; // float
		constexpr auto _explosionDamagePositionOffset = 0x180; // float
		constexpr auto _explosionDamageFalloff = 0x184; // float
		constexpr auto _explosionInnerRadius = 0x188; // float
		constexpr auto _explosionOuterRadius = 0x18c; // float
		constexpr auto _hearingDamageRadius = 0x190; // float
		constexpr auto _explosionCameraShakeClass = 0x198; // UMatineeCameraShake*
		constexpr auto _isArmed = 0x1a0; // bool
	}

	namespace n_UItemActionSequence {
		constexpr auto _canBeCanceled = 0x50; // bool
		constexpr auto _animations = 0x58; // FCharacterAndItemAnimation
	}

	namespace n_UUI_ItemMainTooltipPanel_C {
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto Caption = 0x2d0; // UUI_TooltipOverviewTextElement_C*
		constexpr auto DebugOverlay = 0x2d8; // UOverlay*
		constexpr auto DebugText = 0x2e0; // UUI_TooltipOverviewTextElement_C*
		constexpr auto Description = 0x2e8; // UUI_TooltipOverviewTextElement_C*
		constexpr auto Image = 0x2f0; // UImage*
		constexpr auto Image_2 = 0x2f8; // UImage*
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_UDcxVehicleDriveRawInput {
		constexpr auto ClutchIndex = 0x40; // int32_t
		constexpr auto bGearUp = 0x44; // bool
		constexpr auto bGearDown = 0x45; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UMovieSceneTakeSection {
		constexpr auto HoursCurve = 0xe8; // FMovieSceneIntegerChannel
		constexpr auto MinutesCurve = 0x178; // FMovieSceneIntegerChannel
		constexpr auto SecondsCurve = 0x208; // FMovieSceneIntegerChannel
		constexpr auto FramesCurve = 0x298; // FMovieSceneIntegerChannel
		constexpr auto SubFramesCurve = 0x328; // FMovieSceneFloatChannel
		constexpr auto Slate = 0x3c8; // FMovieSceneStringChannel
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSliderStyle
		constexpr auto Orientation = 0x460; // EOrientation
		constexpr auto SliderBarColor = 0x464; // FLinearColor
		constexpr auto SliderHandleColor = 0x474; // FLinearColor
		constexpr auto IndentHandle = 0x484; // bool
		constexpr auto Locked = 0x485; // bool
		constexpr auto StepSize = 0x488; // float
		constexpr auto IsFocusable = 0x48c; // bool
		constexpr auto ThePropertyToControl = 0x490; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x500; // FMulticastInlineDelegate
	}

	namespace n_ABasicLadder {
		constexpr auto _mesh = 0x220; // UStaticMeshComponent*
		constexpr auto _ladderMarkers = 0x228; // TArray<FLadderMarker>
	}

	namespace n_UPrisonerResponseIdle {
		constexpr auto Montages = 0x28; // TArray<UAnimMontage*>
		constexpr auto PreMontageDelay = 0x38; // float
		constexpr auto PostMontageDelay = 0x3c; // float
		constexpr auto CooldownDuration = 0x40; // float
		constexpr auto CanBeUsedWhenItemIsInHands = 0x44; // bool
		constexpr auto CombatibleAnimationsSets = 0x48; // TSet<EPrisonerAnimationSet>
	}

	namespace n_UPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UUI_WeaponAmmoDisplay_C {
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_641 = 0x290; // UImage*
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UFishingContainerWidget {
		constexpr auto _castingBarWidget = 0x260; // UFishingBarWidget*
		constexpr auto _fishingBarWidget = 0x268; // UFishingBarWidget*
		constexpr auto _tensionBarInterpSpeed = 0x270; // float
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UMalfunctionsContainerWidget {
		constexpr auto HotkeyTextColorUnhovered = 0x278; // FSlateColor
		constexpr auto HotkeyTextColorHovered = 0x2a0; // FSlateColor
		constexpr auto _malfunctionsCircularMenu = 0x2c8; // UCircularMenuWidget*
		constexpr auto _hotkeyDisplaySwitcher = 0x2d0; // UWidgetSwitcher*
		constexpr auto _twoOp_2 = 0x2d8; // UTextBlock*
		constexpr auto _twoOp_3 = 0x2e0; // UTextBlock*
		constexpr auto _threeOp_2 = 0x2e8; // UTextBlock*
		constexpr auto _threeOp_3 = 0x2f0; // UTextBlock*
		constexpr auto _threeOp_4 = 0x2f8; // UTextBlock*
		constexpr auto _fourOp_2 = 0x300; // UTextBlock*
		constexpr auto _fourOp_3 = 0x308; // UTextBlock*
		constexpr auto _fourOp_4 = 0x310; // UTextBlock*
		constexpr auto _fourOp_5 = 0x318; // UTextBlock*
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UBombDefusalWidget {
		constexpr auto _remainingTimeMinutes1 = 0x290; // UTextBlock*
		constexpr auto _remainingTimeMinutes2 = 0x298; // UTextBlock*
		constexpr auto _remainingTimeSeconds1 = 0x2a0; // UTextBlock*
		constexpr auto _remainingTimeSeconds2 = 0x2a8; // UTextBlock*
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UMetabolism_BCU_ICU_StatsPanel {
		constexpr auto Stats_EKG = 0x260; // UMetabolism_ICU_EKG_Stats*
		constexpr auto Stats_ST = 0x268; // UMetabolism_ICU_ST_Stats*
		constexpr auto Stats_SPO2 = 0x270; // UMetabolism_ICU_SPO2_Stats*
		constexpr auto Stats_RR = 0x278; // UMetabolism_ICU_RR_Stats*
		constexpr auto Stats_TEMP = 0x280; // UMetabolism_ICU_TEMP_Stats*
	}

	namespace n_ATimeControllableSpotLight {
		constexpr auto _shouldExistOnDedicatedServer = 0x230; // bool
		constexpr auto _intensityVsTimeOfDayCurve = 0x238; // UCurveFloat*
		constexpr auto _pointLightComponent = 0x240; // USpotLightComponent*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_USmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UPrisonerBodyCondition_Hyperthermia {
		constexpr auto _maxSeverity = 0xa8; // float
		constexpr auto _bodyTemperatureToDie = 0xac; // float
		constexpr auto _bodyTemperatureToExist = 0xb0; // float
		constexpr auto _bodyTemperatureToRecover = 0xb4; // float
		constexpr auto _bodyTemperatureSampleInterval = 0xbc; // float
		constexpr auto _bodyTemperatureAtUntreatedStart = 0xc4; // float
		constexpr auto _bodyTemperatureAtStabilizationStart = 0xc8; // float
		constexpr auto _bodyTemperatureAtRecoveryStart = 0xcc; // float
		constexpr auto _state = 0xd0; // EPrisonerBodyConditionState
		constexpr auto _severityRatio = 0xd8; // float
		constexpr auto _severityRatioAtUntreatedStart = 0xdc; // float
		constexpr auto _severityRatioAtRecoveryStart = 0xe0; // float
		constexpr auto _severityRatioInterpSpeed = 0xe8; // float
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USculptBrushProperties {
		constexpr auto Depth = 0x78; // float
		constexpr auto bHitBackFaces = 0x7c; // bool
		constexpr auto Lazyness = 0x80; // float
		constexpr auto bShowPerBrushProps = 0x84; // bool
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UMovieSceneLiveLinkTrack {
		constexpr auto TrackRole = 0xb0; // ULiveLinkRole*
	}

	namespace n_UDefaultDamageCustomization {
		constexpr auto PrisonerInjuryTypeLikelihoodsPerBodyPart = 0x28; // TArray<FPrisonerInjuryTypeLikelihoods>
		constexpr auto PrisonerBleedingSeverityEnergyThreshold = 0x38; // TArray<float>
		constexpr auto PrisonerDamageMultiplierPerBodyPart = 0x48; // float [0xc]
		constexpr auto StaminaDrainPerHundredJoules = 0x78; // float
		constexpr auto HeadshotInstantKillEnergyThreshold = 0x7c; // float
	}

	namespace n_UPrisonerBodySymptom_Dizziness {
		constexpr auto _blackoutIntensityVsElapsedTime = 0xe8; // FRuntimeFloatCurve
		constexpr auto _unconsciousnessDelay = 0x170; // float
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UPauseMenu {
		constexpr auto _resume = 0x308; // UTrashMenuButton*
		constexpr auto _clientSettings = 0x310; // UTrashMenuButton*
		constexpr auto _adminSettings = 0x318; // UTrashMenuButton*
		constexpr auto _addToFavourites = 0x320; // UTrashMenuButton*
		constexpr auto _commitSuicide = 0x328; // UTrashMenuButton*
		constexpr auto _statistics = 0x330; // UTrashMenuButton*
		constexpr auto _mainMenu = 0x338; // UTrashMenuButton*
		constexpr auto _quitGame = 0x340; // UTrashMenuButton*
		constexpr auto _messageBoxPanel = 0x348; // UVerticalBox*
		constexpr auto _mainPanel = 0x350; // UPanelWidget*
		constexpr auto _pauseMenuUIControllerClass = 0x358; // UPauseMenuUIController*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_USpaceCurveDeformationMechanicPropertySet {
		constexpr auto TransformMode = 0x60; // ESpaceCurveControlPointTransformMode
		constexpr auto TransformOrigin = 0x64; // ESpaceCurveControlPointOriginMode
		constexpr auto Softness = 0x68; // float
		constexpr auto SoftFalloff = 0x6c; // ESpaceCurveControlPointFalloffType
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UConZSettingsMenu {
		constexpr auto _coreMenuTabButtons = 0x260; // UTabGroup*
		constexpr auto _coreMenu = 0x268; // UWidgetSwitcher*
		constexpr auto _controlButtonsPanel = 0x270; // UPanelWidget*
		constexpr auto _tabButtonClass = 0x278; // UUserWidget*
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UMetabolismTreatmentPanel {
		constexpr auto _untreatedColumn = 0x260; // UVerticalBox*
		constexpr auto _stabilizationColumn = 0x268; // UVerticalBox*
		constexpr auto _recoveryColumn = 0x270; // UVerticalBox*
		constexpr auto _progressBarClass = 0x278; // UMetabolismBodyEffectProgressBar*
	}

	namespace n_UAnimNotifyState_ShowAmmunitionMeshes {
		constexpr auto GenerateCustomMeshComponents = 0x30; // bool
		constexpr auto CustomMeshComponentsBoneNames = 0x38; // TArray<FName>
		constexpr auto showReversed = 0x48; // bool
		constexpr auto ammoIndices = 0x50; // TArray<int32_t>
	}

	namespace n_UUI_MusicPlayerDisplay_C {
		constexpr auto TitleRetainer = 0x308; // URetainerBox*
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMeshOpPreviewWithBackgroundCompute {
		constexpr auto PreviewMesh = 0x58; // UPreviewMesh*
		constexpr auto StandardMaterials = 0x60; // TArray<UMaterialInterface*>
		constexpr auto OverrideMaterial = 0x70; // UMaterialInterface*
		constexpr auto WorkingMaterial = 0x78; // UMaterialInterface*
	}

	namespace n_UMetabolismDigestionPanel {
		constexpr auto FoodWidgetClass = 0x260; // UUserWidget*
		constexpr auto _rpb_Stomach = 0x268; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Intestine = 0x270; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Colon = 0x278; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Bladder = 0x280; // UMetabolismRadialProgressBar*
		constexpr auto _foods = 0x288; // UWrapBox*
	}

	namespace n_UStatisticsListRow {
		constexpr auto _statNameTextBox = 0x260; // UTextBlock*
		constexpr auto _statValueTextBox = 0x268; // UTextBlock*
		constexpr auto _statUnitTextBox = 0x270; // UTextBlock*
	}

	namespace n_UMeshVertexSculptTool {
		constexpr auto SculptProperties = 0x9d8; // UVertexBrushSculptProperties*
		constexpr auto DynamicMeshComponent = 0x9e0; // USimpleDynamicMeshComponent*
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_ALockBombDefusalMinigame {
		constexpr auto _bombClass = 0x4e0; // ATrapItem*
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UChatNotificationDescription {
		constexpr auto Message = 0x40; // FString
		constexpr auto chatType = 0x50; // EChatType
		constexpr auto shouldCopyToClientClipboard = 0x51; // bool
	}

	namespace n_UCCMainWidget {
		constexpr auto _bodyTypeTriangleWidget = 0x260; // UCCBodyTypeTriangleWidget*
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UTimedTriggerComponent {
		constexpr auto _countdownDuration = 0x4d0; // float
		constexpr auto _countdownStartAudioEvent = 0x4d8; // UAkAudioEvent*
		constexpr auto _countdownStopAudioEvent = 0x4e0; // UAkAudioEvent*
		constexpr auto _countdownRemainingTime = 0x4e8; // float
	}

	namespace n_UConZCharacterMovementComponent {
		constexpr auto _navWalkingCollisionResponseToWorldStatic = 0xb00; // ECollisionResponse
		constexpr auto _navWalkingCollisionResponseToWorldDynamic = 0xb01; // ECollisionResponse
		constexpr auto _maxClimbHeight = 0xb04; // float
		constexpr auto _queryWaterSplinesEveryFrame = 0xb08; // bool
		constexpr auto _angularVelocityFilteringInterpolationSpeed = 0xc00; // float
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_APrisonerAIController {
		constexpr auto _prisoner = 0x328; // APrisoner*
		constexpr auto _prisonerMovementComponent = 0x330; // UPrisonerMovementComponent*
	}

	namespace n_UUI_SortByButton_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x280; // UButton*
		constexpr auto SizeBox_1 = 0x288; // USizeBox*
		constexpr auto TextBlock_1 = 0x290; // UTextBlock*
		constexpr auto Size = 0x298; // float
		constexpr auto Text = 0x2a0; // FText
		constexpr auto Type = 0x2b8; // SortByTypes
		constexpr auto OnClicked = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UTireToSurfaceAudioData {
		constexpr auto _maxSoundRange = 0x30; // float
		constexpr auto _movementStarted = 0x38; // UAkAudioEvent*
		constexpr auto _movementStopped = 0x40; // UAkAudioEvent*
		constexpr auto _noSurface = 0x48; // UAkAudioEvent*
		constexpr auto _soundGroups = 0x50; // TArray<FTireSurfaceAudioEntry>
	}

	namespace n_UAdminCommandRegistry {
		constexpr auto _commands = 0x28; // TArray<UAdminCommand*>
	}

	namespace n_UABP_Prisoner_Parachute_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x318; // FAnimNode_SequenceEvaluator
	}

	namespace n_AHip_Flask_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UPhysicsObjectToolPropertySet {
		constexpr auto ObjectName = 0x60; // FString
		constexpr auto CollisionType = 0x70; // ECollisionGeometryMode
		constexpr auto Spheres = 0x78; // TArray<FPhysicsSphereData>
		constexpr auto Boxes = 0x88; // TArray<FPhysicsBoxData>
		constexpr auto capsules = 0x98; // TArray<FPhysicsCapsuleData>
		constexpr auto Convexes = 0xa8; // TArray<FPhysicsConvexData>
	}

	namespace n_UMetabolismBasicInfoPanel {
		constexpr auto _stat_Age = 0x260; // UMetabolismCurrentStatLight*
		constexpr auto _stat_Teeth = 0x268; // UMetabolismCurrentStatLight*
		constexpr auto _stat_Lifetime = 0x270; // UMetabolismCurrentStatLight*
		constexpr auto _stat_BloodType = 0x278; // UMetabolismCurrentStatLight*
		constexpr auto _stat_Weight = 0x280; // UMetabolismCurrentStatLight*
		constexpr auto _stat_BloodVolume = 0x288; // UMetabolismCurrentStatLight*
		constexpr auto _stat_Health = 0x290; // UMetabolismCurrentStatLight*
		constexpr auto _stat_Temperature = 0x298; // UMetabolismCurrentStatLight*
	}

	namespace n_UBaseMeshProcessingTool {
		constexpr auto Preview = 0xb0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UGroomComponent {
		constexpr auto GroomAsset = 0x478; // UGroomAsset*
		constexpr auto NiagaraComponents = 0x480; // TArray<UNiagaraComponent*>
		constexpr auto SourceSkeletalMesh = 0x490; // USkeletalMesh*
		constexpr auto BindingAsset = 0x498; // UGroomBindingAsset*
		constexpr auto PhysicsAsset = 0x4a0; // UPhysicsAsset*
		constexpr auto Strands_DebugMaterial = 0x4a8; // UMaterialInterface*
		constexpr auto Strands_DefaultMaterial = 0x4b0; // UMaterialInterface*
		constexpr auto Cards_DefaultMaterial = 0x4b8; // UMaterialInterface*
		constexpr auto Meshes_DefaultMaterial = 0x4c0; // UMaterialInterface*
		constexpr auto AngularSpringsSystem = 0x4c8; // UNiagaraSystem*
		constexpr auto CosseratRodsSystem = 0x4d0; // UNiagaraSystem*
		constexpr auto AttachmentName = 0x4d8; // FString
		constexpr auto GroomGroupsDesc = 0x530; // TArray<FHairGroupDesc>
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UBrushRemeshProperties {
		constexpr auto bEnableRemeshing = 0x70; // bool
		constexpr auto TriangleSize = 0x74; // int32_t
		constexpr auto PreserveDetail = 0x78; // int32_t
	}

	namespace n_AVehicleSpawner {
		constexpr auto SpawnerComponent = 0x220; // UVehicleSpawnerComponent*
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_USpaceDeformerOperatorFactory {
		constexpr auto SpaceDeformerTool = 0x30; // UMeshSpaceDeformerTool*
	}

	namespace n_UVehicleSpawnerComponent {
		constexpr auto SpawnerMarkers = 0x1f8; // TArray<FVehicleSpawnerMarker>
	}

	namespace n_UExamineAssetData {
		constexpr auto ExamineData = 0x30; // FExamineItemSpawnerData
		constexpr auto StartExamineAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto StopExamineAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto noiseLevel = 0xf0; // ENoiseLevel
		constexpr auto CanStore = 0xf1; // bool
		constexpr auto CanSave = 0xf2; // bool
		constexpr auto HasCustomExpirationTime = 0xf3; // bool
		constexpr auto Title = 0xf8; // FText
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UPrisonerBodySymptom_Pain {
		constexpr auto _maxSeverity = 0xb8; // float
		constexpr auto _painkillersAmountRatioToBeSuppressedVsConstitution = 0xbc; // FFloatInterval
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UUI_GameEventScoreboardWidget_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto RoundInfo = 0x2b8; // UBorder*
		constexpr auto TeamGrid = 0x2c0; // UUniformGridPanel*
		constexpr auto TextBlock_1 = 0x2c8; // UTextBlock*
		constexpr auto UI_GameEventParitcipantInfoCardWidget = 0x2d0; // UUI_GameEventParticipantInfoCardWidget_C*
		constexpr auto List = 0x2d8; // TArray<UWidget*>
		constexpr auto TeamHeaderWidgetClass_1 = 0x2e8; // UUI_GameEventTeamHeaderWidget_C*
		constexpr auto TeamWidgets = 0x2f0; // TArray<UUI_GameEventTeamInfoWidget_C*>
		constexpr auto TeamNames = 0x300; // TArray<FText>
		constexpr auto TeamColors = 0x310; // TArray<FGameEventTeamColours>
	}

	namespace n_ADistantLevelManager {
		constexpr auto _rootComponent = 0x220; // USceneComponent*
		constexpr auto _minCameraLocationChangeToUpdateDistantLevels = 0x228; // float
		constexpr auto _distantMeshPreloadDistance = 0x22c; // float
		constexpr auto _maxNumSimultaneouslyStreamedDistantMeshLODs = 0x230; // int32_t
		constexpr auto _distantCollisionMeshUnloadDistance = 0x234; // float
		constexpr auto _maxNumSimultaneouslyStreamedDistantCollisionMeshes = 0x238; // int32_t
		constexpr auto _distantLevelDescriptions = 0x240; // TArray<FDistantLevelDescription>
	}

	namespace n_UTextOnlyTooltip {
		constexpr auto Text = 0x260; // FText
		constexpr auto _text = 0x278; // UTextBlock*
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x258; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x260; // UAkLateReverbComponent*
		constexpr auto Room = 0x268; // UAkRoomComponent*
	}

	namespace n_AGameEventTransport {
		constexpr auto Sphere = 0x220; // USphereComponent*
		constexpr auto PodMesh = 0x228; // UStaticMeshComponent*
		constexpr auto TargetMesh = 0x230; // UStaticMeshComponent*
		constexpr auto TravelSpeed = 0x238; // float
		constexpr auto TravelHeight = 0x23c; // float
		constexpr auto HoverHeight = 0x240; // float
		constexpr auto LargerRadius = 0x244; // float
		constexpr auto SmallerRadius = 0x248; // float
		constexpr auto _state = 0x24c; // EGameEventTransportState
		constexpr auto _lastPosition = 0x250; // FVector
		constexpr auto _targetPosition = 0x25c; // FVector
		constexpr auto _blend = 0x268; // float
	}

	namespace n_USculptMaxBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto MaxHeight = 0x68; // float
		constexpr auto bUseFixedHeight = 0x6c; // bool
		constexpr auto FixedHeight = 0x70; // float
	}

	namespace n_UFishSpawningPreset {
		constexpr auto SpawningChance = 0x30; // float
		constexpr auto SpawningChanceBySizeMultiplier = 0x38; // TMap<EAquaticIndividualSize, float>
	}

	namespace n_ASledge {
		constexpr auto _cameraStabilizer = 0x7c8; // UVehicleCameraStabilizerComponent*
		constexpr auto _spawnParameters = 0x7d0; // FVehicleSpawnParameters
		constexpr auto _mountSlots = 0x800; // TArray<USledgeMountSlot*>
		constexpr auto _floorTraceDistance = 0x89c; // float
		constexpr auto _tiltAngleToUnmountMountees = 0x8a0; // float
		constexpr auto _accelerationForceMagnitude = 0x8a8; // float
		constexpr auto _decelerationForceMagnitude = 0x8ac; // float
		constexpr auto _steeringForceMagnitude = 0x8b0; // float
		constexpr auto _steeringForceOffset = 0x8b4; // FVector
		constexpr auto _sidewaysBrakingForceMagnitude = 0x8c0; // float
		constexpr auto _dragForceMagnitudeVsSpeed = 0x8c8; // UCurveFloat*
		constexpr auto _maxSpeedVsGroundSlopeAngle = 0x8d0; // UCurveFloat*
		constexpr auto _physicsAssetWhenBoarded = 0x8d8; // UPhysicsAsset*
		constexpr auto _defaultMovementParticleSystem = 0x8e0; // UParticleSystem*
		constexpr auto _movementParticleSystems = 0x8e8; // TMap<UPhysicalMaterial*, UParticleSystem*>
		constexpr auto _movementParticlesActivationSpeed = 0x938; // float
		constexpr auto _movementParticlesDeleteDelay = 0x93c; // float
		constexpr auto _rigidBodyStatePositionErrorTolerance = 0x940; // float
		constexpr auto _rigidBodyStateRotationErrorTolerance = 0x944; // float
		constexpr auto _distanceErrorToHardSnapToRemoteLocation = 0x948; // float
		constexpr auto _sledgeMovementStartAudioEvent = 0x950; // UAkAudioEvent*
		constexpr auto _sledgeMovementStopAudioEvent = 0x958; // UAkAudioEvent*
		constexpr auto _velocityUpdateInterval = 0x960; // float
		constexpr auto _maxSledgeEnterAngle = 0x964; // float
		constexpr auto _allowedWaterImmersionDepth = 0x968; // float
		constexpr auto _disallowedWaterImmersionDepth = 0x96c; // float
		constexpr auto _waterImmersionDepthToForceEvictMountees = 0x970; // float
		constexpr auto _timeToEvictMounteesWhenImmersedIntoWater = 0x974; // float
		constexpr auto _timeToForceEvictMounteesWhenImmersedIntoWater = 0x978; // float
		constexpr auto _timeToAutoDestructWhenImmersedIntoWater = 0x97c; // float
		constexpr auto _mountSlotIndicatorsWidget = 0x988; // UUserWidget*
		constexpr auto _controls = 0x9a4; // uint32_t
		constexpr auto _movementParticlesPosition = 0x9c0; // FVector
		constexpr auto _healthBarCaption = 0x9d0; // FText
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_AAmmunitionItem {
		constexpr auto AmmunitionTag = 0x7c0; // FGameplayTag
		constexpr auto AmmunitionTypeString = 0x7c8; // FString
		constexpr auto projectileClass = 0x7d8; // AProjectile*
		constexpr auto CartridgeMesh = 0x7e0; // UStaticMesh*
		constexpr auto CasingMesh = 0x7e8; // UStaticMesh*
		constexpr auto UsedBadRoundMesh = 0x7f0; // UStaticMesh*
		constexpr auto WeaponSpreadMultiplier = 0x7f8; // float
		constexpr auto MaxAmmoCount = 0x7fc; // int32_t
		constexpr auto _ammoCount = 0x800; // int32_t
		constexpr auto _ammoCountOwnerHelper = 0x804; // int32_t
	}

	namespace n_UDialogButton {
		constexpr auto PreviewSelectedState = 0x2b8; // bool
		constexpr auto _button = 0x2c0; // UButton*
		constexpr auto _text = 0x2c8; // UTextBlock*
		constexpr auto _sizeBox = 0x2d0; // USizeBox*
		constexpr auto _initialTitle = 0x2d8; // FText
		constexpr auto _selectedButtonStyle = 0x2f0; // FTabButtonStyle
		constexpr auto _deselectedButtonStyle = 0x578; // FTabButtonStyle
		constexpr auto _selectedTextStyle = 0x800; // FTabTextStyle
		constexpr auto _deselectedTextStyle = 0x898; // FTabTextStyle
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UEditMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xd0; // USimpleDynamicMeshComponent*
		constexpr auto CommonProps = 0xd8; // UPolyEditCommonProperties*
		constexpr auto EditActions = 0xe0; // UEditMeshPolygonsToolActions*
		constexpr auto EditActions_Triangles = 0xe8; // UEditMeshPolygonsToolActions_Triangles*
		constexpr auto EditEdgeActions = 0xf0; // UEditMeshPolygonsToolEdgeActions*
		constexpr auto EditEdgeActions_Triangles = 0xf8; // UEditMeshPolygonsToolEdgeActions_Triangles*
		constexpr auto EditUVActions = 0x100; // UEditMeshPolygonsToolUVActions*
		constexpr auto ExtrudeProperties = 0x108; // UPolyEditExtrudeProperties*
		constexpr auto OffsetProperties = 0x110; // UPolyEditOffsetProperties*
		constexpr auto InsetProperties = 0x118; // UPolyEditInsetProperties*
		constexpr auto OutsetProperties = 0x120; // UPolyEditOutsetProperties*
		constexpr auto CutProperties = 0x128; // UPolyEditCutProperties*
		constexpr auto SetUVProperties = 0x130; // UPolyEditSetUVProperties*
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0x148; // UMultiTransformer*
		constexpr auto EditPreview = 0x4a0; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x4b0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x4b8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x4c0; // UCollectSurfacePathMechanic*
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UTransformMeshesTool {
		constexpr auto TransformProps = 0x98; // UTransformMeshesToolProperties*
		constexpr auto ActiveGizmos = 0xb0; // TArray<FTransformMeshesTarget>
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x448; // UBodySetup*
		constexpr auto AreaClass = 0x450; // UNavAreaBase*
		constexpr auto ShapeColor = 0x458; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x45c; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x45c; // char : 1
		constexpr auto bDynamicObstacle = 0x45c; // char : 1
	}

	namespace n_APlaceableActorBaseUpgrade {
		constexpr auto _elementToBeUpgraded = 0x4c0; // FConZBaseElementIdentifier
	}

	namespace n_UPrisonerAnimInstance_WheelBarrow {
		constexpr auto _wheelBarrowSpeed = 0x2b8; // float
		constexpr auto _wheelBarrowSpeedKph = 0x2bc; // float
		constexpr auto _wheelBarrowBumpiness = 0x2c0; // float
		constexpr auto _wheelBarrowRollAngleRelativeToDriver = 0x2c4; // float
		constexpr auto _isInCombatMode = 0x2c8; // bool
		constexpr auto _isLimping = 0x2c9; // bool
		constexpr auto _isDriver = 0x2ca; // bool
		constexpr auto _driverIdleAnimation = 0x2d0; // UAnimSequence*
		constexpr auto _driverWalkJogAnimation = 0x2d8; // UBlendSpace*
		constexpr auto _driverWalkJogLimpingAnimation = 0x2e0; // UBlendSpace*
		constexpr auto _driverLHandGripTransform = 0x2f0; // FTransform
		constexpr auto _driverRHandGripTransform = 0x320; // FTransform
		constexpr auto _driverSpineBendAngle = 0x350; // float
		constexpr auto _driverSpineBendScale = 0x354; // float
		constexpr auto _driverSpineBendAngleInterpSpeed = 0x358; // float
		constexpr auto _driverSpineLeanAngle = 0x35c; // float
		constexpr auto _driverSpineLeanScale = 0x360; // float
		constexpr auto _driverSpineLeanAngleInterpSpeed = 0x364; // float
		constexpr auto _driverHasFloor = 0x368; // bool
		constexpr auto _isDriverMoving = 0x369; // bool
		constexpr auto _driverSpeed = 0x36c; // float
		constexpr auto _driverCourseAngle = 0x370; // float
		constexpr auto _passengerIdleAnimation = 0x378; // UBlendSpace*
		constexpr auto _useVehicleWAPLowerBodyIdleTP = 0x380; // bool
		constexpr auto _vehicleWAPLowerBodyIdleAimingTP = 0x388; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedTP = 0x390; // UAnimSequenceBase*
	}

	namespace n_UAirplaneDriverMountSlot {
		constexpr auto _forwardIdleAnimation = 0x138; // UBlendSpace*
		constexpr auto _forwardSteeringAnimation = 0x140; // UAnimSequenceBase*
		constexpr auto _forwardSteeringAnimationFP = 0x148; // UAnimSequenceBase*
	}

	namespace n_UVDSimulation {
		constexpr auto WindSources = 0x158; // TArray<UVDWindDirectionalSourceComponent*>
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_AZombieCorpse {
		constexpr auto StrippedMesh = 0x3f0; // USkeletalMesh*
		constexpr auto _isSearched = 0x3f8; // bool
	}

	namespace n_UUI_GameEventLeaderboardRow_C {
		constexpr auto Assists = 0x260; // UTextBlock*
		constexpr auto Background = 0x268; // UBorder*
		constexpr auto Deaths = 0x270; // UTextBlock*
		constexpr auto Fame = 0x278; // UTextBlock*
		constexpr auto KD = 0x280; // UTextBlock*
		constexpr auto Kills = 0x288; // UTextBlock*
		constexpr auto Player = 0x290; // UTextBlock*
		constexpr auto RankText = 0x298; // UTextBlock*
		constexpr auto Score = 0x2a0; // UTextBlock*
		constexpr auto BackgroundColor = 0x2a8; // FLinearColor
		constexpr auto Rank = 0x2b8; // int32_t
	}

	namespace n_UClearStuckBullet {
		constexpr auto MontageEndSectionName = 0xb8; // FName
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_APowerNode {
		constexpr auto _root = 0x220; // USceneComponent*
		constexpr auto _mesh = 0x228; // UStaticMeshComponent*
		constexpr auto _cableMeshSet = 0x230; // UPowerCableMeshSet*
		constexpr auto _maxCablesDrawDistance = 0x238; // float
		constexpr auto _connectors = 0x240; // TArray<FPowerNodeConnector>
		constexpr auto _connectionTarget = 0x250; // APowerNode*
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x468; // FVector
		constexpr auto Gap = 0x474; // float
		constexpr auto Length = 0x478; // float
		constexpr auto Thickness = 0x47c; // float
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_USculptMaxBrushProperties {
		constexpr auto MaxHeight = 0x60; // float
		constexpr auto bFreezeCurrentHeight = 0x64; // bool
	}

	namespace n_UMetabolism_ICU_GraphWidget_EKG {
		constexpr auto TimeStretchCurveCurve = 0x218; // UCurveFloat*
		constexpr auto HeartbeatIrregularitiesCurve = 0x220; // UCurveFloat*
	}

	namespace n_UMissionContainerWidget {
		constexpr auto _missionObjectivesSizeBox = 0x260; // USizeBox*
		constexpr auto _missionName = 0x268; // UTextBlock*
		constexpr auto _objectivesWidgets = 0x270; // UVerticalBox*
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UVicinityContainerRowItemWidget {
		constexpr auto _caption = 0x440; // UTextBlock*
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UVDRopeComponent {
		constexpr auto StretchStiffness = 0x678; // float
		constexpr auto BendStiffness = 0x67c; // float
		constexpr auto Mass = 0x680; // float
		constexpr auto DragCoefficient = 0x684; // float
		constexpr auto Length = 0x688; // float
		constexpr auto Width = 0x68c; // float
		constexpr auto NumSegments = 0x690; // int32_t
		constexpr auto bEnforceStrictLength = 0x694; // bool
		constexpr auto NumSides = 0x698; // int32_t
		constexpr auto TileMaterial = 0x69c; // float
		constexpr auto StretchConstraints = 0x6c0; // TArray<UVDParticleSpringConstraint*>
		constexpr auto BendConstraints = 0x6d0; // TArray<UVDParticleSpringConstraint*>
		constexpr auto Pieces = 0x6e0; // TArray<FRopePiece>
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UUI_Metabolism_LeftPanel_C {
		constexpr auto UberGraphFrame = 0x2d8; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x2e0; // UImage*
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_UAnimNotifyState_DrainStamina {
		constexpr auto DrainType = 0x30; // EAnimNotifyStaminDrainType
		constexpr auto AmountToDrain = 0x34; // float
		constexpr auto Duration = 0x38; // float
		constexpr auto RecoveryDelay = 0x3c; // float
		constexpr auto RatioToRecover = 0x40; // float
		constexpr auto RecoveryTime = 0x44; // float
	}

	namespace n_UModularTooltipElement_Affects {
		constexpr auto _targetTextBlock = 0x2e8; // UTextBlock*
		constexpr auto _affectElementOverlay = 0x2f0; // UOverlay*
	}

	namespace n_UShelterItemState {
		constexpr auto ShelterId = 0xf8; // FDbIntegerId
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UUI_SquadMember_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CommandBox = 0x268; // UHorizontalBox*
		constexpr auto DemoteButton = 0x270; // UButton*
		constexpr auto FamePointBox = 0x278; // UHorizontalBox*
		constexpr auto FameText = 0x280; // UTextBlock*
		constexpr auto FPText = 0x288; // UTextBlock*
		constexpr auto HoverButton = 0x290; // UButton*
		constexpr auto KickButton = 0x298; // UButton*
		constexpr auto MakeLeaderButton = 0x2a0; // UButton*
		constexpr auto PlayerName = 0x2a8; // UTextBlock*
		constexpr auto PromoteButton = 0x2b0; // UButton*
		constexpr auto RankIcon = 0x2b8; // UImage*
		constexpr auto UserProfileId = 0x2c0; // FDbIntegerId
		constexpr auto Rank = 0x2c8; // EConZSquadMemberRank
		constexpr auto CanBeManagedByPlayer = 0x2c9; // bool
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x448; // FColor
		constexpr auto FrustumAngle = 0x44c; // float
		constexpr auto FrustumAspectRatio = 0x450; // float
		constexpr auto FrustumStartDist = 0x454; // float
		constexpr auto FrustumEndDist = 0x458; // float
		constexpr auto Texture = 0x460; // UTexture*
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x1f8; // char : 1
		constexpr auto AcousticPolys = 0x200; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x210; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x210; // char : 1
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_ACorpse {
		constexpr auto RagdollMeshComponent = 0x238; // USkeletalMeshComponent*
		constexpr auto ChoppingRecipeDataAsset = 0x240; // UChoppingRecipeDataAsset*
		constexpr auto ItemRepresentation = 0x248; // AItem*
		constexpr auto IterativeChopping = 0x250; // bool
		constexpr auto MainBoneName = 0x254; // FName
		constexpr auto RagdollMeshData = 0x260; // FCorpseSkeletalMeshRepData
		constexpr auto StaticMeshData = 0x2d0; // TArray<FCorpseStaticMeshRepData>
		constexpr auto SkeletalMeshData = 0x2e0; // TArray<FCorpseSkeletalMeshRepData>
		constexpr auto PoseData = 0x2f0; // FCorpsePoseData
		constexpr auto inventory = 0x370; // TArray<AItem*>
		constexpr auto SearchTime = 0x380; // float
		constexpr auto PhysicsPauseDistance = 0x384; // float
		constexpr auto StartSearchAudioEvent = 0x388; // UAkAudioEvent*
		constexpr auto StopSearchAudioEvent = 0x390; // UAkAudioEvent*
		constexpr auto AutoDestructTime = 0x398; // float
		constexpr auto AutoDestructRadius = 0x39c; // float
		constexpr auto Attachements = 0x3a0; // TArray<AActor*>
		constexpr auto AttachementSockets = 0x3b0; // TArray<FName>
		constexpr auto _sourceCharacter = 0x3d8; // AConZCharacter*
		constexpr auto _atRest = 0x3e8; // bool
	}

	namespace n_UPrisonerBodySymptom_PeriodicSound {
		constexpr auto _sound = 0xb8; // UAkAudioEvent*
		constexpr auto _soundInitialDelay = 0xc0; // FFloatInterval
		constexpr auto _soundIntervalDeviationRatio = 0xc8; // FFloatInterval
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UReplicationGraphNode_GridCell {
		constexpr auto DynamicNode = 0x140; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x148; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneTakeTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_AAnimal2 {
		constexpr auto SpeciesName = 0x798; // FText
		constexpr auto SpeciesType = 0x7b0; // EAnimalSpecies
		constexpr auto ActivityCycle = 0x7b1; // EAnimalActivityCycle
		constexpr auto maxHealth = 0x7b4; // float
		constexpr auto HitReactComponent = 0x7b8; // UHitReactComponent*
		constexpr auto HitReactType = 0x7c0; // FGameplayTag
		constexpr auto EyesViewPointSocketName = 0x7c8; // FName
		constexpr auto TrackingMarker = 0x7d0; // ATrackingMarker2*
		constexpr auto BloodTrailMarker = 0x7d8; // ATrackingMarker2*
		constexpr auto TrackingMarkerFrequency = 0x7e0; // float
		constexpr auto TrackingMarkerDistance = 0x7e4; // float
		constexpr auto TrackingMarkerRadius = 0x7e8; // float
		constexpr auto TrackingMarkerDuration = 0x7ec; // float
		constexpr auto BleedingSpeed = 0x7f0; // float
		constexpr auto LightWoundDamageAmount = 0x7f4; // float
		constexpr auto MeleeBleedingThreshold = 0x7f8; // float
		constexpr auto StuckCheckDuration = 0x7fc; // float
		constexpr auto StuckRadius = 0x800; // float
		constexpr auto UnstuckMode = 0x804; // char
		constexpr auto OnDamageTaken = 0x808; // FMulticastInlineDelegate
		constexpr auto HeadBoneRotationSendToServerInterval = 0x818; // float
		constexpr auto SightRange = 0x81c; // float
		constexpr auto TiltMeshOnSlopes = 0x820; // bool
		constexpr auto AdjustMeshHeightOnSlopes = 0x821; // bool
		constexpr auto MeshPositionLerpSpeed = 0x824; // float
		constexpr auto BleedInterval = 0x828; // float
		constexpr auto ShouldGoToRagdolIfTakenDamage = 0x82c; // bool
		constexpr auto RagdollDuration = 0x830; // float
		constexpr auto _health = 0x834; // float
		constexpr auto _woundDamage = 0x838; // float
		constexpr auto _packSizeMin = 0x84c; // int32_t
		constexpr auto _packSizeMax = 0x850; // int32_t
		constexpr auto _animalStance = 0x888; // EAnimalStance
		constexpr auto _shouldUpdateMovementSpeedRTPCValue = 0x890; // bool
		constexpr auto _doNotCrumble = 0x8e8; // bool
		constexpr auto _collisionDamageMultiplierPerBodyPart = 0x8ec; // float [0xc]
		constexpr auto _delayBetweenTakeDamageSounds = 0x920; // float
		constexpr auto _canDrown = 0x924; // bool
		constexpr auto _drownDamageCycleLength = 0x928; // float
		constexpr auto _drownDamagePerCycle = 0x92c; // float
		constexpr auto _baseEyeForwardDistance = 0x934; // float
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UMetabolismBodyStatsPanel {
		constexpr auto _tapb_NutrientAbsorption_Protein = 0x260; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Carbs = 0x268; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Fat = 0x270; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Minerals = 0x278; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Vitamins = 0x280; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Water = 0x288; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_NutrientAbsorption_Alcohol = 0x290; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Bones = 0x298; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Blood = 0x2a0; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Intestines = 0x2a8; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Skin = 0x2b0; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Organs = 0x2b8; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Fat = 0x2c0; // UMetabolismTitleAndAPB*
		constexpr auto _tapb_BodyMassDistribution_Muscle = 0x2c8; // UMetabolismTitleAndAPB*
	}

	namespace n_UUI_WarningSign_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MainImage = 0x268; // UImage*
		constexpr auto MainRetainerBox = 0x270; // URetainerBox*
		constexpr auto ShowDuration = 0x278; // float
		constexpr auto Duration = 0x27c; // float
		constexpr auto TimeScale = 0x280; // float
		constexpr auto warningType = 0x284; // EWarningType
	}

	namespace n_UGrappleActionParameters {
		constexpr auto IsGrappleAttackInWater = 0x30; // bool
		constexpr auto GrapplerInitialGrabMontage = 0x38; // UAnimMontage*
		constexpr auto StartGrappleAudioEvent = 0x40; // UAkAudioEvent*
		constexpr auto StopGrappleAudioEvent = 0x48; // UAkAudioEvent*
		constexpr auto AttackerAttachSocketName = 0x50; // FName
		constexpr auto DefenderAttachBoneName = 0x58; // FName
		constexpr auto DefenderReleaseOffset = 0x60; // float
		constexpr auto DefensePercentageIncreasePerInput = 0x64; // float
		constexpr auto DefensePercentageDecreasePerSecond = 0x68; // float
		constexpr auto DefenseBarSweetSpotSizePercentage = 0x6c; // float
		constexpr auto ReleaseBarPercentageIncreasePerSecond = 0x70; // float
		constexpr auto ReleaseBarPercentageDecreasePerSecond = 0x74; // float
		constexpr auto CameraSpringArmOffset = 0x80; // FTransform
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x1f8; // bool
		constexpr auto EarlyReflectionAuxBus = 0x200; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x208; // FString
		constexpr auto EarlyReflectionOrder = 0x218; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x21c; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x220; // float
		constexpr auto OcclusionCollisionChannel = 0x224; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x22c; // char : 1
		constexpr auto roomReverbAuxBusGain = 0x230; // float
		constexpr auto diffractionMaxEdges = 0x234; // int32_t
		constexpr auto diffractionMaxPaths = 0x238; // int32_t
		constexpr auto diffractionMaxPathLength = 0x23c; // float
		constexpr auto DrawFirstOrderReflections = 0x240; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x240; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x240; // char : 1
		constexpr auto DrawGeometricDiffraction = 0x240; // char : 1
		constexpr auto DrawSoundPropagation = 0x240; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x244; // bool
		constexpr auto AttenuationScalingFactor = 0x248; // float
		constexpr auto OcclusionRefreshInterval = 0x24c; // float
		constexpr auto AkAudioEvent = 0x250; // UAkAudioEvent*
		constexpr auto EventName = 0x258; // FString
	}

	namespace n_UVoxelSolidifyMeshesToolProperties {
		constexpr auto WindingThreshold = 0x60; // double
		constexpr auto ExtendBounds = 0x68; // double
		constexpr auto SurfaceSearchSteps = 0x70; // int32_t
		constexpr auto bSolidAtBoundaries = 0x74; // bool
		constexpr auto bMakeOffsetSurfaces = 0x75; // bool
		constexpr auto OffsetThickness = 0x78; // double
	}

	namespace n_UCustomZoneSettingsMenu {
		constexpr auto _map = 0x270; // UCustomZoneSettingsMap*
		constexpr auto _configurationsList = 0x278; // UCustomZoneSettingsConfigurationsList*
		constexpr auto _regionsList = 0x280; // UCustomZoneSettingsRegionsList*
		constexpr auto _detailsDisplay = 0x288; // UCustomZoneSettingsDetailsDisplay*
		constexpr auto _applyNotification = 0x290; // UCustomZoneSettingsApplyNotification*
		constexpr auto _messageBoxPanel = 0x298; // UVerticalBox*
		constexpr auto _buttonBack = 0x2a0; // UButton*
		constexpr auto _buttonApply = 0x2a8; // UButton*
	}

	namespace n_AHandheldLightItem {
		constexpr auto _currentLightAngleIndex = 0x7c0; // int32_t
		constexpr auto _possibleLightAngles = 0x7c8; // TArray<float>
		constexpr auto _minIntensityValue = 0x7d8; // float
		constexpr auto _intensityChangeStep = 0x7dc; // float
		constexpr auto _resourceContainerComponent = 0x7e0; // UBasicGameResourceContainerComponent*
		constexpr auto _lightIntensityReplicated = 0x7ec; // char
		constexpr auto _canChangeLightIntensity = 0x7ed; // bool
	}

	namespace n_UItemSpawnerPreset {
		constexpr auto SpawnerData = 0x28; // FItemSpawnerData
	}

	namespace n_UMissionRewardWidget {
		constexpr auto _rewardImage = 0x260; // UImage*
		constexpr auto _rewardAmount = 0x268; // UTextBlock*
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UClientSettingsMenu {
		constexpr auto _apply = 0x280; // UMenuButton*
		constexpr auto _revert = 0x288; // UMenuButton*
		constexpr auto _reset = 0x290; // UMenuButton*
		constexpr auto _back = 0x298; // UMenuButton*
		constexpr auto _messageBoxPanel = 0x2a0; // UVerticalBox*
		constexpr auto _inputWidget = 0x2a8; // UInputWidget*
		constexpr auto _audioDeviceDisplay = 0x2b0; // UAudioDeviceDisplay*
	}

	namespace n_UAnimNotifyState_WeaponRevolverDrumRotationDirection {
		constexpr auto RotationDirection = 0x30; // ERotationDirection
	}

	namespace n_UPrisonerBodyCondition_EnergyDeficiency {
		constexpr auto _severityVsEnergyDeficiencyRatio = 0xa8; // FRuntimeFloatCurve
		constexpr auto _maxRatioOfAbsorbedEnergyCapacityToBeRecovered = 0x130; // float
		constexpr auto _energyDeficiency = 0x134; // float
		constexpr auto _energyDeficiencyToRecover = 0x138; // float
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x468; // FVector
		constexpr auto HandleSize = 0x474; // float
		constexpr auto Thickness = 0x478; // float
		constexpr auto Direction = 0x47c; // FVector
		constexpr auto Length = 0x488; // float
		constexpr auto bImageScale = 0x48c; // bool
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_USedentaryNPCBackgroundInteraction {
		constexpr auto _backgroundInteractionType = 0x28; // EBackgroundInteractionType
		constexpr auto _canEverTick = 0x29; // bool
		constexpr auto _newBackgroundInteractionInterval = 0x2c; // FFloatRange
		constexpr auto _animationVariationsBegin = 0x48; // TArray<UAnimMontage*>
		constexpr auto _animationVariationsTick = 0x58; // TArray<UAnimMontage*>
		constexpr auto _animationVariationsEnd = 0x68; // TArray<UAnimMontage*>
		constexpr auto _animationVariationsOneShot = 0x78; // TArray<UAnimMontage*>
		constexpr auto _soundVariationsBegin = 0x88; // TArray<UAkAudioEvent*>
		constexpr auto _soundVariationsTick = 0x98; // TArray<UAkAudioEvent*>
		constexpr auto _soundVariationsEnd = 0xa8; // TArray<UAkAudioEvent*>
		constexpr auto _soundVariationsOneShot = 0xb8; // TArray<UAkAudioEvent*>
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_ULiveLinkTimeSynchronizationSource {
		constexpr auto SubjectName = 0x30; // FLiveLinkSubjectName
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UWeaponScopeWidget {
		constexpr auto ReticleTexture = 0x278; // UTexture2D*
		constexpr auto TextRenderTarget = 0x280; // UTextureRenderTarget2D*
		constexpr auto FadeFactor = 0x288; // float
		constexpr auto OnHideDelay = 0x28c; // float
	}

	namespace n_UHoleFillToolProperties {
		constexpr auto FillType = 0x60; // EHoleFillOpFillType
		constexpr auto bRemoveIsolatedTriangles = 0x61; // bool
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UFishSpeciesPreset {
		constexpr auto FishSpawnData = 0x30; // TArray<FFishSpawnData>
	}

	namespace n_AReplicatedExplosionEffectsActor {
		constexpr auto _explosionParticlesTransform = 0x230; // FTransform
		constexpr auto _defaultParticleSystem = 0x260; // UParticleSystem*
		constexpr auto _onImpactExplosionEffectsOverrides = 0x268; // TMap<EPhysicalSurface, UParticleSystem*>
		constexpr auto _explosionSound = 0x2b8; // UAkAudioEvent*
	}

	namespace n_ACan02_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UThrowableItemTag {
		constexpr auto WeaponDesc = 0x30; // FMeleeWeaponDesc
	}

	namespace n_ALuminAROrigin {
		constexpr auto MRMeshComponent = 0x220; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x228; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x230; // UMaterialInterface*
	}

	namespace n_UPrisonerBodySymptom_BlurredVision {
		constexpr auto _intensityVsElapsedTimeRatio = 0xe8; // FRuntimeFloatCurve
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UProceduralConeToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_UCompassItemTag {
		constexpr auto CompassLevel = 0x30; // char
	}

	namespace n_UUI_Chat_C {
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x368; // UImage*
		constexpr auto MuteButton = 0x370; // UButton*
		constexpr auto MuteText = 0x378; // UTextBlock*
		constexpr auto ActiveSuggestions = 0x380; // TArray<FString>
		constexpr auto CurrentSuggestion = 0x390; // int32_t
		constexpr auto ActiveSuggestionWidgets = 0x398; // TArray<UUI_ChatSuggestion_C*>
		constexpr auto SuggestionsUpdated = 0x3a8; // bool
		constexpr auto SuggestionSelected = 0x3a9; // bool
		constexpr auto IsInHistoryMode = 0x3aa; // bool
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UCSGMeshesTool {
		constexpr auto CSGProperties = 0xf0; // UCSGMeshesToolProperties*
		constexpr auto DrawnLineSet = 0x108; // ULineSetComponent*
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_ABP_Survival_Storage_Chest_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_ADoor {
		constexpr auto ControlName = 0x238; // FName
		constexpr auto Mesh = 0x240; // UMeshComponent*
		constexpr auto OnOpened = 0x248; // FMulticastInlineDelegate
		constexpr auto _doorType = 0x2b8; // EDoorType
		constexpr auto _rootComponent = 0x2c0; // USceneComponent*
		constexpr auto _maxNumberOfLocks = 0x2cc; // int32_t
		constexpr auto _maxNumberOfZappers = 0x2d0; // int32_t
		constexpr auto CanOpenOnBothSides = 0x2d4; // bool
		constexpr auto _openingDuration = 0x2d8; // float
		constexpr auto _canOpen = 0x2dc; // bool
		constexpr auto _openingSoundCue = 0x2e0; // UAkAudioEvent*
		constexpr auto _openedSoundCue = 0x2e8; // UAkAudioEvent*
		constexpr auto _closingSoundCue = 0x2f0; // UAkAudioEvent*
		constexpr auto _closedSoundCue = 0x2f8; // UAkAudioEvent*
		constexpr auto _noiseLoudness = 0x300; // float
		constexpr auto _isJammed = 0x304; // bool
		constexpr auto _jammedOpenPercent = 0x308; // float
		constexpr auto _doorUnlockData = 0x310; // UDoorUnlockData*
		constexpr auto _stateFlags = 0x320; // EDoorStateFlags
		constexpr auto _canEverBeOpened = 0x322; // bool
		constexpr auto _canEverBeClosed = 0x323; // bool
		constexpr auto _priceCategory = 0x328; // UPriceCategory*
		constexpr auto _upgradeItemsClasses = 0x330; // TArray<UObject*>
		constexpr auto _lockData = 0x340; // TArray<FLockData>
		constexpr auto _originalUpgradeItemsClasses = 0x350; // TArray<UObject*>
		constexpr auto _originalLockData = 0x360; // TArray<FLockData>
		constexpr auto _owningUserProfileId = 0x380; // FDbIntegerId
		constexpr auto _upgradeWidget = 0x398; // UDoorUpgradeWidget*
		constexpr auto _doorRepData = 0x3a8; // FDoorRepData
		constexpr auto _disableSerialization = 0x3f5; // bool
	}

	namespace n_AEquipmentItem {
		constexpr auto MinRange = 0x7c0; // uint32_t
		constexpr auto MaxRange = 0x7c4; // uint32_t
		constexpr auto MinDamage = 0x7c8; // uint32_t
		constexpr auto MaxDamage = 0x7cc; // uint32_t
		constexpr auto AP = 0x7d0; // uint32_t
	}

	namespace n_UPrisonerAnimInstance_Aerial {
		constexpr auto _upcomingPose = 0x2b8; // EPrisonerFallingPose
		constexpr auto _previousPose = 0x2b9; // EPrisonerFallingPose
		constexpr auto _blendAnimationOverride = 0x2c0; // UAnimSequence*
		constexpr auto _blendAnimationOverrideTime = 0x2c8; // float
		constexpr auto _poseBlendWeight = 0x2cc; // float
		constexpr auto _fallingControl = 0x2d0; // FVector2D
		constexpr auto _fallSpeed = 0x2d8; // float
		constexpr auto _yawRotationRate = 0x2dc; // float
		constexpr auto _isInFirstPersonView = 0x2e0; // bool
		constexpr auto _hasHandBondage = 0x2e1; // bool
		constexpr auto _handsBoundIdleFPAnimation = 0x2e8; // UAnimSequenceBase*
		constexpr auto _handsBoundIdleTPAnimation = 0x2f0; // UAnimSequenceBase*
		constexpr auto _distanceToJumpApexNormalized = 0x2f8; // float
		constexpr auto _legsPoseBeforeJump = 0x2fc; // float
		constexpr auto _movementPaceBeforeJump = 0x300; // EPrisonerMovementPace
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UUI_FoodTooltipPanelFullUse_C {
		constexpr auto Image_1 = 0x2c8; // UImage*
		constexpr auto Image_2 = 0x2d0; // UImage*
		constexpr auto Image_3 = 0x2d8; // UImage*
		constexpr auto Image_5 = 0x2e0; // UImage*
		constexpr auto Image_6 = 0x2e8; // UImage*
		constexpr auto Image_7 = 0x2f0; // UImage*
		constexpr auto UI_TooltipOverviewTextElement = 0x2f8; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_1 = 0x300; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_2 = 0x308; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_3 = 0x310; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_4 = 0x318; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement = 0x320; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_2 = 0x328; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_1 = 0x330; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_2 = 0x338; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_3 = 0x340; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_4 = 0x348; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_5 = 0x350; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_6 = 0x358; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_7 = 0x360; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_8 = 0x368; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_9 = 0x370; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_10 = 0x378; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_11 = 0x380; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_12 = 0x388; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_13 = 0x390; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_14 = 0x398; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_15 = 0x3a0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_16 = 0x3a8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_17 = 0x3b0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_18 = 0x3b8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_19 = 0x3c0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_20 = 0x3c8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_21 = 0x3d0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_22 = 0x3d8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_23 = 0x3e0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_24 = 0x3e8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_25 = 0x3f0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_26 = 0x3f8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_27 = 0x400; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_28 = 0x408; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_37 = 0x410; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_39 = 0x418; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_40 = 0x420; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_41 = 0x428; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_42 = 0x430; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_43 = 0x438; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_44 = 0x440; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_45 = 0x448; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_46 = 0x450; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_47 = 0x458; // UUI_TooltipOverviewTextParameterElement_C*
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_AWater_Bucket_C {
		constexpr auto WaterBucketGameResourceContainer = 0x7c0; // UBasicGameResourceContainerComponent*
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto row = 0x3c; // int32_t
		constexpr auto column = 0x40; // int32_t
	}

	namespace n_UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription {
		constexpr auto ProxyForInfiniteResource = 0xd8; // UGameResourceContainerProxyForInfiniteResource*
	}

	namespace n_URemeshProperties {
		constexpr auto SmoothingStrength = 0x68; // float
		constexpr auto bFlips = 0x6c; // bool
		constexpr auto bSplits = 0x6d; // bool
		constexpr auto bCollapses = 0x6e; // bool
	}

	namespace n_UUI_TabModeTabsContainer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CraftingTab = 0x268; // UUI_TabModeTab_C*
		constexpr auto EventsTab = 0x270; // UUI_TabModeTab_C*
		constexpr auto InventoryTab = 0x278; // UUI_TabModeTab_C*
		constexpr auto JournalTab = 0x280; // UUI_TabModeTab_C*
		constexpr auto MetabolismTab = 0x288; // UUI_TabModeTab_C*
		constexpr auto SquadTab = 0x290; // UUI_TabModeTab_C*
		constexpr auto Tabs = 0x298; // TArray<UUI_TabModeTab_C*>
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UBCU_Body_Monitor_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto BodyMonitorMainVerticalBox = 0x300; // UVerticalBox*
		constexpr auto MinimizableWidgetBodyMonitor = 0x308; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetLevelAttributes = 0x310; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetSickness = 0x318; // UMinimizableWidget_C*
		constexpr auto _color = 0x320; // FLinearColor
		constexpr auto _defaultTitle = 0x330; // FText
		constexpr auto _updateNutritionsTimer = 0x348; // FTimerHandle
		constexpr auto BCUBodyMonitorSizeChangedEventDispatcher = 0x350; // FMulticastInlineDelegate
		constexpr auto _isAlarmOn = 0x360; // bool
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_ATS_Fireworks_Shell_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto RotatingMovement1 = 0x228; // URotatingMovementComponent*
		constexpr auto Shell Trail = 0x230; // UParticleSystemComponent*
		constexpr auto Sphere1 = 0x238; // USphereComponent*
		constexpr auto ProjectileMovement1 = 0x240; // UProjectileMovementComponent*
		constexpr auto BurstShapeScaler_Scale_83FB1B9842F674C2E551BD822515228D = 0x248; // float
		constexpr auto BurstShapeScaler__Direction_83FB1B9842F674C2E551BD822515228D = 0x24c; // ETimelineDirection
		constexpr auto BurstShapeScaler = 0x250; // UTimelineComponent*
		constexpr auto Max Rotation Speed = 0x258; // float
		constexpr auto Min Rotation Speed = 0x25c; // float
		constexpr auto Max Launch Velocity = 0x260; // float
		constexpr auto Min Launch velocity = 0x264; // float
		constexpr auto Shell Max Life = 0x268; // float
		constexpr auto Shell min life = 0x26c; // float
		constexpr auto MaxBurstTime = 0x270; // float
		constexpr auto MinBurstTime = 0x274; // float
		constexpr auto BurstParticleSystem = 0x278; // UParticleSystem*
		constexpr auto BurstStarColors = 0x280; // TArray<FLinearColor>
		constexpr auto SparkleColors = 0x290; // TArray<FLinearColor>
		constexpr auto ShellParticleSystem = 0x2a0; // UParticleSystem*
		constexpr auto ParticleLife = 0x2a8; // float
		constexpr auto BurstTime = 0x2ac; // float
		constexpr auto NumberOfBursts = 0x2b0; // int32_t
		constexpr auto SecondaryBurstDelay = 0x2b4; // float
		constexpr auto FlareColor = 0x2b8; // FLinearColor
		constexpr auto ShellTailColor = 0x2c8; // FLinearColor
		constexpr auto DoShapedBurst = 0x2d8; // bool
		constexpr auto UseShellSmoke = 0x2d9; // bool
		constexpr auto UseBurstSmoke = 0x2da; // bool
		constexpr auto BurstSparkleMultiplier = 0x2dc; // float
		constexpr auto ShellSparkleMultiplier = 0x2e0; // float
		constexpr auto BurstStarMultiplier = 0x2e4; // float
		constexpr auto BlankMaterial = 0x2e8; // UMaterial*
		constexpr auto ShapedBurstActorMesh = 0x2f0; // USkeletalMesh*
		constexpr auto ShapeActor = 0x2f8; // AActor*
		constexpr auto ShapedBurstParticleSystem = 0x300; // UParticleSystemComponent*
		constexpr auto RandomRotation = 0x308; // bool
		constexpr auto silent = 0x309; // bool
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UModularTooltipElement_AffectedBy {
		constexpr auto _sourceTextBlock = 0x2e8; // UTextBlock*
		constexpr auto _affectElementOverlay = 0x2f0; // UOverlay*
	}

	namespace n_AZombieAIController2 {
		constexpr auto _lyingSightSenseConfig = 0x328; // UAISenseConfig_Sight*
		constexpr auto _lyingHearingSenseConfig = 0x330; // UAISenseConfig_Hearing*
		constexpr auto _stateMachineTickIntervalWhenInRelaxedState = 0x338; // float
		constexpr auto _shouldWander = 0x33c; // bool
		constexpr auto _shouldWanderAroundWanderOrigin = 0x33d; // bool
		constexpr auto _maxWanderingRadius = 0x340; // float
		constexpr auto _minTimeToRestBeforeWandering = 0x344; // float
		constexpr auto _maxTimeToRestBeforeWandering = 0x348; // float
		constexpr auto _shouldBecomeAlertedBySight = 0x34c; // bool
		constexpr auto _minLineOfSightDurationToBecomeAlerted = 0x350; // float
		constexpr auto _maxLineOfSightDurationToBecomeAlerted = 0x354; // float
		constexpr auto _shouldBecomeAlertedByHearing = 0x358; // bool
		constexpr auto _minDelayBeforeBecomingAlertedByHearing = 0x35c; // float
		constexpr auto _maxDelayBeforeBecomingAlertedByHearing = 0x360; // float
		constexpr auto _relaxedIdleSightSenseConfig = 0x368; // UAISenseConfig_Sight*
		constexpr auto _relaxedIdleHearingSenseConfig = 0x370; // UAISenseConfig_Hearing*
		constexpr auto _relaxedWanderSightSenseConfig = 0x378; // UAISenseConfig_Sight*
		constexpr auto _relaxedWanderHearingSenseConfig = 0x380; // UAISenseConfig_Hearing*
		constexpr auto _stateMachineTickIntervalWhenInAlertedState = 0x388; // float
		constexpr auto _minObservingForLineOfSightStartDelay = 0x38c; // float
		constexpr auto _maxObservingForLineOfSightStartDelay = 0x390; // float
		constexpr auto _minInvestigateStimulusDelay = 0x394; // float
		constexpr auto _maxInvestigateStimulusDelay = 0x398; // float
		constexpr auto _minEnterCombatModeDelay = 0x39c; // float
		constexpr auto _maxEnterCombatModeDelay = 0x3a0; // float
		constexpr auto _distanceAtWhichToIgnoreEnterCombatModeDelay = 0x3a4; // float
		constexpr auto _observingCurve = 0x3a8; // UCurveVector*
		constexpr auto _observingCurvePeriod = 0x3b0; // float
		constexpr auto _observingCurveMaxYaw = 0x3b4; // float
		constexpr auto _observingCurveMaxPitch = 0x3b8; // float
		constexpr auto _alertedSightSenseConfig = 0x3c0; // UAISenseConfig_Sight*
		constexpr auto _alertedHearingSenseConfig = 0x3c8; // UAISenseConfig_Hearing*
		constexpr auto _stateMachineTickIntervalWhenInCombatState = 0x3d0; // float
		constexpr auto _shouldAttack = 0x3d4; // bool
		constexpr auto _shouldBackOffIfTooCloseToFoe = 0x3d5; // bool
		constexpr auto _shouldPredictFoeLocation = 0x3d6; // bool
		constexpr auto _foeLocationPredictionStrengthVsDistanceToFoe = 0x3d8; // UCurveFloat*
		constexpr auto _attackDistance = 0x3e0; // float
		constexpr auto _minNumConsecutiveInflictedMeleeHitsToIntimidate = 0x3e4; // int32_t
		constexpr auto _maxNumConsecutiveInflictedMeleeHitsToIntimidate = 0x3e8; // int32_t
		constexpr auto _minTimeBeforeFoeIsConsideredUnreachable = 0x3ec; // float
		constexpr auto _maxTimeBeforeFoeIsConsideredUnreachable = 0x3f0; // float
		constexpr auto _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate = 0x3f4; // float
		constexpr auto _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate = 0x3f8; // float
		constexpr auto _costOfJumpingInPathLength = 0x3fc; // float
		constexpr auto _minPathPointDistance = 0x400; // float
		constexpr auto _detectionDelayTimerData = 0x404; // FDetectionDelayTimerData
		constexpr auto _zombie = 0x418; // AZombie2*
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_AZombie2 {
		constexpr auto _navigationInvokerComponent = 0x7b0; // UNavigationInvokerComponent*
		constexpr auto _hitReactComponent = 0x7b8; // UHitReactComponent*
		constexpr auto _baseInteractionComponent = 0x7c0; // UBaseInteractionComponent*
		constexpr auto _meshVariations = 0x7c8; // TArray<FZombieMeshVariation2>
		constexpr auto _relaxedStanceVariations = 0x7d8; // TArray<FZombieRelaxedStanceVariation2>
		constexpr auto _combatStanceVariations = 0x7e8; // TArray<FZombieCombatStanceVariation2>
		constexpr auto _turnMontageDescriptions = 0x7f8; // FZombieTurnMontageDescription [0x4]
		constexpr auto _gettingUpMontage = 0x898; // UAnimMontage*
		constexpr auto _intimidateMontages = 0x8a0; // TArray<UAnimMontage*>
		constexpr auto _attacks = 0x8b0; // TArray<FZombieAttackDescription>
		constexpr auto _hitReactType = 0x8c0; // FGameplayTag
		constexpr auto _explosionDamageMultiplier = 0x8c8; // float
		constexpr auto _ragdollHitImpulseStrengthPerUnitDamage = 0x8cc; // float
		constexpr auto _minDynamicMovementBaseSpeedForRagdoll = 0x8d0; // float
		constexpr auto _eyeViewPointOffset = 0x8d4; // float
		constexpr auto _centralBone = 0x8d8; // FName
		constexpr auto _collisionDamageMultiplierPerBodyPart = 0x8e0; // float [0xc]
		constexpr auto _receivedDamageComboCooldown = 0x910; // float
		constexpr auto _receivedMeleeHitComboCooldown = 0x914; // float
		constexpr auto _inflictedMeleeHitComboCooldown = 0x918; // float
		constexpr auto _minRagdollRecoveryTimeAfterKnockout = 0x91c; // float
		constexpr auto _maxRagdollRecoveryTimeAfterKnockout = 0x920; // float
		constexpr auto _minLandingImpactSpeedForDamage = 0x924; // float
		constexpr auto _landingDamagePerImpactSpeed = 0x928; // float
		constexpr auto _landingImpactSpeedForRagdoll = 0x92c; // float
		constexpr auto _minRagdollRecoveryTimeAfterLanding = 0x930; // float
		constexpr auto _maxRagdollRecoveryTimeAfterLanding = 0x934; // float
		constexpr auto _landingEffects = 0x938; // ULandingEffects*
		constexpr auto _corpseSearchDuration = 0x940; // float
		constexpr auto _corpseMaxLifeTimeInMinutes = 0x944; // float
		constexpr auto _destroyCorpseTimerInterval = 0x948; // float
		constexpr auto _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse = 0x94c; // float
		constexpr auto _packedZombieVariationIndices = 0x950; // uint32_t
		constexpr auto _hitPoints = 0x954; // float
		constexpr auto _inflictedMeleeDamageMultiplier = 0x958; // float
		constexpr auto _health = 0x95c; // float
		constexpr auto _isSearched = 0x960; // bool
		constexpr auto _stance = 0x962; // EZombieStance
		constexpr auto _foe = 0x964; // TWeakObjectPtr<APawn>
		constexpr auto _inflictedDamageMultiplierConfig = 0x9e8; // float
		constexpr auto _fatalBodyPartHit = 0x9ec; // EBodyPart
		constexpr auto _drownDamageCycleLength = 0x9f0; // float
		constexpr auto _drownDamagePerCycle = 0x9f4; // float
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UEditPivotToolProperties {
		constexpr auto bEnableSnapDragging = 0x60; // bool
		constexpr auto RotationMode = 0x61; // EEditPivotSnapDragRotationMode
	}

	namespace n_AWaterBodyLake {
		constexpr auto LakeGenerator = 0xdd0; // ULakeGenerator*
	}

	namespace n_ADeer2 {
		constexpr auto _hartBaseScale = 0xab8; // float
		constexpr auto _hartScaleVariance = 0xabc; // float
		constexpr auto _hindBaseScale = 0xac0; // float
		constexpr auto _hindScaleVariance = 0xac4; // float
		constexpr auto _maleChance = 0xac8; // float
		constexpr auto _isMale = 0xacc; // bool
		constexpr auto _maleSkeletalMesh = 0xad0; // USkeletalMesh*
		constexpr auto _antlerMeshes = 0xad8; // TArray<UStaticMesh*>
		constexpr auto _antlers = 0xae8; // UStaticMeshComponent*
		constexpr auto _hartHind = 0xaf0; // uint32_t
		constexpr auto _maleChoppingRecipeDataAsset = 0xaf8; // UChoppingRecipeDataAsset*
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UTraderManagingComponent {
		constexpr auto _pawnRelevancyRange = 0xd0; // float
		constexpr auto _tradeOutpostsUpdateTime = 0xd4; // float
		constexpr auto _outpostEconomyResetTimeHours = 0xdc; // float
		constexpr auto _outpostPriceDeltasRandomizationTimeHours = 0xe0; // float
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UGroomCreateBindingOptions {
		constexpr auto SourceSkeletalMesh = 0x28; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x38; // int32_t
		constexpr auto MatchingSection = 0x3c; // int32_t
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_UAdminCommandCompletionManager {
		constexpr auto _commands = 0x28; // TMap<FString, UAdminCommand*>
	}

	namespace n_UPrisonerBodySymptom_BreathingObstructed {
		constexpr auto _maxSeverity = 0xb8; // float
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UCraftingInfoWidget {
		constexpr auto ItemWidget = 0x278; // UInspectedItemWidget*
		constexpr auto ComponentsGridPanel = 0x280; // UGridPanel*
		constexpr auto CraftingGridPanel = 0x288; // UGridPanel*
		constexpr auto ComponentsMinimizableWidget = 0x290; // UUserWidget*
		constexpr auto CraftingMinimizableWidget = 0x298; // UUserWidget*
		constexpr auto _itemClass = 0x2a0; // AItem*
		constexpr auto _switchWidgets = 0x2f8; // TArray<UPreviousNextSwitchWidget*>
		constexpr auto _inventoryComponent = 0x308; // TWeakObjectPtr<UPrisonerInventoryComponent>
		constexpr auto _craftingRecipe = 0x310; // FCraftingRecipe
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_ADropZoneDroppable {
		constexpr auto Mesh = 0x220; // UStaticMeshComponent*
		constexpr auto LandSound = 0x228; // UAkAudioEvent*
		constexpr auto _gameEvent = 0x230; // ADropZoneGameEvent*
		constexpr auto _flareParticles0 = 0x240; // UParticleSystemComponent*
		constexpr auto _flareParticles1 = 0x248; // UParticleSystemComponent*
		constexpr auto _flareParticles2 = 0x250; // UParticleSystemComponent*
		constexpr auto _endLocation = 0x260; // FVector
		constexpr auto _fallingSpeed = 0x26c; // float
		constexpr auto _flareParticlesEnabled = 0x270; // bool
		constexpr auto _flareParticlesTeam = 0x274; // int32_t
	}

	namespace n_UUI_Mission_C {
		constexpr auto CompleteObjectiveAnim = 0x288; // UWidgetAnimation*
		constexpr auto StartObjectiveAnim = 0x290; // UWidgetAnimation*
		constexpr auto _background = 0x298; // UImage*
		constexpr auto UI_Objective = 0x2a0; // UUI_Objective_C*
	}

	namespace n_ABP_WeaponBullet_792x57_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USetCollisionGeometryTool {
		constexpr auto Settings = 0x90; // USetCollisionGeometryToolProperties*
		constexpr auto VizSettings = 0x98; // UCollisionGeometryVisualizationProperties*
		constexpr auto CollisionProps = 0xa0; // UPhysicsObjectToolPropertySet*
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewGeom = 0xb0; // UPreviewGeometry*
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UCraftableItem {
		constexpr auto ItemCategory = 0x30; // ECraftingItemCategory
		constexpr auto ItemOrder = 0x34; // int32_t
		constexpr auto CraftedItems = 0x38; // TArray<FCraftingPair>
		constexpr auto Interaction = 0x48; // EInteractionType
		constexpr auto InteractionCaption = 0x50; // FText
		constexpr auto HideItemCaptionInCraftingCaption = 0x68; // bool
		constexpr auto MandatoryItems = 0x70; // TArray<FCraftingItem>
		constexpr auto OptionalItems = 0x80; // TArray<FCraftingItem>
		constexpr auto ToolsNeeded = 0x90; // TArray<FCraftingItem>
		constexpr auto AutoCalculation = 0xa0; // bool
		constexpr auto Skill = 0xa8; // USkill*
		constexpr auto NoSkillLevelData = 0xb0; // FCraftingSkillLevelData
		constexpr auto BasicLevelData = 0xc4; // FCraftingSkillLevelData
		constexpr auto MediumLevelData = 0xd8; // FCraftingSkillLevelData
		constexpr auto AdvancedLevelData = 0xec; // FCraftingSkillLevelData
		constexpr auto CustomCraftingMontage = 0x100; // UAnimMontage*
		constexpr auto StartCraftingAudioEvent = 0x108; // UAkAudioEvent*
		constexpr auto StopCraftingAudioEvent = 0x110; // UAkAudioEvent*
		constexpr auto OnlyForSupporterPack = 0x118; // bool
		constexpr auto AutoCalculateHealth = 0x119; // bool
		constexpr auto AutoCalculateWeight = 0x11a; // bool
		constexpr auto AutoCalculateFoodParameters = 0x11b; // bool
		constexpr auto AlcoholContentMultiplier = 0x11c; // float
		constexpr auto BulletStackAmount = 0x120; // int32_t
	}

	namespace n_UDrinkWaterAssetData {
		constexpr auto ResourceType = 0x30; // UGameResourceType*
		constexpr auto QuantityPerDrink = 0x38; // float
		constexpr auto Salinity = 0x3c; // float
		constexpr auto StartDrinkingAudioEvent = 0x40; // UAkAudioEvent*
		constexpr auto StopDrinkingAudioEvent = 0x48; // UAkAudioEvent*
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UAnimNotifyState_PlaySoundOnOwnerRanged {
		constexpr auto BeginAudioEvent = 0x30; // UAkAudioEvent*
		constexpr auto EndAudioEvent = 0x38; // UAkAudioEvent*
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UWeaponActionReloadSequence {
		constexpr auto AnimationStandAndCrouch = 0x28; // FBodyWeaponAnimation
		constexpr auto AnimationProne = 0x38; // FBodyWeaponAnimation
		constexpr auto CanBeInterrupted = 0x48; // bool
	}

	namespace n_UPrisonerBodyConditionUIData_NutrientDeficiency {
		constexpr auto NutrientUnit = 0x19c; // EConZUnit
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UBP_SphereMotionTriggerComponent_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
	}

	namespace n_UBP_M1_OpenEjectBulletInsertClip_C {
		constexpr auto UberGraphFrame = 0x90; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0x98; // int32_t
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto sortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_ACTFGameEvent {
		constexpr auto FlagClass = 0x598; // ACTFFlag*
		constexpr auto CaptureBaseClass = 0x5a0; // ACTFBase*
		constexpr auto FlagStandClass = 0x5a8; // ACTFFlagStand*
		constexpr auto FlagIconTexture = 0x5b0; // UTexture2D*
		constexpr auto FlagAccentTexture = 0x5b8; // UTexture2D*
		constexpr auto BaseIconTexture = 0x5c0; // UTexture2D*
		constexpr auto BaseAccentTexture = 0x5c8; // UTexture2D*
		constexpr auto EmptyBaseIconTexture = 0x5d0; // UTexture2D*
		constexpr auto EmptyBaseAccentTexture = 0x5d8; // UTexture2D*
		constexpr auto TeamColorA = 0x5e0; // FLinearColor
		constexpr auto TeamColorB = 0x5f0; // FLinearColor
		constexpr auto BlueTeamPickedUpFlagAnnouncement = 0x600; // UAkAudioEvent*
		constexpr auto BlueTeamCapturedFlagAnnouncement = 0x608; // UAkAudioEvent*
		constexpr auto BlueTeamFlagDroppedAnnouncement = 0x610; // UAkAudioEvent*
		constexpr auto BlueTeamFlagReturnedAnnouncement = 0x618; // UAkAudioEvent*
		constexpr auto RedTeamPickedUpFlagAnnouncement = 0x620; // UAkAudioEvent*
		constexpr auto RedTeamCapturedFlagAnnouncement = 0x628; // UAkAudioEvent*
		constexpr auto RedTeamFlagDroppedAnnouncement = 0x630; // UAkAudioEvent*
		constexpr auto RedTeamFlagReturnedAnnouncement = 0x638; // UAkAudioEvent*
		constexpr auto _CTFParameters = 0x640; // FCTFParameters
		constexpr auto _flagA = 0x670; // ACTFFlag*
		constexpr auto _flagB = 0x678; // ACTFFlag*
		constexpr auto _baseA = 0x680; // ACTFBase*
		constexpr auto _baseB = 0x688; // ACTFBase*
	}

	namespace n_AWetnessManager {
		constexpr auto MaxNumberOfActiveWettables = 0x220; // int32_t
		constexpr auto MaxWettableLifeTime = 0x224; // float
		constexpr auto WeatherAndWettableObjectParametersUpdateInterval = 0x228; // float
		constexpr auto WettingRateFromRainVsRainIntensity = 0x230; // UCurveFloat*
		constexpr auto WettingRateFromWaterImmersion = 0x238; // float
		constexpr auto DryingRate = 0x23c; // float
		constexpr auto DryingRateModifierVsTemperature = 0x240; // UCurveFloat*
		constexpr auto DryingRateModifierVsRelativeHumidity = 0x248; // UCurveFloat*
		constexpr auto AirTemperatureModifierWhenNotExposedToSunlight = 0x250; // float
	}

	namespace n_ADropZoneLocationMarker {
		constexpr auto DropZoneParameters = 0x418; // FDropZoneParameters
		constexpr auto SpawnOffsetA = 0x444; // FVector
		constexpr auto SpawnOffsetB = 0x450; // FVector
		constexpr auto SpawnRadiusA = 0x45c; // float
		constexpr auto SpawnRadiusB = 0x460; // float
		constexpr auto CargoDropOffset = 0x470; // FTransform
		constexpr auto CrateDropOffsetA = 0x4a0; // FTransform
		constexpr auto CrateDropOffsetB = 0x4d0; // FTransform
		constexpr auto CrateAPreviewMesh = 0x500; // UStaticMeshComponent*
		constexpr auto CrateBPreviewMesh = 0x508; // UStaticMeshComponent*
		constexpr auto CargoPreviewMesh = 0x510; // UStaticMeshComponent*
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UMagicLeapLightingTrackingComponent {
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_UCircularMenuMusicPlayerToggleInfo {
		constexpr auto InteractionTargetType = 0x80; // EInteractionTargetType
		constexpr auto PrimaryInteractionInfo = 0x88; // FInteractionStruct
		constexpr auto SecondaryInteractionInfo = 0x100; // FInteractionStruct
		constexpr auto PrimaryCaption = 0x178; // FText
		constexpr auto PrimaryIcons = 0x190; // UCircularMenuSegmentIcons*
		constexpr auto SecondaryCaption = 0x198; // FText
		constexpr auto SecondaryIcons = 0x1b0; // UCircularMenuSegmentIcons*
		constexpr auto IsPrimaryActive = 0x1b8; // bool
		constexpr auto MusicPlayerCommandType = 0x1b9; // EMusicPlayerCommandType
		constexpr auto _interactionInitiator = 0x1c0; // APrisoner*
		constexpr auto _interactableObject = 0x1c8; // UObject*
	}

	namespace n_UDrawPolygonToolStandardProperties {
		constexpr auto PolygonType = 0x60; // EDrawPolygonDrawMode
		constexpr auto OutputMode = 0x61; // EDrawPolygonOutputMode
		constexpr auto FeatureSizeRatio = 0x64; // float
		constexpr auto ExtrudeHeight = 0x68; // float
		constexpr auto Steps = 0x6c; // int32_t
		constexpr auto bAllowSelfIntersections = 0x70; // bool
		constexpr auto bShowGizmo = 0x71; // bool
	}

	namespace n_UItemTooltipPanelElement {
		constexpr auto _elementName = 0x278; // FName
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_AWaterBodyCustom {
		constexpr auto CustomGenerator = 0xdd0; // UCustomMeshGenerator*
	}

	namespace n_UWeaponActionCheckAmmoSequence {
		constexpr auto Animations = 0x28; // FBodyWeaponAnimation
		constexpr auto CanBeInterrupted = 0x38; // bool
	}

	namespace n_UBP_WeaponScopeWidget_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x298; // UWidgetAnimation*
		constexpr auto FadeIn = 0x2a0; // UWidgetAnimation*
		constexpr auto BlackBG = 0x2a8; // UBorder*
		constexpr auto BorderLeft = 0x2b0; // UBorder*
		constexpr auto BorderRight = 0x2b8; // UBorder*
		constexpr auto Reticle = 0x2c0; // UImage*
		constexpr auto ScaleBox_1 = 0x2c8; // UScaleBox*
		constexpr auto SizeBox_1 = 0x2d0; // USizeBox*
		constexpr auto SizeBox_2 = 0x2d8; // USizeBox*
		constexpr auto GeometrySize = 0x2e0; // FVector2D
		constexpr auto GeometrySizeHalf = 0x2e8; // FVector2D
		constexpr auto FadeInSpeed = 0x2f0; // float
		constexpr auto FadeOutSpeed = 0x2f4; // float
		constexpr auto OnShowDelay = 0x2f8; // float
		constexpr auto ShouldBeHidden = 0x2fc; // bool
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UAdminCommand_SpawnPrimaryActorAsset {
		constexpr auto _primaryAssetType = 0x80; // FPrimaryAssetType
		constexpr auto _primaryAssetsToExclude = 0x88; // TSet<FPrimaryAssetId>
		constexpr auto _countArgumentMinValue = 0xd8; // int32_t
		constexpr auto _countArgumentMaxValue = 0xdc; // int32_t
		constexpr auto _spawnOffset = 0xe0; // FVector
	}

	namespace n_UPrisonerDebugUI_MainWidget {
		constexpr auto _prisonersComboBox = 0x260; // UComboBoxString*
		constexpr auto _lifeTimeTextBlock = 0x268; // UTextBlock*
		constexpr auto _strengthTextBlock = 0x270; // UTextBlock*
		constexpr auto _constitutionTextBlock = 0x278; // UTextBlock*
		constexpr auto _dexterityTextBlock = 0x280; // UTextBlock*
		constexpr auto _intelligenceTextBlock = 0x288; // UTextBlock*
		constexpr auto _healthTextBlock = 0x290; // UTextBlock*
		constexpr auto _bodyTemperatureTextBlock = 0x298; // UTextBlock*
		constexpr auto _apparentTemperatureTextBlock = 0x2a0; // UTextBlock*
		constexpr auto _clothesTemperatureTextBlock = 0x2a8; // UTextBlock*
		constexpr auto _skillsListView = 0x2b0; // UListView*
		constexpr auto _bodyConditionsListView = 0x2b8; // UListView*
		constexpr auto _data = 0x2c8; // UPrisonerUIData*
		constexpr auto _tooltipCache = 0x2d0; // UPrisonerUITooltipCache*
		constexpr auto _dataRequestTimerInterval = 0x2dc; // float
		constexpr auto _dataApplyTimerInterval = 0x2e4; // float
	}

	namespace n_UProceduralRoundedRectangleToolProperties {
		constexpr auto CornerRadius = 0x80; // float
		constexpr auto CornerSlices = 0x84; // int32_t
	}

	namespace n_UChainsawAnimInstance {
		constexpr auto _isTurnedOn = 0x2d0; // bool
	}

	namespace n_UMetabolismAdvancedProgressBar {
		constexpr auto Title = 0x260; // FText
		constexpr auto _progressBarEffect = 0x278; // URetainerBox*
		constexpr auto _titleText = 0x280; // UTextBlock*
		constexpr auto _valueText = 0x288; // UTextBlock*
		constexpr auto _apbSize = 0x290; // USizeBox*
		constexpr auto _progressBarBackground = 0x298; // UImage*
		constexpr auto _defaultValue = 0x2a0; // FText
		constexpr auto _fontStyle = 0x2b8; // FMetabolismAPBFontStyle
		constexpr auto _progressBarPadding = 0x2e8; // FMargin
		constexpr auto _size = 0x2f8; // FVector2D
		constexpr auto _backgroundImageBrush = 0x300; // FSlateBrush
		constexpr auto _normalBackgroundColor = 0x388; // FDataTableRowHandle
		constexpr auto _normalForegroundColor = 0x398; // FDataTableRowHandle
		constexpr auto _normalTextColorEmpty = 0x3a8; // FDataTableRowHandle
		constexpr auto _normalTextColorFilled = 0x3b8; // FDataTableRowHandle
		constexpr auto _alertedBackgroundColor = 0x3c8; // FDataTableRowHandle
		constexpr auto _alertedForegroundColor = 0x3d8; // FDataTableRowHandle
		constexpr auto _alertedTextColorEmpty = 0x3e8; // FDataTableRowHandle
		constexpr auto _alertedTextColorFilled = 0x3f8; // FDataTableRowHandle
		constexpr auto _badBackgroundColor = 0x408; // FDataTableRowHandle
		constexpr auto _badForegroundColor = 0x418; // FDataTableRowHandle
		constexpr auto _badTextColorEmpty = 0x428; // FDataTableRowHandle
		constexpr auto _badTextColorFilled = 0x438; // FDataTableRowHandle
		constexpr auto _goodBackgroundColor = 0x448; // FDataTableRowHandle
		constexpr auto _goodForegroundColor = 0x458; // FDataTableRowHandle
		constexpr auto _goodTextColorEmpty = 0x468; // FDataTableRowHandle
		constexpr auto _goodTextColorFilled = 0x478; // FDataTableRowHandle
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UGloveStatsTag {
		constexpr auto ElectricalDamageModifier = 0x30; // float
		constexpr auto LockpkickingPressureModifier = 0x34; // float
	}

	namespace n_AItemSpawnerVolume {
		constexpr auto zone = 0x258; // FItemLocation
		constexpr auto ItemHealthMultiplier = 0x268; // float
		constexpr auto ProbabilityMultiplier = 0x26c; // float
		constexpr auto ExamineProbabilityMultiplier = 0x270; // float
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UBP_M1_OpenInsertClipInsertBulletLoop_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
	}

	namespace n_AFireworksItem {
		constexpr auto _isFiring = 0x7c0; // bool
		constexpr auto _totalShells = 0x7c8; // int32_t
		constexpr auto _secondsBetweenLaunches = 0x7d8; // float
		constexpr auto _noiseLoudnessOnLaunch = 0x7dc; // float
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_ATimeControllableLight {
		constexpr auto _shouldExistOnDedicatedServer = 0x230; // bool
		constexpr auto _intensityVsTimeOfDayCurve = 0x238; // UCurveFloat*
		constexpr auto _pointLightComponent = 0x240; // UPointLightComponent*
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_ULiveLinkAnimationRoleToTransform {
		constexpr auto BoneName = 0x28; // FName
	}

	namespace n_AConZWaterSplineOcean {
		constexpr auto FollowCamera = 0x2b8; // bool
		constexpr auto OceanOpacityMaskTexture = 0x2c0; // UTexture2D*
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UAnimNotify_PlaySoundBySurface {
		constexpr auto AudioEvent = 0x38; // UAkAudioEvent*
		constexpr auto TraceChannel = 0x40; // ECollisionChannel
	}

	namespace n_UUI_CriminalRecordText_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto MainBorder = 0x280; // UBorder*
		constexpr auto TitleText = 0x288; // UTextBlock*
		constexpr auto ValueText = 0x290; // UTextBlock*
		constexpr auto HasLeftBorder = 0x298; // bool
		constexpr auto Title = 0x2a0; // FText
		constexpr auto Value = 0x2b8; // FText
		constexpr auto TitleFontSize = 0x2d0; // int32_t
		constexpr auto ValueFontSize = 0x2d4; // int32_t
		constexpr auto TitlePadding = 0x2d8; // FMargin
		constexpr auto ValuePadding = 0x2e8; // FMargin
		constexpr auto ValueAlignment = 0x2f8; // EHorizontalAlignment
	}

	namespace n_UPrisonerBodyCondition_KillBoxGasPoisoning {
		constexpr auto _maxSeverity = 0xa8; // float
		constexpr auto _poisoningDuration = 0xac; // float
		constexpr auto _poisoningTriggerCooldown = 0xb0; // float
		constexpr auto _poisoningTriggerTimer = 0xb4; // float
		constexpr auto _recoveryDuration = 0xb8; // float
		constexpr auto _damagedEffectTriggerInterval = 0xbc; // float
		constexpr auto _damagedEffectDuration = 0xc0; // float
		constexpr auto _damagedEffectIntensity = 0xc4; // float
		constexpr auto _state = 0xcc; // EPrisonerBodyConditionState
		constexpr auto _severityRatio = 0xd4; // float
		constexpr auto _severityRatioAtRecoveryStart = 0xd8; // float
		constexpr auto _drunkenness = 0xdc; // float
	}

	namespace n_APrisonerCorpse {
		constexpr auto StrippedStaticMeshData = 0x3f8; // TArray<FCorpseStaticMeshRepData>
		constexpr auto StrippedSkeletalMeshData = 0x408; // TArray<FCorpseSkeletalMeshRepData>
		constexpr auto StandardStaticMeshData = 0x418; // TArray<FCorpseStaticMeshRepData>
		constexpr auto StandardSkeletalMeshData = 0x428; // TArray<FCorpseSkeletalMeshRepData>
		constexpr auto HeadlessChoppingRecipeDataAsset = 0x438; // UChoppingRecipeDataAsset*
		constexpr auto LivingClass = 0x440; // APrisoner*
		constexpr auto GibClass = 0x448; // AGib*
		constexpr auto HeadExplosionParticles = 0x450; // UParticleSystem*
		constexpr auto HeadExplodedMesh = 0x458; // USkeletalMesh*
		constexpr auto HeadExplosionGibMeshes = 0x460; // TArray<UStaticMesh*>
		constexpr auto PenisMeshData = 0x470; // FCorpseSkeletalMeshRepData
		constexpr auto StrippedPenisMeshData = 0x4e0; // FCorpseSkeletalMeshRepData
		constexpr auto CensorMesh = 0x550; // UStaticMesh*
		constexpr auto CensorMesh2 = 0x558; // UStaticMesh*
		constexpr auto CensorMaterial = 0x560; // UMaterial*
		constexpr auto PenisComponent = 0x568; // USkeletalMeshComponent*
		constexpr auto GenitalsCensorComponent = 0x570; // UStaticMeshComponent*
		constexpr auto PenisCensorComponent = 0x578; // UStaticMeshComponent*
		constexpr auto LeftBreastCensorComponent = 0x580; // UStaticMeshComponent*
		constexpr auto RightBreastCensorComponent = 0x588; // UStaticMeshComponent*
		constexpr auto Headless = 0x590; // bool
		constexpr auto _gender = 0x591; // EGender
		constexpr auto _fatness = 0x594; // float
		constexpr auto _skinniness = 0x598; // float
		constexpr auto _breastSize = 0x59c; // float
		constexpr auto _penisSize = 0x5a0; // float
		constexpr auto _appearanceIndex = 0x5a4; // int32_t
		constexpr auto _penisLocationSkinny = 0x5a8; // FVector
		constexpr auto _penisLocationFat = 0x5b4; // FVector
		constexpr auto _penisShowing = 0x5c0; // bool
		constexpr auto _breastsShowing = 0x5c1; // bool
		constexpr auto _hairLength = 0x5c4; // float
		constexpr auto _facialHairLength = 0x5c8; // float
		constexpr auto _userProfileName = 0x5d0; // FString
		constexpr auto _serverUserProfileId = 0x5e0; // FDbIntegerId
		constexpr auto _killerServerUserProfileId = 0x5e8; // FDbIntegerId
		constexpr auto _killClaimFamePointsReward = 0x5f0; // float
		constexpr auto _killClaimed = 0x5f4; // bool
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UBaseCreateFromSelectedTool {
		constexpr auto TransformProperties = 0x98; // UTransformInputsToolProperties*
		constexpr auto HandleSourcesProperties = 0xa0; // UBaseCreateFromSelectedHandleSourceProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto TransformProxies = 0xb0; // TArray<UTransformProxy*>
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformInitialScales = 0xd0; // TArray<FVector>
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_AWeaponItem {
		constexpr auto SizeXInHands = 0x7c0; // uint32_t
		constexpr auto SizeYInHands = 0x7c4; // uint32_t
		constexpr auto MinRange = 0x7c8; // uint32_t
		constexpr auto MaxRange = 0x7cc; // uint32_t
		constexpr auto AP = 0x7d0; // uint32_t
		constexpr auto MagazineSize = 0x7d4; // uint32_t
		constexpr auto FireModes = 0x7d8; // uint32_t
		constexpr auto ROF = 0x7dc; // uint32_t
		constexpr auto ReloadTime = 0x7e0; // uint32_t
	}

	namespace n_ASentryAIController2 {
		constexpr auto _canHear = 0x3e0; // bool
		constexpr auto _canSee = 0x3e1; // bool
		constexpr auto _currentSightSenseConfig = 0x3e8; // UAISenseConfig_Sight*
		constexpr auto _currentHearingSenseConfig = 0x3f0; // UAISenseConfig_Hearing*
		constexpr auto _sightSenseConfigPatrolling = 0x3f8; // UAISenseConfig_Sight*
		constexpr auto _sightSenseConfigAlerted = 0x400; // UAISenseConfig_Sight*
		constexpr auto _sightSenseConfigCombat = 0x408; // UAISenseConfig_Sight*
		constexpr auto _hearingSenseConfigPatrolling = 0x410; // UAISenseConfig_Hearing*
		constexpr auto _hearingSenseConfigAlerted = 0x418; // UAISenseConfig_Hearing*
		constexpr auto _hearingSenseConfigCombat = 0x420; // UAISenseConfig_Hearing*
		constexpr auto _spottingTimeDecayMultiplier = 0x428; // float
		constexpr auto _forgetKnownEnemyTime = 0x42c; // float
		constexpr auto _noiseStimuliBeforeInstantlyLocatingCharacter = 0x430; // int32_t
		constexpr auto _specialNoiseTags = 0x438; // TArray<FName>
		constexpr auto _timeUntilNoiseStimuliCounterReset = 0x448; // float
		constexpr auto _threatLevelAccumulationMultiplier = 0x458; // float
		constexpr auto _onHearNoiseThreatLevelIncrease = 0x45c; // float
		constexpr auto _onDamageTakeThreatLevelIncrease = 0x460; // float
		constexpr auto _switchTargetCharacterTime = 0x468; // float
		constexpr auto _detectionDelayTimerData = 0x46c; // FDetectionDelayTimerData
		constexpr auto _distanceWhenConsideredCharacterEnteredHotZone = 0x47c; // float
		constexpr auto _maxDistanceWhenTemporaryPointIsConsideredTooClose = 0x480; // float
		constexpr auto _temporaryPatrolPointVisitsUntilDeleted = 0x484; // int32_t
		constexpr auto _checkSurroundingsTime = 0x48c; // float
		constexpr auto _checkSurroundingsAngle = 0x494; // float
		constexpr auto _investigatingLocationOverallTime = 0x49c; // float
		constexpr auto _investigatingLocationTime = 0x4a4; // float
		constexpr auto _investigatingBuildingTime = 0x4ac; // float
		constexpr auto _guardLocationTime = 0x4d8; // float
		constexpr auto _guardLocationSwitchFocusTime = 0x4e0; // float
		constexpr auto _enemySpottedWarningTime = 0x508; // float
		constexpr auto _maxTolerance = 0x510; // float
		constexpr auto _toleranceIncreaseForObedience = 0x518; // float
		constexpr auto _enemySpottedOutOfSightTimeLimit = 0x51c; // float
		constexpr auto _distanceWhenConsideredCharacterLeavingHotZone = 0x528; // float
		constexpr auto _freezeCheckTime = 0x52c; // float
		constexpr auto _freezeCheckToleranceDrainMultiplier = 0x530; // float
		constexpr auto _numberOfWarningShots = 0x534; // int32_t
		constexpr auto _raiseHandsCheckTime = 0x53c; // float
		constexpr auto _raiseHandsCheckToleranceDrainMultiplier = 0x540; // float
		constexpr auto _walkAwayCheckToleranceDrainMultiplier = 0x544; // float
		constexpr auto _movingToHotZoneToleranceDrainMultiplier = 0x548; // float
		constexpr auto _minMovingToHotZoneRange = 0x54c; // float
		constexpr auto _otherToleranceDrainMultiplier = 0x550; // float
		constexpr auto _minimumAlertedTime = 0x554; // float
		constexpr auto _observeEnemyMovementTime = 0x55c; // float
		constexpr auto _observeEnemyMovementOpenFireThreshold = 0x564; // float
		constexpr auto _beginShootingTime = 0x574; // float
		constexpr auto _combatSwitchVariationTimeMin = 0x584; // float
		constexpr auto _combatSwitchVariationTimeMax = 0x588; // float
		constexpr auto _maxFireRateTime = 0x594; // float
		constexpr auto _fireRateAccumulationSpeed = 0x59c; // float
		constexpr auto _startingHighFireRate = 0x5a0; // float
		constexpr auto _highFireRateSpreadMultiplier = 0x5a4; // float
		constexpr auto _highPrecisionShotAimTime = 0x5ac; // float
		constexpr auto _highPrecisionShotCooldownTime = 0x5b0; // float
		constexpr auto _combatMoveCloserDistance = 0x5b8; // float
		constexpr auto _combatDistance = 0x5bc; // float
		constexpr auto _noWeaponLineOfSightTime = 0x5cc; // float
		constexpr auto _combatNoSightTime = 0x5d4; // float
		constexpr auto _searchForEnemyAfterLostStimulusTime = 0x5dc; // float
		constexpr auto _combatLostSightInvestigateLocationTime = 0x5e0; // float
		constexpr auto _distanceFromActorWhenInvestigationLocationIsChanged = 0x5e8; // float
		constexpr auto _relocatingAngle = 0x5ec; // float
		constexpr auto _relocatingRadius = 0x5f0; // float
		constexpr auto _destroyingVehicleGiveUpTime = 0x5f4; // float
		constexpr auto _maximumOperatingRadius = 0x61c; // float
		constexpr auto _movingAwayHalfAngleDegrees = 0x62c; // float
		constexpr auto _movingTowardsHalfAngleDegrees = 0x634; // float
		constexpr auto _acceptanceRadius = 0x63c; // float
		constexpr auto _timeToBeConsideredStuck = 0x650; // float
	}

	namespace n_UVisionEffectsComponent {
		constexpr auto PostProcessPriority = 0xb8; // float
		constexpr auto FadeOutMaterial = 0xc0; // UMaterialInterface*
		constexpr auto LowLightVisionMaterial = 0xc8; // UMaterialInterface*
		constexpr auto NightVisionMaterial = 0xd0; // UMaterialInterface*
		constexpr auto NightVisionBlendInDuration = 0xd8; // float
		constexpr auto NightVisionBlendOutDuration = 0xdc; // float
		constexpr auto AnimalEyesMaterialParameterCollection = 0xe0; // UMaterialParameterCollection*
		constexpr auto AnimalEyesEmissiveMaterialName = 0xe8; // FName
		constexpr auto AnimalEyesEmissiveValueWhenNightVisionIsEnabled = 0xf0; // float
		constexpr auto FlashbangEffectMaterial = 0xf8; // UMaterialInterface*
		constexpr auto FallingBlurMaterial = 0x100; // UMaterialInterface*
		constexpr auto TakenDamageMaterial = 0x108; // UMaterialInterface*
		constexpr auto TakenDamageMaterialParameterCollection = 0x110; // UMaterialParameterCollection*
		constexpr auto TakenDamageBlurIntensityParameterName = 0x118; // FName
		constexpr auto TakenDamageStainsIntensityParameterName = 0x120; // FName
		constexpr auto TakenDamageVignetteIntensityParameterName = 0x128; // FName
		constexpr auto TakenDamageBlurShapeCurve = 0x130; // UCurveFloat*
		constexpr auto TakenDamageBlurIntensityCurve = 0x138; // UCurveFloat*
		constexpr auto TakenDamageBlurDurationCurve = 0x140; // UCurveFloat*
		constexpr auto TakenDamageStainsShapeCurve = 0x148; // UCurveFloat*
		constexpr auto TakenDamageStainsIntensityCurve = 0x150; // UCurveFloat*
		constexpr auto TakenDamageStainsDurationCurve = 0x158; // UCurveFloat*
		constexpr auto TakenDamageVignetteShapeCurve = 0x160; // UCurveFloat*
		constexpr auto TakenDamageVignetteIntensityCurve = 0x168; // UCurveFloat*
		constexpr auto TakenDamageVignetteDurationCurve = 0x170; // UCurveFloat*
		constexpr auto TakenDamageMaxChromaticAberration = 0x178; // float
		constexpr auto TakenDamageCameraShakeClass = 0x180; // UMatineeCameraShake*
		constexpr auto TakenDamageCameraShakeScaleCurve = 0x188; // UCurveFloat*
		constexpr auto TacticsEffectMaterial = 0x190; // UMaterialInterface*
		constexpr auto FocusModeMaterial = 0x198; // UMaterialInterface*
		constexpr auto DoubleVisionMaterial = 0x1a0; // UMaterialInterface*
		constexpr auto DoubleVisionIntensityParameterName = 0x1a8; // FName
		constexpr auto UnderwaterBlurMaterial = 0x1b0; // UMaterialInterface*
		constexpr auto UnderwaterDivingMaskMaterial = 0x1b8; // UMaterialInterface*
		constexpr auto PhotoModeTransitionMaterial = 0x1c0; // UMaterialInterface*
		constexpr auto ScopeZoomMaterial = 0x1c8; // UMaterialInterface*
		constexpr auto ScopeZoomBlendPPParameterName = 0x1d0; // FName
		constexpr auto ScopeZoomBlackoutDensityParameterName = 0x1d8; // FName
		constexpr auto ScopeZoomChromaticAberrationDampeningParameterName = 0x1e0; // FName
		constexpr auto ScopeZoomCrosshairBaseScaleParameterName = 0x1e8; // FName
		constexpr auto ScopeZoomCrosshairDepthOffsetMultiplierParameterName = 0x1f0; // FName
		constexpr auto ScopeZoomCrosshairScaleMultiplierParameterName = 0x1f8; // FName
		constexpr auto ScopeZoomDistortionPowerParameterName = 0x200; // FName
		constexpr auto ScopeZoomDistortionScaleParameterName = 0x208; // FName
		constexpr auto ScopeZoomEyeDistanceBlackoutMultiplierParameterName = 0x210; // FName
		constexpr auto ScopeZoomGlowIntensityAtNightParameterName = 0x218; // FName
		constexpr auto ScopeZoomLensDepthOffsetMultiplierParameterName = 0x220; // FName
		constexpr auto ScopeZoomLensScaleParameterName = 0x228; // FName
		constexpr auto ScopeZoomLensUIScaleParameterName = 0x230; // FName
		constexpr auto ScopeZoomLensZoomParameterName = 0x238; // FName
		constexpr auto ScopeZoomOptimalEyeDistanceParameterName = 0x240; // FName
		constexpr auto ScopeZoomCrosshairCenterScreenOffsetParameterName = 0x248; // FName
		constexpr auto ScopeZoomLensCenterScreenOffsetParameterName = 0x250; // FName
		constexpr auto ScopeZoomCrosshairParameterName = 0x258; // FName
		constexpr auto ScopeZoomCrosshairColorParameterName = 0x260; // FName
		constexpr auto ScopeZoomCrosshairColorAtNightParameterName = 0x268; // FName
		constexpr auto ScopeZoomCrosshairGlowColorParameterName = 0x270; // FName
		constexpr auto ScopeZoomDirtMaskParameterName = 0x278; // FName
		constexpr auto ScopeZoomDirtinessParameterName = 0x280; // FName
		constexpr auto ScopeZoomDarkeningParameterName = 0x288; // FName
		constexpr auto ScopeZoomLensNormalMapParameterName = 0x290; // FName
		constexpr auto ScopeZoomLensUIParameterName = 0x298; // FName
		constexpr auto InjuryMaterial = 0x2a0; // UMaterialInterface*
		constexpr auto TraumaMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto BulletHitMaterial = 0x2b0; // UMaterialInterface*
		constexpr auto SickMaterial = 0x2b8; // UMaterialInterface*
		constexpr auto ColdMaterial = 0x2c0; // UMaterialInterface*
		constexpr auto HotMaterial = 0x2c8; // UMaterialInterface*
		constexpr auto FatigueMaterial = 0x2d0; // UMaterialInterface*
		constexpr auto HallucinationMaterial = 0x2d8; // UMaterialInterface*
		constexpr auto RadiationMaterial = 0x2e0; // UMaterialInterface*
		constexpr auto BlackoutMaterial = 0x2e8; // UMaterialInterface*
		constexpr auto BlurredVisionMaterial = 0x2f0; // UMaterialInterface*
		constexpr auto _postProcessSettings = 0x300; // FPostProcessSettings
		constexpr auto _doubleVisionIntensityMaterialInstance = 0xe18; // UMaterialInstanceDynamic*
		constexpr auto _headgearOverlayMaterialInstance = 0xe20; // UMaterialInterface*
		constexpr auto _scopeZoomMaterialInstance = 0xe28; // UMaterialInstanceDynamic*
		constexpr auto _fallingBlurMaterialInstance = 0xe30; // UMaterialInstanceDynamic*
		constexpr auto _underwaterPostProcessingCurrent = 0xe38; // UMaterialInterface*
		constexpr auto _underwaterPostProcessingLast = 0xe40; // UMaterialInterface*
		constexpr auto _underwaterPostProcessingBlendTime = 0xe48; // float
		constexpr auto _DOFBlurTime = 0xe54; // float
		constexpr auto _DOFClearBlurTime = 0xe58; // float
		constexpr auto _DOFScopingBlurTime = 0xe5c; // float
		constexpr auto _DOFBlurDistanceADS = 0xe60; // float
		constexpr auto _DOFFstopADS = 0xe64; // float
		constexpr auto _injuryMaterial = 0xe68; // UMaterialInstanceDynamic*
		constexpr auto _traumaMaterial = 0xe78; // UMaterialInstanceDynamic*
		constexpr auto _hallucinationMaterial = 0xe88; // UMaterialInstanceDynamic*
		constexpr auto _bulletHitMaterial = 0xe98; // UMaterialInstanceDynamic*
		constexpr auto _sickMaterial = 0xea8; // UMaterialInstanceDynamic*
		constexpr auto _coldMaterial = 0xeb8; // UMaterialInstanceDynamic*
		constexpr auto _hotMaterial = 0xec8; // UMaterialInstanceDynamic*
		constexpr auto _fatigueMaterial = 0xed8; // UMaterialInstanceDynamic*
		constexpr auto _radiationMaterial = 0xee8; // UMaterialInstanceDynamic*
		constexpr auto _blackoutMaterial = 0xef8; // UMaterialInstanceDynamic*
		constexpr auto _blurredVisionMaterial = 0xf08; // UMaterialInstanceDynamic*
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_UAmmunitionBoneListAssetData {
		constexpr auto CartridgeBoneNames = 0x28; // TArray<FName>
	}

	namespace n_UTabContainer {
		constexpr auto _containerContent = 0x290; // UNamedSlot*
		constexpr auto _previous = 0x298; // EUINavigation
		constexpr auto _next = 0x299; // EUINavigation
		constexpr auto _in = 0x29a; // EUINavigation
		constexpr auto _canWrap = 0x29b; // bool
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UDrawAndRevolveTool {
		constexpr auto ControlPointsMechanic = 0xf8; // UCurveControlPointsMechanic*
		constexpr auto PlaneMechanic = 0x100; // UConstructionPlaneMechanic*
		constexpr auto Settings = 0x108; // URevolveToolProperties*
		constexpr auto MaterialProperties = 0x110; // UNewMeshMaterialProperties*
		constexpr auto Preview = 0x118; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UUI_NotificationWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto NotificationSize = 0x288; // USizeBox*
		constexpr auto Text = 0x290; // UTextBlock*
		constexpr auto NotificationWidth = 0x298; // float
		constexpr auto NotificationMaxHeight = 0x29c; // float
		constexpr auto Animating = 0x2a0; // bool
		constexpr auto Dismissed = 0x2a1; // bool
		constexpr auto ScaleFactor = 0x2a4; // float
		constexpr auto HorizontalScaleSpeed = 0x2a8; // float
		constexpr auto VerticalScaleSpeed = 0x2ac; // float
		constexpr auto LifeSpan = 0x2b0; // float
		constexpr auto temporary = 0x2b4; // bool
		constexpr auto notificationName = 0x2b8; // FText
	}

	namespace n_UUI_CTFParticipantStatsWidget_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Assists = 0x320; // UTextBlock*
		constexpr auto BgRow = 0x328; // UHorizontalBox*
		constexpr auto Border_1 = 0x330; // UBorder*
		constexpr auto Border_2 = 0x338; // UBorder*
		constexpr auto Border_384 = 0x340; // UBorder*
		constexpr auto Border_386 = 0x348; // UBorder*
		constexpr auto Border_387 = 0x350; // UBorder*
		constexpr auto Border_388 = 0x358; // UBorder*
		constexpr auto Border_389 = 0x360; // UBorder*
		constexpr auto Captures = 0x368; // UTextBlock*
		constexpr auto Deaths = 0x370; // UTextBlock*
		constexpr auto Headshots = 0x378; // UTextBlock*
		constexpr auto InactiveOverlay = 0x380; // UBorder*
		constexpr auto Kills = 0x388; // UTextBlock*
		constexpr auto Number = 0x390; // UTextBlock*
		constexpr auto NumberBorder = 0x398; // UBorder*
		constexpr auto PlayerName = 0x3a0; // UTextBlock*
		constexpr auto Score = 0x3a8; // UTextBlock*
		constexpr auto SelectedOverlay = 0x3b0; // UBorder*
		constexpr auto StatRow = 0x3b8; // UHorizontalBox*
	}

	namespace n_UPrisonerActionLoadAmmoIntoMagazine {
		constexpr auto _itemActionSequence = 0x110; // UItemActionSequenceLoadMagazine*
	}

	namespace n_USmoothHoleFillProperties {
		constexpr auto bConstrainToHoleInterior = 0x60; // bool
		constexpr auto RemeshingExteriorRegionWidth = 0x64; // int32_t
		constexpr auto SmoothingExteriorRegionWidth = 0x68; // int32_t
		constexpr auto SmoothingInteriorRegionWidth = 0x6c; // int32_t
		constexpr auto InteriorSmoothness = 0x70; // float
		constexpr auto FillDensityScalar = 0x78; // double
		constexpr auto bProjectDuringRemesh = 0x80; // bool
	}

	namespace n_UTransformMeshesToolProperties {
		constexpr auto TransformMode = 0x60; // ETransformMeshesTransformMode
		constexpr auto bSetPivot = 0x61; // bool
		constexpr auto bEnableSnapDragging = 0x62; // bool
		constexpr auto SnapDragSource = 0x63; // ETransformMeshesSnapDragSource
		constexpr auto RotationMode = 0x64; // ETransformMeshesSnapDragRotationMode
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_AWaterBodyOcean {
		constexpr auto OceanGenerator = 0xdd0; // UOceanGenerator*
		constexpr auto CollisionExtents = 0xdd8; // FVector
		constexpr auto HeightOffset = 0xde4; // float
	}

	namespace n_UTraderForPlayerAndDepotItemResponse {
		constexpr auto _payload = 0x28; // ATrader*
	}

	namespace n_UPrisonerBodySymptom_StomachFullness {
		constexpr auto _severityVsStomachFullness = 0xb8; // FRuntimeFloatCurve
		constexpr auto _eatingSpeedModifierVsSeverity = 0x140; // FRuntimeFloatCurve
	}

	namespace n_UABP_ChristmasGhost_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalRefPose = 0x2f8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_Slot = 0x310; // FAnimNode_Slot
	}

	namespace n_UMetabolismSkillProgressionTab {
		constexpr auto SkillProgressBarWidgetClass = 0x260; // UUserWidget*
		constexpr auto _skillsWrapBox = 0x268; // UWrapBox*
		constexpr auto _skillType = 0x278; // ESkillAttribute
		constexpr auto _skillAttributeName = 0x280; // FText
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x448; // int32_t
		constexpr auto SectionBaseY = 0x44c; // int32_t
		constexpr auto ComponentSizeQuads = 0x450; // int32_t
		constexpr auto SubsectionSizeQuads = 0x454; // int32_t
		constexpr auto NumSubsections = 0x458; // int32_t
		constexpr auto OverrideMaterial = 0x460; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x468; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x470; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x480; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x490; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x4a0; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4b0; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4c0; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4d0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4e0; // float
		constexpr auto HeightmapScaleBias = 0x4f0; // FVector4
		constexpr auto CachedLocalBox = 0x500; // FBox
		constexpr auto CollisionComponent = 0x51c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x538; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x540; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x550; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x560; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x568; // FGuid
		constexpr auto IrrelevantLights = 0x578; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x588; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x58c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x590; // float
		constexpr auto PositiveZBoundsExtension = 0x594; // float
		constexpr auto StaticLightingResolution = 0x598; // float
		constexpr auto ForcedLOD = 0x59c; // int32_t
		constexpr auto LODBias = 0x5a0; // int32_t
		constexpr auto StateId = 0x5a4; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5b4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5c8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5d0; // char
		constexpr auto MobileMaterialInterface = 0x5d8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5e0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5f0; // TArray<UTexture2D*>
	}

	namespace n_ABP_WeaponBullet_WoodenArrowMetalTip_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UComplexAnimal2AnimInstance {
		constexpr auto CurrentAction = 0x2f0; // EAnimalAction
		constexpr auto HeadLookRight = 0x2f4; // float
		constexpr auto HeadLookUp = 0x2f8; // float
		constexpr auto HeadMovementLerpSpeed = 0x2fc; // float
		constexpr auto AngularVelocity = 0x300; // float
		constexpr auto faceMorphTargetName = 0x304; // FName
		constexpr auto InterpolationSpeed = 0x30c; // float
		constexpr auto BlendInTime = 0x310; // float
		constexpr auto BlendOutTime = 0x314; // float
		constexpr auto _faceMorphValueChangePerSeconds = 0x354; // float
	}

	namespace n_AShelterItem {
		constexpr auto _canBeAddedToInventory = 0x7c0; // bool
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_AGameEventBase {
		constexpr auto EventName = 0x220; // FText
		constexpr auto ParticipantStatsClass = 0x238; // UGameEventParticipantStats*
		constexpr auto RoundInfoWidgetClass = 0x240; // UGameEventRoundInfoWidget*
		constexpr auto TeamHeaderWidgetClass = 0x248; // UGameEventTeamHeaderWidget*
		constexpr auto StatWidgetClass = 0x250; // UGameEventParticipantStatsWidget*
		constexpr auto MiniStatWidgetClass = 0x258; // UGameEventParticipantStatsWidget*
		constexpr auto TransportClass = 0x260; // AGameEventTransport*
		constexpr auto TimesUpAnnouncement = 0x268; // UAkAudioEvent*
		constexpr auto BlueTeamWonRoundAnnouncement = 0x270; // UAkAudioEvent*
		constexpr auto RedTeamWonRoundAnnouncement = 0x278; // UAkAudioEvent*
		constexpr auto RoundDrawAnnouncement = 0x280; // UAkAudioEvent*
		constexpr auto BlueTeamWonEventAnnouncement = 0x288; // UAkAudioEvent*
		constexpr auto RedTeamWonEventAnnouncement = 0x290; // UAkAudioEvent*
		constexpr auto EventDrawAnnouncement = 0x298; // UAkAudioEvent*
		constexpr auto Time30sAnnouncement = 0x2a0; // UAkAudioEvent*
		constexpr auto Time15sAnnouncement = 0x2a8; // UAkAudioEvent*
		constexpr auto Time10sCountdownAnnouncement = 0x2b0; // UAkAudioEvent*
		constexpr auto TensionMusicStart = 0x2b8; // UAkAudioEvent*
		constexpr auto TensionMusicStop = 0x2c0; // UAkAudioEvent*
		constexpr auto _state = 0x2c8; // EGameEventState
		constexpr auto _activeParticipantCount = 0x2cc; // int32_t
		constexpr auto _numberOfTeams = 0x2d0; // int32_t
		constexpr auto _teamMemberCount = 0x2d8; // TArray<int32_t>
		constexpr auto _teamScores = 0x2e8; // TArray<int32_t>
		constexpr auto _roundWinningTeam = 0x2f8; // TArray<int32_t>
		constexpr auto _round = 0x308; // int32_t
		constexpr auto _roundTimeLeft = 0x30c; // float
		constexpr auto _cancelTimeLeft = 0x310; // float
		constexpr auto _marker = 0x330; // AGameEventLocationMarker*
		constexpr auto _border = 0x338; // AGameEventBorder*
		constexpr auto _manager = 0x340; // AGameEventManager*
		constexpr auto _participantInfo = 0x348; // TArray<FGameEventParticipantInfo>
		constexpr auto _parameters = 0x358; // FGameEventParameters
		constexpr auto _cardWidget = 0x4e0; // UGameEventCardWidget*
		constexpr auto _scoreboardWidget = 0x4e8; // UGameEventScoreboardWidget*
		constexpr auto _miniScoreboardWidget = 0x4f0; // UGameEventScoreboardWidget*
		constexpr auto _rankings = 0x4f8; // TArray<int32_t>
		constexpr auto _recoveryBodySimulation = 0x548; // TArray<UPrisonerBodySimulationSave*>
		constexpr auto _lastAnnouncement = 0x568; // UAkComponent*
		constexpr auto _lastCountdownAnnouncement = 0x570; // UAkComponent*
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UDepotItemUserData {
		constexpr auto OwnerUserProfileId = 0x28; // FDbIntegerId
		constexpr auto TraderPersistentId = 0x30; // FString
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto UseHLODMinDrawDistance = 0x204; // bool
		constexpr auto LDMaxDrawDistance = 0x208; // float
		constexpr auto CachedMaxDrawDistance = 0x20c; // float
		constexpr auto DepthPriorityGroup = 0x210; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x211; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x212; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x213; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x214; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x214; // char : 1
		constexpr auto bNeverDistanceCull = 0x214; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x214; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x215; // char : 1
		constexpr auto bMultiBodyOverlap = 0x215; // char : 1
		constexpr auto bTraceComplexOnMove = 0x215; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x215; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x215; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x215; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x215; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x215; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x216; // char : 1
		constexpr auto bVisibleInRayTracing = 0x216; // char : 1
		constexpr auto bRenderInMainPass = 0x216; // char : 1
		constexpr auto bRenderInDepthPass = 0x216; // char : 1
		constexpr auto bReceivesDecals = 0x216; // char : 1
		constexpr auto bOwnerNoSee = 0x216; // char : 1
		constexpr auto bOnlyOwnerSee = 0x216; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x216; // char : 1
		constexpr auto bUseAsOccluder = 0x217; // char : 1
		constexpr auto bSelectable = 0x217; // char : 1
		constexpr auto bForceMipStreaming = 0x217; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x217; // char : 1
		constexpr auto CastShadow = 0x217; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x217; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x217; // char : 1
		constexpr auto bCastDynamicShadow = 0x217; // char : 1
		constexpr auto bCastStaticShadow = 0x218; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x218; // char : 1
		constexpr auto bCastContactShadow = 0x218; // char : 1
		constexpr auto bSelfShadowOnly = 0x218; // char : 1
		constexpr auto bCastFarShadow = 0x218; // char : 1
		constexpr auto bCastInsetShadow = 0x218; // char : 1
		constexpr auto bCastCinematicShadow = 0x218; // char : 1
		constexpr auto bCastHiddenShadow = 0x218; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x219; // char : 1
		constexpr auto bLightAsIfStatic = 0x219; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x219; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x219; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x219; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x219; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x219; // char : 1
		constexpr auto bIgnoreRadialForce = 0x219; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x21a; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x21a; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x21a; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x21a; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x21a; // char : 1
		constexpr auto bUseEditorCompositing = 0x21a; // char : 1
		constexpr auto bRenderCustomDepth = 0x21a; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x21b; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x21d; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21e; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21f; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x220; // int32_t
		constexpr auto CustomPrimitiveData = 0x228; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x238; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int32_t
		constexpr auto VisibilityId = 0x254; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x258; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x268; // int8_t
		constexpr auto VirtualTextureCullMips = 0x269; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x26a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x26b; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x270; // float
		constexpr auto BoundsScale = 0x27c; // float
		constexpr auto MoveIgnoreActors = 0x290; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a0; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c0; // FBodyInstance
		constexpr auto OnComponentHit = 0x418; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x419; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x41a; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x41b; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x41c; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x41e; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x41f; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x420; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x421; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x422; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x423; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x424; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x425; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x440; // UPrimitiveComponent*
	}

	namespace n_UCamouflageSkill {
		constexpr auto _activationTime = 0xa8; // float
		constexpr auto _standingPenalty = 0xac; // float
		constexpr auto _crouchingPenalty = 0xb0; // float
		constexpr auto _pronePenalty = 0xb4; // float
		constexpr auto _slowMovingStandingPenalty = 0xb8; // float
		constexpr auto _slowMovingCrouchingPenalty = 0xbc; // float
		constexpr auto _slowMovingPronePenalty = 0xc0; // float
		constexpr auto _mediumMovingStandingPenalty = 0xc4; // float
		constexpr auto _mediumMovingCrouchingPenalty = 0xc8; // float
		constexpr auto _fastMovingStandingPenalty = 0xcc; // float
		constexpr auto _standingAIPerceptionMultiplier = 0xd0; // float
		constexpr auto _crouchingAIPerceptionMultiplier = 0xd4; // float
		constexpr auto _proneAIPerceptionMultiplier = 0xd8; // float
		constexpr auto _maxRelevantAIPerceptionRadius = 0xdc; // float
		constexpr auto NoSkillExperienceAwards = 0x14c; // FCamouflageSkillExperienceAwards
		constexpr auto BasicSkillExperienceAwards = 0x150; // FCamouflageSkillExperienceAwards
		constexpr auto MediumSkillExperienceAwards = 0x154; // FCamouflageSkillExperienceAwards
		constexpr auto AdvancedSkillExperienceAwards = 0x158; // FCamouflageSkillExperienceAwards
		constexpr auto AboveAdvancedSkillExperienceAwards = 0x15c; // FCamouflageSkillExperienceAwards
		constexpr auto NoSkillParameters = 0x160; // FCamouflageSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0x170; // FCamouflageSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0x180; // FCamouflageSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x190; // FCamouflageSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0x1a0; // FCamouflageSkillParametersPerSkillLevel
	}

	namespace n_UMetabolismTitleAndAPB {
		constexpr auto Title = 0x260; // FText
		constexpr auto _titleText = 0x278; // UTextBlock*
		constexpr auto _background = 0x280; // UImage*
		constexpr auto _apb_ValueAndProgress = 0x288; // UMetabolismAdvancedProgressBar*
		constexpr auto _backgroundColor = 0x290; // FDataTableRowHandle
		constexpr auto _titleTextColor = 0x2a0; // FDataTableRowHandle
	}

	namespace n_UPrisonerBodySimulationComponent {
		constexpr auto _data = 0x158; // UPrisonerBodySimulationData*
		constexpr auto _bodyEffects = 0x3a0; // TArray<UPrisonerBodyEffect*>
		constexpr auto _metabolism = 0x4b8; // UMetabolism*
		constexpr auto _repState1 = 0x4e0; // uint64_t
		constexpr auto _repState2 = 0x4e8; // uint64_t
		constexpr auto _repState3 = 0x4f0; // uint64_t
		constexpr auto _repState4 = 0x4f8; // uint64_t
		constexpr auto _repState5 = 0x500; // uint64_t
		constexpr auto _repBodyEffects = 0x508; // TArray<UPrisonerBodyEffect*>
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_UImplicitSmoothProperties {
		constexpr auto SmoothSpeed = 0x60; // float
		constexpr auto Smoothness = 0x64; // float
		constexpr auto bPreserveUVs = 0x68; // bool
		constexpr auto VolumeCorrection = 0x6c; // float
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UVDSkinnedRopeComponent {
		constexpr auto PoseableMeshRef = 0x6f8; // FComponentReference
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UMoveBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
	}

	namespace n_UBasicGameResourceContainerComponent {
		constexpr auto _resourceAmount = 0xd8; // float
		constexpr auto _repResourceAmount = 0xdc; // float
		constexpr auto _acceptedResourceType = 0xe0; // UGameResourceType*
		constexpr auto _currentResourceType = 0xe8; // UGameResourceType*
		constexpr auto _resourceFillingInSocketTypes = 0xf0; // FGameplayTagContainer
		constexpr auto _resourceFillingOutSocketTypes = 0x110; // FGameplayTagContainer
		constexpr auto _requiredItemTagsForFilling = 0x130; // TArray<UBaseItemTag*>
		constexpr auto _initialResourceAmount = 0x140; // float
		constexpr auto _maxResourceAmount = 0x144; // float
		constexpr auto _resourceUsagePerHour = 0x148; // float
		constexpr auto _shouldUpdateOwningItemUses = 0x14c; // bool
		constexpr auto _canSpill = 0x14d; // bool
		constexpr auto _canCheck = 0x14e; // bool
		constexpr auto _showResourcePercentageOnCheck = 0x14f; // bool
		constexpr auto _shouldUncraftWhenEmpty = 0x150; // bool
		constexpr auto _shouldSpillWhenPickedUp = 0x151; // bool
		constexpr auto _shouldTakeInHandsWhenDrinking = 0x152; // bool
		constexpr auto _interactionText = 0x158; // FText
		constexpr auto _resourceFillingMontage = 0x170; // UAnimMontage*
		constexpr auto _resourceStartFillingAudioEvent = 0x178; // UAkAudioEvent*
		constexpr auto _resourceStopFillingAudioEvent = 0x180; // UAkAudioEvent*
		constexpr auto _resourceFillingDurationPerAmountFilled = 0x188; // float
		constexpr auto _resourceFillingExperiencePerAmount = 0x18c; // float
		constexpr auto _targetStanceWhenFilling = 0x190; // EPrisonerStance
		constexpr auto _shouldTakeInHandsWhenFilling = 0x191; // bool
		constexpr auto _spillStartAudioEvent = 0x198; // UAkAudioEvent*
		constexpr auto _spillStopAudioEvent = 0x1a0; // UAkAudioEvent*
		constexpr auto _spillMontage = 0x1a8; // UAnimMontage*
		constexpr auto _spillMontageEnd = 0x1b0; // UAnimMontage*
		constexpr auto _particles = 0x1b8; // UParticleSystem*
		constexpr auto _minSpillTime = 0x1c0; // float
		constexpr auto _maxSpillTime = 0x1c4; // float
		constexpr auto _spillTimePerKg = 0x1c8; // float
		constexpr auto _drinkStartAudioEvent = 0x1d0; // UAkAudioEvent*
		constexpr auto _drinkStopAudioEvent = 0x1d8; // UAkAudioEvent*
	}

	namespace n_ULandingEffects {
		constexpr auto MinImpactSpeedForLightEffects = 0x30; // float
		constexpr auto MinImpactSpeedForMediumEffects = 0x34; // float
		constexpr auto MinImpactSpeedForHeavyEffects = 0x38; // float
		constexpr auto ImpactAudioEvent = 0x40; // UAkAudioEvent*
		constexpr auto Default = 0x48; // FLandingEffectDataPerPhysicalSurface
		constexpr auto grass = 0x78; // FLandingEffectDataPerPhysicalSurface
		constexpr auto ForrestGroundCoastal = 0xa8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto ForrestGroundContinental = 0xd8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Rock = 0x108; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Stone = 0x138; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Gravel = 0x168; // FLandingEffectDataPerPhysicalSurface
		constexpr auto GravelBeach = 0x198; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Pebbles = 0x1c8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Snow = 0x1f8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Ice = 0x228; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Sand = 0x258; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Asphalt = 0x288; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Dirt = 0x2b8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Water = 0x2e8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto WaterOcean = 0x318; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Cloth = 0x348; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Metal = 0x378; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Aluminium = 0x3a8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Concrete = 0x3d8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Brick = 0x408; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Wood = 0x438; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Plastic = 0x468; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Rubber = 0x498; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Glass = 0x4c8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Folliage = 0x4f8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Bark = 0x528; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Flesh = 0x558; // FLandingEffectDataPerPhysicalSurface
		constexpr auto RoofTile = 0x588; // FLandingEffectDataPerPhysicalSurface
		constexpr auto CeramicsTiles = 0x5b8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Scrap = 0x5e8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Trunk = 0x618; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Leaves = 0x648; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Plaster = 0x678; // FLandingEffectDataPerPhysicalSurface
		constexpr auto Kevlar = 0x6a8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto ForceField = 0x6d8; // FLandingEffectDataPerPhysicalSurface
		constexpr auto NoEffect = 0x708; // FLandingEffectDataPerPhysicalSurface
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_UDisplaceMeshDirectionalFilterProperties {
		constexpr auto bEnableFilter = 0x60; // bool
		constexpr auto FilterDirection = 0x64; // FVector
		constexpr auto FilterWidth = 0x70; // float
	}

	namespace n_UPrisonerActionMinigameDescription {
		constexpr auto MinigameConfiguration = 0x38; // UMinigameConfiguration*
	}

	namespace n_USearchItemDataAsset {
		constexpr auto Caption = 0x30; // FText
		constexpr auto Duration = 0x48; // float
		constexpr auto SearchData = 0x50; // TArray<FSearchPerItemData>
		constexpr auto StartSearchAudioEvent = 0x60; // UAkAudioEvent*
		constexpr auto StopSearchAudioEvent = 0x68; // UAkAudioEvent*
		constexpr auto noiseLevel = 0x70; // ENoiseLevel
	}

	namespace n_UMeleeWeaponItemTag {
		constexpr auto CombatAnimationPlayRateModifier = 0x30; // float
		constexpr auto StrengthBelowWhichCombatPerformanceBeginsToDrop = 0x34; // float
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UCharacterSpawnerComponent {
		constexpr auto OverrideDefaultProbability = 0x1f8; // bool
		constexpr auto Probability = 0x1fc; // float
		constexpr auto OverrideDefaultRespawnTime = 0x200; // bool
		constexpr auto RespawnTime = 0x204; // float
		constexpr auto MinCharactersToSpawn = 0x208; // int32_t
		constexpr auto MaxCharactersToSpawn = 0x20c; // int32_t
		constexpr auto SpawnerMarkers = 0x210; // TArray<FCharacterSpawnerMarker>
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UWeaponAnimInstance {
		constexpr auto _owningPrisonerWeaponBreathFactor = 0x2d0; // float
		constexpr auto _owningPrisonerWeaponAimDownTheSightsStillBlendFactor = 0x2d4; // float
		constexpr auto _isOwningPrisonerAimingDownTheSights = 0x2d8; // bool
		constexpr auto _isChamberOpened = 0x2d9; // bool
		constexpr auto _ammoCount = 0x2dc; // int32_t
		constexpr auto _shouldPlayChamberOpenedIdle = 0x2e0; // bool
		constexpr auto _isInGameEvent = 0x2e1; // bool
		constexpr auto _malfunction = 0x2e2; // EWeaponMalfunction
		constexpr auto _useFiringModeBoneRotation = 0x2e3; // bool
		constexpr auto _firingModeBoneRotation = 0x2e4; // FRotator
		constexpr auto _hideBoneCurveValue = 0x2f0; // float
	}

	namespace n_UMetabolismBodyEffectProgressBar {
		constexpr auto _apb = 0x288; // UMetabolismAdvancedProgressBar*
		constexpr auto _rightSymbol = 0x290; // UImage*
		constexpr auto _circularProgressBar = 0x298; // UImage*
		constexpr auto _circularProgressBarColorFront = 0x2a0; // FDataTableRowHandle
		constexpr auto _circularProgressBarColorBack = 0x2b0; // FDataTableRowHandle
		constexpr auto hoveredOpacity = 0x2c0; // float
		constexpr auto unhoveredOpacity = 0x2c4; // float
		constexpr auto otherIsSelectedUnhoveredOpacity = 0x2c8; // float
		constexpr auto otherIsSelectedHoveredOpacity = 0x2cc; // float
	}

	namespace n_UWorldCraftingMarkerWidget {
		constexpr auto _craftingInfo = 0x310; // UCraftingInfoWidget*
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UBoxMotionTriggerComponent {
		constexpr auto BoxCollisionComponent = 0x518; // UBoxComponent*
		constexpr auto _triggerSize = 0x520; // FVector
	}

	namespace n_ABP_Survival_Tutorial_CutBushObjective_C {
		constexpr auto DefaultSceneRoot = 0x360; // USceneComponent*
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UPhysicalSurfacesData {
		constexpr auto Default = 0x30; // FPhysicalSurfaceData
		constexpr auto grass = 0x48; // FPhysicalSurfaceData
		constexpr auto ForrestGroundCoastal = 0x60; // FPhysicalSurfaceData
		constexpr auto ForrestGroundContinental = 0x78; // FPhysicalSurfaceData
		constexpr auto Rock = 0x90; // FPhysicalSurfaceData
		constexpr auto Stone = 0xa8; // FPhysicalSurfaceData
		constexpr auto Gravel = 0xc0; // FPhysicalSurfaceData
		constexpr auto GravelBeach = 0xd8; // FPhysicalSurfaceData
		constexpr auto Pebbles = 0xf0; // FPhysicalSurfaceData
		constexpr auto Snow = 0x108; // FPhysicalSurfaceData
		constexpr auto Ice = 0x120; // FPhysicalSurfaceData
		constexpr auto Sand = 0x138; // FPhysicalSurfaceData
		constexpr auto Asphalt = 0x150; // FPhysicalSurfaceData
		constexpr auto Dirt = 0x168; // FPhysicalSurfaceData
		constexpr auto Water = 0x180; // FPhysicalSurfaceData
		constexpr auto WaterOcean = 0x198; // FPhysicalSurfaceData
		constexpr auto Cloth = 0x1b0; // FPhysicalSurfaceData
		constexpr auto Metal = 0x1c8; // FPhysicalSurfaceData
		constexpr auto Aluminium = 0x1e0; // FPhysicalSurfaceData
		constexpr auto Concrete = 0x1f8; // FPhysicalSurfaceData
		constexpr auto Brick = 0x210; // FPhysicalSurfaceData
		constexpr auto Wood = 0x228; // FPhysicalSurfaceData
		constexpr auto Plastic = 0x240; // FPhysicalSurfaceData
		constexpr auto Rubber = 0x258; // FPhysicalSurfaceData
		constexpr auto Glass = 0x270; // FPhysicalSurfaceData
		constexpr auto Foliage = 0x288; // FPhysicalSurfaceData
		constexpr auto Bark = 0x2a0; // FPhysicalSurfaceData
		constexpr auto Flesh = 0x2b8; // FPhysicalSurfaceData
		constexpr auto RoofTile = 0x2d0; // FPhysicalSurfaceData
		constexpr auto CeramicTiles = 0x2e8; // FPhysicalSurfaceData
		constexpr auto Scrap = 0x300; // FPhysicalSurfaceData
		constexpr auto Trunk = 0x318; // FPhysicalSurfaceData
		constexpr auto Leaves = 0x330; // FPhysicalSurfaceData
		constexpr auto Fruit = 0x348; // FPhysicalSurfaceData
		constexpr auto Cardboard = 0x360; // FPhysicalSurfaceData
		constexpr auto Plaster = 0x378; // FPhysicalSurfaceData
		constexpr auto Kevlar = 0x390; // FPhysicalSurfaceData
		constexpr auto ForceField = 0x3a8; // FPhysicalSurfaceData
		constexpr auto NoEffect = 0x3c0; // FPhysicalSurfaceData
	}

	namespace n_UMeshInspectorTool {
		constexpr auto Settings = 0x88; // UMeshInspectorProperties*
		constexpr auto MaterialSettings = 0x90; // UExistingMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto DrawnLineSet = 0xa8; // ULineSetComponent*
		constexpr auto DefaultMaterial = 0xb0; // UMaterialInterface*
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto randomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UUI_Metabolism_CurrentStat_Light_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x470; // int32_t
		constexpr auto PreviousLODLevel = 0x474; // int32_t
		constexpr auto MinLOD = 0x478; // int32_t
		constexpr auto SubDivisionStepSize = 0x47c; // int32_t
		constexpr auto StaticMesh = 0x480; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x488; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x48c; // char : 1
		constexpr auto bOverrideWireframeColor = 0x48c; // char : 1
		constexpr auto bOverrideMinLod = 0x48c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x48c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x48c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x48c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x48c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x48c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x48d; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x48d; // char : 1
		constexpr auto bUseSubDivisions = 0x48d; // char : 1
		constexpr auto bUseDefaultCollision = 0x48d; // char : 1
		constexpr auto bReverseCulling = 0x48d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x490; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x494; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x498; // float
		constexpr auto StreamingDistanceMultiplier = 0x49c; // float
		constexpr auto LODData = 0x4a0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4b0; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4c0; // FLightmassPrimitiveSettings
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UEditUVIslandsTool {
		constexpr auto MaterialSettings = 0xc8; // UExistingMeshMaterialProperties*
		constexpr auto CheckerMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto DynamicMeshComponent = 0xd8; // USimpleDynamicMeshComponent*
		constexpr auto SelectionMechanic = 0xe0; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0xf0; // UMultiTransformer*
	}

	namespace n_UMirrorOperatorFactory {
		constexpr auto MirrorTool = 0x30; // UMirrorTool*
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UModularTooltipElement {
		constexpr auto _data = 0x260; // UModularTooltipElementData*
		constexpr auto _neutralDispositionColor = 0x268; // FDataTableRowHandle
		constexpr auto _goodDispositionColor = 0x278; // FDataTableRowHandle
		constexpr auto _badDispositionColor = 0x288; // FDataTableRowHandle
	}

	namespace n_USeamSculptTool {
		constexpr auto Settings = 0x200; // USeamSculptToolProperties*
		constexpr auto PreviewGeom = 0x208; // UPreviewGeometry*
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UEditPivotToolActionPropertySet {
		constexpr auto bUseWorldBox = 0x68; // bool
	}

	namespace n_AConZWorldSettings {
		constexpr auto WeatherController2 = 0x3a0; // AWeatherController2*
		constexpr auto WetnessManager = 0x3a8; // AWetnessManager*
		constexpr auto GameEventManager = 0x3b0; // AGameEventManager*
		constexpr auto WorldEventManager = 0x3b8; // AWorldEventManager*
		constexpr auto BuildingManager = 0x3c0; // ABuildingManager*
		constexpr auto ItemContainerManager = 0x3c8; // AItemContainerManager*
		constexpr auto EconomyManager = 0x3d0; // AConZEconomyManager*
		constexpr auto RadioStations = 0x3d8; // TArray<ARadioStation*>
		constexpr auto RadioNoiseStartEvent = 0x3e8; // UAkAudioEvent*
		constexpr auto RadioNoiseStopEvent = 0x3f0; // UAkAudioEvent*
		constexpr auto RadioStopEvent = 0x3f8; // UAkAudioEvent*
		constexpr auto RadioStationChangeNoiseEvent = 0x400; // UAkAudioEvent*
		constexpr auto ItemSpawningSettings = 0x408; // FItemSpawningSettings
		constexpr auto IslandBoundsVolume = 0x460; // AVolume*
		constexpr auto UseVirtualizationSystem = 0x468; // bool
		constexpr auto WorldBounds = 0x46c; // FBox2D
		constexpr auto HeightMapGameplayTag = 0x480; // FGameplayTag
		constexpr auto MapPropertiesGameplayTag = 0x488; // FGameplayTag
		constexpr auto GerstnerWaveOcclusionPropertiesGameplayTag = 0x490; // FGameplayTag
		constexpr auto PrisonerSpawnEquipment = 0x498; // TArray<FConZPrisonerSpawnEquipmentProperties>
		constexpr auto SpawnInAir = 0x4a8; // bool
	}

	namespace n_UUI_CraftingInfoInWorld_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x370; // UImage*
		constexpr auto CraftingTitle = 0x378; // UImage*
		constexpr auto DescriptionText = 0x380; // UTextBlock*
		constexpr auto Image_1 = 0x388; // UImage*
		constexpr auto Image_2 = 0x390; // UImage*
		constexpr auto TitleText = 0x398; // UTextBlock*
	}

	namespace n_ADogTagItem {
		constexpr auto _userProfileName = 0x7c0; // FString
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UExplosionFailurePenalty {
		constexpr auto _explosionBaseDamage = 0x30; // float
		constexpr auto _minimumDamage = 0x34; // float
		constexpr auto _damageInnerRadius = 0x38; // float
		constexpr auto _damageOuterRadius = 0x3c; // float
		constexpr auto _damageFalloff = 0x40; // float
		constexpr auto _explosionPS = 0x48; // UParticleSystem*
		constexpr auto _explosionAudioEvent = 0x50; // UAkAudioEvent*
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UPreviewMesh {
		constexpr auto bBuildSpatialDataStructure = 0x40; // bool
		constexpr auto bDrawOnTop = 0x41; // bool
		constexpr auto DynamicMeshComponent = 0x50; // USimpleDynamicMeshComponent*
	}

	namespace n_UCircularMenuSegmentThrowingInfo {
		constexpr auto Action = 0x80; // FDelegate
		constexpr auto Index = 0x90; // int32_t
	}

	namespace n_UGroupEdgeInsertionProperties {
		constexpr auto InsertionMode = 0x60; // EGroupEdgeInsertionMode
		constexpr auto bWireframe = 0x64; // bool
		constexpr auto VertexTolerance = 0x68; // double
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UPauseMenuUIController {
		constexpr auto _resumeAllSounds = 0x28; // UAkAudioEvent*
		constexpr auto _stopAllSounds = 0x30; // UAkAudioEvent*
		constexpr auto _pauseAllSounds = 0x38; // UAkAudioEvent*
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UChoppingRecipeDataAsset {
		constexpr auto ChoppingRecipe = 0x30; // FChoppingRecipe
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_AZombie_01_Right_Arm_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_URadioCategory {
		constexpr auto Tracks = 0x28; // TArray<URadioTrack*>
		constexpr auto _index = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_URespawnSettings {
		constexpr auto parameters = 0x30; // FRespawnParameters
	}

	namespace n_AWeaponAttachmentFlashlight {
		constexpr auto _lightActivatedAudioEvent = 0x7e0; // UAkAudioEvent*
		constexpr auto _lightSocketName = 0x7e8; // FName
		constexpr auto _materialEmissiveParameterName = 0x7f0; // FName
		constexpr auto _resourceContainerComponent = 0x800; // UBasicGameResourceContainerComponent*
	}

	namespace n_UUI_GameMenu_C {
		constexpr auto ButtonBox = 0x378; // UVerticalBox*
		constexpr auto ButtonsOverlay = 0x380; // UOverlay*
		constexpr auto Image_104 = 0x388; // UImage*
		constexpr auto TextBlock_116 = 0x390; // UTextBlock*
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_ABP_Weapon_Improvised_Handgun_C {
		constexpr auto UberGraphFrame = 0x2dd0; // FPointerToUberGraphFrame
		constexpr auto ItemObstructionTestCapsule = 0x2dd8; // UItemObstructionTestCapsuleComponent*
		constexpr auto MeleeAttackCollisionCapsule = 0x2de0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UTrapData {
		constexpr auto SphereMotionTriggerComponentClass = 0x30; // USphereMotionTriggerComponent*
		constexpr auto BoxMotionTriggerComponentClass = 0x38; // UBoxMotionTriggerComponent*
		constexpr auto LaserTriggerComponentClass = 0x40; // ULaserTriggerComponent*
		constexpr auto TimedTriggerComponentClass = 0x48; // UTimedTriggerComponent*
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_UIterativeSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bSmoothBoundary = 0x68; // bool
	}

	namespace n_ABuildingManager {
		constexpr auto _buildings = 0x268; // TMap<ABuilding*, FBox2D>
		constexpr auto _buildingsOwned = 0x2b8; // TMap<FDbIntegerId, FBuildingsArray>
		constexpr auto _buildingsDataRepHelper = 0x310; // FBuildingsReplicationHelper
	}

	namespace n_ATimedGiftSpawner {
		constexpr auto _giftSpawnTime = 0x220; // int64_t
		constexpr auto _possibleGifts = 0x228; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _referenceItem = 0x238; // TSoftClassPtr<UObject>
		constexpr auto _giftOffsetFromReferenceItem = 0x260; // float
	}

	namespace n_UFooterV2_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TextLine = 0x268; // UTextBlock*
		constexpr auto TextLineBackground = 0x270; // UImage*
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_UConZBoatComboMountSlot {
		constexpr auto _idleAnimation = 0x168; // UBlendSpace*
		constexpr auto _passengerSocketName = 0x170; // FName
		constexpr auto _vehiclePassengerWeaponAimingParameters = 0x178; // UVehicleWeaponAimingParameters*
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UPlayEffectsWhenParticleCollides {
		constexpr auto ImpactEffects = 0x28; // UProjectileImpactEffects*
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect {
		constexpr auto _symptomClass = 0x30; // UPrisonerBodySymptom_PeriodicAffect*
		constexpr auto _symptomCause = 0x38; // UPrisonerBodySymptomCause_PeriodicAffect*
		constexpr auto _intervalVsSeverity = 0x40; // FRuntimeFloatCurve
		constexpr auto _chanceVsSeverity = 0xc8; // FRuntimeFloatCurve
		constexpr auto _durationVsConstitution = 0x150; // FFloatInterval
		constexpr auto _intensityVsConstitution = 0x158; // FFloatInterval
	}

	namespace n_USentryMovementComponent {
		constexpr auto MaxRotationRateCurve = 0xc18; // UCurveFloat*
		constexpr auto RotationInterpolationSpeed = 0xc20; // float
		constexpr auto CorrectServerReceivedZ = 0xc24; // bool
	}

	namespace n_UUI_CriminalRecord_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto AgeText = 0x280; // UUI_CriminalRecordText_C*
		constexpr auto AliasesText = 0x288; // UUI_CriminalRecordText_C*
		constexpr auto BirthDateText = 0x290; // UUI_CriminalRecordText_C*
		constexpr auto CancelButton = 0x298; // UUI_TrashMenuButton_C*
		constexpr auto CityText = 0x2a0; // UUI_CriminalRecordText_C*
		constexpr auto ConstitutionCategoryText = 0x2a8; // UUI_CriminalRecordText_C*
		constexpr auto ConstitutionVerticalBox = 0x2b0; // UVerticalBox*
		constexpr auto CountryText = 0x2b8; // UUI_CriminalRecordText_C*
		constexpr auto CrimeText = 0x2c0; // UUI_CriminalRecordText_C*
		constexpr auto DateOfArrestText = 0x2c8; // UUI_CriminalRecordText_C*
		constexpr auto DexterityCategoryText = 0x2d0; // UUI_CriminalRecordText_C*
		constexpr auto DexterityVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto EyeColorText = 0x2e0; // UUI_CriminalRecordText_C*
		constexpr auto FlawsText = 0x2e8; // UUI_CriminalRecordText_C*
		constexpr auto GenderText = 0x2f0; // UUI_CriminalRecordText_C*
		constexpr auto HairColorText = 0x2f8; // UUI_CriminalRecordText_C*
		constexpr auto HeightText = 0x300; // UUI_CriminalRecordText_C*
		constexpr auto Image_1 = 0x308; // UImage*
		constexpr auto Image_2 = 0x310; // UImage*
		constexpr auto Image_3 = 0x318; // UImage*
		constexpr auto Image_4 = 0x320; // UImage*
		constexpr auto Image_5 = 0x328; // UImage*
		constexpr auto Image_6 = 0x330; // UImage*
		constexpr auto Image_7 = 0x338; // UImage*
		constexpr auto Image_8 = 0x340; // UImage*
		constexpr auto IntelligenceCategoryText = 0x348; // UUI_CriminalRecordText_C*
		constexpr auto IntelligenceVerticalBox = 0x350; // UVerticalBox*
		constexpr auto NameText = 0x358; // UUI_CriminalRecordText_C*
		constexpr auto NumberText = 0x360; // UUI_CriminalRecordText_C*
		constexpr auto OkButton = 0x368; // UUI_TrashMenuButton_C*
		constexpr auto ServerLocationText = 0x370; // UUI_CriminalRecordText_C*
		constexpr auto StrengthCategoryText = 0x378; // UUI_CriminalRecordText_C*
		constexpr auto StrengthVerticalBox = 0x380; // UVerticalBox*
		constexpr auto WeightText = 0x388; // UUI_CriminalRecordText_C*
		constexpr auto OnOkClicked = 0x390; // FMulticastInlineDelegate
		constexpr auto OnCancelClicked = 0x3a0; // FMulticastInlineDelegate
		constexpr auto CharacterTemplate = 0x3b0; // FCharacterTemplate
		constexpr auto ShowSkillExp = 0x438; // bool
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_ABP_WeaponBullet_12Gauge_Flare_C {
		constexpr auto UberGraphFrame = 0x478; // FPointerToUberGraphFrame
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UUI_NotificationPanelWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto EventCancelBox = 0x280; // UBorder*
		constexpr auto EventTime = 0x288; // UBorder*
		constexpr auto EventTimetext = 0x290; // UTextBlock*
		constexpr auto FamePointsCounter = 0x298; // UTextBlock*
		constexpr auto NextEventBox = 0x2a0; // UBorder*
		constexpr auto NextEventCountdown = 0x2a8; // UTextBlock*
		constexpr auto NextEventLocation = 0x2b0; // UTextBlock*
		constexpr auto NotificationBox = 0x2b8; // UVerticalBox*
		constexpr auto RankLabel = 0x2c0; // UTextBlock*
		constexpr auto TextBlock_6 = 0x2c8; // UTextBlock*
		constexpr auto VerticalBox_2 = 0x2d0; // UVerticalBox*
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_UGerstnerWaterWaves {
		constexpr auto GerstnerWaveGenerator = 0x28; // UGerstnerWaterWaveGeneratorBase*
		constexpr auto GerstnerWaves = 0x30; // TArray<FGerstnerWave>
		constexpr auto MaxWaveHeight = 0x40; // float
	}

	namespace n_UPrisonerBodyCondition_HealthLow {
		constexpr auto _healthRatioToExist = 0xa8; // float
		constexpr auto _colorSaturationEffectIntensityVsEffectsIntensity = 0xb0; // FRuntimeFloatCurve
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UOctreeDynamicMeshComponent {
		constexpr auto bExplicitShowWireframe = 0x4d0; // bool
	}

	namespace n_UPrisonerMovementSettings {
		constexpr auto Ground = 0x30; // FPrisonerMovementSettings_Ground
		constexpr auto Air = 0x1a0; // FPrisonerMovementSettings_Air
		constexpr auto Water = 0x2c8; // FPrisonerMovementSettings_Water
		constexpr auto RotationRateMultiplierVsPerformanceRatio = 0x31c; // FFloatInterval
		constexpr auto ClimbingSpeedMultiplierVsPerformanceRatio = 0x324; // FFloatInterval
		constexpr auto WindowClimbingSpeedMultiplierVsPerformanceRatio = 0x32c; // FFloatInterval
	}

	namespace n_ABP_Survival_Storage_CraftBarkRope_Objective_C {
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UHoleFillOperatorFactory {
		constexpr auto FillTool = 0x30; // UHoleFillTool*
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_AKillBoxSpawnPoint {
		constexpr auto _openDelay = 0x220; // float
		constexpr auto _closeDelay = 0x224; // float
		constexpr auto _zombieList = 0x228; // TArray<AZombie2*>
		constexpr auto _door = 0x238; // ADoor*
		constexpr auto _stableZombieProbability = 0x258; // float
	}

	namespace n_ARegularDoorDestructible {
		constexpr auto _openRotation = 0x408; // FRotator
		constexpr auto _closedRotation = 0x414; // FRotator
	}

	namespace n_UDepotItemForPlayerAndTraderResponse {
		constexpr auto _payload = 0x28; // ADepotItem*
	}

	namespace n_UUI_Metabolism_BodyEffect_ProgressBar_C {
		constexpr auto PaddedBackground = 0x308; // UImage*
	}

	namespace n_UBakedOcclusionMapToolProperties {
		constexpr auto OcclusionRays = 0x60; // int32_t
		constexpr auto MaxDistance = 0x64; // float
		constexpr auto bGaussianBlur = 0x68; // bool
		constexpr auto BlurRadius = 0x6c; // float
		constexpr auto BiasAngle = 0x70; // float
	}

	namespace n_ASpline {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // USplineComponent*
	}

	namespace n_UDamageDirectionIndicator {
		constexpr auto visible = 0x28; // bool
		constexpr auto Texture = 0x30; // UTexture*
		constexpr auto Radius = 0x38; // float
		constexpr auto OpacityMultiplier = 0x3c; // float
		constexpr auto DefaultDelayDuration = 0x40; // float
		constexpr auto DefaultSustainDuration = 0x44; // float
		constexpr auto DefaultReleaseDuration = 0x48; // float
	}

	namespace n_UBasicPrisonerBodySymptomNotifier {
		constexpr auto _triggerDelay = 0x30; // FFloatInterval
		constexpr auto _shouldDisplayNotificationOnChangeForWorse = 0x38; // bool
		constexpr auto _shouldResetNotificationTimerOnSeverityChange = 0x39; // bool
		constexpr auto _notificationParameters = 0x40; // TArray<FBasicPrisonerBodySymptomNotificationParameters>
	}

	namespace n_URestAssetData {
		constexpr auto RestingMode = 0x30; // EPrisonerRestingMode
		constexpr auto RestingAnimation = 0x38; // UAnimSequenceBase*
		constexpr auto AdditionalEndRestLocations = 0x40; // TArray<FVector>
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UGlobalUIData {
		constexpr auto DefaultModularTooltipClass = 0x28; // UModularTooltip*
		constexpr auto ModularTooltipElementClassMapping = 0x30; // TMap<UModularTooltipElementData*, UModularTooltipElement*>
		constexpr auto MessageBox = 0x80; // UMessageBox*
		constexpr auto LogoutMessageBox = 0x88; // ULogoutMessageBox*
		constexpr auto MessageBoxButton = 0x90; // UUserWidget*
		constexpr auto LabeledSliderWithNumber = 0x98; // UUserWidget*
		constexpr auto LabeledCarousel = 0xa0; // UUserWidget*
		constexpr auto LabeledDropdown = 0xa8; // UUserWidget*
	}

	namespace n_UDcxVehicleDriveComponent4W {
		constexpr auto DifferentialData = 0x3b8; // FDcxVehicleDifferentialData4W
		constexpr auto AckermannGeometryAccuracy = 0x3d4; // float
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_UPrisonerSkillComponent {
		constexpr auto InitialSkills = 0xb0; // TArray<FPrisonerInitialSkillInfo>
		constexpr auto TickFrequency = 0xc0; // float
		constexpr auto _skills = 0xd0; // TArray<USkill*>
		constexpr auto _actions = 0xe0; // TArray<USkillAction*>
		constexpr auto _skillClasses = 0x198; // USkillClasses*
		constexpr auto _lastSurroundingItems = 0x1a0; // TArray<AItem*>
		constexpr auto _replicatedSkills = 0x238; // TArray<FSkillRecord>
		constexpr auto _replicatedNoiseLevel = 0x24c; // uint32_t
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto count = 0x30; // int32_t
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UAdminCommandArgumentCompletion_PrimaryAsset {
		constexpr auto _primaryAssetType = 0x30; // FPrimaryAssetType
		constexpr auto _primaryAssetsToExclude = 0x38; // TSet<FPrimaryAssetId>
	}

	namespace n_UAmmunitionItemState {
		constexpr auto AmmoCount = 0xf8; // int32_t
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AConZSpectatorPawn {
		constexpr auto DefaultFOV = 0x2a8; // float
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UItemActionDescriptionLoadMagazine {
		constexpr auto RequestedAmmoCount = 0x30; // int32_t
		constexpr auto ammoitem = 0x38; // AAmmunitionItem*
		constexpr auto PlayRate = 0x40; // float
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto dataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_ABP_WeaponSightBase_C {
		constexpr auto UberGraphFrame = 0x800; // FPointerToUberGraphFrame
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UEraseBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UCCBodyTypeTriangleWidget {
		constexpr auto _markerBackgroundCanvasPanel = 0x278; // UCanvasPanel*
		constexpr auto _markerBackgroundImage = 0x280; // UImage*
		constexpr auto _markerCanvasPanel = 0x288; // UCanvasPanel*
		constexpr auto _markerImage = 0x290; // UImage*
	}

	namespace n_UPreviousNextSwitchWidget {
		constexpr auto IndexChanged = 0x278; // FMulticastInlineDelegate
		constexpr auto PreviousButton = 0x288; // UButton*
		constexpr auto NextButton = 0x290; // UButton*
		constexpr auto _index = 0x2a0; // int32_t
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UAdjustableSeparator {
		constexpr auto _slotSizeBox = 0x260; // USizeBox*
		constexpr auto _divider = 0x268; // UNamedSlot*
		constexpr auto _slotMinHeight = 0x270; // float
		constexpr auto _slotMaxHeight = 0x274; // float
	}

	namespace n_UFishingRodAnimInstance {
		constexpr auto IsInMinigame = 0x2b8; // bool
		constexpr auto RodTipLocation = 0x2bc; // FVector
		constexpr auto BentRodTipLocation = 0x2c8; // FVector
		constexpr auto BendDirection = 0x2d4; // FVector
		constexpr auto BendAmount = 0x2e0; // float
	}

	namespace n_UPrisonerBodySymptom_Hunger {
		constexpr auto _severityVsEnergyRatio = 0xb8; // FRuntimeFloatCurve
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UUI_Metabolism_RadialAttributeProgressBar_C {
		constexpr auto UberGraphFrame = 0x3c0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UUI_ThrowingAccessItemWidget_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto ImageBackground = 0x2c8; // UImage*
		constexpr auto LeftSquareBracketImage = 0x2d0; // UImage*
		constexpr auto RightSquareBracketImage = 0x2d8; // UImage*
		constexpr auto SizeBox_1 = 0x2e0; // USizeBox*
		constexpr auto TextBlockItemSlotNumber = 0x2e8; // UTextBlock*
		constexpr auto TextColor = 0x2f0; // FLinearColor
		constexpr auto _itemSlotNumber = 0x300; // FText
		constexpr auto _alarmColor = 0x318; // FLinearColor
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UPrisonerLifeIndicatorsSprite_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto NewAnimation_2 = 0x2f8; // UWidgetAnimation*
		constexpr auto AbdomenInjury = 0x300; // UImage*
		constexpr auto ArmLeftLowerInjury = 0x308; // UImage*
		constexpr auto ArmLeftUpperInjury = 0x310; // UImage*
		constexpr auto ArmRightLowerInjury = 0x318; // UImage*
		constexpr auto ArmRightUpperInjury = 0x320; // UImage*
		constexpr auto BloodDropBox = 0x328; // UScaleBox*
		constexpr auto ChestInjury = 0x330; // UImage*
		constexpr auto CircularProgressBarSpritesAIPerception = 0x338; // UCircularProgressBarSprites_C*
		constexpr auto CircularProgressBarSpritesHLTH = 0x340; // UCircularProgressBarSprites_C*
		constexpr auto CircularProgressBarSpritesHYD = 0x348; // UCircularProgressBarSprites_C*
		constexpr auto CircularProgressBarSpritesNoise = 0x350; // UCircularProgressBarSprites_C*
		constexpr auto CircularProgressBarSpritesNRG = 0x358; // UCircularProgressBarSprites_C*
		constexpr auto CircularProgressBarSpritesSTA = 0x360; // UCircularProgressBarSprites_C*
		constexpr auto HeadInjury = 0x368; // UImage*
		constexpr auto Image_1 = 0x370; // UImage*
		constexpr auto Image_2 = 0x378; // UImage*
		constexpr auto LegLeftLowerInjury = 0x380; // UImage*
		constexpr auto LegLeftUpperInjury = 0x388; // UImage*
		constexpr auto LegRightLowerInjury = 0x390; // UImage*
		constexpr auto LegRightUpperInjury = 0x398; // UImage*
		constexpr auto MPI_CanvasPanel = 0x3a0; // UCanvasPanel*
		constexpr auto _prisoner = 0x3a8; // APrisoner*
		constexpr auto _isPrisonerSet = 0x3b0; // bool
	}

	namespace n_UThieverySkill {
		constexpr auto _lockpickingDurationModifierCurve = 0xa8; // UCurveFloat*
		constexpr auto _lockpickingStartAngleModifierCurve = 0xb0; // UCurveFloat*
		constexpr auto _lockpickingAngleModifierCurve = 0xb8; // UCurveFloat*
		constexpr auto _lockpickingDurabilityModifierCurve = 0xc0; // UCurveFloat*
	}

	namespace n_UMeleeSkillAnimationsPreset {
		constexpr auto NoSkillAnimations = 0x30; // FMeleeSkillAnimations
		constexpr auto BasicSkillAnimations = 0xc8; // FMeleeSkillAnimations
		constexpr auto MediumSkillAnimations = 0x160; // FMeleeSkillAnimations
		constexpr auto AdvancedSkillAnimations = 0x1f8; // FMeleeSkillAnimations
		constexpr auto NoSkillParameters = 0x290; // FMeleeSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0x318; // FMeleeSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0x3a0; // FMeleeSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x428; // FMeleeSkillParametersPerSkillLevel
		constexpr auto NoSkillDamageMultiplier = 0x4b0; // float
		constexpr auto BasicSkillDamageMultiplier = 0x4b4; // float
		constexpr auto MediumSkillDamageMultiplier = 0x4b8; // float
		constexpr auto AdvancedSkillDamageMultiplier = 0x4bc; // float
		constexpr auto AboveAdvancedSkillDamageMultiplier = 0x4c0; // float
	}

	namespace n_AConZWaterSplineRiver {
		constexpr auto SplineMesh = 0x2b8; // UStaticMesh*
		constexpr auto SplineMeshMaterialOverride = 0x2c0; // UMaterialInterface*
		constexpr auto SplineMeshCullingDistance = 0x2c8; // float
		constexpr auto ClearRoll = 0x2cc; // bool
		constexpr auto AutoCalculateMeshCount = 0x2cd; // bool
		constexpr auto SplineMeshCount = 0x2d0; // int32_t
		constexpr auto RefreshMesh = 0x2d4; // bool
		constexpr auto ArmBatchEditWidth = 0x2d5; // bool
		constexpr auto BatchEditWidth = 0x2d8; // float
		constexpr auto ArmBatchEditMaxDepth = 0x2dc; // bool
		constexpr auto BatchEditMaxDepth = 0x2e0; // float
		constexpr auto ArmBatchEditSpeed = 0x2e4; // bool
		constexpr auto BatchEditSpeed = 0x2e8; // float
		constexpr auto ArmBatchEditOpacity = 0x2ec; // bool
		constexpr auto BatchEditOpacity = 0x2f0; // float
		constexpr auto ArmBatchEdit = 0x2f4; // bool
		constexpr auto BatchEditReplace = 0x2f5; // bool
		constexpr auto BatchEditAdd = 0x2f6; // bool
		constexpr auto BatchEditMultiply = 0x2f7; // bool
		constexpr auto BatchEditFlattenZ = 0x2f8; // bool
		constexpr auto _splineMeshComponents = 0x300; // TArray<USplineMeshComponent*>
	}

	namespace n_UPrisonerBodyEffect_Limping {
		constexpr auto _duration = 0x40; // float
		constexpr auto _elapsedTime = 0x44; // float
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection {
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_AGib {
		constexpr auto MeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ShrinkFactor = 0x228; // float
		constexpr auto ImpulseMultiplier = 0x22c; // float
	}

	namespace n_ULockpickingWidget {
		constexpr auto _lockpicks = 0x290; // TArray<AItem*>
		constexpr auto _tensionTools = 0x2a0; // TArray<AItem*>
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UDrawPolyPathProperties {
		constexpr auto OutputType = 0x60; // EDrawPolyPathOutputMode
		constexpr auto WidthMode = 0x64; // EDrawPolyPathWidthMode
		constexpr auto Width = 0x68; // float
		constexpr auto HeightMode = 0x6c; // EDrawPolyPathHeightMode
		constexpr auto Height = 0x70; // float
		constexpr auto RampStartRatio = 0x74; // float
		constexpr auto bSnapToWorldGrid = 0x78; // bool
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_Damage {
		constexpr auto _damageVsSeverity = 0x30; // FRuntimeFloatCurve
		constexpr auto _damageRatioVsSeverity = 0xb8; // FRuntimeFloatCurve
		constexpr auto _useBaseMaxHealthInsteadOfMaxHealthToComputeDamageRatio = 0x140; // bool
		constexpr auto _useSeverityToDetermineLifeThreateningStatus = 0x141; // bool
		constexpr auto _severityRangeToBeLifeThreatening = 0x144; // FFloatRange
	}

	namespace n_UBasicTextWidget {
		constexpr auto MaxTextRows = 0x260; // int32_t
		constexpr auto MaxCharactersPerTextRow = 0x264; // int32_t
	}

	namespace n_UUI_Metabolism_LightItemDisplayPanel_SelectedItems_C {
		constexpr auto ItemSlot_1 = 0x2a0; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_2 = 0x2a8; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_3 = 0x2b0; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_4 = 0x2b8; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_5 = 0x2c0; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_6 = 0x2c8; // UUI_ItemLightDisplay_C*
		constexpr auto ItemSlot_7 = 0x2d0; // UUI_ItemLightDisplay_C*
	}

	namespace n_UVehicleMountSlotIndicators {
		constexpr auto _backgroundGradient = 0x260; // UImage*
		constexpr auto _vehicleMountSlotsContainer = 0x268; // UContentWidget*
	}

	namespace n_UUI_VicinityItemContainer3_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
	}

	namespace n_UAnimBP_MosinNagant_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x380; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x3c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x410; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x458; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose = 0x508; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x660; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x688; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x6b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer = 0x6d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_3 = 0x758; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x7a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum = 0x830; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x8e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x908; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x930; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x958; // FAnimNode_BlendListByBool
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_ULastActorInfo {
		constexpr auto Actor = 0x38; // AActor*
		constexpr auto StaticMesh = 0x40; // UStaticMesh*
		constexpr auto ShapeSettings = 0x48; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x50; // UNewMeshMaterialProperties*
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UDialogueData {
		constexpr auto Dialogs = 0x30; // TMap<EDialogEvent, FDialogInfoContainer>
	}

	namespace n_A1H_Wooden_club_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UMetabolismMacronutrientReservesPanel {
		constexpr auto _reserve_Protein = 0x260; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_Carbs = 0x268; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_Fat = 0x270; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_Fiber = 0x278; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_Sugar = 0x280; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_SaturatedFat = 0x288; // UMetabolismMacronutrientReserve*
		constexpr auto _reserve_Alcohol = 0x290; // UMetabolismMacronutrientReserve*
	}

	namespace n_ABP_WeaponScope_M82A1_C {
		constexpr auto ScopeViewCollision = 0x950; // UDummyCollisionCapsule*
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_WeaponActionNotify {
		constexpr auto WeaponActionNotifyType = 0x38; // EWeaponActionNotifyType
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UInventoryContainerClothes {
		constexpr auto _widget = 0x30; // UInventoryContainerWidget2*
		constexpr auto _data = 0x48; // FInventoryContainerClothesData
		constexpr auto _oldData = 0x68; // FInventoryContainerClothesData
	}

	namespace n_UConZBoatMountSlot {
		constexpr auto _socketName = 0xb8; // FName
		constexpr auto _entryPoints = 0xc0; // TArray<FMountSlotEntryPoint>
		constexpr auto _mountAudioEvent = 0xd0; // UAkAudioEvent*
		constexpr auto _unmountAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto _isReachableFromSky = 0xe0; // bool
		constexpr auto _mountingMotionIntensity = 0xe1; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xe2; // EMotionIntensity
		constexpr auto _mountee = 0xe8; // UObject*
		constexpr auto _reservee = 0xf0; // UObject*
		constexpr auto _canMounteeBeAttackedByMelee = 0xf8; // bool
		constexpr auto _interactionZoneMaterials = 0x100; // TArray<UPhysicalMaterial*>
		constexpr auto _vehicleSeatType = 0x110; // EVehicleSeatType
		constexpr auto _mountControlType = 0x111; // EBoatMountControlType
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x470; // EWidgetSpace
		constexpr auto TimingPolicy = 0x471; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x478; // UUserWidget*
		constexpr auto DrawSize = 0x480; // FIntPoint
		constexpr auto bManuallyRedraw = 0x488; // bool
		constexpr auto bRedrawRequested = 0x489; // bool
		constexpr auto RedrawTime = 0x48c; // float
		constexpr auto CurrentDrawSize = 0x498; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x4a0; // bool
		constexpr auto Pivot = 0x4a4; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4ac; // bool
		constexpr auto bWindowFocusable = 0x4ad; // bool
		constexpr auto WindowVisibility = 0x4ae; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4af; // bool
		constexpr auto OwnerPlayer = 0x4b0; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b8; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c8; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d8; // float
		constexpr auto BlendMode = 0x4dc; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4dd; // bool
		constexpr auto TickWhenOffscreen = 0x4de; // bool
		constexpr auto BodySetup = 0x4e0; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e8; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f8; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x508; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x510; // UMaterialInterface*
		constexpr auto RenderTarget = 0x518; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x520; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x528; // bool
		constexpr auto bEditTimeUsable = 0x529; // bool
		constexpr auto SharedLayerName = 0x52c; // FName
		constexpr auto LayerZOrder = 0x534; // int32_t
		constexpr auto GeometryMode = 0x538; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x53c; // float
		constexpr auto TickMode = 0x540; // ETickMode
		constexpr auto Widget = 0x568; // UUserWidget*
	}

	namespace n_USecondarySmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UItemStateBase {
		constexpr auto ItemClass = 0x28; // UObject*
		constexpr auto ID = 0x30; // FDbIntegerId
		constexpr auto Transform = 0x40; // FTransform
		constexpr auto Components = 0x70; // TArray<UItemComponentStateBase*>
	}

	namespace n_UInteractionContainerUserWidget {
		constexpr auto _actionContainer = 0x290; // UVerticalBox*
		constexpr auto _underlyingInteractableActor = 0x2a4; // TWeakObjectPtr<AActor>
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UTransformInputsToolProperties {
		constexpr auto bShowTransformUI = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UVoxelSolidifyMeshesTool {
		constexpr auto SolidifyProperties = 0x108; // UVoxelSolidifyMeshesToolProperties*
	}

	namespace n_UNiagaraDataInterfaceWater {
		constexpr auto SourceBody = 0x38; // AWaterBody*
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UAnimNotify_WeaponUpdateAmmunitionMeshes {
		constexpr auto showReversed = 0x38; // bool
		constexpr auto ammoIndices = 0x40; // TArray<int32_t>
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_USubtitleWidget {
		constexpr auto _subtitle = 0x260; // UTextBlock*
		constexpr auto _subtitleOverlay = 0x268; // UOverlay*
	}

	namespace n_UABP_MP5_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x318; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x360; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x438; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x510; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x6b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x6f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x740; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x958; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x9d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xa88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xb08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xb88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xc08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0xda8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xe48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UM1887_InsertShell_C {
		constexpr auto ModifiedReloadData = 0xa0; // FWeaponReloadData
	}

	namespace n_ABeer_Kajel_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UBP_BlackHawk_RemoveBoltInsertBolt_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
	}

	namespace n_UUI_Item2VicinityContainer_C {
		constexpr auto UberGraphFrame = 0x448; // FPointerToUberGraphFrame
		constexpr auto AmmoIcon = 0x450; // UImage*
		constexpr auto BackgroundBorder = 0x458; // UImage*
		constexpr auto BackgroundHighlight = 0x460; // UImage*
		constexpr auto Image_1 = 0x468; // UImage*
		constexpr auto Image_3 = 0x470; // UImage*
		constexpr auto Image_10 = 0x478; // UImage*
		constexpr auto LowerLeftTextFirst = 0x480; // UTextBlock*
		constexpr auto LowerLeftTextSecond = 0x488; // UTextBlock*
		constexpr auto LowerRightText = 0x490; // UTextBlock*
		constexpr auto Overlay_5 = 0x498; // UOverlay*
		constexpr auto PlayerGivenName = 0x4a0; // UTextBlock*
		constexpr auto ProgressBarDurability = 0x4a8; // UProgressBar*
		constexpr auto ProgressBarLeftFirst = 0x4b0; // UProgressBar*
		constexpr auto ProgressBarLeftSecond = 0x4b8; // UProgressBar*
		constexpr auto ProgressBarUses = 0x4c0; // UProgressBar*
		constexpr auto SizeBox_1 = 0x4c8; // USizeBox*
		constexpr auto TextBlock_1 = 0x4d0; // UTextBlock*
		constexpr auto TextBlock_2 = 0x4d8; // UTextBlock*
		constexpr auto TextBlock_21 = 0x4e0; // UTextBlock*
		constexpr auto UI_Border = 0x4e8; // UUI_Border_C*
		constexpr auto UI_Border_C_1 = 0x4f0; // UUI_Border_C*
		constexpr auto UpperLeftIcon = 0x4f8; // UImage*
		constexpr auto UpperLeftText = 0x500; // UTextBlock*
		constexpr auto UpperRightText = 0x508; // UTextBlock*
	}

	namespace n_AWeaponScope_POSP_C {
		constexpr auto ScopeViewCollision = 0x950; // UDummyCollisionCapsule*
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UEditNormalsOperatorFactory {
		constexpr auto Tool = 0x30; // UEditNormalsTool*
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_AConZPlayerController {
		constexpr auto ComponentsToHide = 0x578; // TArray<UPrimitiveComponent*>
		constexpr auto OnPrisonerSpawned = 0x588; // FMulticastInlineDelegate
		constexpr auto CurrentInteractionContainerWidget = 0x5b0; // UInteractionContainerUserWidget*
		constexpr auto LocalChatDistance = 0x5b8; // float
		constexpr auto IsTalkButtonPressed = 0x5bc; // bool
		constexpr auto _playerRpcChannel = 0x5c0; // UPlayerRpcChannel*
		constexpr auto _userProfile = 0x630; // UUserProfile*
		constexpr auto _userFakeName = 0x648; // FString
		constexpr auto _possessedPawn = 0x688; // APawn*
		constexpr auto _noiseEmitterComponent = 0x6a0; // UPawnNoiseEmitterComponent*
		constexpr auto _teleportWorldStreamingLocationChangeDelay = 0x6b8; // float
		constexpr auto _teleportWorldStreamingTriggerLag = 0x6bc; // float
		constexpr auto _repFamePoints = 0x728; // int32_t
		constexpr auto _moneyBalance = 0x730; // int64_t
		constexpr auto _maxHistorySize = 0x7d8; // int32_t
		constexpr auto _weatherHeightUpdatePeriod = 0x7f0; // float
		constexpr auto _adminCommandRegistry = 0x7f8; // UAdminCommandRegistry*
		constexpr auto _achievementsManagerClient = 0x820; // AAchievementsManagerClient*
		constexpr auto _achievementsManagerClientClass = 0x828; // AAchievementsManagerClient*
		constexpr auto _missionManagerClass = 0x830; // AMissionManager*
		constexpr auto _missionManager = 0x838; // AMissionManager*
		constexpr auto _missionDialogueManagerClass = 0x840; // AMissionDialogueManager*
		constexpr auto _proofOfLifeSendInterval = 0x850; // float
		constexpr auto _proofOfLifeReceiveTimeout = 0x854; // float
		constexpr auto _isReadyForPlayDelay = 0x8b8; // float
		constexpr auto _reportPlayTimeInterval = 0x8c8; // float
		constexpr auto _replicatedServerUtcNow = 0x8d0; // FDateTime
		constexpr auto _pathFollowingComponent = 0x938; // UPathFollowingComponent*
		constexpr auto _forceSpawnAsDrone = 0x940; // bool
		constexpr auto _mpSpawnDroneAndPrisoner = 0x941; // bool
		constexpr auto _photoModePawnClass = 0x950; // APhotoModePawn*
		constexpr auto _refreshTimeForPawnLocationOnMap = 0x974; // float
		constexpr auto _mainMPC = 0x980; // UMaterialParameterCollection*
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_ABuilding {
		constexpr auto _ladderMarkers = 0x230; // TArray<FLadderMarker>
		constexpr auto _windowMarkers = 0x250; // TArray<FWindowMarker>
		constexpr auto _windowMarkersDynamic = 0x260; // TArray<FWindowMarker>
		constexpr auto _windowMarkerModifiers = 0x270; // TArray<FWindowMarkerModifier>
		constexpr auto _isCleared = 0x280; // bool
		constexpr auto _isClaimable = 0x281; // bool
		constexpr auto _doors = 0x288; // TMap<FString, ADoor*>
		constexpr auto _fortifications = 0x2d8; // TArray<UFortificationComponent*>
	}

	namespace n_UGameEventParticipantStats {
		constexpr auto _score = 0x28; // float
	}

	namespace n_AItemSpawnerGroup {
		constexpr auto SpawnerComponent = 0x220; // UItemSpawnerComponent*
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto bHearingOcclusionEnabled = 0x60; // bool
		constexpr auto HearingRangeReductionIfOccluded = 0x64; // float
		constexpr auto HearingOcclusionCollisionChannel = 0x68; // ECollisionChannel
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UConZVehicle4WDriverMountSlot {
		constexpr auto _forwardIdleAnimation = 0x150; // UBlendSpace*
		constexpr auto _forwardSteeringAnimation = 0x158; // UAnimSequenceBase*
		constexpr auto _forwardSteeringAnimationFP = 0x160; // UAnimSequenceBase*
		constexpr auto _reverseIdleAnimation = 0x168; // UBlendSpace*
		constexpr auto _reverseSteeringAnimation = 0x170; // UAnimSequenceBase*
		constexpr auto _reverseSteeringAnimationFP = 0x178; // UAnimSequenceBase*
	}

	namespace n_APhotoModePawn {
		constexpr auto HudWidgetClass = 0x280; // UPhotoModeMainPanel*
		constexpr auto AnimInstanceClass = 0x288; // UPrisonerPhotoModeAnimInstance*
		constexpr auto _camera = 0x2a0; // UCineCameraComponent*
		constexpr auto _light = 0x2a8; // USpotLightComponent*
		constexpr auto _visionEffects = 0x2b0; // UVisionEffectsComponent*
		constexpr auto _shutterSound = 0x2b8; // UAkAudioEvent*
		constexpr auto _maxFocusDistance = 0x2c0; // float
		constexpr auto _collisionSphereRadius = 0x2c4; // float
		constexpr auto _minOrbitingDistance = 0x2c8; // float
		constexpr auto _maxDistanceFromTarget = 0x2cc; // float
		constexpr auto _desiredOrbitDistance = 0x2d0; // float
		constexpr auto _maxMultiplayerCameraHeightDifference = 0x2d4; // float
		constexpr auto _maxMultiplayerExposureValue = 0x2d8; // float
		constexpr auto _maxMultiplayerCameraFOV = 0x2dc; // float
		constexpr auto _keyInputCameraSpeed = 0x2e0; // float
		constexpr auto _timeDilationInterpSpeed = 0x2e4; // float
	}

	namespace n_UPrisonerBodyCondition_HeavyInjuries {
		constexpr auto _injuriesDamageRatioToExistVsConstitution = 0xa8; // FFloatInterval
		constexpr auto _painSymptomOverallIntensity = 0xb0; // float
		constexpr auto _painSymptomLimpingIntensity = 0xb4; // float
		constexpr auto _painSymptomClass = 0xb8; // UPrisonerBodySymptom_Pain*
		constexpr auto _painSymptomCause = 0xc0; // UPrisonerBodySymptomCause_Pain*
	}

	namespace n_UPrisonerBodyCondition_Hypothermia {
		constexpr auto _maxSeverity = 0xa8; // float
		constexpr auto _bodyTemperatureToDie = 0xac; // float
		constexpr auto _bodyTemperatureToExist = 0xb0; // float
		constexpr auto _bodyTemperatureToRecover = 0xb4; // float
		constexpr auto _bodyTemperatureSampleInterval = 0xbc; // float
		constexpr auto _bodyTemperatureAtUntreatedStart = 0xc8; // float
		constexpr auto _bodyTemperatureAtStabilizationStart = 0xcc; // float
		constexpr auto _bodyTemperatureAtRecoveryStart = 0xd0; // float
		constexpr auto _state = 0xd4; // EPrisonerBodyConditionState
		constexpr auto _severityRatio = 0xdc; // float
		constexpr auto _severityRatioAtUntreatedStart = 0xe0; // float
		constexpr auto _severityRatioAtRecoveryStart = 0xe4; // float
		constexpr auto _severityRatioInterpSpeed = 0xec; // float
	}

	namespace n_UThermalSensorComponent {
		constexpr auto _temperature = 0xb0; // float
		constexpr auto _emissivity = 0xb4; // float
		constexpr auto _radius = 0xb8; // float
		constexpr auto _mass = 0xbc; // float
		constexpr auto _specificHeatCapacity = 0xc0; // float
		constexpr auto _thermalConductivity = 0xc4; // float
		constexpr auto _packedTemperature = 0xe8; // char
		constexpr auto _temperatureReplicationEnabled = 0xf0; // bool
		constexpr auto _packTemperatureOffset = 0xf4; // float
		constexpr auto _packTemperatureScale = 0xf8; // float
		constexpr auto _packTemperatureGamma = 0xfc; // float
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UABP_AKS_74U_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x318; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x360; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x438; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x510; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x6b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x6f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x740; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByInt = 0x958; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x9f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0xaf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xe28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UUI_RewardItemWidfget_C {
		constexpr auto _border = 0x270; // UImage*
		constexpr auto _bulletBackground = 0x278; // UImage*
		constexpr auto _textBackground = 0x280; // UImage*
	}

	namespace n_UVoxelBlendMeshesToolProperties {
		constexpr auto BlendPower = 0x60; // double
		constexpr auto BlendFalloff = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_URevolveToolProperties {
		constexpr auto bConnectOpenProfileToAxis = 0xb0; // bool
		constexpr auto bSnapToWorldGrid = 0xb1; // bool
		constexpr auto DrawPlaneOrigin = 0xb4; // FVector
		constexpr auto DrawPlaneOrientation = 0xc0; // FRotator
		constexpr auto bEnableSnapping = 0xcc; // bool
		constexpr auto bAllowedToEditDrawPlane = 0xcd; // bool
	}

	namespace n_AWeaponRevolver {
		constexpr auto FireState = 0x2dd0; // UWeaponStateFiring*
		constexpr auto _revolverActiveState = 0x2dd8; // UWeaponState*
		constexpr auto _fireAnimation = 0x2de0; // FCharacterAndItemAnimation
		constexpr auto _dryFireAnimation = 0x2df0; // FCharacterAndItemAnimation
		constexpr auto _rollDrumAnimation = 0x2e00; // FCharacterAndItemAnimation
		constexpr auto _russianRouletteMontage = 0x2e10; // UAnimMontage*
		constexpr auto _drumRotationOffset = 0x2e18; // float
		constexpr auto _firingIndex = 0x2e1c; // int32_t
		constexpr auto _drumRotationInterpolatorSpeed = 0x2e30; // float
		constexpr auto _drumRotationDirection = 0x2e34; // ERotationDirection
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UDisplaceMeshTool {
		constexpr auto CommonProperties = 0x88; // UDisplaceMeshCommonProperties*
		constexpr auto DirectionalFilterProperties = 0x90; // UDisplaceMeshDirectionalFilterProperties*
		constexpr auto TextureMapProperties = 0x98; // UDisplaceMeshTextureMapProperties*
		constexpr auto NoiseProperties = 0xa0; // UDisplaceMeshPerlinNoiseProperties*
		constexpr auto SineWaveProperties = 0xa8; // UDisplaceMeshSineWaveProperties*
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_UMIDIDeviceController {
		constexpr auto OnMidiEvent = 0x28; // FMulticastInlineDelegate
		constexpr auto DeviceID = 0x38; // int32_t
		constexpr auto DeviceName = 0x40; // FString
	}

	namespace n_UTeamInvitationWidget {
		constexpr auto InvitationText = 0x278; // FText
		constexpr auto invitor = 0x290; // APrisoner*
		constexpr auto invited = 0x298; // APrisoner*
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UKillBoxEntranceComponent {
		constexpr auto _killBoxManager = 0xc0; // AKillBoxManager*
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_APot2_C {
		constexpr auto BasicGameResourceContainer = 0x7e0; // UBasicGameResourceContainerComponent*
		constexpr auto RainCollector = 0x7e8; // URainCollectorComponent*
	}

	namespace n_UMissionResult {
		constexpr auto _resultTitleOverlay = 0x260; // UOverlay*
		constexpr auto _resultTitleDescription = 0x268; // UTextBlock*
		constexpr auto _resultRewardContainerOverlay = 0x270; // UOverlay*
		constexpr auto _resultRewardContainer = 0x278; // UVerticalBox*
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_ABP_WeaponBullet_DildoArrow_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_UBP_LoadMagazine_3Bullets_Center_C {
		constexpr auto StartSectionOneLoadedBullet = 0x90; // FName
		constexpr auto StartSectionTwoOrMoreLoadedBullets = 0x98; // FName
		constexpr auto EndSectionEmpty = 0xa0; // FName
		constexpr auto EndSectionOneLoadedBullet = 0xa8; // FName
		constexpr auto EndSectionTwoLoadedBullets = 0xb0; // FName
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UABP_ImprovisedFishingReel_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x2f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum = 0x3a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot = 0x458; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x4a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x540; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x6c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x818; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x840; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x868; // FAnimNode_SequenceEvaluator
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UTraderMainPanel {
		constexpr auto _tabRow = 0x260; // UTabContainer*
		constexpr auto _panelSwitcher = 0x268; // UWidgetSwitcher*
		constexpr auto _buyPanel = 0x270; // UTraderBuyPanel*
		constexpr auto _sellPanel = 0x278; // UTraderSellPanel*
		constexpr auto _loadingScreen = 0x280; // UPanelWidget*
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UOffsetMeshToolProperties {
		constexpr auto OffsetType = 0x60; // EOffsetMeshToolOffsetType
		constexpr auto Distance = 0x64; // float
		constexpr auto bCreateShell = 0x68; // bool
	}

	namespace n_UActionProgressWidget {
		constexpr auto ActionProgressFinishedEvent = 0x278; // FMulticastInlineDelegate
		constexpr auto ActionProgressCancelledEvent = 0x288; // FMulticastInlineDelegate
		constexpr auto CanCancel = 0x298; // bool
		constexpr auto _currentTime = 0x2a4; // float
		constexpr auto _duration = 0x2a8; // float
		constexpr auto _manualMode = 0x2ac; // bool
	}

	namespace n_AWeaponAttachmentSuppressor {
		constexpr auto MuzzleSocketName = 0x7e0; // FName
		constexpr auto NoiseMultiplier = 0x7e8; // float
		constexpr auto IsImprovised = 0x7ec; // bool
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_AAmbientSounds {
		constexpr auto MinCameraLocationDeltaForUpdate = 0x220; // float
		constexpr auto ForestMask = 0x224; // FGameplayTag
		constexpr auto ForestMaskSearchRadius = 0x22c; // float
		constexpr auto CoastalForestAudioEvent = 0x230; // UAkAudioEvent*
		constexpr auto ContinentalForest1AudioEvent = 0x238; // UAkAudioEvent*
		constexpr auto ContinentalForest2AudioEvent = 0x240; // UAkAudioEvent*
		constexpr auto ContinentalForest3AudioEvent = 0x248; // UAkAudioEvent*
		constexpr auto UndergroundAudioEvent = 0x250; // UAkAudioEvent*
		constexpr auto CityMask = 0x258; // FGameplayTag
		constexpr auto CityMaskSearchRadius = 0x260; // float
		constexpr auto CityAudioEvent = 0x268; // UAkAudioEvent*
		constexpr auto LargeVillageAudioEvent = 0x270; // UAkAudioEvent*
		constexpr auto SmallVillageAudioEvent = 0x278; // UAkAudioEvent*
		constexpr auto IndustrialAreaAudioEvent = 0x280; // UAkAudioEvent*
	}

	namespace n_UModularTooltipElement_Modifier {
		constexpr auto _modifierTextBlock = 0x2e8; // UTextBlock*
		constexpr auto _remainingTimeProgressBar = 0x2f0; // UMetabolismAdvancedProgressBar*
	}

	namespace n_UProceduralSphereToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto LatitudeSlices = 0x74; // int32_t
		constexpr auto LongitudeSlices = 0x78; // int32_t
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UExplosiveProtectionItemComponentState {
		constexpr auto IsArmed = 0x40; // bool
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x620; // APlayerController*
		constexpr auto OriginalPlayer = 0x628; // UPlayer*
		constexpr auto SpeedScale = 0x630; // float
		constexpr auto InitialMaxSpeed = 0x634; // float
		constexpr auto InitialAccel = 0x638; // float
		constexpr auto InitialDecel = 0x63c; // float
	}

	namespace n_UPrisonerBodyCondition_Knockout {
		constexpr auto _reason = 0xa8; // FText
		constexpr auto _duration = 0xc0; // float
		constexpr auto _elapsedTime = 0xc4; // float
		constexpr auto _unconsciousnessSymptomClass = 0xc8; // UPrisonerBodySymptom_Unconsciousness*
		constexpr auto _unconsciousnessSymptomCause = 0xd0; // UPrisonerBodySymptomCause_Unconsciousness*
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UDcxVehicleDriveComponent {
		constexpr auto EngineData = 0x240; // FDcxVehicleEngineData
		constexpr auto GearboxData = 0x2e0; // FDcxVehicleGearboxData
		constexpr auto ClutchData = 0x310; // FDcxVehicleClutchData
		constexpr auto bAutoReverse = 0x320; // bool
		constexpr auto WrongDirectionThreshold = 0x324; // float
		constexpr auto bAutoBrake = 0x328; // bool
		constexpr auto StopThreshold = 0x32c; // float
		constexpr auto SteerCurve = 0x330; // FRuntimeFloatCurve
	}

	namespace n_ATradePost {
		constexpr auto _traderMarkers = 0x380; // TArray<FTraderMarker>
		constexpr auto _spawnedTraders = 0x390; // TArray<ATrader*>
		constexpr auto _spawnedDepots = 0x3a0; // TMap<FDbIntegerId, FSpawnedDepotsHelperStruct>
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UWashClothesData {
		constexpr auto WashClothes = 0x30; // TMap<AItem*, FWashItemData>
		constexpr auto SkillToIncrease = 0x80; // USkill*
		constexpr auto SkillIncreaseAmount = 0x88; // float
		constexpr auto SkillIncreaseModifier = 0x8c; // float
	}

	namespace n_UProceduralBoxToolProperties {
		constexpr auto Height = 0x80; // float
		constexpr auto HeightSubdivisions = 0x84; // int32_t
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_AFoodItem {
		constexpr auto Volume = 0x7c0; // float
		constexpr auto Energy = 0x7c4; // float
		constexpr auto Water = 0x7c8; // float
		constexpr auto EatingTime = 0x7cc; // float
		constexpr auto DigestionGroup = 0x7d0; // EDigestionGroup
		constexpr auto Fat = 0x7d4; // float
		constexpr auto SaturatedFat = 0x7d8; // float
		constexpr auto Sodium = 0x7dc; // float
		constexpr auto Carbs = 0x7e0; // float
		constexpr auto Fiber = 0x7e4; // float
		constexpr auto Sugar = 0x7e8; // float
		constexpr auto Proteins = 0x7ec; // float
		constexpr auto Alcohol = 0x7f0; // float
		constexpr auto Vitamin_A = 0x7f4; // float
		constexpr auto Vitamin_B1 = 0x7f8; // float
		constexpr auto Vitamin_B2 = 0x7fc; // float
		constexpr auto Vitamin_B3 = 0x800; // float
		constexpr auto Vitamin_B4 = 0x804; // float
		constexpr auto Vitamin_B5 = 0x808; // float
		constexpr auto Vitamin_B6 = 0x80c; // float
		constexpr auto Vitamin_B9 = 0x810; // float
		constexpr auto Vitamin_B12 = 0x814; // float
		constexpr auto Vitamin_C = 0x818; // float
		constexpr auto Vitamin_D = 0x81c; // float
		constexpr auto Vitamin_E = 0x820; // float
		constexpr auto Vitamin_K = 0x824; // float
		constexpr auto Calcium = 0x828; // float
		constexpr auto Iron = 0x82c; // float
		constexpr auto Magnesium = 0x830; // float
		constexpr auto Phosphorus = 0x834; // float
		constexpr auto Potassium = 0x838; // float
		constexpr auto Zinc = 0x83c; // float
		constexpr auto Copper = 0x840; // float
		constexpr auto Manganese = 0x844; // float
		constexpr auto Selenium = 0x848; // float
		constexpr auto Cookable = 0x84c; // bool
		constexpr auto CookingTime = 0x850; // float
		constexpr auto MinCookingTemperature = 0x854; // float
		constexpr auto MaxCookingTemperature = 0x858; // float
		constexpr auto MinCookingSpeed = 0x85c; // float
		constexpr auto MaxCookingSpeed = 0x860; // float
		constexpr auto ThermalConductivityFactor = 0x864; // float
		constexpr auto QualitySensitivityFactor = 0x868; // float
		constexpr auto FreezingTemperature = 0x86c; // float
		constexpr auto RoomTemperature = 0x870; // float
		constexpr auto Spoilable = 0x874; // bool
		constexpr auto ShelfLife = 0x878; // float
		constexpr auto SpoilageRateCooked = 0x87c; // float
		constexpr auto SpoilageRateFrozen = 0x880; // float
		constexpr auto SpoilageRateModifierWhileSealed = 0x884; // float
		constexpr auto IsConsumable = 0x888; // bool
		constexpr auto CanCheckTaste = 0x889; // bool
		constexpr auto SteamComponent = 0x890; // UParticleSystemComponent*
		constexpr auto SteamParticles = 0x898; // UParticleSystem*
		constexpr auto SmokeComponent = 0x8a0; // UParticleSystemComponent*
		constexpr auto SmokeParticles = 0x8a8; // UParticleSystem*
		constexpr auto ItemOpenedMesh = 0x8b0; // UStaticMesh*
		constexpr auto ItemEmptyMesh = 0x8b8; // UStaticMesh*
		constexpr auto StartEatingAudioEvent = 0x8c0; // UAkAudioEvent*
		constexpr auto StopEatingAudioEvent = 0x8c8; // UAkAudioEvent*
		constexpr auto StartCookingAudioEvent = 0x8d0; // UAkAudioEvent*
		constexpr auto StopCookingAudioEvent = 0x8d8; // UAkAudioEvent*
		constexpr auto _resourceTypeForConsumption = 0x8e0; // UGameResourceType*
		constexpr auto _caloriesBonus = 0x8e8; // float
		constexpr auto _catchSicknessModifier = 0x8ec; // float
		constexpr auto _itemOpened = 0x8f0; // bool
		constexpr auto _temperature = 0x8f4; // float
		constexpr auto _environmentTemperature = 0x8f8; // float
		constexpr auto _isCooking = 0x8fc; // bool
		constexpr auto _cookedAmount = 0x900; // float
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UServerInfoWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x280; // UButton*
		constexpr auto DeleteServerButton = 0x288; // UButton*
		constexpr auto FriendsSize = 0x290; // USizeBox*
		constexpr auto FriendsText = 0x298; // UTextBlock*
		constexpr auto Image_1 = 0x2a0; // UImage*
		constexpr auto Image_2 = 0x2a8; // UImage*
		constexpr auto Image_3 = 0x2b0; // UImage*
		constexpr auto Image_4 = 0x2b8; // UImage*
		constexpr auto Image_5 = 0x2c0; // UImage*
		constexpr auto Image_6 = 0x2c8; // UImage*
		constexpr auto Image_7 = 0x2d0; // UImage*
		constexpr auto Image_8 = 0x2d8; // UImage*
		constexpr auto ModeSize = 0x2e0; // USizeBox*
		constexpr auto ModeText = 0x2e8; // UTextBlock*
		constexpr auto NameSize = 0x2f0; // USizeBox*
		constexpr auto NameText = 0x2f8; // UTextBlock*
		constexpr auto PasswordSize = 0x300; // USizeBox*
		constexpr auto PasswordText = 0x308; // UTextBlock*
		constexpr auto PingSize = 0x310; // USizeBox*
		constexpr auto PingText = 0x318; // UTextBlock*
		constexpr auto PlayersSize = 0x320; // USizeBox*
		constexpr auto PlayersText = 0x328; // UTextBlock*
		constexpr auto ScaleBoxVar = 0x330; // UScaleBox*
		constexpr auto Throbber_1 = 0x338; // UThrobber*
		constexpr auto TimeSize = 0x340; // USizeBox*
		constexpr auto TimeText = 0x348; // UTextBlock*
		constexpr auto VersionSize = 0x350; // USizeBox*
		constexpr auto VersionText = 0x358; // UTextBlock*
		constexpr auto Address = 0x360; // FString
		constexpr auto Port = 0x370; // int32_t
		constexpr auto HasContent = 0x374; // bool
		constexpr auto OnClicked = 0x378; // FMulticastInlineDelegate
		constexpr auto _serverInfo = 0x388; // FServerInfo
		constexpr auto OnDoubleClicked = 0x3d8; // FMulticastInlineDelegate
		constexpr auto _lastClickTime = 0x3e8; // float
		constexpr auto FontSize = 0x3ec; // int32_t
		constexpr auto IsFavoriteServer = 0x3f0; // bool
		constexpr auto OnRemoved = 0x3f8; // FMulticastInlineDelegate
		constexpr auto ClickSound = 0x408; // UAkAudioEvent*
	}

	namespace n_UPlaneCutToolProperties {
		constexpr auto bSnapToWorldGrid = 0x60; // bool
		constexpr auto bKeepBothHalves = 0x61; // bool
		constexpr auto SpacingBetweenHalves = 0x64; // float
		constexpr auto bFillCutHole = 0x68; // bool
		constexpr auto bShowPreview = 0x69; // bool
		constexpr auto bFillSpans = 0x6a; // bool
	}

	namespace n_UQuickAccessItemSwitcher3 {
		constexpr auto Index = 0x278; // int32_t
		constexpr auto _nameText = 0x280; // UTextBlock*
		constexpr auto _slotWidget = 0x288; // UInventorySlotUserWidget*
		constexpr auto _itemWidget = 0x290; // UItemWidget2*
		constexpr auto _throwingModeCheckbox = 0x298; // UCheckBox*
		constexpr auto _throwingModeCaption = 0x2b8; // FText
		constexpr auto _throwingModeDescription = 0x2d0; // FText
	}

	namespace n_USledgeMountSlot {
		constexpr auto _socketName = 0xb8; // FName
		constexpr auto _mountAudioEvent = 0xc0; // UAkAudioEvent*
		constexpr auto _mountPriority = 0xc8; // int32_t
		constexpr auto _entryPoints = 0xd0; // TArray<FMountSlotEntryPoint>
		constexpr auto _unmountAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto _isReachableFromSky = 0xe8; // bool
		constexpr auto _mountingMotionIntensity = 0xe9; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xea; // EMotionIntensity
		constexpr auto _mounteeCenterOfMassOffset = 0xec; // FVector
		constexpr auto _minEffectiveMounteeMass = 0xf8; // float
		constexpr auto _maxEffectiveMounteeMass = 0xfc; // float
		constexpr auto _mountee = 0x100; // UObject*
		constexpr auto _reservee = 0x108; // UObject*
		constexpr auto _canMounteeBeAttackedByMelee = 0x110; // bool
		constexpr auto _interactionZoneMaterials = 0x118; // TArray<UPhysicalMaterial*>
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_ABP_WeaponBullet_762x54FMJ_Crafted_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UPreviewGeometry {
		constexpr auto ParentActor = 0x28; // APreviewGeometryActor*
		constexpr auto LineSets = 0x30; // TMap<FString, ULineSetComponent*>
	}

	namespace n_USmoothFillBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UInsertCartridge {
		constexpr auto MontageEndSectionName = 0x90; // FName
	}

	namespace n_USetCollisionGeometryToolProperties {
		constexpr auto GeometryType = 0x60; // ECollisionGeometryType
		constexpr auto InputMode = 0x64; // ESetCollisionGeometryInputMode
		constexpr auto bUseWorldSpace = 0x68; // bool
		constexpr auto bRemoveContained = 0x69; // bool
		constexpr auto bEnableMaxCount = 0x6a; // bool
		constexpr auto MaxCount = 0x6c; // int32_t
		constexpr auto MinThickness = 0x70; // float
		constexpr auto bDetectBoxes = 0x74; // bool
		constexpr auto bDetectSpheres = 0x75; // bool
		constexpr auto bDetectCapsules = 0x76; // bool
		constexpr auto bSimplifyHulls = 0x77; // bool
		constexpr auto HullTargetFaceCount = 0x78; // int32_t
		constexpr auto bSimplifyPolygons = 0x7c; // bool
		constexpr auto HullTolerance = 0x80; // float
		constexpr auto SweepAxis = 0x84; // EProjectedHullAxis
		constexpr auto bAppendToExisting = 0x88; // bool
		constexpr auto SetCollisionType = 0x8c; // ECollisionGeometryMode
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ATargetObjective {
		constexpr auto _targetClasses = 0x330; // TMap<TSoftClassPtr<UObject>, FObjectiveItem>
		constexpr auto _specificTarget = 0x380; // bool
		constexpr auto _targetMeshes = 0x388; // TMap<TSoftObjectPtr<AConZCharacter>, FObjectiveItem>
		constexpr auto _targetItems = 0x3d8; // TArray<TSoftClassPtr<UObject>>
	}

	namespace n_ULakeGenerator {
		constexpr auto LakeMeshComp = 0x28; // UStaticMeshComponent*
		constexpr auto LakeCollisionComp = 0x30; // UBoxComponent*
		constexpr auto LakeCollision = 0x38; // ULakeCollisionComponent*
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_A1H_Wooden_club_with_spikes_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UABP_UMP45_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x318; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x360; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x3a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x3f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x438; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x510; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x6b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x6f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x740; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByInt = 0x958; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x9f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0xa78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xb28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xe28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
	}

	namespace n_UAdminCommandArgumentCompletion_Widget {
		constexpr auto _commandClass = 0x30; // UAdminCommand_AddOrRemoveWidget*
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UReplicationGraphNode {
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UMIDIDeviceInputController {
		constexpr auto OnMIDINoteOn = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMIDINoteOff = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMIDIPitchBend = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMIDIAftertouch = 0x58; // FMulticastInlineDelegate
		constexpr auto OnMIDIControlChange = 0x68; // FMulticastInlineDelegate
		constexpr auto OnMIDIProgramChange = 0x78; // FMulticastInlineDelegate
		constexpr auto OnMIDIChannelAftertouch = 0x88; // FMulticastInlineDelegate
		constexpr auto DeviceID = 0x98; // int32_t
		constexpr auto DeviceName = 0xa0; // FString
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UConsoleTextLine_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TextLine = 0x268; // UTextBlock*
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UMeshEditingViewProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto MaterialMode = 0x64; // EMeshEditingMaterialModes
		constexpr auto bFlatShading = 0x68; // bool
		constexpr auto Color = 0x6c; // FLinearColor
		constexpr auto Image = 0x80; // UTexture2D*
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UModularTooltipElement_ValueWithModifier {
		constexpr auto _nameTextBlock = 0x2e8; // UTextBlock*
		constexpr auto _currentValueTextBlock = 0x2f0; // UTextBlock*
		constexpr auto _baseValueTextBlock = 0x2f8; // UTextBlock*
		constexpr auto _modifierSignTextBlock = 0x300; // UTextBlock*
		constexpr auto _modifierTextBlock = 0x308; // UTextBlock*
	}

	namespace n_UInventorySlotWidget_C {
		constexpr auto Width = 0x298; // int32_t
		constexpr auto Height = 0x29c; // int32_t
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_Fatigue {
		constexpr auto _symptomClass = 0x30; // UPrisonerBodySymptom_Fatigue*
		constexpr auto _symptomCause = 0x38; // UPrisonerBodySymptomCause_Fatigue*
		constexpr auto _maxStaminaModifierVsSeverity = 0x40; // FRuntimeFloatCurve
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UBorderFilled_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto BackgroundImageAnimation = 0x280; // UWidgetAnimation*
		constexpr auto BackgroundImage = 0x288; // UImage*
		constexpr auto BorderImage = 0x290; // UImage*
		constexpr auto _marginPixelSize = 0x298; // float
		constexpr auto _marginGap = 0x29c; // float
		constexpr auto _borderColor = 0x2a0; // FLinearColor
		constexpr auto _backgroundColor = 0x2b0; // FLinearColor
		constexpr auto _marginBottomSize = 0x2c0; // float
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_ULiveLinkInstance {
		constexpr auto CurrentRetargetAsset = 0x2b8; // ULiveLinkRetargetAsset*
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UABP_Prisoner_WheelBarrow_C {
		constexpr auto UberGraphFrame = 0x3a0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Fabrik_2 = 0x3b0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x540; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x560; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik = 0x580; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x710; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x7f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x898; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x938; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xa20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xb60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xc68; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Root = 0xd70; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0xda0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0xe88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xfe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x1008; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1030; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SpringBone_2 = 0x10d0; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x11f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1218; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK = 0x1238; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_SpringBone = 0x1330; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1458; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x14f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x1618; // FAnimNode_SequencePlayer
	}

	namespace n_UUI_SpawnChoiceWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Border_1 = 0x280; // UBorder*
		constexpr auto ChoiceButton = 0x288; // UButton*
		constexpr auto OptionText = 0x290; // UTextBlock*
		constexpr auto PriceText = 0x298; // UTextBlock*
		constexpr auto ProgressBar = 0x2a0; // UImage*
		constexpr auto ProhibitedText = 0x2a8; // UTextBlock*
		constexpr auto SelectionArrow = 0x2b0; // UImage*
		constexpr auto Text = 0x2b8; // FText
		constexpr auto Selected = 0x2d0; // bool
		constexpr auto OnClicked = 0x2d8; // FMulticastInlineDelegate
		constexpr auto Price = 0x2e8; // int32_t
		constexpr auto Disabled = 0x2ec; // bool
		constexpr auto Prohibited = 0x2ed; // bool
		constexpr auto BorderFill = 0x2f0; // float
		constexpr auto ProgressMaterial = 0x2f8; // UMaterialInstanceDynamic*
		constexpr auto Timeout = 0x300; // bool
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UUI_StatisticsListRow_C {
		constexpr auto _horizontalLine = 0x278; // UImage*
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_AEffectOverTimeDealer {
		constexpr auto _updateGroups = 0x220; // TArray<FDamageOverTimeUpdateGroup>
		constexpr auto _actorLimitPerTick = 0x230; // int32_t
		constexpr auto _timeDilation = 0x238; // float
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWidget {
		constexpr auto slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x478; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x480; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x488; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x498; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x5a0; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5a8; // int32_t
		constexpr auto MinLodModel = 0x5ac; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5b8; // float
		constexpr auto LODInfo = 0x5c8; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5fc; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x5fe; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5fe; // char : 1
		constexpr auto bForceWireframe = 0x5fe; // char : 1
		constexpr auto bDisplayBones = 0x5fe; // char : 1
		constexpr auto bDisableMorphTarget = 0x5fe; // char : 1
		constexpr auto bHideSkin = 0x5ff; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5ff; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5ff; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5ff; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5ff; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5ff; // char : 1
		constexpr auto bRecentlyRendered = 0x5ff; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5ff; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x600; // char : 1
		constexpr auto bCPUSkinning = 0x600; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x600; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x600; // char : 1
		constexpr auto bRenderStatic = 0x600; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x600; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x601; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x601; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x604; // float
		constexpr auto CachedWorldSpaceBounds = 0x618; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x640; // FMatrix
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UCompassWidget_C {
		constexpr auto CompassTick = 0x2a0; // UImage*
		constexpr auto RetainerBox_1 = 0x2a8; // URetainerBox*
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UZombieArmorDamageReductionAssetData {
		constexpr auto CollisionDamageMultiplierPerBodyPart = 0x28; // float [0xc]
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_AVDSimulationSettingsActor {
		constexpr auto Settings = 0x220; // FVDSettings
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_URevolveProperties {
		constexpr auto RevolutionDegrees = 0x60; // double
		constexpr auto RevolutionDegreesOffset = 0x68; // double
		constexpr auto Steps = 0x70; // int32_t
		constexpr auto bReverseRevolutionDirection = 0x74; // bool
		constexpr auto bFlipMesh = 0x75; // bool
		constexpr auto bProfileIsCrossSectionOfSide = 0x76; // bool
		constexpr auto PolygroupMode = 0x77; // ERevolvePropertiesPolygroupMode
		constexpr auto QuadSplitMode = 0x78; // ERevolvePropertiesQuadSplit
		constexpr auto DiagonalProportionTolerance = 0x80; // double
		constexpr auto CapFillMode = 0x88; // ERevolvePropertiesCapFillMode
		constexpr auto bWeldFullRevolution = 0x89; // bool
		constexpr auto bWeldVertsOnAxis = 0x8a; // bool
		constexpr auto AxisWeldTolerance = 0x90; // double
		constexpr auto bSharpNormals = 0x98; // bool
		constexpr auto SharpNormalAngleTolerance = 0xa0; // double
		constexpr auto bFlipVs = 0xa8; // bool
		constexpr auto bUVsSkipFullyWeldedEdges = 0xa9; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UCustomZoneSettingsDetailsDisplay {
		constexpr auto _displayBox = 0x290; // UBorder*
		constexpr auto _configurationDetailsWidgetClass = 0x298; // UCustomZoneSettingsConfigurationDetails*
		constexpr auto _regionDetailsWidgetClass = 0x2a0; // UCustomZoneSettingsRegionDetails*
		constexpr auto _configurationDetails = 0x2a8; // UCustomZoneSettingsConfigurationDetails*
		constexpr auto _regionDetails = 0x2b0; // UCustomZoneSettingsRegionDetails*
	}

	namespace n_UClearStovePipe {
		constexpr auto MontageEndSectionName = 0xb8; // FName
	}

	namespace n_UDualArcedProgressBar {
		constexpr auto _frontFillImage = 0x260; // UImage*
		constexpr auto _backFillImage = 0x268; // UImage*
		constexpr auto _frontFillMaterial = 0x270; // UMaterialInstanceConstant*
		constexpr auto _backFillMaterial = 0x278; // UMaterialInstanceConstant*
		constexpr auto _frontFillColor = 0x280; // FLinearColor
		constexpr auto _backFillColor = 0x290; // FLinearColor
	}

	namespace n_UInventoryContainer2D {
		constexpr auto _data = 0xb8; // FInventoryContainer2DRepData
		constexpr auto _oldData = 0xd8; // FInventoryContainer2DRepData
		constexpr auto _widgets = 0xf8; // TArray<UInventoryContainerWidget2*>
		constexpr auto _parent = 0x108; // TScriptInterface<IInventoryNode>
		constexpr auto _widget = 0x118; // UInventoryContainerWidget2*
		constexpr auto _grid = 0x120; // TArray<bool>
		constexpr auto _gridDamaged = 0x130; // TArray<bool>
	}

	namespace n_UWeaponRevolverAnimInstance {
		constexpr auto _useDrumRotation = 0x300; // bool
		constexpr auto _drumRotation = 0x304; // float
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UPrisonerConsumableUserData {
		constexpr auto ConsumptionMethod = 0x28; // EGameResourceConsumptionMethod
		constexpr auto ItemClass = 0x30; // AItem*
		constexpr auto ResourceTypeClass = 0x38; // UGameResourceType*
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_UExteriorCharacterSpawnerComponent {
		constexpr auto Range = 0x230; // ECharacterSpawnerRange
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4d8; // FGuid
		constexpr auto ProxyComponentBases = 0x4e8; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4f8; // int8_t
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UPrisonerThirdPersonSubviewComponent {
		constexpr auto SubviewID = 0x288; // EPrisonerThirdPersonSubview
		constexpr auto FieldOfView = 0x28c; // float
		constexpr auto UseFieldOfViewForLOD = 0x290; // bool
		constexpr auto ConstrainAspectRatio = 0x291; // bool
		constexpr auto AspectRatio = 0x294; // float
		constexpr auto MinViewYaw = 0x298; // float
		constexpr auto MaxViewYaw = 0x29c; // float
		constexpr auto MinViewPitch = 0x2a0; // float
		constexpr auto MaxViewPitch = 0x2a4; // float
		constexpr auto LeanOffsetLeft = 0x2a8; // float
		constexpr auto LeanOffsetRight = 0x2ac; // float
		constexpr auto GlobalOffset = 0x2b0; // FVector
		constexpr auto MirrorAroundXZPlane = 0x2bc; // bool
		constexpr auto MaxLocalOffsetWhenColliding = 0x2c0; // FVector
		constexpr auto ShouldConstrainTraceOriginToOwnerCapsule = 0x2cc; // bool
		constexpr auto OwnerCapsuleContrainBuffer = 0x2d0; // float
		constexpr auto TraceOriginGlobalOffset = 0x2d4; // FVector
		constexpr auto TraceOriginRelativeOffset = 0x2e0; // FVector
		constexpr auto LocalOffsetCurvesBlendSpeed = 0x2ec; // float
		constexpr auto LocalOffsetCurves = 0x2f0; // FLocalOffsetCurves [0x2]
		constexpr auto AnimationOffsetTZCurveName = 0x330; // FName
		constexpr auto PostProcessBlendWeight = 0x338; // float
		constexpr auto PostProcessSettings = 0x340; // FPostProcessSettings
		constexpr auto blendInDuration = 0x890; // float
		constexpr auto blendOutDuration = 0x894; // float
		constexpr auto _clippingPreventionOffset = 0x8b0; // FVector
		constexpr auto _clippingPreventionSweepLength = 0x8bc; // float
		constexpr auto _clippingPreventionAmount = 0x8c0; // float
		constexpr auto _clippingPreventionTraceOffset = 0x8c4; // FVector
		constexpr auto _minFactorForPrisonerHiding = 0x8d0; // float
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UMalfunctionWidget {
		constexpr auto _descriptionWidget = 0x280; // UTextBlock*
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x468; // FVector
		constexpr auto Rotation = 0x480; // FQuat
		constexpr auto Dimensions = 0x490; // FVector
		constexpr auto LineThickness = 0x49c; // float
		constexpr auto bRemoveHiddenLines = 0x4a0; // bool
		constexpr auto bEnableAxisFlip = 0x4a1; // bool
	}

	namespace n_UMagicLeapImageTrackerComponent {
		constexpr auto TargetImageTexture = 0x1f8; // UTexture2D*
		constexpr auto Name = 0x200; // FString
		constexpr auto LongerDimension = 0x210; // float
		constexpr auto bIsStationary = 0x214; // bool
		constexpr auto bUseUnreliablePose = 0x215; // bool
		constexpr auto AxisOrientation = 0x216; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x218; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x228; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_ULiveLinkVirtualSubjectSourceSettings {
		constexpr auto SourceName = 0xa0; // FName
	}

	namespace n_UMeshHitZones {
		constexpr auto _deactivationMaterial = 0xc0; // UMaterialInterface*
	}

	namespace n_UPrisonerCommonData {
		constexpr auto FemaleAnimationInstance = 0x30; // UAnimInstance*
		constexpr auto MaleAnimationInstance = 0x38; // UAnimInstance*
		constexpr auto ExhaustionRange = 0x40; // FFloatInterval
		constexpr auto ExhaustionDamageMultiplier = 0x48; // float
		constexpr auto SkinHardness = 0x4c; // float
		constexpr auto LastDamageDealerResetTime = 0x50; // float
		constexpr auto StrengthMeleeDamageMultiplierRange = 0x54; // FFloatInterval
		constexpr auto ExhaustionMeleeDamageMultiplier = 0x5c; // float
		constexpr auto ClothesPartUsedByMeleeAttackCapsuleAttachment = 0x60; // TMap<FGameplayTag, EClothesPart>
		constexpr auto AttackerBoneByMeleeAttackCapsuleAttachment = 0xb0; // TMap<FGameplayTag, FName>
		constexpr auto UnarmedAttackBaseEnergy = 0x100; // float
		constexpr auto StrengthThrowingDamageMultiplierRange = 0x104; // FFloatInterval
		constexpr auto ExhaustionThrowingDamageMultiplier = 0x10c; // float
		constexpr auto NoSkillThrowingDamageMultiplier = 0x110; // float
		constexpr auto BasicSkillThrowingDamageMultiplier = 0x114; // float
		constexpr auto MediumSkillThrowingDamageMultiplier = 0x118; // float
		constexpr auto AdvancedSkillThrowingDamageMultiplier = 0x11c; // float
		constexpr auto AboveAdvancedSkillThrowingDamageMultiplier = 0x120; // float
		constexpr auto ThrowEnergyRange = 0x124; // FFloatInterval
		constexpr auto MaxActorEyesOffsetWhenLeaning = 0x12c; // float
		constexpr auto NumberOfCrouchStages = 0x130; // int32_t
		constexpr auto CrouchStagesInterpSpeed = 0x134; // float
		constexpr auto CrouchViewsAdditionalGlobalOffsetZVsCrouchStage = 0x138; // UCurveFloat*
		constexpr auto ProneEyeHeight = 0x140; // float
		constexpr auto ProneEyeForwardOffset = 0x144; // float
		constexpr auto SittingOnGroundEyeHeight = 0x148; // float
		constexpr auto LyingOnGroundEyeHeight = 0x14c; // float
		constexpr auto RestingOnGroundBackwardOffset = 0x150; // float
		constexpr auto DefaultPace = 0x154; // EPrisonerMovementPace
		constexpr auto MovementSettings = 0x158; // UPrisonerMovementSettings*
		constexpr auto DefaultViewBlendDuration = 0x160; // float
		constexpr auto MinEyesRotationYaw = 0x164; // float
		constexpr auto MaxEyesRotationYaw = 0x168; // float
		constexpr auto MinEyesRotationPitch = 0x16c; // float
		constexpr auto MaxEyesRotationPitch = 0x170; // float
		constexpr auto MinEyesRotationPitchCurve = 0x178; // UCurveFloat*
		constexpr auto MaxEyesRotationPitchCurve = 0x180; // UCurveFloat*
		constexpr auto EyesRotationSpeed = 0x188; // float
		constexpr auto DebugEyesRotation = 0x18c; // bool
		constexpr auto ComaAudioEvent = 0x190; // UAkAudioEvent*
		constexpr auto ComaScreamAudioEvent = 0x198; // UAkAudioEvent*
		constexpr auto DeathAudioEvent = 0x1a0; // UAkAudioEvent*
		constexpr auto DeathScreamAudioEvent = 0x1a8; // UAkAudioEvent*
		constexpr auto ColdBreathParticles = 0x1b0; // UParticleSystem*
		constexpr auto ColdBreathParticlesAttachPointName = 0x1b8; // FName
		constexpr auto StandardUndershirtMaterial = 0x1c0; // UMaterialInstance*
		constexpr auto DeluxeUndershirtMaterial = 0x1c8; // UMaterialInstance*
		constexpr auto JumpAudioEvent = 0x1d0; // UAkAudioEvent*
		constexpr auto LandingImpactHorizontalSpeedWeight = 0x1d8; // float
		constexpr auto LandingImpactVerticalSpeedWeight = 0x1dc; // float
		constexpr auto LandingStaminaDrainCurve = 0x1e0; // UCurveFloat*
		constexpr auto LandingDamageCurve = 0x1e8; // UCurveFloat*
		constexpr auto LandingEffects = 0x1f0; // ULandingEffects*
		constexpr auto LandingImpactSpeedForRagdoll = 0x1f8; // float
		constexpr auto LandingMinRagdollDuration = 0x1fc; // float
		constexpr auto LandingMaxRagdollDuration = 0x200; // float
		constexpr auto LandingRagdollDurationPerSpeedUnit = 0x204; // float
		constexpr auto WaterParticlesWhenIdle = 0x208; // UParticleSystem*
		constexpr auto WaterParticlesWhenIdleInOcean = 0x210; // UParticleSystem*
		constexpr auto WaterParticlesWhenMoving = 0x218; // UParticleSystem*
		constexpr auto WaterParticlesWhenMovingInOcean = 0x220; // UParticleSystem*
		constexpr auto WaterParticlesWhenDiving = 0x228; // UParticleSystem*
		constexpr auto WaterParticlesWhenDivingAttachPointName = 0x230; // FName
		constexpr auto WaterContactParticles = 0x238; // UParticleSystem*
		constexpr auto WaterContactParticlesAttachPointName = 0x240; // FName
		constexpr auto MinVelocityZToSpawnWaterContactParticles = 0x248; // float
		constexpr auto BuoyancyMultiplierVsGearWeightLimitDeviation = 0x250; // UCurveFloat*
		constexpr auto StartedDivingAudioEvent = 0x258; // UAkAudioEvent*
		constexpr auto StoppedDivingAudioEvent = 0x260; // UAkAudioEvent*
		constexpr auto EndDivingOnPlayAudioEvent = 0x268; // UAkAudioEvent*
		constexpr auto MaxHeadWaterWeight = 0x270; // float
		constexpr auto MaxUpperBodyWaterWeight = 0x274; // float
		constexpr auto MaxLowerBodyWaterWeight = 0x278; // float
		constexpr auto MaxFeetWaterWeight = 0x27c; // float
		constexpr auto OutwardsWaterPropagationFactor = 0x280; // float
		constexpr auto InwardsWaterPropagationRate = 0x284; // float
		constexpr auto OutwardsWaterPropagationRate = 0x288; // float
		constexpr auto GettingDryRateVsSpeed = 0x290; // UCurveFloat*
		constexpr auto SmallBleedingEffect = 0x298; // UParticleSystem*
		constexpr auto LargeBleedingEffect = 0x2a0; // UParticleSystem*
		constexpr auto UrineParticles = 0x2a8; // UParticleSystem*
		constexpr auto UrineParticlesAttachPointName = 0x2b0; // FName
		constexpr auto UrineParticlesAttachPointSmallestName = 0x2b8; // FName
		constexpr auto UrineParticlesAttachPointBiggestName = 0x2c0; // FName
		constexpr auto UrineParticlesAttachPointFemaleName = 0x2c8; // FName
		constexpr auto DetectNearbyFoliageRadius = 0x2d0; // float
		constexpr auto MinLocationDeltaToUpdateNearbyFoliage = 0x2d4; // float
		constexpr auto MinSpeedToTriggerMovingThroughFoliageEffects = 0x2d8; // float
		constexpr auto MinAngularSpeedToTriggerMovingThroughFoliageEffects = 0x2dc; // float
		constexpr auto ShouldAutomaticallyBeSeenInFoliageByAIDistance = 0x2e0; // float
		constexpr auto OpenInventoryAudioEvent = 0x2e8; // UAkAudioEvent*
		constexpr auto CloseInventoryAudioEvent = 0x2f0; // UAkAudioEvent*
		constexpr auto OpenOceanAudioEvent = 0x2f8; // UAkAudioEvent*
		constexpr auto CharacterDetectionRadiusForIngameMusic = 0x300; // float
		constexpr auto BulletFlybyDangerCooldown = 0x304; // float
		constexpr auto HeadExplodeDamageThreshold = 0x308; // float
		constexpr auto MeleeDangerCooldown = 0x30c; // float
		constexpr auto MeleeDangerRadius = 0x310; // float
		constexpr auto MeleeDangerAngle = 0x314; // float
		constexpr auto PostReviveStateDuration = 0x318; // float
		constexpr auto HitReactTypeWhenStanding = 0x31c; // FGameplayTag
		constexpr auto HitReactTypeWhenStandingInCombatMode = 0x324; // FGameplayTag
		constexpr auto HitReactTypeWhenStandingInCombatModeAndHoldingBlock = 0x32c; // FGameplayTag
		constexpr auto HitReactTypeWhenCrouching = 0x334; // FGameplayTag
		constexpr auto HitReactTypeWhenProne = 0x33c; // FGameplayTag
		constexpr auto HitReactTypeWhenCaptured = 0x344; // FGameplayTag
		constexpr auto HitReactLandingParamsMap = 0x350; // TMap<EPrisonerFallingPose, UHitReactLandingParams*>
		constexpr auto MeleeAttackCapsulesAttachmentForItemInLHand = 0x3a0; // FGameplayTag
		constexpr auto MeleeAttackCapsulesAttachmentForItemInRHand = 0x3a8; // FGameplayTag
		constexpr auto MeleeAttackTypes = 0x3b0; // FPrisonerMeleeAttackTypes
		constexpr auto MeleeTargetMaxDistance = 0x438; // float
		constexpr auto MeleeTargetMaxHeightDifference = 0x43c; // float
		constexpr auto MeleeTargetMaxConeHalfAngleVsDistanceToTarget = 0x440; // UCurveFloat*
		constexpr auto TimeSpanAfterWhichMeleeAttacksBecomeInitial = 0x448; // float
		constexpr auto MeleeHitRagdollImpulseByDamageMagnitudeType = 0x450; // TMap<EDamageMagnitudeType, float>
		constexpr auto DefaultMeleeHitRagdollImpulse = 0x4a0; // float
		constexpr auto ThrowModeActivationDelay = 0x4a4; // float
		constexpr auto ThrowLaunchLocationSocketName = 0x4a8; // FName
		constexpr auto ThrowingPathBrightnessFromTimeCurve = 0x4b0; // UCurveFloat*
		constexpr auto IslandBoundsCheckInterval = 0x4b8; // float
		constexpr auto PhysicalSurfacesData = 0x4c0; // UPhysicalSurfacesData*
		constexpr auto DeluxeWristwatchClass = 0x4c8; // AWristwatch*
		constexpr auto ScopeWidget = 0x4d0; // UWeaponScopeWidget*
		constexpr auto PlaceableActorItemsClass = 0x4d8; // APlaceableActorItems*
		constexpr auto PlaceableActorFortificationsClass = 0x4e0; // APlaceableActorFortifications*
		constexpr auto PlaceableActorBaseBuildingClass = 0x4e8; // APlaceableActorBaseBuilding*
		constexpr auto PlaceableActorBaseUpgradeClass = 0x4f0; // APlaceableActorBaseUpgrade*
		constexpr auto MaxPossiblePlacedBlueprints = 0x4f8; // int32_t
		constexpr auto OpenOceanRange = 0x4fc; // float
		constexpr auto AppearanceDataAsset = 0x500; // UPrisonerAppearanceDataAsset*
		constexpr auto LeavingTheIslandPenaltyTimes = 0x508; // TMap<EPrisonerBorderCrossingPenalty, float>
		constexpr auto GameEventOutOfBoundsDamage = 0x558; // float
		constexpr auto ItemPlacingMaterialAllowed = 0x560; // UMaterialInstance*
		constexpr auto ItemPlacingMaterialDisallowed = 0x568; // UMaterialInstance*
		constexpr auto IkInterpSpeed = 0x570; // float
		constexpr auto CommonParameterCollection = 0x578; // UMaterialParameterCollection*
		constexpr auto WeaponSocketName = 0x580; // FName
		constexpr auto WeaponHolsterSocketName = 0x588; // FName
		constexpr auto SwapWeapons = 0x590; // UAnimMontage*
		constexpr auto SwapItemsThrowingItemToWeapon = 0x598; // UAnimMontage*
		constexpr auto SwapItemsWeaponToThrowingItem = 0x5a0; // UAnimMontage*
		constexpr auto SwapItemsNotWeaponToNotWeapon = 0x5a8; // UAnimMontage*
		constexpr auto SwapItemsWeaponToWeapon = 0x5b0; // UAnimMontage*
		constexpr auto SwapItemsNotWeaponToWeapon = 0x5b8; // UAnimMontage*
		constexpr auto SwapItemsWeaponToNotWeapon = 0x5c0; // UAnimMontage*
		constexpr auto EquipRifleStanding = 0x5c8; // UAnimMontage*
		constexpr auto UnequipRifleStanding = 0x5d0; // UAnimMontage*
		constexpr auto EquipHandgunStanding = 0x5d8; // UAnimMontage*
		constexpr auto UnequipHadgunStanding = 0x5e0; // UAnimMontage*
		constexpr auto UrinateMaleMontage = 0x5e8; // UAnimMontage*
		constexpr auto UrinateFemaleMontage = 0x5f0; // UAnimMontage*
		constexpr auto UrinateMaleForcedMontage = 0x5f8; // UAnimMontage*
		constexpr auto UrinateFemaleForcedMontage = 0x600; // UAnimMontage*
		constexpr auto DefecateMontage = 0x608; // UAnimMontage*
		constexpr auto DefecateForcedMontage = 0x610; // UAnimMontage*
		constexpr auto VomitMontage = 0x618; // UAnimMontage*
		constexpr auto VomitForcedMontage = 0x620; // UAnimMontage*
		constexpr auto SearchObject = 0x628; // UAnimMontage*
		constexpr auto SearchObjectWhileItemInHands = 0x630; // UAnimMontage*
		constexpr auto SearchObjectWhileWeaponInHands = 0x638; // UAnimMontage*
		constexpr auto SearchObjectWhenSwimming = 0x640; // UAnimMontage*
		constexpr auto SearchPrisoner = 0x648; // UAnimMontage*
		constexpr auto PatchWoundsStanding = 0x650; // UAnimMontage*
		constexpr auto PatchWoundsCrouching = 0x658; // UAnimMontage*
		constexpr auto PatchWoundsProne = 0x660; // UAnimMontage*
		constexpr auto PatchWoundsStandingEnd = 0x668; // UAnimMontage*
		constexpr auto PatchWoundsCrouchingEnd = 0x670; // UAnimMontage*
		constexpr auto PatchWoundsProneEnd = 0x678; // UAnimMontage*
		constexpr auto EatGeneric = 0x680; // UAnimMontage*
		constexpr auto EatCan = 0x688; // UAnimMontage*
		constexpr auto DrinkFromBottleStanding = 0x690; // UAnimMontage*
		constexpr auto DrinkFromBottleCrouching = 0x698; // UAnimMontage*
		constexpr auto DrinkInteraction = 0x6a0; // UAnimMontage*
		constexpr auto DefaultLongThrowMontage = 0x6a8; // UAnimMontage*
		constexpr auto DefaultLongThrowLoopMontage = 0x6b0; // UAnimMontage*
		constexpr auto DefaultShortThrowMontage = 0x6b8; // UAnimMontage*
		constexpr auto DefaultThrowbackGrenadeMontage = 0x6c0; // UAnimMontage*
		constexpr auto ChopTreeStanding = 0x6c8; // UAnimMontage*
		constexpr auto ChopTreeStandingEnd = 0x6d0; // UAnimMontage*
		constexpr auto ChopLogStanding = 0x6d8; // UAnimMontage*
		constexpr auto ChopLogStandingEnd = 0x6e0; // UAnimMontage*
		constexpr auto BreakStone = 0x6e8; // UAnimMontage*
		constexpr auto BreakStoneEnd = 0x6f0; // UAnimMontage*
		constexpr auto CraftStanding = 0x6f8; // UAnimMontage*
		constexpr auto CraftCrouching = 0x700; // UAnimMontage*
		constexpr auto CraftProne = 0x708; // UAnimMontage*
		constexpr auto UncraftStanding = 0x710; // UAnimMontage*
		constexpr auto UncraftCrouching = 0x718; // UAnimMontage*
		constexpr auto UncraftProne = 0x720; // UAnimMontage*
		constexpr auto CheckTime = 0x728; // UAnimMontage*
		constexpr auto CheckTimeWhileItemInHands = 0x730; // UAnimMontage*
		constexpr auto CheckTimeWhileWeaponInHands = 0x738; // UAnimMontage*
		constexpr auto CheckTemperature = 0x740; // UAnimMontage*
		constexpr auto ForceUnlockStanding = 0x748; // UAnimMontage*
		constexpr auto ForceUnlockStandingEnd = 0x750; // UAnimMontage*
		constexpr auto ForceUnlockStandingStop = 0x758; // UAnimMontage*
		constexpr auto SpillMontage = 0x760; // UAnimMontage*
		constexpr auto StompOutFireMontage = 0x768; // UAnimMontage*
		constexpr auto GestureShowFinger = 0x770; // UAnimMontage*
		constexpr auto GestureStandSurrender = 0x778; // UAnimMontage*
		constexpr auto GestureWaveHi = 0x780; // UAnimMontage*
		constexpr auto GestureYouAreDead = 0x788; // UAnimMontage*
		constexpr auto GestureFY = 0x790; // UAnimMontage*
		constexpr auto GesturePoint = 0x798; // UAnimMontage*
		constexpr auto GestureHeart = 0x7a0; // UAnimMontage*
		constexpr auto GestureBallpalm = 0x7a8; // UAnimMontage*
		constexpr auto GestureFacepalm = 0x7b0; // UAnimMontage*
		constexpr auto GestureFingerGun = 0x7b8; // UAnimMontage*
		constexpr auto GestureLaughing = 0x7c0; // UAnimMontage*
		constexpr auto GestureSmellWave = 0x7c8; // UAnimMontage*
		constexpr auto GestureSquat = 0x7d0; // UAnimMontage*
		constexpr auto GestureCharge = 0x7d8; // UAnimMontage*
		constexpr auto GestureChargeCombat = 0x7e0; // UAnimMontage*
		constexpr auto GestureFreeze = 0x7e8; // UAnimMontage*
		constexpr auto GestureFreezeCombat = 0x7f0; // UAnimMontage*
		constexpr auto GestureGetDown = 0x7f8; // UAnimMontage*
		constexpr auto GestureGetDownCombat = 0x800; // UAnimMontage*
		constexpr auto GestureGetUp = 0x808; // UAnimMontage*
		constexpr auto GestureGetUpCombat = 0x810; // UAnimMontage*
		constexpr auto GestureHalt = 0x818; // UAnimMontage*
		constexpr auto GestureHaltCombat = 0x820; // UAnimMontage*
		constexpr auto GestureHurryUp = 0x828; // UAnimMontage*
		constexpr auto GestureHurryUpCombat = 0x830; // UAnimMontage*
		constexpr auto GesturePointMe = 0x838; // UAnimMontage*
		constexpr auto GesturePointMeCombat = 0x840; // UAnimMontage*
		constexpr auto GesturePointYou = 0x848; // UAnimMontage*
		constexpr auto GesturePointYouCombat = 0x850; // UAnimMontage*
		constexpr auto GestureRally = 0x858; // UAnimMontage*
		constexpr auto GestureRallyCombat = 0x860; // UAnimMontage*
		constexpr auto GestureThumbsUp = 0x868; // UAnimMontage*
		constexpr auto GestureThumbsUpCombat = 0x870; // UAnimMontage*
		constexpr auto GestureThumbsDown = 0x878; // UAnimMontage*
		constexpr auto GestureThumbsDownCombat = 0x880; // UAnimMontage*
		constexpr auto GestureUnderstandNot = 0x888; // UAnimMontage*
		constexpr auto GestureUnderstandNotCombat = 0x890; // UAnimMontage*
		constexpr auto GestureUnderstandYes = 0x898; // UAnimMontage*
		constexpr auto GestureUnderstandYesCombat = 0x8a0; // UAnimMontage*
		constexpr auto CommitSuicideStanding = 0x8a8; // UAnimMontage*
		constexpr auto CommitSuicideCrouching = 0x8b0; // UAnimMontage*
		constexpr auto CommitSuicideRareStanding = 0x8b8; // UAnimMontage*
		constexpr auto LockpickRegular = 0x8c0; // UAnimMontage*
		constexpr auto WhistleMontage = 0x8c8; // UAnimMontage*
		constexpr auto TuneBowMontage = 0x8d0; // UAnimMontage*
		constexpr auto RepairVehicleMontage = 0x8d8; // UAnimMontage*
		constexpr auto WashClothMontage = 0x8e0; // UAnimMontage*
		constexpr auto BuryStandingMontage = 0x8e8; // UAnimMontage*
		constexpr auto BuryRestStandingMontage = 0x8f0; // UAnimMontage*
		constexpr auto BuryResumeStandingMontage = 0x8f8; // UAnimMontage*
		constexpr auto BuryCrouchingMontage = 0x900; // UAnimMontage*
		constexpr auto BuryRestCrouchingMontage = 0x908; // UAnimMontage*
		constexpr auto SitOnGroundStandingStartMontage = 0x910; // UAnimMontage*
		constexpr auto SitOnGroundStandingEndMontage = 0x918; // UAnimMontage*
		constexpr auto SitOnGroundCrouchingStartMontage = 0x920; // UAnimMontage*
		constexpr auto SitOnGroundCrouchingEndMontage = 0x928; // UAnimMontage*
		constexpr auto LayOnGroundStandingStartMontage = 0x930; // UAnimMontage*
		constexpr auto LayOnGroundStandingEndMontage = 0x938; // UAnimMontage*
		constexpr auto LayOnGroundCrouchingStartMontage = 0x940; // UAnimMontage*
		constexpr auto LayOnGroundCrouchingEndMontage = 0x948; // UAnimMontage*
		constexpr auto SittingOnGroundAnimation = 0x950; // UAnimSequenceBase*
		constexpr auto LyingOnGroundAnimation = 0x958; // UAnimSequenceBase*
		constexpr auto LightFlareMontage = 0x960; // UAnimMontage*
		constexpr auto ArmTrapMontage = 0x968; // UAnimMontage*
		constexpr auto FishingEnterMontage = 0x970; // UAnimMontage*
		constexpr auto FishingLeaveMontage = 0x978; // UAnimMontage*
		constexpr auto FishingCastMontage = 0x980; // UAnimMontage*
		constexpr auto FishingLongCastEndMontage = 0x988; // UAnimMontage*
		constexpr auto FishingShortCastEndMontage = 0x990; // UAnimMontage*
		constexpr auto FishingPullStartMontage = 0x998; // UAnimMontage*
		constexpr auto FishingPullEndMontage = 0x9a0; // UAnimMontage*
		constexpr auto FishingFishCaughtMontage = 0x9a8; // UAnimMontage*
		constexpr auto FishingKeepFishMontage = 0x9b0; // UAnimMontage*
		constexpr auto FishingDiscardFishMontage = 0x9b8; // UAnimMontage*
		constexpr auto FishingWireBreakMontage = 0x9c0; // UAnimMontage*
		constexpr auto BasicDance1Montage = 0x9c8; // UAnimMontage*
		constexpr auto BasicDance2Montage = 0x9d0; // UAnimMontage*
		constexpr auto BasicDance3Montage = 0x9d8; // UAnimMontage*
		constexpr auto BasicDance4Montage = 0x9e0; // UAnimMontage*
		constexpr auto BasicDance5Montage = 0x9e8; // UAnimMontage*
		constexpr auto AdvanceDance1Montage = 0x9f0; // UAnimMontage*
		constexpr auto AdvanceDance2Montage = 0x9f8; // UAnimMontage*
		constexpr auto AdvanceDance3Montage = 0xa00; // UAnimMontage*
		constexpr auto AdvanceDance4Montage = 0xa08; // UAnimMontage*
		constexpr auto AdvanceDance5Montage = 0xa10; // UAnimMontage*
		constexpr auto AdvanceDance6Montage = 0xa18; // UAnimMontage*
		constexpr auto AdvanceDance7Montage = 0xa20; // UAnimMontage*
		constexpr auto TurnMontageDescription = 0xa28; // FPrisonerTurnMontageDescription
		constexpr auto MinThrowItemSpeed = 0xa58; // float
		constexpr auto MaxThrowItemSpeed = 0xa5c; // float
		constexpr auto MinScreenCenterDotOpacityDecreaseDelay = 0xa60; // float
		constexpr auto MaxScreenCenterDotOpacityDecreaseDelay = 0xa64; // float
		constexpr auto ScreenCenterDotOpacityDecrease = 0xa68; // float
		constexpr auto ScreenCenterDotOpacityIncrease = 0xa6c; // float
		constexpr auto ShortThrowReductionMultiplier = 0xa70; // float
		constexpr auto ThrowingObstacleCheckOffset = 0xa74; // float
		constexpr auto ThrowingObstacleOffset = 0xa78; // float
		constexpr auto ThrowingAnimationSets = 0xa80; // TMap<EThrowingAnimationType, FThrowingAnimationSet>
		constexpr auto RespawnTime = 0xad0; // float
		constexpr auto FocusModeZoomEffectCurve = 0xad8; // UCurveFloat*
		constexpr auto FocusModeZoomSpeed = 0xae0; // float
		constexpr auto SelfInteractionSegmentInfo = 0xae8; // TArray<UCircularMenuSegmentInfo*>
		constexpr auto PrisonWalletComponentClass = 0xaf8; // UPrisonerPrisonWalletComponent*
		constexpr auto MusicPlayerComponentClass = 0xb00; // UPrisonerMusicPlayerComponent*
		constexpr auto WetnessReachableFromSkyChecksInterval = 0xb08; // float
		constexpr auto DedicatedServerHandleFootstepInterval = 0xb0c; // float
		constexpr auto PlayInstrumentEventNetworkDelay = 0xb10; // float
		constexpr auto PlayInstrumentExitStateDuration = 0xb14; // float
		constexpr auto BreastSizeMin = 0xb18; // float
		constexpr auto BreastSizeMax = 0xb1c; // float
		constexpr auto BreastSizeDeluxeModifier = 0xb20; // float
		constexpr auto BreastSizeAdminModifier = 0xb24; // float
		constexpr auto PenisLocationLean = 0xb28; // FVector
		constexpr auto PenisLocationFat = 0xb34; // FVector
		constexpr auto PenisHandleLocationLean = 0xb40; // FVector
		constexpr auto PenisHandleLocationFat = 0xb4c; // FVector
		constexpr auto PenisMinSizeHandleZ = 0xb58; // float
		constexpr auto PenisMaxSizeHandleZ = 0xb5c; // float
		constexpr auto PenisSizeMin = 0xb60; // float
		constexpr auto PenisSizeMax = 0xb64; // float
		constexpr auto PenisSizeMaxInCharacterCreation = 0xb68; // float
		constexpr auto PenisSizeDeluxeModifier = 0xb6c; // float
		constexpr auto PenisGrowOverTimeThreshold = 0xb70; // float
		constexpr auto UnmountSpeedThresholdForRagdoll = 0xb74; // float
		constexpr auto MountTiltAngleForRagdoll = 0xb78; // float
		constexpr auto RareSuicideAnimationChance = 0xb7c; // float
		constexpr auto HairGrowthTotalTime = 0xb80; // float
		constexpr auto FacialHairGrowthTotalTime = 0xb84; // float
		constexpr auto HairUpdateRate = 0xb88; // float
		constexpr auto MaxRestingAngle = 0xb8c; // float
		constexpr auto GenericAcceptanceRadius = 0xb90; // float
		constexpr auto DistanceWhereRotationStarts = 0xb94; // float
		constexpr auto AutoTriggeredVomitingNotification = 0xb98; // UNotificationDescription*
		constexpr auto AutoTriggeredUrinationNotification = 0xba0; // UNotificationDescription*
		constexpr auto AutoTriggeredDefecationNotification = 0xba8; // UNotificationDescription*
		constexpr auto UIDataClass = 0xbb0; // UPrisonerUIDataImpl*
		constexpr auto DefecateForcedAudioEvent = 0xbb8; // UAkAudioEvent*
		constexpr auto UrinateForcedAudioEvent = 0xbc0; // UAkAudioEvent*
		constexpr auto DiarrheaParticleSystem = 0xbc8; // UParticleSystem*
		constexpr auto ResponseIdles = 0xbd0; // FPrisonerCommonData_ResponseIdles
	}

	namespace n_APETBottle04_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UInventoryContainerWidget2Test {
		constexpr auto _itemIcon = 0x278; // UImage*
		constexpr auto _itemCaption = 0x280; // UTextBlock*
		constexpr auto _itemContainer = 0x288; // UVerticalBox*
	}

	namespace n_UM1887_InsertShellLoopEmpty_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto RequestedAmmoCount = 0xa8; // int32_t
		constexpr auto InsertedAmmoCount = 0xac; // int32_t
		constexpr auto FinalSectionReached = 0xb0; // bool
	}

	namespace n_AGlobalGuardedZoneManager {
		constexpr auto _guardedZoneManagers = 0x238; // TArray<FGuardedZoneManagerDescription>
		constexpr auto _guardedZoneTickTime = 0x250; // float
		constexpr auto _playerLogicTickTime = 0x254; // float
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_UPrisonerBodyCondition_BasicInjury {
		constexpr auto _severityVsDamageRatio = 0xa8; // FRuntimeFloatCurve
		constexpr auto _healingRate = 0x130; // float
		constexpr auto _damage = 0x134; // float
		constexpr auto _damageToRecover = 0x138; // float
	}

	namespace n_AProjectileFlare {
		constexpr auto _particleSystemComponent = 0x418; // UParticleSystemComponent*
		constexpr auto _pointLightComponent = 0x420; // UPointLightComponent*
		constexpr auto _akFlareComponent = 0x428; // UAkComponent*
		constexpr auto _hasParachute = 0x430; // bool
		constexpr auto _parachuteGravityScale = 0x434; // float
		constexpr auto _parachuteEffectiveBallisticCoefficient = 0x438; // float
		constexpr auto _parachuteParticlesScale = 0x43c; // FVector
		constexpr auto _parachuteParticlesScaleSpeed = 0x448; // float
		constexpr auto _burnStart = 0x450; // UAkAudioEvent*
		constexpr auto _burnEnd = 0x458; // UAkAudioEvent*
		constexpr auto _burnTime = 0x460; // float
	}

	namespace n_UCustomZoneSettingsRegionsList {
		constexpr auto _regionCountDisplay = 0x2a0; // UTextBlock*
		constexpr auto _buttonAddRegion = 0x2a8; // UButton*
		constexpr auto _scrollBox = 0x2b0; // UScrollBox*
		constexpr auto _regionWidgetClass = 0x2b8; // UCustomZoneSettingsRegion*
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UInventoryPanelThirdIteration {
		constexpr auto _displayedCharacter = 0x278; // TWeakObjectPtr<ACharacter>
		constexpr auto _inventoriesScrollBox = 0x280; // UScrollBox*
		constexpr auto _nonContainerBox = 0x288; // UVerticalBox*
		constexpr auto _inventories = 0x290; // TMap<UObject*, UItemInventoryWidget2*>
		constexpr auto _sideLayers = 0x2e0; // TMap<UObject*, UInventoryPanelSideLayerWidget*>
		constexpr auto _nonContainerItems = 0x330; // TMap<UObject*, UItemWidget2*>
		constexpr auto _nonContainerItemsPadding = 0x380; // FMargin
	}

	namespace n_UMenuHelpers {
		constexpr auto MainMenuClass = 0x30; // UUserWidget*
		constexpr auto ServerBrowserClass = 0x38; // UUserWidget*
		constexpr auto OptionsClass = 0x40; // UUserWidget*
		constexpr auto AdvancedOptionsClass = 0x48; // UUserWidget*
		constexpr auto CharacterCreationClass = 0x50; // UUserWidget*
		constexpr auto CharacterSelectionClass = 0x58; // UUserWidget*
		constexpr auto CharacterCreationSecondIterationClass = 0x60; // UUserWidget*
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UModularTooltip {
		constexpr auto _sectionClass = 0x260; // UModularTooltipSection*
		constexpr auto _descriptionTextBlock = 0x268; // UTextBlock*
		constexpr auto _sectionsVerticalBox = 0x270; // UVerticalBox*
		constexpr auto _advancedDisplayHintTextBlock = 0x278; // UTextBlock*
	}

	namespace n_UWeaponBowAnimInstance {
		constexpr auto _armsShakeValue = 0x300; // float
		constexpr auto _useArrowLookAt = 0x304; // bool
		constexpr auto _aimingDownTheSightsAnimation = 0x308; // UAnimSequenceBase*
		constexpr auto _aimingDownTheSightsStillAnimation = 0x310; // UAnimSequenceBase*
	}

	namespace n_UUI_GenericTooltip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x268; // UImage*
		constexpr auto DescriptionText = 0x270; // UExtendedRichTextBlock*
		constexpr auto UI_Border_23 = 0x278; // UUI_Border_C*
		constexpr auto TextFormat = 0x280; // FText
		constexpr auto Color = 0x298; // FSlateColor
		constexpr auto TextStyle = 0x2c0; // FTextBlockStyle
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto cameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_UCurrencyItemComponent {
		constexpr auto _value = 0xb8; // int32_t
		constexpr auto _maxValue = 0xc4; // int32_t
	}

	namespace n_UUI_SpawnSectorSelector_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Button = 0x280; // UButton*
		constexpr auto Button_1 = 0x288; // UButton*
		constexpr auto Button_2 = 0x290; // UButton*
		constexpr auto Button_3 = 0x298; // UButton*
		constexpr auto Button_4 = 0x2a0; // UButton*
		constexpr auto Button_5 = 0x2a8; // UButton*
		constexpr auto Button_6 = 0x2b0; // UButton*
		constexpr auto Button_7 = 0x2b8; // UButton*
		constexpr auto Button_8 = 0x2c0; // UButton*
		constexpr auto Button_9 = 0x2c8; // UButton*
		constexpr auto Button_10 = 0x2d0; // UButton*
		constexpr auto Button_11 = 0x2d8; // UButton*
		constexpr auto Button_12 = 0x2e0; // UButton*
		constexpr auto Button_13 = 0x2e8; // UButton*
		constexpr auto Button_14 = 0x2f0; // UButton*
		constexpr auto Button_15 = 0x2f8; // UButton*
		constexpr auto Button_16 = 0x300; // UButton*
		constexpr auto Button_17 = 0x308; // UButton*
		constexpr auto Button_18 = 0x310; // UButton*
		constexpr auto Button_19 = 0x318; // UButton*
		constexpr auto Button_20 = 0x320; // UButton*
		constexpr auto Button_21 = 0x328; // UButton*
		constexpr auto Button_22 = 0x330; // UButton*
		constexpr auto Button_23 = 0x338; // UButton*
		constexpr auto Button_24 = 0x340; // UButton*
		constexpr auto DeathImage = 0x348; // UImage*
		constexpr auto MapImage = 0x350; // UImage*
		constexpr auto SelectorImage = 0x358; // UImage*
		constexpr auto UniformGridPanel_1 = 0x360; // UUniformGridPanel*
	}

	namespace n_UBP_M1_OpenInsertBulletLoop_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
	}

	namespace n_UAdminCommand_ListPrisonerBodyEffects {
		constexpr auto _bodyEffectClass = 0x80; // UPrisonerBodyEffect*
	}

	namespace n_UTriggerComponent {
		constexpr auto _triggeringActorConditions = 0x4c0; // FObjectConditionContainer
	}

	namespace n_UCharacterImpactSoundsData {
		constexpr auto Head = 0x30; // FCharacterHeadImpactSoundsData
		constexpr auto Torso = 0x48; // FCharacterTorsoImpactSoundsData
		constexpr auto Arms = 0x60; // FCharacterArmsImpactSoundsData
		constexpr auto Legs = 0x78; // FCharacterLegsImpactSoundsData
	}

	namespace n_UInventoryItemDataDescription {
		constexpr auto Name = 0x30; // FText
		constexpr auto Description = 0x48; // FText
	}

	namespace n_UUI_ErrorMessage_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_11 = 0x280; // UImage*
		constexpr auto MainText = 0x288; // UTextBlock*
		constexpr auto OkButton = 0x290; // UUI_TrashMenuButton_C*
		constexpr auto Dismissed = 0x298; // FMulticastInlineDelegate
		constexpr auto _widgetToDisable = 0x2a8; // UWidget*
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UUI_CTFTeamHeaderWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x288; // UImage*
		constexpr auto LeftSideLayoutBox = 0x290; // UHorizontalBox*
		constexpr auto LeftStarBox = 0x298; // UHorizontalBox*
		constexpr auto LeftTeamScore = 0x2a0; // UTextBlock*
		constexpr auto PlayerTextLeft = 0x2a8; // UTextBlock*
		constexpr auto PlayerTextRight = 0x2b0; // UTextBlock*
		constexpr auto RightSideLayoutBox = 0x2b8; // UHorizontalBox*
		constexpr auto RightStarBox = 0x2c0; // UHorizontalBox*
		constexpr auto RightTeamScore = 0x2c8; // UTextBlock*
		constexpr auto TeamNameLeft = 0x2d0; // UTextBlock*
		constexpr auto TeamNameRight = 0x2d8; // UTextBlock*
		constexpr auto gameEvent = 0x2e0; // ABP_CTFGameEvent_C*
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UMeshSelectionTool {
		constexpr auto SelectionProps = 0x200; // UMeshSelectionToolProperties*
		constexpr auto SelectionActions = 0x208; // UMeshSelectionEditActions*
		constexpr auto EditActions = 0x210; // UMeshSelectionToolActionPropertySet*
		constexpr auto Selection = 0x218; // UMeshSelectionSet*
		constexpr auto SpawnedActors = 0x220; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_WeaponBullet_WoodenArrow_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_UCompassWidget {
		constexpr auto _compassTrack = 0x268; // UImage*
		constexpr auto _compassTrackNorthOnly = 0x270; // UTexture2D*
		constexpr auto _compassTrackCardinalOnly = 0x278; // UTexture2D*
		constexpr auto _compassTrackCardinalAndIntercardinal = 0x280; // UTexture2D*
		constexpr auto _compassTrackEverything = 0x288; // UTexture2D*
		constexpr auto _offset = 0x290; // FVector2D
		constexpr auto _compassTrackWidthMultiplier = 0x298; // float
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x468; // FVector
		constexpr auto DirectionY = 0x474; // FVector
		constexpr auto OffsetX = 0x480; // float
		constexpr auto OffsetY = 0x484; // float
		constexpr auto LengthX = 0x488; // float
		constexpr auto LengthY = 0x48c; // float
		constexpr auto Thickness = 0x490; // float
		constexpr auto SegmentFlags = 0x494; // char
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_UMeshConstraintProperties {
		constexpr auto bPreserveSharpEdges = 0x60; // bool
		constexpr auto MeshBoundaryConstraint = 0x61; // EMeshBoundaryConstraint
		constexpr auto GroupBoundaryConstraint = 0x62; // EGroupBoundaryConstraint
		constexpr auto MaterialBoundaryConstraint = 0x63; // EMaterialBoundaryConstraint
		constexpr auto bPreventNormalFlips = 0x64; // bool
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_AFishingAttachmentFloater {
		constexpr auto _floatingComponent = 0x7e0; // UConZBuoyancyComponent*
		constexpr auto _floaterBreakSegmentIndex = 0x7e8; // int32_t
		constexpr auto _sinkSpeed = 0x7ec; // float
		constexpr auto _sinkSpeedDuringFastReel = 0x7f0; // float
		constexpr auto _minDistanceForSizeIncrease = 0x7f4; // float
		constexpr auto _maxDistanceForSizeIncrease = 0x7f8; // float
		constexpr auto _maxScale = 0x7fc; // float
		constexpr auto _velocityThreshold = 0x800; // float
		constexpr auto _shouldCheckVelocityThreshold = 0x804; // float
		constexpr auto _movingRippleThreshold = 0x808; // float
		constexpr auto _floaterWaterCheckOffset = 0x80c; // FVector
		constexpr auto _sendStateInterval = 0x818; // float
		constexpr auto _hitWaterParticles = 0x890; // UParticleSystem*
		constexpr auto _rippleParticleSystemComponent = 0x898; // UParticleSystemComponent*
		constexpr auto _movingRippleParticleSystemComponent = 0x8a0; // UParticleSystemComponent*
		constexpr auto _sinkParticleSystemComponent = 0x8a8; // UParticleSystemComponent*
		constexpr auto _scaledMaterial = 0x8b0; // UMaterialInterface*
		constexpr auto _storedMaterial = 0x8b8; // UMaterialInterface*
	}

	namespace n_UUI_SquadTooltip_C {
		constexpr auto RetainerBox_3 = 0x260; // URetainerBox*
		constexpr auto SquadEmblem = 0x268; // UUI_SquadEmblem_C*
		constexpr auto SquadInformation = 0x270; // UTextBlock*
		constexpr auto SquadName = 0x278; // UTextBlock*
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_ULevelUpNotificationWidget {
		constexpr auto _overlay = 0x278; // UOverlay*
		constexpr auto _backgroundImage = 0x280; // UImage*
		constexpr auto _arrowImage = 0x288; // UImage*
		constexpr auto _skillLevelText = 0x290; // UTextBlock*
		constexpr auto _skillNameText = 0x298; // UTextBlock*
		constexpr auto _levelUpNotificationAudioEvent = 0x2a0; // UAkAudioEvent*
		constexpr auto _displayTime = 0x2ac; // float
		constexpr auto _slideInTime = 0x2b0; // float
		constexpr auto _slideOutTime = 0x2b4; // float
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_ABP_WeaponBullet_792x58_Crafted_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UUI_CraftingPanel_C {
		constexpr auto UberGraphFrame = 0x518; // FPointerToUberGraphFrame
		constexpr auto CraftButton = 0x520; // UButton*
		constexpr auto ExpandedSpacingLine = 0x528; // UImage*
		constexpr auto FoodContainer = 0x530; // UUI_ExpandableContainer_C*
		constexpr auto Image_1 = 0x538; // UImage*
		constexpr auto Image_2 = 0x540; // UImage*
		constexpr auto Image_3 = 0x548; // UImage*
		constexpr auto Image_4 = 0x550; // UImage*
		constexpr auto InventoryContainer = 0x558; // UUI_ExpandableContainer_C*
		constexpr auto ItemsContainer = 0x560; // UUI_ExpandableContainer_C*
		constexpr auto MainCanvas = 0x568; // UCanvasPanel*
		constexpr auto PlaceablesContainer = 0x570; // UUI_ExpandableContainer_C*
		constexpr auto SearchBar = 0x578; // UEditableTextBox*
		constexpr auto SearchBarBackground = 0x580; // UImage*
		constexpr auto TextBlock_3 = 0x588; // UTextBlock*
		constexpr auto ToolsAndWeaponsContainer = 0x590; // UUI_ExpandableContainer_C*
		constexpr auto UI_MenuButton = 0x598; // UUI_TrashMenuButton_C*
		constexpr auto VicinityContainer = 0x5a0; // UUI_ExpandableContainer_C*
		constexpr auto CraftClickSound = 0x5a8; // UAkAudioEvent*
		constexpr auto _craftingConfirmationIndex = 0x5b0; // int32_t
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UInventoryItemComponent {
		constexpr auto _sizeX = 0xc0; // int32_t
		constexpr auto _sizeY = 0xc4; // int32_t
		constexpr auto _maxRowsPerPage = 0xc8; // int32_t
		constexpr auto _replicatedPages = 0xe0; // TArray<UInventoryItemComponentReplicatedPage*>
	}

	namespace n_UWeaponAttachmentScopeState {
		constexpr auto Windage = 0xf8; // int32_t
		constexpr auto DisplayBrightnessMultiplier = 0xfc; // float
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_A1H_Dildo_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UGroomCreateFollicleMaskOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto RootRadius = 0x2c; // int32_t
		constexpr auto Grooms = 0x30; // TArray<FFollicleMaskOptions>
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UPrisonerActionDrinkFromReplenishableResourceDescription {
		constexpr auto ProxyForReplenishableResource = 0x78; // UGameResourceContainerProxyForReplenishableResource*
	}

	namespace n_UPrisonerAnimNotify_PlayGearSound {
		constexpr auto motionIntensity = 0x38; // EMotionIntensity
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UPrisonerBodySymptom_FeelingCold {
		constexpr auto _maxSeverity = 0xb8; // float
		constexpr auto _temperatureDeltaAtMaxSeverity = 0xbc; // float
	}

	namespace n_UPrisonerPhotoModeAnimInstance {
		constexpr auto PoseBlendTime = 0x2b8; // float
		constexpr auto _unarmedPoses = 0x2c0; // TArray<UAnimSequence*>
		constexpr auto _riflePoses = 0x2d0; // TArray<UAnimSequence*>
		constexpr auto _handgunPoses = 0x2e0; // TArray<UAnimSequence*>
		constexpr auto _meleePoses = 0x2f0; // TArray<UAnimSequence*>
		constexpr auto _lowerBodyPoses = 0x300; // TArray<UAnimSequence*>
		constexpr auto _poseGroup = 0x310; // EPrisonerPhotoModePoseGroup
		constexpr auto _spineCurvature = 0x314; // float
		constexpr auto _spineRotation = 0x318; // float
		constexpr auto _upperBodyPoseIndex = 0x31c; // int32_t
		constexpr auto _lowerBodyPoseIndex = 0x320; // int32_t
		constexpr auto _lastUpperBodyPoseIndex = 0x324; // int32_t
		constexpr auto _lastLowerBodyPoseIndex = 0x328; // int32_t
		constexpr auto _correctionPose = 0x330; // UAnimSequenceBase*
		constexpr auto _upperBodyPoseBlendAlpha = 0x338; // float
		constexpr auto _lowerBodyPoseBlendAlpha = 0x33c; // float
	}

	namespace n_AWaypointGroup {
		constexpr auto DebugColor = 0x330; // FColor
		constexpr auto WaypointTraverseType = 0x334; // EWaypointTraverseType
		constexpr auto MaxSpawnInstancesPerWaypoint = 0x338; // int32_t
		constexpr auto WaypointSpawningResetTime = 0x33c; // float
		constexpr auto Waypoints = 0x340; // TArray<FWaypoint>
	}

	namespace n_UUI_WeaponAmmoDisplayContainer_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x2a8; // UWidgetAnimation*
		constexpr auto FadeIn = 0x2b0; // UWidgetAnimation*
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_AWaterBodyIsland {
		constexpr auto SplineComp = 0x228; // UWaterSplineComponent*
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_UEdgeLoopInsertionTool {
		constexpr auto Settings = 0x98; // UEdgeLoopInsertionProperties*
		constexpr auto Preview = 0x300; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_AAnimalSpawner2 {
		constexpr auto MinSpawnAwayDistance = 0x238; // float
		constexpr auto MaxSpawnAwayDistance = 0x23c; // float
		constexpr auto _carcassSpawnChance = 0x240; // float
		constexpr auto SpawnInfo = 0x248; // TMap<AAnimal2*, FAnimalSpawnInfo>
		constexpr auto SpawnInfoCarcasses = 0x298; // TMap<AStaticMeshActor*, FAnimalSpawnInfo>
		constexpr auto SphereComponent = 0x2e8; // USphereComponent*
		constexpr auto _globalSpawner = 0x2f0; // AGlobalAnimalSpawner*
		constexpr auto _spawnTimeDelta = 0x304; // float
		constexpr auto _overrideSpawnAnythingChance = 0x308; // bool
		constexpr auto _spawnAnythingChance = 0x30c; // float
		constexpr auto _animalsData = 0x310; // TArray<FAnimalManagementData>
		constexpr auto _spawnedCarcasses = 0x320; // TArray<FCarcassManagementData>
	}

	namespace n_UConZSlider {
		constexpr auto _minValue = 0x280; // int32_t
		constexpr auto _maxValue = 0x284; // int32_t
		constexpr auto _stepSize = 0x288; // int32_t
		constexpr auto _controlWithKeyboard = 0x28c; // bool
		constexpr auto _progressBarOverlay = 0x2a8; // UOverlay*
		constexpr auto _sliderThumb = 0x2b0; // UImage*
		constexpr auto _progressBar = 0x2b8; // UProgressBar*
		constexpr auto _selectedAndFocusedSliderStyle = 0x2c0; // FConZSliderStyle
		constexpr auto _selectedAndUnfocusedSliderStyle = 0x4e8; // FConZSliderStyle
		constexpr auto _unselectedSliderStyle = 0x710; // FConZSliderStyle
		constexpr auto _highlightedSliderStyle = 0x938; // FConZSliderStyle
		constexpr auto _disabledSliderStyle = 0xb60; // FConZSliderStyle
		constexpr auto _stepSpeedStartTreshold = 0xd88; // float
		constexpr auto _stepSpeedThreshold = 0xd8c; // float
		constexpr auto _stepSpeedAtStart = 0xd90; // float
		constexpr auto _stepSpeedSlow = 0xd94; // float
		constexpr auto _stepSpeedFast = 0xd98; // float
		constexpr auto _controlWithMouseClick = 0xd9c; // bool
		constexpr auto _controlWithMouseWheel = 0xd9d; // bool
	}

	namespace n_UCustomZoneSettingsHandlingMethodSelector {
		constexpr auto _nameText = 0x270; // UTextBlock*
		constexpr auto _buttonSkip = 0x278; // UButton*
		constexpr auto _buttonAllow = 0x280; // UButton*
		constexpr auto _buttonBlock = 0x288; // UButton*
		constexpr auto _name = 0x290; // FText
	}

	namespace n_UGameEventScoreboardWidget {
		constexpr auto RoundInfoWidgetClass = 0x278; // UGameEventRoundInfoWidget*
		constexpr auto TeamHeaderWidgetClass = 0x280; // UGameEventTeamHeaderWidget*
		constexpr auto StatWidgetClass = 0x288; // UGameEventParticipantStatsWidget*
		constexpr auto StatWidgets = 0x290; // TArray<UGameEventParticipantStatsWidget*>
		constexpr auto _gameEvent = 0x2a0; // AGameEventBase*
		constexpr auto _selected = 0x2a8; // int32_t
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4d0; // UEnvQuery*
		constexpr auto QueryParams = 0x4d8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4e8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4f8; // float
		constexpr auto StepToDebugDraw = 0x4fc; // int32_t
		constexpr auto HighlightMode = 0x500; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x504; // char : 1
		constexpr auto bDrawFailedItems = 0x504; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x504; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x504; // char : 1
		constexpr auto bTickDuringGame = 0x504; // char : 1
		constexpr auto QueryingMode = 0x508; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x510; // FNavAgentProperties
	}

	namespace n_UAnimNotify_ConditionalPlayParticleEffectForItem {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UAnimNotify_MakeNoise {
		constexpr auto noiseLevel = 0x38; // ENoiseLevel
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UVDSplineRopeComponent {
		constexpr auto SplineRef = 0x6f8; // FComponentReference
		constexpr auto bAutoAttachToSplineEndPoints = 0x720; // char : 1
		constexpr auto bStretchToSplineLength = 0x720; // char : 1
		constexpr auto SplineLength = 0x724; // float
	}

	namespace n_UGroomBindingAsset {
		constexpr auto Groom = 0x28; // UGroomAsset*
		constexpr auto SourceSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x38; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x40; // int32_t
		constexpr auto MatchingSection = 0x44; // int32_t
		constexpr auto GroupInfos = 0x48; // TArray<FGoomBindingGroupInfo>
	}

	namespace n_UAkAudioEvent {
		constexpr auto RequiredBank = 0x28; // UAkAudioBank*
		constexpr auto MaxAttenuationRadius = 0x30; // float
		constexpr auto IsInfinite = 0x34; // bool
		constexpr auto MinimumDuration = 0x38; // float
		constexpr auto MaximumDuration = 0x3c; // float
	}

	namespace n_ACargoDropEvent {
		constexpr auto CargoDropClasses = 0x248; // TArray<ACargoDropContainer*>
		constexpr auto _characterAroundInfo = 0x2c0; // FSpawnCharacterAroundInfo
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_ULiveLinkAnimationVirtualSubject {
		constexpr auto bAppendSubjectNameToBones = 0xd9; // bool
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant {
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_ULandingDamageCustomization {
		constexpr auto PrisonerAnkleSprainEnergyThreshold = 0x28; // float
	}

	namespace n_UMetabolismMineralsPanel {
		constexpr auto _mineral_Ca = 0x260; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Fe = 0x268; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Mg = 0x270; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_P = 0x278; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_K = 0x280; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Zn = 0x288; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Cu = 0x290; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Mn = 0x298; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Se = 0x2a0; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _mineral_Na = 0x2a8; // UMetabolismVitaminAndMineralReserve*
	}

	namespace n_ATrackingMarker2 {
		constexpr auto SceneComponent = 0x228; // USceneComponent*
		constexpr auto DirectionArrow = 0x230; // UArrowComponent*
		constexpr auto ConeDecal = 0x238; // UDecalComponent*
		constexpr auto Particles = 0x240; // UParticleSystemComponent*
		constexpr auto TickFrequency = 0x248; // float
		constexpr auto AnimalClass = 0x250; // AAnimal2*
		constexpr auto Duration = 0x258; // float
		constexpr auto Direction = 0x25c; // FVector
		constexpr auto health = 0x268; // float
		constexpr auto BleedingSeverity = 0x26c; // EBleedingSeverity
		constexpr auto ShowBleedingInfo = 0x26d; // bool
		constexpr auto ShowWoundInfo = 0x26e; // bool
		constexpr auto ShowBasicWoundInfo = 0x26f; // bool
		constexpr auto MaxSevereBleedTime = 0x270; // float
		constexpr auto MaxHeavyBleedTime = 0x274; // float
		constexpr auto MaxModerateBleedTime = 0x278; // float
		constexpr auto MaxLightBleedTime = 0x27c; // float
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UInteractionGroupWidget_C {
		constexpr auto UI_Border = 0x298; // UUI_Border_C*
	}

	namespace n_UUI_TournamentScoreboardRow_C {
		constexpr auto DeathIcon = 0x260; // UImage*
		constexpr auto FamePoints = 0x268; // UTextBlock*
		constexpr auto Kills = 0x270; // UTextBlock*
		constexpr auto PlayerName = 0x278; // UTextBlock*
		constexpr auto Rank = 0x280; // UTextBlock*
	}

	namespace n_UWeaponAccuracyGroup {
		constexpr auto NormalStandFrom = 0x30; // float
		constexpr auto NormalStandTo = 0x34; // float
		constexpr auto NormalCrouchFrom = 0x38; // float
		constexpr auto NormalCrouchTo = 0x3c; // float
		constexpr auto NormalProneFrom = 0x40; // float
		constexpr auto NormalProneTo = 0x44; // float
		constexpr auto ScopedStandFrom = 0x48; // float
		constexpr auto ScopedStandTo = 0x4c; // float
		constexpr auto ScopedCrouchFrom = 0x50; // float
		constexpr auto ScopedCrouchTo = 0x54; // float
		constexpr auto ScopedProneFrom = 0x58; // float
		constexpr auto ScopedProneTo = 0x5c; // float
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UPrisonerBodySymptom_DoubleVision {
		constexpr auto _maxSeverity = 0xb8; // float
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_UDiegeticLockState {
		constexpr auto LockedColor = 0x260; // FSlateColor
		constexpr auto UnlockedColor = 0x288; // FSlateColor
		constexpr auto _lockState = 0x2b0; // UTextBlock*
	}

	namespace n_UMetabolism_ICU_GraphWidget_SPO2 {
		constexpr auto TimeStretchCurveCurve = 0x218; // UCurveFloat*
	}

	namespace n_UPrisonerFirstPersonViewComponent {
		constexpr auto SubviewBlendingPriorities = 0xd0; // TArray<EPrisonerFirstPersonSubview>
		constexpr auto SubviewBlendOverrides = 0xe0; // TArray<FPrisonerFirstPersonSubviewBlendOverride>
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UZombieAnimInstance2 {
		constexpr auto HasOwnerBegunPlay = 0x2b8; // bool
		constexpr auto IsAlive = 0x2b9; // bool
		constexpr auto IsInRagdoll = 0x2ba; // bool
		constexpr auto IsDeadAndCompletelyInRagdoll = 0x2bb; // bool
		constexpr auto stance = 0x2bc; // EZombieStance
		constexpr auto IsStanceRelaxed = 0x2bd; // bool
		constexpr auto IsStanceLying = 0x2be; // bool
		constexpr auto IsStanceAlerted = 0x2bf; // bool
		constexpr auto IsStanceCombat = 0x2c0; // bool
		constexpr auto NumRelaxedIdleVariations = 0x2c4; // int32_t
		constexpr auto RelaxedIdleVariationIndex = 0x2c8; // int32_t
		constexpr auto Acceleration = 0x2cc; // FVector
		constexpr auto WantsToMove = 0x2d8; // bool
		constexpr auto Velocity = 0x2dc; // FVector
		constexpr auto Speed = 0x2e8; // float
		constexpr auto SpeedXY = 0x2ec; // float
		constexpr auto WalkStoppingDistance = 0x2f0; // float
		constexpr auto WalkStoppingTime = 0x2f4; // float
		constexpr auto IsFalling = 0x2f8; // bool
		constexpr auto IsJumping = 0x2f9; // bool
		constexpr auto JumpApex = 0x2fc; // float
		constexpr auto JumpDuration = 0x300; // float
		constexpr auto AimOffset = 0x304; // FRotator
		constexpr auto CanStartGoToLoop = 0x310; // bool
		constexpr auto RelaxedWalkLoopAnimation = 0x318; // UAnimSequenceBase*
		constexpr auto RelaxedWalkLoopAnimationPlayRate = 0x320; // float
		constexpr auto CombatRunStartAnimation = 0x328; // UAnimSequenceBase*
		constexpr auto CombatRunStartAnimationPlayRate = 0x330; // float
		constexpr auto CombatRunLoopAnimation = 0x338; // UAnimSequenceBase*
		constexpr auto CombatRunLoopAnimationPlayRate = 0x340; // float
		constexpr auto CombatRunStopAnimation = 0x348; // UAnimSequenceBase*
		constexpr auto CombatRunStopAnimationStartTime = 0x350; // float
		constexpr auto CombatRunStopAnimationPlayRate = 0x354; // float
		constexpr auto MinUpperBodyBlendWeight = 0x358; // float
		constexpr auto UpperBodyBlendMaxSpeedXY = 0x35c; // float
		constexpr auto UpperBodyBlendWeight = 0x360; // float
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UWaterWavesAssetReference {
		constexpr auto WaterWavesAsset = 0x28; // UWaterWavesAsset*
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto AffectedBySkyLight = 0x218; // float
		constexpr auto bModifyMaxValueRGBM = 0x21c; // bool
		constexpr auto MaxValueRGBM = 0x220; // float
		constexpr auto CaptureOffset = 0x224; // FVector
		constexpr auto MapBuildDataId = 0x230; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UDoorUnlockData {
		constexpr auto Type = 0x28; // EDoorUnlockDataType
		constexpr auto Description = 0x30; // FString
	}

	namespace n_AKillBoxC4SpawnPoint {
		constexpr auto _possibleSpawnClasses = 0x220; // TArray<AItem*>
	}

	namespace n_UStatisticsSubcategoryTab {
		constexpr auto _subcategoryIcon = 0x278; // UTexture2D*
		constexpr auto _tabSelectionImage = 0x280; // UImage*
		constexpr auto _subcategoryImage = 0x288; // UImage*
		constexpr auto _selectedTabTexture = 0x290; // UTexture2D*
	}

	namespace n_UTrapRefuelItemTag {
		constexpr auto UsesOnRefuel = 0x30; // int32_t
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UPlaneCutOperatorFactory {
		constexpr auto CutTool = 0x30; // UPlaneCutTool*
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_AAkAcousticPortal {
		constexpr auto InitialState = 0x258; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x25c; // float
		constexpr auto ObstructionCollisionChannel = 0x260; // ECollisionChannel
	}

	namespace n_UWaterSubsystem {
		constexpr auto OnCameraUnderwaterStateChanged = 0x70; // FMulticastInlineDelegate
		constexpr auto OnWaterScalabilityChanged = 0x80; // FMulticastInlineDelegate
		constexpr auto DefaultRiverMesh = 0x90; // UStaticMesh*
		constexpr auto DefaultLakeMesh = 0x98; // UStaticMesh*
		constexpr auto WaterMeshActor = 0xa0; // AWaterMeshActor*
		constexpr auto MaterialParameterCollection = 0xd0; // UMaterialParameterCollection*
	}

	namespace n_UUI_TrashMenuButton_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x288; // UImage*
		constexpr auto MainSizeBox = 0x290; // USizeBox*
		constexpr auto TextBlock_1 = 0x298; // UTextBlock*
		constexpr auto OnClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto Text = 0x2b0; // FText
		constexpr auto SizeToContent = 0x2c8; // bool
		constexpr auto WidthOverride = 0x2cc; // float
		constexpr auto FontSize = 0x2d0; // int32_t
		constexpr auto HoveredFontSize = 0x2d4; // int32_t
		constexpr auto OverridesHighlight = 0x2d8; // bool
	}

	namespace n_UPrisonerShotsFiredTrackerComponent {
		constexpr auto _repNumShotsFired = 0xb4; // int32_t
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_AMetalDetector {
		constexpr auto _resourceContainerComponent = 0x7c0; // UBasicGameResourceContainerComponent*
		constexpr auto _minDetectionRadius = 0x7c8; // float
		constexpr auto _maxDetectionRadius = 0x7cc; // float
		constexpr auto _updatePeriod = 0x7d0; // float
		constexpr auto _detectionFactor = 0x7d4; // float
		constexpr auto _startEvent = 0x7d8; // UAkAudioEvent*
		constexpr auto _stopEvent = 0x7e0; // UAkAudioEvent*
		constexpr auto _RTPCName = 0x7e8; // FName
		constexpr auto _soundInterpolationTimeMs = 0x7f0; // int32_t
		constexpr auto _detectionSourceSocketName = 0x800; // FName
	}

	namespace n_APETBottle02_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UUI_JournalObjectiveContainer_C {
		constexpr auto _activateButtonBackground = 0x340; // UImage*
		constexpr auto _background = 0x348; // UImage*
		constexpr auto _descriptionBackground = 0x350; // UImage*
		constexpr auto _dividerBottom = 0x358; // UImage*
		constexpr auto _headerBackground = 0x360; // UImage*
		constexpr auto _objectivesBg = 0x368; // UImage*
		constexpr auto _resetButtonBackground = 0x370; // UImage*
		constexpr auto _restartMissionButtonBackground = 0x378; // UImage*
		constexpr auto _rewardsBackground = 0x380; // UImage*
		constexpr auto _sectionBackground = 0x388; // UImage*
		constexpr auto _untrackButtonBackground = 0x390; // UImage*
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UInsertMagazineInsertCartridge {
		constexpr auto MontageEndSectionName = 0x90; // FName
	}

	namespace n_USurfaceHardnessData {
		constexpr auto DefaultSurfaceHardness = 0x30; // float
		constexpr auto SurfaceHardnessMap = 0x38; // TMap<EPhysicalSurface, float>
	}

	namespace n_AAmmunitionBoxItem {
		constexpr auto AmmunitionItemClass = 0x7c0; // AAmmunitionItem*
		constexpr auto ItemClassToSpawnWhenUnpacked = 0x7c8; // AItem*
		constexpr auto MaxAmmoCount = 0x7d0; // int32_t
		constexpr auto _ammoCount = 0x7d4; // int32_t
	}

	namespace n_UJournalObjectiveContainer {
		constexpr auto _objectiveContainer = 0x260; // UVerticalBox*
		constexpr auto _rewardContainer = 0x268; // UHorizontalBox*
		constexpr auto _headerNameText = 0x270; // UTextBlock*
		constexpr auto _missionDescriptionText = 0x278; // UTextBlock*
		constexpr auto _missionBanner = 0x280; // UImage*
		constexpr auto _noDescriptionText = 0x288; // UTextBlock*
		constexpr auto _noRewardsText = 0x290; // UTextBlock*
		constexpr auto _activateMissionButton = 0x298; // UButton*
		constexpr auto _untrackMissionButton = 0x2a0; // UButton*
		constexpr auto _resetMissionButton = 0x2a8; // UButton*
		constexpr auto _restartMissionButton = 0x2b0; // UButton*
		constexpr auto _activateButtonOverlay = 0x2b8; // UOverlay*
		constexpr auto _untrackButtonOverlay = 0x2c0; // UOverlay*
		constexpr auto _resetButtonOverlay = 0x2c8; // UOverlay*
		constexpr auto _restartButtonOverlay = 0x2d0; // UOverlay*
		constexpr auto _objectiveItemBottomPadding = 0x2d8; // float
		constexpr auto _objectiveItemFontSize = 0x2dc; // float
		constexpr auto _objectiveItemWidgets = 0x2f0; // TMap<FString, TWeakObjectPtr<UObjectiveItemWidget>>
	}

	namespace n_ALevelMarkers {
		constexpr auto LadderMarkers = 0x220; // TArray<FLadderMarker>
		constexpr auto WindowMarkers = 0x230; // TArray<FWindowMarker>
	}

	namespace n_ABP_WeaponBullet_50BMG_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_USmoothMeshToolProperties {
		constexpr auto SmoothingType = 0x60; // ESmoothMeshToolSmoothType
	}

	namespace n_UBP_ConZGameInstance_C {
		constexpr auto UberGraphFrame = 0x3a8; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_APracticeLockpickingItem {
		constexpr auto _possibleLocks = 0x7c8; // TArray<FLockData>
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_AComplexAnimalAIController {
		constexpr auto Agressivness = 0x328; // EAnimalAgressivness
		constexpr auto SightIntimidateRadius = 0x32c; // float
		constexpr auto SightAttackRadius = 0x330; // float
		constexpr auto FoeChargeVelocity = 0x334; // float
		constexpr auto ShouldForceChargeRotation = 0x338; // bool
		constexpr auto AnimalVelocityThatMakesThisAnimalFlee = 0x33c; // float
		constexpr auto FleeDistance = 0x340; // float
		constexpr auto FleeTime = 0x344; // float
		constexpr auto TrotTime = 0x348; // float
		constexpr auto TimeToAttackWhenAggro = 0x34c; // float
		constexpr auto TimeToQuitObserve = 0x350; // float
		constexpr auto MinReactionTime = 0x354; // float
		constexpr auto MaxReactionTime = 0x358; // float
		constexpr auto MovingUpdateInterval = 0x35c; // float
		constexpr auto AttackingUpdateInetrval = 0x360; // float
		constexpr auto PathSegmentLength_OBSOLETE = 0x364; // float
		constexpr auto MinPaceDuration_OBSOLETE = 0x368; // float
		constexpr auto MaxNumWalks_OBSOLETE = 0x36c; // int32_t
		constexpr auto MaxNumTrots_OBSOLETE = 0x370; // int32_t
		constexpr auto PathDirectionCounterResetTime_OBOLETE = 0x374; // float
		constexpr auto MoveSegmentLength = 0x378; // float
		constexpr auto BackOffDistance = 0x37c; // float
		constexpr auto AttackTrackingDistance = 0x380; // float
		constexpr auto PredictionFactor = 0x384; // float
		constexpr auto BackAndForthStuckCheck = 0x388; // bool
		constexpr auto AttackAttempts = 0x389; // char
		constexpr auto ActionChangedDelay = 0x38c; // float
		constexpr auto CloseAttackRepeatDelay = 0x390; // float
		constexpr auto AttackChainDelay = 0x394; // float
		constexpr auto BlockedPathRetryAttempts = 0x398; // int32_t
		constexpr auto DirectionLockTime = 0x39c; // float
		constexpr auto MinWalkTimeDuringRoaming = 0x3a0; // float
		constexpr auto MaxWalkTimeDuringRoaming = 0x3a4; // float
		constexpr auto MinStandTimeDuringRoaming = 0x3a8; // float
		constexpr auto MaxStandTimeDuringRoaming = 0x3ac; // float
		constexpr auto IntimidateTime = 0x3b0; // float
		constexpr auto IntimidateAnimationEndTime = 0x3b4; // float
		constexpr auto AlertActionTime = 0x3b8; // float
		constexpr auto AlertStartupTime = 0x3bc; // float
		constexpr auto AlertAllowedAgainTime = 0x3c0; // float
		constexpr auto DoNotDespawnTime = 0x3c4; // float
		constexpr auto NormalAISenseSight = 0x3c8; // UAISenseConfig_Sight*
		constexpr auto NormalAISenseHearing = 0x3d0; // UAISenseConfig_Hearing*
		constexpr auto RelaxedAISenseHearing = 0x3d8; // UAISenseConfig_Hearing*
		constexpr auto AlertedAISenseHearing = 0x3e0; // UAISenseConfig_Hearing*
		constexpr auto SleepAISenseSight = 0x3e8; // UAISenseConfig_Sight*
		constexpr auto _animal = 0x3f0; // AComplexAnimal2*
		constexpr auto _healthPercentageToFlee = 0x470; // float
		constexpr auto _damageMagnitudeHealthPercentageToFlee = 0x474; // float
	}

	namespace n_UMeleeAttackCollisionCapsule {
		constexpr auto _attachment = 0x468; // FGameplayTag
		constexpr auto _weaponDescRef = 0x470; // FDataTableRowHandle
	}

	namespace n_UUI_GameEventTeamInfoWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto StatTextContainer = 0x268; // UBorder*
		constexpr auto TeamHeader = 0x270; // UBorder*
		constexpr auto TeamRows = 0x278; // UScrollBox*
		constexpr auto HeaderWidget = 0x280; // UUI_GameEventTeamHeaderWidget_C*
		constexpr auto ParticipantStatClass = 0x288; // UGameEventParticipantStatsWidget*
		constexpr auto TeamColours = 0x290; // FGameEventTeamColours
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UUVLayoutPreviewProperties {
		constexpr auto bVisible = 0x60; // bool
		constexpr auto ScaleFactor = 0x64; // float
		constexpr auto WhichSide = 0x68; // EUVLayoutPreviewSide
		constexpr auto bShowWireframe = 0x6c; // bool
		constexpr auto Shift = 0x70; // FVector2D
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_URevolveBoundaryToolProperties {
		constexpr auto bDisplayOriginalMesh = 0xb0; // bool
		constexpr auto AxisOrigin = 0xb4; // FVector
		constexpr auto AxisYaw = 0xc0; // float
		constexpr auto AxisPitch = 0xc4; // float
		constexpr auto bSnapToWorldGrid = 0xc8; // bool
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_AFireplaceItem {
		constexpr auto _fireplaceMesh = 0x848; // TArray<UStaticMesh*>
		constexpr auto _materialSwitchIndex = 0x858; // int32_t
		constexpr auto _litMaterial = 0x860; // UMaterialInterface*
		constexpr auto _unlitMaterial = 0x868; // UMaterialInterface*
		constexpr auto _sphereCollider = 0x870; // USphereComponent*
		constexpr auto _minimumResourceAmountRequiredForExtinguishInteraction = 0x878; // float
		constexpr auto _maximumResourceAmountTakenForExtinguishInteraction = 0x87c; // float
		constexpr auto _fireDamageProcessingPeriod = 0x880; // float
		constexpr auto _fireBaseDamageToItemsPerSecond = 0x888; // float
		constexpr auto _fireDamageRadius = 0x88c; // float
		constexpr auto _minBurningStageForManualPutOut = 0x890; // int32_t
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_AFlagAreaVisualizer {
		constexpr auto _staticMeshComponent = 0x220; // UStaticMeshComponent*
	}

	namespace n_UEdgeLoopInsertionProperties {
		constexpr auto PositionMode = 0x60; // EEdgeLoopPositioningMode
		constexpr auto InsertionMode = 0x64; // EEdgeLoopInsertionMode
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto ProportionOffset = 0x70; // double
		constexpr auto DistanceOffset = 0x78; // double
		constexpr auto bInteractive = 0x80; // bool
		constexpr auto bFlipOffsetDirection = 0x81; // bool
		constexpr auto bWireframe = 0x82; // bool
		constexpr auto VertexTolerance = 0x88; // double
	}

	namespace n_UItemSelection {
		constexpr auto MainItem = 0x30; // AItem*
		constexpr auto SupportItems = 0x38; // TArray<AItem*>
		constexpr auto Attachments = 0x48; // TArray<AItem*>
		constexpr auto UnselectedIcon = 0x58; // UTexture2D*
		constexpr auto SelectedIcon = 0x60; // UTexture2D*
		constexpr auto DisabledIcon = 0x68; // UTexture2D*
		constexpr auto SelectionName = 0x70; // FText
		constexpr auto SizeX = 0x88; // float
		constexpr auto SizeY = 0x8c; // float
		constexpr auto TeamIndex = 0x90; // int32_t
	}

	namespace n_URepairToolItemTag {
		constexpr auto Params = 0x30; // FRepairToolItemParams
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_AStartLocationManager {
		constexpr auto _startLocationDescriptions = 0x220; // TArray<FStartLocationDescription>
	}

	namespace n_AWeaponAttachmentSight {
		constexpr auto ViewCenterSocketName = 0x7e0; // FName
		constexpr auto AimingDownTheSightsLocationOffset = 0x7e8; // FVector
	}

	namespace n_ULiveLinkTimecodeProvider {
		constexpr auto SubjectKey = 0x30; // FLiveLinkSubjectKey
		constexpr auto Evaluation = 0x48; // ELiveLinkTimecodeProviderEvaluationType
		constexpr auto bOverrideFrameRate = 0x4c; // bool
		constexpr auto OverrideFrameRate = 0x50; // FFrameRate
		constexpr auto BufferSize = 0x58; // int32_t
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_ABP_MenuPlayerController_C {
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto Prisoner = 0x578; // APrisoner*
		constexpr auto _isMouseDown = 0x580; // bool
		constexpr auto PrisonerRotationSpeed = 0x584; // float
	}

	namespace n_UUI_TabModeTab_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x280; // UImage*
		constexpr auto HotkeyText = 0x288; // UTextBlock*
		constexpr auto Icon = 0x290; // UImage*
		constexpr auto MainSizeBox = 0x298; // USizeBox*
		constexpr auto TitleText = 0x2a0; // UTextBlock*
		constexpr auto Title = 0x2a8; // FText
		constexpr auto Hotkey = 0x2c0; // FText
		constexpr auto _active = 0x2d8; // bool
		constexpr auto Clicked = 0x2e0; // FMulticastInlineDelegate
		constexpr auto ActiveIcon = 0x2f0; // UTexture2D*
		constexpr auto Inactiveicon = 0x2f8; // UTexture2D*
		constexpr auto _alerted = 0x300; // bool
		constexpr auto InactiveUnalertedColor = 0x304; // FLinearColor
		constexpr auto InactiveAlertedColor = 0x314; // FLinearColor
		constexpr auto AlertBlinkTime = 0x324; // float
	}

	namespace n_UM1887_Reload_Event_ChamberEmpty_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UPrisonerUIData {
		constexpr auto _attributeDescriptions = 0x28; // FText [0x54]
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UUI_SquadListing_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContentBox = 0x268; // UHorizontalBox*
		constexpr auto highlight = 0x270; // UImage*
		constexpr auto Image_1 = 0x278; // UImage*
		constexpr auto Image_2 = 0x280; // UImage*
		constexpr auto Image_3 = 0x288; // UImage*
		constexpr auto SeparatorBox = 0x290; // UHorizontalBox*
		constexpr auto SquadName = 0x298; // UTextBlock*
		constexpr auto squadRank = 0x2a0; // UTextBlock*
		constexpr auto SquadScore = 0x2a8; // UTextBlock*
		constexpr auto information = 0x2b0; // FString
		constexpr auto emblem = 0x2c0; // FConZSquadEmblem
		constexpr auto Name = 0x2c8; // FString
		constexpr auto Rank = 0x2d8; // int32_t
		constexpr auto Score = 0x2dc; // int32_t
	}

	namespace n_USentryThirdPersonViewComponent {
		constexpr auto StandingSubviewName = 0xd0; // FName
		constexpr auto StandingAimingSubviewName = 0xd8; // FName
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_ATournament {
		constexpr auto StartAnnouncement = 0x230; // UAkAudioEvent*
		constexpr auto SuddenDeathAnnouncement = 0x238; // UAkAudioEvent*
		constexpr auto EndAnnouncement = 0x240; // UAkAudioEvent*
		constexpr auto _inProgress = 0x248; // bool
		constexpr auto _inSuddenDeath = 0x249; // bool
		constexpr auto _hasEnded = 0x24a; // bool
		constexpr auto _stats = 0x250; // TArray<FTournamentStats>
		constexpr auto _scoreboardWidget = 0x260; // UTournamentScoreboardWidget*
	}

	namespace n_UWeaponDamageGroup {
		constexpr auto Head = 0x30; // float
		constexpr auto Neck = 0x34; // float
		constexpr auto Torso = 0x38; // float
		constexpr auto ArmUpper = 0x3c; // float
		constexpr auto Abdomen = 0x40; // float
		constexpr auto LegUpper = 0x44; // float
		constexpr auto OtherLimbs = 0x48; // float
	}

	namespace n_UABP_Prisoner_Corpse_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
	}

	namespace n_ABeer_Waitapu_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UBuryToolItemTag {
		constexpr auto IsSmallSizedTool = 0x30; // bool
		constexpr auto BuryItemUsage = 0x34; // int32_t
		constexpr auto BuryDurationModifier = 0x38; // float
		constexpr auto BladeTipSocket = 0x3c; // FName
		constexpr auto BladeCenterSocket = 0x44; // FName
		constexpr auto ShortToolMinBuryTime = 0x4c; // float
		constexpr auto ShortToolMaxBuryTime = 0x50; // float
		constexpr auto LongToolMinBuryTime = 0x54; // float
		constexpr auto LongToolMaxBuryTime = 0x58; // float
	}

	namespace n_AWeaponAttachmentUniversalFlashlight {
		constexpr auto WeaponToStaticMeshMapping = 0x808; // TMap<AWeapon*, UStaticMesh*>
	}

	namespace n_URemoveOccludedTrianglesOperatorFactory {
		constexpr auto Tool = 0x30; // URemoveOccludedTrianglesTool*
	}

	namespace n_ASentryGuardVolume2 {
		constexpr auto _hotZonesLocalLocations = 0x278; // TArray<FVector>
		constexpr auto _hotZonesBuildings = 0x298; // TArray<ABuilding*>
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3a8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_USmoothMeshTool {
		constexpr auto SmoothProperties = 0x400; // USmoothMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeSmoothProperties*
		constexpr auto DiffusionProperties = 0x410; // UDiffusionSmoothProperties*
		constexpr auto ImplicitProperties = 0x418; // UImplicitSmoothProperties*
		constexpr auto WeightMapProperties = 0x420; // USmoothWeightMapSetProperties*
	}

	namespace n_AAkSpotReflector {
		constexpr auto AuxBus = 0x220; // UAkAuxBus*
		constexpr auto AuxBusName = 0x228; // FString
		constexpr auto AcousticTexture = 0x238; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x240; // float
		constexpr auto Level = 0x244; // float
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_AFireworksTrapItem {
		constexpr auto _triggerSound = 0x910; // UAkAudioEvent*
		constexpr auto _numShells = 0x918; // int32_t
		constexpr auto _shellLaunchPeriod = 0x91c; // float
		constexpr auto _detonationDelay = 0x920; // float
		constexpr auto _isFiring = 0x931; // bool
	}

	namespace n_UVehicle2WDriverMountSlot {
		constexpr auto _forwardIdleAnimation = 0x148; // UBlendSpace*
		constexpr auto _forwardSteeringAnimation = 0x150; // UAnimSequenceBase*
		constexpr auto _forwardSteeringAnimationFP = 0x158; // UAnimSequenceBase*
		constexpr auto _reverseIdleAnimation = 0x160; // UBlendSpace*
		constexpr auto _reverseSteeringAnimation = 0x168; // UAnimSequenceBase*
		constexpr auto _reverseSteeringAnimationFP = 0x170; // UAnimSequenceBase*
		constexpr auto _standUpStartAnimation = 0x178; // UAnimSequence*
		constexpr auto _standUpLoopAnimation = 0x180; // UAnimSequence*
		constexpr auto _standUpEndAnimation = 0x188; // UAnimSequence*
		constexpr auto _startEngineStartAnimation = 0x190; // UAnimSequence*
		constexpr auto _startEngineLoopAnimation = 0x198; // UAnimSequence*
		constexpr auto _startEngineLongLoopAnimation = 0x1a0; // UAnimSequence*
		constexpr auto _startEngineEndAnimation = 0x1a8; // UAnimSequence*
	}

	namespace n_USTF12_Reload_Event_NoChamber_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_UBakedOcclusionMapVisualizationProperties {
		constexpr auto BaseGrayLevel = 0x60; // float
		constexpr auto OcclusionMultiplier = 0x64; // float
	}

	namespace n_UGameResourceType_Water {
		constexpr auto Salinity = 0x70; // float
	}

	namespace n_UUI_FoodOverviewTooltipPanel_C {
		constexpr auto Image_9 = 0x2c8; // UImage*
		constexpr auto UI_TooltipOverviewElement_C_1 = 0x2d0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_2 = 0x2d8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_3 = 0x2e0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_5 = 0x2e8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_6 = 0x2f0; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_7 = 0x2f8; // UUI_TooltipOverviewElement_C*
		constexpr auto UI_TooltipOverviewElement_C_8 = 0x300; // UUI_TooltipOverviewElement_C*
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UMetabolismSave {
		constexpr auto LeanBodyMass = 0x28; // float
		constexpr auto DigestionItems = 0x30; // TArray<FDigestionItemSave>
		constexpr auto DigestionHandlers = 0x40; // TArray<FConsumableDigestionHandlerSave>
		constexpr auto AbsorbedNutrients = 0x50; // FNutrientsData
		constexpr auto FecesVolumeInIntestine = 0xd0; // FNutrientsData
		constexpr auto FecesVolumeInColon = 0x150; // FNutrientsData
		constexpr auto UrineVolumeInBladder = 0x1d0; // float
	}

	namespace n_UObjectivesWidget {
		constexpr auto _objectiveDescription = 0x260; // UTextBlock*
		constexpr auto _amountTracker = 0x268; // UHorizontalBox*
		constexpr auto _currentAmount = 0x270; // UTextBlock*
		constexpr auto _totalAmount = 0x278; // UTextBlock*
		constexpr auto activeObjectiveFontColor = 0x280; // FLinearColor
		constexpr auto inctiveObjectiveFontColor = 0x290; // FLinearColor
		constexpr auto activeObjectiveFontSize = 0x2a0; // int32_t
		constexpr auto inactiveObjectiveFontSize = 0x2a4; // int32_t
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_ULevelUpNotificationDescription {
		constexpr auto Skill = 0x40; // USkill*
		constexpr auto skillLevel = 0x48; // ESkillLevel
	}

	namespace n_UUI_ExpandableContainer_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto ContentBackgroundImage = 0x280; // UImage*
		constexpr auto ContentHorizontalBox = 0x288; // UHorizontalBox*
		constexpr auto ContentOverlay = 0x290; // UOverlay*
		constexpr auto ContentSlot = 0x298; // UNamedSlot*
		constexpr auto ExpandButton = 0x2a0; // UButton*
		constexpr auto ExpandedSpacingLine = 0x2a8; // UImage*
		constexpr auto TitleBackgroundImage = 0x2b0; // UImage*
		constexpr auto TitleText = 0x2b8; // UTextBlock*
		constexpr auto FontSize = 0x2c0; // int32_t
		constexpr auto EnableExpandedSpacingLine = 0x2c4; // bool
		constexpr auto TitlePadding = 0x2c8; // FMargin
		constexpr auto _isMinimized = 0x2d8; // bool
		constexpr auto Title = 0x2e0; // FText
		constexpr auto ContentPadding = 0x2f8; // FMargin
		constexpr auto IsContentBackgroundImageVisible = 0x308; // bool
		constexpr auto _alarmsCount = 0x30c; // int32_t
		constexpr auto _isUnderAlarm = 0x310; // bool
		constexpr auto ParentContainer = 0x318; // UUI_ExpandableContainer_C*
		constexpr auto OnExpandChanged = 0x320; // FMulticastInlineDelegate
		constexpr auto ContentMargins = 0x330; // FMargin
		constexpr auto OnlySettableByChildren = 0x340; // bool
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_AAmmunitionArrow {
		constexpr auto DestroyOnHit = 0x810; // bool
		constexpr auto BrokenArrowClass = 0x818; // ABrokenArrow*
		constexpr auto _muzzleVelocityMultiplier = 0x820; // float
		constexpr auto _stiffnessFactor = 0x824; // float
		constexpr auto _flightRotationCorrectionSpeed = 0x828; // float
		constexpr auto _elasticityFactorSpread = 0x82c; // float
	}

	namespace n_UItemWidget2 {
		constexpr auto OnRightClicked = 0x278; // FMulticastInlineDelegate
		constexpr auto _item = 0x2b0; // TScriptInterface<IInventoryNode>
		constexpr auto _container = 0x2c0; // TScriptInterface<IInventoryContainer>
		constexpr auto _itemClass = 0x2f0; // UObject*
		constexpr auto _icon = 0x2f8; // UImage*
		constexpr auto _iconSizeBox = 0x300; // USizeBox*
		constexpr auto _background = 0x308; // UImage*
		constexpr auto _mainInvalidationBox = 0x310; // UInvalidationBox*
		constexpr auto _backgroundGrid = 0x318; // UUniformGridPanel*
		constexpr auto _foregroundGrid = 0x320; // UUniformGridPanel*
		constexpr auto _selectionOverlay = 0x328; // UOverlay*
		constexpr auto _widgetType = 0x330; // EInventoryNodeWidgetType
		constexpr auto _numberData = 0x338; // TMap<FName, float>
		constexpr auto _isVicinityContainer = 0x388; // bool
		constexpr auto _defaultBackgroundColour = 0x38c; // FLinearColor
		constexpr auto _hoveredBackgroundColour = 0x39c; // FLinearColor
		constexpr auto _selectedBackgroundColour = 0x3ac; // FLinearColor
		constexpr auto _selectedHoveredBackgroundColour = 0x3bc; // FLinearColor
		constexpr auto _shouldUpdateVisuals = 0x3da; // bool
		constexpr auto _lowerLeftBox = 0x3f0; // UHorizontalBox*
		constexpr auto _additionalIcon = 0x3f8; // UImage*
		constexpr auto _additionalIconSizeBox = 0x400; // USizeBox*
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UUI_HealthWidget2_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto Background = 0x318; // UImage*
		constexpr auto DisabledBar = 0x320; // UImage*
		constexpr auto HealthBar = 0x328; // UImage*
		constexpr auto ColorMaxHP = 0x330; // FLinearColor
		constexpr auto ColorMinHP = 0x340; // FLinearColor
		constexpr auto ColorCurve = 0x350; // UCurveFloat*
		constexpr auto _healthBarMat = 0x358; // UMaterialInstanceDynamic*
		constexpr auto _disabledBarMat = 0x360; // UMaterialInstanceDynamic*
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_ABP_WeaponBullet_ExplosiveArrow_Metal_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_UThrowingComponent {
		constexpr auto ItemThrowingBehavior = 0x1d0; // EItemThrowingBehavior
		constexpr auto PierceMaxDensity = 0x1d4; // float
		constexpr auto ThrowEnergyMultiplier = 0x1d8; // float
		constexpr auto InitialRotation = 0x1dc; // FRotator
		constexpr auto UpdatedRotation = 0x1e8; // FRotator
		constexpr auto MinRandomImpactRotation = 0x1f4; // FRotator
		constexpr auto MaxRandomImpactRotation = 0x200; // FRotator
		constexpr auto PenetrationDepth = 0x20c; // float
		constexpr auto IsFloatable = 0x210; // bool
		constexpr auto MinStance = 0x211; // EPrisonerStance
		constexpr auto _splashParticleSystem = 0x15c0; // UParticleSystem*
		constexpr auto _splashAudioEvent = 0x15c8; // UAkAudioEvent*
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_ADepotItem {
		constexpr auto _assignedTradePost = 0x888; // ATradePost*
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UDedicatedServerResponse {
		constexpr auto _dbConnection = 0x58; // UDbConnection*
	}

	namespace n_ARadioStation {
		constexpr auto _stationName = 0x250; // FName
		constexpr auto _programsData = 0x258; // TArray<FRadioProgramData>
		constexpr auto _maxTracksToQueue = 0x268; // int32_t
		constexpr auto _currentIndex = 0x26c; // int32_t
		constexpr auto _playlist = 0x270; // TArray<URadioTrack*>
		constexpr auto _elapsedTime = 0x280; // float
	}

	namespace n_ABeer_Mina_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UUI_GameEventParticipantInfoCardWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Assists = 0x280; // UTextBlock*
		constexpr auto Avatar = 0x288; // UImage*
		constexpr auto Deaths = 0x290; // UTextBlock*
		constexpr auto FameLevel = 0x298; // UTextBlock*
		constexpr auto Headshots = 0x2a0; // UTextBlock*
		constexpr auto Kills = 0x2a8; // UTextBlock*
		constexpr auto Name = 0x2b0; // UTextBlock*
		constexpr auto ping = 0x2b8; // UTextBlock*
		constexpr auto Revenges = 0x2c0; // UTextBlock*
		constexpr auto SteamID = 0x2c8; // UTextBlock*
		constexpr auto Prisoner = 0x2d0; // ABP_Prisoner_C*
	}

	namespace n_UItemUserWidget {
		constexpr auto OnClicked = 0x298; // FMulticastInlineDelegate
		constexpr auto _uiBorder = 0x2a8; // UUserWidget*
		constexpr auto _isSelected = 0x2b0; // bool
		constexpr auto _isHovered = 0x2b1; // bool
	}

	namespace n_UUI_CraftingComponent_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto CountText = 0x2a8; // UTextBlock*
		constexpr auto OptionalBackgroundImage = 0x2b0; // UImage*
		constexpr auto OrderNumberText = 0x2b8; // UTextBlock*
		constexpr auto TypeImage = 0x2c0; // UImage*
		constexpr auto UI_Border = 0x2c8; // UUI_Border_C*
		constexpr auto isOptional = 0x2d0; // bool
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UUI_ScrollBar_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SliderImage = 0x268; // UImage*
		constexpr auto Size = 0x270; // FVector2D
		constexpr auto _currentValue = 0x278; // float
		constexpr auto _currentMaxCountOnScreen = 0x27c; // float
		constexpr auto _currentMaxValue = 0x280; // float
		constexpr auto _shouldUpdate = 0x284; // bool
		constexpr auto _scrollBarHeight = 0x288; // float
		constexpr auto OnSliderMoved = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMovieSceneLiveLinkSubSection {
		constexpr auto SubSectionData = 0x28; // FLiveLinkSubSectionData
		constexpr auto SubjectRole = 0x38; // ULiveLinkRole*
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UBird2AnimInstance {
		constexpr auto ABPSpeed = 0x2b8; // float
		constexpr auto IsLanding = 0x2bc; // bool
		constexpr auto IsTakingOff = 0x2bd; // bool
		constexpr auto IsPerched = 0x2be; // bool
		constexpr auto IsFlying = 0x2bf; // bool
		constexpr auto IsStaringPerched = 0x2c0; // bool
		constexpr auto SlopeRootTiltRotation = 0x2c4; // FRotator
	}

	namespace n_ADrinkItem {
		constexpr auto _gameResourceContainer = 0x910; // UBasicGameResourceContainerComponent*
	}

	namespace n_AVehicleCorpse {
		constexpr auto _mesh = 0x228; // UStaticMeshComponent*
		constexpr auto _explosionParticles = 0x230; // UParticleSystem*
		constexpr auto _explosionParticlesTransform = 0x240; // FTransform
		constexpr auto _explosionAudioEvent = 0x270; // UAkAudioEvent*
		constexpr auto _explosionForceMagnitude = 0x278; // float
		constexpr auto _burningParticles = 0x280; // TArray<FVehicleCorpseBurningParticles>
		constexpr auto _burningAudioEvent = 0x290; // UAkAudioEvent*
		constexpr auto _endOfLifeFadingTime = 0x298; // float
	}

	namespace n_ACTFBase {
		constexpr auto SphereComponent = 0x220; // USphereComponent*
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
		constexpr auto TeamMaterials = 0x230; // TArray<UMaterialInstance*>
		constexpr auto _gameEvent = 0x240; // ACTFGameEvent*
		constexpr auto _team = 0x248; // int32_t
		constexpr auto _radius = 0x24c; // float
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UUI_GameEventTeamHeaderWidget_C {
		constexpr auto TeamIndex = 0x278; // int32_t
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UFireItemState {
		constexpr auto FuelDuration = 0xf8; // float
		constexpr auto IsBurning = 0xfc; // bool
		constexpr auto SourceId = 0x100; // FDbIntegerId
	}

	namespace n_UPrisonerBodySymptomUIData {
		constexpr auto _causes = 0x90; // TArray<UPrisonerBodySymptomCauseUIData*>
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_ABP_WeaponBullet_WoodenCrossbowBolt_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UHandsHolstersWidget2 {
		constexpr auto _container = 0x278; // UInventoryContainer2D*
		constexpr auto _handsHolstersContainer = 0x280; // UInventoryContainerHandsHolsters*
		constexpr auto _nameText = 0x288; // UTextBlock*
		constexpr auto _itemSlotWidget = 0x290; // UInventorySlotUserWidget*
		constexpr auto _itemWidget = 0x298; // UItemWidget2*
		constexpr auto _inventoryGrid = 0x2a0; // UGridPanel*
		constexpr auto _attachmentSlotWidget = 0x2a8; // UInventorySlotUserWidget*
		constexpr auto _slotsWidgets = 0x2b0; // TArray<UInventorySlotUserWidget*>
		constexpr auto _attachmentWidgets = 0x2c0; // TArray<UItemWidget2*>
		constexpr auto _type = 0x2d0; // EHandsHolstersType
		constexpr auto _item = 0x2d8; // TScriptInterface<IInventoryNode>
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_ABP_WeaponBullet_ShotgunSlug_C {
		constexpr auto UberGraphFrame = 0x428; // FPointerToUberGraphFrame
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UBondageComponent {
		constexpr auto _bondageItem = 0xee0; // AItem*
		constexpr auto _boundBodyPart = 0xee8; // EClothesType
		constexpr auto _tightness = 0xeec; // float
	}

	namespace n_UInventoryGridWidget {
		constexpr auto _image = 0x278; // UImage*
	}

	namespace n_UEnvironmentDescriptionComponent {
		constexpr auto EnvironmentClass = 0x4d8; // EEnvironmentClass
		constexpr auto IsUnderground = 0x4d9; // bool
		constexpr auto ShouldBlockWeatherEffects = 0x4da; // bool
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UDropdownMenuSelectionWidget {
		constexpr auto OnClicked = 0x260; // FDelegate
		constexpr auto OnUpdated = 0x270; // FDelegate
		constexpr auto Selected = 0x280; // bool
		constexpr auto SelectionIndex = 0x284; // int32_t
		constexpr auto option = 0x288; // bool
		constexpr auto _dropdownMenu = 0x290; // UDropdownMenuWidget*
	}

	namespace n_AMissionScheduler {
		constexpr auto _missionSchedulerEnabled = 0x220; // bool
		constexpr auto _availableMainStoryMissions = 0x228; // TMap<AMission*, FMissionData>
		constexpr auto _availableSideStoryMissions = 0x278; // TMap<AMission*, FMissionData>
		constexpr auto _availableTutorialMissions = 0x2c8; // TMap<AMission*, FMissionData>
		constexpr auto _missionQueuingInterval = 0x318; // float
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_APrisoner {
		constexpr auto SkillComponent = 0x7c8; // UPrisonerSkillComponent*
		constexpr auto InventoryComponent = 0x7d0; // UPrisonerInventoryComponent*
		constexpr auto MeleeCombatComponent = 0x7d8; // UMeleeCombatComponent*
		constexpr auto HitReactComponent = 0x7e0; // UHitReactComponent*
		constexpr auto PhysicalAnimationComponent = 0x7e8; // UPhysicalAnimationComponent*
		constexpr auto InteractionComponent = 0x7f0; // UInteractionComponent*
		constexpr auto SensingComponent = 0x7f8; // UPawnSensingComponent*
		constexpr auto BaseInteractionComponent = 0x800; // UBaseInteractionComponent*
		constexpr auto IgnoreMovementSettings = 0x808; // bool
		constexpr auto OverrideAimOffset = 0x809; // bool
		constexpr auto AimOffsetOverride = 0x80c; // FRotator
		constexpr auto EyesLookAtTargetOverride = 0x818; // AActor*
		constexpr auto OverrideEyesRotation = 0x820; // bool
		constexpr auto EyesYawDeltaOverride = 0x824; // float
		constexpr auto EyesPitchDeltaOverride = 0x828; // float
		constexpr auto IsFriendly = 0x82c; // bool
		constexpr auto CanEverBeKnockedOutByMeleeAttack = 0x82d; // bool
		constexpr auto ShouldOverrideCharacterTemplate = 0x82e; // bool
		constexpr auto CharacterTemplateOverride = 0x830; // FCharacterTemplate
		constexpr auto LeftHandAttachmentSocket = 0x8b8; // FAttachmentSocket
		constexpr auto RightHandAttachmentSocket = 0x8c8; // FAttachmentSocket
		constexpr auto LeftShoulderHolsterSocket = 0x8d8; // FAttachmentSocket
		constexpr auto RightShoulderHolsterSocket = 0x8e8; // FAttachmentSocket
		constexpr auto TabModeOpened = 0x9e8; // FMulticastInlineDelegate
		constexpr auto TabModeClosed = 0x9f8; // FMulticastInlineDelegate
		constexpr auto PanelsClosed = 0xa08; // FMulticastInlineDelegate
		constexpr auto HoveredActorChanged = 0xa18; // FMulticastInlineDelegate
		constexpr auto RespawnOnKill = 0xa50; // bool
		constexpr auto IKOffsetLeftFoot = 0xa54; // float
		constexpr auto IKOffsetRightFoot = 0xa58; // float
		constexpr auto BorderCrossingPenalty = 0xa5c; // EPrisonerBorderCrossingPenalty
		constexpr auto BorderCrossingPenaltyChange = 0xa60; // FMulticastInlineDelegate
		constexpr auto _bodySimulationComponent = 0xc38; // UPrisonerBodySimulationComponent*
		constexpr auto _skinThermalSensingComponent = 0xc40; // UThermalSensorComponent*
		constexpr auto _userProfile = 0xc48; // UUserProfile*
		constexpr auto _userId = 0xc50; // FString
		constexpr auto _serverUserProfileId = 0xc60; // FDbIntegerId
		constexpr auto _userProfileName = 0xc68; // FString
		constexpr auto _userFakeName = 0xc78; // FString
		constexpr auto _isEnabled = 0xda8; // bool
		constexpr auto _waterParticlesComponentWhenIdle = 0xdb0; // UParticleSystemComponent*
		constexpr auto _waterParticlesComponentWhenMoving = 0xdb8; // UParticleSystemComponent*
		constexpr auto _waterParticlesComponentWhenDiving = 0xdc0; // UParticleSystemComponent*
		constexpr auto _desiredStance = 0xdce; // EPrisonerStance
		constexpr auto _targetCrouchStage = 0xddc; // float
		constexpr auto _desiredPace = 0xde0; // EPrisonerMovementPace
		constexpr auto _freeLookEnabled = 0xde3; // bool
		constexpr auto _shouldIgnoreHeadTurningAndLeaning = 0xde4; // bool
		constexpr auto _postFreeLookControllerRotationBlendActive = 0xe0c; // bool
		constexpr auto _repAimOffset = 0xe1c; // FRotator
		constexpr auto _inDanger = 0xe38; // bool
		constexpr auto _lastSafeLocation = 0xe50; // FVector
		constexpr auto _lastCorpse = 0xe60; // APrisonerCorpse*
		constexpr auto _lastEventCorpse = 0xe68; // APrisonerCorpse*
		constexpr auto _targetLeanAmount = 0xe9c; // float
		constexpr auto _meleeTarget = 0x1650; // AActor*
		constexpr auto _activeMeleeSkill = 0x1660; // UMeleeSkill*
		constexpr auto _rotationTarget = 0x1678; // AActor*
		constexpr auto _unarmedCombatInputRedirector = 0x1680; // UUnarmedCombatInputRedirector*
		constexpr auto _skillEventHandler = 0x1688; // USkillEventHandler*
		constexpr auto _weapon = 0x16b0; // AWeapon*
		constexpr auto _fishingRod = 0x16b8; // AFishingRod*
		constexpr auto _itemInHands = 0x16c0; // AItem*
		constexpr auto _scopingWithItemInHandsState = 0x16e5; // EScopingWithItemInHandsState
		constexpr auto _weaponAimingType = 0x1710; // EWeaponAimingType
		constexpr auto _itemInHandsVisualObstructionDepthRep = 0x1734; // char
		constexpr auto _appearanceIndex = 0x1820; // int32_t
		constexpr auto _tattooIndex = 0x1824; // int32_t
		constexpr auto _breastSizeDesired = 0x1828; // float
		constexpr auto _breastSizeModifier = 0x182c; // float
		constexpr auto _breastSizePacked = 0x1830; // char
		constexpr auto _penisSizeDesired = 0x1834; // float
		constexpr auto _penisSizeModifier = 0x1838; // float
		constexpr auto _shouldPenisAndBreastsGrowOverTime = 0x183c; // bool
		constexpr auto _penisSizePacked = 0x183d; // char
		constexpr auto _bellyJiggleAmountCached = 0x1840; // float
		constexpr auto _breastJiggleAmountCached = 0x1844; // float
		constexpr auto _isInCombatMode = 0x1868; // bool
		constexpr auto _leftShoulderHolsteredItemReplicated = 0x18c0; // AItem*
		constexpr auto _rightShoulderHolsteredItemReplicated = 0x18d0; // AItem*
		constexpr auto _interactDefaultContextMenuTimerHandle = 0x1918; // FTimerHandle
		constexpr auto _examinedBy = 0x1920; // TArray<APrisoner*>
		constexpr auto _tacticsBlobMaterial = 0x1930; // UMaterialInstanceDynamic*
		constexpr auto _bodyPartEffects = 0x1938; // TArray<UParticleSystemComponent*>
		constexpr auto _handsBondage = 0x1948; // UBondageComponent*
		constexpr auto _prisonWalletComponent = 0x1950; // UPrisonerPrisonWalletComponent*
		constexpr auto _fishingComponent = 0x1958; // UPrisonerFishingComponent*
		constexpr auto _musicPlayerComponent = 0x1960; // UPrisonerMusicPlayerComponent*
		constexpr auto _tradingComponent = 0x1968; // UPrisonerTradingComponent*
		constexpr auto _throwingComponent = 0x1970; // UPrisonerThrowComponent*
		constexpr auto _itemDropPlaceholder = 0x1984; // TWeakObjectPtr<AItemDropPlaceholder>
		constexpr auto _currentlyDroppingItem = 0x1990; // TWeakObjectPtr<UObject>
		constexpr auto _packedWaterWeight = 0x19a8; // uint32_t
		constexpr auto _gameEvent = 0x19d0; // AGameEventBase*
		constexpr auto _gameEventLoadout = 0x19d8; // UPrisonerLoadout*
		constexpr auto _nearbyFoliageInfo = 0x19f0; // FPrisonerNearbyFoliageInfo
		constexpr auto _collidingNearbyFoliageInfo = 0x1a00; // FPrisonerNearbyFoliageInfo
		constexpr auto _nameWidgetComponent = 0x1ad0; // UWidgetComponent*
		constexpr auto _chipLightColorIndex = 0x1ad8; // int32_t
		constexpr auto SaveSpawnLocationTag = 0x1ae0; // UBaseItemTag*
		constexpr auto _deluxeVersion = 0x1b04; // FDeluxeVersion
		constexpr auto _examinedPrisoner = 0x1b0c; // TWeakObjectPtr<APrisoner>
		constexpr auto _killClaimed = 0x1b14; // bool
		constexpr auto _playingInstrumentState = 0x1b30; // EPlayingInstrumentState
		constexpr auto _carryingItemState = 0x1b32; // ECarryingItemState
		constexpr auto _shouldShowPenisOverride = 0x1b60; // bool
		constexpr auto _repMount = 0x1b80; // FPrisonerMountReplication
		constexpr auto _midiDeviceController = 0x1b90; // UMIDIDeviceController*
		constexpr auto _hasInfiniteAmmo = 0x1bd0; // bool
		constexpr auto _isInGodMode = 0x1bd1; // bool
		constexpr auto _isImmortal = 0x1bd2; // bool
		constexpr auto _isSuperJumpEnabled = 0x1bd3; // bool
		constexpr auto _hairLength = 0x1bf8; // float
		constexpr auto _facialHairLength = 0x1bfc; // float
		constexpr auto _enablePerComponentReplicationFrequency = 0x1c0c; // bool
		constexpr auto _componentsReplicationFrequency = 0x1c10; // float [0x5]
		constexpr auto _navigationInvokerComponent = 0x1c80; // UNavigationInvokerComponent*
		constexpr auto LegsInjuryTag = 0x1d00; // FGameplayTag
		constexpr auto _isLimping = 0x1d66; // bool
		constexpr auto _vehicleWeaponAimingStance = 0x1d7c; // EVehicleWeaponAimingStance
		constexpr auto _vehicleAimingYawReplicated = 0x1da8; // float
		constexpr auto _hasExplodedHead = 0x1db8; // bool
		constexpr auto _activeParachute = 0x1e34; // TWeakObjectPtr<AClothesItem>
		constexpr auto _commonData = 0x1e40; // UPrisonerCommonData*
	}

	namespace n_URemoveMagazineRemoveCartridge {
		constexpr auto MontageEndSectionName = 0x50; // FName
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_ABP_WeaponBullet_WoodenArrowFeathers_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_ABP_Weapon_BlackHawk_Crossbow_C {
		constexpr auto UberGraphFrame = 0x2e20; // FPointerToUberGraphFrame
		constexpr auto ItemObstructionTestCapsule3 = 0x2e28; // UItemObstructionTestCapsuleComponent*
		constexpr auto ItemObstructionTestCapsule4 = 0x2e30; // UItemObstructionTestCapsuleComponent*
		constexpr auto ItemObstructionTestCapsule1 = 0x2e38; // UItemObstructionTestCapsuleComponent*
		constexpr auto ItemObstructionTestCapsule2 = 0x2e40; // UItemObstructionTestCapsuleComponent*
		constexpr auto MeleeAttackCollisionCapsule = 0x2e48; // UMeleeAttackCollisionCapsule*
		constexpr auto IronSightsHideAlpha = 0x2e50; // float
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDynamicMeshSculptTool {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto SculptProperties = 0xc8; // UBrushSculptProperties*
		constexpr auto SculptMaxBrushProperties = 0xd0; // USculptMaxBrushProperties*
		constexpr auto KelvinBrushProperties = 0xd8; // UKelvinBrushProperties*
		constexpr auto RemeshProperties = 0xe0; // UBrushRemeshProperties*
		constexpr auto GizmoProperties = 0xe8; // UFixedPlaneBrushProperties*
		constexpr auto ViewProperties = 0xf0; // UMeshEditingViewProperties*
		constexpr auto BrushIndicator = 0x130; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x138; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x140; // UPreviewMesh*
		constexpr auto DynamicMeshComponent = 0x148; // UOctreeDynamicMeshComponent*
		constexpr auto ActiveOverrideMaterial = 0x150; // UMaterialInstanceDynamic*
		constexpr auto PlaneTransformGizmo = 0xc50; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xc58; // UTransformProxy*
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UNetworkDataIdAsset {
		constexpr auto IdToAssetMap = 0x30; // TMap<uint32_t, FPrimaryAssetId>
		constexpr auto AssetToIdMap = 0x80; // TMap<FPrimaryAssetId, uint32_t>
	}

	namespace n_ASearchGroundObjective {
		constexpr auto _itemToSearch = 0x320; // TArray<AItem*>
		constexpr auto _itemAmount = 0x330; // int32_t
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_ABP_FootstepTracker_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto FoliagePositionMaterial = 0x230; // UMaterialInstanceDynamic*
		constexpr auto FoliageOffsetMaterial = 0x238; // UMaterialInstanceDynamic*
		constexpr auto LastPos = 0x240; // FVector
		constexpr auto GrassInfluenceDrawSize = 0x24c; // FVector2D
		constexpr auto FootstepsPositionMaterial = 0x258; // UMaterialInstanceDynamic*
		constexpr auto FootstepsOffsetMaterial = 0x260; // UMaterialInstanceDynamic*
		constexpr auto Character = 0x268; // ACharacter*
		constexpr auto footstepTimeout = 0x270; // float
		constexpr auto FoliageInfluenceMaterial = 0x278; // UMaterialInstanceDynamic*
		constexpr auto LastDirection = 0x280; // FVector
	}

	namespace n_UChatWidget {
		constexpr auto _backgroundImage = 0x278; // UImage*
		constexpr auto _chatScrollBox = 0x280; // UScrollBox*
		constexpr auto _suggestionsScrollBox = 0x288; // UScrollBox*
		constexpr auto _suggestionsDropDown = 0x290; // UOverlay*
		constexpr auto _inputText = 0x298; // UEditableTextBox*
		constexpr auto _chatTypeIndicator = 0x2a0; // UTextBlock*
		constexpr auto _localChatColor = 0x2a8; // FLinearColor
		constexpr auto _globalChatColor = 0x2b8; // FLinearColor
		constexpr auto _squadChatColor = 0x2c8; // FLinearColor
		constexpr auto _serverChatColor = 0x2d8; // FLinearColor
		constexpr auto _errorChatColor = 0x2e8; // FLinearColor
		constexpr auto _defaultChatColor = 0x2f8; // FLinearColor
		constexpr auto _commandsOnlyChatColor = 0x308; // FLinearColor
		constexpr auto _suggestionsTextColor = 0x318; // FLinearColor
		constexpr auto _adminCommandCompletionManager = 0x330; // UAdminCommandCompletionManager*
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x110; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UDroneSoundComponent {
		constexpr auto IdleSound = 0xd8; // USoundCue*
		constexpr auto IdleAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto AngrySound = 0xe8; // USoundCue*
		constexpr auto AngryAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto AttackSound = 0xf8; // USoundCue*
		constexpr auto AttackAudioEvent = 0x100; // UAkAudioEvent*
		constexpr auto KillSound = 0x108; // USoundCue*
		constexpr auto KillAudioEvent = 0x110; // UAkAudioEvent*
		constexpr auto MinSilenceTimeout = 0x118; // float
		constexpr auto MaxSilenceTimeout = 0x11c; // float
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_ADropZoneGameEvent {
		constexpr auto TableAClass = 0x598; // ADropZoneEquipmentTable*
		constexpr auto TableBClass = 0x5a0; // ADropZoneEquipmentTable*
		constexpr auto CrateClass = 0x5a8; // ADropZoneCrate*
		constexpr auto CargoClass = 0x5b0; // ADropZoneCargo*
		constexpr auto IntroAnnouncement = 0x5b8; // UAkAudioEvent*
		constexpr auto LocateTheKeyAnnouncement = 0x5c0; // UAkAudioEvent*
		constexpr auto BlueTeamFoundKeyAnnouncement = 0x5c8; // UAkAudioEvent*
		constexpr auto BlueTeamUnlockedAnnouncement = 0x5d0; // UAkAudioEvent*
		constexpr auto BlueTeamStolenAnnouncement = 0x5d8; // UAkAudioEvent*
		constexpr auto RedTeamFoundKeyAnnouncement = 0x5e0; // UAkAudioEvent*
		constexpr auto RedTeamUnlockedAnnouncement = 0x5e8; // UAkAudioEvent*
		constexpr auto RedTeamStolenAnnouncement = 0x5f0; // UAkAudioEvent*
		constexpr auto CargoDropAnnouncement = 0x5f8; // UAkAudioEvent*
		constexpr auto CargoLandedAnnouncement = 0x600; // UAkAudioEvent*
		constexpr auto KeyIcon = 0x608; // UTexture2D*
		constexpr auto CargoIcon = 0x610; // UTexture2D*
		constexpr auto FriendlyColor = 0x618; // FLinearColor
		constexpr auto EnemyColor = 0x628; // FLinearColor
		constexpr auto _dropZoneParameters = 0x638; // FDropZoneParameters
		constexpr auto _phase = 0x670; // EDropZoneGameEventPhase
		constexpr auto _capturingTeam = 0x674; // int32_t
		constexpr auto _phaseTimeLeft = 0x678; // float
		constexpr auto _captureProgress = 0x67c; // float
		constexpr auto _barrierA = 0x688; // AGameEventBorder*
		constexpr auto _barrierB = 0x690; // AGameEventBorder*
		constexpr auto _tableA = 0x698; // ADropZoneEquipmentTable*
		constexpr auto _tableB = 0x6a0; // ADropZoneEquipmentTable*
		constexpr auto _crateA = 0x6a8; // ADropZoneCrate*
		constexpr auto _crateB = 0x6b0; // ADropZoneCrate*
		constexpr auto _key = 0x6b8; // ADropZoneKey*
		constexpr auto _keyCarrier = 0x6c0; // APrisoner*
		constexpr auto _topmostKeyOwner = 0x6c8; // AActor*
		constexpr auto _cargo = 0x6d0; // ADropZoneCargo*
		constexpr auto _slot = 0x6d8; // ADropZoneSlot*
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_ABP_M1_Clip_C {
		constexpr auto UberGraphFrame = 0x880; // FPointerToUberGraphFrame
		constexpr auto EmptyIcon = 0x888; // UTexture2D*
		constexpr auto EquipInteraction = 0x890; // FInteractionStruct
		constexpr auto ReturnInteraction = 0x908; // TArray<FInteractionStruct>
		constexpr auto AmmunitionVisuals = 0x918; // TArray<FAmmoTypeVisuals>
		constexpr auto InventoryIconToSet = 0x928; // UTexture2D*
		constexpr auto InventoryIconInHandsToSet = 0x930; // UTexture2D*
		constexpr auto VisualsFound = 0x938; // bool
	}

	namespace n_UBP_M1_OpenRemoveClipInsertClip_C {
		constexpr auto UberGraphFrame = 0x90; // FPointerToUberGraphFrame
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UCustomZoneSettingsMap {
		constexpr auto _map = 0x270; // UImage*
		constexpr auto _infoLeft = 0x278; // UTextBlock*
		constexpr auto _infoRight = 0x280; // UTextBlock*
		constexpr auto _buttonAddCircleRegion = 0x288; // UButton*
		constexpr auto _buttonAddRectangleRegion = 0x290; // UButton*
		constexpr auto _buttonRemoveRegion = 0x298; // UButton*
		constexpr auto _buttonHighlightColor = 0x2a0; // FLinearColor
		constexpr auto _mapMaterial = 0x2b0; // UMaterialInstanceDynamic*
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UPrisonerSoundComponent {
		constexpr auto MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents = 0xd8; // float
		constexpr auto MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents = 0xdc; // float
		constexpr auto PeriodicInhaleAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto PeriodicExhaleAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto HoldBreathInhaleAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto HoldBreathExhaleAudioEvent = 0xf8; // UAkAudioEvent*
		constexpr auto HoldBreathBreathlessExhaleAudioEvent = 0x100; // UAkAudioEvent*
		constexpr auto MinHeartRateToPostHeartbeatAudioEvent = 0x108; // float
		constexpr auto HeartbeatAudioEvent = 0x110; // UAkAudioEvent*
		constexpr auto FootstepsAudioEvent = 0x118; // UAkAudioEvent*
		constexpr auto FootstepsEnhancerAudioEvent = 0x120; // UAkAudioEvent*
		constexpr auto MovingThroughFoliageGateDuration = 0x128; // float
		constexpr auto StartGenericMovingThroughFoliageAudioEvent = 0x130; // UAkAudioEvent*
		constexpr auto StopGenericMovingThroughFoliageAudioEvent = 0x138; // UAkAudioEvent*
		constexpr auto GenericOneShotMovingThroughFoliageAudioEvent = 0x140; // UAkAudioEvent*
		constexpr auto GearNoiseAudioEvent = 0x148; // UAkAudioEvent*
		constexpr auto GearNoiseAudioEventWhenInWater = 0x150; // UAkAudioEvent*
		constexpr auto ItemMotionNoiseTimeToLive = 0x158; // float
		constexpr auto StartGenericEatItemAudioEvent = 0x160; // UAkAudioEvent*
		constexpr auto StopGenericEatItemAudioEvent = 0x168; // UAkAudioEvent*
		constexpr auto StartGenericDrinkItemAudioEvent = 0x170; // UAkAudioEvent*
		constexpr auto StopGenericDrinkItemAudioEvent = 0x178; // UAkAudioEvent*
		constexpr auto StartGenericDrinkWaterAudioEvent = 0x180; // UAkAudioEvent*
		constexpr auto StopGenericDrinkWaterAudioEvent = 0x188; // UAkAudioEvent*
		constexpr auto StartGenericExamineObjectAudioEvent = 0x190; // UAkAudioEvent*
		constexpr auto StopGenericExamineObjectAudioEvent = 0x198; // UAkAudioEvent*
		constexpr auto StartGenericCraftAudioEvent = 0x1a0; // UAkAudioEvent*
		constexpr auto StopGenericCraftAudioEvent = 0x1a8; // UAkAudioEvent*
		constexpr auto StartGenericUncraftAudioEvent = 0x1b0; // UAkAudioEvent*
		constexpr auto StopGenericUncraftAudioEvent = 0x1b8; // UAkAudioEvent*
		constexpr auto StartGenericVehicleRepairAudioEvent = 0x1c0; // UAkAudioEvent*
		constexpr auto StopGenericVehicleRepairAudioEvent = 0x1c8; // UAkAudioEvent*
		constexpr auto StartWashClothAudioEvent = 0x1d0; // UAkAudioEvent*
		constexpr auto StopWashClothAudioEvent = 0x1d8; // UAkAudioEvent*
		constexpr auto StartInGameAudioEvent = 0x1e0; // UAkAudioEvent*
		constexpr auto StopInGameAudioEvent = 0x1e8; // UAkAudioEvent*
		constexpr auto CalmStateAudioEvent = 0x1f0; // UAkAudioEvent*
		constexpr auto IntenseStateAudioEvent = 0x1f8; // UAkAudioEvent*
		constexpr auto CombatStateAudioEvent = 0x200; // UAkAudioEvent*
		constexpr auto OutOfBoundsSound = 0x208; // USoundCue*
		constexpr auto ChipExplosionSound = 0x210; // UAkAudioEvent*
		constexpr auto _activeMovingThroughFoliageSounds = 0x260; // TArray<FActiveMovingThroughFoliageSounds>
		constexpr auto _maxNumberOfFootstepsToPlayFootstepEnhancerSound = 0x28c; // int32_t
		constexpr auto _minNumberOfFootstepsToPlayFootstepEnhancerSound = 0x290; // int32_t
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UBaseItemWidget {
		constexpr auto ParentInventory = 0x278; // UBaseItemContainerWidget*
		constexpr auto Width = 0x288; // int32_t
		constexpr auto Height = 0x28c; // int32_t
		constexpr auto _imageWidget = 0x290; // UImage*
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_AMagicLeapARPinInfoActorBase {
		constexpr auto PinId = 0x220; // FGuid
		constexpr auto bVisibilityOverride = 0x230; // bool
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UPrisonerBodySymptom_FeelingHot {
		constexpr auto _maxSeverity = 0xb8; // float
		constexpr auto _temperatureDeltaAtMaxSeverity = 0xbc; // float
	}

	namespace n_UBakeTransformToolProperties {
		constexpr auto bBakeRotation = 0x60; // bool
		constexpr auto BakeScale = 0x61; // EBakeScaleMethod
		constexpr auto bRecenterPivot = 0x62; // bool
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UVoiceAudioComponent {
		constexpr auto VoiceDecoder = 0x868; // UVoiceDecoder*
	}

	namespace n_UUI_Metabolism_BasicInfo_C {
		constexpr auto UI_CollapsableContainer = 0x2a8; // UUI_CollapsableContainer_C*
	}

	namespace n_UViewAlignedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UAnimNotify_PlaySoundOnOwner {
		constexpr auto AudioEvent = 0x38; // UAkAudioEvent*
	}

	namespace n_UPrisonerDebugUI_BodyConditionEntryWidget {
		constexpr auto _nameTextBlock = 0x268; // UTextBlock*
	}

	namespace n_UWeaponActionUnloadAmmoSequence {
		constexpr auto Animations = 0x28; // FBodyWeaponAnimation
		constexpr auto CanBeInterrupted = 0x38; // bool
	}

	namespace n_UItemLightDisplay {
		constexpr auto _itemImage = 0x278; // UImage*
		constexpr auto _emptySlotBackground = 0x280; // UImage*
		constexpr auto _sizeBox = 0x288; // USizeBox*
		constexpr auto _durability = 0x290; // UTextBlock*
		constexpr auto _uses = 0x298; // UTextBlock*
		constexpr auto _selectionBorder = 0x2a0; // UBorder*
		constexpr auto _itemDataOverlay = 0x2a8; // UOverlay*
		constexpr auto _durabilityProgressBar = 0x2b0; // UProgressBar*
		constexpr auto _usesProgressBar = 0x2b8; // UProgressBar*
		constexpr auto _width = 0x2c0; // float
		constexpr auto _height = 0x2c4; // float
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UCircularMenuSegmentWeaponMalfunctionInfo {
		constexpr auto _weaponMalfunction = 0x80; // EWeaponMalfunction
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_AFishingZoneIndicator {
		constexpr auto _sceneComponent = 0x220; // USceneComponent*
		constexpr auto _fishIconParticles = 0x228; // UParticleSystemComponent*
		constexpr auto _rippleParticles = 0x230; // UParticleSystemComponent*
		constexpr auto _radius = 0x238; // float
		constexpr auto _fishSpawningPreset = 0x240; // UFishSpawningPreset*
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_AInstrumentItem {
		constexpr auto _numberOfOctaves = 0x7cc; // int32_t
		constexpr auto _playInstrumentStartMontageFP = 0x7d0; // UAnimMontage*
		constexpr auto _playInstrumentStartMontageTP = 0x7d8; // UAnimMontage*
		constexpr auto _playInstrumentStopMontageFP = 0x7e0; // UAnimMontage*
		constexpr auto _playInstrumentStopMontageTP = 0x7e8; // UAnimMontage*
		constexpr auto _playInstrumentIdleAnimationFP = 0x7f0; // UAnimSequenceBase*
		constexpr auto _playInstrumentPlayingAnimationFP = 0x7f8; // UAnimSequenceBase*
		constexpr auto _playInstrumentIdleAnimationTP = 0x800; // UAnimSequenceBase*
		constexpr auto _playInstrumentPlayingAnimationTP = 0x808; // UAnimSequenceBase*
		constexpr auto _playingPoseHoldTime = 0x810; // float
		constexpr auto _noteCStart = 0x818; // TArray<UAkAudioEvent*>
		constexpr auto _noteCStop = 0x828; // TArray<UAkAudioEvent*>
		constexpr auto _noteDStart = 0x838; // TArray<UAkAudioEvent*>
		constexpr auto _noteDStop = 0x848; // TArray<UAkAudioEvent*>
		constexpr auto _noteDbStart = 0x858; // TArray<UAkAudioEvent*>
		constexpr auto _noteDbStop = 0x868; // TArray<UAkAudioEvent*>
		constexpr auto _noteEStart = 0x878; // TArray<UAkAudioEvent*>
		constexpr auto _noteEStop = 0x888; // TArray<UAkAudioEvent*>
		constexpr auto _noteEbStart = 0x898; // TArray<UAkAudioEvent*>
		constexpr auto _noteEbStop = 0x8a8; // TArray<UAkAudioEvent*>
		constexpr auto _noteFStart = 0x8b8; // TArray<UAkAudioEvent*>
		constexpr auto _noteFStop = 0x8c8; // TArray<UAkAudioEvent*>
		constexpr auto _noteGStart = 0x8d8; // TArray<UAkAudioEvent*>
		constexpr auto _noteGStop = 0x8e8; // TArray<UAkAudioEvent*>
		constexpr auto _noteGbStart = 0x8f8; // TArray<UAkAudioEvent*>
		constexpr auto _noteGbStop = 0x908; // TArray<UAkAudioEvent*>
		constexpr auto _noteAStart = 0x918; // TArray<UAkAudioEvent*>
		constexpr auto _noteAStop = 0x928; // TArray<UAkAudioEvent*>
		constexpr auto _noteAbStart = 0x938; // TArray<UAkAudioEvent*>
		constexpr auto _noteAbStop = 0x948; // TArray<UAkAudioEvent*>
		constexpr auto _noteBStart = 0x958; // TArray<UAkAudioEvent*>
		constexpr auto _noteBStop = 0x968; // TArray<UAkAudioEvent*>
		constexpr auto _noteBbStart = 0x978; // TArray<UAkAudioEvent*>
		constexpr auto _noteBbStop = 0x988; // TArray<UAkAudioEvent*>
		constexpr auto _noteC2Start = 0x998; // TArray<UAkAudioEvent*>
		constexpr auto _noteC2Stop = 0x9a8; // TArray<UAkAudioEvent*>
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UABP_FishingReel_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x2f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x348; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum = 0x3f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot = 0x4a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x4f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x590; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x6e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x710; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x868; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x890; // FAnimNode_UseCachedPose
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseWindowsInstallationPath = 0x28; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x38; // FFilePath
		constexpr auto SuppressWwiseProjectPathWarnings = 0x48; // bool
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_ULuminARLightEstimate {
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UReplicationGraph {
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0x98; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xa8; // TArray<UReplicationGraphNode*>
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4e0; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x538; // FVector
		constexpr auto SplineBoundaryMin = 0x544; // float
		constexpr auto CachedMeshBodySetupGuid = 0x548; // FGuid
		constexpr auto BodySetup = 0x558; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x560; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x564; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x564; // char : 1
		constexpr auto bMeshDirty = 0x564; // char : 1
		constexpr auto ForwardAxis = 0x565; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x568; // float
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UGroupEdgeInsertionTool {
		constexpr auto Settings = 0x98; // UGroupEdgeInsertionProperties*
		constexpr auto Preview = 0xa0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_UCraftingRecipeWidget {
		constexpr auto ItemWidget = 0x278; // UItemClassWidget*
		constexpr auto RecipeID = 0x280; // int32_t
		constexpr auto OnRecipeSelected = 0x288; // FMulticastInlineDelegate
		constexpr auto _isGrayedOut = 0x298; // bool
		constexpr auto _itemImage = 0x2a0; // UImage*
		constexpr auto _additionalText = 0x2a8; // UTextBlock*
		constexpr auto _craftableItem = 0x2b0; // UCraftableItem*
		constexpr auto _isExaminable = 0x2c0; // bool
		constexpr auto _availabilityState = 0x2c1; // ERecipeAvailabilityState
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UMetabolismRadialAttributeProgressBar {
		constexpr auto BackgroundColor = 0x260; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto BarColor = 0x290; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto BarGlowColor = 0x2c0; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto InnerGlowColor = 0x2f0; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto OuterGlowColor = 0x320; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto FontColor = 0x350; // FMetabolismRadialAttributeProgressBarColor
		constexpr auto PreviewState = 0x380; // EDisposition
		constexpr auto _coloredBackground = 0x388; // UImage*
		constexpr auto _radialProgressBar = 0x390; // UImage*
		constexpr auto _fontEffectPass1 = 0x398; // URetainerBox*
		constexpr auto _fontEffectPass2 = 0x3a0; // URetainerBox*
		constexpr auto _attributeValueTextBlock = 0x3a8; // UTextBlock*
	}

	namespace n_UMetabolismRightPanel {
		constexpr auto _nutritionPanel = 0x260; // UMetabolismNutritionPanel*
		constexpr auto _macronutrientReservesPanel = 0x268; // UMetabolismMacronutrientReservesPanel*
		constexpr auto _bodyReservesPanel = 0x270; // UMetabolismBodyReservesPanel*
		constexpr auto _vitaminsPanel = 0x278; // UMetabolismVitaminsPanel*
		constexpr auto _mineralsPanel = 0x280; // UMetabolismMineralsPanel*
		constexpr auto _digestionPanel = 0x288; // UMetabolismDigestionPanel*
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_ULiveLinkComponentController {
		constexpr auto SubjectRepresentation = 0xb0; // FLiveLinkSubjectRepresentation
		constexpr auto ControllerMap = 0xc0; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
		constexpr auto bUpdateInEditor = 0x110; // bool
		constexpr auto OnLiveLinkUpdated = 0x118; // FMulticastInlineDelegate
		constexpr auto ComponentToControl = 0x128; // FComponentReference
		constexpr auto bDisableEvaluateLiveLinkWhenSpawnable = 0x150; // bool
		constexpr auto bEvaluateLiveLink = 0x151; // bool
	}

	namespace n_UCharacterActionComponent {
		constexpr auto _shouldStopMontageOnEnd = 0xb8; // bool
	}

	namespace n_ULockProtectionTag {
		constexpr auto FailureParticles = 0x38; // UParticleSystem*
		constexpr auto FailureAudio = 0x40; // UAkAudioEvent*
		constexpr auto FailureParticlesInWorld = 0x48; // UParticleSystem*
		constexpr auto FailureAudioInWorld = 0x50; // UAkAudioEvent*
		constexpr auto FailureParticlesScaleInWorld = 0x58; // FVector
		constexpr auto _baseDamage = 0x64; // float
	}

	namespace n_AShark {
		constexpr auto _sharkBiteBloodPS = 0x7f8; // UParticleSystem*
		constexpr auto _sharkBiteBloodPSC = 0x800; // UParticleSystemComponent*
		constexpr auto _biteParticlesScale = 0x808; // float
		constexpr auto _spawnBiteAttackParticlesSocketName = 0x80c; // FName
		constexpr auto _onDeathPS = 0x818; // UParticleSystem*
		constexpr auto _onDeathPSC = 0x820; // UParticleSystemComponent*
		constexpr auto _onDeathParticlesSocketName = 0x828; // FName
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWeaponAutoCrossbowAnimInstance {
		constexpr auto _followerBoneLocationOffset = 0x300; // float
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_ARabbit2AIController {
		constexpr auto MoveSegment = 0x3c0; // float
		constexpr auto MovementPauseMinTime = 0x3c4; // float
		constexpr auto MovementPauseMaxTime = 0x3c8; // float
		constexpr auto AngleOffset = 0x3cc; // float
	}

	namespace n_UNotificationDescription {
		constexpr auto Target = 0x28; // ENotificationTarget
		constexpr auto TargetUserProfileId = 0x30; // FDbIntegerId
		constexpr auto ShouldSendIfClientOffline = 0x38; // bool
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_ULiveLinkDrivenComponent {
		constexpr auto SubjectName = 0xb0; // FLiveLinkSubjectName
		constexpr auto ActorTransformBone = 0xb8; // FName
		constexpr auto bModifyActorTransform = 0xc0; // bool
		constexpr auto bSetRelativeLocation = 0xc1; // bool
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_A1H_Little_Spade_C {
		constexpr auto MeleeAttackCollisionCapsule1 = 0x7f0; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsule = 0x7f8; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UBP_LoadMagazine_4Bullets_LR_C {
		constexpr auto StartSectionOneLoadedBullet = 0x90; // FName
		constexpr auto StartSectionTwoOrEvenNumberOfLoadedBullets = 0x98; // FName
		constexpr auto StartSectionThreeOrOddNumberOfLoadedBullets = 0xa0; // FName
		constexpr auto EndSectionEmpty = 0xa8; // FName
		constexpr auto EndSectionOneLoadedBullet = 0xb0; // FName
		constexpr auto EndSectionTwoLoadedBullets = 0xb8; // FName
		constexpr auto EndSectionThreeOrOddNumberOfLoadedBullets = 0xc0; // FName
		constexpr auto EndSectionFourOrEvenNumberOfLoadedBullets = 0xc8; // FName
	}

	namespace n_UMagicLeapARPinContentBindings {
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_ULuminRuntimeSettings {
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UUI_WinCounter_C {
		constexpr auto Image_33 = 0x260; // UImage*
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_UCTFParticipantStats {
		constexpr auto Pickups = 0x48; // int32_t
		constexpr auto Captures = 0x4c; // int32_t
		constexpr auto Returns = 0x50; // int32_t
	}

	namespace n_URadioTrack {
		constexpr auto audio = 0x30; // UAkAudioEvent*
		constexpr auto Duration = 0x38; // float
		constexpr auto TrackName = 0x3c; // FName
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_UUI_Metabolism_RightPanel_C {
		constexpr auto BackgroundImage = 0x298; // UImage*
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_UAirplaneAnimInstance {
		constexpr auto IsAnyoneMounted = 0x2b8; // bool
		constexpr auto Speed = 0x2bc; // float
		constexpr auto SpeedKph = 0x2c0; // float
		constexpr auto PropellerRotationAngle = 0x2c4; // float
		constexpr auto LAileronAngle = 0x2c8; // float
		constexpr auto RAileronAngle = 0x2cc; // float
		constexpr auto LElevatorAngle = 0x2d0; // float
		constexpr auto RElevatorAngle = 0x2d4; // float
		constexpr auto RudderAngle = 0x2d8; // float
		constexpr auto IsMounteeDriver = 0x2dc; // bool
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
		constexpr auto NavigationDataToUpdate = 0xb8; // ANavigationData*
	}

	namespace n_URevolveBoundaryTool {
		constexpr auto Settings = 0x160; // URevolveBoundaryToolProperties*
		constexpr auto MaterialProperties = 0x168; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x170; // UConstructionPlaneMechanic*
		constexpr auto Preview = 0x178; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_UPrisonerBodySymptom_PeriodicAffect {
		constexpr auto _affectIntervalDeviationRatio = 0xb8; // FFloatInterval
		constexpr auto _affectDurationDeviationRatio = 0xc0; // FFloatInterval
	}

	namespace n_UUI_Border_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x280; // UImage*
		constexpr auto NamedSlot_1 = 0x288; // UNamedSlot*
		constexpr auto BorderSize = 0x290; // BorderSizes
		constexpr auto Color = 0x294; // FLinearColor
		constexpr auto _padding = 0x2a4; // float
	}

	namespace n_UUI_PlacedPlaceablesWidget_C {
		constexpr auto _icons = 0x2d0; // TArray<UUI_PlacedPlaceableIcon_C*>
		constexpr auto _placeableIndex = 0x2e0; // int32_t
	}

	namespace n_UCircularMenuSegmentInfo {
		constexpr auto Caption = 0x30; // FText
		constexpr auto Icons = 0x48; // UCircularMenuSegmentIcons*
		constexpr auto ShouldApplyFadeToIcon = 0x50; // bool
		constexpr auto IconSizeOverride = 0x54; // float
		constexpr auto ShouldStayVisible = 0x58; // bool
		constexpr auto ShowTooltip = 0x59; // bool
		constexpr auto ToolTipText = 0x60; // FText
		constexpr auto ParentCircularWidget = 0x78; // UCircularMenuWidget*
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UHoveredEventWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto NamedSlot = 0x268; // UNamedSlot*
		constexpr auto MouseEntered = 0x270; // FMulticastInlineDelegate
		constexpr auto MouseLeft = 0x280; // FMulticastInlineDelegate
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UPositionPlaneGizmo {
		constexpr auto CenterBallShape = 0x88; // UPreviewMesh*
		constexpr auto CenterBallMaterial = 0x90; // UMaterialInstance*
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UUVLayoutPreview {
		constexpr auto Settings = 0x28; // UUVLayoutPreviewProperties*
		constexpr auto PreviewMesh = 0x30; // UPreviewMesh*
		constexpr auto TriangleComponent = 0x38; // UTriangleSetComponent*
		constexpr auto bShowBackingRectangle = 0x40; // bool
		constexpr auto BackingRectangleMaterial = 0x48; // UMaterialInterface*
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_AConZVehicle4W {
		constexpr auto _spawnParameters = 0x2c0; // FVehicleSpawnParameters
		constexpr auto _physicsDominanceGroup = 0x2ec; // EConZPxDominanceGroup
		constexpr auto _isMassChangeByCargoAllowed = 0x308; // bool
		constexpr auto _isMassChangeByMounteesAllowed = 0x309; // bool
		constexpr auto _isCenterOfMassChangeByCargoAllowed = 0x30a; // bool
		constexpr auto _isCenterOfMassChangeByMounteesAllowed = 0x30b; // bool
		constexpr auto _cargoCenterOfMassOffset = 0x30c; // FVector
		constexpr auto _minEffectiveCargoMass = 0x318; // float
		constexpr auto _maxEffectiveCargoMass = 0x31c; // float
		constexpr auto _pushImpulseMagnitude = 0x320; // float
		constexpr auto _pushIntensityCurve = 0x328; // UCurveFloat*
		constexpr auto _pushDirectionRatioBetweenForwardAndUp = 0x330; // float
		constexpr auto _maxDistanceToAllowThePush = 0x334; // float
		constexpr auto _maxDistanceToAllowThePushStart = 0x338; // float
		constexpr auto _pushStartAccelerationChange = 0x33c; // float
		constexpr auto _pushStartSpeedThresholdKph = 0x340; // float
		constexpr auto _maxSpeed = 0x354; // float
		constexpr auto _supportsHandbrake = 0x358; // bool
		constexpr auto _engineStartingAudioEvent = 0x360; // UAkAudioEvent*
		constexpr auto _engineStartedAudioEvent = 0x368; // UAkAudioEvent*
		constexpr auto _engineTurnedOffAudioEvent = 0x370; // UAkAudioEvent*
		constexpr auto _engineFailedToStartAudioEvent = 0x378; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoFuelAudioEvent = 0x380; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoBatteryAudioEvent = 0x388; // UAkAudioEvent*
		constexpr auto _engineStalledAudioEvent = 0x390; // UAkAudioEvent*
		constexpr auto _noFuelToStartEngineAudioEvent = 0x398; // UAkAudioEvent*
		constexpr auto _noBatteryToStartEngineAudioEvent = 0x3a0; // UAkAudioEvent*
		constexpr auto _hornStartAudioEvent = 0x3a8; // UAkAudioEvent*
		constexpr auto _hornStopAudioEvent = 0x3b0; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateHornAudioEvent = 0x3b8; // UAkAudioEvent*
		constexpr auto _lightsActivatedAudioEvent = 0x3c0; // UAkAudioEvent*
		constexpr auto _lightsDeactivatedAudioEvent = 0x3c8; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateLightsAudioEvent = 0x3d0; // UAkAudioEvent*
		constexpr auto _noBatteryToTurnOnRadioAudioEvent = 0x3d8; // UAkAudioEvent*
		constexpr auto _gearUpAudioEvent = 0x3e0; // UAkAudioEvent*
		constexpr auto _gearDownAudioEvent = 0x3e8; // UAkAudioEvent*
		constexpr auto _chassisStartedMovingAudioEvent = 0x3f0; // UAkAudioEvent*
		constexpr auto _chassisStoppedMovingAudioEvent = 0x3f8; // UAkAudioEvent*
		constexpr auto _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero = 0x404; // float
		constexpr auto _rpmScaleForSoundWhenSpeedIsLessThanZero = 0x408; // float
		constexpr auto _soundCullDistance = 0x40c; // float
		constexpr auto _tireToSurfaceAudioData = 0x410; // UTireToSurfaceAudioData*
		constexpr auto _sendStateInterval = 0x418; // float
		constexpr auto _rigidBodyStatePositionErrorTolerance = 0x41c; // float
		constexpr auto _rigidBodyStateRotationErrorTolerance = 0x420; // float
		constexpr auto _distanceErrorToHardSnapToRemoteLocation = 0x424; // float
		constexpr auto _mountSlotIndicatorsWidget = 0x428; // UUserWidget*
		constexpr auto _mountSlots = 0x430; // TArray<UConZVehicle4WMountSlot*>
		constexpr auto _engineState = 0x440; // EVehicleEngineState
		constexpr auto _engineStallingForceMagnitude = 0x450; // float
		constexpr auto _hornActive = 0x454; // bool
		constexpr auto _lightsActive = 0x455; // bool
		constexpr auto _headlightsMaterialParameter = 0x458; // FVehicleMaterialParameterDescription
		constexpr auto _reverseLightsMaterialParameter = 0x468; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsMaterialParameter = 0x478; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsAlwaysOnIfLightsAreActivated = 0x488; // float
		constexpr auto _itemContainerClass = 0x4c0; // AVehicleItemContainer*
		constexpr auto _itemContainer = 0x4c8; // AVehicleItemContainer*
		constexpr auto _itemContainerContainedItemsMass = 0x4d0; // float
		constexpr auto _canEngineBeStalledByAcceleration = 0x568; // bool
		constexpr auto _engineStallingByAccelerationSpeedThreshold = 0x56c; // float
		constexpr auto _engineStallingByAccelerationOccurrenceInterval = 0x570; // float
		constexpr auto _engineStallingByAccelerationAudioEvent = 0x578; // UAkAudioEvent*
		constexpr auto _engineStallingByAccelerationAudioEventTriggerTimeRatios = 0x580; // TArray<float>
		constexpr auto _canEngineBeStalledByUpShift = 0x590; // bool
		constexpr auto _engineStallingByUpShiftOccurrenceInterval = 0x594; // float
		constexpr auto _engineStallingByUpShiftAudioEvent = 0x5a0; // UAkAudioEvent*
		constexpr auto _engineStallingByUpShiftAudioEventTriggerTimeRatios = 0x5a8; // TArray<float>
		constexpr auto _engineStallingWhenStartingViaMotionAudioEvent = 0x5b8; // UAkAudioEvent*
		constexpr auto _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios = 0x5c0; // TArray<float>
		constexpr auto _canSkillAffectMaxSpeed = 0x5d0; // bool
		constexpr auto _canSkillAffectSteerRate = 0x5d1; // bool
		constexpr auto _canSkillAffectThrottleAmount = 0x5d2; // bool
		constexpr auto _canSkillAffectBrakeAmount = 0x5d3; // bool
		constexpr auto _engineBlockMaxHealth = 0x5dc; // float
		constexpr auto _maxHealth = 0x5e4; // float
		constexpr auto _autoHealthDrainThreshold = 0x5e8; // float
		constexpr auto _autoHealthDrain = 0x5ec; // float
		constexpr auto _repairableParams = 0x5f0; // FRepairableParams
		constexpr auto _damagedEffects = 0x628; // TArray<FVehicleDamagedEffectsParameters>
		constexpr auto _damageMaterialParameterName = 0x648; // FName
		constexpr auto _exhaustEffects = 0x650; // FVehicleExhaustEffects
		constexpr auto _repairableTireParams = 0x698; // FRepairableParams
		constexpr auto _tireEffectUpdateRange = 0x6d0; // float
		constexpr auto _numAudioObjectsForTires = 0x6d4; // int32_t
		constexpr auto _tireEffectProperties = 0x6f0; // TArray<FVehicleTireEffectProperties>
		constexpr auto _corpseClass = 0x710; // AVehicleCorpse*
		constexpr auto _activeHitTimeToLive = 0x718; // float
		constexpr auto _impactEffects = 0x720; // FVehicleImpactEffects [0x5]
		constexpr auto ImpactDamageVsNormalImpulse = 0x838; // UCurveFloat*
		constexpr auto _makeNoiseInterval = 0x850; // float
		constexpr auto _maxNoiseLoudnessFromEngine = 0x854; // float
		constexpr auto _maxNoiseLoudnessFromSpeed = 0x858; // float
		constexpr auto _speedThresholdInKphToAffectNavigation = 0x860; // float
		constexpr auto _allowedWaterImmersionDepth = 0x864; // float
		constexpr auto _disallowedWaterImmersionDepth = 0x868; // float
		constexpr auto _waterImmersionDepthToForceEvictMountees = 0x86c; // float
		constexpr auto _timeToEvictMounteesWhenImmersedIntoWater = 0x870; // float
		constexpr auto _timeToForceEvictMounteesWhenImmersedIntoWater = 0x874; // float
		constexpr auto _timeToAutoDestructWhenImmersedIntoWater = 0x878; // float
		constexpr auto _shouldEvictMounteesIfTiltedAboveThreshold = 0x979; // bool
		constexpr auto _tiltThresholdAngleToEvictMountees = 0x97c; // float
		constexpr auto _healthBarCaption = 0x988; // FText
		constexpr auto _fuelResourceType = 0x9a8; // UGameResourceType*
		constexpr auto _maxFuelAmount = 0x9b0; // float
		constexpr auto _fuelDrainWhenStartingEngine = 0x9b4; // float
		constexpr auto _engineFuelDrainPerRpm = 0x9b8; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmScale = 0xa40; // float
		constexpr auto _engineFuelDrainPerRpmUnderLoad = 0xa48; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmUnderLoadScale = 0xad0; // float
		constexpr auto _fuelDrainWhenInactive = 0xad4; // float
		constexpr auto _fuelFillingBaseDuration = 0xad8; // float
		constexpr auto _fillingDurationPerFuelAmountFilled = 0xadc; // float
		constexpr auto _experienceAwardedPerFuelAmountFilled = 0xae0; // float
		constexpr auto _prisonerFillingFuelMontage = 0xae8; // UAnimMontage*
		constexpr auto _startFillingFuelAudioEvent = 0xaf0; // UAkAudioEvent*
		constexpr auto _stopFillingFuelAudioEvent = 0xaf8; // UAkAudioEvent*
		constexpr auto _startFillingFuelWithReplenishableResourceAudioEvent = 0xb00; // UAkAudioEvent*
		constexpr auto _stopFillingFuelWithReplenishableResourceAudioEvent = 0xb08; // UAkAudioEvent*
		constexpr auto _fillFuelWithReplenishableResourceOverlapBoxExtent = 0xb10; // FVector
		constexpr auto _fuelDrainingBaseDuration = 0xb1c; // float
		constexpr auto _drainingDurationPerFuelAmountDrained = 0xb20; // float
		constexpr auto _experienceAwardedPerFuelAmountDrained = 0xb24; // float
		constexpr auto _prisonerDrainingFuelMontage = 0xb28; // UAnimMontage*
		constexpr auto _startDrainingFuelAudioEvent = 0xb30; // UAkAudioEvent*
		constexpr auto _stopDrainingFuelAudioEvent = 0xb38; // UAkAudioEvent*
		constexpr auto _engineStallingParametersWhenOutOfFuel = 0xb40; // FVehicleEngineStallingParameters
		constexpr auto _fuelUpdateInterval = 0xb9c; // float
		constexpr auto _batteryResourceType = 0xba8; // UGameResourceType*
		constexpr auto _maxBatteryAmount = 0xbb0; // float
		constexpr auto _batteryDrainWhenStartingEngine = 0xbb4; // float
		constexpr auto _batteryDrainWhenHornIsActive = 0xbb8; // float
		constexpr auto _batteryDrainWhenLightsAreActive = 0xbbc; // float
		constexpr auto _batteryDrainWhenRadioIsTurnedOn = 0xbc0; // float
		constexpr auto _batteryDrainWhenInactive = 0xbc4; // float
		constexpr auto _batteryDynamoChargePerKph = 0xbc8; // FRuntimeFloatCurve
		constexpr auto _batteryDynamoChargePerKphScale = 0xc50; // float
		constexpr auto _batteryAlternatorChargePerRpm = 0xc58; // FRuntimeFloatCurve
		constexpr auto _batteryAlternatorChargePerRpmScale = 0xce0; // float
		constexpr auto _batteryPowerReductionThreshold = 0xce4; // float
		constexpr auto _startEngineDurationPenaltyWhenBatteryReducedInPower = 0xce8; // float
		constexpr auto _batteryChargingBaseDuration = 0xcec; // float
		constexpr auto _chargingDurationPerBatteryAmountCharged = 0xcf0; // float
		constexpr auto _experienceAwardedPerBatteryAmountCharged = 0xcf4; // float
		constexpr auto _prisonerChargingBatteryMontage = 0xcf8; // UAnimMontage*
		constexpr auto _startChargingBatteryAudioEvent = 0xd00; // UAkAudioEvent*
		constexpr auto _stopChargingBatteryAudioEvent = 0xd08; // UAkAudioEvent*
		constexpr auto _batteryUpdateInterval = 0xd14; // float
		constexpr auto _radioComponent = 0xd38; // URadioComponent*
		constexpr auto _cameraStabilizer = 0xd40; // UVehicleCameraStabilizerComponent*
		constexpr auto _hitZones = 0xd48; // UVehicleHitZoneManager*
		constexpr auto _vehiclePartsStateFlags = 0xd50; // uint32_t
		constexpr auto _doorsNum = 0xd54; // int32_t
		constexpr auto _doorWindowsNum = 0xd58; // int32_t
		constexpr auto _isInteriorExposedByDefault = 0xd60; // bool
		constexpr auto _maxVehicleEnterAngle = 0xd64; // float
		constexpr auto _explosionDamage = 0xd68; // float
		constexpr auto _explosionForce = 0xd6c; // float
		constexpr auto _aiTeam = 0xd80; // EAITeam
		constexpr auto _repPackedSimulationState = 0xe00; // uint32_t
		constexpr auto _repHealthFuelBatteryAmount = 0xe04; // uint32_t
		constexpr auto _maxSpeedForBase = 0xe68; // float
		constexpr auto _canEverBeTraded = 0xe6d; // bool
		constexpr auto _tradeableParams = 0xe70; // FTradeableTagParams
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UConZVehicleDriveComponent4W {
		constexpr auto _maxArtificialBrakingForce = 0x3d8; // float
		constexpr auto _speedLimiterMaxSpeed = 0x3dc; // float
		constexpr auto _speedLimiterMaxBrakingForce = 0x3e0; // float
		constexpr auto _speedLimiterInfluenceCoefficient = 0x3e4; // float
		constexpr auto _flatTireWheelConfigurations = 0x3e8; // TArray<FConZVehicleFlatTireWheelConfiguration>
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x28; // bool
	}

	namespace n_UCustomZoneSettingsConfigurationDetails {
		constexpr auto _name = 0x270; // UEditableText*
		constexpr auto _color = 0x278; // UCustomZoneSettingsColorPicker*
		constexpr auto _fallDamageHandlingMethodSelector = 0x280; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _puppetDamageHandlingMethodSelector = 0x288; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _sentryDamageHandlingMethodSelector = 0x290; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _animalDamageHandlingMethodSelector = 0x298; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _vehicleDamageHandlingMethodSelector = 0x2a0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _boxingDamageHandlingMethodSelector = 0x2a8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _meleeWeaponDamageHandlingMethodSelector = 0x2b0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _throwingDamageHandlingMethodSelector = 0x2b8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _projectileDamageHandlingMethodSelector = 0x2c0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _explosiveDamageHandlingMethodSelector = 0x2c8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _trapDamageHandlingMethodSelector = 0x2d0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _damageToBasesHandlingMethodSelector = 0x2d8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _damageToVehiclesHandlingMethodSelector = 0x2e0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _playerLockpickingHandlingMethodSelector = 0x2e8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _worldLockpickingHandlingMethodSelector = 0x2f0; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _baseBuildingHandlingMethodSelector = 0x2f8; // UCustomZoneSettingsHandlingMethodSelector*
		constexpr auto _colors = 0x300; // TArray<FLinearColor>
	}

	namespace n_UDummyCollisionCapsule {
		constexpr auto _attachment = 0x468; // FGameplayTag
	}

	namespace n_UModularTooltipElement_Timer {
		constexpr auto _remainingTimeProgressBar = 0x2e8; // UMetabolismAdvancedProgressBar*
	}

	namespace n_UStatisticsListWidget {
		constexpr auto _subcategoryName = 0x260; // FText
		constexpr auto _subcategoryTextBox = 0x278; // UTextBlock*
		constexpr auto _scrollBox = 0x280; // UScrollBox*
	}

	namespace n_AVDWindDirectionalSourceActor {
		constexpr auto Component = 0x220; // UVDWindDirectionalSourceComponent*
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UPlaceableElementWidget {
		constexpr auto _icon = 0x278; // UImage*
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UUI_ConfirmationBase_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto DestroyAfterClick = 0x280; // bool
		constexpr auto NoClicked = 0x288; // FMulticastInlineDelegate
	}

	namespace n_UCircularMenuSegmentGenericInfo {
		constexpr auto Action = 0x80; // FDelegate
	}

	namespace n_UPrisonerLoadout {
		constexpr auto primary = 0x30; // AItem*
		constexpr auto primaryAttachments = 0x38; // TArray<AItem*>
		constexpr auto secondary = 0x48; // AItem*
		constexpr auto secondaryAttachments = 0x50; // TArray<AItem*>
		constexpr auto tertiary = 0x60; // AItem*
		constexpr auto tertiaryAttachments = 0x68; // TArray<AItem*>
		constexpr auto outfit = 0x78; // TArray<AItem*>
		constexpr auto support = 0x88; // TArray<AItem*>
	}

	namespace n_UUI_LockpickingMinigame_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto ShowFailure = 0x2c0; // UWidgetAnimation*
		constexpr auto BlurWaitingForPlayer = 0x2c8; // UWidgetAnimation*
		constexpr auto ShowSuccess = 0x2d0; // UWidgetAnimation*
		constexpr auto InfoFade = 0x2d8; // UWidgetAnimation*
		constexpr auto _infiniteLockpicks = 0x2e0; // UImage*
		constexpr auto _infiniteScrewdrivers = 0x2e8; // UImage*
		constexpr auto _lockDifficultyHardImage = 0x2f0; // UImage*
		constexpr auto _lockDifficultyMediumImage = 0x2f8; // UImage*
		constexpr auto _lockDifficultyNormalImage = 0x300; // UImage*
		constexpr auto _lockDifficultyWarning = 0x308; // UImage*
		constexpr auto BlackOverlay = 0x310; // UImage*
		constexpr auto FamePointsText = 0x318; // UTextBlock*
		constexpr auto Image_1 = 0x320; // UImage*
		constexpr auto Image_2 = 0x328; // UImage*
		constexpr auto Image_3 = 0x330; // UImage*
		constexpr auto Image_11 = 0x338; // UImage*
		constexpr auto Image_21 = 0x340; // UImage*
		constexpr auto LockpicksCountText = 0x348; // UTextBlock*
		constexpr auto progress = 0x350; // UImage*
		constexpr auto RemainingTimeText = 0x358; // UTextBlock*
		constexpr auto TensionToolCountText = 0x360; // UTextBlock*
		constexpr auto TextBackground = 0x368; // UImage*
		constexpr auto TextBlock_1 = 0x370; // UTextBlock*
	}

	namespace n_UNetReplicationGraphConnection {
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x170; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x188; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x1a0; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x1b0; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UDLSSOverrideSettings {
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_AWorldEventManager {
		constexpr auto EventTypes = 0x220; // TArray<AWorldEvent*>
		constexpr auto TimeBetweenEventsMin = 0x230; // float
		constexpr auto TimeBetweenEventsMax = 0x234; // float
		constexpr auto _events = 0x240; // TArray<AWorldEvent*>
	}

	namespace n_UHUD_C {
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto _compassWidget = 0x380; // UCompassWidget_C*
		constexpr auto _dummyImage = 0x388; // UImage*
		constexpr auto HackImage = 0x390; // UImage*
		constexpr auto Image_1 = 0x398; // UImage*
		constexpr auto KillNotificationsVerticalBox = 0x3a0; // UVerticalBox*
		constexpr auto LevelUpNotification_1 = 0x3a8; // ULevelUpNotification_C*
		constexpr auto MainCanvasPanel = 0x3b0; // UCanvasPanel*
		constexpr auto Messages = 0x3b8; // UMessageContainer_C*
		constexpr auto PrisonerLifeIndicatorsSprite = 0x3c0; // UPrisonerLifeIndicatorsSprite_C*
		constexpr auto ResizableWindowBCUICU = 0x3c8; // UResizableWindow_C*
		constexpr auto ResizableWindowBCUMonitor = 0x3d0; // UResizableWindow_C*
		constexpr auto ResizableWindowBCUPerformance = 0x3d8; // UResizableWindow_C*
		constexpr auto ResizableWindowChat = 0x3e0; // UResizableWindow_C*
		constexpr auto ResizableWindowRDANutrition = 0x3e8; // UResizableWindow_C*
		constexpr auto ResizableWindowSkills = 0x3f0; // UResizableWindow_C*
		constexpr auto TeamInfo = 0x3f8; // UUI_TeamInfo_C*
		constexpr auto UI_CraftingPanel = 0x400; // UUI_CraftingPanel_C*
		constexpr auto UI_InventoryPanelThirdIteration = 0x408; // UUI_InventoryPanelThirdIteration_C*
		constexpr auto UI_MicInputIndicator = 0x410; // UUI_MicInputIndicator_C*
		constexpr auto UI_NotificationPanelWidget = 0x418; // UUI_NotificationPanelWidget_C*
		constexpr auto UI_TabModeSwitcher = 0x420; // UUI_TabModeSwitcher_C*
		constexpr auto UI_TabModeTabsContainer = 0x428; // UUI_TabModeTabsContainer_C*
		constexpr auto Version_SteamID_Players = 0x430; // UTextBlock*
		constexpr auto WarningMessage = 0x438; // UWarning_C*
		constexpr auto WarningsVerticalBox = 0x440; // UVerticalBox*
		constexpr auto Watermark = 0x448; // UTextBlock*
		constexpr auto Threshold = 0x450; // float
		constexpr auto _monitorsVisible = 0x454; // bool
		constexpr auto _isPrisonerLifeComponentValid = 0x455; // bool
		constexpr auto _shouldRefreshBCUBodyMonitorSize = 0x456; // bool
		constexpr auto _shouldRefreshRDAMonitorSize = 0x457; // bool
		constexpr auto _shouldRefreshPerformanceMonitorSize = 0x458; // bool
		constexpr auto _isValidForInitialization = 0x459; // bool
		constexpr auto _isInitialized = 0x45a; // bool
		constexpr auto _lastBCULeftPanelDesiredHeight = 0x45c; // float
		constexpr auto UpdateableNotificationWidget = 0x460; // UUI_NotificationWidget_C*
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_AFishingAttachment {
		constexpr auto _staticMeshWhenAttached = 0x7c0; // UStaticMesh*
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x448; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x458; // int32_t
		constexpr auto SectionBaseY = 0x45c; // int32_t
		constexpr auto CollisionSizeQuads = 0x460; // int32_t
		constexpr auto CollisionScale = 0x464; // float
		constexpr auto SimpleCollisionSizeQuads = 0x468; // int32_t
		constexpr auto CollisionQuadFlags = 0x470; // TArray<char>
		constexpr auto HeightfieldGuid = 0x480; // FGuid
		constexpr auto CachedLocalBox = 0x490; // FBox
		constexpr auto RenderComponent = 0x4ac; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4d8; // TArray<UPhysicalMaterial*>
	}

	namespace n_UTrashNamedCarouselWidget {
		constexpr auto ValueChangedTemp_DONOTUSE = 0x290; // FMulticastInlineDelegate
		constexpr auto _nameBox = 0x2a0; // USizeBox*
		constexpr auto _name = 0x2a8; // UTextBlock*
		constexpr auto _carousel = 0x2b0; // UTrashCarouselWidget*
		constexpr auto _focusBackground = 0x2b8; // USelectionOverlayWidget*
		constexpr auto _label = 0x2c0; // FString
		constexpr auto _mainLabel = 0x2d0; // FText
		constexpr auto _defaultFont = 0x2e8; // FSlateFontInfo
		constexpr auto _possibleValues = 0x398; // TArray<FString>
		constexpr auto _carouselValues = 0x3a8; // TArray<FText>
	}

	namespace n_ULiveLinkTransformAxisSwitchPreProcessor {
		constexpr auto OrientationAxisX = 0x28; // ELiveLinkAxis
		constexpr auto OrientationAxisY = 0x29; // ELiveLinkAxis
		constexpr auto OrientationAxisZ = 0x2a; // ELiveLinkAxis
		constexpr auto TranslationAxisX = 0x2b; // ELiveLinkAxis
		constexpr auto TranslationAxisY = 0x2c; // ELiveLinkAxis
		constexpr auto TranslationAxisZ = 0x2d; // ELiveLinkAxis
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UDeathmatchParticipantStats {
		constexpr auto LongestHeadshot = 0x48; // float
		constexpr auto MeleeKills = 0x4c; // int32_t
		constexpr auto LongestLife = 0x50; // float
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x128; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x130; // bool
		constexpr auto ScrubTailLengthMs = 0x134; // int32_t
		constexpr auto StopAtSectionEnd = 0x138; // bool
		constexpr auto EventName = 0x140; // FString
		constexpr auto MaxSourceDuration = 0x170; // float
		constexpr auto MaxDurationSourceID = 0x178; // FString
	}

	namespace n_UMeshInspectorProperties {
		constexpr auto bWireframe = 0x60; // bool
		constexpr auto bBoundaryEdges = 0x61; // bool
		constexpr auto bBowtieVertices = 0x62; // bool
		constexpr auto bPolygonBorders = 0x63; // bool
		constexpr auto bUVSeams = 0x64; // bool
		constexpr auto bUVBowties = 0x65; // bool
		constexpr auto bNormalSeams = 0x66; // bool
		constexpr auto bNormalVectors = 0x67; // bool
		constexpr auto bTangentVectors = 0x68; // bool
		constexpr auto NormalLength = 0x6c; // float
		constexpr auto TangentLength = 0x70; // float
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UCombineMeshesToolProperties {
		constexpr auto bIsDuplicateMode = 0x60; // bool
		constexpr auto WriteOutputTo = 0x64; // ECombineTargetType
		constexpr auto OutputName = 0x68; // FString
		constexpr auto OutputAsset = 0x78; // FString
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UPrisonerSkillUIData {
		constexpr auto _description = 0x28; // FText
		constexpr auto _skillClass = 0x40; // USkill*
	}

	namespace n_UAdminCommand_AddOrRemoveWidget {
		constexpr auto _widgetClassesByName = 0x80; // TMap<FName, UUserWidget*>
	}

	namespace n_ADoubleSlidingDoorDestructible {
		constexpr auto ClosedPositionComponent0 = 0x410; // USceneComponent*
		constexpr auto ClosedPositionComponent1 = 0x418; // USceneComponent*
		constexpr auto OpenPositionComponent0 = 0x420; // USceneComponent*
		constexpr auto OpenPositionComponent1 = 0x428; // USceneComponent*
	}

	namespace n_UPrisonerBodySymptom_Bleeding {
		constexpr auto _vignetteEffectIntensityVsSeverityRatio = 0xb8; // FRuntimeFloatCurve
		constexpr auto _vignetteEffectPulsationFrequencyVsSeverityRatio = 0x140; // FRuntimeFloatCurve
		constexpr auto _vignetteEffectSeverityRatioMultiplierVsHealthRatio = 0x1c8; // FRuntimeFloatCurve
		constexpr auto _vignetteEffectIntensityInterpSpeed = 0x250; // float
		constexpr auto _vignetteEffectFrequencyInterpSpeed = 0x258; // float
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_ULockpickItemTag {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LockpickingDurability = 0x38; // float
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x4c8; // UPaperFlipbookComponent*
	}

	namespace n_UInputDataAsset {
		constexpr auto ActionMappings = 0x30; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x40; // TArray<FInputAxisKeyMapping>
	}

	namespace n_ULadderMarkersComponent {
		constexpr auto _ladderMarkers = 0x1f8; // TArray<FLadderMarker>
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UBP_M1_OpenInsertClipInsertBullet_C {
		constexpr auto LoadedAmmoCount = 0xa0; // int32_t
	}

	namespace n_UPrisonerThirdPersonViewComponent {
		constexpr auto SubviewBlendingPriorities = 0xd0; // TArray<EPrisonerThirdPersonSubview>
		constexpr auto SubviewBlendOverrides = 0xe0; // TArray<FPrisonerThirdPersonSubviewBlendOverride>
	}

	namespace n_UChoppingToolItemTag {
		constexpr auto ChoppingTimeMultiplier = 0x30; // float
		constexpr auto IngredientsQuantityBonus = 0x34; // int32_t
		constexpr auto CanBeUsedForChoppingHair = 0x38; // bool
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_ATrapItem {
		constexpr auto _buriableTrapItemComponent = 0x7f0; // UBuriableTrapItemComponent*
		constexpr auto _trapType = 0x7f8; // ETrapType
		constexpr auto _autoDestroyTimeWhenArmed = 0x7fc; // float
		constexpr auto _autoDestroyTimeWhenOwnerless = 0x800; // float
		constexpr auto _destroyAfterTriggered = 0x804; // bool
		constexpr auto _destroyDelay = 0x808; // float
		constexpr auto _canEverBeRefueled = 0x80c; // bool
		constexpr auto _refuelItemTag = 0x810; // UTrapRefuelItemTag*
		constexpr auto _triggerForwardVector = 0x818; // FVector
		constexpr auto _ragdollDuration = 0x824; // float
		constexpr auto _isArmedByDefault = 0x828; // bool
		constexpr auto _shouldApplyPhysicalDamage = 0x829; // bool
		constexpr auto _physicalDamageBoundsBox = 0x82c; // FBox
		constexpr auto _actorDestructionDelay = 0x848; // float
		constexpr auto _numRemainingDefuseAttempts = 0x84c; // int32_t
		constexpr auto _numRemainingDefuseAttemptsDependsOnSkill = 0x850; // bool
		constexpr auto _logTrapTriggered = 0x851; // bool
		constexpr auto _hasFixedTrigger = 0x852; // bool
		constexpr auto _minDamageForTrigger = 0x854; // float
		constexpr auto _triggeredByRadialDamage = 0x858; // bool
		constexpr auto _maxTriggerAngle = 0x85c; // float
		constexpr auto _canEverShowTriggerVisuals = 0x860; // bool
		constexpr auto _triggerVisualTransform = 0x870; // FTransform
		constexpr auto _minigameClass = 0x8a0; // AMinigame*
		constexpr auto _minigameToolTag = 0x8a8; // UBaseItemTag*
		constexpr auto _isDestroyed = 0x8b1; // bool
		constexpr auto _isArmed = 0x8d0; // bool
		constexpr auto _wasTriggered = 0x8d1; // bool
		constexpr auto _canBeTriggered = 0x8d2; // bool
		constexpr auto _currentTrigger = 0x8e4; // ETrapTriggerType
		constexpr auto _lastTriggerOwner = 0x8e8; // FDbIntegerId
		constexpr auto _quality = 0x8f0; // float
	}

	namespace n_UABP_Prisoner_Fishing_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x318; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x4a8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x6e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x880; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x920; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0xab0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0xc40; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer = 0xdd0; // FAnimNode_SequencePlayer
	}

	namespace n_UAdminCommand_AddPrisonerBodyEffect {
		constexpr auto _bodyEffectClass = 0x80; // UPrisonerBodyEffect*
	}

	namespace n_UMetabolism_BCU_ICU_Monitor {
		constexpr auto TimeStretchCurveCurve = 0x260; // UCurveFloat*
		constexpr auto _chbSwitchICUState = 0x268; // UCheckBox*
		constexpr auto _icu_Switcher = 0x270; // UWidgetSwitcher*
		constexpr auto _icu_Collapsed = 0x278; // UMetabolism_BCU_ICU_StatsPanel*
		constexpr auto _icu_Expanded = 0x280; // UMetabolism_BCU_ICU_StatsPanel*
	}

	namespace n_UMagicLeapMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x200; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x210; // bool
		constexpr auto MeshType = 0x211; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x218; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x220; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x224; // float
		constexpr auto Planarize = 0x228; // bool
		constexpr auto DisconnectedSectionArea = 0x22c; // float
		constexpr auto RequestNormals = 0x230; // bool
		constexpr auto RequestVertexConfidence = 0x231; // bool
		constexpr auto VertexColorMode = 0x232; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x268; // bool
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x278; // int32_t
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UPreimportedSoundAsset {
		constexpr auto AudioDataArray = 0x28; // TArray<char>
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x668; // FWorldPSCPool
	}

	namespace n_AGameEventManager {
		constexpr auto EventHistoryLimit = 0x220; // int32_t
		constexpr auto _announcedGameEvents = 0x228; // TArray<AGameEventBase*>
		constexpr auto _currentGameEvents = 0x238; // TArray<AGameEventBase*>
		constexpr auto _endedGameEvents = 0x248; // TArray<AGameEventBase*>
		constexpr auto _panelWidget = 0x258; // UGameEventPanelWidget*
	}

	namespace n_URDAMonitor_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto MinimizableWidgetDigestion = 0x300; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetMinerals = 0x308; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetNutritions = 0x310; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetVitamins = 0x318; // UMinimizableWidget_C*
		constexpr auto _color = 0x320; // FLinearColor
		constexpr auto _defaultTitle = 0x330; // FText
		constexpr auto _localSize = 0x348; // FVector2D
		constexpr auto RDASizeChangeEventDispatcher = 0x350; // FMulticastInlineDelegate
		constexpr auto _isAlarmOn = 0x360; // bool
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UProceduralSphericalBoxToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Subdivisions = 0x74; // int32_t
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_ASwitch {
		constexpr auto Mesh = 0x238; // UStaticMeshComponent*
		constexpr auto _interactionText = 0x240; // FText
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UWeaponFirstPersonAnimationsDataAsset {
		constexpr auto UpperBodyAimingHip = 0x98; // FItemFirstPersonUpperBodyAnimationsData
	}

	namespace n_UCircularMenuSegmentIcons {
		constexpr auto UnselectedIcon = 0x30; // UTexture2D*
		constexpr auto SelectedIcon = 0x38; // UTexture2D*
		constexpr auto DisabledIcon = 0x40; // UTexture2D*
		constexpr auto OverlayIcon = 0x48; // UTexture2D*
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UItemGroup {
		constexpr auto Items = 0x30; // TArray<AItem*>
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UConvertToPolygonsToolProperties {
		constexpr auto ConversionMode = 0x60; // EConvertToPolygonsMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bCalculateNormals = 0x68; // bool
		constexpr auto bShowGroupColors = 0x69; // bool
	}

	namespace n_UABP_Prisoner_Airplane_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x318; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x400; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x4a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x588; // FAnimNode_RotationOffsetBlendSpace
	}

	namespace n_UWeaponCrossbowAnimInstance {
		constexpr auto _isCocked = 0x300; // bool
	}

	namespace n_UUI_GameEventInfoWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto DescriptionText = 0x280; // UTextBlock*
		constexpr auto MinPlayersText = 0x288; // UTextBlock*
		constexpr auto NumTeamsText = 0x290; // UTextBlock*
		constexpr auto PrerequisitesText = 0x298; // UTextBlock*
		constexpr auto RespawnText = 0x2a0; // UTextBlock*
		constexpr auto RewardsText = 0x2a8; // UTextBlock*
		constexpr auto WeaponsText = 0x2b0; // UTextBlock*
	}

	namespace n_UUI_TooltipOverviewElement_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ExtendedRichTextBlock_1 = 0x288; // UExtendedRichTextBlock*
		constexpr auto IconImage = 0x290; // UImage*
		constexpr auto IconSizeBox = 0x298; // USizeBox*
		constexpr auto Image_2 = 0x2a0; // UImage*
		constexpr auto Icon = 0x2a8; // UTexture2D*
		constexpr auto MinimumIntegralDigits = 0x2b0; // int32_t
		constexpr auto MaximumIntegralDigits = 0x2b4; // int32_t
		constexpr auto MinimumFractionalDigits = 0x2b8; // int32_t
		constexpr auto MaximumFractionalDigits = 0x2bc; // int32_t
		constexpr auto Text Format = 0x2c0; // FText
		constexpr auto TextStyle = 0x2d8; // FTextBlockStyle
		constexpr auto Color = 0x548; // FSlateColor
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_ACTFLocationMarker {
		constexpr auto CTFParameters = 0x418; // FCTFParameters
		constexpr auto CaptureOffsetA = 0x448; // FVector
		constexpr auto CaptureOffsetB = 0x454; // FVector
		constexpr auto CaptureRadiusA = 0x460; // float
		constexpr auto CaptureRadiusB = 0x464; // float
		constexpr auto FlagOffsetA = 0x470; // FTransform
		constexpr auto FlagOffsetB = 0x4a0; // FTransform
		constexpr auto FlagAPreviewMesh = 0x4d0; // UStaticMeshComponent*
		constexpr auto FlagBPreviewMesh = 0x4d8; // UStaticMeshComponent*
	}

	namespace n_UPolygonSelectionMechanicProperties {
		constexpr auto bSelectFaces = 0x60; // bool
		constexpr auto bSelectEdges = 0x61; // bool
		constexpr auto bSelectVertices = 0x62; // bool
		constexpr auto bPreferProjectedElement = 0x63; // bool
		constexpr auto bSelectDownRay = 0x64; // bool
		constexpr auto bIgnoreOcclusion = 0x65; // bool
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UInventoryItemComponentReplicatedPage {
		constexpr auto Data = 0x28; // FInventoryItemComponentReplicatedPageData
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace {
		constexpr auto _maxMovementPaceVsSeverity = 0x30; // FPrisonerMaxMovementPaceVsSeverity
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULakeCollisionComponent {
		constexpr auto CachedBodySetup = 0x448; // UBodySetup*
		constexpr auto BoxExtent = 0x450; // FVector
	}

	namespace n_UCustomMeshGenerator {
		constexpr auto MeshComp = 0x28; // UStaticMeshComponent*
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UWaterWavesAsset {
		constexpr auto WaterWaves = 0x28; // UWaterWaves*
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_AWeaponAttachmentMagazine {
		constexpr auto AmmunitionTags = 0x7e0; // FGameplayTagContainer
		constexpr auto RequiresFullCapacityOnLoad = 0x800; // bool
		constexpr auto DefaultFillAmmo = 0x808; // AAmmunitionItem*
		constexpr auto InitialAmmo = 0x810; // int32_t
		constexpr auto _ammoData = 0x818; // TArray<FAmmunitionData>
		constexpr auto _ammoOwnerHelper = 0x828; // TArray<FAmmunitionData>
		constexpr auto _capacity = 0x838; // int32_t
		constexpr auto _cartridgeMeshComponents = 0x840; // TArray<UStaticMeshComponent*>
		constexpr auto _skeletalMesh = 0x850; // USkeletalMeshComponent*
		constexpr auto _loadAmmoSequences = 0x858; // TArray<UItemActionSequenceLoadMagazine*>
		constexpr auto _rangedWeaponsSkillClass = 0x868; // URangedWeaponsSkill*
		constexpr auto _loadMagazineActionSpeedMultiplier = 0x870; // float
		constexpr auto _inventoryIconFull = 0x878; // UTexture2D*
	}

	namespace n_AWristwatch {
		constexpr auto SkeletalMesh = 0x220; // USkeletalMeshComponent*
		constexpr auto TextRenderTarget = 0x228; // UTextureRenderTarget2D*
		constexpr auto TimeFont = 0x230; // UFont*
		constexpr auto TextScaleX = 0x238; // float
		constexpr auto TextScaleY = 0x23c; // float
		constexpr auto Time = 0x240; // float
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UInventoryPositionDataSelection {
		constexpr auto position = 0x28; // int32_t
	}

	namespace n_AItemWithText {
		constexpr auto MaxTextCharactersPerRow = 0x7c8; // int32_t
		constexpr auto MaxTextRows = 0x7cc; // int32_t
		constexpr auto _textWidgetComponent = 0x7d0; // UWidgetComponent*
		constexpr auto _text = 0x7d8; // FString
		constexpr auto _owningUserProfileId = 0x7e8; // FDbIntegerId
	}

	namespace n_ASilentAlarmTrapItem {
		constexpr auto _triggerSound = 0x910; // UAkAudioEvent*
		constexpr auto _detonationDelay = 0x918; // float
		constexpr auto _nameableItemComponent = 0x920; // UNameableItemComponent*
	}

	namespace n_UABP_Dick_Placeholder_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool = 0x2f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x398; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik = 0x3c0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_MeshRefPose_2 = 0x550; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x560; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_MeshRefPose = 0x580; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_RigidBody = 0x590; // FAnimNode_RigidBody
		constexpr auto EnabledIK = 0xbe0; // bool
		constexpr auto _targetIK = 0xbe4; // FVector
		constexpr auto IsPenisInHands = 0xbf0; // bool
		constexpr auto _handsIK = 0xbf4; // FVector
		constexpr auto IsInRange = 0xc00; // bool
	}

	namespace n_UInteractionGroupUserWidget {
		constexpr auto _groupText = 0x278; // UTextBlock*
		constexpr auto _groupBorder = 0x280; // UBorder*
	}

	namespace n_UInventoryItemComponentState {
		constexpr auto ContainedElementsIds = 0x40; // TArray<FDbIntegerId>
		constexpr auto ContainedElementsPositions = 0x50; // TArray<FInv2021_InventoryPosition2D>
		constexpr auto ContainedItemsWeight = 0x60; // float
	}

	namespace n_UNiagaraDataInterfacePhysicsAsset {
		constexpr auto DefaultSource = 0x38; // UPhysicsAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x448; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x460; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UVehicleMarkersResponse {
		constexpr auto _payload = 0x28; // UVehicleMarkersData*
	}

	namespace n_USelectionOverlayWidget {
		constexpr auto _solidShown = 0x278; // UImage*
		constexpr auto _gradientShown = 0x280; // UImage*
		constexpr auto _solidSelected = 0x288; // UImage*
		constexpr auto _gradientSelected = 0x290; // UImage*
		constexpr auto _highlightColorRef = 0x298; // FDataTableRowHandle
		constexpr auto _solidWidth = 0x2a8; // float
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_BasicSurvivalMission_C {
		constexpr auto DefaultSceneRoot = 0x468; // USceneComponent*
	}

	namespace n_UDcxVehicleWheelsComponent {
		constexpr auto ChassisMass = 0x140; // float
		constexpr auto InertiaTensorScale = 0x144; // FVector
		constexpr auto WheelConfigurations = 0x150; // TArray<FDcxVehicleWheelConfiguration>
		constexpr auto TireLoadFilter = 0x160; // FDcxVehicleTireLoadFilterData
		constexpr auto bUseAvoidance = 0x170; // bool
		constexpr auto AvoidanceWeight = 0x174; // float
		constexpr auto AvoidanceUID = 0x178; // int32_t
		constexpr auto AvoidanceGroup = 0x17c; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x180; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x184; // FNavAvoidanceMask
		constexpr auto ThresholdLongitudinalSpeed = 0x188; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x18c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x190; // int32_t
		constexpr auto DragCoefficient = 0x194; // float
		constexpr auto DragArea = 0x198; // float
		constexpr auto ThrottleRate = 0x19c; // FDcxVehicleDriveInputRate
		constexpr auto BrakeRate = 0x1a4; // FDcxVehicleDriveInputRate
		constexpr auto HandbrakeRate = 0x1ac; // FDcxVehicleDriveInputRate
		constexpr auto SteerRate = 0x1b4; // FDcxVehicleDriveInputRate
		constexpr auto AvoidanceRadius = 0x1bc; // float
		constexpr auto AvoidanceHeight = 0x1c0; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1c4; // float
		constexpr auto AvoidanceThrottleStep = 0x1c8; // float
		constexpr auto AvoidanceBrakeStep = 0x1cc; // float
		constexpr auto AvoidanceSteerStep = 0x1d0; // float
		constexpr auto bRecreateRequired = 0x1d4; // bool
		constexpr auto RawInput = 0x1d8; // UDcxVehicleWheelsRawInput*
		constexpr auto SmoothAnalogControls = 0x1e0; // TArray<float>
		constexpr auto ReplicatedState = 0x1f0; // FDcxVehicleDriveState
		constexpr auto bWasAvoidanceUpdated = 0x208; // bool
		constexpr auto AvoidanceVelocity = 0x20c; // FVector
		constexpr auto AvoidanceLockVelocity = 0x218; // FVector
		constexpr auto AvoidanceLockTimer = 0x224; // float
	}

	namespace n_UCombineMeshesTool {
		constexpr auto BasicProperties = 0x90; // UCombineMeshesToolProperties*
		constexpr auto HandleSourceProperties = 0x98; // UOnAcceptHandleSourcesProperties*
	}

	namespace n_UGroupEdgeInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UGroupEdgeInsertionTool*
	}

	namespace n_UConZVehicle4WMountSlot {
		constexpr auto _socketName = 0xb8; // FName
		constexpr auto _mountAudioEvent = 0xc0; // UAkAudioEvent*
		constexpr auto _mountPriority = 0xc8; // int32_t
		constexpr auto _entryPoints = 0xd0; // TArray<FMountSlotEntryPoint>
		constexpr auto _unmountAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto _isReachableFromSky = 0xe8; // bool
		constexpr auto _mountingMotionIntensity = 0xe9; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xea; // EMotionIntensity
		constexpr auto _mounteeCenterOfMassOffset = 0xec; // FVector
		constexpr auto _minEffectiveMounteeMass = 0xf8; // float
		constexpr auto _maxEffectiveMounteeMass = 0xfc; // float
		constexpr auto _mountee = 0x100; // UObject*
		constexpr auto _reservee = 0x108; // UObject*
		constexpr auto _canMounteeBeAttackedByMelee = 0x110; // bool
		constexpr auto _interactionZoneMaterials = 0x118; // TArray<UPhysicalMaterial*>
		constexpr auto _vehicleWeaponAimingParameters = 0x128; // UVehicleWeaponAimingParameters*
		constexpr auto _mountSpeedThreshold = 0x130; // float
		constexpr auto _unmountSpeedThreshold = 0x134; // float
		constexpr auto _unmountInputVelocityThreshold = 0x138; // float
		constexpr auto _slotIndex = 0x13c; // int32_t
		constexpr auto _reachableMountSlots = 0x140; // TArray<FReachableMountSlot>
	}

	namespace n_UGlobalItemSpawner {
		constexpr auto SpawnProbabilityMultiplier = 0xa0; // int32_t
		constexpr auto RespawnInterval = 0xa4; // float
		constexpr auto RespawnDistanceSquared = 0xa8; // float
		constexpr auto RespawnBatch = 0xac; // int32_t
		constexpr auto RarityValues = 0xb0; // float [0x6]
		constexpr auto _itemClasses = 0xd0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _spawnerVolumes = 0xf0; // TArray<AItemSpawnerVolume*>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UPrisonerBodyCondition_Drunkenness {
		constexpr auto _severityVsAbsorbedAlcoholRatio = 0xa8; // FRuntimeFloatCurve
		constexpr auto _alcoholAbsorptionAtRecoveryStart = 0x130; // float
		constexpr auto _state = 0x134; // EPrisonerBodyConditionState
		constexpr auto _vomitCheckInterval = 0x144; // float
		constexpr auto _alcoholInStomachRatioVomitThreshold = 0x148; // float
		constexpr auto _vomitProbabilityVsSeverity = 0x150; // FRuntimeFloatCurve
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UPrisonerConsumableDigestionHandler_FoodDisgust {
		constexpr auto _disgustAmountPerNutrientsInStomach = 0x30; // float
	}

	namespace n_URainCollectorComponent {
		constexpr auto _collectorID = 0xb8; // FDbIntegerId
		constexpr auto _fillRate = 0xc4; // float
		constexpr auto _maxAmount = 0xc8; // float
		constexpr auto _collectingStartSound = 0xd8; // UAkAudioEvent*
		constexpr auto _collectingStopSound = 0xe0; // UAkAudioEvent*
	}

	namespace n_AReplicatedEffectsActor {
		constexpr auto _lifeSpan = 0x220; // float
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundBankFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto bEnableMultiCoreRendering = 0x51; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x52; // ECollisionChannel
		constexpr auto WwiseWindowsInstallationPath = 0x58; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x68; // FFilePath
	}

	namespace n_AWeaponAttachmentGhillie {
		constexpr auto EquippedSkeletalMeshComponent = 0x7e0; // USkeletalMeshComponent*
		constexpr auto WeaponToSkeletalMeshMapping = 0x7e8; // TMap<AWeapon*, FMeshMaterialPair>
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x6a0; // char : 1
		constexpr auto FractureEffects = 0x6a8; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6b8; // bool
		constexpr auto LargeChunkThreshold = 0x6bc; // float
		constexpr auto OnComponentFracture = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_ULiveLinkComponentSettings {
		constexpr auto DefaultControllerForRole = 0x28; // TMap<ULiveLinkRole*, ULiveLinkControllerBase*>
	}

	namespace n_APrisoner_Right_Arm_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UVoxelMorphologyMeshesToolProperties {
		constexpr auto Operation = 0x60; // EMorphologyOperation
		constexpr auto Distance = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_UAnimNotifyState_Fade {
		constexpr auto _fadeOutRatio = 0x30; // float
		constexpr auto _fadeInRatio = 0x34; // float
		constexpr auto _forAction = 0x38; // AnimNotifyState_FadeForAction
	}

	namespace n_UAnimNotifyState_Melee {
		constexpr auto _attackCapsuleAttachment = 0x30; // FGameplayTag
		constexpr auto _damageMultiplier = 0x38; // float
		constexpr auto _hitSeverity = 0x3c; // EHitSeverity
		constexpr auto _stopOnHit = 0x3d; // bool
		constexpr auto _attackType = 0x3e; // EAttackType
		constexpr auto _hitDetectionMarkersRootBoneParentName = 0x40; // FName
		constexpr auto _hitDetectionMarkers = 0x48; // TArray<FMeleeHitDetectionMarker>
		constexpr auto _hitDetectionSamplingRate = 0x58; // int32_t
	}

	namespace n_UCarouselWithLabel {
		constexpr auto _name = 0x1df0; // UTextBlock*
		constexpr auto _focusBackgroundImage = 0x1df8; // UImage*
		constexpr auto _label = 0x1e00; // FText
		constexpr auto _defaultLabelFont = 0x1e18; // FSlateFontInfo
		constexpr auto _selectedAndFocusedCWLStyle = 0x1e70; // FCarouselWithLabelStyle
		constexpr auto _selectedAndUnfocusedCWLStyle = 0x1f78; // FCarouselWithLabelStyle
		constexpr auto _unselectedCWLStyle = 0x2080; // FCarouselWithLabelStyle
		constexpr auto _highlightedCWLStyle = 0x2188; // FCarouselWithLabelStyle
		constexpr auto _disabledCWLStyle = 0x2290; // FCarouselWithLabelStyle
	}

	namespace n_ABP_WeaponBullet_DildoBolt_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UCircularMenuWidget {
		constexpr auto _layerData = 0x278; // TArray<FCircularLayerData>
		constexpr auto _centerSize = 0x288; // float
		constexpr auto _constrainMouseToWidget = 0x28c; // bool
		constexpr auto _unboundOuterRadiusOnFirstInteractionLayer = 0x28d; // bool
		constexpr auto _segmentsByLayer = 0x290; // TArray<FCircularSegmentContainer>
		constexpr auto _mainOverlay = 0x2a0; // UOverlay*
		constexpr auto _actionText = 0x2a8; // UTextBlock*
	}

	namespace n_UABP_BlackHawk_Crossbow_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x3c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x448; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x490; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_6 = 0x5e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x630; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x678; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x6c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x770; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x798; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x7c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x7e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x888; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x938; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x980; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x9c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xa10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xa38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xa60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone = 0xa88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xb90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xbb0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_RigidBody = 0xbd0; // FAnimNode_RigidBody
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1220; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1240; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool = 0x1260; // FAnimNode_BlendListByBool
		constexpr auto IronSightsHideAlpha = 0x1300; // float
	}

	namespace n_UAdminCommandArgumentCompletion_Enum {
		constexpr auto _enum = 0x30; // FName
		constexpr auto _excludeNoneEnumerator = 0x38; // bool
		constexpr auto _excludeCountEnumerator = 0x39; // bool
		constexpr auto _excludeAutoGeneratedEnumerator = 0x3a; // bool
		constexpr auto _additionalEnumeratorsToExclude = 0x40; // TSet<FName>
	}

	namespace n_UChestItemState {
		constexpr auto OwningUserProfileId = 0xf8; // FDbIntegerId
		constexpr auto ContainedItemsWeight = 0x100; // float
		constexpr auto ActiveAccessLevel = 0x104; // EAccessLevel
		constexpr auto Locks = 0x108; // TArray<FDbIntegerId>
	}

	namespace n_ABP_ChristmasGhost_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto Ghost = 0x308; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x310; // USceneComponent*
		constexpr auto PossibleMeshes = 0x318; // TArray<USkeletalMesh*>
		constexpr auto MontageToPlay = 0x328; // UAnimMontage*
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_AFishingAttachmentReel {
		constexpr auto SkeletalMesh = 0x7e0; // USkeletalMeshComponent*
		constexpr auto ReelHandIK = 0x7e8; // FName
		constexpr auto _reelHandleAcceleration = 0x7f0; // float
		constexpr auto _fastReelHandleAcceleration = 0x7f4; // float
		constexpr auto _reelFriction = 0x7f8; // float
		constexpr auto _fastReelFriction = 0x7fc; // float
		constexpr auto _reelVelocityThreshold = 0x800; // float
		constexpr auto _reelVelocityLimit = 0x804; // float
		constexpr auto _reelAccelerationModifier = 0x808; // float
		constexpr auto _leftHandOffset = 0x810; // FTransform
		constexpr auto _lockAfterLongCastAnimMontage = 0x840; // UAnimMontage*
		constexpr auto _lockAfterShortCastAnimMontage = 0x848; // UAnimMontage*
		constexpr auto _reelCastAnimMontage = 0x850; // UAnimMontage*
		constexpr auto _reelingAnimSequence = 0x858; // UAnimSequenceBase*
		constexpr auto _reelingStartAudioEvent = 0x860; // UAkAudioEvent*
		constexpr auto _reelingEndAudioEvent = 0x868; // UAkAudioEvent*
		constexpr auto _leftHandIKLocationCache = 0x87c; // FVector
	}

	namespace n_UInteractionComponent {
		constexpr auto ExamineChanceMultiplier = 0xb8; // float
		constexpr auto ExamineActionDuration = 0xbc; // float
		constexpr auto ExamineReplicationDelay = 0xc0; // float
		constexpr auto PickupItemActionDuration = 0xc4; // float
		constexpr auto PickupItemReplicationDelay = 0xc8; // float
		constexpr auto StoreItemActionDuration = 0xcc; // float
		constexpr auto TickFrequency = 0xd0; // float
		constexpr auto MinLandscapeInteractionDistanceSquared = 0xd4; // float
		constexpr auto SavedGroundSearchLocationsCount = 0xd8; // int32_t
		constexpr auto GhostActorToSpawnAfterExamine = 0xe0; // AActor*
		constexpr auto InitialMinNumEmptyContainersToSearchToSpawnGhostActor = 0xf0; // int32_t
		constexpr auto InitialMaxNumEmptyContainersToSearchToSpawnGhostActor = 0xf4; // int32_t
		constexpr auto MinNumEmptyContainersToSearchToSpawnGhostActor = 0xf8; // int32_t
		constexpr auto MaxNumEmptyContainersToSearchToSpawnGhostActor = 0xfc; // int32_t
		constexpr auto ShouldSpawnGhostActorRelativeToExaminer = 0x100; // bool
		constexpr auto GhostActorSpawnDistanceToExaminer = 0x104; // float
		constexpr auto ExamineGhostSpawnEndTime = 0x108; // int64_t
		constexpr auto _actions = 0x128; // TArray<UInteractionAction*>
		constexpr auto _replicatedExamineSpawnedItems = 0x220; // FSpawnedItems
		constexpr auto _replicatedPickupSpawnedItem = 0x238; // FSpawnedItems
		constexpr auto _drinkAllowedThreshold = 0x27c; // float
		constexpr auto _reexamineFrequency = 0x280; // float
	}

	namespace n_UBaseInteractionComponent {
		constexpr auto _capsuleRadius = 0x208; // float
		constexpr auto _capsuleHalfHeight = 0x20c; // float
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x28; // UAkAudioBank*
	}

	namespace n_AWeatherController2 {
		constexpr auto _maxHeightAboveSeaLevel = 0x250; // float
		constexpr auto _sun = 0x258; // UDirectionalLightComponent*
		constexpr auto _timeOfDay = 0x260; // float
		constexpr auto _canStartTimeOfDayBeOverridenByConfig = 0x264; // bool
		constexpr auto _timeOfDaySpeed = 0x268; // float
		constexpr auto _canTimeOfDaySpeedBeOverridenByConfig = 0x26c; // bool
		constexpr auto _sunIntensity = 0x270; // float
		constexpr auto _sunFullEclipseMult = 0x274; // float
		constexpr auto _sunAzimuthDegrees = 0x278; // float
		constexpr auto _sunriseTime = 0x27c; // float
		constexpr auto _canSunriseTimeBeOverridenByConfig = 0x280; // bool
		constexpr auto _sunsetTime = 0x284; // float
		constexpr auto _canSunsetTimeBeOverridenByConfig = 0x288; // bool
		constexpr auto _dawnDuskTresholdAngle = 0x28c; // float
		constexpr auto _moon = 0x298; // UDirectionalLightComponent*
		constexpr auto _moonRotation = 0x2a0; // float
		constexpr auto _moonIntensityMult = 0x2a4; // float
		constexpr auto _moonLightTint = 0x2a8; // FLinearColor
		constexpr auto _moonStarsMaterial = 0x2b8; // UMaterialInterface*
		constexpr auto _moonStarsMaterialDynamic = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto _starsSphere = 0x2c8; // UStaticMeshComponent*
		constexpr auto _starsSphereDistance = 0x2d0; // float
		constexpr auto _starsSphereRotation = 0x2d4; // FRotator
		constexpr auto _nightLight = 0x2e0; // UDirectionalLightComponent*
		constexpr auto _nightLightIntensity = 0x2e8; // float
		constexpr auto _nightLightIntensityRange = 0x2ec; // FFloatInterval
		constexpr auto _nightLightColor = 0x2f4; // FLinearColor
		constexpr auto _skyAmbientReflEnv = 0x308; // USkyLightComponent*
		constexpr auto _skyAtmosphere = 0x310; // USkyAtmosphereComponent*
		constexpr auto _skyAmbientIntensity = 0x318; // float
		constexpr auto _skyAmbientOcclusionTint = 0x320; // FRuntimeFloatCurve
		constexpr auto _volumetricClouds = 0x3a8; // UVolumetricCloudComponent*
		constexpr auto _volumetricCloudsMaterialLQ = 0x3b0; // UMaterialInterface*
		constexpr auto _volumetricCloudsMaterialHQ = 0x3b8; // UMaterialInterface*
		constexpr auto _volumetricCloudsMaterialDynamic = 0x3c0; // UMaterialInstanceDynamic*
		constexpr auto _cirrostratusCoverage = 0x3c8; // float
		constexpr auto _cirrostratusSunlightThroughput = 0x3cc; // float
		constexpr auto _cirrostratusCoverageMaterialParamRemap = 0x3d0; // FRuntimeFloatCurve
		constexpr auto _cumulonimbusCoverage = 0x458; // float
		constexpr auto _cumulonimbusSunlightThroughput = 0x45c; // float
		constexpr auto _cumulonimbusCoverageMaterialParamRemap = 0x460; // FRuntimeFloatCurve
		constexpr auto _nimbostratusCoverage = 0x4e8; // float
		constexpr auto _nimbostratusSunlightThroughput = 0x4ec; // float
		constexpr auto _nimbostratusCoverageMaterialParamRemap = 0x4f0; // FRuntimeFloatCurve
		constexpr auto _cloudsBaseSpeed = 0x578; // float
		constexpr auto _cloudsWindSpeed = 0x57c; // float
		constexpr auto _lightningParticleSystem = 0x588; // UParticleSystem*
		constexpr auto _lightningParticleLifetime = 0x590; // FFloatInterval
		constexpr auto _thunderSoundEmitter = 0x598; // UAkAudioEvent*
		constexpr auto _thunderSoundDuration = 0x5a0; // FFloatInterval
		constexpr auto _lightningRate = 0x5a8; // float
		constexpr auto _lightningMaxDistance = 0x5ac; // float
		constexpr auto _lightningAltitudeOffsetFromPlayer = 0x5b0; // float
		constexpr auto _lightningAltitudeBandThickness = 0x5b4; // float
		constexpr auto _precipitationEmittersRoot = 0x5d8; // USceneComponent*
		constexpr auto _precipitationMaskCapture = 0x5e0; // UChildActorComponent*
		constexpr auto _precipitationMaskUpdateInterval = 0x5e8; // float
		constexpr auto _precipitationEmittersUpOffset = 0x5f0; // float
		constexpr auto _precipitationEmittersForwardOffset = 0x5f4; // float
		constexpr auto _precipitationEmittersVelocityOffset = 0x5f8; // float
		constexpr auto _rainParticleSystems = 0x600; // TArray<UParticleSystem*>
		constexpr auto _rainEmitters = 0x610; // TArray<UParticleSystemComponent*>
		constexpr auto _rainIntensity = 0x620; // float
		constexpr auto _snowParticleSystems = 0x628; // TArray<UParticleSystem*>
		constexpr auto _snowEmitters = 0x638; // TArray<UParticleSystemComponent*>
		constexpr auto _snowIntensity = 0x648; // float
		constexpr auto _mainMPC = 0x650; // UMaterialParameterCollection*
		constexpr auto _foliageMPC = 0x658; // UMaterialParameterCollection*
		constexpr auto _foliageMPCSubsurfaceColorIntensityCurve = 0x660; // FRuntimeFloatCurve
		constexpr auto _wetnessMPC = 0x6e8; // UMaterialParameterCollection*
		constexpr auto _wetnessMPCEmissiveIntensityCurve = 0x6f0; // FRuntimeFloatCurve
		constexpr auto _particlesMPC = 0x778; // UMaterialParameterCollection*
		constexpr auto _particlesMPCGlobalParticlesColorCurve = 0x780; // FRuntimeCurveLinearColor
		constexpr auto _baseAirTemperature = 0x988; // float
		constexpr auto _baseAirTemperatureRange = 0x98c; // FFloatInterval
		constexpr auto _airTemperatureHeightModifier = 0x994; // float
		constexpr auto _waterTemperature = 0x998; // float
		constexpr auto _waterTemperatureRange = 0x99c; // FFloatInterval
		constexpr auto _waterTemperatureInterpSpeed = 0x9a4; // float
		constexpr auto _waterTemperatureHeightModifier = 0x9a8; // float
		constexpr auto _temperatureDifferenceBetweenShadeAndOnSun = 0x9ac; // float
		constexpr auto _airRelativeHumidity = 0x9b0; // float
		constexpr auto _windSourceComponent = 0x9b8; // UWindDirectionalSourceComponent*
		constexpr auto _leavesComponent = 0x9c0; // UParticleSystemComponent*
		constexpr auto _windAzimuth = 0x9c8; // float
		constexpr auto _windIntensity = 0x9cc; // float
		constexpr auto _windAzimuthForWaves = 0x9d0; // float
		constexpr auto _windIntensityForWaves = 0x9d4; // float
		constexpr auto _maxWindSpeedKph = 0x9d8; // float
		constexpr auto _heightFog = 0x9e0; // UExponentialHeightFogComponent*
		constexpr auto _fogDensity = 0x9e8; // float
		constexpr auto _fogFalloff = 0x9ec; // float
		constexpr auto _fogHeightOffset = 0x9f0; // float
		constexpr auto _fogBaseInscatteringColor = 0x9f4; // FLinearColor
		constexpr auto _fogBaseDirectionalInscatteringColor = 0xa04; // FLinearColor
		constexpr auto _postProcessVolume = 0xa18; // UChildActorComponent*
		constexpr auto _exposureMinBrightness = 0xa20; // FRuntimeFloatCurve
		constexpr auto _exposureMaxBrightness = 0xaa8; // FRuntimeFloatCurve
		constexpr auto _exposureSpeedUp = 0xb30; // FRuntimeFloatCurve
		constexpr auto _exposureSpeedDown = 0xbb8; // FRuntimeFloatCurve
		constexpr auto _windAzimuthRandom = 0xc40; // FMultistageRandomRoll
		constexpr auto _windIntensityRandom = 0xca8; // FMultistageRandomRoll
		constexpr auto _cirrostratusCoverageRandom = 0xd10; // FMultistageRandomRoll
		constexpr auto _cumulonimbusCoverageRandom = 0xd78; // FMultistageRandomRoll
		constexpr auto _nimbostratusCoverageRandom = 0xde0; // FMultistageRandomRoll
		constexpr auto _baseAirTemperatureVsTimeOfDay = 0xe48; // FRuntimeFloatCurve
		constexpr auto _fogDensityVsSunIntensity = 0xed0; // FRuntimeFloatCurve
		constexpr auto _fogDensityFromCumulonimbus = 0xf58; // float
		constexpr auto _fogRainRatioFromCumulonimbus = 0xf5c; // float
		constexpr auto _fogDensityWhenRaining = 0xf64; // float
		constexpr auto _fogDensityInterpSpeed = 0xf68; // float
		constexpr auto _autoSaveInterval = 0xf6c; // float
		constexpr auto _shouldSerializeState = 0xf74; // bool
		constexpr auto _sendReplicatedStateSnapshotInterval = 0xf78; // float
		constexpr auto _nighttimeDarkness = 0xf9c; // float
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UMissionDataGroup {
		constexpr auto MissionRootPath = 0x30; // FString
		constexpr auto MissionStartedSound = 0x40; // UAkAudioEvent*
		constexpr auto MissionCompletedSound = 0x48; // UAkAudioEvent*
		constexpr auto MissionFailedSound = 0x50; // UAkAudioEvent*
		constexpr auto ObjectiveStartedSound = 0x58; // UAkAudioEvent*
		constexpr auto ObjectiveCompletedSound = 0x60; // UAkAudioEvent*
		constexpr auto ObjectiveFailedSound = 0x68; // UAkAudioEvent*
		constexpr auto MainStoryMissions = 0x70; // TMap<AMission*, FMissionData>
		constexpr auto SideStoryMissions = 0xc0; // TMap<AMission*, FMissionData>
		constexpr auto TutorialMissions = 0x110; // TMap<AMission*, FMissionData>
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UBP_M1_OpenEjectBulletInsertClipInsertBulletLoop_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UContainerDisplay {
		constexpr auto _containerImage = 0x2c8; // UImage*
		constexpr auto _containerImage2 = 0x2d0; // UImage*
		constexpr auto _sizeBox = 0x2d8; // USizeBox*
		constexpr auto _name = 0x2e0; // UTextBlock*
		constexpr auto _name2 = 0x2e8; // UTextBlock*
		constexpr auto _durability = 0x2f0; // UTextBlock*
		constexpr auto _durability2 = 0x2f8; // UTextBlock*
		constexpr auto _durabilityProgressBar = 0x300; // UProgressBar*
		constexpr auto _durabilityProgressBar2 = 0x308; // UProgressBar*
		constexpr auto _selectionSwitcher = 0x310; // UWidgetSwitcher*
		constexpr auto _width = 0x318; // float
		constexpr auto _height = 0x31c; // float
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UUI_WaypointScreenWidget_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto WaypointPanel = 0x298; // UCanvasPanel*
	}

	namespace n_UWaypointWidget {
		constexpr auto IconTexture = 0x278; // UTexture2D*
		constexpr auto AccentTexture = 0x280; // UTexture2D*
		constexpr auto AccentColor = 0x288; // FLinearColor
		constexpr auto BarValue = 0x298; // float
		constexpr auto BarColor = 0x29c; // FLinearColor
		constexpr auto HeightOffset = 0x2ac; // float
		constexpr auto Emphasized = 0x2b0; // bool
		constexpr auto EmphasisColor = 0x2b4; // FLinearColor
		constexpr auto LabelText = 0x2c8; // FString
	}

	namespace n_UCustomZoneRegistry {
		constexpr auto _mapMaterial = 0xc0; // UMaterialInterface*
		constexpr auto _mapTexture = 0xc8; // UCanvasRenderTarget2D*
	}

	namespace n_USedentaryNPCAnimInstance {
		constexpr auto _headTurningRotator = 0x2c0; // FRotator
	}

	namespace n_UTrapItemState {
		constexpr auto IsArmed = 0xf8; // bool
		constexpr auto CanBeTriggered = 0xf9; // bool
		constexpr auto CurrentTrigger = 0xfa; // ETrapTriggerType
		constexpr auto LastTriggerOwner = 0x100; // FDbIntegerId
		constexpr auto LastArmerId = 0x108; // FDbIntegerId
		constexpr auto Quality = 0x110; // float
		constexpr auto WasTriggered = 0x114; // bool
		constexpr auto NumRemainingDefuseAttempts = 0x118; // int32_t
		constexpr auto OwnerlessElapsedTime = 0x11c; // float
		constexpr auto PendingDestroy = 0x120; // bool
		constexpr auto Trigger = 0x128; // UTriggerComponentState*
		constexpr auto TriggerData = 0x130; // TArray<char>
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UAnimal2AnimInstance {
		constexpr auto InverseLocomotionBias = 0x2b8; // UCurveFloat*
		constexpr auto MaximumLeaningAngle = 0x2c0; // float
		constexpr auto IdleStanceIndex = 0x2c4; // int32_t
		constexpr auto stance = 0x2c8; // EAnimalStance
		constexpr auto SlopeRootTiltRotation = 0x2cc; // FRotator
		constexpr auto ABPSpeed = 0x2d8; // float
		constexpr auto ABPTurn = 0x2dc; // float
		constexpr auto MoveVelocity = 0x2e0; // float
	}

	namespace n_UUI_FishingContainer_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_ABP_WeaponBullet_ExplosiveArrow_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_ACustomMapBorder {
		constexpr auto Mesh = 0x220; // UStaticMeshComponent*
		constexpr auto TournamentMesh = 0x228; // UStaticMeshComponent*
		constexpr auto Material = 0x230; // UMaterialInstanceDynamic*
		constexpr auto _minCustomMapSize = 0x238; // FVector2D
		constexpr auto _isInTournamentMode = 0x240; // bool
		constexpr auto _tournamentModeCompletionPercentage = 0x244; // float
		constexpr auto _nearingCompletionPercentage = 0x248; // float
		constexpr auto _minTournamentMapSize = 0x254; // FVector2D
		constexpr auto _tournamentFinalBorderDimensions = 0x25c; // FBox2D
		constexpr auto _active = 0x270; // bool
		constexpr auto _customMapDimensions = 0x274; // FBox2D
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UAddPatchToolProperties {
		constexpr auto Width = 0x60; // float
		constexpr auto Rotation = 0x64; // float
		constexpr auto Subdivisions = 0x68; // int32_t
		constexpr auto Shift = 0x6c; // float
	}

	namespace n_UFlattenBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UGrapplingWidget {
		constexpr auto _gameProgress = 0x260; // UImage*
		constexpr auto _grapplingValue = 0x268; // UImage*
		constexpr auto _instructionText = 0x270; // UTextBlock*
	}

	namespace n_UGameResourceConsumptionData {
		constexpr auto ConsumptionMethod = 0x28; // EGameResourceConsumptionMethod
		constexpr auto ConsumptionDuration = 0x2c; // FGameplayTag
		constexpr auto DigestionDuration = 0x34; // FGameplayTag
		constexpr auto Density = 0x3c; // float
		constexpr auto TotalCarbohydrate = 0x40; // float
		constexpr auto Fiber = 0x44; // float
		constexpr auto Starch = 0x48; // float
		constexpr auto Sugars = 0x4c; // float
		constexpr auto TotalFat = 0x50; // float
		constexpr auto SaturatedFat = 0x54; // float
		constexpr auto Protein = 0x58; // float
		constexpr auto VitaminA = 0x5c; // float
		constexpr auto VitaminC = 0x60; // float
		constexpr auto VitaminD = 0x64; // float
		constexpr auto VitaminE = 0x68; // float
		constexpr auto VitaminK = 0x6c; // float
		constexpr auto VitaminB1 = 0x70; // float
		constexpr auto VitaminB2 = 0x74; // float
		constexpr auto VitaminB3 = 0x78; // float
		constexpr auto VitaminB6 = 0x7c; // float
		constexpr auto VitaminB9 = 0x80; // float
		constexpr auto VitaminB12 = 0x84; // float
		constexpr auto VitaminB5 = 0x88; // float
		constexpr auto VitaminB4 = 0x8c; // float
		constexpr auto Calcium = 0x90; // float
		constexpr auto Iron = 0x94; // float
		constexpr auto Magnesium = 0x98; // float
		constexpr auto Phosphorus = 0x9c; // float
		constexpr auto Potassium = 0xa0; // float
		constexpr auto Sodium = 0xa4; // float
		constexpr auto Zinc = 0xa8; // float
		constexpr auto Copper = 0xac; // float
		constexpr auto Manganese = 0xb0; // float
		constexpr auto Selenium = 0xb4; // float
		constexpr auto Alcohol = 0xb8; // float
		constexpr auto Water = 0xbc; // float
		constexpr auto DisgustAmountPerGramOfRawFood = 0xc0; // float
		constexpr auto DigestionHandlers = 0xc8; // TArray<UConsumableDigestionHandler*>
	}

	namespace n_UMetabolismSegmentedProgressBar {
		constexpr auto ColorSchemes = 0x260; // TArray<FMetabolismSPBColorScheme>
		constexpr auto BrushOverride = 0x270; // FSlateBrush
		constexpr auto _progressBarImage = 0x2f8; // UImage*
	}

	namespace n_ABP_Survival_Storage_PlaceChestBlueprint_Objectives_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_URestorableMeshInstancesManager {
		constexpr auto _actorsProcessingDelayOnStreamingLevelLoad = 0x1c0; // float
		constexpr auto _processingBudgetPerTick = 0x1c4; // float
		constexpr auto _generateMeshInstancesToRestoreUpdateInterval = 0x330; // float
		constexpr auto _minDistanceToPlayerPawnToRestoreMeshInstance = 0x348; // float
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UUI_Lockpicking_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x2c0; // UImage*
		constexpr auto Image_2 = 0x2c8; // UImage*
		constexpr auto Image_3 = 0x2d0; // UImage*
		constexpr auto Image_11 = 0x2d8; // UImage*
		constexpr auto Image_21 = 0x2e0; // UImage*
		constexpr auto LockpicksCountText = 0x2e8; // UTextBlock*
		constexpr auto progress = 0x2f0; // UImage*
		constexpr auto RemainingTimeText = 0x2f8; // UTextBlock*
		constexpr auto TensionToolCountText = 0x300; // UTextBlock*
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UMetabolism {
		constexpr auto _state = 0x100; // FMetabolismState
	}

	namespace n_AZombieKamikazeDummyTrap {
		constexpr auto _owningComponent = 0x910; // TWeakObjectPtr<UZombieKamikazeComponent>
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UABP_Prisoner_C {
		constexpr auto UberGraphFrame = 0x1140; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_UseCachedPose_201 = 0x1148; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_200 = 0x1170; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_28 = 0x1198; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_237 = 0x11e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_236 = 0x12a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_199 = 0x1360; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SpringBone_3 = 0x1388; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_136 = 0x14b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SpringBone_2 = 0x14d0; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_SpringBone = 0x15f8; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_SaveCachedPose_53 = 0x1720; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_236 = 0x1878; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_198 = 0x1960; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_408 = 0x1988; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_197 = 0x1a28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_760 = 0x1a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_52 = 0x1ad0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_173 = 0x1c28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_136 = 0x1d30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_135 = 0x1d50; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_172 = 0x1d70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LinkedAnimGraph_14 = 0x1e78; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0x1f18; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_235 = 0x1fe8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_27 = 0x20a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_51 = 0x20f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_50 = 0x2248; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_225 = 0x23a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_196 = 0x2468; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_49 = 0x2490; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_110 = 0x25e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_48 = 0x2698; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_407 = 0x27f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_171 = 0x2890; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_406 = 0x2998; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_195 = 0x2a38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_47 = 0x2a60; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_109 = 0x2bb8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x2c68; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LocalToComponentSpace_135 = 0x2d30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_194 = 0x2d50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_405 = 0x2d78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_193 = 0x2e18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_192 = 0x2e40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_191 = 0x2e68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_190 = 0x2e90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_235 = 0x2eb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_404 = 0x2fa0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_46 = 0x3040; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_108 = 0x3198; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_234 = 0x3248; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_233 = 0x3330; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_189 = 0x3418; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x3440; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool_403 = 0x3510; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_107 = 0x35b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_27 = 0x3660; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_26 = 0x37f0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_402 = 0x3980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_234 = 0x3a20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_188 = 0x3ae0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_45 = 0x3b08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_759 = 0x3c60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_401 = 0x3ce0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_6 = 0x3d80; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_758 = 0x3d98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_400 = 0x3e18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_5 = 0x3eb8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_757 = 0x3ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_399 = 0x3f50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_4 = 0x3ff0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_BlendListByEnum_106 = 0x4008; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TransitionResult_255 = 0x40b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_254 = 0x40e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_253 = 0x4108; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_252 = 0x4130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_251 = 0x4158; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_250 = 0x4180; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_249 = 0x41a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_248 = 0x41d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_247 = 0x41f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_246 = 0x4220; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_245 = 0x4248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_244 = 0x4270; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_243 = 0x4298; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_242 = 0x42c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_241 = 0x42e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_240 = 0x4310; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_239 = 0x4338; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_238 = 0x4360; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_237 = 0x4388; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_236 = 0x43b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_235 = 0x43d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_234 = 0x4400; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_233 = 0x4428; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_232 = 0x4450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_231 = 0x4478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_230 = 0x44a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_229 = 0x44c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_228 = 0x44f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_227 = 0x4518; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_226 = 0x4540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_225 = 0x4568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_224 = 0x4590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_223 = 0x45b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_222 = 0x45e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_221 = 0x4608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_220 = 0x4630; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_219 = 0x4658; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_218 = 0x4680; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_217 = 0x46a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_216 = 0x46d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_215 = 0x46f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_214 = 0x4720; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_213 = 0x4748; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_212 = 0x4770; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_211 = 0x4798; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_210 = 0x47c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_209 = 0x47e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_208 = 0x4810; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_207 = 0x4838; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_206 = 0x4860; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_205 = 0x4888; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_204 = 0x48b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_203 = 0x48d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_202 = 0x4900; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_201 = 0x4928; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_200 = 0x4950; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_199 = 0x4978; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_198 = 0x49a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_197 = 0x49c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_196 = 0x49f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_195 = 0x4a18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_194 = 0x4a40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_193 = 0x4a68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_192 = 0x4a90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_191 = 0x4ab8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_190 = 0x4ae0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_189 = 0x4b08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_188 = 0x4b30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_187 = 0x4b58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_186 = 0x4b80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_185 = 0x4ba8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_184 = 0x4bd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_183 = 0x4bf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_182 = 0x4c20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_181 = 0x4c48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_180 = 0x4c70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_179 = 0x4c98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_178 = 0x4cc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_177 = 0x4ce8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_176 = 0x4d10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_175 = 0x4d38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_174 = 0x4d60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_173 = 0x4d88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_172 = 0x4db0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_171 = 0x4dd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_170 = 0x4e00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_169 = 0x4e28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_168 = 0x4e50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_167 = 0x4e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_166 = 0x4ea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_165 = 0x4ec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_164 = 0x4ef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_163 = 0x4f18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_162 = 0x4f40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_161 = 0x4f68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_160 = 0x4f90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_159 = 0x4fb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_158 = 0x4fe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_157 = 0x5008; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_156 = 0x5030; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_155 = 0x5058; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_154 = 0x5080; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_153 = 0x50a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_152 = 0x50d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_151 = 0x50f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_150 = 0x5120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_149 = 0x5148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_148 = 0x5170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_147 = 0x5198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_146 = 0x51c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_145 = 0x51e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_144 = 0x5210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_143 = 0x5238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_142 = 0x5260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_141 = 0x5288; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_140 = 0x52b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_139 = 0x52d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_138 = 0x5300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_137 = 0x5328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_136 = 0x5350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_135 = 0x5378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_134 = 0x53a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_133 = 0x53c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_132 = 0x53f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_131 = 0x5418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_130 = 0x5440; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_129 = 0x5468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_128 = 0x5490; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_127 = 0x54b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_126 = 0x54e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_125 = 0x5508; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_124 = 0x5530; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_123 = 0x5558; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_122 = 0x5580; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_121 = 0x55a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_120 = 0x55d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_119 = 0x55f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_118 = 0x5620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0x5648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0x5670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0x5698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0x56c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0x56e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0x5710; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0x5738; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0x5760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0x5788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0x57b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0x57d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0x5800; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0x5828; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x5850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x5878; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x58a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x58c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x58f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x5918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x5940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x5968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x5990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x59b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x59e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x5a08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x5a30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x5a58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x5a80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x5aa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x5ad0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x5af8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x5b20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x5b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x5b70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x5b98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x5bc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x5be8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x5c10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x5c38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x5c60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x5c88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x5cb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x5cd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x5d00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x5d28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x5d50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x5d78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x5da0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x5dc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x5df0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x5e18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x5e40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x5e68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x5e90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x5eb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x5ee0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x5f08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x5f30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x5f58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x5f80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x5fa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x5fd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x5ff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x6020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LinkedAnimGraph_13 = 0x6048; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_StateResult_64 = 0x60e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x6118; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_193 = 0x6140; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_63 = 0x6190; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_192 = 0x61c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_191 = 0x6210; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_756 = 0x6260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_233 = 0x62e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_398 = 0x63a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_755 = 0x6440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_754 = 0x64c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_105 = 0x6540; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_753 = 0x65f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_62 = 0x6670; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_190 = 0x66a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_189 = 0x66f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_752 = 0x6740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_232 = 0x67c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_397 = 0x6880; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_751 = 0x6920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_750 = 0x69a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_188 = 0x6a20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_187 = 0x6a70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_749 = 0x6ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_231 = 0x6b40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_396 = 0x6c00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_748 = 0x6ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_747 = 0x6d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_104 = 0x6da0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_746 = 0x6e50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_61 = 0x6ed0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_186 = 0x6f00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_185 = 0x6f50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_745 = 0x6fa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_230 = 0x7020; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_395 = 0x70e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_744 = 0x7180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_743 = 0x7200; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_184 = 0x7280; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_183 = 0x72d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_742 = 0x7320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_229 = 0x73a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_394 = 0x7460; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_741 = 0x7500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_740 = 0x7580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_103 = 0x7600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_739 = 0x76b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_60 = 0x7730; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_182 = 0x7760; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_181 = 0x77b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_738 = 0x7800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_228 = 0x7880; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_393 = 0x7940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_737 = 0x79e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_736 = 0x7a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_102 = 0x7ae0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_735 = 0x7b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_59 = 0x7c10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_180 = 0x7c40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_179 = 0x7c90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_734 = 0x7ce0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_227 = 0x7d60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_392 = 0x7e20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_733 = 0x7ec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_732 = 0x7f40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_101 = 0x7fc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_731 = 0x8070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_58 = 0x80f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_178 = 0x8120; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_177 = 0x8170; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_730 = 0x81c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_226 = 0x8240; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_391 = 0x8300; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_729 = 0x83a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_728 = 0x8420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_100 = 0x84a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_727 = 0x8550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_57 = 0x85d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_99 = 0x8600; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_726 = 0x86b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_725 = 0x8730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_56 = 0x87b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_98 = 0x87e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_724 = 0x8890; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_170 = 0x8910; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_169 = 0x8a18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_134 = 0x8b20; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_134 = 0x8b40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_168 = 0x8b60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_723 = 0x8c68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_55 = 0x8ce8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x8d18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_97 = 0x8d40; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_722 = 0x8df0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_167 = 0x8e70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_166 = 0x8f78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_133 = 0x9080; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_133 = 0x90a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_165 = 0x90c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_721 = 0x91c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_54 = 0x9248; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_96 = 0x9278; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_720 = 0x9328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_164 = 0x93a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_163 = 0x94b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_132 = 0x95b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_132 = 0x95d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_162 = 0x95f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_719 = 0x9700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_53 = 0x9780; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_95 = 0x97b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_718 = 0x9860; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_161 = 0x98e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_160 = 0x99e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_131 = 0x9af0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_131 = 0x9b10; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_159 = 0x9b30; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_717 = 0x9c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_52 = 0x9cb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_94 = 0x9ce8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_716 = 0x9d98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_158 = 0x9e18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_157 = 0x9f20; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_130 = 0xa028; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_130 = 0xa048; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_156 = 0xa068; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_715 = 0xa170; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_51 = 0xa1f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_93 = 0xa220; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_714 = 0xa2d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_155 = 0xa350; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_154 = 0xa458; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_129 = 0xa560; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_129 = 0xa580; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_153 = 0xa5a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_713 = 0xa6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_50 = 0xa728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_92 = 0xa758; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_712 = 0xa808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_152 = 0xa888; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_151 = 0xa990; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_128 = 0xaa98; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_128 = 0xaab8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_150 = 0xaad8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_711 = 0xabe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_49 = 0xac60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_91 = 0xac90; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_710 = 0xad40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_149 = 0xadc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_148 = 0xaec8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_127 = 0xafd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_127 = 0xaff0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_147 = 0xb010; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_232 = 0xb118; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_48 = 0xb200; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_90 = 0xb230; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_709 = 0xb2e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_146 = 0xb360; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_145 = 0xb468; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_126 = 0xb570; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_126 = 0xb590; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_144 = 0xb5b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_708 = 0xb6b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_47 = 0xb738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_89 = 0xb768; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_707 = 0xb818; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_143 = 0xb898; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_142 = 0xb9a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_125 = 0xbaa8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_125 = 0xbac8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_141 = 0xbae8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_706 = 0xbbf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_46 = 0xbc70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_88 = 0xbca0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_705 = 0xbd50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_140 = 0xbdd0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_139 = 0xbed8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_124 = 0xbfe0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_124 = 0xc000; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_138 = 0xc020; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_704 = 0xc128; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_45 = 0xc1a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xc1d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xc200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_87 = 0xc228; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_231 = 0xc2d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_86 = 0xc3c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_703 = 0xc470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_137 = 0xc4f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_136 = 0xc5f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_123 = 0xc700; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_123 = 0xc720; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_135 = 0xc740; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_230 = 0xc848; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_44 = 0xc930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_85 = 0xc960; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_702 = 0xca10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_134 = 0xca90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_133 = 0xcb98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_122 = 0xcca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_122 = 0xccc0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_132 = 0xcce0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_701 = 0xcde8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_43 = 0xce68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xce98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0xcec0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0xcee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0xcf10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0xcf38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0xcf60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0xcf88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyBone_131 = 0xcfb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_121 = 0xd0b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_130 = 0xd0d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_121 = 0xd1e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoWayBlend_224 = 0xd200; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_700 = 0xd2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_699 = 0xd348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_42 = 0xd3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_129 = 0xd3f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequenceEvaluator_176 = 0xd500; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_175 = 0xd550; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_223 = 0xd5a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_390 = 0xd668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_120 = 0xd708; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_128 = 0xd728; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_120 = 0xd830; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequenceEvaluator_174 = 0xd850; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_41 = 0xd8a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0xd8d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_173 = 0xd8f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_40 = 0xd948; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0xd978; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_389 = 0xd9a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_698 = 0xda40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_225 = 0xdac0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_388 = 0xdb80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_172 = 0xdc20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_171 = 0xdc70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_387 = 0xdcc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_170 = 0xdd60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_169 = 0xddb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_168 = 0xde00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_697 = 0xde50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_386 = 0xded0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_167 = 0xdf70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_166 = 0xdfc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_84 = 0xe010; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_39 = 0xe0c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_83 = 0xe0f0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_696 = 0xe1a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_695 = 0xe220; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_385 = 0xe2a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_694 = 0xe340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_224 = 0xe3c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_693 = 0xe480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_38 = 0xe500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_692 = 0xe530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_691 = 0xe5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_384 = 0xe630; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_690 = 0xe6d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_82 = 0xe750; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_223 = 0xe800; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_689 = 0xe8c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_37 = 0xe940; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0xe970; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0xe998; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0xe9c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_222 = 0xe9e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_688 = 0xeaa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_383 = 0xeb28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_687 = 0xebc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_686 = 0xec48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_81 = 0xecc8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_685 = 0xed78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_684 = 0xedf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0xee78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_683 = 0xeea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_382 = 0xef28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_682 = 0xefc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_381 = 0xf048; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_165 = 0xf0e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_164 = 0xf138; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_380 = 0xf188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_163 = 0xf228; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_162 = 0xf278; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_161 = 0xf2c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_221 = 0xf318; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_379 = 0xf3d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_160 = 0xf478; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_159 = 0xf4c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_80 = 0xf518; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_35 = 0xf5c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0xf5f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0xf620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0xf648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0xf670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0xf698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xf6c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_220 = 0xf6e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_681 = 0xf7a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_378 = 0xf828; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_680 = 0xf8c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_229 = 0xf948; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_228 = 0xfa30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_227 = 0xfb18; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_219 = 0xfc00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_679 = 0xfcc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_377 = 0xfd40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_678 = 0xfde0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_226 = 0xfe60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_225 = 0xff48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_79 = 0x10030; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_224 = 0x100e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_223 = 0x101c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0x102b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x102e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_677 = 0x10308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_676 = 0x10388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_675 = 0x10408; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_674 = 0x10488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_673 = 0x10508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_672 = 0x10588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_671 = 0x10608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_670 = 0x10688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_78 = 0x10708; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_669 = 0x107b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_33 = 0x10838; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_668 = 0x10868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_667 = 0x108e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_666 = 0x10968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_665 = 0x109e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_664 = 0x10a68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_663 = 0x10ae8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_662 = 0x10b68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_77 = 0x10be8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_661 = 0x10c98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_660 = 0x10d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_32 = 0x10d98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_659 = 0x10dc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_658 = 0x10e48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_657 = 0x10ec8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_656 = 0x10f48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_655 = 0x10fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_654 = 0x11048; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_76 = 0x110c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_653 = 0x11178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x111f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_652 = 0x11228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_651 = 0x112a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_650 = 0x11328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_649 = 0x113a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_648 = 0x11428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_75 = 0x114a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_647 = 0x11558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_646 = 0x115d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_30 = 0x11658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_645 = 0x11688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_119 = 0x11708; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_119 = 0x11728; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_127 = 0x11748; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_644 = 0x11850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_118 = 0x118d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_118 = 0x118f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_126 = 0x11910; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_643 = 0x11a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_218 = 0x11a98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_642 = 0x11b58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_158 = 0x11bd8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_157 = 0x11c28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_641 = 0x11c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_222 = 0x11cf8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_221 = 0x11dc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_156 = 0x11e88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_155 = 0x11ed8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_640 = 0x11f28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_639 = 0x11fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_217 = 0x12028; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_638 = 0x120e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_216 = 0x12168; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_220 = 0x12228; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_219 = 0x122f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_154 = 0x123b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_153 = 0x12408; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_218 = 0x12458; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_217 = 0x12520; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_637 = 0x125e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_215 = 0x12668; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_636 = 0x12728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_152 = 0x127a8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_151 = 0x127f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_635 = 0x12848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_216 = 0x128c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_215 = 0x12990; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_634 = 0x12a58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_214 = 0x12ad8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_633 = 0x12b98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_150 = 0x12c18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_149 = 0x12c68; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_632 = 0x12cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_214 = 0x12d38; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_213 = 0x12e00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_74 = 0x12ec8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_148 = 0x12f78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_147 = 0x12fc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_631 = 0x13018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_630 = 0x13098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_213 = 0x13118; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_212 = 0x131d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_212 = 0x13298; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_211 = 0x13360; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_146 = 0x13428; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_145 = 0x13478; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_210 = 0x134c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_209 = 0x13590; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_629 = 0x13658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_211 = 0x136d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_144 = 0x13798; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_143 = 0x137e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_628 = 0x13838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_208 = 0x138b8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_207 = 0x13980; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_142 = 0x13a48; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_141 = 0x13a98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_206 = 0x13ae8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_205 = 0x13bb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_627 = 0x13c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x13cf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x13d28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x13d50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x13d78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x13da0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x13dc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x13df0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x13e18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x13e40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x13e68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_626 = 0x13e90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_140 = 0x13f10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_210 = 0x13f60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_625 = 0x14020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_139 = 0x140a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_209 = 0x140f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_624 = 0x141b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_138 = 0x14230; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_208 = 0x14280; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_623 = 0x14340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_137 = 0x143c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_207 = 0x14410; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_622 = 0x144d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_376 = 0x14550; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_136 = 0x145f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_206 = 0x14640; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_621 = 0x14700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_620 = 0x14780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_375 = 0x14800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_135 = 0x148a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_205 = 0x148f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_619 = 0x149b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_618 = 0x14a30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_374 = 0x14ab0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_134 = 0x14b50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_204 = 0x14ba0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_617 = 0x14c60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_133 = 0x14ce0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_132 = 0x14d30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_203 = 0x14d80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_373 = 0x14e40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_616 = 0x14ee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_615 = 0x14f60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_131 = 0x14fe0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_202 = 0x15030; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_614 = 0x150f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_130 = 0x15170; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_201 = 0x151c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_129 = 0x15280; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_613 = 0x152d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_200 = 0x15350; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_128 = 0x15410; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_127 = 0x15460; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_199 = 0x154b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_372 = 0x15570; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_612 = 0x15610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_611 = 0x15690; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_126 = 0x15710; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_198 = 0x15760; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_610 = 0x15820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_125 = 0x158a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_197 = 0x158f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_124 = 0x159b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_609 = 0x15a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_196 = 0x15a80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_73 = 0x15b40; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_28 = 0x15bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_608 = 0x15c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_123 = 0x15ca0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_195 = 0x15cf0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_607 = 0x15db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_122 = 0x15e30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_194 = 0x15e80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_606 = 0x15f40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_121 = 0x15fc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_193 = 0x16010; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_605 = 0x160d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_120 = 0x16150; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_192 = 0x161a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_604 = 0x16260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_371 = 0x162e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_119 = 0x16380; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_191 = 0x163d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_603 = 0x16490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_602 = 0x16510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_370 = 0x16590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_118 = 0x16630; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_190 = 0x16680; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_601 = 0x16740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_600 = 0x167c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_369 = 0x16840; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_117 = 0x168e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_189 = 0x16930; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_116 = 0x169f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_115 = 0x16a40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_188 = 0x16a90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_368 = 0x16b50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_599 = 0x16bf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_598 = 0x16c70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_114 = 0x16cf0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_187 = 0x16d40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_597 = 0x16e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_113 = 0x16e80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_186 = 0x16ed0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_112 = 0x16f90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_596 = 0x16fe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_185 = 0x17060; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_111 = 0x17120; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_110 = 0x17170; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_184 = 0x171c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_367 = 0x17280; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_595 = 0x17320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_594 = 0x173a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_109 = 0x17420; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_183 = 0x17470; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_593 = 0x17530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_108 = 0x175b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_182 = 0x17600; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_107 = 0x176c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_592 = 0x17710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_181 = 0x17790; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_72 = 0x17850; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_591 = 0x17900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0x17980; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_106 = 0x179b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_105 = 0x17a00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_590 = 0x17a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_589 = 0x17ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_588 = 0x17b50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_51 = 0x17bd0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_366 = 0x17cc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_117 = 0x17d68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_117 = 0x17d88; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_125 = 0x17da8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_180 = 0x17eb0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_204 = 0x17f70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_203 = 0x18038; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_587 = 0x18100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_50 = 0x18180; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_365 = 0x18278; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_586 = 0x18318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_116 = 0x18398; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_116 = 0x183b8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_124 = 0x183d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_179 = 0x184e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_202 = 0x185a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_201 = 0x18668; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_104 = 0x18730; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_103 = 0x18780; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_585 = 0x187d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_200 = 0x18850; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_102 = 0x18918; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_101 = 0x18968; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_584 = 0x189b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_583 = 0x18a38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_582 = 0x18ab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_49 = 0x18b38; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_364 = 0x18c30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_115 = 0x18cd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_115 = 0x18cf0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_123 = 0x18d10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_178 = 0x18e18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_199 = 0x18ed8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_198 = 0x18fa0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_581 = 0x19068; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_48 = 0x190e8; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_363 = 0x191e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_580 = 0x19280; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_114 = 0x19300; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_114 = 0x19320; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_122 = 0x19340; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_177 = 0x19448; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_197 = 0x19508; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_196 = 0x195d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_100 = 0x19698; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_99 = 0x196e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_579 = 0x19738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_195 = 0x197b8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_98 = 0x19880; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_97 = 0x198d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_578 = 0x19920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_577 = 0x199a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_576 = 0x19a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_47 = 0x19aa0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_362 = 0x19b98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_113 = 0x19c38; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_113 = 0x19c58; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_121 = 0x19c78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_176 = 0x19d80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_194 = 0x19e40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_193 = 0x19f08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_575 = 0x19fd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_46 = 0x1a050; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_361 = 0x1a148; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_574 = 0x1a1e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_112 = 0x1a268; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_112 = 0x1a288; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_120 = 0x1a2a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_175 = 0x1a3b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_192 = 0x1a470; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_191 = 0x1a538; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_96 = 0x1a600; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_95 = 0x1a650; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_573 = 0x1a6a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_190 = 0x1a720; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_94 = 0x1a7e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_93 = 0x1a838; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_572 = 0x1a888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_571 = 0x1a908; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_570 = 0x1a988; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_45 = 0x1aa08; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_360 = 0x1ab00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_111 = 0x1aba0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_111 = 0x1abc0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_119 = 0x1abe0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_174 = 0x1ace8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_189 = 0x1ada8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_188 = 0x1ae70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_569 = 0x1af38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_44 = 0x1afb8; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_359 = 0x1b0b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_568 = 0x1b150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_110 = 0x1b1d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_110 = 0x1b1f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_118 = 0x1b210; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_173 = 0x1b318; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_187 = 0x1b3d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_186 = 0x1b4a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_92 = 0x1b568; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_91 = 0x1b5b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_567 = 0x1b608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_185 = 0x1b688; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_566 = 0x1b750; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_43 = 0x1b7d0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_358 = 0x1b8c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_565 = 0x1b968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_109 = 0x1b9e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_109 = 0x1ba08; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_117 = 0x1ba28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_172 = 0x1bb30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_184 = 0x1bbf0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_183 = 0x1bcb8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_90 = 0x1bd80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_89 = 0x1bdd0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_564 = 0x1be20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_563 = 0x1bea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_42 = 0x1bf20; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_357 = 0x1c018; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_562 = 0x1c0b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_108 = 0x1c138; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_108 = 0x1c158; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_116 = 0x1c178; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_171 = 0x1c280; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_182 = 0x1c340; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_181 = 0x1c408; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_88 = 0x1c4d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_87 = 0x1c520; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_561 = 0x1c570; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_560 = 0x1c5f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_41 = 0x1c670; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_356 = 0x1c768; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_559 = 0x1c808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_107 = 0x1c888; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_107 = 0x1c8a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_115 = 0x1c8c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_170 = 0x1c9d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_180 = 0x1ca90; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_179 = 0x1cb58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_86 = 0x1cc20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_85 = 0x1cc70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_558 = 0x1ccc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_557 = 0x1cd40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_40 = 0x1cdc0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_355 = 0x1ceb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_556 = 0x1cf58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_106 = 0x1cfd8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_106 = 0x1cff8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_114 = 0x1d018; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_169 = 0x1d120; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_178 = 0x1d1e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_177 = 0x1d2a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_84 = 0x1d370; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_83 = 0x1d3c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_555 = 0x1d410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_554 = 0x1d490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_39 = 0x1d510; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_354 = 0x1d608; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_553 = 0x1d6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_105 = 0x1d728; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_105 = 0x1d748; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_113 = 0x1d768; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_168 = 0x1d870; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_176 = 0x1d930; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_175 = 0x1d9f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_82 = 0x1dac0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_81 = 0x1db10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_552 = 0x1db60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_551 = 0x1dbe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_38 = 0x1dc60; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_353 = 0x1dd58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_550 = 0x1ddf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_104 = 0x1de78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_104 = 0x1de98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_112 = 0x1deb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_167 = 0x1dfc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_174 = 0x1e080; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_173 = 0x1e148; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_80 = 0x1e210; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_79 = 0x1e260; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_549 = 0x1e2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_548 = 0x1e330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_37 = 0x1e3b0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_352 = 0x1e4a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_547 = 0x1e548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_103 = 0x1e5c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_103 = 0x1e5e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_111 = 0x1e608; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_166 = 0x1e710; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_172 = 0x1e7d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_171 = 0x1e898; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_78 = 0x1e960; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_77 = 0x1e9b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_546 = 0x1ea00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_545 = 0x1ea80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_36 = 0x1eb00; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_351 = 0x1ebf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_544 = 0x1ec98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_102 = 0x1ed18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_102 = 0x1ed38; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_110 = 0x1ed58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_165 = 0x1ee60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_170 = 0x1ef20; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_169 = 0x1efe8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_76 = 0x1f0b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_75 = 0x1f100; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_543 = 0x1f150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_168 = 0x1f1d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_167 = 0x1f298; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_166 = 0x1f360; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_165 = 0x1f428; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_542 = 0x1f4f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_35 = 0x1f570; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_350 = 0x1f668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_541 = 0x1f708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_101 = 0x1f788; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_101 = 0x1f7a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_109 = 0x1f7c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_164 = 0x1f8d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_164 = 0x1f990; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_163 = 0x1fa58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_74 = 0x1fb20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_73 = 0x1fb70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_540 = 0x1fbc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_539 = 0x1fc40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_34 = 0x1fcc0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_349 = 0x1fdb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_538 = 0x1fe58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_100 = 0x1fed8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_100 = 0x1fef8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_108 = 0x1ff18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_163 = 0x20020; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_162 = 0x200e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_161 = 0x201a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_72 = 0x20270; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_71 = 0x202c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_537 = 0x20310; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_536 = 0x20390; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_33 = 0x20410; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_348 = 0x20508; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_535 = 0x205a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_99 = 0x20628; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_99 = 0x20648; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_107 = 0x20668; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_162 = 0x20770; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_160 = 0x20830; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_159 = 0x208f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_70 = 0x209c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_69 = 0x20a10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_534 = 0x20a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_533 = 0x20ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_32 = 0x20b60; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_347 = 0x20c58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_532 = 0x20cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_98 = 0x20d78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_98 = 0x20d98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_106 = 0x20db8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_161 = 0x20ec0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_158 = 0x20f80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_157 = 0x21048; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_68 = 0x21110; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_67 = 0x21160; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_531 = 0x211b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_530 = 0x21230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_31 = 0x212b0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_346 = 0x213a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_529 = 0x21448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_97 = 0x214c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_97 = 0x214e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_105 = 0x21508; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_160 = 0x21610; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_156 = 0x216d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_155 = 0x21798; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_66 = 0x21860; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_65 = 0x218b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_528 = 0x21900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_527 = 0x21980; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_30 = 0x21a00; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_345 = 0x21af8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_526 = 0x21b98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_96 = 0x21c18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_96 = 0x21c38; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_104 = 0x21c58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_159 = 0x21d60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_154 = 0x21e20; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_153 = 0x21ee8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_64 = 0x21fb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_63 = 0x22000; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_525 = 0x22050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_524 = 0x220d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_29 = 0x22150; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_344 = 0x22248; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_523 = 0x222e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_95 = 0x22368; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_95 = 0x22388; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_103 = 0x223a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_158 = 0x224b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_152 = 0x22570; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_151 = 0x22638; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_62 = 0x22700; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_61 = 0x22750; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_522 = 0x227a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_521 = 0x22820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_28 = 0x228a0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_343 = 0x22998; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_520 = 0x22a38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_94 = 0x22ab8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_94 = 0x22ad8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_102 = 0x22af8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_157 = 0x22c00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_150 = 0x22cc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_149 = 0x22d88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_60 = 0x22e50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_59 = 0x22ea0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_519 = 0x22ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_518 = 0x22f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_517 = 0x22ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_27 = 0x23070; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_342 = 0x23168; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_516 = 0x23208; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_341 = 0x23288; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_93 = 0x23328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_93 = 0x23348; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_101 = 0x23368; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_156 = 0x23470; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_148 = 0x23530; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_147 = 0x235f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_58 = 0x236c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_57 = 0x23710; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_515 = 0x23760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_514 = 0x237e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_513 = 0x23860; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_26 = 0x238e0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_340 = 0x239d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_512 = 0x23a78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_339 = 0x23af8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_92 = 0x23b98; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_92 = 0x23bb8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_100 = 0x23bd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_155 = 0x23ce0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_146 = 0x23da0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_145 = 0x23e68; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_56 = 0x23f30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_55 = 0x23f80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_511 = 0x23fd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_154 = 0x24050; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_510 = 0x24110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_338 = 0x24190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_509 = 0x24230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_144 = 0x242b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_143 = 0x24378; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_142 = 0x24440; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_54 = 0x24508; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_53 = 0x24558; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_508 = 0x245a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_52 = 0x24628; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_51 = 0x24678; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_141 = 0x246c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_140 = 0x24790; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_507 = 0x24858; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_153 = 0x248d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_506 = 0x24998; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_337 = 0x24a18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_505 = 0x24ab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_139 = 0x24b38; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_138 = 0x24c00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_137 = 0x24cc8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_50 = 0x24d90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_49 = 0x24de0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_504 = 0x24e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_48 = 0x24eb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_47 = 0x24f00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_136 = 0x24f50; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_135 = 0x25018; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_503 = 0x250e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_134 = 0x25160; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_133 = 0x25228; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_132 = 0x252f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_131 = 0x253b8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_130 = 0x25480; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_71 = 0x25548; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_26 = 0x255f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_25 = 0x25628; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_24 = 0x25658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_222 = 0x25688; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_221 = 0x25770; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_220 = 0x25858; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_336 = 0x25940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_91 = 0x259e0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_91 = 0x25a00; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_99 = 0x25a20; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_152 = 0x25b28; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_129 = 0x25be8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_219 = 0x25cb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_218 = 0x25d98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_217 = 0x25e80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_335 = 0x25f68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_90 = 0x26008; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_90 = 0x26028; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_98 = 0x26048; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_151 = 0x26150; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_128 = 0x26210; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_216 = 0x262d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_215 = 0x263c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_214 = 0x264a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_502 = 0x26590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_501 = 0x26610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_127 = 0x26690; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_126 = 0x26758; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_334 = 0x26820; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_89 = 0x268c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_89 = 0x268e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_97 = 0x26900; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_150 = 0x26a08; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_213 = 0x26ac8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_212 = 0x26bb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_211 = 0x26c98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_500 = 0x26d80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_499 = 0x26e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_125 = 0x26e80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_124 = 0x26f48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_333 = 0x27010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_88 = 0x270b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_88 = 0x270d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_96 = 0x270f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_149 = 0x271f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_210 = 0x272b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_209 = 0x273a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_208 = 0x27488; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_332 = 0x27570; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_87 = 0x27610; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_87 = 0x27630; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_95 = 0x27650; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_148 = 0x27758; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_207 = 0x27818; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_206 = 0x27900; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_205 = 0x279e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_331 = 0x27ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_86 = 0x27b70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_86 = 0x27b90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_94 = 0x27bb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_147 = 0x27cb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_204 = 0x27d78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_203 = 0x27e60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_202 = 0x27f48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_330 = 0x28030; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_85 = 0x280d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_85 = 0x280f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_93 = 0x28110; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_146 = 0x28218; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_201 = 0x282d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_200 = 0x283c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_199 = 0x284a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_329 = 0x28590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_84 = 0x28630; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_84 = 0x28650; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_92 = 0x28670; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_145 = 0x28778; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_198 = 0x28838; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_197 = 0x28920; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_328 = 0x28a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_498 = 0x28aa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_327 = 0x28b28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_83 = 0x28bc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_83 = 0x28be8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_91 = 0x28c08; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_144 = 0x28d10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_196 = 0x28dd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_195 = 0x28eb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_194 = 0x28fa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_193 = 0x29088; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_326 = 0x29170; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_82 = 0x29210; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_82 = 0x29230; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_90 = 0x29250; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_143 = 0x29358; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_192 = 0x29418; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_191 = 0x29500; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_190 = 0x295e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_325 = 0x296d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_81 = 0x29770; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_81 = 0x29790; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_89 = 0x297b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_142 = 0x298b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_189 = 0x29978; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_188 = 0x29a60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_187 = 0x29b48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_324 = 0x29c30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_80 = 0x29cd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_80 = 0x29cf0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_88 = 0x29d10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_141 = 0x29e18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_186 = 0x29ed8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_185 = 0x29fc0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_184 = 0x2a0a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_323 = 0x2a190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_79 = 0x2a230; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_79 = 0x2a250; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_87 = 0x2a270; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_140 = 0x2a378; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_183 = 0x2a438; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_182 = 0x2a520; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_181 = 0x2a608; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_322 = 0x2a6f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_78 = 0x2a790; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_78 = 0x2a7b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_86 = 0x2a7d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_139 = 0x2a8d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_180 = 0x2a998; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_179 = 0x2aa80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_178 = 0x2ab68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_321 = 0x2ac50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_77 = 0x2acf0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_77 = 0x2ad10; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_85 = 0x2ad30; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_138 = 0x2ae38; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_177 = 0x2aef8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_176 = 0x2afe0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_497 = 0x2b0c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_496 = 0x2b148; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_175 = 0x2b1c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_123 = 0x2b2b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_122 = 0x2b378; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_320 = 0x2b440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_76 = 0x2b4e0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_76 = 0x2b500; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_84 = 0x2b520; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_137 = 0x2b628; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_174 = 0x2b6e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_173 = 0x2b7d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_172 = 0x2b8b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_319 = 0x2b9a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_75 = 0x2ba40; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_75 = 0x2ba60; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_83 = 0x2ba80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_136 = 0x2bb88; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_171 = 0x2bc48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_170 = 0x2bd30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_318 = 0x2be18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_495 = 0x2beb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_317 = 0x2bf38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_74 = 0x2bfd8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_74 = 0x2bff8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_82 = 0x2c018; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_135 = 0x2c120; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_494 = 0x2c1e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_493 = 0x2c260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_169 = 0x2c2e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_121 = 0x2c3c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_120 = 0x2c490; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_168 = 0x2c558; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_167 = 0x2c640; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_166 = 0x2c728; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_316 = 0x2c810; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_73 = 0x2c8b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_73 = 0x2c8d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_81 = 0x2c8f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_134 = 0x2c9f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_165 = 0x2cab8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_164 = 0x2cba0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_163 = 0x2cc88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_315 = 0x2cd70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_72 = 0x2ce10; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_72 = 0x2ce30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_80 = 0x2ce50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_133 = 0x2cf58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_162 = 0x2d018; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_161 = 0x2d100; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_160 = 0x2d1e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_314 = 0x2d2d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_71 = 0x2d370; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_71 = 0x2d390; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_79 = 0x2d3b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_132 = 0x2d4b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_159 = 0x2d578; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_158 = 0x2d660; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_492 = 0x2d748; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_491 = 0x2d7c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_157 = 0x2d848; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_119 = 0x2d930; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_118 = 0x2d9f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_313 = 0x2dac0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_70 = 0x2db60; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_70 = 0x2db80; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_78 = 0x2dba0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_131 = 0x2dca8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_156 = 0x2dd68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_155 = 0x2de50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_312 = 0x2df38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_490 = 0x2dfd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_311 = 0x2e058; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_69 = 0x2e0f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_69 = 0x2e118; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_77 = 0x2e138; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_130 = 0x2e240; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_154 = 0x2e300; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_153 = 0x2e3e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_152 = 0x2e4d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_310 = 0x2e5b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_489 = 0x2e658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_309 = 0x2e6d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_68 = 0x2e778; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_68 = 0x2e798; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_76 = 0x2e7b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_129 = 0x2e8c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_488 = 0x2e980; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_487 = 0x2ea00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_151 = 0x2ea80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_117 = 0x2eb68; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_116 = 0x2ec30; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_128 = 0x2ecf8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_486 = 0x2edb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_485 = 0x2ee38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_484 = 0x2eeb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_150 = 0x2ef38; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_115 = 0x2f020; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_114 = 0x2f0e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_149 = 0x2f1b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_113 = 0x2f298; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_148 = 0x2f360; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_127 = 0x2f448; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_483 = 0x2f508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_308 = 0x2f588; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_482 = 0x2f628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_112 = 0x2f6a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_481 = 0x2f770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_480 = 0x2f7f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_111 = 0x2f870; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_110 = 0x2f938; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_147 = 0x2fa00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_109 = 0x2fae8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_108 = 0x2fbb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_107 = 0x2fc78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_106 = 0x2fd40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_105 = 0x2fe08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_146 = 0x2fed0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_126 = 0x2ffb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_479 = 0x30078; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_307 = 0x300f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_478 = 0x30198; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_104 = 0x30218; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_477 = 0x302e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_476 = 0x30360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_103 = 0x303e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_102 = 0x304a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_145 = 0x30570; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_101 = 0x30658; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_100 = 0x30720; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_99 = 0x307e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_98 = 0x308b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_97 = 0x30978; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_70 = 0x30a40; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_23 = 0x30af0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x30b20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_69 = 0x30b48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_306 = 0x30bf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_475 = 0x30c98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_474 = 0x30d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_305 = 0x30d98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_473 = 0x30e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_472 = 0x30eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_304 = 0x30f38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_471 = 0x30fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_470 = 0x31058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_303 = 0x310d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_469 = 0x31178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_468 = 0x311f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_68 = 0x31278; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_302 = 0x31328; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_467 = 0x313c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_466 = 0x31448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_301 = 0x314c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_465 = 0x31568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_464 = 0x315e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_300 = 0x31668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_463 = 0x31708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_462 = 0x31788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_299 = 0x31808; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_461 = 0x318a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_460 = 0x31928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_125 = 0x319a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_459 = 0x31a68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_67 = 0x31ae8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_298 = 0x31b98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_458 = 0x31c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_457 = 0x31cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_297 = 0x31d38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_456 = 0x31dd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_455 = 0x31e58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_296 = 0x31ed8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_454 = 0x31f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_453 = 0x31ff8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_295 = 0x32078; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_452 = 0x32118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_451 = 0x32198; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_124 = 0x32218; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_450 = 0x322d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_449 = 0x32358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_294 = 0x323d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_448 = 0x32478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_123 = 0x324f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_66 = 0x325b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_293 = 0x32668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_447 = 0x32708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_446 = 0x32788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_292 = 0x32808; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_445 = 0x328a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_444 = 0x32928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_291 = 0x329a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_443 = 0x32a48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_442 = 0x32ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_290 = 0x32b48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_441 = 0x32be8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_440 = 0x32c68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_65 = 0x32ce8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_289 = 0x32d98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_439 = 0x32e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_438 = 0x32eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_288 = 0x32f38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_437 = 0x32fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_436 = 0x33058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_287 = 0x330d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_435 = 0x33178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_434 = 0x331f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_286 = 0x33278; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_433 = 0x33318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_432 = 0x33398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_64 = 0x33418; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_285 = 0x334c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_431 = 0x33568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_430 = 0x335e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_284 = 0x33668; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_429 = 0x33708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_428 = 0x33788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_283 = 0x33808; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_427 = 0x338a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_426 = 0x33928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_282 = 0x339a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_425 = 0x33a48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_424 = 0x33ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_63 = 0x33b48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_62 = 0x33bf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_281 = 0x33ca8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_423 = 0x33d48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_422 = 0x33dc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_280 = 0x33e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_421 = 0x33ee8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_420 = 0x33f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_279 = 0x33fe8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_419 = 0x34088; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_418 = 0x34108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_278 = 0x34188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_417 = 0x34228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_416 = 0x342a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_67 = 0x34328; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_75 = 0x34348; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_67 = 0x34450; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_25 = 0x34470; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_StateResult_22 = 0x34568; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_277 = 0x34598; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_144 = 0x34638; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_276 = 0x34720; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_143 = 0x347c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_142 = 0x348a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_141 = 0x34990; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_275 = 0x34a78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_140 = 0x34b18; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_139 = 0x34c00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_274 = 0x34ce8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_273 = 0x34d88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_138 = 0x34e28; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_137 = 0x34f10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_415 = 0x34ff8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_272 = 0x35078; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_414 = 0x35118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_122 = 0x35198; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_136 = 0x35258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_61 = 0x35340; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_135 = 0x353f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x354d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LegIK_24 = 0x35508; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_66 = 0x35600; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer_413 = 0x35620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_134 = 0x356a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_271 = 0x35788; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_66 = 0x35828; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_74 = 0x35848; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_121 = 0x35950; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_412 = 0x35a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_411 = 0x35a90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_133 = 0x35b10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_96 = 0x35bf8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_95 = 0x35cc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_94 = 0x35d88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_93 = 0x35e50; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LegIK_23 = 0x35f18; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_65 = 0x36010; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_22 = 0x36030; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_64 = 0x36128; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_21 = 0x36148; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendSpacePlayer_132 = 0x36240; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_410 = 0x36328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_409 = 0x363a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_120 = 0x36428; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_73 = 0x364e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_65 = 0x365f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_270 = 0x36610; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_131 = 0x366b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_408 = 0x36798; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_63 = 0x36818; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_20 = 0x36838; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_SequencePlayer_407 = 0x36930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_119 = 0x369b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_406 = 0x36a70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_130 = 0x36af0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_269 = 0x36bd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_64 = 0x36c78; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_72 = 0x36c98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_118 = 0x36da0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_405 = 0x36e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_404 = 0x36ee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_129 = 0x36f60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_92 = 0x37048; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_91 = 0x37110; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_403 = 0x371d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_128 = 0x37258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_268 = 0x37340; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace_63 = 0x373e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_71 = 0x37400; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_117 = 0x37508; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_402 = 0x375c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_401 = 0x37648; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_127 = 0x376c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_90 = 0x377b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_89 = 0x37878; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_400 = 0x37940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_126 = 0x379c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_267 = 0x37aa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_399 = 0x37b48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_266 = 0x37bc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_62 = 0x37c68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_62 = 0x37c88; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_70 = 0x37ca8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_116 = 0x37db0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_398 = 0x37e70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_397 = 0x37ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_125 = 0x37f70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_88 = 0x38058; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_87 = 0x38120; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_115 = 0x381e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_396 = 0x382a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_265 = 0x38328; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_395 = 0x383c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_394 = 0x38448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_393 = 0x384c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_124 = 0x38548; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_86 = 0x38630; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_85 = 0x386f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_60 = 0x387c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_20 = 0x38870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x388a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_59 = 0x388c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_264 = 0x38978; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_392 = 0x38a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_391 = 0x38a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_263 = 0x38b18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_390 = 0x38bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_389 = 0x38c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_262 = 0x38cb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_388 = 0x38d58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_387 = 0x38dd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_261 = 0x38e58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_386 = 0x38ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_385 = 0x38f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_58 = 0x38ff8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_260 = 0x390a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_384 = 0x39148; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_383 = 0x391c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_259 = 0x39248; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_382 = 0x392e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_381 = 0x39368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_258 = 0x393e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_380 = 0x39488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_379 = 0x39508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_257 = 0x39588; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_378 = 0x39628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_377 = 0x396a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_114 = 0x39728; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_376 = 0x397e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_256 = 0x39868; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_375 = 0x39908; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_57 = 0x39988; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_255 = 0x39a38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_374 = 0x39ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_373 = 0x39b58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_254 = 0x39bd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_372 = 0x39c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_371 = 0x39cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_253 = 0x39d78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_370 = 0x39e18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_369 = 0x39e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_252 = 0x39f18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_368 = 0x39fb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_367 = 0x3a038; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_187 = 0x3a0b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_113 = 0x3a0e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_56 = 0x3a1a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_251 = 0x3a250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_366 = 0x3a2f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_365 = 0x3a370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_250 = 0x3a3f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_364 = 0x3a490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_363 = 0x3a510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_249 = 0x3a590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_362 = 0x3a630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_361 = 0x3a6b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_248 = 0x3a730; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_360 = 0x3a7d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_359 = 0x3a850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_55 = 0x3a8d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_247 = 0x3a980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_358 = 0x3aa20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_357 = 0x3aaa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_246 = 0x3ab20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_356 = 0x3abc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_355 = 0x3ac40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_245 = 0x3acc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_354 = 0x3ad60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_353 = 0x3ade0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_244 = 0x3ae60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_352 = 0x3af00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_351 = 0x3af80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_54 = 0x3b000; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_243 = 0x3b0b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_350 = 0x3b150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_349 = 0x3b1d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_242 = 0x3b250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_348 = 0x3b2f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_347 = 0x3b370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_241 = 0x3b3f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_346 = 0x3b490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_345 = 0x3b510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_240 = 0x3b590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_344 = 0x3b630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_343 = 0x3b6b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_53 = 0x3b730; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_239 = 0x3b7e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_342 = 0x3b880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_341 = 0x3b900; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_238 = 0x3b980; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_340 = 0x3ba20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_339 = 0x3baa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_237 = 0x3bb20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_338 = 0x3bbc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_337 = 0x3bc40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_236 = 0x3bcc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_336 = 0x3bd60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_335 = 0x3bde0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_186 = 0x3be60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_112 = 0x3be88; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_52 = 0x3bf48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_235 = 0x3bff8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_334 = 0x3c098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_333 = 0x3c118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_234 = 0x3c198; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_332 = 0x3c238; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_331 = 0x3c2b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_233 = 0x3c338; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_330 = 0x3c3d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_329 = 0x3c458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_232 = 0x3c4d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_328 = 0x3c578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_327 = 0x3c5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_326 = 0x3c678; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_231 = 0x3c6f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_325 = 0x3c798; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_111 = 0x3c818; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_51 = 0x3c8d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_230 = 0x3c988; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_324 = 0x3ca28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_323 = 0x3caa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_229 = 0x3cb28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_322 = 0x3cbc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_321 = 0x3cc48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_228 = 0x3ccc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_320 = 0x3cd68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_319 = 0x3cde8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_227 = 0x3ce68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_318 = 0x3cf08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_317 = 0x3cf88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_50 = 0x3d008; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_226 = 0x3d0b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_316 = 0x3d158; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_315 = 0x3d1d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_225 = 0x3d258; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_314 = 0x3d2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_313 = 0x3d378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_224 = 0x3d3f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_312 = 0x3d498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_311 = 0x3d518; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_223 = 0x3d598; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_310 = 0x3d638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_309 = 0x3d6b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_185 = 0x3d738; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_110 = 0x3d760; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_49 = 0x3d820; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_222 = 0x3d8d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_308 = 0x3d970; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_307 = 0x3d9f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_221 = 0x3da70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_306 = 0x3db10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_305 = 0x3db90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_220 = 0x3dc10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_304 = 0x3dcb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_303 = 0x3dd30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_219 = 0x3ddb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_302 = 0x3de50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_301 = 0x3ded0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_48 = 0x3df50; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_47 = 0x3e000; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_218 = 0x3e0b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_300 = 0x3e150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_299 = 0x3e1d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_217 = 0x3e250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_298 = 0x3e2f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_297 = 0x3e370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_216 = 0x3e3f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_296 = 0x3e490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_295 = 0x3e510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_215 = 0x3e590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_294 = 0x3e630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_293 = 0x3e6b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_61 = 0x3e730; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_69 = 0x3e750; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_61 = 0x3e858; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_19 = 0x3e878; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_StateResult_19 = 0x3e970; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_123 = 0x3e9a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_122 = 0x3ea88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_109 = 0x3eb70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_292 = 0x3ec30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_214 = 0x3ecb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_291 = 0x3ed50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_121 = 0x3edd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_120 = 0x3eeb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_119 = 0x3efa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_118 = 0x3f088; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_117 = 0x3f170; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_116 = 0x3f258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_108 = 0x3f340; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_290 = 0x3f400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_213 = 0x3f480; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_289 = 0x3f520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_115 = 0x3f5a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_114 = 0x3f688; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_113 = 0x3f770; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_46 = 0x3f858; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_112 = 0x3f908; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x3f9f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_111 = 0x3fa20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_110 = 0x3fb08; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_109 = 0x3fbf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_212 = 0x3fcd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_60 = 0x3fd78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_60 = 0x3fd98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_68 = 0x3fdb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_107 = 0x3fec0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_108 = 0x3ff80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_107 = 0x40068; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_106 = 0x40150; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_211 = 0x40238; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_59 = 0x402d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_59 = 0x402f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_67 = 0x40318; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_106 = 0x40420; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_105 = 0x404e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_104 = 0x405c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_288 = 0x406b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_287 = 0x40730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_103 = 0x407b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_84 = 0x40898; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_83 = 0x40960; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_210 = 0x40a28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_58 = 0x40ac8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_58 = 0x40ae8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_66 = 0x40b08; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_105 = 0x40c10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_102 = 0x40cd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_101 = 0x40db8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_286 = 0x40ea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_285 = 0x40f20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_100 = 0x40fa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_82 = 0x41088; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_81 = 0x41150; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_209 = 0x41218; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_57 = 0x412b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_57 = 0x412d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_65 = 0x412f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_104 = 0x41400; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_99 = 0x414c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_98 = 0x415a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_208 = 0x41690; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_284 = 0x41730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_207 = 0x417b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_56 = 0x41850; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_56 = 0x41870; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_64 = 0x41890; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_103 = 0x41998; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_283 = 0x41a58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_282 = 0x41ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_97 = 0x41b58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_80 = 0x41c40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_79 = 0x41d08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_96 = 0x41dd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_95 = 0x41eb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_94 = 0x41fa0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_206 = 0x42088; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_55 = 0x42128; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_55 = 0x42148; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_63 = 0x42168; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_102 = 0x42270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_93 = 0x42330; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_92 = 0x42418; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_91 = 0x42500; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_205 = 0x425e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_54 = 0x42688; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_54 = 0x426a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_62 = 0x426c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_101 = 0x427d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_90 = 0x42890; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_89 = 0x42978; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_281 = 0x42a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_280 = 0x42ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_88 = 0x42b60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_78 = 0x42c48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_77 = 0x42d10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_204 = 0x42dd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_53 = 0x42e78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_53 = 0x42e98; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_61 = 0x42eb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_100 = 0x42fc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_87 = 0x43080; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_86 = 0x43168; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_85 = 0x43250; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_203 = 0x43338; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_52 = 0x433d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_52 = 0x433f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_60 = 0x43418; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_99 = 0x43520; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_84 = 0x435e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_83 = 0x436c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_202 = 0x437b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_279 = 0x43850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_201 = 0x438d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_51 = 0x43970; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_51 = 0x43990; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_59 = 0x439b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_98 = 0x43ab8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_278 = 0x43b78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_277 = 0x43bf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_82 = 0x43c78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_76 = 0x43d60; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_75 = 0x43e28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_81 = 0x43ef0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_80 = 0x43fd8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_79 = 0x440c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_200 = 0x441a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_50 = 0x44248; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_50 = 0x44268; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_58 = 0x44288; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_97 = 0x44390; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_78 = 0x44450; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_77 = 0x44538; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_76 = 0x44620; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_199 = 0x44708; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_49 = 0x447a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_49 = 0x447c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_57 = 0x447e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_96 = 0x448f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_75 = 0x449b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_74 = 0x44a98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_73 = 0x44b80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_198 = 0x44c68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_48 = 0x44d08; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_48 = 0x44d28; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_56 = 0x44d48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_95 = 0x44e50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_72 = 0x44f10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_71 = 0x44ff8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_276 = 0x450e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_275 = 0x45160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_70 = 0x451e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_74 = 0x452c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_73 = 0x45390; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_197 = 0x45458; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_47 = 0x454f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_47 = 0x45518; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_55 = 0x45538; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_94 = 0x45640; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LegIK_18 = 0x45700; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendSpacePlayer_69 = 0x457f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_68 = 0x458e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_196 = 0x459c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_274 = 0x45a68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_195 = 0x45ae8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_46 = 0x45b88; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_46 = 0x45ba8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_54 = 0x45bc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_93 = 0x45cd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_273 = 0x45d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_272 = 0x45e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_67 = 0x45e90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_72 = 0x45f78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_71 = 0x46040; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_92 = 0x46108; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_271 = 0x461c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_194 = 0x46248; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_270 = 0x462e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_269 = 0x46368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_268 = 0x463e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_66 = 0x46468; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_70 = 0x46550; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_69 = 0x46618; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_91 = 0x466e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_267 = 0x467a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_193 = 0x46820; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_266 = 0x468c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_265 = 0x46940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_264 = 0x469c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_65 = 0x46a40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_68 = 0x46b28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_67 = 0x46bf0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_45 = 0x46cb8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_17 = 0x46d68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_44 = 0x46d98; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_192 = 0x46e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_263 = 0x46ee8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_262 = 0x46f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_191 = 0x46fe8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_261 = 0x47088; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_260 = 0x47108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_190 = 0x47188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_259 = 0x47228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_258 = 0x472a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_189 = 0x47328; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_257 = 0x473c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_256 = 0x47448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_43 = 0x474c8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_188 = 0x47578; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_255 = 0x47618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_254 = 0x47698; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_187 = 0x47718; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_253 = 0x477b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_252 = 0x47838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_186 = 0x478b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_251 = 0x47958; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_250 = 0x479d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_185 = 0x47a58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_249 = 0x47af8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_248 = 0x47b78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_90 = 0x47bf8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_247 = 0x47cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_184 = 0x47d38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_246 = 0x47dd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_42 = 0x47e58; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_183 = 0x47f08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_245 = 0x47fa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_244 = 0x48028; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_182 = 0x480a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_243 = 0x48148; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_242 = 0x481c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_181 = 0x48248; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_241 = 0x482e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_240 = 0x48368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_180 = 0x483e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_239 = 0x48488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_238 = 0x48508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_184 = 0x48588; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_89 = 0x485b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_41 = 0x48670; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_179 = 0x48720; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_237 = 0x487c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_236 = 0x48840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_178 = 0x488c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_235 = 0x48960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_234 = 0x489e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_177 = 0x48a60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_233 = 0x48b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_232 = 0x48b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_176 = 0x48c00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_231 = 0x48ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_230 = 0x48d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_40 = 0x48da0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_175 = 0x48e50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_229 = 0x48ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_228 = 0x48f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_174 = 0x48ff0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_227 = 0x49090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_226 = 0x49110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_173 = 0x49190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_225 = 0x49230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_224 = 0x492b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_172 = 0x49330; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_223 = 0x493d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_222 = 0x49450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_39 = 0x494d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_171 = 0x49580; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_221 = 0x49620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_220 = 0x496a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_170 = 0x49720; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_219 = 0x497c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_218 = 0x49840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_169 = 0x498c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_217 = 0x49960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_216 = 0x499e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_168 = 0x49a60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_215 = 0x49b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_214 = 0x49b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_183 = 0x49c00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_88 = 0x49c28; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_38 = 0x49ce8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_167 = 0x49d98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_213 = 0x49e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_212 = 0x49eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_166 = 0x49f38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_211 = 0x49fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_210 = 0x4a058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_165 = 0x4a0d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_209 = 0x4a178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_208 = 0x4a1f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_164 = 0x4a278; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_207 = 0x4a318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_206 = 0x4a398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_205 = 0x4a418; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_163 = 0x4a498; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_204 = 0x4a538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_87 = 0x4a5b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_37 = 0x4a678; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_162 = 0x4a728; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_203 = 0x4a7c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_202 = 0x4a848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_161 = 0x4a8c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_201 = 0x4a968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_200 = 0x4a9e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_160 = 0x4aa68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_199 = 0x4ab08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_198 = 0x4ab88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_159 = 0x4ac08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_197 = 0x4aca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_196 = 0x4ad28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_158 = 0x4ada8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_36 = 0x4ae48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_157 = 0x4aef8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_195 = 0x4af98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_194 = 0x4b018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_156 = 0x4b098; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_193 = 0x4b138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_192 = 0x4b1b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_155 = 0x4b238; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_191 = 0x4b2d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_190 = 0x4b358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_154 = 0x4b3d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_189 = 0x4b478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_188 = 0x4b4f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_35 = 0x4b578; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_153 = 0x4b628; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_187 = 0x4b6c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_186 = 0x4b748; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_152 = 0x4b7c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_185 = 0x4b868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_184 = 0x4b8e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_151 = 0x4b968; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_183 = 0x4ba08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_182 = 0x4ba88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_150 = 0x4bb08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_181 = 0x4bba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_180 = 0x4bc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_182 = 0x4bca8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_86 = 0x4bcd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_34 = 0x4bd90; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_149 = 0x4be40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_179 = 0x4bee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_178 = 0x4bf60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_148 = 0x4bfe0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_177 = 0x4c080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_176 = 0x4c100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_147 = 0x4c180; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_175 = 0x4c220; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_174 = 0x4c2a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_146 = 0x4c320; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_173 = 0x4c3c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_172 = 0x4c440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_33 = 0x4c4c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_32 = 0x4c570; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_145 = 0x4c620; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_171 = 0x4c6c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_170 = 0x4c740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_144 = 0x4c7c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_169 = 0x4c860; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_168 = 0x4c8e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_143 = 0x4c960; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_167 = 0x4ca00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_166 = 0x4ca80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_142 = 0x4cb00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_165 = 0x4cba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_164 = 0x4cc20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_45 = 0x4cca0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_53 = 0x4ccc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_45 = 0x4cdc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_17 = 0x4cde8; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_StateResult_16 = 0x4cee0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_64 = 0x4cf10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_63 = 0x4cff8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_85 = 0x4d0e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_163 = 0x4d1a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_141 = 0x4d220; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_162 = 0x4d2c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_62 = 0x4d340; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_61 = 0x4d428; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_60 = 0x4d510; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_59 = 0x4d5f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_58 = 0x4d6e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_84 = 0x4d7c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_161 = 0x4d888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_140 = 0x4d908; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_160 = 0x4d9a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_57 = 0x4da28; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_139 = 0x4db10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_56 = 0x4dbb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_55 = 0x4dc98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_54 = 0x4dd80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_53 = 0x4de68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_181 = 0x4df50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_83 = 0x4df78; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_31 = 0x4e038; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_52 = 0x4e0e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x4e1d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_82 = 0x4e200; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_159 = 0x4e2c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_81 = 0x4e340; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_51 = 0x4e400; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_180 = 0x4e4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_80 = 0x4e510; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_50 = 0x4e5d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_179 = 0x4e6b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_79 = 0x4e6e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_49 = 0x4e7a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_48 = 0x4e888; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_47 = 0x4e970; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_158 = 0x4ea58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_157 = 0x4ead8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_66 = 0x4eb58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_65 = 0x4ec20; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_138 = 0x4ece8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_44 = 0x4ed88; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_44 = 0x4eda8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_52 = 0x4edc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_78 = 0x4eed0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_46 = 0x4ef90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_45 = 0x4f078; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_44 = 0x4f160; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_156 = 0x4f248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_155 = 0x4f2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_64 = 0x4f348; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_63 = 0x4f410; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_137 = 0x4f4d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_43 = 0x4f578; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_43 = 0x4f598; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_51 = 0x4f5b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_77 = 0x4f6c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_43 = 0x4f780; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_42 = 0x4f868; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_41 = 0x4f950; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_136 = 0x4fa38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_42 = 0x4fad8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_42 = 0x4faf8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_50 = 0x4fb18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_76 = 0x4fc20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_40 = 0x4fce0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_39 = 0x4fdc8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_38 = 0x4feb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_135 = 0x4ff98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_41 = 0x50038; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_41 = 0x50058; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_49 = 0x50078; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_75 = 0x50180; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_37 = 0x50240; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_178 = 0x50328; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_74 = 0x50350; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_36 = 0x50410; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_35 = 0x504f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_154 = 0x505e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_153 = 0x50660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_34 = 0x506e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_62 = 0x507c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_61 = 0x50890; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_134 = 0x50958; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_40 = 0x509f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_40 = 0x50a18; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_48 = 0x50a38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_73 = 0x50b40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_33 = 0x50c00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_32 = 0x50ce8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_31 = 0x50dd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_133 = 0x50eb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_39 = 0x50f58; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_39 = 0x50f78; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_47 = 0x50f98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_72 = 0x510a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_30 = 0x51160; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_29 = 0x51248; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_132 = 0x51330; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_152 = 0x513d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_131 = 0x51450; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_38 = 0x514f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_38 = 0x51510; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_46 = 0x51530; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_71 = 0x51638; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_151 = 0x516f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_150 = 0x51778; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_28 = 0x517f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_60 = 0x518e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_59 = 0x519a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0x51a70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x51b58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x51c40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_130 = 0x51d28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_37 = 0x51dc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_37 = 0x51de8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_45 = 0x51e08; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_70 = 0x51f10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x51fd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x520b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x521a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_129 = 0x52288; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_36 = 0x52328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_36 = 0x52348; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_44 = 0x52368; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_69 = 0x52470; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x52530; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x52618; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x52700; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_128 = 0x527e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_35 = 0x52888; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_35 = 0x528a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_43 = 0x528c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_68 = 0x529d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x52a90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x52b78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x52c60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_127 = 0x52d48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_34 = 0x52de8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_34 = 0x52e08; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_42 = 0x52e28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_67 = 0x52f30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x52ff0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x530d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_149 = 0x531c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_148 = 0x53240; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x532c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_58 = 0x533a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_57 = 0x53470; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_126 = 0x53538; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_33 = 0x535d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_33 = 0x535f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_41 = 0x53618; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_66 = 0x53720; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x537e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x538c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_125 = 0x539b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_147 = 0x53a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_124 = 0x53ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_32 = 0x53b70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_32 = 0x53b90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_40 = 0x53bb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_65 = 0x53cb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_146 = 0x53d78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_123 = 0x53df8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_145 = 0x53e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_64 = 0x53f18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_144 = 0x53fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_143 = 0x54058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x540d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_56 = 0x541c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_55 = 0x54288; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_142 = 0x54350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_141 = 0x543d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x54450; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_54 = 0x54538; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_53 = 0x54600; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_140 = 0x546c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_122 = 0x54748; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_139 = 0x547e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_63 = 0x54868; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_138 = 0x54928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_137 = 0x549a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x54a28; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_52 = 0x54b10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_51 = 0x54bd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_121 = 0x54ca0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x54d40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_136 = 0x54e28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_120 = 0x54ea8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x54f48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_177 = 0x55030; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_62 = 0x55058; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_30 = 0x55118; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_135 = 0x551c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_134 = 0x55248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x552c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_50 = 0x553b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_49 = 0x55478; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_14 = 0x55540; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_176 = 0x55570; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_175 = 0x55598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_61 = 0x555c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_46 = 0x55680; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_45 = 0x556d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_48 = 0x55720; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_47 = 0x557e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_174 = 0x558b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_173 = 0x558d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_60 = 0x55900; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_44 = 0x559c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_43 = 0x55a10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_46 = 0x55a60; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_45 = 0x55b28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_42 = 0x55bf0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_41 = 0x55c40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_133 = 0x55c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_132 = 0x55d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_131 = 0x55d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_16 = 0x55e10; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_119 = 0x55f08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_31 = 0x55fa8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_31 = 0x55fc8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_39 = 0x55fe8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_59 = 0x560f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_44 = 0x561b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_43 = 0x56278; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_40 = 0x56340; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_39 = 0x56390; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_130 = 0x563e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0x56460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0x564e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_15 = 0x56560; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_118 = 0x56658; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_30 = 0x566f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_30 = 0x56718; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_38 = 0x56738; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_58 = 0x56840; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_42 = 0x56900; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_41 = 0x569c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0x56a90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_57 = 0x56b10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0x56bd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_56 = 0x56c50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0x56d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_55 = 0x56d90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0x56e50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_54 = 0x56ed0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0x56f90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_53 = 0x57010; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0x570d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_52 = 0x57150; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0x57210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_14 = 0x57290; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_117 = 0x57388; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0x57428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_29 = 0x574a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_29 = 0x574c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_37 = 0x574e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_51 = 0x575f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_40 = 0x576b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_39 = 0x57778; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_38 = 0x57840; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_37 = 0x57890; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0x578e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0x57960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_13 = 0x579e0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_116 = 0x57ad8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0x57b78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_28 = 0x57bf8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_28 = 0x57c18; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_36 = 0x57c38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_50 = 0x57d40; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_38 = 0x57e00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_37 = 0x57ec8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_36 = 0x57f90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_35 = 0x57fe0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0x58030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_115 = 0x580b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0x58150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_12 = 0x581d0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_114 = 0x582c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0x58368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_27 = 0x583e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_27 = 0x58408; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_35 = 0x58428; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_49 = 0x58530; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_36 = 0x585f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_35 = 0x586b8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_34 = 0x58780; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_33 = 0x587d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0x58820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0x588a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_11 = 0x58920; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_113 = 0x58a18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0x58ab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_26 = 0x58b38; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_26 = 0x58b58; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_34 = 0x58b78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_48 = 0x58c80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_34 = 0x58d40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_33 = 0x58e08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_32 = 0x58ed0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_31 = 0x58f20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x58f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x58ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_10 = 0x59070; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_112 = 0x59168; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x59208; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_25 = 0x59288; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_25 = 0x592a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_33 = 0x592c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_47 = 0x593d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_32 = 0x59490; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_31 = 0x59558; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_30 = 0x59620; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_29 = 0x59670; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x596c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x59740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_9 = 0x597c0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_111 = 0x598b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x59958; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_24 = 0x599d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_24 = 0x599f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_32 = 0x59a18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_46 = 0x59b20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_30 = 0x59be0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_29 = 0x59ca8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_28 = 0x59d70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_27 = 0x59dc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x59e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x59e90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_8 = 0x59f10; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_110 = 0x5a008; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x5a0a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_23 = 0x5a128; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_23 = 0x5a148; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_31 = 0x5a168; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_45 = 0x5a270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_28 = 0x5a330; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_27 = 0x5a3f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_26 = 0x5a4c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_25 = 0x5a510; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x5a560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x5a5e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_7 = 0x5a660; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_109 = 0x5a758; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x5a7f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_22 = 0x5a878; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_22 = 0x5a898; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_30 = 0x5a8b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_44 = 0x5a9c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_26 = 0x5aa80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_25 = 0x5ab48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_24 = 0x5ac10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_23 = 0x5ac60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x5acb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x5ad30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x5adb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x5ae30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_6 = 0x5aeb0; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_108 = 0x5afa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x5b048; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_107 = 0x5b0c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_21 = 0x5b168; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_21 = 0x5b188; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_29 = 0x5b1a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_43 = 0x5b2b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_24 = 0x5b370; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_23 = 0x5b438; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_22 = 0x5b500; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_21 = 0x5b550; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x5b5a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_5 = 0x5b620; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_106 = 0x5b718; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x5b7b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_20 = 0x5b838; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_20 = 0x5b858; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_28 = 0x5b878; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_42 = 0x5b980; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_22 = 0x5ba40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_21 = 0x5bb08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_20 = 0x5bbd0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_19 = 0x5bc20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x5bc70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x5bcf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LegIK_4 = 0x5bd70; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_105 = 0x5be68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x5bf08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_19 = 0x5bf88; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_19 = 0x5bfa8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_27 = 0x5bfc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_41 = 0x5c0d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_20 = 0x5c190; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_19 = 0x5c258; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_18 = 0x5c320; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_17 = 0x5c370; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x5c3c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_40 = 0x5c440; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x5c500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_104 = 0x5c580; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x5c620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x5c6a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_103 = 0x5c720; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x5c7c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_16 = 0x5c840; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_15 = 0x5c890; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_18 = 0x5c8e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_17 = 0x5c9a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x5ca70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_102 = 0x5caf0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x5cb90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x5cc10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_101 = 0x5cc90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x5cd30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_14 = 0x5cdb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_13 = 0x5ce00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_39 = 0x5ce50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_16 = 0x5cf10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_15 = 0x5cfd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_172 = 0x5d0a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_171 = 0x5d0c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_38 = 0x5d0f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_12 = 0x5d1b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_11 = 0x5d200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_14 = 0x5d250; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_13 = 0x5d318; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_37 = 0x5d3e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x5d4a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_100 = 0x5d520; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x5d5c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x5d640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_99 = 0x5d6c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x5d760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_10 = 0x5d7e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x5d830; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_12 = 0x5d880; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0x5d948; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x5da10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_98 = 0x5da90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x5db30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x5dbb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_97 = 0x5dc30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x5dcd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x5dd50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x5dda0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_36 = 0x5ddf0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0x5deb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0x5df78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_26 = 0x5e040; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_96 = 0x5e088; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_170 = 0x5e128; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_169 = 0x5e150; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_35 = 0x5e178; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x5e238; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x5e288; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x5e2d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x5e3a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_29 = 0x5e468; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_13 = 0x5e518; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x5e548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x5e5c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x5e5f8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_95 = 0x5e6a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_44 = 0x5e748; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_168 = 0x5e8a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_167 = 0x5e8c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_94 = 0x5e8f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_28 = 0x5e990; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x5ea40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x5eac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x5eb40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_34 = 0x5ebc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_27 = 0x5ec80; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_166 = 0x5ed30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_165 = 0x5ed58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_25 = 0x5ed80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_24 = 0x5edc8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_23 = 0x5ee10; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_164 = 0x5ee58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_18 = 0x5ee80; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_18 = 0x5eea0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_26 = 0x5eec0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_25 = 0x5efc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_24 = 0x5f0d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_43 = 0x5f1d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_42 = 0x5f330; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_23 = 0x5f488; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_22 = 0x5f590; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_93 = 0x5f698; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_41 = 0x5f738; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LegIK_3 = 0x5f890; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByEnum_26 = 0x5f988; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x5fa38; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_163 = 0x5fb20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_40 = 0x5fb48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0x5fca0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_92 = 0x5fe80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_162 = 0x5ff20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_39 = 0x5ff48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_161 = 0x600a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_160 = 0x600c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_159 = 0x600f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_158 = 0x60118; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_157 = 0x60140; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_156 = 0x60168; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_22 = 0x60190; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_21 = 0x601d8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_25 = 0x60220; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_155 = 0x603b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_91 = 0x603d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_90 = 0x60478; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0x60520; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_UseCachedPose_154 = 0x60700; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_17 = 0x60728; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_24 = 0x60748; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_23 = 0x608d8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_153 = 0x60a68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_89 = 0x60a90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0x60b30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_22 = 0x60be0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_21 = 0x60d70; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_152 = 0x60f00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_151 = 0x60f28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimGraph_12 = 0x60f50; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_Root = 0x60ff0; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0x61020; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LinkedAnimGraph_11 = 0x610d0; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_UseCachedPose_150 = 0x61170; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_149 = 0x61198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_20 = 0x611c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_19 = 0x61350; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_148 = 0x614e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_88 = 0x61508; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Fabrik_5 = 0x615b0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_UseCachedPose_147 = 0x61740; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_16 = 0x61768; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_17 = 0x61788; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_87 = 0x617a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_146 = 0x61848; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_86 = 0x61870; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_145 = 0x61910; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_144 = 0x61938; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_38 = 0x61960; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_143 = 0x61ab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_85 = 0x61ae0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_37 = 0x61b80; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_36 = 0x61cd8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0x61e30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_33 = 0x61ee0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x61fa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_84 = 0x62020; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_32 = 0x620c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x62180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_83 = 0x62200; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_31 = 0x622a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x62360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_82 = 0x623e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_81 = 0x62480; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0x62520; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_30 = 0x625d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x62690; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_80 = 0x62710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_29 = 0x627b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x62870; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_79 = 0x628f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_28 = 0x62990; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x62a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_78 = 0x62ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimGraph_10 = 0x62b70; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_BlendListByBool_77 = 0x62c10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_27 = 0x62cb0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x62d70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_76 = 0x62df0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_75 = 0x62e90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_142 = 0x62f30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_141 = 0x62f58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_140 = 0x62f80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_139 = 0x62fa8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_138 = 0x62fd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_137 = 0x62ff8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_35 = 0x63020; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_136 = 0x63178; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_135 = 0x631a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_134 = 0x631c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_133 = 0x631f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_132 = 0x63218; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_131 = 0x63240; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_130 = 0x63268; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_129 = 0x63290; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_34 = 0x632b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_128 = 0x63410; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_127 = 0x63438; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_26 = 0x63460; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x63520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_74 = 0x635a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_126 = 0x63640; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_125 = 0x63668; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_73 = 0x63690; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x63730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x637b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_72 = 0x63830; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x638d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x63950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_71 = 0x639d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x63a70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x63af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_70 = 0x63b70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x63c10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_69 = 0x63cd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0x63d78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_124 = 0x63e28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_123 = 0x63e50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_122 = 0x63e78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_20 = 0x63ea0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_19 = 0x63ee8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_18 = 0x63f30; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0x63f78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_121 = 0x64028; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_17 = 0x64050; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x64098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x64118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_68 = 0x64198; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_67 = 0x64238; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_16 = 0x642d8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_15 = 0x64320; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_14 = 0x64368; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_13 = 0x643b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_12 = 0x643f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_11 = 0x64440; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_10 = 0x64488; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_9 = 0x644d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_8 = 0x64518; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_33 = 0x64560; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LegIK_2 = 0x646b8; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_16 = 0x647b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_15 = 0x647d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_25 = 0x647f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_120 = 0x648b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_119 = 0x648d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_66 = 0x64900; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_118 = 0x649a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x649c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_32 = 0x64ad0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_117 = 0x64c28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x64c50; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_24 = 0x64d20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x64de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x64e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_31 = 0x64ee0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_65 = 0x65038; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_64 = 0x650d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_116 = 0x65178; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_115 = 0x651a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_114 = 0x651c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_113 = 0x651f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_112 = 0x65218; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_23 = 0x65240; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_30 = 0x65300; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_63 = 0x65458; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x654f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LinkedAnimGraph_9 = 0x65578; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x65618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x65698; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_111 = 0x65748; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x65770; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_22 = 0x65820; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x658e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_62 = 0x65960; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_21 = 0x65a00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x65ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_61 = 0x65b40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_20 = 0x65be0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x65ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_60 = 0x65d20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_110 = 0x65dc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_29 = 0x65de8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_109 = 0x65f40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_108 = 0x65f68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_107 = 0x65f90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_106 = 0x65fb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_105 = 0x65fe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_104 = 0x66008; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_28 = 0x66030; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_103 = 0x66188; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_59 = 0x661b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_102 = 0x66250; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x66278; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_18 = 0x66328; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_17 = 0x664b8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_101 = 0x66648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_100 = 0x66670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_99 = 0x66698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_16 = 0x666c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_15 = 0x66850; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_98 = 0x669e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_58 = 0x66a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_57 = 0x66aa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_27 = 0x66b48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_19 = 0x66ca0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x66d60; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_18 = 0x66e10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x66ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_56 = 0x66f50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0x66ff0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x670b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_55 = 0x67130; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0x671d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x67290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_54 = 0x67310; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_53 = 0x673b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0x67450; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x67510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_52 = 0x67590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x67630; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x676f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_51 = 0x67770; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_50 = 0x67810; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimGraph_8 = 0x678b0; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_UseCachedPose_97 = 0x67950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_96 = 0x67978; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_95 = 0x679a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_94 = 0x679c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_93 = 0x679f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_92 = 0x67a18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_91 = 0x67a40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_90 = 0x67a68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_89 = 0x67a90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_88 = 0x67ab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_14 = 0x67ae0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_15 = 0x67b00; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik_4 = 0x67b20; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_3 = 0x67cb0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_BlendListByBool_49 = 0x67e40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_26 = 0x67ee0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_87 = 0x68038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_86 = 0x68060; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0x68088; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LinkedAnimGraph_7 = 0x681e0; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x68280; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x68330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x683b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x68430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x684b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x68578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x685f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x686a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x68728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x687a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_85 = 0x68868; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x68890; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0x689e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x68a88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_84 = 0x68be0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_83 = 0x68c08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_82 = 0x68c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x68c58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0x68d18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x68db8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_81 = 0x68f10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x68f38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_80 = 0x68fe8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x69010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_79 = 0x69090; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_78 = 0x690b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_77 = 0x690e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x69108; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_76 = 0x69260; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0x69288; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x69328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x693a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x69470; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x69520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x695a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x69620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x696a0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x69768; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0x697e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_3 = 0x69888; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x698a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0x69920; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose_2 = 0x699c0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x699d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0x69a58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_IdentityPose = 0x69af8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x69b10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_75 = 0x69bc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_14 = 0x69be8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_14 = 0x69d78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x69d98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0x69e38; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_74 = 0x69f90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_73 = 0x69fb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_72 = 0x69fe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0x6a008; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_71 = 0x6a160; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x6a188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x6a228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x6a2a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x6a400; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_70 = 0x6a4c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_69 = 0x6a4f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_68 = 0x6a518; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LegIK = 0x6a540; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x6a638; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_13 = 0x6a740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x6a760; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x6a870; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x6aa50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK = 0x6ab60; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_13 = 0x6ad40; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_67 = 0x6ad60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x6ad88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x6aee0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x6af90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x6b010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x6b090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x6b110; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x6b1b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_66 = 0x6b308; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_13 = 0x6b330; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x6b4c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x6b560; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x6b610; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_65 = 0x6b6b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_64 = 0x6b6d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_63 = 0x6b700; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_62 = 0x6b728; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_12 = 0x6b750; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x6b8e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_61 = 0x6b980; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_60 = 0x6b9a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_11 = 0x6b9d0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0x6bb60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_59 = 0x6bc00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x6bc28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x6bc50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x6bc78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_10 = 0x6bd40; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x6bed0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x6bf70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x6bf98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x6bfc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x6c118; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x6c1b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x6c1e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_9 = 0x6c208; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x6c398; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x6c438; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x6c460; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x6c488; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x6c550; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x6c600; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x6c628; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_12 = 0x6c730; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x6c750; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_12 = 0x6c778; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x6c798; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x6c838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x6c8b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x6c958; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimGraph_6 = 0x6c9f8; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_LinkedAnimGraph_5 = 0x6ca98; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_LinkedAnimGraph_4 = 0x6cb38; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x6cbd8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x6cd30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_CopyBone_8 = 0x6cd58; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x6ce48; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x6ce68; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x6cfc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x6cfe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimGraph_3 = 0x6d008; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x6d0a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x6d0c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LinkedAnimGraph_2 = 0x6d0e8; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x6d188; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x6d2e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x6d380; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x6d3a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x6d468; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x6d490; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x6d4b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x6d578; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x6d5a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x6d640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x6d6c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x6d6e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x6d7e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x6d8f0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x6d910; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x6da68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x6da90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x6dbe8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x6dc88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x6dd08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x6dd88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x6de28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x6de50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x6dfa8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x6dfd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x6e070; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x6e098; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x6e0c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x6e218; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x6e240; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x6e268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x6e290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x6e2b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x6e2e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x6e308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x6e330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x6e358; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x6e3a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x6e448; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x6e530; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x6e600; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_11 = 0x6e650; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x6e680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x6e700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x6e780; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x6e820; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x6e8c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x6e9a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x6e9d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x6ea28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x6eac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x6eb48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x6ebc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x6ec68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x6ed08; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x6edf0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x6eec0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_9 = 0x6ef10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose = 0x6ef40; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_8 = 0x6ef58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x6ef88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x6f038; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x6f060; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x6f088; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x6f0b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x6f0d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x6f100; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x6f128; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x6f150; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x6f178; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x6f1a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x6f1c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x6f1f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x6f218; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_8 = 0x6f298; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_StateResult_7 = 0x6f428; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x6f458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_7 = 0x6f4d8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_StateResult_6 = 0x6f668; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_5 = 0x6f698; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x6f6c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_6 = 0x6f748; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_StateResult_4 = 0x6f8d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x6f908; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x6f988; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_StateResult_3 = 0x6fb18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x6fb48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x6fbc8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_StateResult_2 = 0x6fd58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x6fd88; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x6ff18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x6ff98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x6ffc8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x70078; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x700f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x70140; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x70298; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x702c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x702e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x703a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x704b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x704d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x705d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x70688; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x706a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x706d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x706f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x707b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x708c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x708e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x709e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x70a08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_CopyBone_7 = 0x70aa8; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x70b98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x70c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x70c80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x70ca8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x70d48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x70df8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x70e20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x70e48; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_CopyBone_6 = 0x70f08; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x70ff8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x71018; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x71038; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x710f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x71120; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x712b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_CopyBone_5 = 0x712d8; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x713c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x713e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_CopyBone_4 = 0x71408; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x714f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x71518; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x71538; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x715d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x71600; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x716c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x716e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x71710; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_6 = 0x717d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x71818; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x71840; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x71868; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x719c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x719e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x71aa8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x71ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_5 = 0x71b70; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x71bb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_4 = 0x71be0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3 = 0x71c28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x71c70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x71c98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x71d38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x71db8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x71e58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x71ed8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x71f78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x72028; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x720c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x72148; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x721e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x72268; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x72308; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x72460; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x72488; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x724b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x724d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x72500; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x72658; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x72680; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x726c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x726f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x72738; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x727d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x72878; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x728a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x729f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x72b50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x72b78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x72ba0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x72c40; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x72cf0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x72d18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x72d40; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_PoseSnapshot_3 = 0x72ed0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x72f60; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_PoseSnapshot_2 = 0x73010; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x730a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x73150; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseSnapshot = 0x731f0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x73280; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x732a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x73368; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x73470; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_CopyBone_3 = 0x73578; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x73668; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x73688; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x736a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x73728; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x737c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x73848; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x73870; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_CopyBone_2 = 0x73978; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x73a68; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x73a88; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x73aa8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x73bb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x73cb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Fabrik_2 = 0x73dc0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x73f50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x74058; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x74160; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose = 0x74268; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x743c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x743e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Fabrik = 0x74490; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ModifyBone = 0x74620; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x74728; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x74750; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x747f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_CopyBone = 0x74818; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x74908; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x74928; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByEnum = 0x74948; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LinkedAnimGraph = 0x749f8; // FAnimNode_LinkedAnimGraph
		constexpr auto AnimGraphNode_BlendListByBool = 0x74a98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose = 0x74b38; // FAnimNode_UseCachedPose
		constexpr auto __CustomProperty_WeightLoadFactor_FADAEE43489DFBCA1CE00D82F2A197CC = 0x74b60; // float
		constexpr auto __CustomProperty_Stance_F4B9317B4E715E265E0A97B6F0983BD6 = 0x74b64; // EPrisonerStance
		constexpr auto __CustomProperty_ShouldApplyArmsPitchCorrection_F4B9317B4E715E265E0A97B6F0983BD6 = 0x74b65; // bool
		constexpr auto __CustomProperty_FirstPersonAimYawDelta_F4B9317B4E715E265E0A97B6F0983BD6 = 0x74b68; // float
		constexpr auto __CustomProperty_FirstPersonAimPitch_F4B9317B4E715E265E0A97B6F0983BD6 = 0x74b6c; // float
		constexpr auto __CustomProperty_RibcageLeanAngle_F4FC7282407696652FBBEF97327C88FB = 0x74b70; // float
		constexpr auto __CustomProperty_Spine3LeanAngle_F4FC7282407696652FBBEF97327C88FB = 0x74b74; // float
		constexpr auto __CustomProperty_Spine2LeanAngle_F4FC7282407696652FBBEF97327C88FB = 0x74b78; // float
		constexpr auto __CustomProperty_Spine1LeanAngle_F4FC7282407696652FBBEF97327C88FB = 0x74b7c; // float
		constexpr auto __CustomProperty_LeanAmount_F4FC7282407696652FBBEF97327C88FB = 0x74b80; // float
		constexpr auto __CustomProperty_Stance_C02CE809436FE44638743095A0E89557 = 0x74b84; // EPrisonerStance
		constexpr auto __CustomProperty_ShouldApplyArmsPitchCorrection_C02CE809436FE44638743095A0E89557 = 0x74b85; // bool
		constexpr auto __CustomProperty_FirstPersonAimYawDelta_C02CE809436FE44638743095A0E89557 = 0x74b88; // float
		constexpr auto __CustomProperty_FirstPersonAimPitch_C02CE809436FE44638743095A0E89557 = 0x74b8c; // float
		constexpr auto __CustomProperty_RibcageLeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E = 0x74b90; // float
		constexpr auto __CustomProperty_Spine3LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E = 0x74b94; // float
		constexpr auto __CustomProperty_Spine2LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E = 0x74b98; // float
		constexpr auto __CustomProperty_Spine1LeanAngle_E36F94384712DBE79A8CAEB6A20F8F3E = 0x74b9c; // float
		constexpr auto __CustomProperty_LeanAmount_E36F94384712DBE79A8CAEB6A20F8F3E = 0x74ba0; // float
		constexpr auto __CustomProperty_RibcageLeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F = 0x74ba4; // float
		constexpr auto __CustomProperty_Spine3LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F = 0x74ba8; // float
		constexpr auto __CustomProperty_Spine2LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F = 0x74bac; // float
		constexpr auto __CustomProperty_Spine1LeanAngle_37E85B9A4B96D6BDEF5EEC8946C8679F = 0x74bb0; // float
		constexpr auto __CustomProperty_LeanAmount_37E85B9A4B96D6BDEF5EEC8946C8679F = 0x74bb4; // float
		constexpr auto RightFootEffectorLocation = 0x74bb8; // FVector
		constexpr auto LeftFootEffectorLocation = 0x74bc4; // FVector
		constexpr auto Prisoner = 0x74bd0; // ABP_Prisoner_C*
		constexpr auto PelvisLockBoneTransform = 0x74be0; // FTransform
		constexpr auto LeanAmount = 0x74c10; // float
		constexpr auto RandomStream = 0x74c14; // FRandomStream
		constexpr auto bShouldSkipStandWalkOrJogOrRunStart = 0x74c1c; // bool
		constexpr auto ShouldTakePenisInHands = 0x74c1d; // bool
		constexpr auto RightHandEffectorLocation = 0x74c20; // FVector
		constexpr auto LeftHandEffectorLocation = 0x74c2c; // FVector
		constexpr auto LeftHandRotation = 0x74c38; // FRotator
		constexpr auto PelvisLeanMultiplier = 0x74c44; // float
		constexpr auto PelvisLeanAngle = 0x74c48; // float
		constexpr auto ThighLeanAngle = 0x74c4c; // float
		constexpr auto Spine1LeanAngle = 0x74c50; // float
		constexpr auto Spine2LeanAngle = 0x74c54; // float
		constexpr auto Spine3LeanAngle = 0x74c58; // float
		constexpr auto RibcageLeanAngle = 0x74c5c; // float
		constexpr auto FootIKLeanAngle = 0x74c60; // float
		constexpr auto FootIKAlpha = 0x74c64; // float
	}

	namespace n_UUI_KillNotification_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_58 = 0x268; // UHorizontalBox*
		constexpr auto Name = 0x270; // UTextBlock*
		constexpr auto prefix = 0x278; // UTextBlock*
		constexpr auto suffix = 0x280; // UTextBlock*
	}

	namespace n_UCircularMenuSegmentInteractionInfo {
		constexpr auto InteractionTargetType = 0x80; // EInteractionTargetType
		constexpr auto InteractionInfo = 0x88; // FInteractionStruct
		constexpr auto RequireSupporterPack = 0x100; // bool
		constexpr auto _interactionInitiator = 0x108; // APrisoner*
		constexpr auto _interactableObject = 0x110; // UObject*
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x448; // UVectorField*
		constexpr auto Intensity = 0x450; // float
		constexpr auto Tightness = 0x454; // float
		constexpr auto bPreviewVectorField = 0x458; // char : 1
	}

	namespace n_UConZReverbComponent {
		constexpr auto IndoorSmallAuxBus = 0x238; // UAkAuxBus*
		constexpr auto IndoorMediumAuxBus = 0x240; // UAkAuxBus*
		constexpr auto IndoorLargeAuxBus = 0x248; // UAkAuxBus*
		constexpr auto OutdoorLargeAuxBus = 0x250; // UAkAuxBus*
	}

	namespace n_ACraftingObjective {
		constexpr auto _targetItems = 0x330; // TArray<TSoftClassPtr<UObject>>
	}

	namespace n_UObjectiveContainer_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto ObjectiveCompleted = 0x280; // FMulticastInlineDelegate
	}

	namespace n_UCollapsableContainer {
		constexpr auto Title = 0x260; // FText
		constexpr auto _title = 0x278; // UTextBlock*
		constexpr auto _titleBackground = 0x280; // UImage*
		constexpr auto _displayContentButton = 0x288; // UButton*
		constexpr auto _contentAreaOverlay = 0x290; // UOverlay*
		constexpr auto _titleBackgroundColor = 0x298; // FDataTableRowHandle
		constexpr auto _titleTextColor = 0x2a8; // FDataTableRowHandle
		constexpr auto _buttonStyleWhenCollapsedContent = 0x2b8; // FButtonStyle
		constexpr auto _buttonStyleWhenExpandedContent = 0x530; // FButtonStyle
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UUI_BasicTextWidget_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto _text = 0x270; // UMultiLineEditableText*
		constexpr auto _currentInputText = 0x278; // FString
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMeshAttributePaintToolProperties {
		constexpr auto Attributes = 0x60; // TArray<FName>
		constexpr auto SelectedAttribute = 0x70; // int32_t
		constexpr auto AttributeName = 0x78; // FString
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x448; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x458; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x468; // TArray<UMeshComponent*>
	}

	namespace n_UABP_Prisoner_Boat_C {
		constexpr auto UberGraphFrame = 0x400; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x408; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x4b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x4d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x500; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x528; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x5a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x5c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x5f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x618; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x640; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x668; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x6b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x6e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x730; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x7a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x7d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x7f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_7 = 0x810; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x9a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xa20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Fabrik_6 = 0xa50; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0xbe0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0xc00; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_5 = 0xc20; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0xdb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0xe98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0xec8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0xee8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_4 = 0xf10; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x10a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1120; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1150; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1170; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_3 = 0x1190; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x13a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x13d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x13f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_2 = 0x1410; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x15a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1620; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x1650; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1768; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1850; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x19b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x19e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1ac8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1af8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1be0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1c10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1cf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1d28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1da8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x1e28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1ec8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1f68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2050; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x2100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2180; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x2220; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x22c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x22e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik = 0x2300; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2490; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2578; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult = 0x25a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x25d8; // FAnimNode_StateMachine
	}

	namespace n_UUI_YesNoMenuConfirmation_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Image_11 = 0x2a0; // UImage*
		constexpr auto MainText = 0x2a8; // UTextBlock*
		constexpr auto NoButton = 0x2b0; // UUI_TrashMenuButton_C*
		constexpr auto YesButton = 0x2b8; // UUI_TrashMenuButton_C*
		constexpr auto YesClicked = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UUVProjectionOperatorFactory {
		constexpr auto Tool = 0x30; // UUVProjectionTool*
	}

	namespace n_UInventoryPanelSideLayerWidget {
		constexpr auto _itemWidget = 0x278; // UItemWidget2*
	}

	namespace n_UUI_JournalPanel_C {
		constexpr auto _background = 0x2f0; // UImage*
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UWeaponAmmoDisplayContainerWidget {
		constexpr auto _ammoDisplayWidgetClass = 0x278; // UUserWidget*
		constexpr auto _displayList = 0x280; // UVerticalBox*
		constexpr auto _displayListCentered = 0x288; // UVerticalBox*
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto WindIntensityScale = 0x90; // float
		constexpr auto LinearDrag = 0x94; // FVector
		constexpr auto AngularDrag = 0xa0; // FVector
		constexpr auto LinearInertiaScale = 0xac; // FVector
		constexpr auto AngularInertiaScale = 0xb8; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc4; // FVector
		constexpr auto SolverFrequency = 0xd0; // float
		constexpr auto StiffnessFrequency = 0xd4; // float
		constexpr auto GravityScale = 0xd8; // float
		constexpr auto GravityOverride = 0xdc; // FVector
		constexpr auto bUseGravityOverride = 0xe8; // bool
		constexpr auto TetherStiffness = 0xec; // float
		constexpr auto TetherLimit = 0xf0; // float
		constexpr auto CollisionThickness = 0xf4; // float
		constexpr auto AnimDriveSpringStiffness = 0xf8; // float
		constexpr auto AnimDriveDamperStiffness = 0xfc; // float
		constexpr auto WindMethod = 0x100; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x104; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x114; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x124; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x134; // FClothConstraintSetup_Legacy
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_AHeatSourceMarker {
		constexpr auto _sceneComponent = 0x228; // USceneComponent*
		constexpr auto _heatSourceParameters = 0x230; // FHeatSourceParameters
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UScopeableItemComponent {
		constexpr auto _zoomLevelSettings = 0xb8; // TArray<FScopeZoomLevelSettings>
		constexpr auto _zoomLevelSettingsTemp = 0xc8; // TArray<FScopeZoomLevelSettings>
		constexpr auto _scopingOverlayTexture = 0xd8; // UTexture2D*
		constexpr auto _scopingStartDelay = 0xe0; // float
		constexpr auto _scopingStopDelay = 0xe4; // float
		constexpr auto _montageStandingFP = 0xe8; // UAnimMontage*
		constexpr auto _montageCrouchingFP = 0xf0; // UAnimMontage*
		constexpr auto _montageProneFP = 0xf8; // UAnimMontage*
		constexpr auto _montageStandingTP = 0x100; // UAnimMontage*
		constexpr auto _montageCrouchingTP = 0x108; // UAnimMontage*
		constexpr auto _montageProneTP = 0x110; // UAnimMontage*
		constexpr auto _currentZoomLevel = 0x118; // int32_t
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_ABirdTargetPoint {
		constexpr auto IsOccupied = 0x220; // bool
	}

	namespace n_UEventInsertCartridge {
		constexpr auto MontageEndSectionName = 0x90; // FName
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UEnvQueryTest_InsideWaterBody {
		constexpr auto bIncludeWaves = 0x1f8; // bool
		constexpr auto bSimpleWaves = 0x1f9; // bool
		constexpr auto bIgnoreExclusionVolumes = 0x1fa; // bool
	}

	namespace n_ABP_WeaponBullet_ExplosiveArrow_Carbon_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_AFishingTrophyActor {
		constexpr auto _skeletalMeshComponent = 0x220; // USkeletalMeshComponent*
		constexpr auto _staticMeshComponent = 0x228; // UStaticMeshComponent*
	}

	namespace n_UItemWithTextState {
		constexpr auto OwningUserProfileId = 0xf8; // FDbIntegerId
		constexpr auto Text = 0x100; // FString
	}

	namespace n_UUI_OptionsSlider_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x280; // UImage*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto Image_3 = 0x290; // UImage*
		constexpr auto Image_4 = 0x298; // UImage*
		constexpr auto LowerButton = 0x2a0; // UButton*
		constexpr auto NameText = 0x2a8; // UTextBlock*
		constexpr auto RaiseButton = 0x2b0; // UButton*
		constexpr auto TitleSizeBox = 0x2b8; // USizeBox*
		constexpr auto ValueSizeBox = 0x2c0; // USizeBox*
		constexpr auto ValueSlot = 0x2c8; // UNamedSlot*
		constexpr auto ValueText = 0x2d0; // UTextBlock*
		constexpr auto ValueTextOverlay = 0x2d8; // UOverlay*
		constexpr auto Name = 0x2e0; // FText
		constexpr auto _keys = 0x2f8; // TArray<FText>
		constexpr auto _values = 0x308; // TArray<FText>
		constexpr auto _index = 0x318; // int32_t
		constexpr auto OnValueChanged = 0x320; // FMulticastInlineDelegate
		constexpr auto Clamp = 0x330; // bool
		constexpr auto MinTitleWidth = 0x334; // float
		constexpr auto MinSliderWidth = 0x338; // float
		constexpr auto _oldIndex = 0x33c; // int32_t
		constexpr auto IncrementInSteps = 0x340; // bool
		constexpr auto TitleFontSize = 0x344; // int32_t
		constexpr auto HighlightedFontSize = 0x348; // int32_t
		constexpr auto Titleless = 0x34c; // bool
		constexpr auto ValueFontSize = 0x350; // int32_t
		constexpr auto ValuePadding = 0x354; // float
		constexpr auto ValueTextPadding = 0x358; // FMargin
		constexpr auto ValueAlignment = 0x368; // EHorizontalAlignment
		constexpr auto HasValueBackground = 0x369; // bool
	}

	namespace n_UABP_M9_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x3e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x428; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x4b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x680; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x880; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x9d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xaf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xb98; // FAnimNode_SequencePlayer
	}

	namespace n_UKillFeedNotificationDescription {
		constexpr auto prefix = 0x40; // FString
		constexpr auto characterName = 0x50; // FString
		constexpr auto suffix = 0x60; // FString
		constexpr auto ping = 0x70; // bool
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UPrisonerBodyCondition_StomachFull {
		constexpr auto _stomachFullnessToExist = 0xa8; // float
		constexpr auto _stomachFullnessToDie = 0xac; // float
		constexpr auto _stomachFullnessToBeRecovered = 0xb0; // float
		constexpr auto _stomachFullnessAtWhichToAutoCancelConsumptionOnce = 0xb4; // float
		constexpr auto _stomachFullnessAtWhichToEnableAutoConsumptionCancelationAgain = 0xb8; // float
		constexpr auto _minMaxStaminaModifierForFatigueSymptom = 0xbc; // float
		constexpr auto _stomachFullnessAtWhichBurpingStarts = 0xc0; // float
		constexpr auto _burpingInterval = 0xc4; // float
		constexpr auto _stomachFullnessSymptomClass = 0xc8; // UPrisonerBodySymptom_StomachFullness*
		constexpr auto _stomachFullnessSymptomCause = 0xd0; // UPrisonerBodySymptomCause*
		constexpr auto _fatigueSymptomClass = 0xe0; // UPrisonerBodySymptom_Fatigue*
		constexpr auto _fatigueSymptomCause = 0xe8; // UPrisonerBodySymptomCause_Fatigue*
		constexpr auto _burpingSymptomClass = 0xf8; // UPrisonerBodySymptom_Burping*
		constexpr auto _burpingSymptomCause = 0x100; // UPrisonerBodySymptomCause_Burping*
		constexpr auto _stomachRuptureWarningNotificationClass = 0x110; // UNotificationDescription*
		constexpr auto _stomachRuptureNotificationClass = 0x118; // UNotificationDescription*
	}

	namespace n_UMetabolismContainerSetDisplayPanel {
		constexpr auto _containerButtons = 0x290; // UTabGroup*
		constexpr auto _containerContents = 0x298; // UMetabolismLightItemDisplayPanel*
		constexpr auto _containerButtonClass = 0x2a0; // UContainerDisplay*
		constexpr auto _interChildDistrance = 0x2a8; // float
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UBreathingBarLungsWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto CriticalStateAnimation = 0x280; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFishingReelAnimInstance {
		constexpr auto _reelHandleRotationAnimationExplicitTime = 0x2b8; // float
		constexpr auto _owningPrisonerStance = 0x2bc; // EPrisonerStance
		constexpr auto _isOwningPrisonerInFirstPersonView = 0x2bd; // bool
		constexpr auto _isLocked = 0x2be; // bool
		constexpr auto _isCasting = 0x2bf; // bool
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UTrashNamedSliderWidget {
		constexpr auto ValueChangedTemp_DONOTUSE = 0x290; // FMulticastInlineDelegate
		constexpr auto _nameBox = 0x2a0; // USizeBox*
		constexpr auto _name = 0x2a8; // UTextBlock*
		constexpr auto _valueDisplayBox = 0x2b0; // USizeBox*
		constexpr auto _valueDisplay = 0x2b8; // UTextBlock*
		constexpr auto _slider = 0x2c0; // UTrashSliderWidget*
		constexpr auto _focusBackground = 0x2c8; // USelectionOverlayWidget*
		constexpr auto _label = 0x2d0; // FString
		constexpr auto _mainLabel = 0x2e0; // FText
		constexpr auto _defaultFont = 0x2f8; // FSlateFontInfo
		constexpr auto _stepSpeedTreshold = 0x3a8; // float
		constexpr auto _valueDisplayWidth = 0x3ac; // float
		constexpr auto _minValue = 0x3b0; // float
		constexpr auto _maxValue = 0x3b4; // float
		constexpr auto _stepCount = 0x3b8; // int32_t
		constexpr auto _decimalPlacesShown = 0x3bc; // int32_t
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UPrisonerBodySymptom_NeedToDefecate {
		constexpr auto _severityVsColonFullness = 0xb8; // FRuntimeFloatCurve
	}

	namespace n_UPrisonerUIDataImpl {
		constexpr auto SkillsUIData = 0x840; // UPrisonerSkillsUIData*
		constexpr auto BodySimulationUIData = 0x848; // UPrisonerBodySimulationUIData*
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UMissionPrompt {
		constexpr auto _description = 0x260; // UTextBlock*
	}

	namespace n_AFishSchoolActor {
		constexpr auto _currentState = 0x220; // EFishBehavior
		constexpr auto _capsuleComponent = 0x250; // UCapsuleComponent*
		constexpr auto _schoolInstancedStaticMeshComponent = 0x258; // UFishInstancedStaticMeshComponent*
		constexpr auto _minDistanceToTarget = 0x28c; // float
		constexpr auto _boundsInflation = 0x290; // float
		constexpr auto _findPathBypassMultiplier = 0x294; // float
		constexpr auto _maxTimesSameDestinationAllowed = 0x298; // int32_t
		constexpr auto _maxTimePerDestinationMultiplier = 0x29c; // float
		constexpr auto _schoolMovementRecoveryTurningSpeed = 0x2a4; // float
		constexpr auto _schoolMovementRecoveryAcceleration = 0x2a8; // float
		constexpr auto _schoolMovementRecoveryDeceleration = 0x2ac; // float
		constexpr auto _schoolCloseToSurfaceTurningSpeed = 0x2b0; // float
		constexpr auto _schoolCloseToSurfaceAcceleration = 0x2b4; // float
		constexpr auto _schoolCloseToSurfaceDeceleration = 0x2b8; // float
		constexpr auto _surfaceOffset = 0x2bc; // float
		constexpr auto _upperForbiddenZoneDepthPercentage = 0x2c0; // float
		constexpr auto _swimmingDepthPercentage = 0x2c4; // float
		constexpr auto _lowerForbiddenZoneDepthPercentage = 0x2c8; // float
		constexpr auto _waterParticles = 0x2d0; // UParticleSystem*
		constexpr auto _waterParticlesInterval = 0x2d8; // float
		constexpr auto _waterParticlesComponent = 0x2e0; // UParticleSystemComponent*
		constexpr auto _forcedNumberOfGroups = 0x2ec; // int32_t
		constexpr auto _groupSpeed = 0x2f0; // float
		constexpr auto _groupSeparationSpeed = 0x2f4; // float
		constexpr auto _groupCatchUpSpeed = 0x2f8; // float
		constexpr auto _groupSeparationDistance = 0x2fc; // float
		constexpr auto _groupSeparationTime = 0x304; // float
		constexpr auto _minNumberOfFish = 0x308; // int32_t
		constexpr auto _maxNumberOfFish = 0x30c; // int32_t
		constexpr auto _maxFishDistance = 0x314; // float
		constexpr auto _fishSeparationDistance = 0x31c; // float
		constexpr auto _fishSeparationTime = 0x320; // float
		constexpr auto _fishTurnSpeedRangeModifier = 0x328; // float
		constexpr auto _fishMinScale = 0x32c; // float
		constexpr auto _fishMaxScale = 0x330; // float
		constexpr auto _fishNormalSpeed = 0x334; // float
		constexpr auto _fishSeparationSpeed = 0x338; // float
		constexpr auto _fishCatchUpSpeed = 0x33c; // float
		constexpr auto _fishMaxSpeed = 0x340; // float
		constexpr auto _fishAcceleration = 0x344; // float
		constexpr auto _fishDeceleration = 0x348; // float
		constexpr auto _moveToLocationRep = 0x398; // FVector
		constexpr auto _behaviorMap = 0x3b0; // TMap<EFishBehavior, FFishStateParameters>
		constexpr auto _randomMovementExtent = 0x400; // FVector
		constexpr auto _fleeingDistanceFromEnemy = 0x40c; // float
		constexpr auto _fleeingPathLength = 0x410; // float
		constexpr auto _returnToNormalBehaviorDistance = 0x414; // float
		constexpr auto _schoolInternalMovementRelevancyDistanceSquared = 0x418; // float
		constexpr auto _fadeInTime = 0x42c; // float
		constexpr auto _fadeOutTime = 0x434; // float
	}

	namespace n_ARackItem {
		constexpr auto _lockStaticMesh = 0x870; // UStaticMesh*
	}

	namespace n_AWeaponAttachmentScope {
		constexpr auto ScopeViewOffset = 0x7f8; // FVector
		constexpr auto ScopeLensPostProcess = 0x808; // UMaterialInterface*
		constexpr auto LensZoomParameterName = 0x810; // FName
		constexpr auto FrontFocalPlane = 0x818; // bool
		constexpr auto HasCrosshairParallax = 0x819; // bool
		constexpr auto ScopeViewMesh = 0x820; // UStaticMesh*
		constexpr auto ScopeViewLensMesh = 0x828; // UStaticMesh*
		constexpr auto _canToggleDownTheSightsMode = 0x830; // bool
		constexpr auto TextRenderTarget = 0x838; // UTextureRenderTarget2D*
		constexpr auto WeaponScopeWidget = 0x840; // UWeaponScopeWidget*
		constexpr auto GlassCenterSocketName = 0x848; // FName
		constexpr auto WindageInitialOffset = 0x850; // int32_t
		constexpr auto WindageClickAudioEvent = 0x858; // UAkAudioEvent*
		constexpr auto _scopableItemComponent = 0x860; // UScopeableItemComponent*
		constexpr auto _scopeViewMesh = 0x868; // UStaticMeshComponent*
		constexpr auto _scopeViewLensMesh = 0x870; // UStaticMeshComponent*
		constexpr auto _fakeGlassMinOpacity = 0x878; // float
		constexpr auto _displayBrightnessMultiplier = 0x8ec; // float
	}

	namespace n_UWheelBarrowMountSlot {
		constexpr auto _mountAudioEvent = 0xb8; // UAkAudioEvent*
		constexpr auto _mountPriority = 0xc0; // int32_t
		constexpr auto _mountUnmountDuration = 0xc4; // float
		constexpr auto _entryPoints = 0xc8; // TArray<FMountSlotEntryPoint>
		constexpr auto _unmountAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto _mountingMotionIntensity = 0xe0; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xe1; // EMotionIntensity
		constexpr auto _mountee = 0xe8; // UObject*
		constexpr auto _reservee = 0xf0; // UObject*
		constexpr auto _interactionZoneMaterials = 0xf8; // TArray<UPhysicalMaterial*>
	}

	namespace n_AWeapon {
		constexpr auto AttachmentAdded = 0x7e8; // FMulticastInlineDelegate
		constexpr auto AttachmentRemoved = 0x7f8; // FMulticastInlineDelegate
		constexpr auto SkeletalMesh = 0x838; // USkeletalMeshComponent*
		constexpr auto WeaponFiringStateType = 0x840; // EWeaponFiringStateType
		constexpr auto TempWeaponStateFiringAutomatic = 0x848; // UWeaponStateFiring*
		constexpr auto TempWeaponStateFiringSemiAutomatic = 0x850; // UWeaponStateFiring*
		constexpr auto TempWeaponStateFiringManual = 0x858; // UWeaponStateFiring*
		constexpr auto TempWeaponStateFiringBurst = 0x860; // UWeaponStateFiring*
		constexpr auto TempWeaponStateActiveManualFiring = 0x868; // UWeaponStateActiveManualFiring*
		constexpr auto FiringState = 0x870; // UWeaponStateFiring*
		constexpr auto SupportedFiringModes = 0x878; // TArray<EWeaponFiringMode>
		constexpr auto CartridgeMeshComponents = 0x888; // TArray<UStaticMeshComponent*>
		constexpr auto ReloadActionSequenceClasses = 0x898; // TArray<UWeaponActionReloadSequence*>
		constexpr auto UnloadAmmoActionSequenceClasses = 0x8a8; // TArray<UWeaponActionUnloadAmmoSequence*>
		constexpr auto CheckAmmoActionSequenceClasses = 0x8b8; // TArray<UWeaponActionCheckAmmoSequence*>
		constexpr auto ReloadActionSequences = 0x8c8; // TArray<UWeaponActionReloadSequence*>
		constexpr auto ClearMalfunctionActionSequences = 0x8d8; // TArray<UWeaponActionClearMalfunctionSequence*>
		constexpr auto UnloadAmmoActionSequences = 0x8e8; // TArray<UWeaponActionUnloadAmmoSequence*>
		constexpr auto CheckAmmoActionSequences = 0x8f8; // TArray<UWeaponActionCheckAmmoSequence*>
		constexpr auto AmmunitionTags = 0x908; // FGameplayTagContainer
		constexpr auto DefaultAmmunitionItemClass = 0x928; // AAmmunitionItem*
		constexpr auto RequiredAmmoForShot = 0x930; // int32_t
		constexpr auto MaxLoadedAmmo = 0x934; // int32_t
		constexpr auto InitialAmmo = 0x938; // int32_t
		constexpr auto InternalMagazineCapacity = 0x93c; // int32_t
		constexpr auto UseChamberAsInternalMagazine = 0x940; // bool
		constexpr auto BurstShotsCount = 0x944; // int32_t
		constexpr auto IgnoreProceduralDownTheSightFiringAnimation = 0x948; // bool
		constexpr auto FireAnimation = 0x950; // UAnimMontage*
		constexpr auto FireAnimationLastRound = 0x958; // UAnimMontage*
		constexpr auto FireAnimationBody = 0x960; // UAnimMontage*
		constexpr auto FirstPersonFireAnimationBody = 0x968; // UAnimMontage*
		constexpr auto FireAutomaticAnimationBody = 0x970; // UAnimMontage*
		constexpr auto BodyWeaponAnimationChamber = 0x978; // FBodyWeaponAnimation
		constexpr auto CheckFiringModeAnimationBody = 0x988; // UAnimMontage*
		constexpr auto ChangeFiringModeAnimationBody = 0x990; // UAnimMontage*
		constexpr auto AttachmentsAnimations = 0x998; // TMap<AWeaponAttachment*, FWeaponAttachmentAnimations>
		constexpr auto MuzzleSocketName = 0x9e8; // FName
		constexpr auto GripCorrectionSocketName = 0x9f0; // FName
		constexpr auto AimingDownTheSightsCenterSocketName = 0x9f8; // FName
		constexpr auto EjectCasingSocketName = 0xa00; // FName
		constexpr auto IgnoreSupportingHandIK = 0xa08; // bool
		constexpr auto SupportingHandIKSocketName = 0xa0c; // FName
		constexpr auto SupportingHandIKLocation = 0xa14; // FVector
		constexpr auto AimingDownTheSightsLocationOffset = 0xa20; // FVector
		constexpr auto HolsteredOnPrisonerLeftOffset = 0xa30; // FTransform
		constexpr auto HolsteredOnPrisonerRightOffset = 0xa60; // FTransform
		constexpr auto UseWeaponFOVWhileScoping = 0xa90; // bool
		constexpr auto WeaponFOVWhileScoping = 0xa94; // float
		constexpr auto WeaponCameraOffsetWhileScoping = 0xa98; // FVector
		constexpr auto OffsetPerAspectRatioWhileScoping = 0xaa8; // FRuntimeFloatCurve
		constexpr auto IgnoreZeroRangeChange = 0xb30; // bool
		constexpr auto ZeroRange = 0xb34; // int32_t
		constexpr auto ZeroRangeStep = 0xb38; // int32_t
		constexpr auto ZeroRangeMax = 0xb3c; // int32_t
		constexpr auto InstantHitImpactEffects = 0xb40; // UProjectileImpactEffects*
		constexpr auto FieldOfView = 0xb48; // float
		constexpr auto DepthOfFieldFocalDistance = 0xb4c; // float
		constexpr auto DepthOfFieldFstop = 0xb50; // float
		constexpr auto ObstaclesDetectionOffset = 0xb54; // float
		constexpr auto UseFiringModeBoneRotation = 0xb58; // bool
		constexpr auto FiringModeBoneRotations = 0xb5c; // FRotator [0x3]
		constexpr auto PostProcessSettings = 0xb80; // FPostProcessSettings
		constexpr auto RelaxedGripCorrectionAnimationPose = 0x10d0; // UAnimSequenceBase* [0x4]
		constexpr auto AimingHipAnimationPose = 0x10f0; // UAnimSequenceBase* [0x4]
		constexpr auto AimingDownTheSightsAnimationPose = 0x1110; // UAnimSequenceBase* [0x4]
		constexpr auto AimingDownTheSightsStillAnimationPose = 0x1130; // UAnimSequenceBase* [0x4]
		constexpr auto AimingDownTheSightsWalkingAnimationPose = 0x1150; // UAnimSequenceBase* [0x4]
		constexpr auto AimingDownTheSightsLimpingWalkingAnimationPose = 0x1170; // UAnimSequenceBase* [0x4]
		constexpr auto WeaponAimOffsets = 0x1190; // UBlendSpace* [0x7]
		constexpr auto WeaponCategory = 0x11c8; // EWeaponCategory
		constexpr auto IgnoreAimingSpread = 0x11c9; // bool
		constexpr auto UseCustomWeaponSpreadData = 0x11ca; // bool
		constexpr auto WeaponSpreadData = 0x11cc; // FWeaponSpreadData
		constexpr auto UseCustomWeaponViewKickData = 0x120c; // bool
		constexpr auto WeaponViewKickData = 0x1210; // FWeaponViewKickData
		constexpr auto ViewKickMultiplier = 0x1228; // float
		constexpr auto MaxRecoilOffset = 0x122c; // float
		constexpr auto RecoilRecoverySpeed = 0x1230; // float
		constexpr auto MuzzleEffectsScaleDistanceStart = 0x1234; // float
		constexpr auto MuzzleEffectsScaleDistanceRange = 0x1238; // float
		constexpr auto MuzzleEffectsScaleByDistanceFactor = 0x123c; // float
		constexpr auto ChamberBulletDelay = 0x1240; // float
		constexpr auto ChamberBulletAutomatically = 0x1244; // bool
		constexpr auto ChamberBulletWhenMagazineIsAttached = 0x1245; // bool
		constexpr auto DamagePerShot = 0x1248; // float
		constexpr auto TestWeapon = 0x124c; // bool
		constexpr auto WornOutFiringAnimations = 0x1250; // TArray<FFireAnimationData>
		constexpr auto CanBeInspectedWhenMalfunctioned = 0x1260; // bool
		constexpr auto InspectModeAnimation = 0x1268; // UAnimMontage*
		constexpr auto UseCustomMalfunctionChances = 0x1270; // bool
		constexpr auto MalfunctionChances = 0x1274; // FWeaponMalfunctionChances
		constexpr auto StovePipeSocketName = 0x12ac; // FName
		constexpr auto StovePipeMesh = 0x12b8; // UStaticMesh*
		constexpr auto DoubleFeedSocketName = 0x12c0; // FName
		constexpr auto DoubleFeedMesh = 0x12c8; // UStaticMesh*
		constexpr auto ShouldClearInspectModeWhenClearingMalfunction = 0x12d0; // bool
		constexpr auto ClearMalfunctionSequenceClasses = 0x12d8; // TArray<UWeaponActionClearMalfunctionSequence*>
		constexpr auto MalfunctionsData = 0x12e8; // TMap<EWeaponMalfunction, FWeaponMalfunctionData>
		constexpr auto DTSModeLerpDurationIn = 0x1338; // float
		constexpr auto DTSModeLerpDurationOut = 0x133c; // float
		constexpr auto DownTheSightsModeLerpCurveOverride = 0x1340; // UCurveFloat*
		constexpr auto _currentState = 0x1348; // UWeaponState*
		constexpr auto _activeState = 0x1350; // UWeaponState*
		constexpr auto _equippingState = 0x1358; // UWeaponStateEquipping*
		constexpr auto _unequippingStateDefault = 0x1360; // UWeaponState*
		constexpr auto _unequippingState = 0x1368; // UWeaponState*
		constexpr auto _inactiveState = 0x1370; // UWeaponState*
		constexpr auto _chamberBulletState = 0x1378; // UWeaponState*
		constexpr auto _reloadState2 = 0x1380; // UWeaponStateReload*
		constexpr auto _clearMalfunctionState = 0x1388; // UWeaponStateClearMalfunction*
		constexpr auto _unloadAmmoState = 0x1390; // UWeaponStateUnloadAmmo*
		constexpr auto _checkAmmoState = 0x1398; // UWeaponStateCheckAmmo*
		constexpr auto _muzzleEffectsSpawnType = 0x13a0; // EWeaponMuzzleEffectsSpawType
		constexpr auto _muzzlePS = 0x13a8; // UParticleSystem*
		constexpr auto _suppressorMuzzlePS = 0x13b0; // UParticleSystem*
		constexpr auto _muzzlePSC = 0x13b8; // UParticleSystemComponent*
		constexpr auto _smokeAfterShotFiredPS = 0x13c0; // UParticleSystem*
		constexpr auto _smokeAfterShotFiredPSC = 0x13c8; // UParticleSystemComponent*
		constexpr auto _ejectCasingPS = 0x13d0; // UParticleSystem*
		constexpr auto _ejectLiveRoundPS = 0x13d8; // UParticleSystem*
		constexpr auto _weaponOwner = 0x13e0; // APrisoner*
		constexpr auto _loadedAmmoData = 0x13e8; // TArray<FAmmunitionData>
		constexpr auto _shouldOverrideUseMuzzleDirectionForShooting = 0x13fa; // bool
		constexpr auto _useMuzzleDirectionForShootingOverride = 0x13fb; // bool
		constexpr auto _projectileTargetLocationOverride = 0x13fc; // TWeakObjectPtr<AActor>
		constexpr auto _firingMode = 0x1474; // EWeaponFiringMode
		constexpr auto _weaponAttachmentsReplicated = 0x1488; // TArray<AWeaponAttachment*>
		constexpr auto _internalMagazineAmmoData = 0x14c0; // TArray<FAmmunitionData>
		constexpr auto _usedAmmoCount = 0x14d0; // int32_t
		constexpr auto _shouldPlayChamberOpenedIdle = 0x14d5; // bool
		constexpr auto _isInGameEvent = 0x14e5; // bool
		constexpr auto _fireSingleShotAudioEvent = 0x14e8; // UAkAudioEvent*
		constexpr auto _startAutoFireAudioEvent = 0x14f0; // UAkAudioEvent*
		constexpr auto _stopAutoFireAudioEvent = 0x14f8; // UAkAudioEvent*
		constexpr auto _suppressorFireSingleShotAudioEvent = 0x1500; // UAkAudioEvent*
		constexpr auto _suppressorStartAutoFireAudioEvent = 0x1508; // UAkAudioEvent*
		constexpr auto _suppressorStopAutoFireAudioEvent = 0x1510; // UAkAudioEvent*
		constexpr auto _improvisedSuppressorFireSingleShotAudioEvent = 0x1518; // UAkAudioEvent*
		constexpr auto _improvisedSuppressorStartAutoFireAudioEvent = 0x1520; // UAkAudioEvent*
		constexpr auto _improvisedSuppressorStopAutoFireAudioEvent = 0x1528; // UAkAudioEvent*
		constexpr auto _noAmmoAudioEvent = 0x1530; // UAkAudioEvent*
		constexpr auto _dryFireUncockedAudioEvent = 0x1538; // UAkAudioEvent*
		constexpr auto _zeroRangeClickAudioEvent = 0x1540; // UAkAudioEvent*
		constexpr auto _changeFiringModeAudioEvent = 0x1548; // UAkAudioEvent*
		constexpr auto _onMalfunctionAudioEvent = 0x1550; // UAkAudioEvent*
		constexpr auto _switchADSStateAudioEvent = 0x1558; // UAkAudioEvent*
		constexpr auto _indoorSmallHearingDamageAudioEvent = 0x1560; // UAkAudioEvent*
		constexpr auto _indoorMediumHearingDamageAudioEvent = 0x1568; // UAkAudioEvent*
		constexpr auto _indoorLargeHearingDamageAudioEvent = 0x1570; // UAkAudioEvent*
		constexpr auto _outdoorLargeHearingDamageAudioEvent = 0x1578; // UAkAudioEvent*
		constexpr auto _makeNoiseLoudness = 0x1580; // float
		constexpr auto _staminaDrainMultiplier = 0x1594; // float
		constexpr auto _malfunction = 0x15a4; // EWeaponMalfunction
		constexpr auto _behaviourMode = 0x15a5; // EWeaponBehaviourMode
		constexpr auto _loadedAmmunitionItemClass = 0x15c8; // UObject*
		constexpr auto _loadedProjectileClass = 0x15d8; // AProjectile*
		constexpr auto _defaultProjectileClass = 0x15e0; // AProjectile*
		constexpr auto _totalControllerPitchAmountToAdd = 0x15f4; // float
		constexpr auto _controllerPitchAddTimeFrame = 0x15f8; // float
		constexpr auto _ownerWeaponStateSyncData = 0x2d80; // FWeaponStateSyncData
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UUI_DialogueContainerWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto HideAvatarAnimation = 0x288; // UWidgetAnimation*
		constexpr auto ShowAvatarAnimation = 0x290; // UWidgetAnimation*
		constexpr auto _avatarImage = 0x298; // UImage*
		constexpr auto _avatarRetainer = 0x2a0; // URetainerBox*
		constexpr auto _whiteLine = 0x2a8; // UImage*
		constexpr auto _time = 0x2b0; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UAlignObjectsToolProperties {
		constexpr auto AlignType = 0x60; // EAlignObjectsAlignTypes
		constexpr auto AlignTo = 0x64; // EAlignObjectsAlignToOptions
		constexpr auto BoxPosition = 0x68; // EAlignObjectsBoxPoint
		constexpr auto bAlignX = 0x6c; // bool
		constexpr auto bAlignY = 0x6d; // bool
		constexpr auto bAlignZ = 0x6e; // bool
	}

	namespace n_UDiffusionSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bPreserveUVs = 0x68; // bool
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAnimal2MovementComponent {
		constexpr auto GroundSlopeRotationSpeedDegrees = 0xc18; // float
		constexpr auto CorrectServerReceivedZ = 0xc1c; // bool
	}

	namespace n_UWeaponActionClearMalfunctionSequence {
		constexpr auto SortIndex = 0x28; // int32_t
		constexpr auto MalfunctionType = 0x2c; // EWeaponMalfunction
		constexpr auto Description = 0x30; // FText
		constexpr auto CircularMenuSegmentInfo = 0x48; // UCircularMenuSegmentWeaponMalfunctionInfo*
		constexpr auto Malfunctions = 0x50; // TMap<EWeaponMalfunction, FClearMalfunctionData>
		constexpr auto CanBeInterrupted = 0xa0; // bool
		constexpr auto AllowBeginFiringSequence = 0xa1; // bool
	}

	namespace n_AGuardedZoneManager {
		constexpr auto _sprite = 0x220; // UBillboardComponent*
		constexpr auto _sentrySpawners = 0x228; // TArray<ASentrySpawner2*>
		constexpr auto _sentrySpawnerDescriptions = 0x238; // TArray<FSentrySpawnerDescription>
	}

	namespace n_UQuickAccessBarWidget {
		constexpr auto _quickAccessItemContainers = 0x278; // TArray<UQuickAccessItemWidget*>
	}

	namespace n_UPrisonerAnimInstance_Airplane {
		constexpr auto _isDriver = 0x2b8; // bool
		constexpr auto _pitchAmount = 0x2bc; // float
		constexpr auto _rollAmount = 0x2c0; // float
		constexpr auto _yawAmount = 0x2c4; // float
		constexpr auto _driverIdleAnimation = 0x2c8; // UBlendSpace*
		constexpr auto _passengerIdleAnimation = 0x2d0; // UBlendSpace*
	}

	namespace n_UVDMeshClothComponent {
		constexpr auto HullMesh = 0x678; // UStaticMesh*
		constexpr auto StretchStiffness = 0x680; // float
		constexpr auto BendStiffness = 0x684; // float
		constexpr auto Mass = 0x688; // float
		constexpr auto DragCoefficient = 0x68c; // float
		constexpr auto PreserveVolume = 0x690; // bool
		constexpr auto CurrentVolume = 0x694; // float
		constexpr auto OverrideRestVolume = 0x698; // float
		constexpr auto UseVertexColorDataForSetup = 0x6a0; // char : 1
		constexpr auto MaxBendConstraintDistance = 0x6a4; // float
		constexpr auto StretchConstraints = 0x6d0; // TArray<UVDParticleSpringConstraint*>
		constexpr auto BendConstraints = 0x6e0; // TArray<UVDParticleSpringConstraint*>
		constexpr auto VolumeConstraint = 0x6f0; // UVDMeshVolumeConstraint*
	}

	namespace n_UAdminCommand {
		constexpr auto _verb = 0x28; // FString
		constexpr auto _argumentDescriptions = 0x38; // TArray<FAdminCommandArgumentDescription>
		constexpr auto _numberOfRequiredArguments = 0x48; // int32_t
		constexpr auto _isEnabled = 0x4c; // bool
		constexpr auto _isEnabledInShippingBuild = 0x4d; // bool
		constexpr auto _isAdminStatusRequired = 0x4e; // bool
		constexpr auto _isDeveloperStatusRequired = 0x4f; // bool
		constexpr auto _shouldExecuteOnServer = 0x50; // bool
		constexpr auto _shouldExecuteOnClient = 0x51; // bool
		constexpr auto _shouldDisableSingleplayerAchievementsIfExecuted = 0x52; // bool
		constexpr auto _description = 0x58; // FString
	}

	namespace n_UWheelBarrowPassengerMountSlot {
		constexpr auto _socketName = 0x108; // FName
		constexpr auto _idleAnimation = 0x110; // UBlendSpace*
		constexpr auto _vehicleWeaponAimingParameters = 0x118; // UVehicleWeaponAimingParameters*
	}

	namespace n_AWeaponScope_ACOG_01_C {
		constexpr auto ScopeViewCollision = 0x950; // UDummyCollisionCapsule*
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x448; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x450; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x460; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x471; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x471; // char : 1
		constexpr auto bAllowRecycling = 0x471; // char : 1
		constexpr auto bAutoManageAttachment = 0x471; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x471; // char : 1
		constexpr auto bWarmingUp = 0x472; // char : 1
		constexpr auto bOverrideLODMethod = 0x472; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x472; // char : 1
		constexpr auto LODMethod = 0x47d; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x47e; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x480; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x490; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4b0; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4c0; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4d0; // bool
		constexpr auto OldPosition = 0x4d4; // FVector
		constexpr auto PartSysVelocity = 0x4e0; // FVector
		constexpr auto WarmupTime = 0x4ec; // float
		constexpr auto WarmupTickRate = 0x4f0; // float
		constexpr auto SecondsBeforeInactive = 0x4f8; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x500; // float
		constexpr auto ReplayClips = 0x520; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x538; // float
		constexpr auto AutoAttachParent = 0x590; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x598; // FName
		constexpr auto AutoAttachLocationRule = 0x5a0; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a1; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5a2; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5d0; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapSettings {
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UPolygonSelectionMechanic {
		constexpr auto Properties = 0x50; // UPolygonSelectionMechanicProperties*
		constexpr auto PreviewGeometryActor = 0x360; // APreviewGeometryActor*
		constexpr auto DrawnTriangleSetComponent = 0x368; // UTriangleSetComponent*
		constexpr auto HighlightedFaceMaterial = 0x3c0; // UMaterialInterface*
	}

	namespace n_UBaseBuildingItemComponent {
		constexpr auto _itemClass = 0x700; // AItem*
	}

	namespace n_UScopeableItemComponentState {
		constexpr auto CurrentZoomLevel = 0x40; // int32_t
	}

	namespace n_AWeaponAttachmentScopeRail {
		constexpr auto ScopeSocketName = 0x7e0; // FName
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x528; // FGuid
	}

	namespace n_A1H_Wooden_club_with_wire_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UUI_TrophyScreen_C {
		constexpr auto FishSizeIcon = 0x2c8; // UImage*
		constexpr auto FishWeightIcon = 0x2d0; // UImage*
		constexpr auto KeepButtonBorder = 0x2d8; // UImage*
		constexpr auto ReleaseButtonBorder = 0x2e0; // UImage*
		constexpr auto TopBackgroundImage = 0x2e8; // UImage*
		constexpr auto TopBackgroundImageBorder = 0x2f0; // UImage*
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UUpdateableNotificationDescription {
		constexpr auto notificationName = 0x58; // FString
	}

	namespace n_UMeleeSkill {
		constexpr auto AnimationsPreset = 0xa8; // UMeleeSkillAnimationsPreset*
		constexpr auto _noSkillExperienceAwards = 0xb0; // FMeleeSkillExperienceAwards
		constexpr auto _basicSkillExperienceAwards = 0xc0; // FMeleeSkillExperienceAwards
		constexpr auto _mediumSkillExperienceAwards = 0xd0; // FMeleeSkillExperienceAwards
		constexpr auto _advancedSkillExperienceAwards = 0xe0; // FMeleeSkillExperienceAwards
		constexpr auto _aboveAdvancedSkillExperienceAwards = 0xf0; // FMeleeSkillExperienceAwards
	}

	namespace n_UMetabolismBodyOverviewPanel {
		constexpr auto _symptomsScrollBox = 0x260; // UScrollBox*
		constexpr auto _humanBodyPanel = 0x268; // UMetabolismHumanBodyPanel*
		constexpr auto _symptomsBreadcrumb = 0x270; // URichTextBlock*
		constexpr auto _checkboxMuscles = 0x278; // UMetabolismTissueGroupCheckbox*
		constexpr auto _checkboxBones = 0x280; // UMetabolismTissueGroupCheckbox*
		constexpr auto _checkboxOrgans = 0x288; // UMetabolismTissueGroupCheckbox*
		constexpr auto _rpb_Hitpoints = 0x290; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Blood = 0x298; // UMetabolismRadialProgressBar*
		constexpr auto _treatmentMainOverlay = 0x2a0; // UOverlay*
		constexpr auto _clearSelectionButton = 0x2a8; // UButton*
		constexpr auto _selectedItemsOverlay = 0x2b0; // UOverlay*
		constexpr auto _itemSelectionReminderOverlay = 0x2b8; // UOverlay*
		constexpr auto _selectedItemsPanel = 0x2c0; // UMetabolismLightItemDisplayPanel*
		constexpr auto _activeConditionProgressBar = 0x2c8; // UMetabolismBodyEffectProgressBar*
		constexpr auto _treatButton = 0x2d0; // UButton*
		constexpr auto _symptomWidgetClass = 0x2d8; // UMetabolismSymptomTitle*
		constexpr auto _lowHPColorScheme = 0x2e0; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _midHPColorScheme = 0x360; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _highHPColorScheme = 0x3e0; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _lowBloodOxygenationColorScheme = 0x460; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _highBloodOxygenationColorScheme = 0x4e0; // FMetabolismRadialProgressBarColorScheme
	}

	namespace n_ADeathmatchGameEvent {
		constexpr auto _deathmatchParameters = 0x598; // FDeathmatchParameters
	}

	namespace n_UCircularProgressBarSprites_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto OuterCircleAlarmAnimation = 0x2f0; // UWidgetAnimation*
		constexpr auto BackgroundGradient = 0x2f8; // UImage*
		constexpr auto CentralBackgroundDark = 0x300; // UImage*
		constexpr auto Fill_Value_BCG = 0x308; // UImage*
		constexpr auto Icon = 0x310; // UImage*
		constexpr auto Image_219 = 0x318; // UImage*
		constexpr auto ImageSpentFiller = 0x320; // UImage*
		constexpr auto IndicatorOutlinesWhite = 0x328; // UImage*
		constexpr auto OuternWarningIndicator = 0x330; // UImage*
		constexpr auto ProgressTextBox = 0x338; // UHorizontalBox*
		constexpr auto TPercentage = 0x340; // UTextBlock*
		constexpr auto TPercentSign = 0x348; // UTextBlock*
		constexpr auto TTitle = 0x350; // UTextBlock*
		constexpr auto CircularMaterial = 0x358; // UMaterialInstanceDynamic*
		constexpr auto AlarmColor = 0x360; // FLinearColor
		constexpr auto NormalColor = 0x370; // FLinearColor
		constexpr auto outerCircleColor = 0x380; // FLinearColor
		constexpr auto circularBarColor = 0x390; // FLinearColor
		constexpr auto _currentPercentageToShow = 0x3a0; // float
		constexpr auto Image = 0x3a8; // UTexture2D*
		constexpr auto ShouldProgressTextBeVisible = 0x3b0; // bool
		constexpr auto TextColor = 0x3b4; // FLinearColor
		constexpr auto _speedChange = 0x3c4; // float
	}

	namespace n_UBaseVDComponent {
		constexpr auto SimulationInstance = 0x478; // UVDSimulation*
		constexpr auto VDSimObject = 0x480; // UVDSimulatedObject*
		constexpr auto Particles = 0x488; // TArray<UVDSimulatedParticle*>
		constexpr auto FrictionCoefficient = 0x498; // float
		constexpr auto RestitutionCoefficient = 0x49c; // float
		constexpr auto CollisionSettings = 0x4a0; // FVDCollisionSettings
		constexpr auto ParticleRadius = 0x4e0; // float
		constexpr auto AttachToRigids = 0x4e4; // bool
		constexpr auto AttachToParticles = 0x4e5; // bool
		constexpr auto AttachToParticlesConstraintStiffness = 0x4e8; // float
		constexpr auto EndOffset = 0x4ec; // float
		constexpr auto DetectionRadiusInflationFactor = 0x4f0; // float
		constexpr auto CreateTensionConstraintsForSimulatingRigids = 0x4f4; // bool
		constexpr auto bSnapToSimulatingAttachment = 0x4f5; // bool
		constexpr auto ManuallyAttachParticles = 0x4f6; // bool
		constexpr auto ParticleAttachments = 0x4f8; // TArray<FVDParticleAttachment>
		constexpr auto TensionForce = 0x508; // float
		constexpr auto TensionDampening = 0x50c; // float
		constexpr auto AdjustOtherParticleLocationsBasedOnAttachments = 0x510; // char : 1
		constexpr auto AffectedByGlobalWind = 0x510; // char : 1
		constexpr auto UseExplicitRigidBodyCollision = 0x510; // char : 1
		constexpr auto WindResistance = 0x514; // float
		constexpr auto AffectedByWindSources = 0x518; // TArray<FComponentReference>
		constexpr auto CheckForWindOccluders = 0x528; // bool
		constexpr auto MaxWindOccluderDistance = 0x52c; // float
		constexpr auto WindOccluderTraceSettings = 0x530; // FVDCollisionSettings
		constexpr auto OnSimulationDataCreated = 0x570; // FMulticastInlineDelegate
		constexpr auto OnSimulationSync = 0x580; // FMulticastInlineDelegate
		constexpr auto ShowParticles = 0x590; // char : 1
		constexpr auto GravityScale = 0x594; // float
		constexpr auto MinConstraintDistance = 0x598; // float
		constexpr auto SimulateOnlyWhenRendered = 0x59c; // bool
		constexpr auto SimulationToggleThreshold = 0x5a0; // float
		constexpr auto EnableParticleToParticleCollisions = 0x5a4; // char : 1
		constexpr auto ConsiderInnerCollisions = 0x5a4; // char : 1
		constexpr auto SkipRelativeVelocityCheckDuringRigidBodyCollisions = 0x5a4; // char : 1
		constexpr auto bNotifyOnVDCollision = 0x5a5; // char : 1
		constexpr auto OnVDCollisionEvent = 0x5a8; // FMulticastInlineDelegate
		constexpr auto PendingCollisionNotifications = 0x5b8; // TMap<UVDSimulatedParticle*, FVDCollision>
		constexpr auto ConstraintsToOtherParticles = 0x628; // TArray<UVDParticleSpringConstraint*>
		constexpr auto bUseLocationCache = 0x660; // char : 1
		constexpr auto bApplyCachedStartLocationBeforeAttachToRigids = 0x660; // char : 1
		constexpr auto CachedStartLocations = 0x668; // TArray<FVDCachedParticleStartLocation>
	}

	namespace n_UAudioDeviceDisplay {
		constexpr auto _deviceName = 0x260; // UTextBlock*
	}

	namespace n_ABowAttachmentStabilizer {
		constexpr auto _shakinessModifier = 0x7e8; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_AConZBaseManager {
		constexpr auto _damageEventProcessingPeriod = 0x280; // float
		constexpr auto _decayProcessingPeriod = 0x284; // float
		constexpr auto _flagOvertakePeriod = 0x288; // float
		constexpr auto _baseInteractionsPeriod = 0x28c; // float
		constexpr auto _baseClass = 0x290; // AConZBase*
		constexpr auto _baseElementClass = 0x298; // AConZBaseElement*
		constexpr auto _flagAreaVisualizerClass = 0x2a0; // AFlagAreaVisualizer*
		constexpr auto _initialBaseSize = 0x2a8; // FVector2D
		constexpr auto _flagInfluenceRadius = 0x2b0; // float
		constexpr auto _flagOvertakeDuration = 0x2b4; // float
		constexpr auto _maxBaseBuildingHeight = 0x2b8; // float
		constexpr auto _shortRepairDuration = 0x2bc; // FConZBaseRepairAreaDuration
		constexpr auto _mediumRepairDuration = 0x2c4; // FConZBaseRepairAreaDuration
		constexpr auto _longRepairDuration = 0x2cc; // FConZBaseRepairAreaDuration
		constexpr auto _useBuildingRestrictions = 0x2e5; // bool
		constexpr auto _disableBaseBuilding = 0x2e6; // bool
		constexpr auto _bases = 0x2f0; // TMap<int64_t, AConZBase*>
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UDataSingleton {
		constexpr auto ImpulseMultipliers = 0x28; // TArray<FProjectileImpulseMultiplier>
		constexpr auto CrosshairIconUp = 0x38; // FCanvasIcon
		constexpr auto CrosshairIconDown = 0x50; // FCanvasIcon
		constexpr auto CrosshairIconLeft = 0x68; // FCanvasIcon
		constexpr auto CrosshairIconRight = 0x80; // FCanvasIcon
		constexpr auto CrosshairIconCenter = 0x98; // FCanvasIcon
		constexpr auto CrosshairIconCenterThrowing = 0xb0; // FCanvasIcon
		constexpr auto CrosshairBlockedIcon = 0xc8; // FCanvasIcon
		constexpr auto BowSpreadCircle = 0xe0; // FCanvasIcon
		constexpr auto SingleFireIcon = 0xf8; // UTexture2D*
		constexpr auto AutoFireIcon = 0x100; // UTexture2D*
		constexpr auto BurstFireIcon = 0x108; // UTexture2D*
		constexpr auto WeaponSpreadBase = 0x110; // float
		constexpr auto WeaponSpreadData = 0x114; // FWeaponSpreadData [0x9]
		constexpr auto BowArrowDeviationDegreesAngleByStep = 0x354; // float
		constexpr auto WeaponViewKickData = 0x358; // FWeaponViewKickData [0x9]
		constexpr auto WeaponAimingAutoCorrectAngle = 0x430; // float
		constexpr auto WeaponMalfunctionProbabilityCurves = 0x438; // FWeaponMalfunctionProbabilityCurves
		constexpr auto UpperBoundStaminaAmountToDrain = 0x7f0; // float
		constexpr auto LowerBoundWeaponWeightForStaminaDrain = 0x7f4; // float
		constexpr auto UpperBoundWeaponWeightForStaminaDrain = 0x7f8; // float
		constexpr auto FOVMultiplierRange = 0x7fc; // FFloatInterval
		constexpr auto WeaponFOVWhileScoping = 0x804; // float
		constexpr auto DownTheSightsModeLerpCurve = 0x808; // UCurveFloat*
		constexpr auto WeaponFOVParameterCollection = 0x810; // UMaterialParameterCollection*
		constexpr auto LoadMagazineSpeedModifierSkillFactor = 0x818; // FFloatInterval
		constexpr auto LoadMagazineSpeedModifierDexterityFactor = 0x820; // FFloatInterval
		constexpr auto InteractIcon = 0x828; // FCanvasIcon
		constexpr auto BondageIcon = 0x840; // FCanvasIcon
		constexpr auto DefaultInputData = 0x858; // UInputDataAsset*
		constexpr auto Widgets = 0x860; // UDerivedWidgetsData*
		constexpr auto PlaceablePrimaryMatValid = 0x868; // UMaterialInterface*
		constexpr auto PlaceablePrimaryMatInvalid = 0x870; // UMaterialInterface*
		constexpr auto PlaceablePrimaryMatFriendlyFlag = 0x878; // UMaterialInterface*
		constexpr auto PlaceableOutlineMat = 0x880; // UMaterialInterface*
		constexpr auto PlaceableDepthMat = 0x888; // UMaterialInterface*
		constexpr auto PlaceableMaterialRadiusSphere = 0x890; // UMaterialInterface*
		constexpr auto WidgetMaterial = 0x898; // UMaterialInterface*
		constexpr auto DivingMaskItemTag = 0x8a0; // UBaseItemTag*
		constexpr auto ToolBoxItemTag = 0x8a8; // UBaseItemTag*
		constexpr auto MushroomItemTag = 0x8b0; // UBaseItemTag*
		constexpr auto AlcoholItemTag = 0x8b8; // UBaseItemTag*
		constexpr auto SoapItemTag = 0x8c0; // UBaseItemTag*
		constexpr auto AnimalSkinItemClass = 0x8c8; // AItem*
		constexpr auto TrapData = 0x8d0; // UTrapData*
		constexpr auto DogTagItemClass = 0x8d8; // ADogTagItem*
		constexpr auto ItemObstructionCollisionChannel = 0x8e0; // ECollisionChannel
		constexpr auto ShouldTraceComplexCollisionForItemObstruction = 0x8e1; // bool
		constexpr auto AssetsHiddenFromAdminCommands = 0x8e8; // TSet<FPrimaryAssetId>
		constexpr auto MissonDataGroup = 0x938; // UMissionDataGroup*
		constexpr auto DialogueData = 0x940; // UDialogueData*
		constexpr auto VoiceSoundClass = 0x948; // USoundClass*
		constexpr auto NetworkDataIdAsset = 0x950; // UNetworkDataIdAsset*
		constexpr auto WashClothesData = 0x958; // UWashClothesData*
		constexpr auto BuryData = 0x960; // UBuryData*
		constexpr auto SquadEmblemData = 0x968; // UEmblemData*
		constexpr auto ItemTetrisMaterial = 0x970; // UMaterialInterface*
		constexpr auto PhysicalSurfaceEffectsData = 0x978; // UPhysicalSurfacesEffectsData*
		constexpr auto ChestLockedIcon = 0x980; // UTexture2D*
		constexpr auto ChestUnlockedIcon = 0x988; // UTexture2D*
		constexpr auto ChestLockingSound = 0x990; // UAkAudioEvent*
		constexpr auto UIData = 0x998; // UGlobalUIData*
		constexpr auto WaterSplashParticleSystem = 0x9a0; // UParticleSystem*
		constexpr auto WaterSplashAudioEvent = 0x9a8; // UAkAudioEvent*
		constexpr auto MetabolismConsumptionDurations = 0x9b0; // TMap<FGameplayTag, float>
		constexpr auto MetabolismDigestionDurations = 0xa00; // TMap<FGameplayTag, FMetabolismDigestionDurationData>
		constexpr auto SurfaceHardnessData = 0xa50; // USurfaceHardnessData*
		constexpr auto DamageData = 0xa58; // UDamageData*
		constexpr auto DefaultDamageCustomizationClass = 0xa60; // UDamageCustomization*
		constexpr auto LandingDamageCustomizationClass = 0xa68; // UDamageCustomization*
		constexpr auto RainWaterResourceClass = 0xa70; // UGameResourceType*
		constexpr auto GameResourceMixingRules = 0xa78; // TArray<FGameResourceMixingRule>
		constexpr auto _noiseLevelValues = 0xb70; // float [0x6]
		constexpr auto _teamAttitudes = 0xb88; // FAITeamAttitudeData [0x6]
		constexpr auto _basePriceModifierPerTradeCategory = 0xc00; // float [0x1a]
		constexpr auto _baseSalePriceReductionModifierPerTradeCategory = 0xc68; // float [0x1a]
		constexpr auto _bankAccountInitialDeposit = 0xcd0; // int32_t
		constexpr auto _depotItemClass = 0xcd8; // ADepotItem*
		constexpr auto _vehicleLockItemClass = 0xce0; // AItem*
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UDcxVehicleNoDriveComponent {
		constexpr auto bUseRawInput = 0x240; // bool
		constexpr auto MaxDriveTorque = 0x244; // float
	}

	namespace n_UCraftingAvailableItemWidget {
		constexpr auto OnClicked = 0x278; // FMulticastInlineDelegate
		constexpr auto _isSelected = 0x288; // bool
		constexpr auto _isOptional = 0x289; // bool
		constexpr auto _optionalState = 0x28a; // EOptionalState
		constexpr auto _item = 0x290; // AItem*
		constexpr auto _clickSound = 0x298; // UAkAudioEvent*
	}

	namespace n_UPriceCategory {
		constexpr auto Price = 0x30; // float
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UPrisonerResponseIdle_StaminaInRange {
		constexpr auto StaminaRatioRange = 0x98; // FFloatRange
	}

	namespace n_UItemSpawnerComponent {
		constexpr auto ItemSpawnLimit = 0x1f8; // int32_t
		constexpr auto SpawnerMarkers = 0x200; // TArray<FItemSpawnerMarker>
		constexpr auto SpawnerGroupName = 0x210; // FString
	}

	namespace n_UPBCTT_BleedingInjury_StopBleeding {
		constexpr auto BleedingSeverityConstraint = 0x50; // FFloatRange
		constexpr auto TreatmentDurationPerSeverityLevel = 0x60; // TArray<float>
		constexpr auto TreatmentDurationPerUsePerSeverityLevel = 0x70; // TArray<float>
		constexpr auto StabilizationDurationReduction = 0x80; // float
		constexpr auto SkillData = 0x88; // FPBCTT_BleedingInjury_StopBleeding_SkillData [0x5]
	}

	namespace n_AFireplace1_C {
		constexpr auto BoxCollider = 0x8a0; // UBoxComponent*
		constexpr auto PointLight = 0x8a8; // UPointLightComponent*
	}

	namespace n_AConZGameState {
		constexpr auto RespawnSettings = 0x2e0; // URespawnSettings*
		constexpr auto AllowSectorRespawn = 0x2e8; // bool
		constexpr auto AllowShelterRespawn = 0x2e9; // bool
		constexpr auto AllowSquadmateRespawn = 0x2ea; // bool
		constexpr auto _craftingDatabase = 0x308; // UCraftingDatabase*
		constexpr auto _globalItemSpawner = 0x310; // UGlobalItemSpawner*
		constexpr auto _registeredCharacters = 0x338; // TArray<AConZCharacter*>
		constexpr auto _squads = 0x398; // TArray<AConZSquad*>
		constexpr auto _currentDroneTargetDispatcherMap = 0x3a8; // TMap<TWeakObjectPtr<AConZCharacter>, int32_t>
		constexpr auto _droneTargetDispatcherHistoryMap = 0x3f8; // TMap<TWeakObjectPtr<AConZCharacter>, int32_t>
		constexpr auto _droneTargetVisits = 0x448; // TMap<TWeakObjectPtr<AConZCharacter>, UDroneTargetData*>
		constexpr auto _ladderMarkersRegistryClass = 0x4a8; // ALadderMarkersRegistry*
		constexpr auto _ladderMarkersRegistry = 0x4b0; // ALadderMarkersRegistry*
		constexpr auto _waterSplineRegistryClass = 0x4b8; // AConZWaterSplineRegistry*
		constexpr auto _waterSplineRegistry = 0x4c0; // AConZWaterSplineRegistry*
		constexpr auto _replenishableResourceManager = 0x508; // UReplenishableResourceManager*
		constexpr auto _restorableMeshInstancesManager = 0x510; // URestorableMeshInstancesManager*
		constexpr auto _resourceLockingManager = 0x518; // UResourceLockingManager*
		constexpr auto _itemRegistry = 0x520; // UItemRegistry*
		constexpr auto _customZoneRegistry = 0x528; // UCustomZoneRegistry*
		constexpr auto _gameResourceContainerProxyRegistry = 0x530; // UGameResourceContainerProxyRegistry*
		constexpr auto _interactionFilterVolumeRegistry = 0x538; // UInteractionFilterVolumeRegistry*
		constexpr auto _staticDoorReplicator = 0x540; // UStaticDoorReplicator*
		constexpr auto _prisonerKillRegistry = 0x618; // TMap<FDbIntegerId, FDbIntegerId>
		constexpr auto _customMapBorderClass = 0x668; // ACustomMapBorder*
		constexpr auto _tournamentClass = 0x670; // ATournament*
		constexpr auto _customMapBorder = 0x678; // ACustomMapBorder*
		constexpr auto _tournament = 0x680; // ATournament*
		constexpr auto _areLockedLootContainersEnabled = 0x689; // bool
		constexpr auto _prisonerBodySimulationTimeDilation = 0x68c; // float
	}

	namespace n_UPrisonerBodyEffect {
		constexpr auto _tickInterval = 0x34; // float
	}

	namespace n_UPrisonerBuryComponent {
		constexpr auto _buryState = 0xc0; // EBuryState
	}

	namespace n_UFoodItemState {
		constexpr auto Temperature = 0xf8; // float
		constexpr auto EnvironmentTemperature = 0xfc; // float
		constexpr auto CookedAmount = 0x100; // float
		constexpr auto CookedQuality = 0x104; // float
		constexpr auto ItemOpened = 0x108; // bool
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UInAppPurchaseComponent {
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UWeightMapSetProperties {
		constexpr auto WeightMap = 0x60; // FName
		constexpr auto WeightMapsList = 0x68; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x78; // bool
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_URevolveOperatorFactory {
		constexpr auto RevolveTool = 0x30; // UDrawAndRevolveTool*
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UStandardSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UMovieSceneTakeSettings {
		constexpr auto HoursName = 0x28; // FString
		constexpr auto MinutesName = 0x38; // FString
		constexpr auto SecondsName = 0x48; // FString
		constexpr auto FramesName = 0x58; // FString
		constexpr auto SubFramesName = 0x68; // FString
		constexpr auto SlateName = 0x78; // FString
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UAdminCommand_SpawnItemEntity {
		constexpr auto _spawnOffset = 0x80; // FVector
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UWeaponAttachmentMagazineAnimInstance {
		constexpr auto _ammoCount = 0x2d0; // int32_t
		constexpr auto _hasAmmo = 0x2d4; // bool
		constexpr auto _isAttachedToWeapon = 0x2d5; // bool
		constexpr auto _ammoCountType = 0x2d6; // EMagazineAmmoCountType
	}

	namespace n_UAutoCrossbowMagazineAnimInstance {
		constexpr auto _followerBoneLocationOffset = 0x2e0; // float
	}

	namespace n_ADoubleDoor {
		constexpr auto Mesh1 = 0x408; // UMeshComponent*
	}

	namespace n_UItemAction {
		constexpr auto _description = 0x40; // UItemActionDescription*
	}

	namespace n_AMission {
		constexpr auto _activeObjective = 0x2b0; // AObjective*
		constexpr auto _missionObjectiveClasses = 0x2b8; // TArray<AObjective*>
		constexpr auto _missionObjectiveAssets = 0x2c8; // TMap<FString, AObjective*>
		constexpr auto _missionObjectives = 0x318; // TArray<AObjective*>
		constexpr auto _missionName = 0x328; // FText
		constexpr auto _missionCategory = 0x340; // FText
		constexpr auto _missionDescription = 0x358; // FText
		constexpr auto _missionType = 0x370; // EMissionType
		constexpr auto _missionOrdinalNumber = 0x374; // int32_t
		constexpr auto _missionState = 0x378; // EMissionState
		constexpr auto _missionFaction = 0x379; // EFaction
		constexpr auto _missionLevel = 0x380; // TSoftObjectPtr<UWorld>
		constexpr auto _missionRewards = 0x3a8; // FMissionReward
		constexpr auto _missionBannerImage = 0x3c0; // UTexture2D*
		constexpr auto _missionStartingLocations = 0x3c8; // TArray<TSoftObjectPtr<ALocationTrigger>>
		constexpr auto _intendedNumberOfPlayers = 0x3d8; // int32_t
		constexpr auto _missionCooldownTime = 0x3dc; // float
		constexpr auto _missionItemSpawnerClass = 0x3e8; // AMissionItemSpawner*
		constexpr auto _missionIntroDialogues = 0x3f0; // TArray<FDialogueInfo>
		constexpr auto _missionOutroSuccessDialogues = 0x400; // TArray<FDialogueInfo>
		constexpr auto _missionOutroFailDialogues = 0x410; // TArray<FDialogueInfo>
		constexpr auto _missionOutroBelatedDialogues = 0x420; // TArray<FDialogueInfo>
		constexpr auto _canInterruptDialogue = 0x430; // bool
	}

	namespace n_ADoubleSlidingDoorStatic {
		constexpr auto ClosedPositionComponent0 = 0x410; // USceneComponent*
		constexpr auto ClosedPositionComponent1 = 0x418; // USceneComponent*
		constexpr auto OpenPositionComponent0 = 0x420; // USceneComponent*
		constexpr auto OpenPositionComponent1 = 0x428; // USceneComponent*
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UAddPatchTool {
		constexpr auto ShapeSettings = 0x90; // UAddPatchToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_URadioProgram {
		constexpr auto CategoryClasses = 0x28; // TArray<URadioCategory*>
		constexpr auto Categories = 0x38; // TArray<URadioCategory*>
		constexpr auto _categoryIndex = 0x48; // int32_t
	}

	namespace n_UTraderPersonalityDataAsset {
		constexpr auto TraderPersistentId = 0x30; // FGuid
		constexpr auto HumanReadableTraderName = 0x40; // FString
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_UUI_SpawnMenuWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Border_2 = 0x280; // UBorder*
		constexpr auto ComaTitlePanel = 0x288; // UOverlay*
		constexpr auto CombatLabel = 0x290; // UBorder*
		constexpr auto CurrentFPText = 0x298; // UTextBlock*
		constexpr auto DeathTitlePanel = 0x2a0; // UOverlay*
		constexpr auto HealthCriticalLabel = 0x2a8; // UTextBlock*
		constexpr auto Image = 0x2b0; // UImage*
		constexpr auto Image_2 = 0x2b8; // UImage*
		constexpr auto Image_3 = 0x2c0; // UImage*
		constexpr auto Image_4 = 0x2c8; // UImage*
		constexpr auto Image_5 = 0x2d0; // UImage*
		constexpr auto LimtExceededLabel = 0x2d8; // UBorder*
		constexpr auto LocationOptions = 0x2e0; // UVerticalBox*
		constexpr auto NoAvailableLabel = 0x2e8; // UBorder*
		constexpr auto RandomLocation = 0x2f0; // UUI_SpawnChoiceWidget_C*
		constexpr auto RemainingFPText = 0x2f8; // UTextBlock*
		constexpr auto SectorLocation = 0x300; // UUI_SpawnChoiceWidget_C*
		constexpr auto ShelterLocation = 0x308; // UUI_SpawnChoiceWidget_C*
		constexpr auto SpawnInterface = 0x310; // UHorizontalBox*
		constexpr auto SquadLocation = 0x318; // UUI_SpawnChoiceWidget_C*
		constexpr auto SuddenDeathLabel = 0x320; // UBorder*
		constexpr auto Timer = 0x328; // UTextBlock*
		constexpr auto TimerLabel = 0x330; // UTextBlock*
		constexpr auto TimerPanel = 0x338; // UOverlay*
		constexpr auto TotalPricetext = 0x340; // UTextBlock*
		constexpr auto UI_SpawnSectorSelector = 0x348; // UUI_SpawnSectorSelector_C*
		constexpr auto WakeUpButton = 0x350; // UButton*
		constexpr auto WakeUpPanel = 0x358; // UOverlay*
		constexpr auto TotalPrice = 0x360; // int32_t
		constexpr auto CurrentFP = 0x364; // int32_t
		constexpr auto WakeUpTimer = 0x368; // float
		constexpr auto Revived = 0x36c; // bool
	}

	namespace n_UNameableItemComponent {
		constexpr auto _name = 0xd8; // FString
		constexpr auto _nameWidget = 0xe8; // TWeakObjectPtr<UItemStatusWidget>
		constexpr auto _editNameWidget = 0xf0; // TWeakObjectPtr<UChangeTextWidget>
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UPrisonerBodyCondition_Test {
		constexpr auto _severityVsElapsedTime = 0xa8; // FRuntimeFloatCurve
		constexpr auto _shouldBeRemovedWhenTimeElapses = 0x130; // bool
		constexpr auto _elapsedTime = 0x134; // float
	}

	namespace n_UUI_DoorSecurityUpgradeSlot_C {
		constexpr auto _backgroundImage_2 = 0x2f8; // UImage*
	}

	namespace n_AFireItem {
		constexpr auto _fuelCapacity = 0x7d8; // float
		constexpr auto _fuelDuration = 0x7dc; // float
		constexpr auto _burningSpeed = 0x7e0; // float
		constexpr auto _burningSpeedRain = 0x7e4; // float
		constexpr auto _heatSourceParameters = 0x7e8; // FHeatSourceParameters
		constexpr auto _startBurningAudioEvent = 0x810; // UAkAudioEvent*
		constexpr auto _stopBurningAudioEvent = 0x818; // UAkAudioEvent*
		constexpr auto _fireAudioComponent = 0x820; // UAkComponent*
		constexpr auto _fireParticlesComponent = 0x828; // UParticleSystemComponent*
		constexpr auto _touchDamage = 0x830; // float
		constexpr auto _isBurning = 0x834; // bool
		constexpr auto _burningStage = 0x840; // int32_t
	}

	namespace n_UUI_SquadEditor_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AcceptButton = 0x268; // UButton*
		constexpr auto BackgroundDropdownMenu = 0x270; // UUI_DropdownMenuWidget_C*
		constexpr auto BackgroundGrid = 0x278; // UUniformGridPanel*
		constexpr auto BackgroundPrimaryColorSelector = 0x280; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto BackgroundSecondaryColorSelector = 0x288; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto BackgroundSelector = 0x290; // UUI_DropdownMenuTextureSelectionWidget_C*
		constexpr auto BackgroundTertiaryColorSelector = 0x298; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto CancelButton = 0x2a0; // UButton*
		constexpr auto ColorDropdownMenu = 0x2a8; // UUI_DropdownMenuWidget_C*
		constexpr auto ColorGrid = 0x2b0; // UUniformGridPanel*
		constexpr auto EmblemBox = 0x2b8; // UVerticalBox*
		constexpr auto Image_2 = 0x2c0; // UImage*
		constexpr auto Image_3 = 0x2c8; // UImage*
		constexpr auto Image_4 = 0x2d0; // UImage*
		constexpr auto Image_5 = 0x2d8; // UImage*
		constexpr auto Image_8 = 0x2e0; // UImage*
		constexpr auto Image_9 = 0x2e8; // UImage*
		constexpr auto InformationBox = 0x2f0; // UVerticalBox*
		constexpr auto InformationBoxBG = 0x2f8; // UImage*
		constexpr auto InformationTextBox = 0x300; // UMultiLineEditableText*
		constexpr auto MessageBox = 0x308; // UVerticalBox*
		constexpr auto MessageBoxBG = 0x310; // UImage*
		constexpr auto MessageTextBox = 0x318; // UMultiLineEditableText*
		constexpr auto NameTextBox = 0x320; // UEditableTextBox*
		constexpr auto SymbolDropdownMenu = 0x328; // UUI_DropdownMenuWidget_C*
		constexpr auto SymbolGrid = 0x330; // UUniformGridPanel*
		constexpr auto SymbolPrimaryColorSelector = 0x338; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto SymbolSecondaryColorSelector = 0x340; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto SymbolSelector = 0x348; // UUI_DropdownMenuTextureSelectionWidget_C*
		constexpr auto SymbolTertiaryColorSelector = 0x350; // UUI_DropdownMenuColorSelectionWidget_C*
		constexpr auto UI_SquadEmblem = 0x358; // UUI_SquadEmblem_C*
		constexpr auto SymbolColumnCount = 0x360; // int32_t
		constexpr auto ColorRowCount = 0x364; // int32_t
		constexpr auto BackgroundColumnCount = 0x368; // int32_t
		constexpr auto MaxInformationLen = 0x36c; // int32_t
		constexpr auto MaxMessageLen = 0x370; // int32_t
	}

	namespace n_AKicmovaca_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UEditPivotTool {
		constexpr auto TransformProps = 0x98; // UEditPivotToolProperties*
		constexpr auto EditPivotActions = 0xa0; // UEditPivotToolActionPropertySet*
		constexpr auto ActiveGizmos = 0x178; // TArray<FEditPivotTarget>
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UPlaneCutTool {
		constexpr auto BasicProperties = 0x98; // UPlaneCutToolProperties*
		constexpr auto AcceptProperties = 0xa0; // UAcceptOutputProperties*
		constexpr auto CutPlaneOrigin = 0xa8; // FVector
		constexpr auto CutPlaneOrientation = 0xc0; // FQuat
		constexpr auto Previews = 0xd0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto MeshesToCut = 0xe0; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UCCAttributeSpinnerWidget {
		constexpr auto _valueTextBlock = 0x278; // UTextBlock*
		constexpr auto _increaseValueButton = 0x280; // UButton*
		constexpr auto _decreaseValueButton = 0x288; // UButton*
	}

	namespace n_UCustomZoneSettingsApplyNotification {
		constexpr auto _text = 0x260; // UTextBlock*
	}

	namespace n_AWeaponBow {
		constexpr auto InsertArrowAnimations = 0x2dd0; // FBodyWeaponAnimation
		constexpr auto RemoveArrowAnimations = 0x2de0; // FBodyWeaponAnimation
		constexpr auto UnableToDrawAnimations = 0x2df0; // FBodyWeaponAnimation
		constexpr auto DrawAnimations2 = 0x2e00; // FBodyWeaponAnimation [0x3]
		constexpr auto DrawWhileAnticipatingDrawAnimations2 = 0x2e30; // FBodyWeaponAnimation [0x3]
		constexpr auto CancelDrawAnimations2 = 0x2e60; // FBodyWeaponAnimation [0x3]
		constexpr auto LooseAnimations2 = 0x2e90; // FBodyWeaponAnimation [0x3]
		constexpr auto LooseLastShotAnimations2 = 0x2ec0; // FBodyWeaponAnimation [0x3]
		constexpr auto AimOffsets = 0x2ef0; // FWeaponBowAimOffsets [0x7]
		constexpr auto ArmsShakeAnimamtion = 0x2f98; // FWeaponBowArmsShake [0x4]
		constexpr auto DrawAnimations = 0x3058; // FBodyWeaponAnimation
		constexpr auto DrawWhileAnticipatingDrawAnimations = 0x3068; // FBodyWeaponAnimation
		constexpr auto CancelDrawAnimations = 0x3078; // FBodyWeaponAnimation
		constexpr auto LooseAnimations = 0x3088; // FBodyWeaponAnimation
		constexpr auto LooseLastShotAnimations = 0x3098; // FBodyWeaponAnimation
		constexpr auto WeaponAimingDownTheSightsAnimationPose = 0x30a8; // UAnimSequenceBase*
		constexpr auto WeaponAimingDownTheSightsStillAnimationPose = 0x30b0; // UAnimSequenceBase*
		constexpr auto AnticipateDrawState2 = 0x30b8; // UWeaponState*
		constexpr auto DrawState3 = 0x30c0; // UWeaponState*
		constexpr auto CancelFiringState = 0x30c8; // UWeaponState*
		constexpr auto AnticipateFiringState = 0x30d0; // UWeaponState*
		constexpr auto FireState = 0x30d8; // UWeaponState*
		constexpr auto FireAndInsertArrowState = 0x30e0; // UWeaponState*
		constexpr auto _fireNoArrowAudioEvent = 0x30e8; // UAkAudioEvent*
		constexpr auto _arrowSocketName = 0x30f0; // FName
		constexpr auto _muzzleVelocity = 0x30f8; // float
		constexpr auto _drawWeight = 0x30fc; // float
		constexpr auto _compoundBowFullDrawHoldTime = 0x3100; // float
		constexpr auto _armShakeTimerDecreaseRate = 0x3104; // float
		constexpr auto _damageOnUsage = 0x3108; // float
		constexpr auto _bowActiveState2 = 0x3110; // UWeaponState*
		constexpr auto _bowInsertArrowState = 0x3118; // UWeaponState*
		constexpr auto _bowRemoveArrowState = 0x3120; // UWeaponState*
		constexpr auto _bowFiringState2 = 0x3128; // UWeaponStateFiring*
		constexpr auto _bowState = 0x3160; // EWeaponBowState
		constexpr auto _weaponBowStateDataReplicated = 0x3164; // FWeaponBowStateDataReplicated
		constexpr auto _arrowMeshComponent = 0x3170; // UStaticMeshComponent*
		constexpr auto _projectileArrowData = 0x3178; // FProjectileArrowData
		constexpr auto _isCompound = 0x31e8; // bool
		constexpr auto _handTriggerMeshComponent = 0x31f0; // UStaticMeshComponent*
		constexpr auto _ignoreArrowStiffness = 0x31f8; // bool
		constexpr auto _letOff = 0x31fc; // float
		constexpr auto _handTriggerBoneName = 0x3200; // FName
	}

	namespace n_UAdminCommand_EnableOrDisableServer {
		constexpr auto _shouldEnableServer = 0x80; // bool
	}

	namespace n_UABP_Prisoner_FirstPersonAimRotation_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose = 0x2f8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x410; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x430; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x538; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x558; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool = 0x660; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x700; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x808; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x910; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x930; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose = 0x950; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xaa8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xad0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_5 = 0xaf8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0xc00; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xd08; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xe10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xf18; // FAnimNode_ModifyBone
		constexpr auto FirstPersonAimPitch = 0x1020; // float
		constexpr auto FirstPersonAimYawDelta = 0x1024; // float
		constexpr auto ShouldApplyArmsPitchCorrection = 0x1028; // bool
		constexpr auto stance = 0x1029; // EPrisonerStance
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_ABP_M1_Bayonet_C {
		constexpr auto MeleeAttackCollisionCapsuleKnife = 0x7e0; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleBayonet = 0x7e8; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UBruisingComponent {
		constexpr auto BruisingData = 0xb0; // UBruisingData*
		constexpr auto FadeBruises = 0xb8; // bool
		constexpr auto BruisesLifeTime = 0xbc; // float
		constexpr auto BruisesFadeUpdateInterval = 0xc0; // float
		constexpr auto _renderTargetByLayer = 0xc8; // UTextureRenderTarget2D* [0x3]
	}

	namespace n_UCircularMenuSegmentSubmenuInfo {
		constexpr auto SubmenuInfo = 0x80; // TArray<UCircularMenuSegmentInfo*>
		constexpr auto IndexOffset = 0x90; // float
		constexpr auto RequireSupporterPack = 0x94; // bool
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UDeformMeshPolygonsTransformProperties {
		constexpr auto DeformationStrategy = 0x60; // EGroupTopologyDeformationStrategy
		constexpr auto TransformMode = 0x61; // EQuickTransformerMode
		constexpr auto bSelectFaces = 0x62; // bool
		constexpr auto bSelectEdges = 0x63; // bool
		constexpr auto bSelectVertices = 0x64; // bool
		constexpr auto bSnapToWorldGrid = 0x65; // bool
		constexpr auto bShowWireframe = 0x66; // bool
		constexpr auto SelectedWeightScheme = 0x68; // EWeightScheme
		constexpr auto HandleWeight = 0x70; // double
		constexpr auto bPostFixHandles = 0x78; // bool
	}

	namespace n_UCustomZoneSettingsConfiguration {
		constexpr auto _border = 0x280; // UBorder*
		constexpr auto _configurationName = 0x288; // UTextBlock*
		constexpr auto _buttonRemove = 0x290; // UButton*
		constexpr auto _unhighlightedColor = 0x298; // FLinearColor
		constexpr auto _highlightedColor = 0x2a8; // FLinearColor
	}

	namespace n_UFishingBarWidget {
		constexpr auto TopSegmentGradientColorBottom = 0x260; // FLinearColor
		constexpr auto TopSegmentGradientColorTop = 0x270; // FLinearColor
		constexpr auto BarBoxesTotalHeight = 0x280; // float
		constexpr auto BarSegmentsTotalHeight = 0x284; // float
		constexpr auto BarSegmentNum = 0x288; // int32_t
		constexpr auto ProgressBarBackgroundBoxBrush = 0x290; // FSlateBrush
		constexpr auto ProgressBarBackgroundBoxColorAndOpacity = 0x318; // FLinearColor
		constexpr auto ProgressBarBackgroundBoxPadding = 0x328; // float
		constexpr auto ProgressBarSegmentBrush = 0x330; // FSlateBrush
		constexpr auto ProgressBarSegmentColorAndOpacity = 0x3b8; // FLinearColor
		constexpr auto ProgressBarSegmentPadding = 0x3c8; // float
		constexpr auto _progressBarSegmentBackgroundBoxesContainer = 0x3d0; // UVerticalBox*
		constexpr auto _progressBarSegmentsContainer = 0x3d8; // UVerticalBox*
		constexpr auto _simulatedProgressBar = 0x3e0; // USizeBox*
	}

	namespace n_AGrenadeItem {
		constexpr auto _explosionDamage = 0x7c0; // float
		constexpr auto _explosionOuterRadius = 0x7c4; // float
		constexpr auto _explosionInnerRadius = 0x7c8; // float
		constexpr auto _explosionFalloff = 0x7cc; // float
		constexpr auto _explosionDelay = 0x7d0; // float
		constexpr auto _explosionForce = 0x7d4; // float
		constexpr auto _explosionImpulse_OBSOLETE = 0x7d8; // float
		constexpr auto _explosionParticle = 0x7e8; // UParticleSystem*
		constexpr auto _explosionCameraShakeClass = 0x7f0; // UMatineeCameraShake*
		constexpr auto _hearingDamageRadius = 0x7f8; // float
		constexpr auto ExplosionAudioEvent = 0x800; // UAkAudioEvent*
		constexpr auto _explosionAudioEvent = 0x808; // UAkAudioEvent*
		constexpr auto _skeletalMesh = 0x810; // USkeletalMeshComponent*
		constexpr auto _grenadeLongThrowMontage = 0x818; // UAnimMontage*
		constexpr auto _grenadeLongThrowLoopMontage = 0x820; // UAnimMontage*
		constexpr auto _grenadeShortThrowMontage = 0x828; // UAnimMontage*
		constexpr auto _grenadeThrowbackMontage = 0x830; // UAnimMontage*
		constexpr auto _leverReleasedSocketName = 0x838; // FName
		constexpr auto _leverReleasedPS = 0x840; // UParticleSystem*
		constexpr auto _netCullDistanceSquaredMeters = 0x848; // float
	}

	namespace n_AMechanoidsManager {
		constexpr auto _droneSpawnClass = 0x240; // ADrone*
		constexpr auto _droneSpawnDistance = 0x248; // float
		constexpr auto _droneSpawnHeight = 0x24c; // float
		constexpr auto _droneCheckForNearbyPlayerDistance = 0x250; // float
		constexpr auto _droneInitialVisitTime = 0x254; // FDroneVisitTimeData
		constexpr auto _droneVisitClusterRadius = 0x25c; // float
		constexpr auto _weightPerSightingMode = 0x260; // float [0x3]
		constexpr auto _droneVisitTimeDataPerSightingMode = 0x26c; // FDroneVisitTimeData [0x3]
	}

	namespace n_APAX_GameEventManager {
		constexpr auto EventMarker = 0x260; // AGameEventLocationMarker*
		constexpr auto TimeBetweenEvents = 0x268; // float
		constexpr auto ForceJoinOnEventStart = 0x26c; // bool
		constexpr auto ShootingRangeTableClass = 0x270; // ADropZoneEquipmentTable*
		constexpr auto ShootingRangeTable = 0x278; // ADropZoneEquipmentTable*
		constexpr auto ShootingRangeTableOffset = 0x280; // FVector
	}

	namespace n_UItemInventoryWidget2 {
		constexpr auto _item = 0x280; // TScriptInterface<IInventoryNode>
		constexpr auto _container = 0x290; // UInventoryContainer2D*
		constexpr auto _nameText = 0x298; // UTextBlock*
		constexpr auto _itemWidget = 0x2a0; // UItemWidget2*
		constexpr auto _inventoryGrid = 0x2a8; // UGridPanel*
		constexpr auto _loadingWidget = 0x2b0; // UWidget*
		constexpr auto _inventoryGridWidget = 0x2b8; // UInventoryGridWidget*
		constexpr auto _inventoryCanvas = 0x2c0; // UCanvasPanel*
		constexpr auto _contentBox = 0x2c8; // UHorizontalBox*
		constexpr auto _expandToggle = 0x2d0; // UCheckBox*
		constexpr auto _slotsWidgets = 0x2d8; // TArray<UInventorySlotUserWidget*>
		constexpr auto _canMinimize = 0x2e8; // bool
	}

	namespace n_APrisonerHUD {
		constexpr auto HudWidget = 0x310; // UHudWidget*
		constexpr auto DamageDirectionIndicator = 0x318; // UDamageDirectionIndicator*
		constexpr auto ShouldDrawCrosshair = 0x320; // bool
		constexpr auto ShouldDrawScreenCenterDot = 0x321; // bool
		constexpr auto TacticsMaterial = 0x328; // UMaterialInterface*
		constexpr auto LoadingIconWidget = 0x330; // ULoadingIconWidget*
		constexpr auto SpawnScreenWidget = 0x338; // USpawnScreen*
		constexpr auto WaypointScreenWidget = 0x340; // UWaypointScreenWidget*
		constexpr auto OnShouldShowExtendedWidgetTooltipChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto _HUDFont = 0x358; // UFont*
		constexpr auto _customMapBorderWidth = 0x398; // float
		constexpr auto _customMapBorderColor = 0x39c; // FLinearColor
		constexpr auto _prisonerUIDataController = 0x3b0; // UPrisonerUIDataController*
		constexpr auto _otherPrisonerUIDataController = 0x3b8; // UPrisonerUIDataController*
		constexpr auto _vehicleUIDataController = 0x3c0; // UVehicleUIDataController*
		constexpr auto _traderMainUIController = 0x3c8; // UTraderMainUIController*
		constexpr auto _scoreboardWidget = 0x430; // UDesignableUserWidget*
		constexpr auto _shouldDrawOtherPlayerLocations = 0x44a; // bool
		constexpr auto _shouldDrawOtherPlayerInfo = 0x44b; // bool
		constexpr auto _isLeftMouseButtonPressed = 0x44c; // bool
		constexpr auto _prisonerMapHUDObject = 0x480; // FMapHUDPrisonerObject
		constexpr auto _homeLocationMapHUDObject = 0x4c0; // FMapHUDHomeLocationObject
		constexpr auto _worldEventsMapHUDObject = 0x508; // FMapHUDWorldEventsObject
		constexpr auto _otherPlayersMapHUDObjects = 0x520; // FMapHUDOtherPlayersObject
		constexpr auto _droneMapHUDObject = 0x5e0; // FMapHUDDroneObject
		constexpr auto _vehicleMapHUDObjects = 0x618; // FMapHUDVehiclesObject
		constexpr auto _flagMapHUDObjects = 0x6f8; // FMapHUDFlagsObject
		constexpr auto _itemSplitWidget = 0x7e8; // UItemSplitWidget*
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_AVehicleSpawningManager {
		constexpr auto _defaultMaxNumSpawnersPerSpawnGroup = 0x340; // int32_t
		constexpr auto _spawnGroupParentTag = 0x344; // FGameplayTag
		constexpr auto _preferredDistanceBetweenSpawners = 0x3a0; // float
		constexpr auto _relevantSpawnersUpdateInterval = 0x3a4; // float
		constexpr auto _minVisitorPawnLocationDeltaToUpdateRelevantSpawners = 0x3ac; // float
		constexpr auto _vehicleActorCullDistance = 0x3b0; // float
		constexpr auto _addSpawnerUpdateInterval = 0x3b4; // float
		constexpr auto _numDaysToKeepSpawnerAliveIfVehicleIsInactive = 0x3bc; // float
		constexpr auto _expirableSpawners = 0x3c0; // TArray<FExpirableVehicleSpawner>
		constexpr auto _newVehicleMinHealthAmount = 0x3d0; // float
		constexpr auto _newVehicleMaxHealthAmount = 0x3d4; // float
		constexpr auto _newVehicleMinFuelAmount = 0x3d8; // float
		constexpr auto _newVehicleMaxFuelAmount = 0x3dc; // float
		constexpr auto _newVehicleMinBatteryAmount = 0x3e0; // float
		constexpr auto _newVehicleMaxBatteryAmount = 0x3e4; // float
		constexpr auto _autoSaveCheckInterval = 0x3e8; // float
		constexpr auto _autoSaveInterval = 0x3f0; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x478; // AChaosSolverActor*
		constexpr auto RestCollection = 0x560; // UGeometryCollection*
		constexpr auto InitializationFields = 0x568; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x578; // bool
		constexpr auto ObjectType = 0x580; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x581; // bool
		constexpr auto ClusterGroupIndex = 0x584; // int32_t
		constexpr auto MaxClusterLevel = 0x588; // int32_t
		constexpr auto DamageThreshold = 0x590; // TArray<float>
		constexpr auto ClusterConnectionType = 0x5a0; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x5a4; // int32_t
		constexpr auto CollisionSampleFraction = 0x5a8; // float
		constexpr auto LinearEtherDrag = 0x5ac; // float
		constexpr auto AngularEtherDrag = 0x5b0; // float
		constexpr auto PhysicalMaterial = 0x5b8; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5c0; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5c4; // FVector
		constexpr auto InitialAngularVelocity = 0x5d0; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5e0; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5e8; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x638; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x648; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x670; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x680; // float
		constexpr auto CachePlayback = 0x684; // bool
		constexpr auto OnChaosPhysicsCollision = 0x688; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x698; // bool
		constexpr auto bNotifyCollisions = 0x699; // bool
		constexpr auto bEnableReplication = 0x69a; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x69b; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x69c; // int32_t
		constexpr auto RepData = 0x6a0; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8d0; // UBodySetup*
	}

	namespace n_UInteractionWidget_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
	}

	namespace n_UMetabolismHumanBodyPanel {
		constexpr auto ColdBodyColor = 0x260; // FLinearColor
		constexpr auto HotBodyColor = 0x270; // FLinearColor
		constexpr auto BodyTemperaturePreview = 0x280; // float
		constexpr auto _img_BodyGlow_Male = 0x288; // UImage*
		constexpr auto _img_BodyScan_Male = 0x290; // UImage*
		constexpr auto _img_BodyGlow_Female = 0x298; // UImage*
		constexpr auto _img_BodyScan_Female = 0x2a0; // UImage*
		constexpr auto _img_Head_Male = 0x2a8; // UImage*
		constexpr auto _img_Ear_Left_Male = 0x2b0; // UImage*
		constexpr auto _img_Ear_Right_Male = 0x2b8; // UImage*
		constexpr auto _img_Neck_Male = 0x2c0; // UImage*
		constexpr auto _img_Trapezius_Male = 0x2c8; // UImage*
		constexpr auto _img_Shoulder_Left_Male = 0x2d0; // UImage*
		constexpr auto _img_Shoulder_Right_Male = 0x2d8; // UImage*
		constexpr auto _img_Chest_Male = 0x2e0; // UImage*
		constexpr auto _img_Arm_Left_Male = 0x2e8; // UImage*
		constexpr auto _img_Arm_Right_Male = 0x2f0; // UImage*
		constexpr auto _img_Forearm_Left_Male = 0x2f8; // UImage*
		constexpr auto _img_Forearm_Right_Male = 0x300; // UImage*
		constexpr auto _img_Hand_Left_Male = 0x308; // UImage*
		constexpr auto _img_Hand_Right_Male = 0x310; // UImage*
		constexpr auto _img_Umbilicus_Male = 0x318; // UImage*
		constexpr auto _img_Abdomen_Male = 0x320; // UImage*
		constexpr auto _img_Thigh_Left_Male = 0x328; // UImage*
		constexpr auto _img_Thigh_Right_Male = 0x330; // UImage*
		constexpr auto _img_Kneecap_Left_Male = 0x338; // UImage*
		constexpr auto _img_Kneecap_Right_Male = 0x340; // UImage*
		constexpr auto _img_Leg_Left_Male = 0x348; // UImage*
		constexpr auto _img_Leg_Right_Male = 0x350; // UImage*
		constexpr auto _img_Foot_Left_Male = 0x358; // UImage*
		constexpr auto _img_Foot_Right_Male = 0x360; // UImage*
		constexpr auto _img_Footbones_Left_Male = 0x368; // UImage*
		constexpr auto _img_Footbones_Right_Male = 0x370; // UImage*
		constexpr auto _img_Legbones_Left_Male = 0x378; // UImage*
		constexpr auto _img_Legbones_Right_Male = 0x380; // UImage*
		constexpr auto _img_Thighbone_Left_Male = 0x388; // UImage*
		constexpr auto _img_Thighbone_Right_Male = 0x390; // UImage*
		constexpr auto _img_Pelvis_Male = 0x398; // UImage*
		constexpr auto _img_Spine_Male = 0x3a0; // UImage*
		constexpr auto _img_Handbones_Left_Male = 0x3a8; // UImage*
		constexpr auto _img_Handbones_Right_Male = 0x3b0; // UImage*
		constexpr auto _img_Forearmbones_Left_Male = 0x3b8; // UImage*
		constexpr auto _img_Forearmbones_Right_Male = 0x3c0; // UImage*
		constexpr auto _img_Armbone_Left_Male = 0x3c8; // UImage*
		constexpr auto _img_Armbone_Right_Male = 0x3d0; // UImage*
		constexpr auto _img_Scapula_Left_Male = 0x3d8; // UImage*
		constexpr auto _img_Scapula_Right_Male = 0x3e0; // UImage*
		constexpr auto _img_Ribcage_Male = 0x3e8; // UImage*
		constexpr auto _img_Skull_Male = 0x3f0; // UImage*
		constexpr auto _img_Head_Female = 0x3f8; // UImage*
		constexpr auto _img_Ear_Left_Female = 0x400; // UImage*
		constexpr auto _img_Ear_Right_Female = 0x408; // UImage*
		constexpr auto _img_Neck_Female = 0x410; // UImage*
		constexpr auto _img_Trapezius_Female = 0x418; // UImage*
		constexpr auto _img_Shoulder_Left_Female = 0x420; // UImage*
		constexpr auto _img_Shoulder_Right_Female = 0x428; // UImage*
		constexpr auto _img_Chest_Female = 0x430; // UImage*
		constexpr auto _img_Arm_Left_Female = 0x438; // UImage*
		constexpr auto _img_Arm_Right_Female = 0x440; // UImage*
		constexpr auto _img_Forearm_Left_Female = 0x448; // UImage*
		constexpr auto _img_Forearm_Right_Female = 0x450; // UImage*
		constexpr auto _img_Hand_Left_Female = 0x458; // UImage*
		constexpr auto _img_Hand_Right_Female = 0x460; // UImage*
		constexpr auto _img_Umbilicus_Female = 0x468; // UImage*
		constexpr auto _img_Abdomen_Female = 0x470; // UImage*
		constexpr auto _img_Thigh_Left_Female = 0x478; // UImage*
		constexpr auto _img_Thigh_Right_Female = 0x480; // UImage*
		constexpr auto _img_Kneecap_Left_Female = 0x488; // UImage*
		constexpr auto _img_Kneecap_Right_Female = 0x490; // UImage*
		constexpr auto _img_Leg_Left_Female = 0x498; // UImage*
		constexpr auto _img_Leg_Right_Female = 0x4a0; // UImage*
		constexpr auto _img_Foot_Left_Female = 0x4a8; // UImage*
		constexpr auto _img_Foot_Right_Female = 0x4b0; // UImage*
		constexpr auto _img_Footbones_Left_Female = 0x4b8; // UImage*
		constexpr auto _img_Footbones_Right_Female = 0x4c0; // UImage*
		constexpr auto _img_Legbones_Left_Female = 0x4c8; // UImage*
		constexpr auto _img_Legbones_Right_Female = 0x4d0; // UImage*
		constexpr auto _img_Thighbone_Left_Female = 0x4d8; // UImage*
		constexpr auto _img_Thighbone_Right_Female = 0x4e0; // UImage*
		constexpr auto _img_Pelvis_Female = 0x4e8; // UImage*
		constexpr auto _img_Spine_Female = 0x4f0; // UImage*
		constexpr auto _img_Handbones_Left_Female = 0x4f8; // UImage*
		constexpr auto _img_Handbones_Right_Female = 0x500; // UImage*
		constexpr auto _img_Forearmbones_Left_Female = 0x508; // UImage*
		constexpr auto _img_Forearmbones_Right_Female = 0x510; // UImage*
		constexpr auto _img_Armbone_Left_Female = 0x518; // UImage*
		constexpr auto _img_Armbone_Right_Female = 0x520; // UImage*
		constexpr auto _img_Scapula_Left_Female = 0x528; // UImage*
		constexpr auto _img_Scapula_Right_Female = 0x530; // UImage*
		constexpr auto _img_Ribcage_Female = 0x538; // UImage*
		constexpr auto _img_Skull_Female = 0x540; // UImage*
		constexpr auto _img_SpinalCord = 0x548; // UImage*
		constexpr auto _img_Lungs = 0x550; // UImage*
		constexpr auto _img_RespiratorySystem = 0x558; // UImage*
		constexpr auto _img_CirculatorySystem = 0x560; // UImage*
		constexpr auto _img_Colon = 0x568; // UImage*
		constexpr auto _img_Intestine = 0x570; // UImage*
		constexpr auto _img_Bladder = 0x578; // UImage*
		constexpr auto _img_Liver = 0x580; // UImage*
		constexpr auto _img_Kidneys = 0x588; // UImage*
		constexpr auto _img_AdrenalGlands = 0x590; // UImage*
		constexpr auto _img_Gallbladder = 0x598; // UImage*
		constexpr auto _img_Pancreas = 0x5a0; // UImage*
		constexpr auto _img_Stomach = 0x5a8; // UImage*
		constexpr auto _img_Heart = 0x5b0; // UImage*
		constexpr auto _img_Spleen = 0x5b8; // UImage*
		constexpr auto _img_Brain = 0x5c0; // UImage*
		constexpr auto _img_Reproductive_Male = 0x5c8; // UImage*
		constexpr auto _img_Reproductive_Female = 0x5d0; // UImage*
		constexpr auto _btn_EntireBody = 0x5d8; // UButton*
		constexpr auto _btn_HeadRegion = 0x5e0; // UButton*
		constexpr auto _btn_RightLegRegion = 0x5e8; // UButton*
		constexpr auto _btn_LeftLegRegion = 0x5f0; // UButton*
		constexpr auto _btn_TorsoRegion = 0x5f8; // UButton*
		constexpr auto _btn_RightArmRegion = 0x600; // UButton*
		constexpr auto _btn_LeftArmRegion = 0x608; // UButton*
		constexpr auto _mainOverlay = 0x610; // UOverlay*
		constexpr auto _maleOverlay = 0x618; // UOverlay*
		constexpr auto _femaleOverlay = 0x620; // UOverlay*
		constexpr auto _bothOverlay = 0x628; // UOverlay*
		constexpr auto _focusBodyRegion_Head = 0x630; // UWidgetAnimation*
		constexpr auto _focusBodyRegion_Torso = 0x638; // UWidgetAnimation*
		constexpr auto _focusBodyRegion_LeftArm = 0x640; // UWidgetAnimation*
		constexpr auto _focusBodyRegion_RightArm = 0x648; // UWidgetAnimation*
		constexpr auto _focusBodyRegion_LeftLeg = 0x650; // UWidgetAnimation*
		constexpr auto _focusBodyRegion_RightLeg = 0x658; // UWidgetAnimation*
		constexpr auto _vignette = 0x660; // UImage*
	}

	namespace n_UMetabolismVitaminsPanel {
		constexpr auto _vitamin_A = 0x260; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B1 = 0x268; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B2 = 0x270; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B3 = 0x278; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B4 = 0x280; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B5 = 0x288; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B6 = 0x290; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B9 = 0x298; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_B12 = 0x2a0; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_C = 0x2a8; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_D = 0x2b0; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_E = 0x2b8; // UMetabolismVitaminAndMineralReserve*
		constexpr auto _vitamin_K = 0x2c0; // UMetabolismVitaminAndMineralReserve*
	}

	namespace n_UUI_LoadingIconWidget_C {
		constexpr auto CircularThrobber_53 = 0x278; // UCircularThrobber*
	}

	namespace n_UMessageContainer_C {
		constexpr auto Messages = 0x278; // UVerticalBox*
	}

	namespace n_UUI_Metabolism_PerformanceData_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto UI_CollapsableContainer = 0x308; // UUI_CollapsableContainer_C*
	}

	namespace n_ABP_ReplicatedExplosionEffectsActor_C {
		constexpr auto DefaultSceneRoot = 0x2d0; // USceneComponent*
	}

	namespace n_AGlobalBirdSpawner2 {
		constexpr auto MaxSpawnInstances = 0x220; // int32_t
		constexpr auto MaxCoastalBirdSpawnPerPlayer = 0x224; // int32_t
		constexpr auto MaxContinentalBirdSpawnPerPlayer = 0x228; // int32_t
		constexpr auto CoastalBirds = 0x230; // TArray<ABird2*>
		constexpr auto ContinentalBirds = 0x240; // TArray<ABird2*>
		constexpr auto FlyingBirdSpawnAwayDistanceMin = 0x250; // float
		constexpr auto FlyingBirdSpawnAwayDistanceMax = 0x254; // float
		constexpr auto GroundBirdSpawnAwayDistanceMin = 0x258; // float
		constexpr auto GroundBirdSpawnAwayDistanceMax = 0x25c; // float
		constexpr auto MinSpawnInfrontDistance = 0x260; // float
		constexpr auto BirdSpawnerMask = 0x264; // FGameplayTag
		constexpr auto BulkSpawn = 0x26c; // int32_t
		constexpr auto AllowedSurfaces = 0x270; // TArray<EPhysicalSurface>
		constexpr auto Sprite = 0x280; // UBillboardComponent*
		constexpr auto _birds = 0x290; // TArray<ABird2*>
	}

	namespace n_URiverGenerator {
		constexpr auto SplineMeshComponents = 0x28; // TArray<USplineMeshComponent*>
	}

	namespace n_ABP_WeaponBullet_cal22_Crafted_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UUI_TournamentScoreboardWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Instruction = 0x280; // UTextBlock*
		constexpr auto Table = 0x288; // UVerticalBox*
		constexpr auto UI_TournamentScoreboardRow = 0x290; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_2 = 0x298; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_3 = 0x2a0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_4 = 0x2a8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_5 = 0x2b0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_6 = 0x2b8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_7 = 0x2c0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_8 = 0x2c8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_9 = 0x2d0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_10 = 0x2d8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_11 = 0x2e0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_12 = 0x2e8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_13 = 0x2f0; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_14 = 0x2f8; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_15 = 0x300; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_16 = 0x308; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_17 = 0x310; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_18 = 0x318; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_19 = 0x320; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_20 = 0x328; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_21 = 0x330; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_22 = 0x338; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_23 = 0x340; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_24 = 0x348; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_25 = 0x350; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_26 = 0x358; // UUI_TournamentScoreboardRow_C*
		constexpr auto UI_TournamentScoreboardRow_40 = 0x360; // UUI_TournamentScoreboardRow_C*
	}

	namespace n_UMetabolismTreatmentItemsPanel {
		constexpr auto _inventoryItems = 0x260; // UMetabolismLightItemDisplayPanel*
		constexpr auto _vicinityItems = 0x268; // UMetabolismLightItemDisplayPanel*
		constexpr auto _vicinityContainers = 0x270; // UMetabolismContainerSetDisplayPanel*
		constexpr auto _buttonWidgetClass = 0x278; // UTabButton*
		constexpr auto _inventoryName = 0x280; // FString
		constexpr auto _vicinityName = 0x290; // FString
	}

	namespace n_UDoorUpgradeWidget {
		constexpr auto _door = 0x310; // ADoor*
	}

	namespace n_AWeaponAutoCrossbow {
		constexpr auto FireState = 0x2dd8; // UWeaponStateFiring*
		constexpr auto _muzzleVelocity = 0x2de0; // float
		constexpr auto _probabilityForLaughingSoundEffect = 0x2de4; // float
		constexpr auto _autoCrossbowFireAnimation = 0x2de8; // FCharacterAndItemAnimation
		constexpr auto _autoCrossbowLaughingAudioEvent = 0x2df8; // UAkAudioEvent*
		constexpr auto _autoCrossbowActiveState = 0x2e00; // UWeaponState*
		constexpr auto _fuelType = 0x41a8; // UGameResourceType*
		constexpr auto _inFuelingSocketTypes = 0x41b0; // FGameplayTagContainer
		constexpr auto _maxFuelAmount = 0x41d0; // float
		constexpr auto _fuelUsagePerHour = 0x41d4; // float
		constexpr auto _fuelUsagePerHourWhenDamaged = 0x41d8; // float
		constexpr auto _fuelFillingDurationPerAmountFilled = 0x41dc; // float
		constexpr auto _fuelFillingDurationPerAmountFilledWhenDamaged = 0x41e0; // float
		constexpr auto _fuelFillingExperiencePerAmount = 0x41e4; // float
		constexpr auto _currentFuelAmount = 0x41e8; // float
	}

	namespace n_UUI_VicinityPanel3_C {
		constexpr auto CheckBox_1 = 0x4d8; // UCheckBox*
		constexpr auto CheckBox_2 = 0x4e0; // UCheckBox*
		constexpr auto CheckBox_3 = 0x4e8; // UCheckBox*
		constexpr auto CheckBox_4 = 0x4f0; // UCheckBox*
		constexpr auto CheckBox_5 = 0x4f8; // UCheckBox*
		constexpr auto CheckBox_6 = 0x500; // UCheckBox*
		constexpr auto ExpandButton = 0x508; // UButton*
		constexpr auto Image_12 = 0x510; // UImage*
		constexpr auto Image_01 = 0x518; // UImage*
		constexpr auto Image_011 = 0x520; // UImage*
		constexpr auto ScrollBox_1 = 0x528; // UScrollBox*
		constexpr auto SizeBox_1 = 0x530; // USizeBox*
		constexpr auto UI_AdjustableSeparator = 0x538; // UUI_AdjustableSeparator_C*
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x470; // UGeometryCache*
		constexpr auto bRunning = 0x478; // bool
		constexpr auto bLooping = 0x479; // bool
		constexpr auto StartTimeOffset = 0x47c; // float
		constexpr auto PlaybackSpeed = 0x480; // float
		constexpr auto NumTracks = 0x484; // int32_t
		constexpr auto ElapsedTime = 0x488; // float
		constexpr auto Duration = 0x4bc; // float
		constexpr auto bManualTick = 0x4c0; // bool
	}

	namespace n_UOffsetMeshTool {
		constexpr auto OffsetProperties = 0x400; // UOffsetMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeOffsetProperties*
		constexpr auto ImplicitProperties = 0x410; // UImplicitOffsetProperties*
		constexpr auto WeightMapProperties = 0x418; // UOffsetWeightMapSetProperties*
	}

	namespace n_ADamagingTrapItem {
		constexpr auto _initialDamageAmount = 0x910; // float
		constexpr auto _damagePerSecond = 0x914; // float
		constexpr auto _triggerSound = 0x918; // UAkAudioEvent*
	}

	namespace n_AChoppingObjective {
		constexpr auto _targetActors = 0x330; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _targetSpecificClothesType = 0x340; // bool
		constexpr auto _targetClothesTypes = 0x348; // TArray<EClothesType>
		constexpr auto _singleTarget = 0x358; // bool
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent {
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_UProceduralRectangleToolProperties {
		constexpr auto Width = 0x70; // float
		constexpr auto Depth = 0x74; // float
		constexpr auto WidthSubdivisions = 0x78; // int32_t
		constexpr auto DepthSubdivisions = 0x7c; // int32_t
	}

	namespace n_UMetabolismCurrentStatDark {
		constexpr auto Title = 0x260; // FText
		constexpr auto _titleBackground = 0x278; // UImage*
		constexpr auto _title = 0x280; // UTextBlock*
		constexpr auto _valueBackground = 0x288; // UImage*
		constexpr auto _value = 0x290; // UTextBlock*
		constexpr auto _titleBackgroundColor = 0x298; // FDataTableRowHandle
		constexpr auto _titleForegroundColor = 0x2a8; // FDataTableRowHandle
		constexpr auto _valueBackgroundColor = 0x2b8; // FDataTableRowHandle
		constexpr auto _valueForegroundColor = 0x2c8; // FDataTableRowHandle
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UFireworksItemState {
		constexpr auto IsFiring = 0xf8; // bool
		constexpr auto LaunchedShells = 0xfc; // int32_t
	}

	namespace n_UTradingOutpostDescriptionDataAsset {
		constexpr auto TradeOutpostPersistentId = 0x30; // FGuid
	}

	namespace n_ABP_ConZGameState_C {
		constexpr auto DefaultSceneRoot = 0x690; // USceneComponent*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_USledgePassengerMountSlot {
		constexpr auto _idleAnimation = 0x128; // UBlendSpace*
	}

	namespace n_AFogSphere {
		constexpr auto _shouldExistOnDedicatedServer = 0x220; // bool
		constexpr auto _densityVersusTimeOfDay = 0x228; // UCurveFloat*
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UItemSplitWidget {
		constexpr auto _itemImage = 0x278; // UImage*
		constexpr auto _currentItemStackAmount = 0x280; // UTextBlock*
		constexpr auto _newItemStackAmount = 0x288; // UTextBlock*
		constexpr auto _valueSlider = 0x290; // USlider*
		constexpr auto _splitButton = 0x298; // UButton*
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x460; // UBodySetup*
	}

	namespace n_UDcxVehicleWheelsRawInput {
		constexpr auto ThrottleIndex = 0x28; // int32_t
		constexpr auto RawAnalogControls = 0x30; // TArray<float>
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_ASoundSpline {
		constexpr auto MinCameraLocationDeltaForUpdate = 0x230; // float
		constexpr auto WorldStreamedCheckInterval = 0x234; // float
		constexpr auto MaxCameraDistance = 0x238; // float
		constexpr auto AudioEvent = 0x240; // UAkAudioEvent*
		constexpr auto InsideSplineAudioEvent = 0x248; // UAkAudioEvent*
		constexpr auto OutsideSplineAudioEvent = 0x250; // UAkAudioEvent*
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_ACargoDropContainer {
		constexpr auto DelayDuration = 0x220; // float
		constexpr auto FallDuration = 0x224; // float
		constexpr auto DetonationTime = 0x228; // float
		constexpr auto DetonationCountdown = 0x22c; // float
		constexpr auto LandSound = 0x230; // UAkAudioEvent*
		constexpr auto WarningSound = 0x238; // UAkAudioEvent*
		constexpr auto DetonationSound = 0x240; // UAkAudioEvent*
		constexpr auto DetonationParticles = 0x248; // UParticleSystem*
		constexpr auto CameraShakeClass = 0x250; // UMatineeCameraShake*
		constexpr auto MajorSpawnerOptions = 0x258; // TArray<UItemSpawnerPreset*>
		constexpr auto MinorSpawnerOptions = 0x268; // TArray<FCargoDropSpawnerPreset>
		constexpr auto UnlockLockersAudioEvent = 0x278; // UAkAudioEvent*
		constexpr auto _parachuteMesh = 0x280; // UStaticMeshComponent*
		constexpr auto _flareParticles = 0x288; // UParticleSystemComponent*
		constexpr auto _dustParticles = 0x290; // UParticleSystemComponent*
		constexpr auto _timerWidget = 0x298; // UKillBoxTimerWidget*
		constexpr auto _lockStateWidget = 0x2a0; // UDiegeticLockState*
		constexpr auto _endLocation = 0x2b8; // FVector
		constexpr auto _rotation = 0x2c4; // FRotator
		constexpr auto _landed = 0x2d0; // bool
		constexpr auto _fallingSpeed = 0x2d4; // float
		constexpr auto _timeRemaining = 0x2d8; // int32_t
		constexpr auto _flareParticlesEnabled = 0x2dc; // bool
		constexpr auto _cargoLockers = 0x2e0; // TArray<UStaticMeshComponent*>
	}

	namespace n_UPrisonerConsumableDigestionHandler_ForeignSubstance {
		constexpr auto _bodyEffect = 0x30; // UPrisonerBodyEffect_ForeignSubstance*
		constexpr auto _substanceAmountPerAbsorbedMass = 0x38; // float
	}

	namespace n_UHoleFillStatisticsProperties {
		constexpr auto InitialHoles = 0x60; // FString
		constexpr auto SelectedHoles = 0x70; // FString
		constexpr auto SuccessfulFills = 0x80; // FString
		constexpr auto FailedFills = 0x90; // FString
		constexpr auto RemainingHoles = 0xa0; // FString
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_URadioCategoryShuffle {
		constexpr auto _canTracksRepeat = 0x40; // bool
		constexpr auto _tracksAlreadyPlayed = 0x48; // TArray<URadioTrack*>
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_UDrivingSkill {
		constexpr auto NoSkillExperienceAwards = 0xa8; // FDrivingSkillExperienceAwards
		constexpr auto BasicSkillExperienceAwards = 0xb0; // FDrivingSkillExperienceAwards
		constexpr auto MediumSkillExperienceAwards = 0xb8; // FDrivingSkillExperienceAwards
		constexpr auto AdvancedSkillExperienceAwards = 0xc0; // FDrivingSkillExperienceAwards
		constexpr auto AboveAdvancedSkillExperienceAwards = 0xc8; // FDrivingSkillExperienceAwards
		constexpr auto NoSkillParameters = 0xd0; // FDrivingSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0x1d0; // FDrivingSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0x2d0; // FDrivingSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x3d0; // FDrivingSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0x4d0; // FDrivingSkillParametersPerSkillLevel
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UItemComponentStateBase {
		constexpr auto ID = 0x28; // FDbIntegerId
		constexpr auto ComponentName = 0x30; // FString
	}

	namespace n_UPrisonerInventoryComponent {
		constexpr auto ItemEquipped = 0xd8; // FMulticastInlineDelegate
		constexpr auto ItemUnequipped = 0xe8; // FMulticastInlineDelegate
		constexpr auto CraftingInfoWidgets = 0xf8; // TArray<UCraftingInfoWidget*>
		constexpr auto AddSelectionDuration = 0x108; // float
		constexpr auto AddSelectionReplicationDelay = 0x10c; // float
		constexpr auto TickFrequency = 0x110; // float
		constexpr auto _startingClothesFemale = 0x118; // TArray<AClothesItem*>
		constexpr auto _startingClothesFemaleDeluxe = 0x128; // TArray<AClothesItem*>
		constexpr auto _startingClothesMale = 0x138; // TArray<AClothesItem*>
		constexpr auto _startingClothesMaleDeluxe = 0x148; // TArray<AClothesItem*>
		constexpr auto _tournamentStartingItemInHands = 0x158; // AItem*
		constexpr auto _tournamentStartingEquipment = 0x160; // TArray<AClothesItem*>
		constexpr auto _tournamentStartingItems = 0x170; // TArray<AItem*>
		constexpr auto _chipMesh = 0x188; // UStaticMesh*
		constexpr auto _vicinityItems = 0x1b0; // TMap<TWeakObjectPtr<AItem>, uint32_t>
		constexpr auto _clothesPartsToDamageByMeleeAttackCapsuleAttachment = 0x208; // TMap<FGameplayTag, FClothesPartSet>
		constexpr auto _parachuteClass = 0x258; // AClothesItem*
		constexpr auto _inventoryClothes = 0x260; // UInventoryContainerClothes*
		constexpr auto _inventoryHandsHolsters = 0x268; // UInventoryContainerHandsHolsters*
		constexpr auto _inventorySelection2 = 0x270; // UInventoryContainerSelection*
		constexpr auto _quickAccessItems = 0x2c8; // TMap<int32_t, FQuickAccessData>
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UUI_CustomBorder_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Bottom = 0x268; // UImage*
		constexpr auto Left = 0x270; // UImage*
		constexpr auto Right = 0x278; // UImage*
		constexpr auto Top = 0x280; // UImage*
		constexpr auto BorderThickness = 0x288; // float
		constexpr auto BorderColor = 0x28c; // FLinearColor
	}

	namespace n_UUI_Item2_C {
		constexpr auto UberGraphFrame = 0x440; // FPointerToUberGraphFrame
		constexpr auto AdditionalIconFadeOut = 0x448; // UWidgetAnimation*
		constexpr auto AdditionalIconFadeIn = 0x450; // UWidgetAnimation*
		constexpr auto LowerLeftBoxFadeOut = 0x458; // UWidgetAnimation*
		constexpr auto LowerLeftBoxFadeIn = 0x460; // UWidgetAnimation*
		constexpr auto AdditionalText = 0x468; // UTextBlock*
		constexpr auto AmmoIcon = 0x470; // UImage*
		constexpr auto BackgroundBorder = 0x478; // UImage*
		constexpr auto BackgroundHighlight = 0x480; // UImage*
		constexpr auto BackgroundScaleBox = 0x488; // UScaleBox*
		constexpr auto HealthBackground = 0x490; // UImage*
		constexpr auto IconScaleBox = 0x498; // UScaleBox*
		constexpr auto LowerBackground = 0x4a0; // UImage*
		constexpr auto LowerLeftTextFirst = 0x4a8; // UTextBlock*
		constexpr auto LowerLeftTextSecond = 0x4b0; // UTextBlock*
		constexpr auto LowerRightText = 0x4b8; // UTextBlock*
		constexpr auto MainSizeBox = 0x4c0; // USizeBox*
		constexpr auto MiddleBackground = 0x4c8; // UImage*
		constexpr auto MiddleText = 0x4d0; // UTextBlock*
		constexpr auto Overlay_5 = 0x4d8; // UOverlay*
		constexpr auto ProgressBarDurability = 0x4e0; // UProgressBar*
		constexpr auto ProgressBarUses = 0x4e8; // UProgressBar*
		constexpr auto Temperature = 0x4f0; // UImage*
		constexpr auto TextBlock_1 = 0x4f8; // UTextBlock*
		constexpr auto TextBlock_2 = 0x500; // UTextBlock*
		constexpr auto UI_Border = 0x508; // UUI_Border_C*
		constexpr auto UI_Border_C_1 = 0x510; // UUI_Border_C*
		constexpr auto UpperBackground = 0x518; // UImage*
		constexpr auto UpperLeftBackground = 0x520; // UImage*
		constexpr auto UpperLeftText = 0x528; // UTextBlock*
		constexpr auto UpperRightBackground = 0x530; // UImage*
		constexpr auto UpperRightText = 0x538; // UTextBlock*
		constexpr auto UsageSeparator = 0x540; // UTextBlock*
		constexpr auto UsesBackground = 0x548; // UImage*
		constexpr auto Wetness = 0x550; // UImage*
		constexpr auto WetnessLevelImages = 0x558; // TArray<UTexture2D*>
		constexpr auto TemperatureLevelImages = 0x568; // TArray<UTexture2D*>
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_AConZCameraManager {
		constexpr auto _introCinematicDuration = 0x27cc; // float
	}

	namespace n_UAcceptOutputProperties {
		constexpr auto bExportSeparatedPiecesAsNewMeshAssets = 0x60; // bool
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UGerstnerWaterWaveGeneratorSimple {
		constexpr auto NumWaves = 0x28; // int32_t
		constexpr auto Seed = 0x2c; // int32_t
		constexpr auto Randomness = 0x30; // float
		constexpr auto MinWavelength = 0x34; // float
		constexpr auto MaxWavelength = 0x38; // float
		constexpr auto WavelengthFalloff = 0x3c; // float
		constexpr auto MinAmplitude = 0x40; // float
		constexpr auto MaxAmplitude = 0x44; // float
		constexpr auto AmplitudeFalloff = 0x48; // float
		constexpr auto WindAngleDeg = 0x4c; // float
		constexpr auto DirectionAngularSpreadDeg = 0x50; // float
		constexpr auto SmallWaveSteepness = 0x54; // float
		constexpr auto LargeWaveSteepness = 0x58; // float
		constexpr auto SteepnessFalloff = 0x5c; // float
	}

	namespace n_AWaterBody {
		constexpr auto PhysicalMaterial = 0x230; // UPhysicalMaterial*
		constexpr auto TargetWaveMaskDepth = 0x238; // float
		constexpr auto MaxWaveHeightOffset = 0x23c; // float
		constexpr auto WaterBodyIndex = 0x240; // int32_t
		constexpr auto bFillCollisionUnderWaterBodiesForNavmesh = 0x244; // bool
		constexpr auto UnderwaterPostProcessSettings = 0x250; // FUnderwaterPostProcessSettings
		constexpr auto WaterBodyType = 0x7c0; // EWaterBodyType
		constexpr auto CurveSettings = 0x7c8; // FWaterCurveSettings
		constexpr auto WaterMaterial = 0x7e8; // UMaterialInterface*
		constexpr auto UnderwaterPostProcessMaterial = 0x7f0; // UMaterialInterface*
		constexpr auto bAffectsLandscape = 0x7f8; // bool
		constexpr auto bGenerateCollisions = 0x7f9; // bool
		constexpr auto bOverrideWaterMesh = 0x7fa; // bool
		constexpr auto WaterMeshOverride = 0x800; // UStaticMesh*
		constexpr auto OverlapMaterialPriority = 0x808; // int32_t
		constexpr auto CollisionProfileName = 0x80c; // FName
		constexpr auto SplineComp = 0x818; // UWaterSplineComponent*
		constexpr auto WaterSplineMetadata = 0x820; // UWaterSplineMetadata*
		constexpr auto WaterMID = 0x828; // UMaterialInstanceDynamic*
		constexpr auto UnderwaterPostProcessMID = 0x830; // UMaterialInstanceDynamic*
		constexpr auto Islands = 0x838; // TArray<LazyObjectProperty>
		constexpr auto ExclusionVolumes = 0x848; // TArray<LazyObjectProperty>
		constexpr auto Landscape = 0x858; // TWeakObjectPtr<ALandscapeProxy>
		constexpr auto CurrentPostProcessSettings = 0x860; // FPostProcessSettings
		constexpr auto bCanAffectNavigation = 0xdb0; // bool
		constexpr auto WaterNavAreaClass = 0xdb8; // UNavAreaBase*
		constexpr auto WaterWaves = 0xdc0; // UWaterWavesBase*
		constexpr auto bHasWaveSpectrumSettings = 0xdc8; // bool
		constexpr auto bHasTerrainCarvingSettingsSettings = 0xdc9; // bool
	}

	namespace n_UWaterRuntimeSettings {
		constexpr auto CollisionChannelForWaterTraces = 0x38; // ECollisionChannel
		constexpr auto MaterialParameterCollection = 0x40; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto WaterBodyIconWorldSize = 0x68; // float
		constexpr auto WaterBodyIconWorldZOffset = 0x6c; // float
		constexpr auto DefaultWaterCollisionProfileName = 0x70; // FName
	}

	namespace n_UVDSimulatedParticle {
		constexpr auto IsAttached = 0x28; // bool
		constexpr auto Attachment = 0x30; // FVDParticleAttachment
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UCutObjectAssetData {
		constexpr auto ChoppingRecipeDataAsset = 0x30; // UChoppingRecipeDataAsset*
	}

	namespace n_AConZWaterSplineLake {
		constexpr auto SurfaceMeshCullingDistance = 0x2b8; // float
	}

	namespace n_UBaseBuildingBlockCraftableItem {
		constexpr auto BaseBlockClass = 0x1e0; // UObject*
		constexpr auto Icon = 0x1e8; // UTexture2D*
		constexpr auto Caption = 0x1f0; // FText
		constexpr auto Description = 0x208; // FText
		constexpr auto PlacementMeshOffset = 0x220; // FVector
		constexpr auto PlacementMeshScale = 0x22c; // FVector
		constexpr auto IsUpgrade = 0x238; // bool
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UQuickAccessItemWidget {
		constexpr auto MaxWidth = 0x278; // char
		constexpr auto MaxHeight = 0x279; // char
		constexpr auto _imageWidget = 0x280; // UImage*
		constexpr auto _item = 0x288; // TWeakObjectPtr<AItem>
		constexpr auto _itemClass = 0x290; // UObject*
		constexpr auto DefaultWidth = 0x298; // float
		constexpr auto DefaultHeight = 0x29c; // float
		constexpr auto DefaultPosition = 0x2a0; // FVector2D
		constexpr auto _additionalIcon = 0x2b0; // UImage*
		constexpr auto _additionalText = 0x2b8; // UTextBlock*
		constexpr auto _numberData = 0x2d8; // TMap<FName, float>
		constexpr auto _shouldUpdateVisuals = 0x328; // bool
		constexpr auto _lowerLeftBox = 0x340; // USizeBox*
		constexpr auto _additionalIconSizeBox = 0x348; // USizeBox*
	}

	namespace n_USoundNotificationDescription {
		constexpr auto AudioEvent = 0x40; // UAkAudioEvent*
		constexpr auto Actor = 0x48; // AActor*
		constexpr auto stopWhenAttachedToDestroyed = 0x50; // bool
	}

	namespace n_AAirplane {
		constexpr auto _meshComponent = 0x2a8; // USkeletalMeshComponent*
		constexpr auto _liftComponent = 0x2b0; // ULiftComponent*
		constexpr auto _aerodynamicSurfaceMap = 0x2b8; // TMap<EAerodynamicSurfaceType, char>
		constexpr auto _currentThrottleAmount = 0x308; // float
		constexpr auto _maxThrottle = 0x30c; // float
		constexpr auto _maxVelocity = 0x310; // float
		constexpr auto _rightWheelConstraint = 0x328; // UPhysicsConstraintComponent*
		constexpr auto _leftWheelConstraint = 0x330; // UPhysicsConstraintComponent*
		constexpr auto _rearWheelConstraint = 0x338; // UPhysicsConstraintComponent*
		constexpr auto _projectileClass = 0x348; // AProjectile*
		constexpr auto _mountSlots = 0x350; // TArray<UAirplaneMountSlot*>
		constexpr auto _maxDriveOrBoardAngle = 0x3c0; // float
		constexpr auto _physicsDominanceGroup = 0x3c4; // EConZPxDominanceGroup
		constexpr auto _physicsConstraintStabilizationTimerHandle = 0x480; // FTimerHandle
		constexpr auto _fireInterval = 0x490; // float
		constexpr auto _pushImpulseMagnitude = 0x494; // float
		constexpr auto _pushIntensityCurve = 0x498; // UCurveFloat*
		constexpr auto _pushDirectionRatioBetweenForwardAndUp = 0x4a0; // float
		constexpr auto _maxDistanceToAllowThePush = 0x4a4; // float
		constexpr auto _maxDistanceToAllowThePushStart = 0x4a8; // float
		constexpr auto _pushStartAccelerationChange = 0x4ac; // float
		constexpr auto _pushStartSpeedThresholdKph = 0x4b0; // float
		constexpr auto _maxHealth = 0x4c8; // float
		constexpr auto _engineBlockMaxHealth = 0x4d0; // float
		constexpr auto _autoHealthDrainThreshold = 0x4d4; // float
		constexpr auto _autoHealthDrain = 0x4d8; // float
		constexpr auto _repairableParams = 0x4e0; // FRepairableParams
		constexpr auto _damagedEffects = 0x518; // TArray<FVehicleDamagedEffectsParameters>
		constexpr auto _damageMaterialParameterName = 0x538; // FName
		constexpr auto _hitZones = 0x540; // UVehicleHitZoneManager*
		constexpr auto _vehiclePartsStateFlags = 0x548; // uint32_t
		constexpr auto _activeHitTimeToLive = 0x550; // float
		constexpr auto _impactEffects = 0x558; // FVehicleImpactEffects [0x5]
		constexpr auto ImpactDamageVsNormalImpulse = 0x670; // UCurveFloat*
		constexpr auto _spawnParameters = 0x688; // FVehicleSpawnParameters
		constexpr auto _healthBarCaption = 0x6d0; // FText
		constexpr auto _mountSlotIndicatorsWidget = 0x6e8; // UUserWidget*
		constexpr auto _itemContainerClass = 0x6f0; // AVehicleItemContainer*
		constexpr auto _shouldDropItemsWhenDestroyed = 0x6f8; // bool
		constexpr auto _itemContainer = 0x700; // AVehicleItemContainer*
		constexpr auto _radioComponent = 0x718; // URadioComponent*
		constexpr auto _hasEngine = 0x720; // bool
		constexpr auto _engineIdleRpm = 0x724; // float
		constexpr auto _engineMaxRpm = 0x728; // float
		constexpr auto _engineState = 0x738; // EVehicleEngineState
		constexpr auto _engineStallingForceMagnitude = 0x748; // float
		constexpr auto _canEngineBeStalledByAcceleration = 0x7b0; // bool
		constexpr auto _engineStallingByAccelerationSpeedThreshold = 0x7b4; // float
		constexpr auto _engineStallingByAccelerationOccurrenceInterval = 0x7b8; // float
		constexpr auto _engineStallingByAccelerationAudioEvent = 0x7c0; // UAkAudioEvent*
		constexpr auto _engineStallingByAccelerationAudioEventTriggerTimeRatios = 0x7c8; // TArray<float>
		constexpr auto _canEngineBeStalledByUpShift = 0x7d8; // bool
		constexpr auto _engineStallingByUpShiftOccurrenceInterval = 0x7dc; // float
		constexpr auto _engineStallingByUpShiftAudioEvent = 0x7e8; // UAkAudioEvent*
		constexpr auto _engineStallingByUpShiftAudioEventTriggerTimeRatios = 0x7f0; // TArray<float>
		constexpr auto _engineStallingWhenStartingViaMotionAudioEvent = 0x800; // UAkAudioEvent*
		constexpr auto _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios = 0x808; // TArray<float>
		constexpr auto _hasFuel = 0x818; // bool
		constexpr auto _fuelResourceType = 0x820; // UGameResourceType*
		constexpr auto _maxFuelAmount = 0x828; // float
		constexpr auto _fuelDrainWhenStartingEngine = 0x82c; // float
		constexpr auto _engineFuelDrainPerRpm = 0x830; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmScale = 0x8b8; // float
		constexpr auto _engineFuelDrainPerRpmUnderLoad = 0x8c0; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmUnderLoadScale = 0x948; // float
		constexpr auto _fuelDrainWhenInactive = 0x94c; // float
		constexpr auto _fuelFillingBaseDuration = 0x950; // float
		constexpr auto _fillingDurationPerFuelAmountFilled = 0x954; // float
		constexpr auto _experienceAwardedPerFuelAmountFilled = 0x958; // float
		constexpr auto _prisonerFillingFuelMontage = 0x960; // UAnimMontage*
		constexpr auto _startFillingFuelAudioEvent = 0x968; // UAkAudioEvent*
		constexpr auto _stopFillingFuelAudioEvent = 0x970; // UAkAudioEvent*
		constexpr auto _startFillingFuelWithReplenishableResourceAudioEvent = 0x978; // UAkAudioEvent*
		constexpr auto _stopFillingFuelWithReplenishableResourceAudioEvent = 0x980; // UAkAudioEvent*
		constexpr auto _fillFuelWithReplenishableResourceOverlapBoxExtent = 0x988; // FVector
		constexpr auto _fuelDrainingBaseDuration = 0x994; // float
		constexpr auto _drainingDurationPerFuelAmountDrained = 0x998; // float
		constexpr auto _experienceAwardedPerFuelAmountDrained = 0x99c; // float
		constexpr auto _prisonerDrainingFuelMontage = 0x9a0; // UAnimMontage*
		constexpr auto _startDrainingFuelAudioEvent = 0x9a8; // UAkAudioEvent*
		constexpr auto _stopDrainingFuelAudioEvent = 0x9b0; // UAkAudioEvent*
		constexpr auto _engineStallingParametersWhenOutOfFuel = 0x9b8; // FVehicleEngineStallingParameters
		constexpr auto _fuelUpdateInterval = 0xa14; // float
		constexpr auto _hasBattery = 0xa20; // bool
		constexpr auto _batteryResourceType = 0xa28; // UGameResourceType*
		constexpr auto _maxBatteryAmount = 0xa30; // float
		constexpr auto _batteryDrainWhenStartingEngine = 0xa34; // float
		constexpr auto _batteryDrainWhenHornIsActive = 0xa38; // float
		constexpr auto _batteryDrainWhenLightsAreActive = 0xa3c; // float
		constexpr auto _batteryDrainWhenRadioIsTurnedOn = 0xa40; // float
		constexpr auto _batteryDrainWhenInactive = 0xa44; // float
		constexpr auto _batteryDynamoChargePerKph = 0xa48; // FRuntimeFloatCurve
		constexpr auto _batteryDynamoChargePerKphScale = 0xad0; // float
		constexpr auto _batteryAlternatorChargePerRpm = 0xad8; // FRuntimeFloatCurve
		constexpr auto _batteryAlternatorChargePerRpmScale = 0xb60; // float
		constexpr auto _batteryPowerReductionThreshold = 0xb64; // float
		constexpr auto _startEngineDurationPenaltyWhenBatteryReducedInPower = 0xb68; // float
		constexpr auto _batteryChargingBaseDuration = 0xb6c; // float
		constexpr auto _chargingDurationPerBatteryAmountCharged = 0xb70; // float
		constexpr auto _experienceAwardedPerBatteryAmountCharged = 0xb74; // float
		constexpr auto _prisonerChargingBatteryMontage = 0xb78; // UAnimMontage*
		constexpr auto _startChargingBatteryAudioEvent = 0xb80; // UAkAudioEvent*
		constexpr auto _stopChargingBatteryAudioEvent = 0xb88; // UAkAudioEvent*
		constexpr auto _batteryUpdateInterval = 0xb94; // float
		constexpr auto _engineStartingAudioEvent = 0xbb0; // UAkAudioEvent*
		constexpr auto _engineStartedAudioEvent = 0xbb8; // UAkAudioEvent*
		constexpr auto _engineTurnedOffAudioEvent = 0xbc0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartAudioEvent = 0xbc8; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoFuelAudioEvent = 0xbd0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoBatteryAudioEvent = 0xbd8; // UAkAudioEvent*
		constexpr auto _engineStalledAudioEvent = 0xbe0; // UAkAudioEvent*
		constexpr auto _noFuelToStartEngineAudioEvent = 0xbe8; // UAkAudioEvent*
		constexpr auto _noBatteryToStartEngineAudioEvent = 0xbf0; // UAkAudioEvent*
		constexpr auto _hornStartAudioEvent = 0xbf8; // UAkAudioEvent*
		constexpr auto _hornStopAudioEvent = 0xc00; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateHornAudioEvent = 0xc08; // UAkAudioEvent*
		constexpr auto _lightsActivatedAudioEvent = 0xc10; // UAkAudioEvent*
		constexpr auto _lightsDeactivatedAudioEvent = 0xc18; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateLightsAudioEvent = 0xc20; // UAkAudioEvent*
		constexpr auto _noBatteryToTurnOnRadioAudioEvent = 0xc28; // UAkAudioEvent*
		constexpr auto _gearUpAudioEvent = 0xc30; // UAkAudioEvent*
		constexpr auto _gearDownAudioEvent = 0xc38; // UAkAudioEvent*
		constexpr auto _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero = 0xc40; // float
		constexpr auto _rpmScaleForSoundWhenSpeedIsLessThanZero = 0xc44; // float
		constexpr auto _soundCullDistance = 0xc48; // float
		constexpr auto _vehicleRPMRTPCInterpolationTime = 0xc4c; // float
		constexpr auto _vehicleLoadRTPCInterpolationTime = 0xc50; // float
		constexpr auto _vehicleSpeedRTPCInterpolationTime = 0xc54; // float
		constexpr auto _numAudioObjectsForTires = 0xc58; // int32_t
		constexpr auto _repairableTireParams = 0xc60; // FRepairableParams
		constexpr auto _tireEffectUpdateRange = 0xc98; // float
		constexpr auto _tireEffectProperties = 0xcb8; // TArray<FVehicleTireEffectProperties>
		constexpr auto _exhaustEffects = 0xce0; // FVehicleExhaustEffects
		constexpr auto _hornActive = 0xd28; // bool
		constexpr auto _lightsActive = 0xd29; // bool
		constexpr auto _headlightsMaterialParameter = 0xd2c; // FVehicleMaterialParameterDescription
		constexpr auto _reverseLightsMaterialParameter = 0xd3c; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsMaterialParameter = 0xd4c; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsAlwaysOnIfLightsAreActivated = 0xd5c; // float
		constexpr auto _corpseClass = 0xd78; // AVehicleCorpse*
		constexpr auto _sendStateInterval = 0xd84; // float
		constexpr auto _makeNoiseInterval = 0xd88; // float
		constexpr auto _maxNoiseLoudnessFromEngine = 0xd8c; // float
		constexpr auto _maxNoiseLoudnessFromSpeed = 0xd90; // float
		constexpr auto _speedThresholdInKphToAffectNavigation = 0xd98; // float
		constexpr auto _allowedWaterImmersionDepth = 0xda0; // float
		constexpr auto _disallowedWaterImmersionDepth = 0xda4; // float
		constexpr auto _waterImmersionDepthToForceEvictMountees = 0xda8; // float
		constexpr auto _timeToEvictMounteesWhenImmersedIntoWater = 0xdac; // float
		constexpr auto _timeToForceEvictMounteesWhenImmersedIntoWater = 0xdb0; // float
		constexpr auto _timeToAutoDestructWhenImmersedIntoWater = 0xdb4; // float
		constexpr auto _explosionDamage = 0xdb8; // float
		constexpr auto _explosionForce = 0xdbc; // float
		constexpr auto _repHealthFuelBatteryAmount = 0xe40; // uint32_t
		constexpr auto _repPackedSimulationState = 0xe48; // uint64_t
		constexpr auto _aiTeam = 0xe60; // EAITeam
	}

	namespace n_UABP_Prisoner_Grappled_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x388; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UCustomZoneSettingsConfigurationsList {
		constexpr auto _configurationCountDisplay = 0x280; // UTextBlock*
		constexpr auto _buttonAddConfiguration = 0x288; // UButton*
		constexpr auto _scrollBox = 0x290; // UScrollBox*
		constexpr auto _configurationWidgetClass = 0x298; // UCustomZoneSettingsConfiguration*
	}

	namespace n_UJournalPanelWidget {
		constexpr auto _journalWidgetSwitcher = 0x260; // UWidgetSwitcher*
		constexpr auto _mainStoryContainerWidget = 0x268; // UJournalMissionContainer*
		constexpr auto _sideStoryContainerWidget = 0x270; // UJournalMissionContainer*
		constexpr auto _tutorialContainerWidget = 0x278; // UJournalMissionContainer*
		constexpr auto _objectivesContainerWidget = 0x280; // UJournalObjectiveContainer*
		constexpr auto _mainStoryTab = 0x288; // UMissionTabWidget*
		constexpr auto _sideStoryTab = 0x290; // UMissionTabWidget*
		constexpr auto _tutorialTab = 0x298; // UMissionTabWidget*
		constexpr auto _firstTabDivider = 0x2a0; // UImage*
		constexpr auto _secondTabDivider = 0x2a8; // UImage*
	}

	namespace n_UPrisonerBodyEffectUIData {
		constexpr auto _bodyEffectClass = 0x30; // UPrisonerBodyEffect*
	}

	namespace n_UVehicleWeaponAimingParameters {
		constexpr auto SupportedStance = 0x28; // TArray<EVehicleWeaponAimingStance>
		constexpr auto StanceData = 0x38; // FVehicleWeaponAimingStanceData [0x2]
	}

	namespace n_UVicinityPanel3 {
		constexpr auto _searchedItemsBox = 0x278; // UWrapBox*
		constexpr auto _vicinityBox = 0x280; // UWrapBox*
		constexpr auto _vicinityContainersBox = 0x288; // UHorizontalBox*
		constexpr auto _searchedItems = 0x290; // TMap<UObject*, UWidget*>
		constexpr auto _vicinityItems = 0x2e0; // TMap<UObject*, UWidget*>
		constexpr auto _vicinityContainers = 0x330; // TMap<UObject*, UWidget*>
		constexpr auto _filterCheckboxes = 0x420; // TMap<UCheckBox*, FClassesArray>
		constexpr auto _filterCheckboxesNames = 0x470; // TMap<FName, FClassesArray>
		constexpr auto _vicinityContainersPadding = 0x4c0; // FMargin
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UUI_TabModeSwitcher_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Arc1 = 0x288; // UImage*
		constexpr auto Arc2 = 0x290; // UImage*
		constexpr auto Arc3 = 0x298; // UImage*
		constexpr auto Center = 0x2a0; // UImage*
		constexpr auto ModeText = 0x2a8; // UTextBlock*
		constexpr auto _hoveredArcIndex = 0x2b0; // int32_t
		constexpr auto _selectedTabMode = 0x2b4; // ETabMode
	}

	namespace n_AWater_Collector_Raincoat_C {
		constexpr auto BasicGameResourceContainer = 0x7e0; // UBasicGameResourceContainerComponent*
		constexpr auto RainCollector = 0x7e8; // URainCollectorComponent*
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_UTrashSliderWidget {
		constexpr auto ValueChangedTemp_DONOTUSE = 0x290; // FMulticastInlineDelegate
		constexpr auto _emptySlider = 0x2a0; // FSlateBrush
		constexpr auto _filledSlider = 0x328; // FSlateBrush
		constexpr auto _selectedSlider = 0x3b0; // FSlateBrush
		constexpr auto _normalThumb = 0x548; // FSlateBrush
		constexpr auto _selectedThumb = 0x5d0; // FSlateBrush
		constexpr auto _slider = 0x6e0; // USlider*
		constexpr auto _progressBar = 0x6e8; // UProgressBar*
		constexpr auto _selectedColor = 0x6f0; // FDataTableRowHandle
		constexpr auto _disabledColor = 0x700; // FDataTableRowHandle
		constexpr auto _minValue = 0x710; // float
		constexpr auto _maxValue = 0x714; // float
		constexpr auto _stepCount = 0x718; // int32_t
	}

	namespace n_UM1887_Reload_Event_Chamber_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_UMusicPlayerDisplayWidget {
		constexpr auto _shuffleImage = 0x260; // UImage*
		constexpr auto _repeatImage = 0x268; // UImage*
		constexpr auto _previousImage = 0x270; // UImage*
		constexpr auto _pauseImage = 0x278; // UImage*
		constexpr auto _playImage = 0x280; // UImage*
		constexpr auto _nextImage = 0x288; // UImage*
		constexpr auto _songTitleText = 0x290; // UTextBlock*
		constexpr auto _inactiveOpacity = 0x298; // float
		constexpr auto _iconActivityDuration = 0x29c; // float
		constexpr auto _trackNameDuration = 0x2a0; // float
		constexpr auto _radioStationNameDuration = 0x2a4; // float
		constexpr auto _trackNameOffsetStep = 0x2a8; // float
		constexpr auto _trackNameOffsetPadding = 0x2ac; // float
		constexpr auto _trackNameWaitingDuration = 0x2b0; // float
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UBakedCurvatureMapToolProperties {
		constexpr auto CurvatureType = 0x60; // EBakedCurvatureTypeMode
		constexpr auto ColorMode = 0x64; // EBakedCurvatureColorMode
		constexpr auto RangeMultiplier = 0x68; // float
		constexpr auto MinRangeMultiplier = 0x6c; // float
		constexpr auto Clamping = 0x70; // EBakedCurvatureClampMode
		constexpr auto bGaussianBlur = 0x74; // bool
		constexpr auto BlurRadius = 0x78; // float
	}

	namespace n_UCharacterCreationWidget {
		constexpr auto _concealedMode = 0x260; // UTrashNamedCarouselWidget*
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_ABP_Survival_BagCrafting_CutRags_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UDropZoneParticipantStats {
		constexpr auto Activations = 0x48; // int32_t
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UConZVehicleSpringArmComponent {
		constexpr auto _ownerAccelerationDirectionInterpSpeed = 0x280; // float
		constexpr auto _maxCameraOffset = 0x284; // FVector
		constexpr auto _cameraOffsetInterpSpeed = 0x290; // FVector
		constexpr auto _maxCameraPitch = 0x29c; // float
	}

	namespace n_UAnimNotify_WaterPaddle {
		constexpr auto ParticleSystem = 0x38; // UParticleSystem*
		constexpr auto AudioEvent = 0x40; // UAkAudioEvent*
		constexpr auto VolumeMultiplier = 0x48; // float
		constexpr auto PitchMultiplier = 0x4c; // float
		constexpr auto IsUnderwater = 0x50; // bool
		constexpr auto IsAttached = 0x51; // bool
		constexpr auto AttachPointName = 0x54; // FName
		constexpr auto DebugMode = 0x5c; // bool
	}

	namespace n_UABP_Chainsaw_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x3e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_6 = 0x538; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x580; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x5c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x610; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x6c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x6e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x710; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x738; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x7d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x888; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x8d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x918; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x960; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x988; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x9b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x9d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x9f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0xa20; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_BlendListByBool = 0xe60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xf00; // FAnimNode_SequencePlayer
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UPointSetComponent {
		constexpr auto PointMaterial = 0x470; // UMaterialInterface*
		constexpr auto Bounds = 0x478; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x494; // bool
	}

	namespace n_UMetabolismHealthPanel {
		constexpr auto _icuMonitor = 0x260; // UMetabolism_BCU_ICU_Monitor*
		constexpr auto _bodyOverviewPanel = 0x268; // UMetabolismBodyOverviewPanel*
		constexpr auto _treatmentPanel = 0x270; // UMetabolismTreatmentPanel*
		constexpr auto _resetHealthPanelToSelf = 0x278; // UButton*
		constexpr auto _healthPanelNormal = 0x280; // UPanelWidget*
		constexpr auto _healthPanelOutOfRange = 0x288; // UPanelWidget*
		constexpr auto _healthPanelSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto _patientName = 0x298; // UTextBlock*
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_ABP_Survival_Storage_CutTree_Objective_C {
		constexpr auto DefaultSceneRoot = 0x360; // USceneComponent*
	}

	namespace n_UUI_StatisticsDetailsWidget_C {
		constexpr auto _verticalLine = 0x390; // UImage*
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_AExplosiveTrapItem {
		constexpr auto _detonationDelay = 0x910; // float
		constexpr auto _trapForwardVector = 0x914; // FVector
		constexpr auto _netCullDistanceSquaredMeters = 0x920; // float
		constexpr auto _triggerSound = 0x928; // UAkAudioEvent*
		constexpr auto _detonationSound = 0x930; // UAkAudioEvent*
		constexpr auto _detonationParticles = 0x938; // UParticleSystem*
		constexpr auto _detonationParticlesTransform = 0x940; // FTransform
		constexpr auto _hasPrimaryExplosion = 0x970; // bool
		constexpr auto _primaryBaseDamage = 0x974; // float
		constexpr auto _primaryMinimumDamage = 0x978; // float
		constexpr auto _primaryDamageInnerRadius = 0x97c; // float
		constexpr auto _primaryDamageOuterRadius = 0x980; // float
		constexpr auto _primaryDamageMinAngleDeg = 0x984; // float
		constexpr auto _primaryDamageMaxAngleDeg = 0x988; // float
		constexpr auto _primaryDamageChanceMultiplier = 0x98c; // float
		constexpr auto _primaryDamageMinChance = 0x990; // float
		constexpr auto _primaryDamageMaxChance = 0x994; // float
		constexpr auto _primaryDamageFalloff = 0x998; // float
		constexpr auto _primaryDamageAngleFalloff = 0x99c; // float
		constexpr auto _hasSecondaryExplosion = 0x9a0; // bool
		constexpr auto _secondaryBaseDamage = 0x9a4; // float
		constexpr auto _secondaryMinimumDamage = 0x9a8; // float
		constexpr auto _secondaryDamageInnerRadius = 0x9ac; // float
		constexpr auto _secondaryDamageOuterRadius = 0x9b0; // float
		constexpr auto _secondaryDamageFalloff = 0x9b4; // float
		constexpr auto _instantlyDestroysStructures = 0x9b8; // bool
		constexpr auto _structureDestructionRadius = 0x9bc; // float
		constexpr auto _minimalElementAreaCovered = 0x9c0; // float
		constexpr auto _structureDestructionMinAngleDeg = 0x9c4; // float
		constexpr auto _structureDestructionMaxAngleDeg = 0x9c8; // float
		constexpr auto _explosionDamagePositionOffset = 0x9cc; // float
		constexpr auto _explosionForce = 0x9d0; // float
	}

	namespace n_UWaypointScreenWidget {
		constexpr auto WaypointClass = 0x278; // UWaypointWidget*
	}

	namespace n_UUI_MissionPrompt_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Image_11 = 0x280; // UImage*
		constexpr auto NoButton = 0x288; // UUI_TrashMenuButton_C*
		constexpr auto YesButton = 0x290; // UUI_TrashMenuButton_C*
	}

	namespace n_UUI_CraftingInfo_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x370; // UImage*
		constexpr auto CloseButton = 0x378; // UButton*
		constexpr auto DescriptionText = 0x380; // UTextBlock*
		constexpr auto Image_1 = 0x388; // UImage*
		constexpr auto MainResizableWindow = 0x390; // UResizableWindow_C*
	}

	namespace n_ABP_Menu_Design_C {
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto Sparks3 = 0x330; // UParticleSystemComponent*
		constexpr auto Sparks2 = 0x338; // UParticleSystemComponent*
		constexpr auto Sparks1 = 0x340; // UParticleSystemComponent*
		constexpr auto Smoke4 = 0x348; // UParticleSystemComponent*
		constexpr auto Smoke3 = 0x350; // UParticleSystemComponent*
		constexpr auto Smoke2 = 0x358; // UParticleSystemComponent*
		constexpr auto Smoke1 = 0x360; // UParticleSystemComponent*
		constexpr auto SpotLight1 = 0x368; // UChildActorComponent*
		constexpr auto StaticMesh1 = 0x370; // UStaticMeshComponent*
		constexpr auto StaticMesh = 0x378; // UStaticMeshComponent*
		constexpr auto SM_Monitor_LP_01 = 0x380; // UStaticMeshComponent*
		constexpr auto SM_Menu_Design_Fan_02 = 0x388; // UStaticMeshComponent*
		constexpr auto BP_Sliding_Doors_02 = 0x390; // UChildActorComponent*
		constexpr auto BP_Sliding_Doors_012 = 0x398; // UChildActorComponent*
		constexpr auto BP_Sliding_Doors_011 = 0x3a0; // UChildActorComponent*
		constexpr auto BP_Sliding_Doors_01 = 0x3a8; // UChildActorComponent*
		constexpr auto LightComponent024 = 0x3b0; // USpotLightComponent*
		constexpr auto LightComponent023 = 0x3b8; // USpotLightComponent*
		constexpr auto LightComponent019 = 0x3c0; // USpotLightComponent*
		constexpr auto LightComponent015 = 0x3c8; // USpotLightComponent*
		constexpr auto LightComponent013 = 0x3d0; // USpotLightComponent*
		constexpr auto LightComponent012 = 0x3d8; // USpotLightComponent*
		constexpr auto LightComponent011 = 0x3e0; // USpotLightComponent*
		constexpr auto LightComponent04 = 0x3e8; // USpotLightComponent*
		constexpr auto LightComponent01 = 0x3f0; // USpotLightComponent*
		constexpr auto LightComponent0 = 0x3f8; // USpotLightComponent*
		constexpr auto StaticMeshComponent0 = 0x400; // UStaticMeshComponent*
		constexpr auto SharedRoot = 0x408; // USceneComponent*
		constexpr auto PrisonerMoveInsideTimeline_NewTrack_0_18E89A024149A17A3D64EEA95389DBF2 = 0x410; // float
		constexpr auto PrisonerMoveInsideTimeline__Direction_18E89A024149A17A3D64EEA95389DBF2 = 0x414; // ETimelineDirection
		constexpr auto PrisonerMoveInsideTimeline = 0x418; // UTimelineComponent*
		constexpr auto YawAngle = 0x420; // float
		constexpr auto RotationSpeed = 0x424; // float
		constexpr auto PrisonerHolder = 0x428; // AActor*
		constexpr auto PrisonerHolderInitialLocationMarker = 0x430; // AActor*
		constexpr auto PrisonerHolderFinalLocationMarker = 0x438; // AActor*
		constexpr auto _isPrisonerInsideDoor = 0x440; // bool
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UElectricianGlovesTag {
		constexpr auto PrisonerDamageModifier = 0x30; // float
	}

	namespace n_UUI_ItemClass_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x288; // UImage*
		constexpr auto MainImage = 0x290; // UImage*
		constexpr auto BackgroundVisible = 0x298; // bool
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ABowAttachmentSilencer {
		constexpr auto _noiseMultiplier = 0x7e0; // float
	}

	namespace n_UInventoryPositionData2D {
		constexpr auto PositionX = 0x28; // int32_t
		constexpr auto PositionY = 0x2c; // int32_t
		constexpr auto Rotation = 0x30; // char
		constexpr auto IsLoading = 0x31; // bool
	}

	namespace n_UMainMenu {
		constexpr auto _continueButton = 0x260; // UTrashMenuButton*
		constexpr auto _multiplayerButton = 0x268; // UTrashMenuButton*
		constexpr auto _singleplayerButton = 0x270; // UTrashMenuButton*
		constexpr auto _optionsButton = 0x278; // UTrashMenuButton*
	}

	namespace n_UPrisonerBodySymptom_Disorientation {
		constexpr auto _maxSeverity = 0xb8; // float
	}

	namespace n_UAnimNotify_FishingActionNotify {
		constexpr auto FishingActionNotifyType = 0x38; // EFishingActionNotifyType
	}

	namespace n_AGlobalAquaticLifeManager {
		constexpr auto _updateRegisteredPrisonersTickTime = 0x220; // float
		constexpr auto _fishSpawningVolumes = 0x1618; // TMap<int64_t, FAquaticLifeSpawningVolumeDescription>
		constexpr auto _localFishSchoolManagerRelevancyRange = 0x1688; // float
		constexpr auto _distanceBetweenLocalFishSchoolManagers = 0x168c; // float
		constexpr auto _localFishSchoolManagerTickTime = 0x1690; // float
		constexpr auto _localFishSchoolManagerDestructionTime = 0x1694; // float
		constexpr auto _prisonerWaterImmersionRelevancyThreshold = 0x1698; // float
		constexpr auto _maxSpawnedSchools = 0x169c; // int32_t
		constexpr auto _localFishingZoneIndicatorManagerRelevancyRange = 0x16c0; // float
		constexpr auto _localFishingZoneIndicatorManagerTickTime = 0x16c4; // float
		constexpr auto _localFishingZoneIndicatorManagerDestructionTime = 0x16c8; // float
		constexpr auto _indicatorClasses = 0x16d0; // TMap<EAquaticIndividualSize, AFishingZoneIndicator*>
		constexpr auto _fishingPrecision = 0x1720; // float
		constexpr auto _weatherPercentageCurve = 0x1728; // UCurveFloat*
		constexpr auto _maxSpawnedIndicators = 0x1730; // int32_t
		constexpr auto _maxLargeAquaticAnimals = 0x1758; // int32_t
		constexpr auto _possibleLargeAquaticAnimals = 0x1760; // TArray<ULargeAquaticAnimalSpeciesData*>
		constexpr auto _distanceBetweenLargeAquaticAnimals = 0x1770; // float
		constexpr auto _largeAquaticAnimalSpawningRangeMin = 0x1774; // float
		constexpr auto _largeAquaticAnimalSpawningRangeMax = 0x1778; // float
		constexpr auto _requiredTimeInWaterToSpawnLargeAquaticAnimal = 0x177c; // float
		constexpr auto _requiredTimeInWaterWhileBleedingToSpawnLargeAquaticAnimal = 0x1780; // float
		constexpr auto _timeToReenableLargeAquaticAnimalSpawnZone = 0x1784; // float
	}

	namespace n_UTradeablePricesResponse {
		constexpr auto _payload = 0x28; // TArray<FEconomyManagerRequestResponseData>
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_USCUE4Settings {
		constexpr auto KeyGeneratorPath = 0x28; // FString
	}

	namespace n_AConZGameMode {
		constexpr auto _doorLockingRegistry = 0x338; // UDoorLockingRegistry*
		constexpr auto _prisonerClassToSpawn = 0x340; // APrisoner*
		constexpr auto _droneClassToSpawn = 0x348; // ADrone*
		constexpr auto _itemSpawningManagerClass = 0x460; // AItemSpawningManager*
		constexpr auto _itemSpawningManager = 0x468; // AItemSpawningManager*
		constexpr auto _itemVirtualizationManagerClass = 0x470; // AItemVirtualizationManager*
		constexpr auto _itemVirtualizationManager = 0x478; // AItemVirtualizationManager*
		constexpr auto _globalAnimalSpawner = 0x480; // AGlobalAnimalSpawner*
		constexpr auto _globalBirdSpawner = 0x488; // AGlobalBirdSpawner2*
		constexpr auto _vehicleSpawningManagerClass = 0x490; // AVehicleSpawningManager*
		constexpr auto _vehicleSpawningManager = 0x498; // AVehicleSpawningManager*
		constexpr auto _reportingManagerClass = 0x4a0; // AReportingManager*
		constexpr auto _reportingManager = 0x4a8; // AReportingManager*
		constexpr auto _characterSpawningManagerClass = 0x4b0; // ACharacterSpawningManager*
		constexpr auto _characterSpawningManager = 0x4b8; // ACharacterSpawningManager*
		constexpr auto _globalAquaticLifeManagerClass = 0x4c0; // AGlobalAquaticLifeManager*
		constexpr auto _globalAquaticLifeManager = 0x4c8; // AGlobalAquaticLifeManager*
		constexpr auto _globalGuardedZoneManagerClass = 0x4d0; // AGlobalGuardedZoneManager*
		constexpr auto _globalGuardedZoneManager = 0x4d8; // AGlobalGuardedZoneManager*
		constexpr auto _achievementsManagerServerClass = 0x4e0; // AAchievementsManagerServer*
		constexpr auto _achievementsManagerServer = 0x4e8; // AAchievementsManagerServer*
		constexpr auto _missionLevelManagerClass = 0x4f0; // AMissionLevelManager*
		constexpr auto _missionLevelManager = 0x4f8; // AMissionLevelManager*
		constexpr auto _missionSchedulerClass = 0x500; // AMissionScheduler*
		constexpr auto _missionScheduler = 0x508; // AMissionScheduler*
		constexpr auto _survivalStatsHandlerClass = 0x510; // ASurvivalStatsHandler*
		constexpr auto _survivalStatsHandler = 0x518; // ASurvivalStatsHandler*
		constexpr auto _heatSourceManagerClass = 0x520; // AHeatSourceManager*
		constexpr auto _heatSourceManager = 0x528; // AHeatSourceManager*
		constexpr auto _baseManagerClass = 0x530; // AConZBaseManager*
		constexpr auto _baseManager = 0x538; // AConZBaseManager*
		constexpr auto _rainCollectionManager = 0x540; // URainCollectionManager*
		constexpr auto _ladderMarkersReplicatorClass = 0x548; // ALadderMarkersReplicator*
		constexpr auto _ladderMarkersReplicator = 0x550; // ALadderMarkersReplicator*
		constexpr auto _effectOverTimeDealerClass = 0x558; // AEffectOverTimeDealer*
		constexpr auto _effectOverTimeDealer = 0x560; // AEffectOverTimeDealer*
		constexpr auto _notificationManagerClass = 0x568; // ANotificationsManager*
		constexpr auto _notificationManager = 0x570; // ANotificationsManager*
		constexpr auto _voteSystemManagerClass = 0x578; // AVoteSystemManager*
		constexpr auto _voteSystemManager = 0x580; // AVoteSystemManager*
		constexpr auto _serverAnalyticsManagerClass = 0x588; // AServerAnalyticsManager*
		constexpr auto _serverAnalyticsManager = 0x590; // AServerAnalyticsManager*
		constexpr auto _aiDetectionTimerHandlerClass = 0x598; // AAIDetectionTimerHandler*
		constexpr auto _aiDetectionTimerHandler = 0x5a0; // AAIDetectionTimerHandler*
		constexpr auto _serverResponse = 0x5a8; // UDedicatedServerResponse*
	}

	namespace n_ACTFFlagStand {
		constexpr auto Mesh = 0x220; // UStaticMeshComponent*
		constexpr auto Light = 0x228; // UPointLightComponent*
		constexpr auto _lightColor = 0x230; // FLinearColor
	}

	namespace n_UTabElement {
		constexpr auto CategoryNameWidget = 0x278; // UWidget*
		constexpr auto maxIndex = 0x280; // char
		constexpr auto Index = 0x281; // char
		constexpr auto _initialPosition = 0x284; // FVector2D
		constexpr auto _oldPosition = 0x28c; // FVector2D
		constexpr auto _newPosition = 0x294; // FVector2D
		constexpr auto _initialSize = 0x29c; // FVector2D
		constexpr auto _oldSize = 0x2a4; // FVector2D
		constexpr auto _newSize = 0x2ac; // FVector2D
		constexpr auto _oldAlpha = 0x2b4; // float
		constexpr auto _newAlpha = 0x2b8; // float
		constexpr auto _interpolationTime = 0x2bc; // float
		constexpr auto _interpolationDuration = 0x2c0; // float
	}

	namespace n_AWheelBarrow {
		constexpr auto _meshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto _maxDriveOrBoardAngle = 0x2a4; // float
		constexpr auto _speedThresholdToEvictAllMountees = 0x2a8; // float
		constexpr auto _vertSpeedThresholdToEvictAllMountees = 0x2ac; // float
		constexpr auto _wheelMeshRadius = 0x2d0; // float
		constexpr auto _minWheelMeshWobbleAngle = 0x2d4; // float
		constexpr auto _maxWheelMeshWobbleAngle = 0x2d8; // float
		constexpr auto _mountSlots = 0x300; // TArray<UWheelBarrowMountSlot*>
		constexpr auto _spawnParameters = 0x360; // FVehicleSpawnParameters
		constexpr auto _physicsDominanceGroup = 0x38c; // EConZPxDominanceGroup
		constexpr auto _driverCapsuleRelativeLocation = 0x390; // FVector
		constexpr auto _driverCapsuleMass = 0x39c; // float
		constexpr auto _driverCapsuleLinearDamping = 0x3a0; // float
		constexpr auto _driverCapsuleAngularDamping = 0x3a4; // float
		constexpr auto _driverCapsuleConstraintRelativeLocation = 0x3a8; // FVector
		constexpr auto _driverCapsuleConstraintSwingLimit = 0x3b4; // float
		constexpr auto _driverCapsuleConstraintTwistLimit = 0x3b8; // float
		constexpr auto _driverTransformRelativeToCapsule = 0x3c0; // FTransform
		constexpr auto _forwardDriveForceMagnitude = 0x3f0; // float
		constexpr auto _reverseDriveForceMagnitude = 0x3f4; // float
		constexpr auto _steerForceMagnitude = 0x3f8; // float
		constexpr auto _steerForceMagnitudeWhenLimping = 0x3fc; // float
		constexpr auto _steerRollTorqueMagnitude = 0x400; // float
		constexpr auto _meshBrakeForceScale = 0x404; // float
		constexpr auto _meshBrakeForceMagnitudeWhenCloseToMaxSpeed = 0x408; // float
		constexpr auto _meshSidewaysBrakeForceScale = 0x40c; // float
		constexpr auto _driverCapsuleBrakeForceScale = 0x410; // float
		constexpr auto _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed = 0x414; // float
		constexpr auto _driverCapsuleSidewaysBrakeForceScale = 0x418; // float
		constexpr auto _physicsMaterialFrictionWhenDriven = 0x41c; // float
		constexpr auto _physicsMaterialRestitutionWhenDriven = 0x420; // float
		constexpr auto _stickyFrictionEnabled = 0x424; // bool
		constexpr auto _stickyFrictionSpeedThreshold = 0x428; // float
		constexpr auto _stickyFriction = 0x42c; // float
		constexpr auto _startedMovingAudioEvent = 0x430; // UAkAudioEvent*
		constexpr auto _stoppedMovingAudioEvent = 0x438; // UAkAudioEvent*
		constexpr auto _driverActionDifficultyVsSpeed = 0x450; // FRuntimeFloatCurve
		constexpr auto _driverActionDifficultyVsSpeedWhenLimping = 0x4d8; // FRuntimeFloatCurve
		constexpr auto _parametersPerMovementPace = 0x560; // FWheelBarrowParametersPerMovementPace [0x4]
		constexpr auto _maxSpeedModifierInterpedWithDriverDexterity = 0x5e0; // FFloatInterval
		constexpr auto _loadModifierInterpedWithDriverStrength = 0x5e8; // FFloatInterval
		constexpr auto _weightLoadFactorVsFloorSlopeAngle = 0x5f0; // FRuntimeFloatCurve
		constexpr auto _pushImpulseMagnitude = 0x678; // float
		constexpr auto _pushIntensityCurve = 0x680; // UCurveFloat*
		constexpr auto _pushDirectionRatioBetweenForwardAndUp = 0x688; // float
		constexpr auto _maxDistanceToAllowThePush = 0x68c; // float
		constexpr auto _maxAngularVelocityToAllowThePush = 0x690; // float
		constexpr auto _maxHealth = 0x698; // float
		constexpr auto _repairableParams = 0x6a0; // FRepairableParams
		constexpr auto _destroyedAudioEvent = 0x6d8; // UAkAudioEvent*
		constexpr auto _destroyedParticleSystem = 0x6e0; // UParticleSystem*
		constexpr auto _healthDrainPerSpeed = 0x6e8; // float
		constexpr auto _healthDrainPerLoad = 0x6ec; // float
		constexpr auto _healthDrainPerWaterImmersionDepth = 0x6f0; // float
		constexpr auto _healthDrainUpdateInterval = 0x6f4; // float
		constexpr auto _hitDamageVsHitImpulse = 0x700; // FRuntimeFloatCurve
		constexpr auto _damagedByHitAudioEvent = 0x788; // UAkAudioEvent*
		constexpr auto _itemContainerClass = 0x790; // AVehicleItemContainer*
		constexpr auto _shouldDropItemsWhenDestroyed = 0x798; // bool
		constexpr auto _itemContainer = 0x7a0; // AVehicleItemContainer*
		constexpr auto _allowedWaterImmersionDepth = 0x7ac; // float
		constexpr auto _mountSlotIndicatorsWidget = 0x7b0; // UUserWidget*
		constexpr auto _driverPhysicsCapsuleComponent = 0x7b8; // UWheelBarrowDriverCapsuleComponent*
		constexpr auto _driverPhysicsConstraintComponent = 0x7c0; // UPhysicsConstraintComponent*
		constexpr auto _physicsMaterialWhenDriven = 0x7e0; // UPhysicalMaterial*
		constexpr auto _sendStateFrequency = 0x964; // float
		constexpr auto _repState1 = 0x968; // char
		constexpr auto _canEverBeTraded = 0x969; // bool
		constexpr auto _tradeableParams = 0x970; // FTradeableTagParams
	}

	namespace n_UMirrorTool {
		constexpr auto Settings = 0x98; // UMirrorToolProperties*
		constexpr auto ToolActions = 0xa0; // UMirrorToolActionPropertySet*
		constexpr auto MeshesToMirror = 0xa8; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto Previews = 0xb8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PlaneMechanic = 0x110; // UConstructionPlaneMechanic*
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_ACharacterSpawner {
		constexpr auto SpriteComponent = 0x220; // UBillboardComponent*
		constexpr auto Characters = 0x228; // TArray<FCharacterSpawnerData2>
		constexpr auto AllowedSurfaces = 0x238; // TArray<EPhysicalSurface>
		constexpr auto CharactersPerCell = 0x248; // int32_t
		constexpr auto TotalCharacters = 0x24c; // int32_t
		constexpr auto CellSize = 0x250; // float
		constexpr auto CellsX = 0x254; // int32_t
		constexpr auto CellsY = 0x258; // int32_t
		constexpr auto MinSpawnRadius = 0x25c; // float
		constexpr auto MaxSpawnRadius = 0x260; // float
		constexpr auto MinSpawnDistance = 0x264; // float
		constexpr auto MaxSpawnDistance = 0x268; // float
		constexpr auto CullDistance = 0x26c; // float
		constexpr auto SpawnRetries = 0x270; // int32_t
		constexpr auto TickFrequency = 0x274; // float
		constexpr auto Enabled = 0x278; // bool
		constexpr auto DebugDraw = 0x279; // bool
		constexpr auto DebugColor = 0x27c; // FColor
	}

	namespace n_ADropZoneKey {
		constexpr auto SphereComponent = 0x7c0; // USphereComponent*
		constexpr auto _gameEvent = 0x7c8; // ADropZoneGameEvent*
	}

	namespace n_AChestItem {
		constexpr auto _capacityX = 0x7d0; // int32_t
		constexpr auto _capacityY = 0x7d4; // int32_t
		constexpr auto _inventoryComponent = 0x7d8; // UInventoryItemComponent*
		constexpr auto _inventoryContainer2D = 0x7e8; // UInventoryContainer2D*
		constexpr auto _buriableChestItemComponent = 0x808; // UBuriableChestItemComponent*
		constexpr auto _nameableItemComponent = 0x810; // UNameableItemComponent*
		constexpr auto _canContainChestItem = 0x818; // bool
		constexpr auto _lockpickableEnabled = 0x819; // bool
		constexpr auto _overrideCanBeNamed = 0x81a; // bool
		constexpr auto _canBeNamed = 0x81b; // bool
		constexpr auto _containedItemsWeight = 0x81c; // float
		constexpr auto _owningUserProfileId = 0x820; // FDbIntegerId
		constexpr auto _lockItemsClasses = 0x828; // TArray<UObject*>
		constexpr auto _lockData = 0x838; // TArray<FLockData>
		constexpr auto _locks = 0x848; // TArray<FDbIntegerId>
		constexpr auto _activeAccessLevel = 0x868; // EAccessLevel
		constexpr auto _cachedInventoryCount = 0x86c; // int32_t
	}

	namespace n_UHitReactComponent {
		constexpr auto HitReactMappings = 0xc8; // TArray<UHitReactMapping*>
		constexpr auto PhysicalHitReactData = 0xd8; // FPhysicalHitReactData
		constexpr auto RagdollConstraintProfileName = 0xf0; // FName
		constexpr auto RagdollRestThresholdSingleBodyMax = 0xf8; // float
		constexpr auto RagdollRestThresholdAverageBodyMax = 0xfc; // float
		constexpr auto _pelvisBoneName = 0x128; // FName
		constexpr auto _rootBoneName = 0x130; // FName
		constexpr auto _getUpFromFaceMontage = 0x138; // UAnimMontage*
		constexpr auto _getUpFromBackMontage = 0x140; // UAnimMontage*
		constexpr auto _ragdollTransitionState = 0x1ba; // ERagdollTransitionState
		constexpr auto _serverRagollLocation = 0x1bc; // FVector
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UOnAcceptHandleSourcesProperties {
		constexpr auto OnToolAccept = 0x60; // EHandleSourcesMethod
	}

	namespace n_UDisplaceMeshSineWaveProperties {
		constexpr auto SineWaveFrequency = 0x60; // float
		constexpr auto SineWavePhaseShift = 0x64; // float
		constexpr auto SineWaveDirection = 0x68; // FVector
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_ADropZoneEquipmentTable {
		constexpr auto _trackedItems = 0x220; // TArray<AItem*>
	}

	namespace n_UGameEventParticipantStatsWidget {
		constexpr auto _gameEvent = 0x278; // AGameEventBase*
		constexpr auto _index = 0x280; // int32_t
		constexpr auto _scoreboard = 0x288; // UGameEventScoreboardWidget*
		constexpr auto _teamIndex = 0x290; // int32_t
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_ADummyPawn_C {
		constexpr auto DefaultSceneRoot = 0x280; // USceneComponent*
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UPolyEditExtrudeProperties {
		constexpr auto Direction = 0x60; // EPolyEditExtrudeDirection
		constexpr auto bShellsToSolids = 0x64; // bool
	}

	namespace n_UBaseItemContainerWidget {
		constexpr auto ObjectAddedToContainer = 0x278; // FMulticastInlineDelegate
		constexpr auto Columns = 0x28c; // int32_t
		constexpr auto Rows = 0x290; // int32_t
		constexpr auto GridPanel = 0x298; // UGridPanel*
		constexpr auto HighlightBorder = 0x2a0; // UUserWidget*
	}

	namespace n_UEmblemData {
		constexpr auto BackgroundTextures = 0x30; // TArray<UTexture2D*>
		constexpr auto SymbolTextures = 0x40; // TArray<UTexture2D*>
		constexpr auto ColorPalette = 0x50; // TArray<FLinearColor>
	}

	namespace n_UAnimNotify_AkEvent_C {
		constexpr auto Attach Name = 0x38; // FString
		constexpr auto Event = 0x48; // UAkAudioEvent*
		constexpr auto Follow = 0x50; // bool
		constexpr auto EventName = 0x58; // FString
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UUI_DropdownMenuWidget_C {
		constexpr auto ScrollPanel = 0x280; // UScrollBox*
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UJournalMissionContainer {
		constexpr auto _missionItemWidgetsContainer = 0x260; // UVerticalBox*
		constexpr auto _completedMissionItemWidgetsContainer = 0x268; // UVerticalBox*
		constexpr auto _completedMissionsOverlay = 0x270; // UOverlay*
		constexpr auto _noContentText = 0x278; // UTextBlock*
		constexpr auto _missionItemWidgets = 0x288; // TMap<AMission*, TWeakObjectPtr<UMissionItemWidget>>
		constexpr auto _completedMissionItemWidgets = 0x2d8; // TMap<AMission*, TWeakObjectPtr<UMissionItemWidget>>
	}

	namespace n_UDeformMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xc8; // USimpleDynamicMeshComponent*
		constexpr auto TransformProps = 0xd0; // UDeformMeshPolygonsTransformProperties*
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UAnimBP_ImprovisedRifle9mm_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_4 = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_3 = 0x380; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x3c8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x410; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum = 0x458; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x530; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x558; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x580; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer = 0x6d8; // FAnimNode_SequencePlayer
	}

	namespace n_UMinimizableWidget_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto HeaderImageAnimation = 0x2c0; // UWidgetAnimation*
		constexpr auto Border_2 = 0x2c8; // UBorder*
		constexpr auto HeaderImage = 0x2d0; // UImage*
		constexpr auto MaximizeImage = 0x2d8; // UImage*
		constexpr auto MinimizeImage = 0x2e0; // UImage*
		constexpr auto NamedSlotContent = 0x2e8; // UNamedSlot*
		constexpr auto TitleTextBlock = 0x2f0; // UTextBlock*
		constexpr auto WidgetSizeChangedEventDispatcher = 0x2f8; // FMulticastInlineDelegate
		constexpr auto isAlarmOn = 0x308; // bool
		constexpr auto NotifyAlarmSwitchedOnEventDispatcher = 0x310; // FMulticastInlineDelegate
		constexpr auto NotifyAlarmSwitchedOffEventDispatcher = 0x320; // FMulticastInlineDelegate
		constexpr auto _minimizableWidgetSize = 0x330; // FVector2D
		constexpr auto NotifyMinimizableWidgetSizeChangedEventDispatcher = 0x338; // FMulticastInlineDelegate
		constexpr auto _shouldRefreshSize = 0x348; // bool
		constexpr auto isMinimized = 0x349; // bool
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UBP_M1_InsertClipInsertBulletLoop_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UPrisonerBodyConditionOrSymptomUIData {
		constexpr auto _isVisibleByDefault = 0x38; // bool
		constexpr auto _name = 0x40; // FText
		constexpr auto _description = 0x58; // FText
		constexpr auto _sideEffectsUIData = 0x80; // TArray<UPrisonerBodyConditionOrSymptomSideEffectUIData*>
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_ASharkAIController {
		constexpr auto _sharkTurningSpeed = 0x328; // float
		constexpr auto _minDistanceToMovementTarget = 0x32c; // float
		constexpr auto _boundsInflation = 0x330; // float
		constexpr auto _randomMovementExtent = 0x334; // FVector
		constexpr auto _findPathBypassMultiplier = 0x340; // float
		constexpr auto _maxMovementAttemptsAllowed = 0x344; // int32_t
		constexpr auto _maxTimePerDestinationMultiplier = 0x34c; // float
		constexpr auto _minDistanceBetweenTargetGeneratedPath = 0x358; // float
		constexpr auto _surfaceOffset = 0x35c; // float
		constexpr auto _movementRecoveryTurningSpeed = 0x360; // float
		constexpr auto _movementRecoveryAcceleration = 0x364; // float
		constexpr auto _movementRecoveryDeceleration = 0x368; // float
		constexpr auto _aboveWaterRecoveryTurningSpeed = 0x36c; // float
		constexpr auto _moveToTargetUpdatePeriod = 0x370; // float
		constexpr auto _minVictimDepth = 0x378; // float
		constexpr auto _beginPursuitTimeMin = 0x37c; // float
		constexpr auto _beginPursuitTimeMax = 0x380; // float
		constexpr auto _aggressiveBehaviorChance = 0x388; // float
		constexpr auto _aggressiveBehaviorChanceWhenTargetBleeding = 0x38c; // float
		constexpr auto _distanceToAdjustAttackAngle = 0x390; // float
		constexpr auto _desiredAttackAngleDegrees = 0x394; // float
		constexpr auto _desiredAttackAngleTime = 0x39c; // float
		constexpr auto _returnToWanderingTime = 0x3a0; // float
		constexpr auto _dealDamageTime = 0x3a8; // float
		constexpr auto _damagePerInterval = 0x3b0; // float
		constexpr auto _numOfIntervals = 0x3b8; // int32_t
		constexpr auto _startMovingAfterBiteTime = 0x3c0; // float
		constexpr auto _changeDirectionChance = 0x3d0; // float
		constexpr auto _circlingAngleDegrees = 0x3d4; // float
		constexpr auto _circlingDistanceMin = 0x3d8; // float
		constexpr auto _circlingDistanceMax = 0x3dc; // float
		constexpr auto _circlingAggressionCheckInterval = 0x3e0; // float
		constexpr auto _minDamageToReact = 0x3e8; // float
		constexpr auto _fleeingDuration = 0x3ec; // float
		constexpr auto _maxTimeAboveWater = 0x440; // float
		constexpr auto _minDistanceToNextPrimaryTarget = 0x448; // float
		constexpr auto _changePrimaryTargetTime = 0x44c; // float
		constexpr auto _behaviorMap = 0x460; // TMap<ESharkState, FFishStateParameters>
		constexpr auto _grappleActionParameter = 0x4e8; // UGrappleActionParameters*
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto CameraSettings = 0x268; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x270; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x278; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x280; // char : 1
		constexpr auto bOverrideInstanceData = 0x280; // char : 1
		constexpr auto bReplicatePlayback = 0x280; // char : 1
		constexpr auto DefaultInstanceData = 0x288; // UObject*
		constexpr auto BurnInInstance = 0x290; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x298; // bool
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UFortificationComponent {
		constexpr auto _destructionParticles = 0x4e0; // UParticleSystem*
		constexpr auto _destructionAudio = 0x4e8; // UAkAudioEvent*
		constexpr auto _parentBuilding = 0x4f0; // ABuilding*
		constexpr auto _markerIndex = 0x4f8; // int32_t
		constexpr auto _health = 0x4fc; // float
		constexpr auto _collisionEnergyResistance = 0x500; // float
		constexpr auto _explosionResistance = 0x504; // float
		constexpr auto _hardness = 0x508; // float
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_AKillBoxManager {
		constexpr auto _isActivated = 0x220; // bool
		constexpr auto _isFinale = 0x221; // bool
		constexpr auto _killBoxDuration = 0x224; // float
		constexpr auto _lockdownDuration = 0x228; // float
		constexpr auto _killBoxResetDelay = 0x22c; // float
		constexpr auto _reductionTimeCap = 0x230; // float
		constexpr auto _reductionTimePenalty = 0x234; // float
		constexpr auto _saveStateInterval = 0x238; // float
		constexpr auto _gasEntranceTime = 0x23c; // float
		constexpr auto _gasPoisoningCondition = 0x240; // UPrisonerBodyCondition_KillBoxGasPoisoning*
		constexpr auto _panicModeTimeCut = 0x248; // float
		constexpr auto _laserEntranceTime = 0x24c; // float
		constexpr auto _finaleEntranceCloseTime = 0x250; // float
		constexpr auto _difficultyCalibrationTime = 0x254; // float
		constexpr auto _calibrationPrisonerThreshold = 0x258; // int32_t
		constexpr auto _zapperDamageModifierPerPrisoner = 0x25c; // float
		constexpr auto _maxZapperDamageModifier = 0x260; // float
		constexpr auto _availableDifficultyConfigurations = 0x268; // TArray<FRoomDifficultyConfiguration>
		constexpr auto _laserGadgetsTopPosition = 0x278; // float
		constexpr auto _laserGadgetsBottomPosition = 0x27c; // float
		constexpr auto _laserMovingSpeed = 0x280; // float
		constexpr auto _maxSpawnedZombies = 0x284; // int32_t
		constexpr auto _maxSpawnedZombiesPerMistake = 0x288; // int32_t
		constexpr auto _prisonerNumPerGoldDoorZapper = 0x28c; // int32_t
		constexpr auto _maxGoldDoorZappers = 0x290; // int32_t
		constexpr auto _specialPauseCountdownDuration = 0x294; // float
		constexpr auto _pauseMaxPrisonerCount = 0x298; // int32_t
		constexpr auto _spawnMinPrisonerCount = 0x29c; // int32_t
		constexpr auto _specialEventInterval = 0x2a0; // float
		constexpr auto _laserQuoteTimeRemainingTrigger = 0x2a4; // float
		constexpr auto _gasQuoteTimeRemainingTrigger = 0x2a8; // float
		constexpr auto _randomQuoteInterval = 0x2ac; // float
		constexpr auto _timedHostBlockTime = 0x2b0; // float
		constexpr auto _killBoxOpeningQuotes = 0x2b8; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxLaserAnnouncementQuotes = 0x2c8; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxDescriptionQuotes = 0x2d8; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxRandomnQuotes = 0x2e8; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxFailureQuotes = 0x2f8; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxGasAnnouncementQuotes = 0x308; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxZombieSpawnQuotes = 0x318; // TArray<UAkAudioEvent*>
		constexpr auto _killBoxTimePauseQuotes = 0x328; // TArray<UAkAudioEvent*>
		constexpr auto _difficultyCalibrationQuote = 0x338; // TArray<UAkAudioEvent*>
		constexpr auto KillBoxMusicStart = 0x348; // UAkAudioEvent*
		constexpr auto _killBoxMusicStop = 0x350; // UAkAudioEvent*
		constexpr auto _killBoxGasSound = 0x358; // UAkAudioEvent*
		constexpr auto KillBox30SecondsMark = 0x360; // UAkAudioEvent*
		constexpr auto KillBox10SecondsMark = 0x368; // UAkAudioEvent*
		constexpr auto KillBox5SecondsMark = 0x370; // UAkAudioEvent*
		constexpr auto KillBox4SecondsMark = 0x378; // UAkAudioEvent*
		constexpr auto KillBox3SecondsMark = 0x380; // UAkAudioEvent*
		constexpr auto KillBox2SecondsMark = 0x388; // UAkAudioEvent*
		constexpr auto KillBox1SecondsMark = 0x390; // UAkAudioEvent*
		constexpr auto KillBoxBuzzerSound = 0x398; // UAkAudioEvent*
		constexpr auto _killBoxEntrance = 0x3a0; // ADoor*
		constexpr auto _detectionField = 0x3a8; // AKillBoxDetectionField*
		constexpr auto _laserDevices = 0x3b0; // UStaticMeshComponent*
		constexpr auto _laserGrid = 0x3b8; // UStaticMeshComponent*
		constexpr auto _spawnPoints = 0x3c0; // TArray<AKillBoxSpawnPoint*>
		constexpr auto _hardSpawnPoints = 0x3d0; // TArray<AKillBoxSpawnPoint*>
		constexpr auto _spawnedZombies = 0x3e0; // TArray<AZombie2*>
		constexpr auto _currentAudioComponent = 0x3f0; // UAkComponent*
		constexpr auto _currentMusicComponent = 0x3f8; // UAkComponent*
		constexpr auto _remainingTime = 0x400; // float
		constexpr auto _unlockFailureAssistanceBonus = 0x404; // float
		constexpr auto _queuedQuotes = 0x458; // TArray<UAkAudioEvent*>
		constexpr auto _electricalDoors = 0x468; // TArray<ADoor*>
		constexpr auto _roomDefinitions = 0x478; // TArray<FRoomDefinition>
		constexpr auto _timerWidgets = 0x488; // TArray<UKillBoxTimerWidget*>
		constexpr auto _gasEmitters = 0x498; // TArray<UParticleSystemComponent*>
		constexpr auto _gasMist = 0x4a8; // UParticleSystemComponent*
		constexpr auto _panicButton = 0x4b0; // ASwitch*
	}

	namespace n_UUI_Loading_C {
		constexpr auto Image_37 = 0x280; // UImage*
		constexpr auto Image_38 = 0x288; // UImage*
	}

	namespace n_UMetabolismStatsPanel {
		constexpr auto _str_progressWidget = 0x260; // UMetabolismRadialAttributeProgressBar*
		constexpr auto _con_progressWidget = 0x268; // UMetabolismRadialAttributeProgressBar*
		constexpr auto _dex_progressWidget = 0x270; // UMetabolismRadialAttributeProgressBar*
		constexpr auto _int_progressWidget = 0x278; // UMetabolismRadialAttributeProgressBar*
		constexpr auto _skillProgressionPanel = 0x280; // UMetabolismSkillProgressionPanel*
		constexpr auto _basicInfoPanel = 0x288; // UMetabolismBasicInfoPanel*
		constexpr auto _performanceDataPanel = 0x290; // UMetabolismPerformanceDataPanel*
		constexpr auto _bodyStatsPanel = 0x298; // UMetabolismBodyStatsPanel*
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UVehicleSpawnerPreset {
		constexpr auto SpawnerData = 0x28; // FVehicleSpawnerData
	}

	namespace n_UUI_CraftingComponentTooltip_C {
		constexpr auto BackgroundImage = 0x260; // UImage*
		constexpr auto ComponentTypeText = 0x268; // UTextBlock*
		constexpr auto DescriptionText = 0x270; // UTextBlock*
		constexpr auto Image_1 = 0x278; // UImage*
		constexpr auto NameText = 0x280; // UTextBlock*
		constexpr auto UI_CraftingComponent = 0x288; // UUI_CraftingComponent_C*
	}

	namespace n_UUI_DropdownMenuColorSelectionWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto SelectionBorder = 0x2a0; // UUI_CustomBorder_C*
		constexpr auto SelectionImage = 0x2a8; // UImage*
		constexpr auto Color = 0x2b0; // FLinearColor
	}

	namespace n_UBaseKelvinletBrushOpProps {
		constexpr auto Stiffness = 0x60; // float
		constexpr auto Incompressiblity = 0x64; // float
		constexpr auto BrushSteps = 0x68; // int32_t
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UAdminCommandArgumentCompletion_Constant {
		constexpr auto _completionValues = 0x30; // TArray<FString>
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_ABP_Wristwatch_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UMasterMenu {
		constexpr auto _menuSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto _menuClasses = 0x298; // TMap<EConZMenu, UBaseMenu*>
		constexpr auto _menuToPreview = 0x2e8; // EConZMenu
	}

	namespace n_ABP_Survival_BagCrafting_CraftRope_Objetive_C {
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_AConZBoat {
		constexpr auto _skeletalMeshComponent = 0x2a0; // USkeletalMeshComponent*
		constexpr auto _cameraStabilizer = 0x2a8; // UVehicleCameraStabilizerComponent*
		constexpr auto _meshType = 0x2b0; // EConZBoatMeshType
		constexpr auto _buoyancyComponent = 0x2b8; // UConZBuoyancyComponent*
		constexpr auto _spawnParameters = 0x2c0; // FVehicleSpawnParameters
		constexpr auto _testPoints = 0x2f0; // TArray<FBuoyancyTestPoint>
		constexpr auto _repPackedSimulationState = 0x300; // uint32_t
		constexpr auto _sailCollisionComponent = 0x308; // UBoxComponent*
		constexpr auto _mountSlots = 0x310; // TArray<UConZBoatMountSlot*>
		constexpr auto _driverActionDifficultyVsSpeed = 0x378; // FRuntimeFloatCurve
		constexpr auto _parametersPerMovementPace = 0x400; // FBoatParametersPerMovementPace [0x4]
		constexpr auto _maxSpeedModifierInterpedWithDriverDexterity = 0x450; // FFloatInterval
		constexpr auto _leftOarMeshSocketName = 0x458; // FName
		constexpr auto _rightOarMeshSocketName = 0x460; // FName
		constexpr auto _motorHandleSocketName = 0x468; // FName
		constexpr auto _sailsHandleSocketName = 0x470; // FName
		constexpr auto _rudderHandleSocketName = 0x478; // FName
		constexpr auto _engineBlockMaxHealth = 0x484; // float
		constexpr auto _maxHealth = 0x48c; // float
		constexpr auto _repairableParams = 0x490; // FRepairableParams
		constexpr auto _destroyedAudioEvent = 0x4c8; // UAkAudioEvent*
		constexpr auto _destroyedParticleSystem = 0x4d0; // UParticleSystem*
		constexpr auto _autoHealthDrainThreshold = 0x4d8; // float
		constexpr auto _autoHealthDrain = 0x4dc; // float
		constexpr auto _healthDrainUpdateInterval = 0x4e0; // float
		constexpr auto _healthRatioToDensityMultiplier = 0x4e8; // FRuntimeFloatCurve
		constexpr auto _damagedEffects = 0x570; // TArray<FVehicleDamagedEffectsParameters>
		constexpr auto _damageMaterialParameterName = 0x590; // FName
		constexpr auto _exhaustEffects = 0x598; // FVehicleExhaustEffects
		constexpr auto _hitDamageVsHitImpulse = 0x5e0; // FRuntimeFloatCurve
		constexpr auto _damagedByHitAudioEvent = 0x668; // UAkAudioEvent*
		constexpr auto _healthBarCaption = 0x670; // FText
		constexpr auto _mountSlotIndicatorsWidget = 0x688; // UUserWidget*
		constexpr auto _throttleInterpSpeed = 0x6a8; // float
		constexpr auto _brakeInterpSpeed = 0x6ac; // float
		constexpr auto _steerInterpSpeed = 0x6b0; // float
		constexpr auto _maxSteeringAngle = 0x6b4; // float
		constexpr auto _motorSteeringForce = 0x6b8; // float
		constexpr auto _motorSteerTurnMultiplier = 0x6bc; // float
		constexpr auto _maxSpeedForBase = 0x6c0; // float
		constexpr auto _sidewaysVelocityFalloff = 0x6c8; // FRuntimeFloatCurve
		constexpr auto _speedKmhVsDensityMultiplier = 0x750; // FRuntimeFloatCurve
		constexpr auto _isPaddleInLeftHand = 0x7e8; // bool
		constexpr auto itemNeededClassToStartRowing = 0x7f0; // AItem*
		constexpr auto _rowingForce = 0x7f8; // float
		constexpr auto _rowForceMultiplierPerKph = 0x800; // FRuntimeFloatCurve
		constexpr auto _rowTurnMultiplier = 0x888; // float
		constexpr auto _rowTurnMultiplierPerKph = 0x890; // FRuntimeFloatCurve
		constexpr auto _desiredDriftMultiplier = 0x918; // float
		constexpr auto _paddleDriftSteerMultiplier = 0x91c; // float
		constexpr auto _numPaddleSwingsInOneHand = 0x920; // uint32_t
		constexpr auto _LOarWaterParticles = 0x928; // UParticleSystemComponent*
		constexpr auto _ROarWaterParticles = 0x930; // UParticleSystemComponent*
		constexpr auto _maxRowingSpeed = 0x93c; // float
		constexpr auto _hasSails = 0x940; // bool
		constexpr auto _sailingForceMultiplier = 0x944; // float
		constexpr auto _sailingForceMultiplierPerKph = 0x948; // FRuntimeFloatCurve
		constexpr auto _sailingTurnMultiplier = 0x9d0; // float
		constexpr auto _sailingTurnMultiplierPerKph = 0x9d8; // FRuntimeFloatCurve
		constexpr auto _sailingRudderStartAudioEvent = 0xa60; // UAkAudioEvent*
		constexpr auto _sailingRudderEndAudioEvent = 0xa68; // UAkAudioEvent*
		constexpr auto _sailsDeploySteps = 0xa70; // int32_t
		constexpr auto _sailsDeploySpeedMultiplier = 0xa74; // float
		constexpr auto _sailsTurnSteps = 0xa78; // uint32_t
		constexpr auto _sailsTurnSpeedMultiplier = 0xa7c; // float
		constexpr auto _sailsMaxTurnAngle = 0xa80; // float
		constexpr auto _maxSailingSpeed = 0xa84; // float
		constexpr auto _sailsDeploymentRatioVsForceMultiplier = 0xaa0; // FRuntimeFloatCurve
		constexpr auto _maxVehicleEnterAngle = 0xb2c; // float
		constexpr auto _boatPushForceMagnitudeOnWater = 0xb30; // float
		constexpr auto _boatPushForceMagnitudeOnLand = 0xb34; // float
		constexpr auto _boatFlipForceMagnitude = 0xb38; // float
		constexpr auto _debugOffset = 0xb48; // FVector
		constexpr auto _debugLineLength = 0xb54; // float
		constexpr auto _itemContainerClass = 0xb58; // AVehicleItemContainer*
		constexpr auto _shouldDropItemsWhenDestroyed = 0xb60; // bool
		constexpr auto _itemContainer = 0xb68; // AVehicleItemContainer*
		constexpr auto _itemContainerContainedItemsMass = 0xb70; // float
		constexpr auto _itemContainerOffset = 0xb74; // FVector
		constexpr auto _shouldEvictMounteesIfTiltedAboveThreshold = 0xb80; // bool
		constexpr auto _tiltThresholdAngleToEvictMountees = 0xb84; // float
		constexpr auto _sendStateInterval = 0xb88; // float
		constexpr auto _rigidBodyStatePositionErrorTolerance = 0xb90; // float
		constexpr auto _rigidBodyStateRotationErrorTolerance = 0xb94; // float
		constexpr auto _isAnchored = 0xb98; // bool
		constexpr auto _shouldBeAnchoredWhenUnmounted = 0xb99; // bool
		constexpr auto _bowWaterParticles = 0xba0; // UParticleSystemComponent*
		constexpr auto _hasEngine = 0xba8; // bool
		constexpr auto _maxMotorSpeed = 0xbac; // float
		constexpr auto _engineState = 0xbb0; // EVehicleEngineState
		constexpr auto _engineStallingForceMagnitude = 0xbc0; // float
		constexpr auto _throttleToRpmMultiplier = 0xc28; // float
		constexpr auto _engineIdleRpm = 0xc38; // float
		constexpr auto _engineMaxRpm = 0xc3c; // float
		constexpr auto _engineWaterParticles = 0xcc0; // UParticleSystemComponent*
		constexpr auto _canEngineBeStalledByAcceleration = 0xcc8; // bool
		constexpr auto _engineStallingByAccelerationSpeedThreshold = 0xccc; // float
		constexpr auto _engineStallingByAccelerationOccurrenceInterval = 0xcd0; // float
		constexpr auto _engineStallingByAccelerationAudioEvent = 0xcd8; // UAkAudioEvent*
		constexpr auto _engineStallingByAccelerationAudioEventTriggerTimeRatios = 0xce0; // TArray<float>
		constexpr auto _hasFuel = 0xcf0; // bool
		constexpr auto _fuelResourceType = 0xcf8; // UGameResourceType*
		constexpr auto _maxFuelAmount = 0xd00; // float
		constexpr auto _fuelDrainWhenStartingEngine = 0xd04; // float
		constexpr auto _engineFuelDrainPerRpm = 0xd08; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmScale = 0xd90; // float
		constexpr auto _engineFuelDrainPerRpmUnderLoad = 0xd98; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmUnderLoadScale = 0xe20; // float
		constexpr auto _fuelDrainWhenInactive = 0xe24; // float
		constexpr auto _fuelFillingBaseDuration = 0xe28; // float
		constexpr auto _fillingDurationPerFuelAmountFilled = 0xe2c; // float
		constexpr auto _experienceAwardedPerFuelAmountFilled = 0xe30; // float
		constexpr auto _prisonerFillingFuelMontage = 0xe38; // UAnimMontage*
		constexpr auto _startFillingFuelAudioEvent = 0xe40; // UAkAudioEvent*
		constexpr auto _stopFillingFuelAudioEvent = 0xe48; // UAkAudioEvent*
		constexpr auto _startFillingFuelWithReplenishableResourceAudioEvent = 0xe50; // UAkAudioEvent*
		constexpr auto _stopFillingFuelWithReplenishableResourceAudioEvent = 0xe58; // UAkAudioEvent*
		constexpr auto _fillFuelWithReplenishableResourceOverlapBoxExtent = 0xe60; // FVector
		constexpr auto _fuelDrainingBaseDuration = 0xe6c; // float
		constexpr auto _drainingDurationPerFuelAmountDrained = 0xe70; // float
		constexpr auto _experienceAwardedPerFuelAmountDrained = 0xe74; // float
		constexpr auto _prisonerDrainingFuelMontage = 0xe78; // UAnimMontage*
		constexpr auto _startDrainingFuelAudioEvent = 0xe80; // UAkAudioEvent*
		constexpr auto _stopDrainingFuelAudioEvent = 0xe88; // UAkAudioEvent*
		constexpr auto _engineStallingParametersWhenOutOfFuel = 0xe90; // FVehicleEngineStallingParameters
		constexpr auto _fuelUpdateInterval = 0xeec; // float
		constexpr auto _repHealthFuelBatteryAmount = 0xef4; // uint32_t
		constexpr auto _hasBattery = 0xef8; // bool
		constexpr auto _batteryResourceType = 0xf00; // UGameResourceType*
		constexpr auto _maxBatteryAmount = 0xf08; // float
		constexpr auto _batteryDrainWhenStartingEngine = 0xf0c; // float
		constexpr auto _batteryDrainWhenHornIsActive = 0xf10; // float
		constexpr auto _batteryDrainWhenLightsAreActive = 0xf14; // float
		constexpr auto _batteryDrainWhenRadioIsTurnedOn = 0xf18; // float
		constexpr auto _batteryDrainWhenInactive = 0xf1c; // float
		constexpr auto _batteryDynamoChargePerKph = 0xf20; // FRuntimeFloatCurve
		constexpr auto _batteryDynamoChargePerKphScale = 0xfa8; // float
		constexpr auto _batteryAlternatorChargePerRpm = 0xfb0; // FRuntimeFloatCurve
		constexpr auto _batteryAlternatorChargePerRpmScale = 0x1038; // float
		constexpr auto _batteryPowerReductionThreshold = 0x103c; // float
		constexpr auto _startEngineDurationPenaltyWhenBatteryReducedInPower = 0x1040; // float
		constexpr auto _batteryChargingBaseDuration = 0x1044; // float
		constexpr auto _chargingDurationPerBatteryAmountCharged = 0x1048; // float
		constexpr auto _experienceAwardedPerBatteryAmountCharged = 0x104c; // float
		constexpr auto _prisonerChargingBatteryMontage = 0x1050; // UAnimMontage*
		constexpr auto _startChargingBatteryAudioEvent = 0x1058; // UAkAudioEvent*
		constexpr auto _stopChargingBatteryAudioEvent = 0x1060; // UAkAudioEvent*
		constexpr auto _batteryUpdateInterval = 0x106c; // float
		constexpr auto _corpseClass = 0x1090; // AVehicleCorpse*
		constexpr auto _activeHitTimeToLive = 0x1098; // float
		constexpr auto _impactEffects = 0x10a0; // FVehicleImpactEffects [0x5]
		constexpr auto ImpactDamageVsNormalImpulse = 0x11b8; // UCurveFloat*
		constexpr auto _engineStartingAudioEvent = 0x11d0; // UAkAudioEvent*
		constexpr auto _engineStartedAudioEvent = 0x11d8; // UAkAudioEvent*
		constexpr auto _engineTurnedOffAudioEvent = 0x11e0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartAudioEvent = 0x11e8; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoFuelAudioEvent = 0x11f0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoBatteryAudioEvent = 0x11f8; // UAkAudioEvent*
		constexpr auto _engineStalledAudioEvent = 0x1200; // UAkAudioEvent*
		constexpr auto _noFuelToStartEngineAudioEvent = 0x1208; // UAkAudioEvent*
		constexpr auto _noBatteryToStartEngineAudioEvent = 0x1210; // UAkAudioEvent*
		constexpr auto _hornStartAudioEvent = 0x1218; // UAkAudioEvent*
		constexpr auto _hornStopAudioEvent = 0x1220; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateHornAudioEvent = 0x1228; // UAkAudioEvent*
		constexpr auto _lightsActivatedAudioEvent = 0x1230; // UAkAudioEvent*
		constexpr auto _lightsDeactivatedAudioEvent = 0x1238; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateLightsAudioEvent = 0x1240; // UAkAudioEvent*
		constexpr auto _rowingAudioEvent = 0x1248; // UAkAudioEvent*
		constexpr auto _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero = 0x1250; // float
		constexpr auto _rpmScaleForSoundWhenSpeedIsLessThanZero = 0x1254; // float
		constexpr auto _soundCullDistance = 0x1258; // float
		constexpr auto _sailingSteerSoundMultiplier = 0x125c; // float
		constexpr auto _makeNoiseInterval = 0x1268; // float
		constexpr auto _maxNoiseLoudnessFromEngine = 0x126c; // float
		constexpr auto _maxNoiseLoudnessFromSpeed = 0x1270; // float
		constexpr auto _waterLoopStartAudioEvent = 0x1278; // UAkAudioEvent*
		constexpr auto _waterLoopStopAudioEvent = 0x1280; // UAkAudioEvent*
		constexpr auto _sailsTautAudioEvent = 0x1288; // UAkAudioEvent*
		constexpr auto _physicsDominanceGroup = 0x1290; // EConZPxDominanceGroup
		constexpr auto _canEverBeTraded = 0x12d0; // bool
		constexpr auto _tradeableParams = 0x12d8; // FTradeableTagParams
	}

	namespace n_UPhotoModeMainPanel {
		constexpr auto _mainPanelContainer = 0x260; // UPanelWidget*
		constexpr auto _coreMenuTabButtons = 0x268; // UTabGroup*
		constexpr auto _coreMenu = 0x270; // UWidgetSwitcher*
		constexpr auto _inputLegend = 0x278; // UOverlay*
		constexpr auto _gridLine0 = 0x280; // UImage*
		constexpr auto _gridLine1 = 0x288; // UImage*
		constexpr auto _gridLine2 = 0x290; // UImage*
		constexpr auto _gridLine3 = 0x298; // UImage*
		constexpr auto _frameDisplay = 0x2a0; // UImage*
		constexpr auto _logoDisplay = 0x2a8; // UImage*
		constexpr auto _cameraTabTitle = 0x2b0; // FText
		constexpr auto _effectsTabTitle = 0x2c8; // FText
		constexpr auto _frameTabTitle = 0x2e0; // FText
		constexpr auto _bodyTabTitle = 0x2f8; // FText
		constexpr auto _frames = 0x310; // TArray<TSoftObjectPtr<UTexture>>
		constexpr auto _buttonClass = 0x328; // UTabButton*
		constexpr auto _cameraMode = 0x330; // UCarouselWithLabel*
		constexpr auto _cameraTilt = 0x338; // USliderWithLabelAndNumber*
		constexpr auto _fieldOfView = 0x340; // USliderWithLabelAndNumber*
		constexpr auto _depthOfField = 0x348; // USliderWithLabelAndNumber*
		constexpr auto _focusDistance = 0x350; // USliderWithLabelAndNumber*
		constexpr auto _selfieLight = 0x358; // USliderWithLabelAndNumber*
		constexpr auto _exposure = 0x360; // USliderWithLabelAndNumber*
		constexpr auto _contrast = 0x368; // USliderWithLabelAndNumber*
		constexpr auto _vignette = 0x370; // USliderWithLabelAndNumber*
		constexpr auto _chromaticAberration = 0x378; // USliderWithLabelAndNumber*
		constexpr auto _grain = 0x380; // USliderWithLabelAndNumber*
		constexpr auto _time = 0x388; // USliderWithLabelAndNumber*
		constexpr auto _frame = 0x390; // UCarouselWithLabel*
		constexpr auto _logo = 0x398; // UCarouselWithLabel*
		constexpr auto _aspectRatio = 0x3a0; // UCarouselWithLabel*
		constexpr auto _lookAtCamera = 0x3a8; // UCarouselWithLabel*
		constexpr auto _upperBodyPose = 0x3b0; // UCarouselWithLabel*
		constexpr auto _lowerBodyPose = 0x3b8; // UCarouselWithLabel*
		constexpr auto _selfieModeNote = 0x3c0; // UTextBlock*
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UInsertCartridgeIntoMagazine {
		constexpr auto MontageEndSectionName = 0x90; // FName
	}

	namespace n_UMetabolismLightItemDisplayPanel {
		constexpr auto _itemDisplayContainer = 0x278; // UPanelWidget*
		constexpr auto _itemDisplayClass = 0x280; // UItemLightDisplay*
		constexpr auto _interChildDistrance = 0x288; // float
	}

	namespace n_URemoveOccludedTrianglesTool {
		constexpr auto BasicProperties = 0x90; // URemoveOccludedTrianglesToolProperties*
		constexpr auto AdvancedProperties = 0x98; // URemoveOccludedTrianglesAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PreviewCopies = 0xb0; // TArray<UPreviewMesh*>
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UMetabolismNutritionPanel {
		constexpr auto _rpb_Calories = 0x260; // UMetabolismRadialProgressBar*
		constexpr auto _rpb_Water = 0x268; // UMetabolismRadialProgressBar*
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_ABP_WeaponBullet_ExplosiveBolt_C {
		constexpr auto P_ArrowTrail = 0x458; // UParticleSystemComponent*
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_URepairableItemTag {
		constexpr auto Params = 0x30; // FRepairableParams
	}

	namespace n_UResizableWindow_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto BorderFilled = 0x2a0; // UBorderFilled_C*
		constexpr auto BorderOutlineFilled = 0x2a8; // UBorderFilled_C*
		constexpr auto BorderOutlineUpperPart = 0x2b0; // UBorder*
		constexpr auto ContentArea = 0x2b8; // UCanvasPanel*
		constexpr auto ContentAreaSlot = 0x2c0; // UNamedSlot*
		constexpr auto FooterV2 = 0x2c8; // UFooterV2_C*
		constexpr auto HeaderArea = 0x2d0; // UBorder*
		constexpr auto HeaderTextWidget = 0x2d8; // UTextBlock*
		constexpr auto IRMaximize = 0x2e0; // UImage*
		constexpr auto IRMinimize = 0x2e8; // UImage*
		constexpr auto ResizeArea = 0x2f0; // UBorder*
		constexpr auto ResizeAreaBox = 0x2f8; // USizeBox*
		constexpr auto ResizeImage = 0x300; // UImage*
		constexpr auto ResizeWidget = 0x308; // UHoveredEventWidget_C*
		constexpr auto DragEnabled = 0x310; // bool
		constexpr auto HeaderFont = 0x318; // FSlateFontInfo
		constexpr auto IsMouseButtonDown = 0x370; // bool
		constexpr auto LastMousePosition = 0x374; // FVector2D
		constexpr auto MouseDownAndMoving = 0x37c; // bool
		constexpr auto IsDrag = 0x37d; // bool
		constexpr auto IsResize = 0x37e; // bool
		constexpr auto ParentSlot = 0x380; // UCanvasPanelSlot*
		constexpr auto ResizeEnabled = 0x388; // bool
		constexpr auto ResizeColorHover = 0x38c; // FLinearColor
		constexpr auto ResizeColorNormal = 0x39c; // FLinearColor
		constexpr auto HeaderColorNormal = 0x3ac; // FLinearColor
		constexpr auto HeaderColorHovered = 0x3bc; // FLinearColor
		constexpr auto IsResizeColoredHover = 0x3cc; // bool
		constexpr auto IsHeaderColoredHover = 0x3cd; // bool
		constexpr auto IsResizeColoredNormal = 0x3ce; // bool
		constexpr auto IsHeaderColoredNormal = 0x3cf; // bool
		constexpr auto PreResizeAlignment = 0x3d0; // FVector2D
		constexpr auto PreResizeOffset = 0x3d8; // FVector2D
		constexpr auto IsAlignmentAccountedFor = 0x3e0; // bool
		constexpr auto PreDragSize = 0x3e4; // FVector2D
		constexpr auto IsResizeHovered = 0x3ec; // bool
		constexpr auto IsHeaderHovered = 0x3ed; // bool
		constexpr auto ResizeAreaSize = 0x3f0; // FVector2D
		constexpr auto ResizeAreaBrush = 0x3f8; // FSlateBrush
		constexpr auto DragAppearanceBrush = 0x480; // FSlateBrush
		constexpr auto DragAppearanceColor = 0x508; // FLinearColor
		constexpr auto HeaderText = 0x518; // FText
		constexpr auto SafetyZoneY = 0x530; // float
		constexpr auto SafetyZoneX = 0x534; // float
		constexpr auto MinWidth = 0x538; // float
		constexpr auto MinHeight = 0x53c; // float
		constexpr auto MaxWidth = 0x540; // float
		constexpr auto MaxHeight = 0x544; // float
		constexpr auto HeaderContentNormal = 0x548; // FLinearColor
		constexpr auto HeaderTextColorNormal = 0x558; // FSlateColor
		constexpr auto HeaderTextColorHovered = 0x580; // FSlateColor
		constexpr auto isMinimized = 0x5a8; // bool
		constexpr auto _contentWidgetClass = 0x5b0; // UWindowsContent_C*
		constexpr auto _curentContentAreaSlotSize = 0x5b8; // FVector2D
		constexpr auto ContentSizeChangedEventDispatcher = 0x5c0; // FMulticastInlineDelegate
		constexpr auto isFooterV2Active = 0x5d0; // bool
		constexpr auto _windowsContentWidget = 0x5d8; // UWindowsContent_C*
		constexpr auto ResizeEnabledLocked = 0x5e0; // bool
		constexpr auto ContentMaximizedEventDispatcher = 0x5e8; // FMulticastInlineDelegate
		constexpr auto _shouldRefreshSize = 0x5f8; // bool
		constexpr auto OnHeaderDoubleClickDispatcher = 0x600; // FMulticastInlineDelegate
		constexpr auto ParentHUD = 0x610; // UHUD_C*
	}

	namespace n_UNiagaraScript {
		constexpr auto usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UPrisonerBodySymptom {
		constexpr auto _causes = 0xa0; // TArray<UPrisonerBodySymptomCause*>
		constexpr auto _notifier = 0xb0; // UPrisonerBodySymptomNotifier*
	}

	namespace n_ULiveLinkTransformController {
		constexpr auto TransformData = 0x30; // FLiveLinkTransformControllerData
	}

	namespace n_ABP_WeaponBullet_30_Crafted_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UItemState {
		constexpr auto normalizedHealth = 0x80; // float
		constexpr auto maxHealth = 0x84; // float
		constexpr auto Weight = 0x88; // float
		constexpr auto WeightUsed = 0x8c; // float
		constexpr auto IsCrafted = 0x90; // bool
		constexpr auto UncraftTime = 0x94; // float
		constexpr auto LastAccessTime = 0x98; // int64_t
		constexpr auto IsPartOfEvent = 0xa0; // bool
		constexpr auto WaterWeight = 0xa4; // float
		constexpr auto Uses = 0xa8; // float
		constexpr auto IsInHands = 0xac; // bool
		constexpr auto HolsterSide = 0xad; // EPrisonerHolsterSide
		constexpr auto QuickAccessBarIndex = 0xb0; // int32_t
		constexpr auto CraftingParts = 0xb8; // TArray<UItemStateBase*>
		constexpr auto Stacks = 0xc8; // TArray<UItemStateBase*>
		constexpr auto _craftingPartsIds = 0xd8; // TArray<FDbIntegerId>
		constexpr auto _stacksIds = 0xe8; // TArray<FDbIntegerId>
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_AHandheldSkeletalMeshLightItem {
		constexpr auto SkeletalMesh = 0x7f0; // USkeletalMeshComponent*
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_UVicinityContainer3 {
		constexpr auto _container = 0x2a8; // UItemInventoryWidget2*
		constexpr auto _containerScrollBox = 0x2b0; // UScrollBox*
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto Name = 0xe8; // FString
		constexpr auto FloatCurve = 0xf8; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x178; // FMovieSceneFloatChannelSerializationHelper
	}

	namespace n_UFlareItemState {
		constexpr auto IgnitedTimeStamp = 0xf8; // int64_t
	}

	namespace n_UPrisonerBodyCondition_Choking {
		constexpr auto _oxygenSaturationToExist = 0xa8; // float
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UItemRackSlotComponent {
		constexpr auto _placedItem = 0x200; // AItem*
		constexpr auto _acceptableTags = 0x210; // TArray<UPlaceableOnRackItemTag*>
		constexpr auto _placeItemAudioEvent = 0x220; // UAkAudioEvent*
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x470; // bool
		constexpr auto bAttachEnd = 0x471; // bool
		constexpr auto AttachEndTo = 0x478; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x4a0; // FName
		constexpr auto EndLocation = 0x4a8; // FVector
		constexpr auto CableLength = 0x4b4; // float
		constexpr auto NumSegments = 0x4b8; // int32_t
		constexpr auto SubstepTime = 0x4bc; // float
		constexpr auto SolverIterations = 0x4c0; // int32_t
		constexpr auto bEnableStiffness = 0x4c4; // bool
		constexpr auto bUseSubstepping = 0x4c5; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4c6; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4c7; // bool
		constexpr auto bEnableCollision = 0x4c8; // bool
		constexpr auto CollisionFriction = 0x4cc; // float
		constexpr auto CableForce = 0x4d0; // FVector
		constexpr auto CableGravityScale = 0x4dc; // float
		constexpr auto CableWidth = 0x4e0; // float
		constexpr auto NumSides = 0x4e4; // int32_t
		constexpr auto TileMaterial = 0x4e8; // float
	}

	namespace n_ULockpickingTensionToolItemTag {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto TensionToolTransform = 0x40; // FTransform
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UInventoryContainerSelection {
		constexpr auto _maxNumOfItems = 0x30; // int32_t
		constexpr auto _itemsRep = 0x48; // TArray<UObject*>
		constexpr auto _parentRep = 0x68; // UObject*
		constexpr auto _data = 0x70; // FInventoryContainerSelectionRepData
		constexpr auto _widgets = 0x98; // TArray<UInventoryContainerWidget2*>
		constexpr auto _widget = 0xa8; // UInventoryContainerWidget2*
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UEdgeLoopInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UEdgeLoopInsertionTool*
	}

	namespace n_UUVProjectionTool {
		constexpr auto BasicProperties = 0x90; // UUVProjectionToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UUVProjectionAdvancedProperties*
		constexpr auto MaterialSettings = 0xa0; // UExistingMeshMaterialProperties*
		constexpr auto Previews = 0xa8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto CheckerMaterial = 0xb8; // UMaterialInstanceDynamic*
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformProxies = 0xd0; // TArray<UTransformProxy*>
	}

	namespace n_UCollisionGeometryVisualizationProperties {
		constexpr auto LineThickness = 0x60; // float
		constexpr auto bShowHidden = 0x64; // bool
		constexpr auto Color = 0x68; // FColor
	}

	namespace n_UWeldMeshEdgesTool {
		constexpr auto Tolerance = 0x88; // float
		constexpr auto bOnlyUnique = 0x8c; // bool
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UGradedArcedProgressBar {
		constexpr auto _fillImage = 0x260; // UImage*
		constexpr auto _fillMaterial = 0x268; // UMaterialInstanceConstant*
		constexpr auto _fillColorStart = 0x270; // FLinearColor
		constexpr auto _fillColorMiddle = 0x280; // FLinearColor
		constexpr auto _fillColorEnd = 0x290; // FLinearColor
		constexpr auto _maxRateOfChangePerSecond = 0x2a0; // float
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UClearDoubleFeed {
		constexpr auto MontageEndSectionName = 0xb8; // FName
		constexpr auto _ejectedRoundsCount = 0xc0; // int32_t
		constexpr auto _magazineToRestore = 0xc8; // AWeaponAttachmentMagazine*
	}

	namespace n_UInventorySlotUserWidget {
		constexpr auto HasItem = 0x278; // bool
		constexpr auto ImageWidget = 0x280; // UImage*
		constexpr auto SizeBoxWrapper = 0x288; // USizeBox*
		constexpr auto ParentContainerWidget = 0x290; // UBaseItemContainerWidget*
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UEngineeringSkill {
		constexpr auto NoSkillExperienceAwards = 0xa8; // FEngineeringSkillExperienceAwards
		constexpr auto BasicSkillExperienceAwards = 0xb8; // FEngineeringSkillExperienceAwards
		constexpr auto MediumSkillExperienceAwards = 0xc8; // FEngineeringSkillExperienceAwards
		constexpr auto AdvancedSkillExperienceAwards = 0xd8; // FEngineeringSkillExperienceAwards
		constexpr auto AboveAdvancedSkillExperienceAwards = 0xe8; // FEngineeringSkillExperienceAwards
		constexpr auto NoSkillParameters = 0xf8; // FEngineeringSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0x118; // FEngineeringSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0x138; // FEngineeringSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x158; // FEngineeringSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0x178; // FEngineeringSkillParametersPerSkillLevel
	}

	namespace n_UMetabolismSkillProgressBar {
		constexpr auto SkillRankIcons = 0x260; // TArray<FSlateBrush>
		constexpr auto SkillTitle = 0x270; // FText
		constexpr auto _skillRankIcon = 0x298; // UImage*
		constexpr auto _apb_SkillProgress = 0x2a0; // UMetabolismAdvancedProgressBar*
		constexpr auto _skillClass = 0x2a8; // USkill*
	}

	namespace n_UPhysicalSurfacesEffectsData {
		constexpr auto Default = 0x30; // FPhysicalSurfaceEffectsData
		constexpr auto grass = 0x50; // FPhysicalSurfaceEffectsData
		constexpr auto ForrestGroundCoastal = 0x70; // FPhysicalSurfaceEffectsData
		constexpr auto ForrestGroundContinental = 0x90; // FPhysicalSurfaceEffectsData
		constexpr auto Rock = 0xb0; // FPhysicalSurfaceEffectsData
		constexpr auto Stone = 0xd0; // FPhysicalSurfaceEffectsData
		constexpr auto Gravel = 0xf0; // FPhysicalSurfaceEffectsData
		constexpr auto GravelBeach = 0x110; // FPhysicalSurfaceEffectsData
		constexpr auto Pebbles = 0x130; // FPhysicalSurfaceEffectsData
		constexpr auto Snow = 0x150; // FPhysicalSurfaceEffectsData
		constexpr auto Ice = 0x170; // FPhysicalSurfaceEffectsData
		constexpr auto Sand = 0x190; // FPhysicalSurfaceEffectsData
		constexpr auto Asphalt = 0x1b0; // FPhysicalSurfaceEffectsData
		constexpr auto Dirt = 0x1d0; // FPhysicalSurfaceEffectsData
		constexpr auto Water = 0x1f0; // FPhysicalSurfaceEffectsData
		constexpr auto WaterOcean = 0x210; // FPhysicalSurfaceEffectsData
		constexpr auto Cloth = 0x230; // FPhysicalSurfaceEffectsData
		constexpr auto Metal = 0x250; // FPhysicalSurfaceEffectsData
		constexpr auto Aluminium = 0x270; // FPhysicalSurfaceEffectsData
		constexpr auto Concrete = 0x290; // FPhysicalSurfaceEffectsData
		constexpr auto Brick = 0x2b0; // FPhysicalSurfaceEffectsData
		constexpr auto Wood = 0x2d0; // FPhysicalSurfaceEffectsData
		constexpr auto Plastic = 0x2f0; // FPhysicalSurfaceEffectsData
		constexpr auto Rubber = 0x310; // FPhysicalSurfaceEffectsData
		constexpr auto Glass = 0x330; // FPhysicalSurfaceEffectsData
		constexpr auto Foliage = 0x350; // FPhysicalSurfaceEffectsData
		constexpr auto Bark = 0x370; // FPhysicalSurfaceEffectsData
		constexpr auto Flesh = 0x390; // FPhysicalSurfaceEffectsData
		constexpr auto RoofTile = 0x3b0; // FPhysicalSurfaceEffectsData
		constexpr auto CeramicTiles = 0x3d0; // FPhysicalSurfaceEffectsData
		constexpr auto Scrap = 0x3f0; // FPhysicalSurfaceEffectsData
		constexpr auto Trunk = 0x410; // FPhysicalSurfaceEffectsData
		constexpr auto Leaves = 0x430; // FPhysicalSurfaceEffectsData
		constexpr auto Fruit = 0x450; // FPhysicalSurfaceEffectsData
		constexpr auto Cardboard = 0x470; // FPhysicalSurfaceEffectsData
		constexpr auto Plaster = 0x490; // FPhysicalSurfaceEffectsData
		constexpr auto Kevlar = 0x4b0; // FPhysicalSurfaceEffectsData
		constexpr auto ForceField = 0x4d0; // FPhysicalSurfaceEffectsData
		constexpr auto NoEffect = 0x4f0; // FPhysicalSurfaceEffectsData
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UPlacedPlaceableWidget {
		constexpr auto _container = 0x2c8; // UVerticalBox*
	}

	namespace n_UTrashCarouselWidget {
		constexpr auto _leftArrowIcon = 0x290; // FSlateBrush
		constexpr auto _rightArrowIcon = 0x318; // FSlateBrush
		constexpr auto _disabledLeftArrowIcon = 0x3a0; // FSlateBrush
		constexpr auto _disabledRightArrowIcon = 0x428; // FSlateBrush
		constexpr auto _selectionDisplay = 0x4b0; // UTextBlock*
		constexpr auto _leftArrow = 0x4b8; // UButton*
		constexpr auto _rightArrow = 0x4c0; // UButton*
		constexpr auto _font = 0x4c8; // FSlateFontInfo
		constexpr auto _possibleValues = 0x520; // TArray<FString>
		constexpr auto _carouselValues = 0x530; // TArray<FText>
		constexpr auto _canWrap = 0x540; // bool
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_AChainsaw {
		constexpr auto SkeletalMesh = 0x7f0; // USkeletalMeshComponent*
		constexpr auto AnimationsStartEngine = 0x7f8; // FCharacterAndItemAnimation
		constexpr auto AnimationsCheckFuelStatus = 0x808; // FCharacterAndItemAnimation
		constexpr auto ChoppingToolItemTag = 0x818; // UBaseItemTag*
		constexpr auto TurnOnAudioEvent = 0x820; // UAkAudioEvent*
		constexpr auto TurnOffAudioEvent = 0x828; // UAkAudioEvent*
		constexpr auto _fuelType = 0x830; // UGameResourceType*
		constexpr auto _inFuelingSocketTypes = 0x838; // FGameplayTagContainer
		constexpr auto _maxFuelAmount = 0x858; // float
		constexpr auto _initialFuelAmount = 0x85c; // float
		constexpr auto _fuelUsagePerHour = 0x860; // float
		constexpr auto _fuelUsagePerHourMultiplierWhenActive = 0x864; // float
		constexpr auto _fuelFillingDurationPerAmountFilled = 0x868; // float
		constexpr auto _fuelFillingExperiencePerAmount = 0x86c; // float
		constexpr auto _fuelFillingMontage = 0x870; // UAnimMontage*
		constexpr auto _meleeSkillAnimationsPresetWhenTurnedOff = 0x878; // UMeleeSkillAnimationsPreset*
		constexpr auto _meleeSkillAnimationsPresetWhenTurnedOn = 0x880; // UMeleeSkillAnimationsPreset*
		constexpr auto _fuelStartFillingAudioEvent = 0x888; // UAkAudioEvent*
		constexpr auto _fuelStopFillingAudioEvent = 0x890; // UAkAudioEvent*
		constexpr auto _currentFuelAmount = 0x898; // float
		constexpr auto _turnedOn = 0x89c; // bool
	}

	namespace n_UVehicleMountSlotWidget {
		constexpr auto _slotStateSwitcher = 0x260; // UWidgetSwitcher*
		constexpr auto _keybindLabel = 0x268; // UTextBlock*
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1fc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15fc; // float
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UUpgradeSlotWidget {
		constexpr auto _buyableUpgradesBox = 0x278; // UVerticalBox*
		constexpr auto _itemIcon = 0x280; // UImage*
		constexpr auto _gridSymbol = 0x288; // UImage*
		constexpr auto _backgroundImage = 0x290; // UImage*
		constexpr auto _defaultImage = 0x298; // UImage*
		constexpr auto _regularColour = 0x2a0; // FLinearColor
		constexpr auto _dropUnavailableColour = 0x2b0; // FLinearColor
		constexpr auto _dropAvailableColour = 0x2c0; // FLinearColor
		constexpr auto _slotType = 0x2d0; // ESlotType
		constexpr auto _buyableUpgrades = 0x2e0; // TArray<AItem*>
	}

	namespace n_AMagicLeapARPinRenderer {
		constexpr auto bInfoActorsVisibilityOverride = 0x220; // bool
		constexpr auto AllInfoActors = 0x228; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x280; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_UDcxVehicleAnimInstance {
		constexpr auto VehicleWheels = 0xa30; // UDcxVehicleWheelsComponent*
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UConZBoatAnimInstance {
		constexpr auto IsAnyoneMounted = 0x2b8; // bool
		constexpr auto Speed = 0x2bc; // float
		constexpr auto SpeedKph = 0x2c0; // float
		constexpr auto MaxEngineSteerAngle = 0x2c4; // float
		constexpr auto EngineSteerAngleInterpSpeed = 0x2c8; // float
		constexpr auto CurrentEngineSteerAngle = 0x2cc; // float
		constexpr auto PropellerRotationAngle = 0x2d0; // float
		constexpr auto PropellerRotationSpeedScale = 0x2d4; // float
		constexpr auto SailsRotationAngle = 0x2d8; // float
		constexpr auto IsMounteeDriver = 0x2dc; // bool
		constexpr auto IsMounteeRowing = 0x2dd; // bool
		constexpr auto _prisonerLHandTransform = 0x2e0; // FTransform
		constexpr auto _prisonerRHandTransform = 0x310; // FTransform
		constexpr auto WindDirection = 0x340; // FVector
	}

	namespace n_UAnimNotifyState_PhysicalAnimation {
		constexpr auto GotoRagdollOnEnd = 0x30; // bool
		constexpr auto BodyProfileName = 0x34; // FName
		constexpr auto ConstraintProfileName = 0x3c; // FName
		constexpr auto BoneName = 0x44; // FName
		constexpr auto StrengthBlendCurveName = 0x4c; // FName
		constexpr auto PhysicsBlendCurveName = 0x54; // FName
	}

	namespace n_UCustomZoneSettingsColorPicker {
		constexpr auto _button0 = 0x270; // UButton*
		constexpr auto _button1 = 0x278; // UButton*
		constexpr auto _button2 = 0x280; // UButton*
		constexpr auto _button3 = 0x288; // UButton*
		constexpr auto _button4 = 0x290; // UButton*
		constexpr auto _button5 = 0x298; // UButton*
		constexpr auto _button6 = 0x2a0; // UButton*
		constexpr auto _button7 = 0x2a8; // UButton*
		constexpr auto _border0 = 0x2b0; // UGridPanel*
		constexpr auto _border1 = 0x2b8; // UGridPanel*
		constexpr auto _border2 = 0x2c0; // UGridPanel*
		constexpr auto _border3 = 0x2c8; // UGridPanel*
		constexpr auto _border4 = 0x2d0; // UGridPanel*
		constexpr auto _border5 = 0x2d8; // UGridPanel*
		constexpr auto _border6 = 0x2e0; // UGridPanel*
		constexpr auto _border7 = 0x2e8; // UGridPanel*
	}

	namespace n_UUI_GameEventPanelWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto AllEventsComboBox = 0x288; // UUI_ComboBoxWrapper_C*
		constexpr auto CurrentEventsComboBox = 0x290; // UUI_ComboBoxWrapper_C*
		constexpr auto EventArea = 0x298; // UOverlay*
		constexpr auto LeaderboardSlot = 0x2a0; // UOverlay*
		constexpr auto NextEventsComboBox = 0x2a8; // UUI_ComboBoxWrapper_C*
		constexpr auto StatsPanel = 0x2b0; // USizeBox*
		constexpr auto VerticalBox_5 = 0x2b8; // UVerticalBox*
		constexpr auto CurrentEvents = 0x2c0; // TArray<AGameEventBase*>
		constexpr auto NextEvents = 0x2d0; // TArray<AGameEventBase*>
		constexpr auto SelectedCurrent = 0x2e0; // FString
		constexpr auto SelectedNext = 0x2f0; // FString
		constexpr auto HighlightedCurrent = 0x300; // bool
		constexpr auto AllEvents = 0x308; // TArray<AGameEventBase*>
	}

	namespace n_UDrawPolyPathExtrudeProperties {
		constexpr auto Direction = 0x60; // EDrawPolyPathExtrudeDirection
	}

	namespace n_UVehicle2WMountSlot {
		constexpr auto _type = 0xb8; // EVehicle2WType
		constexpr auto _socketName = 0xbc; // FName
		constexpr auto _mountAudioEvent = 0xc8; // UAkAudioEvent*
		constexpr auto _mountPriority = 0xd0; // int32_t
		constexpr auto _entryPoints = 0xd8; // TArray<FMountSlotEntryPoint>
		constexpr auto _unmountAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto _isReachableFromSky = 0xf0; // bool
		constexpr auto _mountingMotionIntensity = 0xf1; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xf2; // EMotionIntensity
		constexpr auto _mounteeCenterOfMassOffset = 0xf4; // FVector
		constexpr auto _minEffectiveMounteeMass = 0x100; // float
		constexpr auto _maxEffectiveMounteeMass = 0x104; // float
		constexpr auto _mountee = 0x108; // UObject*
		constexpr auto _reservee = 0x110; // UObject*
		constexpr auto _canMounteeBeAttackedByMelee = 0x118; // bool
		constexpr auto _interactionZoneMaterials = 0x120; // TArray<UPhysicalMaterial*>
		constexpr auto _vehicleWeaponAimingParameters = 0x130; // UVehicleWeaponAimingParameters*
		constexpr auto _mountSpeedThreshold = 0x138; // float
		constexpr auto _unmountSpeedThreshold = 0x13c; // float
		constexpr auto _unmountInputVelocityThreshold = 0x140; // float
	}

	namespace n_UWheelBarrowDriverMountSlot {
		constexpr auto _idleAnimation = 0x108; // UAnimSequence*
		constexpr auto _walkJogAnimation = 0x110; // UBlendSpace*
		constexpr auto _walkJogLimpingAnimation = 0x118; // UBlendSpace*
	}

	namespace n_UABP_SVD_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x3e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x428; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x4b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x5e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x680; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x880; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x9d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0xa58; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum = 0xaf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xe28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
	}

	namespace n_UUI_ScreenSpaceHealthWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto DisabledBar = 0x270; // UImage*
		constexpr auto HealthBar = 0x278; // UImage*
		constexpr auto _healthBarMat = 0x280; // UMaterialInstanceDynamic*
		constexpr auto _disabledBarMat = 0x288; // UMaterialInstanceDynamic*
		constexpr auto ColorCurve = 0x290; // UCurveFloat*
		constexpr auto ColorMaxHP = 0x298; // FLinearColor
		constexpr auto ColorMinHP = 0x2a8; // FLinearColor
	}

	namespace n_UWarning_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto RetainerBox_1 = 0x280; // URetainerBox*
		constexpr auto Text = 0x288; // UTextBlock*
		constexpr auto _shouldShake = 0x290; // bool
		constexpr auto _shakeTime = 0x294; // float
		constexpr auto _shakeLength = 0x298; // float
		constexpr auto _shouldFade = 0x29c; // bool
		constexpr auto _fadeLength = 0x2a0; // float
		constexpr auto _fadeDelay = 0x2a4; // float
		constexpr auto Queue = 0x2a8; // TArray<FMessageStruct>
		constexpr auto _isReadyForNextMessage = 0x2b8; // bool
	}

	namespace n_USelfUnionMeshesTool {
		constexpr auto Properties = 0xf0; // USelfUnionMeshesToolProperties*
		constexpr auto DrawnLineSet = 0xf8; // ULineSetComponent*
	}

	namespace n_ABP_Survival_Tutorial_CraftStoneKnifeObjective_C {
		constexpr auto UberGraphFrame = 0x348; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x350; // USceneComponent*
		constexpr auto DialogueManager = 0x358; // AMissionDialogueManager*
		constexpr auto _firstTimeOpened = 0x360; // bool
		constexpr auto CraftableItem = 0x368; // UCraftableItem*
		constexpr auto DialogueData = 0x370; // UDialogueData*
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_UProceduralCylinderToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_UThrowingSkill {
		constexpr auto _minPlayRate = 0xac; // float
		constexpr auto _maxPlayRate = 0xb0; // float
	}

	namespace n_UConZVehicle4WPassengerMountSlot {
		constexpr auto _idleAnimation = 0x150; // UBlendSpace*
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_ABP_WeaponBullet_30_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_AItemDropPlaceholder {
		constexpr auto BoxCollisionComponent = 0x220; // UBoxComponent*
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto _rootComponent = 0x240; // USceneComponent*
	}

	namespace n_UPrisonerBodyCondition_BladderFull {
		constexpr auto _bladderFullnessToExist = 0xa8; // float
		constexpr auto _bladderFullnessToForceUrinate = 0xac; // float
		constexpr auto _needToUrinateSymptomClass = 0xb0; // UPrisonerBodySymptom_NeedToUrinate*
		constexpr auto _needToUrinateSymptomCause = 0xb8; // UPrisonerBodySymptomCause*
	}

	namespace n_UStatisticsPanelWidget {
		constexpr auto _survivalDetailsWidget = 0x260; // UStatisticsDetailsWidget*
		constexpr auto _backButton = 0x268; // UTrashMenuButton*
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UClothesItemState {
		constexpr auto dirtiness = 0xf8; // float
		constexpr auto IsPatched = 0xfc; // bool
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_UUI_CharacterSelection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackButton = 0x268; // UUI_TrashMenuButton_C*
		constexpr auto CharacterSlotsOverlay = 0x270; // UOverlay*
		constexpr auto CharacterSlotsVerticalBox = 0x278; // UVerticalBox*
		constexpr auto CreateButton = 0x280; // UUI_TrashMenuButton_C*
		constexpr auto CriminalRecord = 0x288; // UUI_CriminalRecord_C*
		constexpr auto CriminalRecordOverlay = 0x290; // UOverlay*
		constexpr auto DeleteCharacterConfirmation = 0x298; // UUI_YesNoMenuConfirmation_C*
		constexpr auto Image_1 = 0x2a0; // UImage*
		constexpr auto Image_5 = 0x2a8; // UImage*
		constexpr auto Image_351 = 0x2b0; // UImage*
		constexpr auto MainCanvasPanel = 0x2b8; // UCanvasPanel*
		constexpr auto MainScrollBox = 0x2c0; // UScrollBox*
		constexpr auto SelectButton = 0x2c8; // UUI_TrashMenuButton_C*
		constexpr auto _deletingCharSlot = 0x2d0; // UUI_CharacterSlot_C*
		constexpr auto _selectedUserProfile = 0x2d8; // UUserProfile*
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UUI_PlaceableElement_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x290; // UButton*
		constexpr auto Image_106 = 0x298; // UImage*
		constexpr auto Image_bg_black = 0x2a0; // UImage*
		constexpr auto RetainerBox_1 = 0x2a8; // URetainerBox*
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UGameEventLeaderboardWidget {
		constexpr auto TopPlayersStats = 0x278; // TArray<FEventsRankingStatsItem>
		constexpr auto PlayerRankingStats = 0x288; // TArray<FEventsRankingStatsItem>
		constexpr auto playerRank = 0x298; // int32_t
	}

	namespace n_UPrisonerBodySimulationData {
		constexpr auto StrengthGainPerHourOfActivityVsStrength = 0x30; // FRuntimeFloatCurve
		constexpr auto StrengthLossPerMissingProtein = 0xb8; // float
		constexpr auto ConstitutionGainPerKilometerMoved = 0xbc; // float
		constexpr auto ConstitutionLossPerHourOfNotMoving = 0xc0; // float
		constexpr auto DexterityChangePerStorageFatEnergy = 0xc4; // float
		constexpr auto MaxBleedingSeverity = 0xc8; // float
		constexpr auto BleedOutDurationVsBleedingSeverity = 0xcc; // FFloatInterval
		constexpr auto BleedOutDurationMultiplierVsConstitution = 0xd4; // FFloatInterval
		constexpr auto DamageRatioVsBloodLossRatio = 0xe0; // FRuntimeFloatCurve
		constexpr auto HealingSpeedMultiplierVsActionDifficultyRatio = 0x168; // FRuntimeFloatCurve
		constexpr auto StaminaChangeRateVsActionDifficulty = 0x1f0; // FPrisonerActionDifficultyCurve
		constexpr auto HeartRateRatioVsActionDifficulty = 0x208; // FPrisonerActionDifficultyCurve
		constexpr auto HeartRateRaiseInterpSpeed = 0x220; // float
		constexpr auto HeartRateFallRate = 0x224; // float
		constexpr auto BreathingRateInterpSpeed = 0x228; // float
		constexpr auto OxygenSaturationRaiseRateVsActionDifficutly = 0x22c; // FPrisonerActionDifficultyCurve
		constexpr auto OxygenSaturationFallRateVsActionDifficutly = 0x244; // FPrisonerActionDifficultyCurve
		constexpr auto PreferredEnvironmentTemperatureWhenNaked = 0x25c; // float
		constexpr auto BodyHeatGroupWeight = 0x260; // float [0x5]
		constexpr auto BodyHeatGroupClothesLayerFactors = 0x278; // FPrisonerBodySimulationData_BodyHeatGroupClothesLayerFactors [0x5]
		constexpr auto MetabolismClass = 0x2c8; // UMetabolism*
		constexpr auto MetabolismUpdateInterval = 0x2d0; // float
		constexpr auto CaloriesConsumptionMultiplier = 0x2d4; // float
		constexpr auto CaloriesConsumptionMultiplierVsHeartRateRatio = 0x2d8; // FRuntimeFloatCurve
		constexpr auto WaterConsumptionMultiplier = 0x360; // float
		constexpr auto WaterConsumptionMultiplierVsHeartRateRatio = 0x368; // FRuntimeFloatCurve
		constexpr auto NutrientsConsumptionFactorVsConstitutionRatio = 0x3f0; // FFloatInterval
		constexpr auto ConsumptionDurationMultiplierVsEatingSpeed = 0x3f8; // FFloatInterval
		constexpr auto StomachFullnessToBeAbleToVomit = 0x400; // float
		constexpr auto BladderFullnessToBeAbleToUrinate = 0x404; // float
		constexpr auto ColonFullnessToBeAbleToDefecate = 0x408; // float
		constexpr auto ColonWaterContentRatioToHaveDiarrhea = 0x40c; // float
		constexpr auto DigestionHandlersPerConsumableHealthRatios = 0x410; // FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges
		constexpr auto DigestionHandlersPerConsumableFatsContentRatios = 0x420; // FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges
		constexpr auto DigestionHandlersPerConsumableNutrientContentRatios = 0x430; // TMap<ENutrient, FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges>
		constexpr auto Effects = 0x480; // FPrisonerBodySimulationData_Effects
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_UDepotItemState {
		constexpr auto OwnerUserProfileId = 0xf8; // FDbIntegerId
		constexpr auto TraderPersistentId = 0x100; // FString
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UWarningNotificationDescription {
		constexpr auto Message = 0x40; // FString
		constexpr auto Duration = 0x50; // float
		constexpr auto Color = 0x54; // FColor
	}

	namespace n_UConZBoatDriverMountSlot {
		constexpr auto _forwardIdleAnimation = 0x118; // UBlendSpace*
		constexpr auto _paddlingLHandAnimation = 0x120; // UBlendSpace*
		constexpr auto _paddlingRHandAnimation = 0x128; // UBlendSpace*
		constexpr auto _paddlingLToRAnimation = 0x130; // UAnimSequence*
		constexpr auto _paddlingRToLAnimation = 0x138; // UAnimSequence*
		constexpr auto _startEngineStartAnimation = 0x140; // UAnimSequence*
		constexpr auto _startEngineLoopAnimation = 0x148; // UAnimSequence*
		constexpr auto _startEngineLongLoopAnimation = 0x150; // UAnimSequence*
		constexpr auto _startEngineEndAnimation = 0x158; // UAnimSequence*
		constexpr auto _vehicleDriverWeaponAimingParameters = 0x160; // UVehicleWeaponAimingParameters*
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UWindowFortificationsType {
		constexpr auto MeshForFortification = 0x30; // TMap<UObject*, UStaticMesh*>
	}

	namespace n_UABP_Prisoner_WeightLoad_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose = 0x2f8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x410; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x430; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x450; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x558; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x660; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x768; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x870; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_CopyBone = 0x978; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xa68; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xb70; // FAnimNode_ModifyBone
		constexpr auto WeightLoadFactor = 0xc78; // float
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_UMetabolism_ICU_GraphWidget {
		constexpr auto BaseCurve = 0x1f0; // UCurveFloat*
		constexpr auto CurvePeriodBaseDuration = 0x1f8; // float
		constexpr auto MinSamplesForSingleCurvePeriod = 0x1fc; // int32_t
	}

	namespace n_UUI_ActionProgress_C {
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto Background = 0x2d0; // UImage*
		constexpr auto Cancel = 0x2d8; // UImage*
		constexpr auto percent = 0x2e0; // UTextBlock*
		constexpr auto PercentageText = 0x2e8; // UTextBlock*
		constexpr auto progress = 0x2f0; // UImage*
		constexpr auto _progressMaterial = 0x2f8; // UMaterialInstanceDynamic*
	}

	namespace n_UUI_Tooltip_C {
		constexpr auto BackgroundImage = 0x278; // UImage*
		constexpr auto DescriptionText = 0x280; // UTextBlock*
		constexpr auto ItemImage = 0x288; // UImage*
		constexpr auto ItemImageBox = 0x290; // UVerticalBox*
		constexpr auto NameText = 0x298; // UTextBlock*
		constexpr auto ProgressBar_1 = 0x2a0; // UProgressBar*
		constexpr auto UI_Border_23 = 0x2a8; // UUI_Border_C*
		constexpr auto Item = 0x2b0; // AItem*
	}

	namespace n_ABP_WeaponBullet_WoodenArrowStoneTip_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_ASimpleAnimalAIController {
		constexpr auto WanderRadius = 0x328; // float
		constexpr auto RunAwayTime = 0x32c; // float
		constexpr auto MinActionTime = 0x330; // float
		constexpr auto MaxActionTime = 0x334; // float
		constexpr auto WalkSpeed = 0x338; // float
		constexpr auto RunSpeed = 0x33c; // float
		constexpr auto FleeSegmentDistance = 0x340; // float
		constexpr auto AlertStartupTime = 0x344; // float
		constexpr auto MinMoveDistance = 0x348; // float
		constexpr auto DoNotDespawnTime = 0x34c; // float
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_ADropZoneSlot {
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
		constexpr auto ActivationDuration = 0x230; // float
		constexpr auto UnlockedMesh = 0x238; // UStaticMesh*
		constexpr auto ActivateSound = 0x240; // UAkAudioEvent*
		constexpr auto _gameEvent = 0x248; // ADropZoneGameEvent*
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_AObjective {
		constexpr auto _objectivesIntroDialogues = 0x2b0; // TArray<FDialogueInfo>
		constexpr auto _objectivesOutroSuccessDialogues = 0x2c0; // TArray<FDialogueInfo>
		constexpr auto _objectivesOutroFailDialogues = 0x2d0; // TArray<FDialogueInfo>
		constexpr auto _objectiveState = 0x2e0; // EObjectiveState
		constexpr auto _parentMission = 0x2e4; // TWeakObjectPtr<AMission>
		constexpr auto _description = 0x2f0; // FText
		constexpr auto _canInterruptDialogue = 0x319; // bool
		constexpr auto _playUISounds = 0x31a; // bool
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto notifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_APlaceableActorBase {
		constexpr auto _id = 0x228; // FDbIntegerId
		constexpr auto _boxCollisionComponent = 0x230; // UBoxComponent*
		constexpr auto _craftingIndex = 0x23c; // int32_t
		constexpr auto _ingredientMultiplier = 0x240; // float
		constexpr auto _rootComponent = 0x248; // USceneComponent*
		constexpr auto _staticMeshComponent_Main = 0x250; // UStaticMeshComponent*
		constexpr auto _staticMeshComponent_Outline = 0x258; // UStaticMeshComponent*
		constexpr auto _staticMeshComponent_Depth = 0x260; // UStaticMeshComponent*
		constexpr auto _queryStaticMeshComponent = 0x268; // UStaticMeshComponent*
		constexpr auto _directionIndicatorStaticMeshComponent = 0x270; // UStaticMeshComponent*
		constexpr auto _primaryMaterialAllowed = 0x278; // UMaterialInstanceDynamic*
		constexpr auto _primaryMaterialDisallowed = 0x280; // UMaterialInstanceDynamic*
		constexpr auto _outlineMaterial = 0x288; // UMaterialInstanceDynamic*
		constexpr auto _depthMaterial = 0x290; // UMaterialInstanceDynamic*
		constexpr auto _statusFlags = 0x364; // EPlaceableStatusFlags
		constexpr auto _numTracesX = 0x3ec; // int32_t
		constexpr auto _numTracesY = 0x3f0; // int32_t
		constexpr auto _traceHeightFactor = 0x3f4; // float
		constexpr auto _maxPlacementAngle = 0x3f8; // float
		constexpr auto _widgetHidingDistance = 0x3fc; // float
		constexpr auto _fullWidgetHidingDistance = 0x400; // float
		constexpr auto _widgetSwitchPeriod = 0x404; // float
		constexpr auto _minDistanceToShowWidget = 0x408; // float
		constexpr auto _syncPeriod = 0x40c; // float
		constexpr auto _reachabilityMaxDifference = 0x410; // float
		constexpr auto _directionIndicatorOffset = 0x414; // float
		constexpr auto _destroyInteractionText = 0x418; // FText
		constexpr auto _placementState = 0x430; // EPlacementBaseState
		constexpr auto _replicatedLocation = 0x434; // FVector
		constexpr auto _replicatedPlacedLocation = 0x440; // FVector
		constexpr auto _replicatedRotation = 0x44c; // FRotator
		constexpr auto _ingredients = 0x458; // TArray<FPlaceableIngredient>
		constexpr auto _placementAllowedMaterialOverride = 0x498; // UMaterialInterface*
		constexpr auto _placementDisallowedMaterialOverride = 0x4a0; // UMaterialInterface*
		constexpr auto _outlineMaterialOverride = 0x4a8; // UMaterialInterface*
		constexpr auto _depthMaterialOverride = 0x4b0; // UMaterialInterface*
	}

	namespace n_AGlassBottle01_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UPrisonerBodyCondition_FoodDisgust {
		constexpr auto _disgustAmountMultiplierVsConstitution = 0xa8; // FFloatInterval
		constexpr auto _disgustAmountTolerated = 0xb0; // float
		constexpr auto _disgustAmountToIssueFirstWarning = 0xb4; // float
		constexpr auto _firstDisgustWarning = 0xb8; // UNotificationDescription*
		constexpr auto _disgustAmountToIssueSecondWarning = 0xc0; // float
		constexpr auto _secondDisgustWarning = 0xc8; // UNotificationDescription*
		constexpr auto _disgustWarningCooldown = 0xd0; // float
		constexpr auto _disgustAmountToBeAbleToVomit = 0xdc; // float
		constexpr auto _disgustAmountToVomit = 0xe0; // float
		constexpr auto _disgustAmountDecreaseMultiplier = 0xe4; // float
		constexpr auto _disgustAmount = 0xe8; // float
		constexpr auto _disgustAmountAtStabilizationStart = 0x108; // float
		constexpr auto _disgustAmountAtRecoveryStart = 0x10c; // float
		constexpr auto _nauseaSymptomClass = 0x110; // UPrisonerBodySymptom_Nausea*
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UUI_InventoryPanelThirdIteration_C {
		constexpr auto UberGraphFrame = 0x390; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x398; // UImage*
		constexpr auto Image_2 = 0x3a0; // UImage*
		constexpr auto Image_3 = 0x3a8; // UImage*
		constexpr auto Image_4 = 0x3b0; // UImage*
		constexpr auto PlayerName = 0x3b8; // UTextBlock*
		constexpr auto SizeBox_1 = 0x3c0; // USizeBox*
		constexpr auto InventoryContainers = 0x3c8; // TMap<AItem*, UObject*>
		constexpr auto InventoryScrollSlots = 0x418; // TMap<AItem*, UScrollBoxSlot*>
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UUI_Metabolism_BodyOverview_C {
		constexpr auto BackgroundSymptomList = 0x570; // UImage*
	}

	namespace n_UUI_RewardWidget_C {
		constexpr auto Image_1 = 0x270; // UImage*
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USmoothWeightMapSetProperties {
		constexpr auto MinSmoothMultiplier = 0x80; // float
	}

	namespace n_URangedWeaponsSkill {
		constexpr auto _clearMalfunctionBadRound = 0xb8; // float
		constexpr auto _clearMalfunctionStovePipe = 0xbc; // float
		constexpr auto _clearMalfunctionRoundNotLoaded = 0xc0; // float
		constexpr auto _clearMalfunctionDoubleFeed = 0xc4; // float
		constexpr auto _clearMalfunctionStuckBullet = 0xc8; // float
		constexpr auto _clearMalfunctionClipPartiallyEjected = 0xcc; // float
		constexpr auto NoSkillParameters = 0xd0; // FRangedWeaponSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0xd4; // FRangedWeaponSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0xd8; // FRangedWeaponSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0xdc; // FRangedWeaponSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0xe0; // FRangedWeaponSkillParametersPerSkillLevel
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_UBondageItemTag {
		constexpr auto BondageMesh = 0x30; // USkeletalMesh*
		constexpr auto BaseStruggleDuration = 0x38; // float
		constexpr auto StruggleStrengthModifier = 0x3c; // float
		constexpr auto StruggleDexterityModifier = 0x40; // float
		constexpr auto GroundMovementSpeedMultiplier = 0x44; // float
		constexpr auto WaterMovementSpeedMultiplier = 0x48; // float
		constexpr auto HandsBoundIdleFPAnimation = 0x50; // UAnimSequenceBase*
		constexpr auto HandsBoundIdleTPAnimation = 0x58; // UAnimSequenceBase*
		constexpr auto HandsBoundMontage = 0x60; // UAnimMontage*
		constexpr auto HandsAdjustMontage = 0x68; // UAnimMontage*
		constexpr auto HandsBoundStruggleMontage = 0x70; // UAnimMontage*
		constexpr auto HandsFreedMontage = 0x78; // UAnimMontage*
		constexpr auto BindingHandsMontage = 0x80; // UAnimMontage*
		constexpr auto AdjustingHandsMontage = 0x88; // UAnimMontage*
		constexpr auto HandsBoundSuicideMontage = 0x90; // UAnimMontage*
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x448; // int32_t
		constexpr auto Hand = 0x44c; // EControllerHand
		constexpr auto MotionSource = 0x450; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x458; // char : 1
		constexpr auto CurrentTrackingStatus = 0x45c; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x45d; // bool
		constexpr auto DisplayModelSource = 0x460; // FName
		constexpr auto CustomDisplayMesh = 0x468; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x470; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4e0; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UBP_BlackHawk_Unload_C {
		constexpr auto UberGraphFrame = 0x58; // FPointerToUberGraphFrame
	}

	namespace n_UDialogueContainerWidget {
		constexpr auto _subtitleWidget = 0x260; // USubtitleWidget*
		constexpr auto _avatarImageOverlay = 0x268; // UOverlay*
		constexpr auto _actionText = 0x270; // UTextBlock*
	}

	namespace n_UDoorUnlockItemComponent {
		constexpr auto _expirationTimeSeconds = 0xb8; // int64_t
		constexpr auto _unlockDataType = 0xc0; // EDoorUnlockDataType
		constexpr auto _doorUnlockData = 0xc8; // UDoorUnlockData*
		constexpr auto _itemCreatedTimestamp = 0xd0; // int64_t
	}

	namespace n_UItemTooltipTab {
		constexpr auto _panels = 0x138; // TArray<UPanelWidget*>
	}

	namespace n_UPhysicsInspectorTool {
		constexpr auto VizSettings = 0x90; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectData = 0x98; // TArray<UPhysicsObjectToolPropertySet*>
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewElements = 0xb0; // TArray<UPreviewGeometry*>
	}

	namespace n_UModularTooltipElementData_Affects {
		constexpr auto Affect = 0x40; // UModularTooltipElementData*
	}

	namespace n_ASlidingDoorStatic {
		constexpr auto ClosedPositionComponent = 0x408; // USceneComponent*
		constexpr auto OpenPositionComponent = 0x410; // USceneComponent*
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_USTF12_Reload_Event_Chamber_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_AMinigame {
		constexpr auto _testingMode = 0x250; // int32_t
		constexpr auto _rootComponent = 0x258; // USceneComponent*
		constexpr auto _captureCam = 0x260; // USceneCaptureComponent2D*
		constexpr auto _captureMaskCam = 0x268; // USceneCaptureComponent2D*
		constexpr auto _minigameWidget = 0x278; // UMinigameWidget*
		constexpr auto _minigameWidgetClass = 0x280; // UMinigameWidget*
		constexpr auto _introDuration = 0x2b0; // float
		constexpr auto _outroDurationOnFail = 0x2b4; // float
		constexpr auto _outroDurationOnSuccess = 0x2b8; // float
		constexpr auto _canBeCanceled = 0x2bc; // bool
		constexpr auto _simulatedMontage = 0x2bd; // EPrisonerMontage
		constexpr auto _simulatedAudioStart = 0x2c0; // UAkAudioEvent*
		constexpr auto _simulatedAudioStop = 0x2c8; // UAkAudioEvent*
		constexpr auto _takeInHandsItemTagClasses = 0x2d0; // TArray<UBaseItemTag*>
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x448; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x450; // bool
		constexpr auto bFilledSpline = 0x451; // bool
		constexpr auto AssociatedSpline = 0x458; // UPaperTerrainSplineComponent*
		constexpr auto randomSeed = 0x460; // int32_t
		constexpr auto SegmentOverlapAmount = 0x464; // float
		constexpr auto TerrainColor = 0x468; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x478; // int32_t
		constexpr auto SpriteCollisionDomain = 0x47c; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x480; // float
		constexpr auto CachedBodySetup = 0x488; // UBodySetup*
	}

	namespace n_AAnimalContinuousChargeAttackAIController {
		constexpr auto LockAttackDirectionDistance = 0x4d8; // float
		constexpr auto ContinueAttackDistance = 0x4dc; // float
	}

	namespace n_UFixedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_USeamSculptToolProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bHitBackFaces = 0x61; // bool
	}

	namespace n_ABombDefusalMinigameBase {
		constexpr auto _timeBomb = 0x2e0; // UStaticMeshComponent*
		constexpr auto _splineConnectorMesh = 0x2e8; // UStaticMesh*
		constexpr auto _wireButtonsSize = 0x2f8; // FVector
		constexpr auto _defusalTool = 0x308; // USkeletalMeshComponent*
		constexpr auto _toolMovementSensitivity = 0x310; // float
		constexpr auto _minDefusingToolOffsetFromCenter = 0x314; // FVector
		constexpr auto _maxDefusingToolOffsetFromCenter = 0x320; // FVector
		constexpr auto _greenLedLight = 0x330; // UMaterialInterface*
		constexpr auto _redLedLight = 0x338; // UMaterialInterface*
		constexpr auto _yellowLedLight = 0x340; // UMaterialInterface*
		constexpr auto _ledLights = 0x348; // TArray<UStaticMeshComponent*>
		constexpr auto _ledLightMesh = 0x358; // UStaticMesh*
		constexpr auto _wireMesh = 0x368; // UStaticMesh*
		constexpr auto _wiresEndPositions = 0x370; // TArray<EWireType>
		constexpr auto _wires = 0x380; // TArray<FWireDescription>
		constexpr auto _splines = 0x3a0; // TArray<FSplineDescription>
		constexpr auto _numberOfWires = 0x3c0; // int32_t
		constexpr auto _numberOfWirePoints = 0x3c4; // int32_t
		constexpr auto _wiresShuffleIntensity = 0x3c8; // int32_t
		constexpr auto _minWiresComplexity = 0x3cc; // int32_t
		constexpr auto _wiresForwardAxis = 0x3d0; // ESplineAxis
		constexpr auto _wiresStartSmoothness = 0x3d4; // float
		constexpr auto _wiresEndSmoothness = 0x3d8; // float
		constexpr auto _wiresMiddleSmoothness = 0x3dc; // float
		constexpr auto _wiresSharpCornerSmoothness = 0x3e0; // float
		constexpr auto _maxSegmentSize = 0x3e4; // float
		constexpr auto _wirePointsSpreadPositive = 0x3e8; // float
		constexpr auto _wirePointsSpreadNegative = 0x3ec; // float
		constexpr auto _wireHeight = 0x3f0; // float
		constexpr auto _wireVerticalSpacing = 0x3f4; // float
		constexpr auto _wirePointsOffset = 0x3f8; // FVector
		constexpr auto _wireEndOffset = 0x404; // float
		constexpr auto _additionalWireEndPointOffset = 0x408; // FVector
		constexpr auto _cutWireSegment0 = 0x418; // UStaticMeshComponent*
		constexpr auto _cutWireSegment1 = 0x420; // UStaticMeshComponent*
		constexpr auto _cutWireSegment2 = 0x428; // UStaticMeshComponent*
		constexpr auto _cutWireSegment3 = 0x430; // UStaticMeshComponent*
		constexpr auto _cutWireSegment4 = 0x438; // UStaticMeshComponent*
		constexpr auto _cutWireSegment5 = 0x440; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment0 = 0x448; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment1 = 0x450; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment2 = 0x458; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment3 = 0x460; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment4 = 0x468; // UStaticMeshComponent*
		constexpr auto _uncutWireSegment5 = 0x470; // UStaticMeshComponent*
		constexpr auto _wireBox1 = 0x478; // UBoxComponent*
		constexpr auto _wireBox2 = 0x480; // UBoxComponent*
		constexpr auto _wireBox3 = 0x488; // UBoxComponent*
		constexpr auto _wireBox4 = 0x490; // UBoxComponent*
		constexpr auto _wireBox5 = 0x498; // UBoxComponent*
		constexpr auto _wireBox6 = 0x4a0; // UBoxComponent*
		constexpr auto _bombDefusalTimerStartSound = 0x4a8; // UAkAudioEvent*
		constexpr auto _bombDefusalTimerStopSound = 0x4b0; // UAkAudioEvent*
		constexpr auto _cutWireSound = 0x4b8; // UAkAudioEvent*
		constexpr auto _bombDefusedSound = 0x4c0; // UAkAudioEvent*
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UHandheldLightItemState {
		constexpr auto CurrentLightAngleIndex = 0xf8; // int32_t
		constexpr auto CurrentLightIntensity = 0xfc; // float
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_UMagicLeapPlanesComponent {
		constexpr auto QueryFlags = 0x1f8; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x208; // UBoxComponent*
		constexpr auto MaxResults = 0x210; // int32_t
		constexpr auto MinHolePerimeter = 0x214; // float
		constexpr auto MinPlaneArea = 0x218; // float
		constexpr auto QueryType = 0x21c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x220; // float
		constexpr auto OnPlanesQueryResult = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x238; // FMulticastInlineDelegate
	}

	namespace n_UTabButton {
		constexpr auto PreviewSelectedState = 0x2c8; // bool
		constexpr auto _button = 0x2d0; // UButton*
		constexpr auto _text = 0x2d8; // UTextBlock*
		constexpr auto _sizeBox = 0x2e0; // USizeBox*
		constexpr auto _initialTitle = 0x2e8; // FText
		constexpr auto _selectedButtonStyle = 0x300; // FTabButtonStyle
		constexpr auto _selectedUnfocusedButtonStyle = 0x588; // FTabButtonStyle
		constexpr auto _deselectedButtonStyle = 0x810; // FTabButtonStyle
		constexpr auto _selectedTextStyle = 0xa98; // FTabTextStyle
		constexpr auto _selectedUnfocusedTextStyle = 0xb30; // FTabTextStyle
		constexpr auto _deselectedTextStyle = 0xbc8; // FTabTextStyle
	}

	namespace n_UUI_ItemStatusWidget_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto _titleText = 0x318; // UEditableTextBox*
		constexpr auto baseImage = 0x320; // UImage*
		constexpr auto outlineImage = 0x328; // UImage*
		constexpr auto TitleOverlay = 0x330; // UOverlay*
	}

	namespace n_UObjectiveItemWidget {
		constexpr auto _objectiveItemText = 0x260; // UTextBlock*
		constexpr auto _bullet = 0x268; // UImage*
		constexpr auto _bulletCompleted = 0x270; // UImage*
		constexpr auto _objectiveActiveColor = 0x278; // FLinearColor
		constexpr auto _objectiveCompletedColor = 0x288; // FLinearColor
		constexpr auto _objectiveFailedColor = 0x298; // FLinearColor
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x468; // FVector
		constexpr auto Radius = 0x474; // float
		constexpr auto Thickness = 0x478; // float
		constexpr auto NumSides = 0x47c; // int32_t
		constexpr auto bViewAligned = 0x480; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x481; // bool
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto position = 0xb4; // FVector
	}

	namespace n_UUI_SquadPanel_C {
		constexpr auto UberGraphFrame = 0x338; // FPointerToUberGraphFrame
		constexpr auto CreateButton = 0x340; // UButton*
		constexpr auto EditButton = 0x348; // UButton*
		constexpr auto EmblemBox = 0x350; // UBorder*
		constexpr auto LeaveButton = 0x358; // UButton*
		constexpr auto MemberCount = 0x360; // UTextBlock*
		constexpr auto MemberListBox = 0x368; // UScrollBox*
		constexpr auto MembersList = 0x370; // UVerticalBox*
		constexpr auto MessageBox = 0x378; // USizeBox*
		constexpr auto RankingBox = 0x380; // UVerticalBox*
		constexpr auto SquadEmblem = 0x388; // UUI_SquadEmblem_C*
		constexpr auto SquadMessage = 0x390; // UTextBlock*
		constexpr auto SquadName = 0x398; // UTextBlock*
		constexpr auto UI_SquadConfirmation = 0x3a0; // UUI_SquadConfirmation_C*
		constexpr auto UI_SquadEditor = 0x3a8; // UUI_SquadEditor_C*
		constexpr auto InSquad = 0x3b0; // bool
		constexpr auto CanEdit = 0x3b1; // bool
		constexpr auto RankingCount = 0x3b4; // int32_t
		constexpr auto MemberCountValid = 0x3b8; // bool
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UWaterMeshComponent {
		constexpr auto ForceCollapseDensityLevel = 0x470; // int32_t
		constexpr auto TileSize = 0x474; // float
		constexpr auto ExtentInTiles = 0x478; // FIntPoint
		constexpr auto FarDistanceMaterial = 0x480; // UMaterialInterface*
		constexpr auto FarDistanceMeshExtent = 0x488; // float
		constexpr auto RTWorldLocation = 0x48c; // FVector
		constexpr auto RTWorldSizeVector = 0x498; // FVector
		constexpr auto TessellationFactor = 0x588; // int32_t
		constexpr auto LODScale = 0x58c; // float
	}

	namespace n_AConZEconomyManager {
		constexpr auto _traderManagingComponent = 0x220; // UTraderManagingComponent*
		constexpr auto _autoSaveInterval = 0x228; // float
		constexpr auto _tradeablesPerPage = 0x240; // int32_t
		constexpr auto _cashItemClass = 0x248; // AItem*
		constexpr auto _prosperityLevelInfoPerLevel = 0x250; // FTradeOutpostProsperityLevelInfo [0x6]
		constexpr auto _expensiveTradeablesSpawnChanceMap = 0x2e8; // TMap<float, int32_t>
		constexpr auto _playerPurchasePriceDeltaVsChanceCurve = 0x338; // UCurveFloat*
		constexpr auto _betterPurchasePricesChance = 0x340; // float
		constexpr auto _economyTable = 0x348; // TMap<FString, FTraderTradingData>
		constexpr auto _purchaseablesPerCategory = 0x398; // FTradeablesPerCategoryHelperStruct [0x1a]
		constexpr auto _tradeablesPerCategory = 0x608; // FTradeablesPerCategoryHelperStruct [0x1a]
		constexpr auto _economyOverrideJSONFileName = 0x878; // FString
		constexpr auto _tradeableAssetNameVsClassMapHelper = 0x898; // TMap<FName, UObject*>
		constexpr auto _shouldIgnoreDatabaseSerialization = 0x8e8; // bool
	}

	namespace n_ULaserTriggerComponent {
		constexpr auto BoxCollisionComponent = 0x4d0; // UBoxComponent*
		constexpr auto VisualizationMeshComponent = 0x4d8; // UStaticMeshComponent*
		constexpr auto _laserDirection = 0x4e0; // FVector
		constexpr auto _maxLaserLength = 0x4ec; // float
		constexpr auto _laserThickness = 0x4f0; // float
		constexpr auto _laserHeight = 0x4f4; // float
		constexpr auto _visualizationMesh = 0x4f8; // UStaticMesh*
		constexpr auto _laserMeshTransform = 0x500; // FTransform
	}

	namespace n_ABP_BagCraftingMission_C {
		constexpr auto DefaultSceneRoot = 0x468; // USceneComponent*
	}

	namespace n_UNewMeshMaterialProperties {
		constexpr auto Material = 0x60; // TWeakObjectPtr<UMaterialInterface>
		constexpr auto UVScale = 0x68; // float
		constexpr auto bWorldSpaceUVScale = 0x6c; // bool
		constexpr auto bWireframe = 0x6d; // bool
		constexpr auto bShowExtendedOptions = 0x6e; // bool
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UPlaceableOnRackItemTag {
		constexpr auto SocketName = 0x30; // FName
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2b4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2b8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2bc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c0; // int32_t
		constexpr auto CollisionRadius = 0x2c4; // float
		constexpr auto ShadeRadius = 0x2c8; // float
		constexpr auto NumSteps = 0x2cc; // int32_t
		constexpr auto InitialSeedDensity = 0x2d0; // float
		constexpr auto AverageSpreadDistance = 0x2d4; // float
		constexpr auto SpreadVariance = 0x2d8; // float
		constexpr auto SeedsPerStep = 0x2dc; // int32_t
		constexpr auto DistributionSeed = 0x2e0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2e4; // float
		constexpr auto bCanGrowInShade = 0x2e8; // bool
		constexpr auto bSpawnsInShade = 0x2e9; // bool
		constexpr auto MaxInitialAge = 0x2ec; // float
		constexpr auto MaxAge = 0x2f0; // float
		constexpr auto OverlapPriority = 0x2f4; // float
		constexpr auto ProceduralScale = 0x2f8; // FFloatInterval
		constexpr auto ScaleCurve = 0x300; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x388; // int32_t
		constexpr auto ReapplyDensity = 0x38c; // char : 1
		constexpr auto ReapplyRadius = 0x38c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x38c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x38c; // char : 1
		constexpr auto ReapplyScaling = 0x38c; // char : 1
		constexpr auto ReapplyScaleX = 0x38c; // char : 1
		constexpr auto ReapplyScaleY = 0x38c; // char : 1
		constexpr auto ReapplyScaleZ = 0x38c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x38d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x38d; // char : 1
		constexpr auto ReapplyHeight = 0x38d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x38d; // char : 1
		constexpr auto ReapplyZOffset = 0x38d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x38d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x38d; // char : 1
		constexpr auto bEnableDensityScaling = 0x38d; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x38e; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x390; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3a4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UProceduralTorusToolProperties {
		constexpr auto MajorRadius = 0x70; // float
		constexpr auto MinorRadius = 0x74; // float
		constexpr auto TubeSlices = 0x78; // int32_t
		constexpr auto CrossSectionSlices = 0x7c; // int32_t
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_ABP_Survival_BagCrafting_CraftBagObjective_C {
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
	}

	namespace n_UUI_TeammateName_C {
		constexpr auto PlayerName = 0x260; // UTextBlock*
		constexpr auto _name = 0x268; // FString
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x448; // FSplineCurves
		constexpr auto SplineInfo = 0x4b8; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4d0; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4e8; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x500; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x518; // bool
		constexpr auto ReparamStepsPerSegment = 0x51c; // int32_t
		constexpr auto Duration = 0x520; // float
		constexpr auto bStationaryEndpoints = 0x524; // bool
		constexpr auto bSplineHasBeenEdited = 0x525; // bool
		constexpr auto bModifiedByConstructionScript = 0x526; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x527; // bool
		constexpr auto bDrawDebug = 0x528; // bool
		constexpr auto bClosedLoop = 0x529; // bool
		constexpr auto bLoopPositionOverride = 0x52a; // bool
		constexpr auto LoopPosition = 0x52c; // float
		constexpr auto DefaultUpVector = 0x530; // FVector
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UDynamicMeshBrushTool {
		constexpr auto PreviewMesh = 0x1c0; // UPreviewMesh*
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x398; // FDestructibleParameters
		constexpr auto FractureEffects = 0x420; // TArray<FFractureEffect>
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UBuryData {
		constexpr auto AllowedBuryMaterials = 0x30; // TMap<EPhysicalSurface, FBuryMaterialData>
		constexpr auto StaminaDrain = 0x80; // float
		constexpr auto RecoveredStaminaThreshold = 0x84; // float
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_AItemContainer {
		constexpr auto _rootComponent = 0x250; // USceneComponent*
		constexpr auto _forceUnlockTime = 0x258; // float
		constexpr auto _unlockPositionMarker = 0x260; // FUnlockLocation
		constexpr auto _upgradeItemsClasses = 0x298; // TArray<UObject*>
		constexpr auto _lockData = 0x2a8; // TArray<FLockData>
		constexpr auto _originalUpgradeItemClasses = 0x2b8; // TArray<UObject*>
		constexpr auto _originalLockData = 0x2c8; // TArray<FLockData>
		constexpr auto _ignoreServerSettings = 0x2d8; // bool
		constexpr auto _disableSerialization = 0x301; // bool
		constexpr auto _shouldBeResetOnNewSession = 0x302; // bool
	}

	namespace n_UMetabolismSymptomTitle {
		constexpr auto _title = 0x270; // UTextBlock*
	}

	namespace n_UPrisonerLifeIndicatorsSprite {
		constexpr auto _breathingBarLungsWidget = 0x260; // UBreathingBarLungsWidget*
		constexpr auto _dualProgressBarBreathing = 0x268; // UDualArcedProgressBar*
		constexpr auto _gradedProgressBarActionDifficulty = 0x270; // UGradedArcedProgressBar*
		constexpr auto _noiseInstigatedDelay = 0x2dc; // float
	}

	namespace n_USearchForItemsAssetData {
		constexpr auto SearchAsset = 0x30; // USearchItemDataAsset*
	}

	namespace n_UBP_M82A1_Reload_Event_C {
		constexpr auto MaxAmmoCount = 0x90; // int32_t
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCarousel {
		constexpr auto _selectionDisplay = 0x280; // UTextBlock*
		constexpr auto _leftArrow = 0x288; // UButton*
		constexpr auto _rightArrow = 0x290; // UButton*
		constexpr auto _carouselValues = 0x298; // TArray<FText>
		constexpr auto _canWrap = 0x2a8; // bool
		constexpr auto _selectedAndFocusedCarouselStyle = 0x2b0; // FCarouselStyle
		constexpr auto _selectedAndUnfocusedCarouselStyle = 0x820; // FCarouselStyle
		constexpr auto _unselectedCarouselStyle = 0xd90; // FCarouselStyle
		constexpr auto _highlightedCarouselStyle = 0x1300; // FCarouselStyle
		constexpr auto _disabledCarouselStyle = 0x1870; // FCarouselStyle
		constexpr auto _controlWithMouseWheel = 0x1de0; // bool
		constexpr auto _controlWithKeyboard = 0x1de1; // bool
	}

	namespace n_UDefusingCuttingToolItemTag {
		constexpr auto SkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto Montage = 0x38; // UAnimMontage*
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_USkill {
		constexpr auto Caption = 0x30; // FText
		constexpr auto ReplicationID = 0x48; // ESkillReplicationID
		constexpr auto ComboBonus = 0x4c; // float
		constexpr auto NoSkillBonus = 0x50; // float
		constexpr auto BasicBonus = 0x54; // float
		constexpr auto MediumBonus = 0x58; // float
		constexpr auto AdvancedBonus = 0x5c; // float
		constexpr auto DisplayActionMessages = 0x60; // float
		constexpr auto IsAvailableInCharacterCreation = 0x64; // bool
		constexpr auto _skillIcon = 0x68; // UTexture2D*
		constexpr auto _skillFamePointsMultiplier = 0x9c; // float
		constexpr auto _uiDataClass = 0xa0; // UPrisonerSkillUIData*
	}

	namespace n_UMetabolismVitaminAndMineralReserve {
		constexpr auto Title = 0x260; // FText
		constexpr auto _title = 0x278; // UTextBlock*
		constexpr auto _value = 0x280; // UTextBlock*
		constexpr auto _spb_ReservesBar = 0x288; // UMetabolismSegmentedProgressBar*
	}

	namespace n_ATeamDeathmatchGameEvent {
		constexpr auto _teamDeathmatchParameters = 0x598; // FTeamDeathmatchParameters
	}

	namespace n_ABP_Survival_Storage_Mission_C {
		constexpr auto DefaultSceneRoot = 0x468; // USceneComponent*
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UBruisingData {
		constexpr auto Patches = 0x30; // TArray<FBruisePatch>
	}

	namespace n_UMeshSelectionToolProperties {
		constexpr auto SelectionMode = 0x60; // EMeshSelectionToolPrimaryMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bHitBackFaces = 0x68; // bool
		constexpr auto bShowWireframe = 0x69; // bool
		constexpr auto FaceColorMode = 0x6c; // EMeshFacesColorMode
	}

	namespace n_UAnimNotify_BoatRow {
		constexpr auto Flags = 0x38; // uint32_t
		constexpr auto _rowCycleLength = 0x3c; // float
	}

	namespace n_UCustomZoneSettingsRegionDetails {
		constexpr auto _name = 0x288; // UEditableText*
		constexpr auto _shape = 0x290; // UCarouselWithLabel*
		constexpr auto _locationX = 0x298; // USpinBox*
		constexpr auto _locationY = 0x2a0; // USpinBox*
		constexpr auto _textSize = 0x2a8; // UTextBlock*
		constexpr auto _sizeX = 0x2b0; // USpinBox*
		constexpr auto _sizeY = 0x2b8; // USpinBox*
		constexpr auto _textConfiguration = 0x2c0; // UTextBlock*
		constexpr auto _textFallDamage = 0x2c8; // UTextBlock*
		constexpr auto _textPuppetDamage = 0x2d0; // UTextBlock*
		constexpr auto _textSentryDamage = 0x2d8; // UTextBlock*
		constexpr auto _textAnimalDamage = 0x2e0; // UTextBlock*
		constexpr auto _textVehicleDamage = 0x2e8; // UTextBlock*
		constexpr auto _textBrawlingDamage = 0x2f0; // UTextBlock*
		constexpr auto _textMeleeWeaponDamage = 0x2f8; // UTextBlock*
		constexpr auto _textThrowingDamage = 0x300; // UTextBlock*
		constexpr auto _textProjectileDamage = 0x308; // UTextBlock*
		constexpr auto _textExplosiveDamage = 0x310; // UTextBlock*
		constexpr auto _textTrapDamage = 0x318; // UTextBlock*
		constexpr auto _textDamageToBases = 0x320; // UTextBlock*
		constexpr auto _textDamageToVehicles = 0x328; // UTextBlock*
		constexpr auto _textPickingPlayerLocks = 0x330; // UTextBlock*
		constexpr auto _textPickingWorldLocks = 0x338; // UTextBlock*
		constexpr auto _textBuildingBases = 0x340; // UTextBlock*
		constexpr auto _buttonOpenConfiguration = 0x348; // UButton*
		constexpr auto _buttonNextConfiguration = 0x350; // UButton*
		constexpr auto _buttonPreviousConfiguration = 0x358; // UButton*
	}

	namespace n_UMeshStatisticsProperties {
		constexpr auto Mesh = 0x60; // FString
		constexpr auto UV = 0x70; // FString
		constexpr auto Attributes = 0x80; // FString
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UMotionTriggerComponent {
		constexpr auto TriggerForwardVector = 0x4d0; // FVector
		constexpr auto TriggerAngle = 0x4dc; // float
		constexpr auto MotionDetectionSensitivity = 0x4e0; // float
		constexpr auto MotionDetectionDepletionSpeed = 0x4e4; // float
		constexpr auto _motionDetector = 0x4e8; // float
		constexpr auto _motionDetectorStartSound = 0x4f0; // UAkAudioEvent*
		constexpr auto _motionDetectorEndSound = 0x4f8; // UAkAudioEvent*
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x4c8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4d8; // FString
		constexpr auto TurnAxisName = 0x4e8; // FString
		constexpr auto TurnAtRateAxisName = 0x4f8; // FString
		constexpr auto MoveForwardAxisName = 0x508; // FString
		constexpr auto MoveRightAxisName = 0x518; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x528; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x52c; // float
	}

	namespace n_AObtainItemObjective {
		constexpr auto _targetItems = 0x330; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _itemInHands = 0x340; // bool
		constexpr auto _itemInHolster = 0x341; // bool
		constexpr auto _itemInInventory = 0x342; // bool
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x758; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x758; // char : 1
		constexpr auto MaxPortCountToTry = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x76c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x770; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x774; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x778; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x780; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x788; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x78c; // float
	}

	namespace n_UGameEventCardWidget {
		constexpr auto _gameEvent = 0x278; // AGameEventBase*
	}

	namespace n_ALockpickingMinigame {
		constexpr auto _outerRing = 0x2e0; // UStaticMeshComponent*
		constexpr auto _movableRing = 0x2e8; // UStaticMeshComponent*
		constexpr auto _lockpickingSetAnchor = 0x2f0; // USceneComponent*
		constexpr auto _lockpickManipulator = 0x2f8; // USceneComponent*
		constexpr auto _lockpickAnchor = 0x300; // USceneComponent*
		constexpr auto _lockpick = 0x308; // UStaticMeshComponent*
		constexpr auto _tensionToolManipulator = 0x310; // USceneComponent*
		constexpr auto _tensionToolAnchor = 0x318; // USceneComponent*
		constexpr auto _tensionTool = 0x320; // UStaticMeshComponent*
		constexpr auto _zoomStartLocation = 0x328; // FVector
		constexpr auto _zoomEndLocation = 0x334; // FVector
		constexpr auto _protectionParticlesTransform = 0x340; // FTransform
		constexpr auto _zoomCurve = 0x370; // UCurveFloat*
		constexpr auto _fadeCurve = 0x378; // UCurveFloat*
		constexpr auto _pickBreakingMultiplierForMediumDifficulty = 0x380; // float
		constexpr auto _pickBreakingMultiplierForHardDifficulty = 0x384; // float
		constexpr auto _lockpickingLockpickMovementStartAudioEvent = 0x3b8; // UAkAudioEvent*
		constexpr auto _lockpickingLockpickMovementStopAudioEvent = 0x3c0; // UAkAudioEvent*
		constexpr auto _lockpickingLockTensionStartAudioEvent = 0x3c8; // UAkAudioEvent*
		constexpr auto _lockpickingLockTensionStopAudioEvent = 0x3d0; // UAkAudioEvent*
		constexpr auto _lockpickingLockTurningStartAudioEvent = 0x3d8; // UAkAudioEvent*
		constexpr auto _lockpickingLockTurningStopAudioEvent = 0x3e0; // UAkAudioEvent*
		constexpr auto _lockpickingSuccessAudioEvent = 0x3e8; // UAkAudioEvent*
		constexpr auto _lockpickingFailedAudioEvent = 0x3f0; // UAkAudioEvent*
		constexpr auto _lockpickingResetAudioEvent = 0x3f8; // UAkAudioEvent*
		constexpr auto _rotatingStartAngle = 0x404; // float
		constexpr auto _duration = 0x408; // float
		constexpr auto _angleTolerance = 0x40c; // float
		constexpr auto _pickBreakingMultiplier = 0x410; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UNameableItemComponentState {
		constexpr auto Name = 0x40; // FString
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UAnimBP_SVD_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_7 = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x380; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x4d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x558; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x678; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x7a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_6 = 0x828; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x870; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x8b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x900; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x9b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x9d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xa00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0xa28; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0xad8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0xb20; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0xb68; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xbb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xbd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xc00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xc28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0xcc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xd68; // FAnimNode_SequencePlayer
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UDcxVehicleDriveComponentTank {
		constexpr auto DriveModel = 0x3b8; // EDcxVehicleDriveControlModelTank
	}

	namespace n_UPrisonerAnimInstance {
		constexpr auto SlowPaceLoopAnimSpeeds = 0x2b8; // float [0x16]
		constexpr auto MediumPaceLoopAnimSpeeds = 0x310; // float [0x16]
		constexpr auto FastPaceLoopAnimSpeeds = 0x368; // float [0x16]
		constexpr auto MeleeCombatWalkUsageRadius = 0x3c0; // float
		constexpr auto MeleeExhaustionFactorInterpSpeed = 0x3c4; // float
		constexpr auto UpperEyelidsLookLeftFactor = 0x3c8; // float
		constexpr auto LowerEyelidsLookLeftFactor = 0x3cc; // float
		constexpr auto UpperEyelidsLookRightFactor = 0x3d0; // float
		constexpr auto LowerEyelidsLookRightFactor = 0x3d4; // float
		constexpr auto UpperEyelidsLookUpFactor = 0x3d8; // float
		constexpr auto LowerEyelidsLookUpFactor = 0x3dc; // float
		constexpr auto UpperEyelidsLookDownFactor = 0x3e0; // float
		constexpr auto LowerEyelidsLookDownFactor = 0x3e4; // float
		constexpr auto AutoBlinkEnabled = 0x3e8; // bool
		constexpr auto _fallWithStyle = 0x488; // bool
		constexpr auto _isPrisonerCompletelyInitialized = 0x489; // bool
		constexpr auto _isOwnerLocallyControlled = 0x48a; // bool
		constexpr auto _isOwnerPlayerControlled = 0x48b; // bool
		constexpr auto _isInFirstPersonView = 0x48c; // bool
		constexpr auto _shouldOverrideIsInFirstPersonView = 0x48d; // bool
		constexpr auto _isInFirstPersonViewOverride = 0x48e; // bool
		constexpr auto _isAimingWeapon = 0x48f; // bool
		constexpr auto _isAbleToFireWeapon = 0x490; // bool
		constexpr auto _weaponAimingType = 0x491; // EWeaponAimingType
		constexpr auto _supportingHandIKLocation = 0x494; // FVector
		constexpr auto _weaponAimYaw = 0x4a0; // float
		constexpr auto _weaponAimPitch = 0x4a4; // float
		constexpr auto _meleeSkill_PrimaryIdleAnimationTP = 0x4a8; // UAnimSequenceBase*
		constexpr auto _meleeSkill_PrimaryIdleAnimationFP = 0x4b0; // UAnimSequenceBase*
		constexpr auto _meleeSkill_TiredIdleAnimationTP = 0x4b8; // UAnimSequenceBase*
		constexpr auto _meleeSkill_TiredIdleAnimationFP = 0x4c0; // UAnimSequenceBase*
		constexpr auto _meleeSkill_WalkingIdleAnimationTP = 0x4c8; // UAnimSequenceBase*
		constexpr auto _meleeSkill_WalkingIdleAnimationFP = 0x4d0; // UAnimSequenceBase*
		constexpr auto _meleeSkill_BlockIdleAnimationTP = 0x4d8; // UAnimSequenceBase*
		constexpr auto _meleeSkill_BlockIdleAnimationFP = 0x4e0; // UAnimSequenceBase*
		constexpr auto _meleeSkill_AimOffsetBlendSpaceTP = 0x4e8; // UBlendSpace*
		constexpr auto _meleeSkill_AimOffsetBlendSpaceFP = 0x4f0; // UBlendSpace*
		constexpr auto _meleeSkill_IdleToBlockBlendDuration = 0x4f8; // float
		constexpr auto _meleeSkill_BlockToIdleBlendDuration = 0x4fc; // float
		constexpr auto _meleeSkill_ExhaustionFactor = 0x500; // float
		constexpr auto _shouldUseUnarmedCombatWalk = 0x504; // bool
		constexpr auto _isHoldingBlock = 0x505; // bool
		constexpr auto _stamina = 0x508; // float
		constexpr auto _bellyJiggleAmount = 0x50c; // float
		constexpr auto _breastJiggleAmount = 0x510; // float
		constexpr auto _eyesRotationDelta = 0x514; // FRotator
		constexpr auto _minEyesRotationPitch = 0x520; // float
		constexpr auto _maxEyesRotationPitch = 0x524; // float
		constexpr auto _shouldUseWeaponAnimationPose = 0x528; // bool
		constexpr auto _shouldIgnoreSupportingHandIK = 0x610; // bool
		constexpr auto _firstPersonAimPitch = 0x614; // float
		constexpr auto _firstPersonAimYawDelta = 0x618; // float
		constexpr auto _shouldAimDownTheSights = 0x61c; // bool
		constexpr auto _aimingDownTheSightsLocationOffset = 0x620; // FVector
		constexpr auto _scopeViewArmDislocationOffset = 0x62c; // FVector
		constexpr auto _armsLagRotation = 0x638; // FRotator
		constexpr auto _armsLagPitch = 0x644; // float
		constexpr auto _armsLagYaw = 0x648; // float
		constexpr auto _stance = 0x64c; // EPrisonerStance
		constexpr auto _crouchStage = 0x650; // float
		constexpr auto _targetCrouchStage = 0x654; // float
		constexpr auto _isFreeLookEnabled = 0x658; // bool
		constexpr auto _shouldIgnoreHeadTurning = 0x659; // bool
		constexpr auto _aimOffset = 0x65c; // FRotator
		constexpr auto _leanAmount = 0x668; // float
		constexpr auto _shouldLookAtMeleeTarget = 0x66c; // bool
		constexpr auto _lookAtMeleeTargetAimOffset = 0x670; // FRotator
		constexpr auto _animationSet = 0x67c; // EPrisonerAnimationSet
		constexpr auto _isInRagdoll = 0x67d; // bool
		constexpr auto _isMovingOnGround = 0x67e; // bool
		constexpr auto _isFalling = 0x67f; // bool
		constexpr auto _isSwimming = 0x680; // bool
		constexpr auto _acceleration = 0x684; // FVector
		constexpr auto _wantsToMove = 0x690; // bool
		constexpr auto _wantsToMoveHorizontallyOnly = 0x691; // bool
		constexpr auto _wantsToMoveVerticallyOnly = 0x692; // bool
		constexpr auto _wantsToWalk = 0x693; // bool
		constexpr auto _wantsToJog = 0x694; // bool
		constexpr auto _wantsToRun = 0x695; // bool
		constexpr auto _velocity = 0x698; // FVector
		constexpr auto _speed = 0x6a8; // float
		constexpr auto _speedXY = 0x6ac; // float
		constexpr auto _maxSpeed = 0x6b0; // float
		constexpr auto _stoppingDistance = 0x6b4; // float
		constexpr auto _leftHandIKAmount = 0x728; // float
		constexpr auto _desiredCourseAngle = 0x72c; // float
		constexpr auto _desiredCoursePitchAngle = 0x730; // float
		constexpr auto _actualCourseAngle = 0x734; // float
		constexpr auto _desiredMovementPace = 0x738; // EPrisonerMovementPace
		constexpr auto _clampedDesiredMovementPace = 0x739; // EPrisonerMovementPace
		constexpr auto _movementPaceBeforeGroundStart = 0x73a; // EPrisonerMovementPace
		constexpr auto _groundStartAnimPlayRate = 0x73c; // float
		constexpr auto _legsPoseBeforeGroundStop = 0x740; // float
		constexpr auto _movementDirectionBeforeGroundStop = 0x744; // ECardinalDirection
		constexpr auto _movementPaceBeforeGroundStop = 0x745; // EPrisonerMovementPace
		constexpr auto _animationSetBeforeGroundStop = 0x746; // EPrisonerAnimationSet
		constexpr auto _shouldUseLUGroundStopAnimation = 0x747; // bool
		constexpr auto _hitReactState = 0x748; // EHitReactState
		constexpr auto _weightLoadFactor = 0x74c; // float
		constexpr auto _shouldUseJogStartForRunStart = 0x750; // bool
		constexpr auto _useLocomotionAdditiveAnimations = 0x751; // bool
		constexpr auto _disorientation = 0x754; // float
		constexpr auto _disorientationMultiplier = 0x758; // float
		constexpr auto _isLimping = 0x75c; // bool
		constexpr auto _shouldRotateBonesWithFirstPersonAimPitch = 0x75d; // bool
		constexpr auto _jumpApex = 0x764; // float
		constexpr auto _distanceToJumpApex = 0x768; // float
		constexpr auto _legsPoseBeforeJump = 0x76c; // float
		constexpr auto _movementPaceBeforeJump = 0x770; // EPrisonerMovementPace
		constexpr auto _animationSetBeforeJump = 0x771; // EPrisonerAnimationSet
		constexpr auto _shouldJumpGoToFallingLoop = 0x772; // bool
		constexpr auto _waterImmersionDepth = 0x774; // float
		constexpr auto _meshOffsetWhenInWater = 0x778; // FVector
		constexpr auto _wantsToDiveIn = 0x784; // bool
		constexpr auto _isClimbing = 0x858; // bool
		constexpr auto _isClimbingAnchoring = 0x859; // bool
		constexpr auto _climbAnchoringAnimation = 0x8e8; // UAnimSequenceBase*
		constexpr auto _climbAnchoringAnimationTime = 0x8f0; // float
		constexpr auto _isClimbingLadder = 0x8f4; // bool
		constexpr auto _ladderClimbingRootBoneOffset = 0x9b0; // FVector
		constexpr auto _ladderClimbingLoopState = 0x9bc; // float
		constexpr auto _ladderClimbingLoopStateForPeeking = 0x9c0; // float
		constexpr auto _ladderClimbingPeekState = 0x9c4; // float
		constexpr auto _isClimbingWindow = 0x9c8; // bool
		constexpr auto _isClimbingWindowAnchoring = 0x9c9; // bool
		constexpr auto _windowClimbingAnchoringAnimation = 0x9d0; // UAnimSequenceBase*
		constexpr auto _windowClimbingAnchoringAnimationTime = 0x9d8; // float
		constexpr auto _weaponType = 0x9dc; // EWeaponType
		constexpr auto _isDedicatedServer = 0x9dd; // bool
		constexpr auto _itemFirstPersonUpperBodyStandIdle = 0xd28; // UAnimSequenceBase*
		constexpr auto _itemFirstPersonUpperBodyStandWalk = 0xd30; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyStandWalkLimping = 0xd38; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyStandJog = 0xd40; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyStandJogLimping = 0xd48; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyStandRun = 0xd50; // UAnimSequenceBase*
		constexpr auto _itemFirstPersonUpperBodyCrouchIdle = 0xd58; // UAnimSequenceBase*
		constexpr auto _itemFirstPersonUpperBodyCrouchWalk = 0xd60; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyCrouchWalkLimping = 0xd68; // UBlendSpace1D*
		constexpr auto _itemFirstPersonUpperBodyProneIdle = 0xd70; // UAnimSequenceBase*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandIdle = 0xd78; // UAnimSequenceBase*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandWalk = 0xd80; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandWalkLimping = 0xd88; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandJog = 0xd90; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandJogLimping = 0xd98; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyStandRun = 0xda0; // UAnimSequenceBase*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyCrouchIdle = 0xda8; // UAnimSequenceBase*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyCrouchWalk = 0xdb0; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping = 0xdb8; // UBlendSpace1D*
		constexpr auto _weaponAimingHipFirstPersonUpperBodyProneIdle = 0xdc0; // UAnimSequenceBase*
		constexpr auto _shouldUseItemFirstPersonAimOffsets = 0xdc8; // bool
		constexpr auto _itemFirstPersonAimOffsetStanding = 0xdd0; // UBlendSpace*
		constexpr auto _itemFirstPersonAimOffsetCrouching = 0xdd8; // UBlendSpace*
		constexpr auto _itemFirstPersonAimOffsetProne = 0xde0; // UBlendSpace*
		constexpr auto _rightHandCorrectionPoseStanding = 0xde8; // UAnimSequenceBase*
		constexpr auto _rightHandCorrectionPoseCrouching = 0xdf0; // UAnimSequenceBase*
		constexpr auto _rightHandCorrectionPoseProne = 0xdf8; // UAnimSequenceBase*
		constexpr auto _rightFistCorrectionPoseStanding = 0xe00; // UAnimSequenceBase*
		constexpr auto _rightFistCorrectionPoseStandingInCombatMode = 0xe08; // UAnimSequenceBase*
		constexpr auto _rightFistCorrectionPoseCrouching = 0xe10; // UAnimSequenceBase*
		constexpr auto _rightFistCorrectionPoseProne = 0xe18; // UAnimSequenceBase*
		constexpr auto _rightHandToIdleBlendAlphaStanding = 0xe20; // float
		constexpr auto _rightHandToIdleBlendAlphaCrouching = 0xe24; // float
		constexpr auto _leftHandCorrectionPoseStanding = 0xe28; // UAnimSequenceBase*
		constexpr auto _leftHandCorrectionPoseCrouching = 0xe30; // UAnimSequenceBase*
		constexpr auto _leftHandCorrectionPoseProne = 0xe38; // UAnimSequenceBase*
		constexpr auto _leftFistCorrectionPoseStanding = 0xe40; // UAnimSequenceBase*
		constexpr auto _leftFistCorrectionPoseStandingInCombatMode = 0xe48; // UAnimSequenceBase*
		constexpr auto _leftFistCorrectionPoseCrouching = 0xe50; // UAnimSequenceBase*
		constexpr auto _leftFistCorrectionPoseProne = 0xe58; // UAnimSequenceBase*
		constexpr auto _leftHandToIdleBlendAlphaStanding = 0xe60; // float
		constexpr auto _leftHandToIdleBlendAlphaCrouching = 0xe64; // float
		constexpr auto _hasItemInHands = 0xe70; // bool
		constexpr auto _itemInHandsLeftHandLocationInRightHandSpace = 0xe74; // FVector
		constexpr auto _itemInHandsLeftHandRotationInRightHandSpace = 0xe80; // FRotator
		constexpr auto _itemInHandsObstructionDepth = 0xe8c; // float
		constexpr auto _itemInHandsObstructionDepthSmoothed = 0xe90; // float
		constexpr auto _isItemInHandsObstructed = 0xe94; // bool
		constexpr auto _isItemInHandsCompletelyObstructed = 0xe95; // bool
		constexpr auto _itemInHandsObstructionSide = 0xe98; // float
		constexpr auto _itemInHandsLeftObstructedIdleFP = 0xea0; // UAnimSequenceBase*
		constexpr auto _itemInHandsRightObstructedIdleFP = 0xea8; // UAnimSequenceBase*
		constexpr auto _itemInHandsObstructedIdleTP = 0xeb0; // UAnimSequenceBase*
		constexpr auto _itemInHandsObstructedIdleProneTP = 0xeb8; // UAnimSequenceBase*
		constexpr auto _isInCombatMode = 0xec0; // bool
		constexpr auto _shouldUseHandCorrections = 0xec1; // bool
		constexpr auto _shouldUseFistCorrections = 0xec2; // bool
		constexpr auto _overrideFingersOnlyInProne = 0xec3; // bool
		constexpr auto _ignoreAimOffsets = 0xec4; // bool
		constexpr auto _prisonerMontageBlendType = 0xec5; // EPrisonerMontageBlendType
		constexpr auto _isAimingBow = 0xec6; // bool
		constexpr auto _bowArmsShakeValue = 0xec8; // float
		constexpr auto _isScoping = 0xecc; // bool
		constexpr auto _responseIdleClassReferences = 0xf20; // TSet<UPrisonerResponseIdle*>
		constexpr auto _shouldUpperBodyBeUsedAsFullBodyInIdle = 0xfa0; // bool
		constexpr auto _isPlayingInstrument = 0xfa1; // bool
		constexpr auto _playingInstrumentIdleAnimation = 0xfa8; // UAnimSequenceBase*
		constexpr auto _playingInstrumentPlayAnimation = 0xfb0; // UAnimSequenceBase*
		constexpr auto _playingInstrumentState = 0xfb8; // EPlayingInstrumentState
		constexpr auto _isCarryingItem = 0xfb9; // bool
		constexpr auto _carryingItemIdleFPAnimation = 0xfc0; // UAnimSequenceBase*
		constexpr auto _carryingItemIdleTPAnimation = 0xfc8; // UAnimSequenceBase*
		constexpr auto _carryingItemState = 0xfd0; // ECarryingItemState
		constexpr auto _isMounted = 0xfd1; // bool
		constexpr auto _mountType = 0xfd2; // EPrisonerAnimationMountType
		constexpr auto _mountedAnimation = 0xfd8; // UAnimSequenceBase*
		constexpr auto _isVehicleDriver = 0xfe0; // bool
		constexpr auto _vehicleDriverForwardIdleAnimation = 0xfe8; // UBlendSpace*
		constexpr auto _vehicleDriverForwardSteeringAnimation = 0xff0; // UAnimSequenceBase*
		constexpr auto _vehicleDriverForwardSteeringAnimationFP = 0xff8; // UAnimSequenceBase*
		constexpr auto _vehicleDriverReverseIdleAnimation = 0x1000; // UBlendSpace*
		constexpr auto _vehicleDriverReverseSteeringAnimation = 0x1008; // UAnimSequenceBase*
		constexpr auto _vehicleDriverReverseSteeringAnimationFP = 0x1010; // UAnimSequenceBase*
		constexpr auto _vehiclePassengerIdleAnimation = 0x1018; // UBlendSpace*
		constexpr auto _vehicleSpeed = 0x1020; // float
		constexpr auto _vehicleSpeedKph = 0x1024; // float
		constexpr auto _vehicleBumpiness = 0x1028; // float
		constexpr auto _vehicleDriverSteeringAnimationTime = 0x102c; // float
		constexpr auto _vehicleDriverSteeringAnimationTimeInterpSpeed = 0x1030; // float
		constexpr auto _vehicleThrottleAmount = 0x1034; // float
		constexpr auto _vehicleBrakeAmount = 0x1038; // float
		constexpr auto _vehicleHandbrakeAmount = 0x103c; // float
		constexpr auto _vehicleSteerAmount = 0x1040; // float
		constexpr auto _isSledgeAcceleratingForward = 0x1044; // bool
		constexpr auto _isSledgeAcceleratingBackward = 0x1045; // bool
		constexpr auto _sledgeSlidingThresholdSpeed = 0x1048; // float
		constexpr auto _isSledgeSliding = 0x104c; // bool
		constexpr auto _bowArmsShakeAnimation = 0x1050; // UAnimSequenceBase*
		constexpr auto _weaponBreathFactor = 0x1058; // float
		constexpr auto _weaponAimDownTheSightsStillBlendFactor = 0x105c; // float
		constexpr auto _areHandsBound = 0x1060; // bool
		constexpr auto _handsBoundIdleFPAnimation = 0x1068; // UAnimSequenceBase*
		constexpr auto _handsBoundIdleTPAnimation = 0x1070; // UAnimSequenceBase*
		constexpr auto _isResting = 0x1078; // bool
		constexpr auto _restingAnimation = 0x1080; // UAnimSequenceBase*
		constexpr auto _restingFeetOffset = 0x1088; // float
		constexpr auto _cameraToActorRotationDeltaYaw = 0x108c; // float
		constexpr auto _cameraToActorRotationDeltaPitch = 0x1090; // float
		constexpr auto _vehicleWeaponAimingStance = 0x1094; // EVehicleWeaponAimingStance
		constexpr auto _useMountedFirstPersonWeaponAimingParameters = 0x1095; // bool
		constexpr auto _vehicleWAPLocationOffsetDefaultStanceFP = 0x1098; // FVector
		constexpr auto _vehicleWAPLocationOffsetLeaningStanceFP = 0x10a4; // FVector
		constexpr auto _useMountedThirdPersonWeaponAimingParameters = 0x10b0; // bool
		constexpr auto _vehicleWAPAimOffsetTP = 0x10b8; // UBlendSpace*
		constexpr auto _useVehicleWAPAimOffsetTP = 0x10c0; // bool
		constexpr auto _vehicleWAPAimOffsetDefaultStanceTP = 0x10c8; // UBlendSpace*
		constexpr auto _useVehicleWAPAimOffsetDefaultStanceTP = 0x10d0; // bool
		constexpr auto _vehicleWAPAimOffsetLeaningStanceTP = 0x10d8; // UBlendSpace*
		constexpr auto _useVehicleWAPAimOffsetLeaningStanceTP = 0x10e0; // bool
		constexpr auto _useVehicleWAPUpperBodyIdleTP = 0x10e1; // bool
		constexpr auto _vehicleWAPUpperBodyIdleRelaxedTP = 0x10e8; // UAnimSequenceBase*
		constexpr auto _vehicleWAPUpperBodyIdleAimingTP = 0x10f0; // UAnimSequenceBase*
		constexpr auto _useVehicleWAPLowerBodyIdleTP = 0x10f8; // bool
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedTP = 0x1100; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleAimingTP = 0x1108; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedDefaultTP = 0x1110; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleAimingDefaultTP = 0x1118; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleRelaxedLeaningTP = 0x1120; // UAnimSequenceBase*
		constexpr auto _vehicleWAPLowerBodyIdleAimingLeaningTP = 0x1128; // UAnimSequenceBase*
		constexpr auto _isPlayingWAPStanceTransitionMontage = 0x1130; // bool
		constexpr auto _isActivelyFishing = 0x1131; // bool
		constexpr auto _isBaitingFish = 0x1132; // bool
		constexpr auto _isGrappled = 0x1133; // bool
	}

	namespace n_UUI_TooltipOverviewTextParameterElement_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto TextBlock_1 = 0x290; // UTextBlock*
		constexpr auto TextBlock_47 = 0x298; // UTextBlock*
		constexpr auto Font = 0x2a0; // FSlateFontInfo
		constexpr auto TextFormat = 0x2f8; // FText
		constexpr auto ParameterText = 0x310; // FText
		constexpr auto MinimumIntegralDigits = 0x328; // int32_t
		constexpr auto MaximumIntegralDigits = 0x32c; // int32_t
		constexpr auto MinimumFractionalDigits = 0x330; // int32_t
		constexpr auto MaximumFractionalDigits = 0x334; // int32_t
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_ALocationTrigger {
		constexpr auto _markerTransform = 0x230; // FTransform
	}

	namespace n_UPieProgressBar_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto ImageAttribute_0NoSkill = 0x2f0; // UImage*
		constexpr auto ImageAttribute_1Basic = 0x2f8; // UImage*
		constexpr auto ImageAttribute_2Medium = 0x300; // UImage*
		constexpr auto ImageAttribute_3Advanced = 0x308; // UImage*
		constexpr auto ImageAttribute_4Full = 0x310; // UImage*
		constexpr auto AlarmColor = 0x318; // FLinearColor
		constexpr auto NormalColor = 0x328; // FLinearColor
		constexpr auto outerCircleColor = 0x338; // FLinearColor
		constexpr auto circularBarColor = 0x348; // FLinearColor
	}

	namespace n_ABP_Survival_Blueprints_Mission_C {
		constexpr auto DefaultSceneRoot = 0x468; // USceneComponent*
	}

	namespace n_UUI_WaypointWidget_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto Accent = 0x318; // UImage*
		constexpr auto Background = 0x320; // UImage*
		constexpr auto Bar = 0x328; // UImage*
		constexpr auto BarBG = 0x330; // UImage*
		constexpr auto BigPointer = 0x338; // UImage*
		constexpr auto Distance = 0x340; // UTextBlock*
		constexpr auto Emphasis = 0x348; // UImage*
		constexpr auto Icon = 0x350; // UImage*
		constexpr auto Label = 0x358; // UTextBlock*
		constexpr auto SmallPointer = 0x360; // UImage*
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UABP_FIshingRod_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x378; // FAnimNode_Root
		constexpr auto AnimGraphNode_Fabrik = 0x3b0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x540; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x560; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UTriangleSetComponent {
		constexpr auto Bounds = 0x470; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x48c; // bool
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UAwarenessSkill {
		constexpr auto StaminaConsumption = 0xb8; // float
		constexpr auto EnterFocusModeAudioEvent = 0xc0; // UAkAudioEvent*
		constexpr auto LeaveFocusModeAudioEvent = 0xc8; // UAkAudioEvent*
		constexpr auto _updateTime = 0xd0; // float
		constexpr auto _serverUpdateTime = 0xd4; // float
		constexpr auto _basicWatchingDetectionChance = 0xd8; // float
		constexpr auto _mediumWatchingDetectionChance = 0xdc; // float
		constexpr auto _advancedWatchingDetectionChance = 0xe0; // float
		constexpr auto _aboveAdvancedWatchingDetectionChance = 0xe4; // float
		constexpr auto _noSkillItemDetectionTime = 0xe8; // float
		constexpr auto _basicItemDetectionTime = 0xec; // float
		constexpr auto _mediumItemDetectionTime = 0xf0; // float
		constexpr auto _advancedItemDetectionTime = 0xf4; // float
		constexpr auto _aboveAdvancedItemDetectionTime = 0xf8; // float
		constexpr auto _noSkillItemDetectionRadius = 0xfc; // float
		constexpr auto _basicItemDetectionRadius = 0x100; // float
		constexpr auto _mediumItemDetectionRadius = 0x104; // float
		constexpr auto _advancedItemDetectionRadius = 0x108; // float
		constexpr auto _aboveAdvancedItemDetectionRadius = 0x10c; // float
		constexpr auto _noSkillItemDetectionChance = 0x110; // float
		constexpr auto _basicItemDetectionChance = 0x114; // float
		constexpr auto _mediumItemDetectionChance = 0x118; // float
		constexpr auto _advancedItemDetectionChance = 0x11c; // float
		constexpr auto _aboveAdvancedItemDetectionChance = 0x120; // float
		constexpr auto _noSkillItemHighlightByDayRadius = 0x124; // float
		constexpr auto _basicItemHighlightByDayRadius = 0x128; // float
		constexpr auto _mediumItemHighlightByDayRadius = 0x12c; // float
		constexpr auto _advancedItemHighlightByDayRadius = 0x130; // float
		constexpr auto _aboveAdvancedItemHighlightByDayRadius = 0x134; // float
		constexpr auto _noSkillItemHighlightByNightRadius = 0x138; // float
		constexpr auto _basicItemHighlightByNightRadius = 0x13c; // float
		constexpr auto _mediumItemHighlightByNightRadius = 0x140; // float
		constexpr auto _advancedItemHighlightByNightRadius = 0x144; // float
		constexpr auto _aboveAdvancedItemHighlightByNightRadius = 0x148; // float
		constexpr auto _noSkillWatchingDetectionRadius = 0x14c; // float
		constexpr auto _basicWatchingDetectionRadius = 0x150; // float
		constexpr auto _mediumWatchingDetectionRadius = 0x154; // float
		constexpr auto _advancedWatchingDetectionRadius = 0x158; // float
		constexpr auto _aboveAdvancedWatchingDetectionRadius = 0x15c; // float
		constexpr auto _characterDetectionAngle = 0x160; // float
		constexpr auto _characterDetectionTime = 0x164; // float
		constexpr auto _characterDetectionRange = 0x168; // float
		constexpr auto _characterDetectionPeriodicRangeIncrement = 0x16c; // float
		constexpr auto _noSkillHiddenCharacterDetectionRange = 0x170; // float
		constexpr auto _basicHiddenCharacterDetectionRange = 0x174; // float
		constexpr auto _mediumHiddenCharacterDetectionRange = 0x178; // float
		constexpr auto _advancedHiddenCharacterDetectionRange = 0x17c; // float
		constexpr auto _aboveAdvancedHiddenCharacterDetectionRange = 0x180; // float
		constexpr auto _noSkillHotSpotHiddenCharacterDetectionRange = 0x184; // float
		constexpr auto _basicHotSpotHiddenCharacterDetectionRange = 0x188; // float
		constexpr auto _mediumHotSpotHiddenCharacterDetectionRange = 0x18c; // float
		constexpr auto _advancedHotSpotHiddenCharacterDetectionRange = 0x190; // float
		constexpr auto _aboveAdvancedHotSpotHiddenCharacterDetectionRange = 0x194; // float
		constexpr auto _noSkillSoundDetectionRange = 0x198; // float
		constexpr auto _basicSoundDetectionRange = 0x19c; // float
		constexpr auto _mediumSoundDetectionRange = 0x1a0; // float
		constexpr auto _advancedSoundDetectionRange = 0x1a4; // float
		constexpr auto _aboveAdvancedSoundDetectionRange = 0x1a8; // float
		constexpr auto _notMovingFocusRangeMultiplier = 0x1ac; // float
		constexpr auto _slowMovingFocusRangeMultiplier = 0x1b0; // float
		constexpr auto _mediumMovingFocusRangeMultiplier = 0x1b4; // float
		constexpr auto _fastMovingFocusRangeMultiplier = 0x1b8; // float
		constexpr auto _noSkillFocusModeActivationTime = 0x1bc; // float
		constexpr auto _basicFocusModeActivationTime = 0x1c0; // float
		constexpr auto _mediumFocusModeActivationTime = 0x1c4; // float
		constexpr auto _advancedFocusModeActivationTime = 0x1c8; // float
		constexpr auto _aboveAdvancedFocusModeActivationTime = 0x1cc; // float
		constexpr auto _noSkillTrackDetectionRange = 0x1d0; // float
		constexpr auto _basicTrackDetectionRange = 0x1d4; // float
		constexpr auto _mediumTrackDetectionRange = 0x1d8; // float
		constexpr auto _advancedTrackDetectionRange = 0x1dc; // float
		constexpr auto _aboveAdvancedTrackDetectionRange = 0x1e0; // float
		constexpr auto _trackDetectionNightTimeMultiplier = 0x1e4; // float
		constexpr auto _noSkillTrapDetectionRange = 0x1e8; // float
		constexpr auto _basicTrapDetectionRange = 0x1ec; // float
		constexpr auto _mediumTrapDetectionRange = 0x1f0; // float
		constexpr auto _advancedTrapDetectionRange = 0x1f4; // float
		constexpr auto _aboveAdvancedTrapDetectionRange = 0x1f8; // float
		constexpr auto _noSkillFlashFadeOutDurationMultiplier = 0x1fc; // float
		constexpr auto _basicFlashFadeOutDurationMultiplier = 0x200; // float
		constexpr auto _mediumFlashFadeOutDurationMultiplier = 0x204; // float
		constexpr auto _advancedFlashFadeOutDurationMultiplier = 0x208; // float
		constexpr auto _aboveAdvancedFlashFadeOutDurationMultiplier = 0x20c; // float
		constexpr auto _noSkillContainerItemSpawnProbabilityModifier = 0x210; // float
		constexpr auto _basicContainerItemSpawnProbabilityModifier = 0x214; // float
		constexpr auto _mediumContainerItemSpawnProbabilityModifier = 0x218; // float
		constexpr auto _advancedContainerItemSpawnProbabilityModifier = 0x21c; // float
		constexpr auto _aboveAdvancedContainerItemSpawnProbabilityModifier = 0x220; // float
	}

	namespace n_AGroomActor {
		constexpr auto GroomComponent = 0x220; // UGroomComponent*
	}

	namespace n_UPrisonerThirdPersonAerialSubviewComponent {
		constexpr auto FieldOfView = 0x200; // float
		constexpr auto UseFieldOfViewForLOD = 0x204; // bool
		constexpr auto ConstrainAspectRatio = 0x205; // bool
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto MinViewYaw = 0x20c; // float
		constexpr auto MaxViewYaw = 0x210; // float
		constexpr auto MinViewPitch = 0x214; // float
		constexpr auto MaxViewPitch = 0x218; // float
		constexpr auto PostProcessBlendWeight = 0x21c; // float
		constexpr auto PostProcessSettings = 0x220; // FPostProcessSettings
		constexpr auto blendInDuration = 0x770; // float
		constexpr auto blendOutDuration = 0x774; // float
		constexpr auto BaseOrbitDistance = 0x778; // float
		constexpr auto SpeedOrbitDistanceIncreaseFactor = 0x77c; // float
	}

	namespace n_UUI_FoodTooltipPanelSingleUse_C {
		constexpr auto Image_1 = 0x2c8; // UImage*
		constexpr auto Image_2 = 0x2d0; // UImage*
		constexpr auto Image_3 = 0x2d8; // UImage*
		constexpr auto Image_5 = 0x2e0; // UImage*
		constexpr auto Image_6 = 0x2e8; // UImage*
		constexpr auto Image_7 = 0x2f0; // UImage*
		constexpr auto UI_TooltipOverviewTextElement = 0x2f8; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_1 = 0x300; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_2 = 0x308; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_3 = 0x310; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextElement_C_4 = 0x318; // UUI_TooltipOverviewTextElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement = 0x320; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_2 = 0x328; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_1 = 0x330; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_2 = 0x338; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_3 = 0x340; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_4 = 0x348; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_5 = 0x350; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_6 = 0x358; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_7 = 0x360; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_8 = 0x368; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_9 = 0x370; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_10 = 0x378; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_11 = 0x380; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_12 = 0x388; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_13 = 0x390; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_14 = 0x398; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_15 = 0x3a0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_16 = 0x3a8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_17 = 0x3b0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_18 = 0x3b8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_19 = 0x3c0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_20 = 0x3c8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_21 = 0x3d0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_22 = 0x3d8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_23 = 0x3e0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_24 = 0x3e8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_25 = 0x3f0; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_26 = 0x3f8; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_27 = 0x400; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_28 = 0x408; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_37 = 0x410; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_39 = 0x418; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_40 = 0x420; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_41 = 0x428; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_42 = 0x430; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_43 = 0x438; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_44 = 0x440; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_45 = 0x448; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_46 = 0x450; // UUI_TooltipOverviewTextParameterElement_C*
		constexpr auto UI_TooltipOverviewTextParameterElement_C_47 = 0x458; // UUI_TooltipOverviewTextParameterElement_C*
	}

	namespace n_ABP_WeaponBullet_BroadHead_CarbonArrow_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x460; // UParticleSystemComponent*
	}

	namespace n_UMainMenuWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto _quitButton = 0x288; // UUI_TrashMenuButton_C*
		constexpr auto GameVersionText = 0x290; // UTextBlock*
		constexpr auto Image_1 = 0x298; // UImage*
		constexpr auto Image_2 = 0x2a0; // UImage*
		constexpr auto Image_351 = 0x2a8; // UImage*
		constexpr auto MainCanvasPanel = 0x2b0; // UCanvasPanel*
		constexpr auto MenuVerticalBox = 0x2b8; // UVerticalBox*
		constexpr auto NameOverlay = 0x2c0; // UOverlay*
		constexpr auto TextBlock_1 = 0x2c8; // UTextBlock*
		constexpr auto _quitConfirmation = 0x2d0; // UUI_YesNoMenuConfirmation_C*
		constexpr auto _errorMessage = 0x2d8; // UUI_ErrorMessage_C*
	}

	namespace n_UBP_M1_OpenInsertClip_C {
		constexpr auto UberGraphFrame = 0x90; // FPointerToUberGraphFrame
	}

	namespace n_UAdminCommandArgumentCompletion {
		constexpr auto _canCompletionValuesBeCached = 0x28; // bool
	}

	namespace n_ADoubleRegularDoorDestructible {
		constexpr auto _openRotation0 = 0x410; // FRotator
		constexpr auto _openRotation1 = 0x41c; // FRotator
		constexpr auto _closedRotation0 = 0x428; // FRotator
		constexpr auto _closedRotation1 = 0x434; // FRotator
	}

	namespace n_UUI_inventorySideLayer3_C {
		constexpr auto Image_23 = 0x280; // UImage*
		constexpr auto UI_Border = 0x288; // UUI_Border_C*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_ATradeOutpostManager {
		constexpr auto _sprite = 0x220; // UBillboardComponent*
		constexpr auto _outpostDescription = 0x228; // UTradingOutpostDescriptionDataAsset*
		constexpr auto _startingProsperityLevel = 0x230; // ETradeOutpostProsperityLevel
		constexpr auto _assignedTradePosts = 0x238; // TArray<ATradePost*>
		constexpr auto _otherAssignedTradeOutpostBuildings = 0x248; // TArray<ATradeOutpostBuilding*>
		constexpr auto _tradePostRelevancyRange = 0x25c; // float
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x258; // char : 1
		constexpr auto AuxBus = 0x260; // UAkAuxBus*
		constexpr auto AuxBusName = 0x268; // FString
		constexpr auto SendLevel = 0x278; // float
		constexpr auto FadeRate = 0x27c; // float
		constexpr auto Priority = 0x280; // float
		constexpr auto LateReverbComponent = 0x288; // UAkLateReverbComponent*
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_ASedentaryNPC {
		constexpr auto _backgroundInteractions = 0x7c0; // TArray<USedentaryNPCBackgroundInteraction*>
		constexpr auto _activeBackgroundInteraction = 0x7d0; // USedentaryNPCBackgroundInteraction*
		constexpr auto _interactionDistance = 0x7d8; // float
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_UPrisonerBodySymptom_Weakness {
		constexpr auto _maxSeverity = 0xb8; // float
		constexpr auto _maxSeverityPerformanceScoreModifier = 0xbc; // float
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UMetabolism_ICU_TEMP_Stats {
		constexpr auto _tempMinMax = 0x278; // UTextBlock*
		constexpr auto _tempDeviation = 0x280; // UTextBlock*
	}

	namespace n_ATeamDeathmatchLocationMarker {
		constexpr auto TeamDeathmatchParameters = 0x418; // FTeamDeathmatchParameters
		constexpr auto FocusOffset = 0x42c; // FVector
		constexpr auto MinimalRadius = 0x438; // float
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_AQuiver {
		constexpr auto AlternativeSkeletalMesh = 0x920; // USkeletalMesh*
		constexpr auto ArrowsBoneName = 0x928; // FName
		constexpr auto _arrowMeshComponentsArray2 = 0x930; // TArray<UStaticMeshComponent*>
		constexpr auto _alternativeEquippedMesh = 0x940; // USkeletalMeshComponent*
		constexpr auto _containerDepth = 0x94c; // float
	}

	namespace n_UUI_QuickAccessItemSwitcher3_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x2f0; // UImage*
		constexpr auto Image_2 = 0x2f8; // UImage*
		constexpr auto IndexText = 0x300; // UTextBlock*
	}

	namespace n_AGlassBottle02_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_UOceanGenerator {
		constexpr auto CollisionBoxes = 0x28; // TArray<UOceanBoxCollisionComponent*>
		constexpr auto CollisionHullSets = 0x38; // TArray<UOceanCollisionComponent*>
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_U590A1_Reload_Event_NoChamber_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_AFlashbangItem {
		constexpr auto _flashbangEffectsClass = 0x850; // AFlashbangItemEffects*
	}

	namespace n_ULockItemTag {
		constexpr auto LockData = 0x38; // FLockData
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UBaseVoxelTool {
		constexpr auto VoxProperties = 0xf0; // UVoxelProperties*
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UConZBuoyancyComponent {
		constexpr auto TestPoints = 0xb0; // TArray<FBuoyancyTestPoint>
		constexpr auto NumTestPointGroups = 0xc0; // int32_t
		constexpr auto VelocityDamper = 0xc4; // FVector
		constexpr auto FluidLinearDamping = 0xd0; // float
		constexpr auto FluidAngularDamping = 0xd4; // float
		constexpr auto ClampMaxVelocity = 0xd8; // bool
		constexpr auto MaxUnderwaterVelocity = 0xdc; // float
		constexpr auto ShouldApplyWaterVelocity = 0xe0; // bool
		constexpr auto WaterVelocityMultiplier = 0xe4; // float
		constexpr auto bDrawDebug = 0xe8; // bool
		constexpr auto _isUnderwater = 0xe9; // bool
		constexpr auto _densityMultiplier = 0xec; // float
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UGrappleActionComponent {
		constexpr auto _grappler = 0xb0; // AConZCharacter*
		constexpr auto _prisonerVictim = 0xb8; // APrisoner*
		constexpr auto _grappleActionParameters = 0xc0; // UGrappleActionParameters*
	}

	namespace n_AFlashbangItemEffects {
		constexpr auto _explosionParticles = 0x220; // UParticleSystem*
		constexpr auto _explosionCameraShakeClass = 0x228; // UMatineeCameraShake*
		constexpr auto _explosionAudioEvent = 0x230; // UAkAudioEvent*
		constexpr auto _startStunnedSoundEffectsAudioEvent = 0x238; // UAkAudioEvent*
		constexpr auto _stopStunnedSoundEffectsAudioEvent = 0x240; // UAkAudioEvent*
		constexpr auto _minFlashbangDurationToStartStunnedSoundEffects = 0x248; // float
		constexpr auto _fullFlashDuration = 0x24c; // float
		constexpr auto _flashFadeOutDuration = 0x250; // float
		constexpr auto _flashRadius = 0x254; // float
		constexpr auto _flashLineTraceDistance = 0x258; // float
	}

	namespace n_UBreathingBarLungsWidget {
		constexpr auto _lungs = 0x268; // UImage*
		constexpr auto _lungsCritical = 0x270; // UImage*
	}

	namespace n_UProceduralShapeToolProperties {
		constexpr auto bInstanceIfPossible = 0x60; // bool
		constexpr auto PolygroupMode = 0x61; // EMakeMeshPolygroupMode
		constexpr auto PlaceMode = 0x62; // EMakeMeshPlacementType
		constexpr auto bSnapToGrid = 0x63; // bool
		constexpr auto PivotLocation = 0x64; // EMakeMeshPivotLocation
		constexpr auto Rotation = 0x68; // float
		constexpr auto bAlignShapeToPlacementSurface = 0x6c; // bool
	}

	namespace n_ANotificationsManager {
		constexpr auto _queuedNotifications = 0x220; // TMap<FDbIntegerId, UNotificationDescription*>
		constexpr auto _notificationTimeout = 0x2c0; // int64_t
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UPrisonerDebugUI_SkillEntryWidget {
		constexpr auto _nameTextBlock = 0x268; // UTextBlock*
	}

	namespace n_UBasicReplicationGraph {
		constexpr auto GridNode = 0x498; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4a0; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x4a8; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x4b8; // TArray<AActor*>
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UBakedTexture2DImageProperties {
		constexpr auto SourceTexture = 0x60; // UTexture2D*
		constexpr auto UVLayer = 0x68; // int32_t
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_ANightVisionGogglesItem {
		constexpr auto EquippedStaticMeshWhenActivated = 0x920; // UStaticMesh*
		constexpr auto ActivatedSound = 0x928; // UAkAudioEvent*
		constexpr auto DeactivatedSound = 0x930; // UAkAudioEvent*
		constexpr auto ActivatedChanged = 0x938; // FMulticastInlineDelegate
		constexpr auto _resourceContainerComponent = 0x950; // UBasicGameResourceContainerComponent*
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_URemoveOccludedTrianglesToolProperties {
		constexpr auto OcclusionTestMethod = 0x60; // EOcclusionCalculationUIMode
		constexpr auto TriangleSampling = 0x61; // EOcclusionTriangleSamplingUIMode
		constexpr auto WindingIsoValue = 0x68; // double
		constexpr auto AddRandomRays = 0x70; // int32_t
		constexpr auto AddTriangleSamples = 0x74; // int32_t
		constexpr auto bOnlySelfOcclude = 0x78; // bool
	}

	namespace n_UPrisonerBodyConditionOrSymptom {
		constexpr auto _uiDataClass = 0x58; // UPrisonerBodyConditionOrSymptomUIData*
		constexpr auto _useSeverityToDetermineLifeThreateningStatus = 0x60; // bool
		constexpr auto _severityRangeToBeLifeThreatening = 0x64; // FFloatRange
		constexpr auto _severityRatioChangeToReplicate = 0x74; // float
		constexpr auto _clientSeverityRatioInterpSpeed = 0x78; // float
		constexpr auto _sideEffects = 0x80; // TArray<UPrisonerBodyConditionOrSymptomSideEffect*>
		constexpr auto _repSeverity = 0x98; // float
		constexpr auto _repMaxSeverity = 0x9c; // float
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UZombieSoundComponent2 {
		constexpr auto RelaxedStanceEnteredAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto AlertedStanceEnteredAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto CombatStanceEnteredAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto FootstepAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto StopAllAudioEvent = 0xf8; // UAkAudioEvent*
		constexpr auto DeathAudioEvent = 0x100; // UAkAudioEvent*
		constexpr auto StartSearchCorpseAudioEvent = 0x108; // UAkAudioEvent*
		constexpr auto StopSearchCorpseAudioEvent = 0x110; // UAkAudioEvent*
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_AUseItemObjective {
		constexpr auto _targetMeshes = 0x320; // TMap<TSoftObjectPtr<AActor>, FUsableObjectiveItem>
	}

	namespace n_UVehicleHudWidget {
		constexpr auto _mountSlotIndicators = 0x278; // UVehicleMountSlotIndicators*
	}

	namespace n_UServerBrowser {
		constexpr auto _currentIndex = 0x260; // int32_t
		constexpr auto _widgetCount = 0x264; // int32_t
		constexpr auto _serverInfos = 0x268; // TArray<FServerInfo>
		constexpr auto _unfilteredServerInfos = 0x278; // TArray<FServerInfo>
		constexpr auto _serverInfosToPing = 0x288; // TArray<FServerInfo>
		constexpr auto _serverInfosWithPing = 0x298; // TArray<FServerInfo>
		constexpr auto _serverInfosLastPlayed = 0x2a8; // TArray<FServerInfo>
		constexpr auto _serverInfosFavorites = 0x2b8; // TArray<FServerInfo>
		constexpr auto _requestingServerList = 0x2c8; // bool
		constexpr auto _desiredMaxPing = 0x2cc; // float
		constexpr auto _desiredHostName = 0x2d0; // FString
		constexpr auto _desiredMinPlayers = 0x2e0; // int32_t
		constexpr auto _desiredMaxPlayers = 0x2e4; // int32_t
		constexpr auto _showFullServers = 0x2e8; // bool
		constexpr auto _showOnlyPasswordProtectedServers = 0x2e9; // bool
		constexpr auto _currentlyOpenTab = 0x2ea; // EServerBrowserTab
		constexpr auto _serverList = 0x2f0; // UVerticalBox*
		constexpr auto _connectButton = 0x2f8; // UTrashMenuButton*
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UWeaponAmmoDisplayWidget {
		constexpr auto _ammoCountText = 0x278; // UTextBlock*
		constexpr auto _ammoIcon = 0x280; // UImage*
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_AInteractionFilterVolume {
		constexpr auto InteractionsToDisable = 0x258; // TArray<EInteractionType>
	}

	namespace n_UVehicleCameraStabilizerComponent {
		constexpr auto _componentWorldOffset = 0x1fc; // FVector
		constexpr auto _desiredDistance = 0x208; // float
		constexpr auto _speedFallbackIntensity = 0x20c; // float
		constexpr auto _lateralMovementResponseIntensity = 0x210; // float
		constexpr auto _lockedHorizontalDampeningFactor = 0x214; // float
		constexpr auto _lockedHorizontalOscillationFactor = 0x218; // float
		constexpr auto _lockedVerticalDampeningFactor = 0x21c; // float
		constexpr auto _lockedVerticalOscillationFactor = 0x220; // float
		constexpr auto _maxFreeLookPitch = 0x224; // float
		constexpr auto _freeHorizontalDampeningFactor = 0x228; // float
		constexpr auto _freeHorizontalOscillationFactor = 0x22c; // float
		constexpr auto _freeVerticalDampeningFactor = 0x230; // float
		constexpr auto _freeVerticalOscillationFactor = 0x234; // float
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_UWaterSplineMetadata {
		constexpr auto Depth = 0x28; // FInterpCurveFloat
		constexpr auto WaterVelocityScalar = 0x40; // FInterpCurveFloat
		constexpr auto RiverWidth = 0x58; // FInterpCurveFloat
		constexpr auto AudioIntensity = 0x70; // FInterpCurveFloat
		constexpr auto WaterVelocity = 0x88; // FInterpCurveVector
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_AWaterBodyExclusionVolume {
		constexpr auto bIgnoreAllOverlappingWaterBodies = 0x268; // bool
		constexpr auto WaterBodiesToIgnore = 0x270; // TArray<AWaterBody*>
	}

	namespace n_UBuriableChestItemComponentState {
		constexpr auto StoredAutoDestructTime = 0x50; // float
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_ABird2 {
		constexpr auto IsStaringPerched = 0x938; // bool
		constexpr auto MinFlightAltitude = 0x93c; // float
		constexpr auto MaxFlightAltitude = 0x940; // float
		constexpr auto _isLanding = 0x944; // bool
		constexpr auto _isTakingOff = 0x945; // bool
		constexpr auto _isPerched = 0x946; // bool
		constexpr auto _isFlying = 0x947; // bool
		constexpr auto _states = 0x948; // TArray<bool>
		constexpr auto _repStates = 0x958; // char
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_Disorientation {
		constexpr auto _symptomClass = 0x30; // UPrisonerBodySymptom_Disorientation*
		constexpr auto _symptomCause = 0x38; // UPrisonerBodySymptomCause_Disorientation*
		constexpr auto _intensityVsSeverity = 0x40; // FRuntimeFloatCurve
	}

	namespace n_URadioComponent {
		constexpr auto _volume = 0x3d8; // float
		constexpr auto _currentStationIndex = 0x3dc; // int32_t
		constexpr auto _isHiFi = 0x3e4; // bool
		constexpr auto _isReachableFromSkyWhenMounted = 0x3e5; // bool
		constexpr auto _attenuationScale = 0x3e8; // float
		constexpr auto _turnedOn = 0x3ec; // bool
	}

	namespace n_AVehicle2W {
		constexpr auto _mountSlots = 0x2c0; // TArray<UVehicle2WMountSlot*>
		constexpr auto _maxDriveOrBoardAngle = 0x338; // float
		constexpr auto _evictMounteesAngle = 0x33c; // FRotator
		constexpr auto _driverActionDifficultyVsSpeed = 0x348; // FRuntimeFloatCurve
		constexpr auto _driverActionDifficultyVsGroundSlopeFactor = 0x3d0; // FRuntimeFloatCurve
		constexpr auto _parametersPerMovementPace = 0x458; // FBoatParametersPerMovementPace [0x4]
		constexpr auto _physicsDominanceGroup = 0x4a8; // EConZPxDominanceGroup
		constexpr auto _maxSpeedKmh = 0x4ac; // float
		constexpr auto _shouldApplyStabilization = 0x4d4; // bool
		constexpr auto _centerOfMassOffset = 0x4d8; // FVector
		constexpr auto _angVelXDamping = 0x4e4; // float
		constexpr auto _angVelYDamping = 0x4e8; // float
		constexpr auto _angVelZDamping = 0x4ec; // float
		constexpr auto _physicsConstraintStabilizationTimerHandle = 0x4f8; // FTimerHandle
		constexpr auto _pushImpulseMagnitude = 0x504; // float
		constexpr auto _pushIntensityCurve = 0x508; // UCurveFloat*
		constexpr auto _pushDirectionRatioBetweenForwardAndUp = 0x510; // float
		constexpr auto _maxDistanceToAllowThePush = 0x514; // float
		constexpr auto _maxDistanceToAllowThePushStart = 0x518; // float
		constexpr auto _pushStartAccelerationChange = 0x51c; // float
		constexpr auto _pushStartSpeedThresholdKph = 0x520; // float
		constexpr auto _maxVehicleVelocity = 0x524; // float
		constexpr auto _maxSteerAngle = 0x538; // float
		constexpr auto _steerLeanAngle = 0x53c; // float
		constexpr auto _steerLeanMultiplierVsSpeedKmh = 0x540; // FRuntimeFloatCurve
		constexpr auto _maxSteerAngleVsSpeedKmh = 0x5c8; // FRuntimeFloatCurve
		constexpr auto _maxHealth = 0x654; // float
		constexpr auto _engineBlockMaxHealth = 0x65c; // float
		constexpr auto _autoHealthDrainThreshold = 0x660; // float
		constexpr auto _autoHealthDrain = 0x664; // float
		constexpr auto _repairableParams = 0x668; // FRepairableParams
		constexpr auto _damagedEffects = 0x6a0; // TArray<FVehicleDamagedEffectsParameters>
		constexpr auto _damageMaterialParameterName = 0x6c0; // FName
		constexpr auto _hitZones = 0x6c8; // UVehicleHitZoneManager*
		constexpr auto _vehiclePartsStateFlags = 0x6d0; // uint32_t
		constexpr auto _activeHitTimeToLive = 0x6d8; // float
		constexpr auto _impactEffects = 0x6e0; // FVehicleImpactEffects [0x5]
		constexpr auto ImpactDamageVsNormalImpulse = 0x7f8; // UCurveFloat*
		constexpr auto _spawnParameters = 0x810; // FVehicleSpawnParameters
		constexpr auto _throttleRiseRate = 0x844; // float
		constexpr auto _throttleFallRate = 0x848; // float
		constexpr auto _brakeRiseRate = 0x854; // float
		constexpr auto _brakeFallRate = 0x858; // float
		constexpr auto _handbrakeRiseRate = 0x864; // float
		constexpr auto _handbrakeFallRate = 0x868; // float
		constexpr auto _steerRiseRate = 0x874; // float
		constexpr auto _steerFallRate = 0x878; // float
		constexpr auto _wheelieRiseRate = 0x884; // float
		constexpr auto _wheelieFallRate = 0x888; // float
		constexpr auto _healthBarCaption = 0x890; // FText
		constexpr auto _mountSlotIndicatorsWidget = 0x8a8; // UUserWidget*
		constexpr auto _itemContainerClass = 0x8b0; // AVehicleItemContainer*
		constexpr auto _shouldDropItemsWhenDestroyed = 0x8b8; // bool
		constexpr auto _itemContainer = 0x8c0; // AVehicleItemContainer*
		constexpr auto _radioComponent = 0x8f8; // URadioComponent*
		constexpr auto _cameraStabilizer = 0x900; // UVehicleCameraStabilizerComponent*
		constexpr auto _hasEngine = 0x908; // bool
		constexpr auto _engineIdleRpm = 0x90c; // float
		constexpr auto _engineMaxRpm = 0x910; // float
		constexpr auto _engineState = 0x920; // EVehicleEngineState
		constexpr auto _engineStartViaIgnitionBaseDurationOverride = 0x934; // float
		constexpr auto _engineStartViaMotionBaseDurationOverride = 0x938; // float
		constexpr auto _engineTryStartDelayDuration = 0x93c; // float
		constexpr auto _engineStallingForceMagnitude = 0x944; // float
		constexpr auto _canEngineBeStalledByAcceleration = 0x9b0; // bool
		constexpr auto _engineStallingByAccelerationSpeedThreshold = 0x9b4; // float
		constexpr auto _engineStallingByAccelerationOccurrenceInterval = 0x9b8; // float
		constexpr auto _engineStallingByAccelerationAudioEvent = 0x9c0; // UAkAudioEvent*
		constexpr auto _engineStallingByAccelerationAudioEventTriggerTimeRatios = 0x9c8; // TArray<float>
		constexpr auto _canEngineBeStalledByUpShift = 0x9d8; // bool
		constexpr auto _engineStallingByUpShiftOccurrenceInterval = 0x9dc; // float
		constexpr auto _engineStallingByUpShiftAudioEvent = 0x9e8; // UAkAudioEvent*
		constexpr auto _engineStallingByUpShiftAudioEventTriggerTimeRatios = 0x9f0; // TArray<float>
		constexpr auto _engineStallingWhenStartingViaMotionAudioEvent = 0xa00; // UAkAudioEvent*
		constexpr auto _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios = 0xa08; // TArray<float>
		constexpr auto _hasFuel = 0xa18; // bool
		constexpr auto _fuelResourceType = 0xa20; // UGameResourceType*
		constexpr auto _maxFuelAmount = 0xa28; // float
		constexpr auto _fuelDrainWhenStartingEngine = 0xa2c; // float
		constexpr auto _engineFuelDrainPerRpm = 0xa30; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmScale = 0xab8; // float
		constexpr auto _engineFuelDrainPerRpmUnderLoad = 0xac0; // FRuntimeFloatCurve
		constexpr auto _engineFuelDrainPerRpmUnderLoadScale = 0xb48; // float
		constexpr auto _fuelDrainWhenInactive = 0xb4c; // float
		constexpr auto _fuelFillingBaseDuration = 0xb50; // float
		constexpr auto _fillingDurationPerFuelAmountFilled = 0xb54; // float
		constexpr auto _experienceAwardedPerFuelAmountFilled = 0xb58; // float
		constexpr auto _prisonerFillingFuelMontage = 0xb60; // UAnimMontage*
		constexpr auto _startFillingFuelAudioEvent = 0xb68; // UAkAudioEvent*
		constexpr auto _stopFillingFuelAudioEvent = 0xb70; // UAkAudioEvent*
		constexpr auto _startFillingFuelWithReplenishableResourceAudioEvent = 0xb78; // UAkAudioEvent*
		constexpr auto _stopFillingFuelWithReplenishableResourceAudioEvent = 0xb80; // UAkAudioEvent*
		constexpr auto _fillFuelWithReplenishableResourceOverlapBoxExtent = 0xb88; // FVector
		constexpr auto _fuelDrainingBaseDuration = 0xb94; // float
		constexpr auto _drainingDurationPerFuelAmountDrained = 0xb98; // float
		constexpr auto _experienceAwardedPerFuelAmountDrained = 0xb9c; // float
		constexpr auto _prisonerDrainingFuelMontage = 0xba0; // UAnimMontage*
		constexpr auto _startDrainingFuelAudioEvent = 0xba8; // UAkAudioEvent*
		constexpr auto _stopDrainingFuelAudioEvent = 0xbb0; // UAkAudioEvent*
		constexpr auto _engineStallingParametersWhenOutOfFuel = 0xbb8; // FVehicleEngineStallingParameters
		constexpr auto _fuelUpdateInterval = 0xc14; // float
		constexpr auto _hasBattery = 0xc20; // bool
		constexpr auto _batteryResourceType = 0xc28; // UGameResourceType*
		constexpr auto _maxBatteryAmount = 0xc30; // float
		constexpr auto _batteryDrainWhenStartingEngine = 0xc34; // float
		constexpr auto _batteryDrainWhenHornIsActive = 0xc38; // float
		constexpr auto _batteryDrainWhenLightsAreActive = 0xc3c; // float
		constexpr auto _batteryDrainWhenRadioIsTurnedOn = 0xc40; // float
		constexpr auto _batteryDrainWhenInactive = 0xc44; // float
		constexpr auto _batteryDynamoChargePerKph = 0xc48; // FRuntimeFloatCurve
		constexpr auto _batteryDynamoChargePerKphScale = 0xcd0; // float
		constexpr auto _batteryAlternatorChargePerRpm = 0xcd8; // FRuntimeFloatCurve
		constexpr auto _batteryAlternatorChargePerRpmScale = 0xd60; // float
		constexpr auto _batteryPowerReductionThreshold = 0xd64; // float
		constexpr auto _startEngineDurationPenaltyWhenBatteryReducedInPower = 0xd68; // float
		constexpr auto _batteryChargingBaseDuration = 0xd6c; // float
		constexpr auto _chargingDurationPerBatteryAmountCharged = 0xd70; // float
		constexpr auto _experienceAwardedPerBatteryAmountCharged = 0xd74; // float
		constexpr auto _prisonerChargingBatteryMontage = 0xd78; // UAnimMontage*
		constexpr auto _startChargingBatteryAudioEvent = 0xd80; // UAkAudioEvent*
		constexpr auto _stopChargingBatteryAudioEvent = 0xd88; // UAkAudioEvent*
		constexpr auto _batteryUpdateInterval = 0xd94; // float
		constexpr auto _canSkillAffectMaxSpeed = 0xdac; // bool
		constexpr auto _canSkillAffectSteerRate = 0xdad; // bool
		constexpr auto _canSkillAffectThrottleAmount = 0xdae; // bool
		constexpr auto _canSkillAffectBrakeAmount = 0xdaf; // bool
		constexpr auto _engineStartingAudioEvent = 0xdb0; // UAkAudioEvent*
		constexpr auto _engineStartedAudioEvent = 0xdb8; // UAkAudioEvent*
		constexpr auto _engineTurnedOffAudioEvent = 0xdc0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartAudioEvent = 0xdc8; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoFuelAudioEvent = 0xdd0; // UAkAudioEvent*
		constexpr auto _engineFailedToStartNoBatteryAudioEvent = 0xdd8; // UAkAudioEvent*
		constexpr auto _engineStalledAudioEvent = 0xde0; // UAkAudioEvent*
		constexpr auto _noFuelToStartEngineAudioEvent = 0xde8; // UAkAudioEvent*
		constexpr auto _noBatteryToStartEngineAudioEvent = 0xdf0; // UAkAudioEvent*
		constexpr auto _hornStartAudioEvent = 0xdf8; // UAkAudioEvent*
		constexpr auto _hornStopAudioEvent = 0xe00; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateHornAudioEvent = 0xe08; // UAkAudioEvent*
		constexpr auto _lightsActivatedAudioEvent = 0xe10; // UAkAudioEvent*
		constexpr auto _lightsDeactivatedAudioEvent = 0xe18; // UAkAudioEvent*
		constexpr auto _noBatteryToActivateLightsAudioEvent = 0xe20; // UAkAudioEvent*
		constexpr auto _noBatteryToTurnOnRadioAudioEvent = 0xe28; // UAkAudioEvent*
		constexpr auto _gearUpAudioEvent = 0xe30; // UAkAudioEvent*
		constexpr auto _gearDownAudioEvent = 0xe38; // UAkAudioEvent*
		constexpr auto _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero = 0xe40; // float
		constexpr auto _rpmScaleForSoundWhenSpeedIsLessThanZero = 0xe44; // float
		constexpr auto _soundCullDistance = 0xe48; // float
		constexpr auto _tireToSurfaceAudioData = 0xe50; // UTireToSurfaceAudioData*
		constexpr auto _vehicleRPMRTPCInterpolationTime = 0xe58; // float
		constexpr auto _vehicleLoadRTPCInterpolationTime = 0xe5c; // float
		constexpr auto _vehicleSpeedRTPCInterpolationTime = 0xe60; // float
		constexpr auto _numAudioObjectsForTires = 0xe64; // int32_t
		constexpr auto _repairableTireParams = 0xe68; // FRepairableParams
		constexpr auto _tireEffectUpdateRange = 0xea0; // float
		constexpr auto _tireEffectProperties = 0xec0; // TArray<FVehicleTireEffectProperties>
		constexpr auto _exhaustEffects = 0xee8; // FVehicleExhaustEffects
		constexpr auto _hornActive = 0xf30; // bool
		constexpr auto _lightsActive = 0xf31; // bool
		constexpr auto _hasLights = 0xf33; // bool
		constexpr auto _headlightsMaterialParameter = 0xf34; // FVehicleMaterialParameterDescription
		constexpr auto _reverseLightsMaterialParameter = 0xf44; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsMaterialParameter = 0xf54; // FVehicleMaterialParameterDescription
		constexpr auto _brakeLightsAlwaysOnIfLightsAreActivated = 0xf64; // float
		constexpr auto _corpseClass = 0xf80; // AVehicleCorpse*
		constexpr auto _sendStateInterval = 0xf8c; // float
		constexpr auto _rigidBodyStatePositionErrorTolerance = 0xf90; // float
		constexpr auto _rigidBodyStateRotationErrorTolerance = 0xf94; // float
		constexpr auto _distanceErrorToHardSnapToRemoteLocation = 0xf98; // float
		constexpr auto _makeNoiseInterval = 0xf9c; // float
		constexpr auto _maxNoiseLoudnessFromEngine = 0xfa0; // float
		constexpr auto _maxNoiseLoudnessFromSpeed = 0xfa4; // float
		constexpr auto _speedThresholdInKphToAffectNavigation = 0xfac; // float
		constexpr auto _allowedWaterImmersionDepth = 0xfb4; // float
		constexpr auto _disallowedWaterImmersionDepth = 0xfb8; // float
		constexpr auto _waterImmersionDepthToForceEvictMountees = 0xfbc; // float
		constexpr auto _timeToEvictMounteesWhenImmersedIntoWater = 0xfc0; // float
		constexpr auto _timeToForceEvictMounteesWhenImmersedIntoWater = 0xfc4; // float
		constexpr auto _timeToAutoDestructWhenImmersedIntoWater = 0xfc8; // float
		constexpr auto _explodesOnLowHealth = 0xfcc; // bool
		constexpr auto _explosionDamage = 0xfd0; // float
		constexpr auto _explosionForce = 0xfd4; // float
		constexpr auto _repHealthFuelBatteryAmount = 0x1050; // uint32_t
		constexpr auto _repPackedSimulationState = 0x1058; // uint64_t
		constexpr auto _aiTeam = 0x1070; // EAITeam
		constexpr auto _shouldBeUpright = 0x1078; // bool
		constexpr auto _canEverBeTraded = 0x1359; // bool
		constexpr auto _tradeableParams = 0x1360; // FTradeableTagParams
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UInventorySizeData2D {
		constexpr auto SizeX = 0x28; // int32_t
		constexpr auto SizeY = 0x2c; // int32_t
		constexpr auto Bitmask = 0x30; // TArray<bool>
	}

	namespace n_UReplenishableResourceManager {
		constexpr auto _maxNumReplenishableResourceReplenishmentsPerTick = 0x228; // int32_t
		constexpr auto _playerProximityToReplenish = 0x22c; // float
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UCustomZoneSettingsRegion {
		constexpr auto _border = 0x2a0; // UBorder*
		constexpr auto _regionName = 0x2a8; // UTextBlock*
		constexpr auto _regionData = 0x2b0; // UTextBlock*
		constexpr auto _buttonIncreasePriority = 0x2b8; // UButton*
		constexpr auto _buttonDecreasePriority = 0x2c0; // UButton*
		constexpr auto _buttonRemove = 0x2c8; // UButton*
		constexpr auto _unhighlightedColor = 0x2d0; // FLinearColor
		constexpr auto _highlightedColor = 0x2e0; // FLinearColor
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UUI_Metabolism_BodyEffect_Big_ProgressBar_C {
		constexpr auto PaddedBackground = 0x308; // UImage*
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x4b8; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4bc; // FDelegate
		constexpr auto WidgetStyle = 0x4d0; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xa50; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xa51; // bool
		constexpr auto ThePropertyToControl = 0xa58; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xa68; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xaa8; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xab8; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xac8; // FMulticastInlineDelegate
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UABP_M82_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x3e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x428; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x4b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x5e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x680; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x880; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x9d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0xa58; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum = 0xaf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xe28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UMetabolism_ICU_Expandable_Stats {
		constexpr auto DisplayGraph = 0x260; // bool
		constexpr auto _graph2D = 0x268; // UMetabolism_ICU_GraphWidget*
		constexpr auto _graph2D_Background = 0x270; // UImage*
	}

	namespace n_UWaterSplineComponent {
		constexpr auto WaterSplineDefaults = 0x540; // FWaterSplineCurveDefaults
		constexpr auto PreviousWaterSplineDefaults = 0x550; // FWaterSplineCurveDefaults
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_ABP_Survival_Storage_CreatePlanks_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_UExistingMeshMaterialProperties {
		constexpr auto MaterialMode = 0x60; // ESetMeshMaterialMode
		constexpr auto CheckerDensity = 0x64; // float
		constexpr auto OverrideMaterial = 0x68; // UMaterialInterface*
		constexpr auto CheckerMaterial = 0x70; // UMaterialInstanceDynamic*
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_APlayerDrone {
		constexpr auto _movementInertiaPlayer = 0x8a0; // float
		constexpr auto _firstPersonCameraComponent = 0x8a8; // UCameraComponent*
		constexpr auto _thirdPersonCameraComponent = 0x8b0; // UCameraComponent*
		constexpr auto _springArmComponent = 0x8b8; // USpringArmComponent*
		constexpr auto _nightVisionMaterial = 0x8c0; // UMaterialInterface*
		constexpr auto _interactionDistance = 0x8c8; // float
		constexpr auto _itemPlacingMaterialAllowed = 0x8d0; // UMaterialInstance*
		constexpr auto _itemPlacingMaterialDisallowed = 0x8d8; // UMaterialInstance*
		constexpr auto _colorTintWhenInvisible = 0x8e0; // FLinearColor
		constexpr auto _colorTintWhenHidden = 0x8f0; // FLinearColor
		constexpr auto _progressWidget = 0xa48; // UActionProgressWidget*
		constexpr auto _itemDropPlaceholder = 0xa54; // TWeakObjectPtr<AItemDropPlaceholder>
		constexpr auto _currentlyDroppingItem = 0xa60; // TWeakObjectPtr<UObject>
		constexpr auto _doorUpgradeWidget = 0xa88; // UDoorUpgradeWidget*
		constexpr auto _droneVisibility = 0xa90; // EDroneVisibility
	}

	namespace n_URemoveMagazineInsertMagazineInsertCartridge {
		constexpr auto MontageEndSectionName = 0x90; // FName
	}

	namespace n_UAirplaneMountSlot {
		constexpr auto _socketName = 0xb8; // FName
		constexpr auto _mountAudioEvent = 0xc0; // UAkAudioEvent*
		constexpr auto _mountPriority = 0xc8; // int32_t
		constexpr auto _entryPoints = 0xd0; // TArray<FMountSlotEntryPoint>
		constexpr auto _unmountAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto _isReachableFromSky = 0xe8; // bool
		constexpr auto _mountingMotionIntensity = 0xe9; // EMotionIntensity
		constexpr auto _unmountingMotionIntensity = 0xea; // EMotionIntensity
		constexpr auto _mounteeCenterOfMassOffset = 0xec; // FVector
		constexpr auto _minEffectiveMounteeMass = 0xf8; // float
		constexpr auto _maxEffectiveMounteeMass = 0xfc; // float
		constexpr auto _mountee = 0x100; // UObject*
		constexpr auto _reservee = 0x108; // UObject*
		constexpr auto _canMounteeBeAttackedByMelee = 0x110; // bool
		constexpr auto _interactionZoneMaterials = 0x118; // TArray<UPhysicalMaterial*>
		constexpr auto _mountSpeedThreshold = 0x128; // float
		constexpr auto _unmountSpeedThreshold = 0x12c; // float
		constexpr auto _unmountInputVelocityThreshold = 0x130; // float
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UConZVehicleTire {
		constexpr auto ParticleTrail = 0xe0; // FConZVehicleTireParticleData
		constexpr auto ParticleWave = 0xf4; // FConZVehicleTireParticleData
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UFuelItemTag {
		constexpr auto FuelAmount = 0x30; // float
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x448; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x450; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x458; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x520; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x520; // char : 1
		constexpr auto bAutoDestroy = 0x54c; // char : 1
		constexpr auto bRenderingEnabled = 0x54c; // char : 1
		constexpr auto bAutoManageAttachment = 0x54c; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x54c; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x550; // float
		constexpr auto EmitterMaterials = 0x558; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x570; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x580; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x588; // FName
		constexpr auto AutoAttachLocationRule = 0x590; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x591; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x592; // EAttachmentRule
	}

	namespace n_AMissionManager {
		constexpr auto _mainStoryMissions = 0x240; // TMap<AMission*, FMissionData>
		constexpr auto _sideStoryMissions = 0x290; // TMap<AMission*, FMissionData>
		constexpr auto _tutorialMissions = 0x2e0; // TMap<AMission*, FMissionData>
		constexpr auto _tutorialEnabled = 0x34b; // bool
		constexpr auto _tutorialDelay = 0x34c; // float
		constexpr auto _activeMainStoryMission = 0x358; // AMission*
		constexpr auto _activeSideStoryMission = 0x360; // AMission*
		constexpr auto _activeTutorialMission = 0x368; // AMission*
		constexpr auto _availableMission = 0x370; // AMission*
		constexpr auto _missionManagerState = 0x378; // EMissionManagerState
	}

	namespace n_AStartLocation {
		constexpr auto TypeFlags = 0x250; // char
		constexpr auto IsDisabled = 0x251; // bool
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x1f8; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x200; // UAkRoomComponent*
		constexpr auto Priority = 0x208; // float
		constexpr auto WallOcclusion = 0x20c; // float
	}

	namespace n_AMissionItemSpawner {
		constexpr auto _missionItemsInfo = 0x220; // TArray<FMissionItemInfo>
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UTradeablePricesRequest {
		constexpr auto _tradeableClasses = 0x30; // TArray<UObject*>
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UBasicNotificationDescription {
		constexpr auto Message = 0x40; // FString
		constexpr auto Duration = 0x50; // float
		constexpr auto ping = 0x54; // bool
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AVehicleCraftedItem {
		constexpr auto _vehicleClass = 0x7c0; // AActor*
	}

	namespace n_AWeaponCrossbow {
		constexpr auto FireState = 0x2dd0; // UWeaponStateFiring*
		constexpr auto FireAndInsertArrowState = 0x2dd8; // UWeaponState*
		constexpr auto _muzzleVelocity = 0x2de0; // float
		constexpr auto _crossbowFireAnimation = 0x2de8; // FCharacterAndItemAnimation
		constexpr auto _crossbowFireAudioEvent = 0x2df8; // UAkAudioEvent*
		constexpr auto _crossbowDryFireAudioEvent = 0x2e00; // UAkAudioEvent*
		constexpr auto _crossbowActiveState = 0x2e08; // UWeaponState*
		constexpr auto _isCocked = 0x2e10; // bool
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UPrisonerBodyConditionOrSymptomSideEffect_Weakness {
		constexpr auto _symptomClass = 0x30; // UPrisonerBodySymptom_Weakness*
		constexpr auto _symptomCause = 0x38; // UPrisonerBodySymptomCause_Weakness*
		constexpr auto _performanceScoreModifierVsSeverity = 0x40; // FRuntimeFloatCurve
		constexpr auto _strengthModifierPerPerformanceScoreModifier = 0xc8; // float
		constexpr auto _constitutionModifierPerPerformanceScoreModifier = 0xcc; // float
		constexpr auto _dexterityModifierPerPerformanceScoreModifier = 0xd0; // float
	}

	namespace n_UMessage_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Text = 0x280; // UTextBlock*
		constexpr auto _shouldFade = 0x288; // bool
		constexpr auto _fadeLength = 0x28c; // float
	}

	namespace n_UUI_CTFMiniStatsWidget_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Border_87 = 0x320; // UBorder*
		constexpr auto Captures = 0x328; // UTextBlock*
		constexpr auto Deaths = 0x330; // UTextBlock*
		constexpr auto Kills = 0x338; // UTextBlock*
		constexpr auto Number = 0x340; // UTextBlock*
		constexpr auto PlayerName = 0x348; // UTextBlock*
		constexpr auto Score = 0x350; // UTextBlock*
		constexpr auto StatRow = 0x358; // UHorizontalBox*
		constexpr auto TeamColor = 0x360; // FLinearColor
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UClearBadRound {
		constexpr auto MontageEndSectionName = 0xb8; // FName
	}

	namespace n_AItemContainerManager {
		constexpr auto _itemContainers = 0x268; // TMap<AItemContainer*, FBox2D>
		constexpr auto _itemContainersOwned = 0x2b8; // TMap<FDbIntegerId, FItemContainersArray>
		constexpr auto _itemContainersDataRepHelper = 0x310; // FItemContainersReplicationHelper
	}

	namespace n_UTrapItemUserData {
		constexpr auto OwnerUserProfileId = 0x28; // FDbIntegerId
		constexpr auto IsOwnerUserProfileIdDirty = 0x30; // bool
	}

	namespace n_UUI_GameEventLeaderboardWidget_C {
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
		constexpr auto CircularThrobber_Ranking = 0x2b0; // UCircularThrobber*
		constexpr auto CircularThrobber_TopPlayers = 0x2b8; // UCircularThrobber*
		constexpr auto PlayerRanking = 0x2c0; // UVerticalBox*
		constexpr auto TopPlayers = 0x2c8; // UVerticalBox*
		constexpr auto UI_GameEventLeaderboardRow_C_1 = 0x2d0; // UUI_GameEventLeaderboardRow_C*
		constexpr auto MaxStats = 0x2d8; // int32_t
	}

	namespace n_UUI_EmptySlot_C {
		constexpr auto Image_1 = 0x260; // UImage*
		constexpr auto MainImage = 0x268; // UImage*
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x448; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x468; // char : 1
	}

	namespace n_URemeshMeshToolProperties {
		constexpr auto TargetTriangleCount = 0x70; // int32_t
		constexpr auto SmoothingType = 0x74; // ERemeshSmoothingType
		constexpr auto bDiscardAttributes = 0x75; // bool
		constexpr auto bShowWireframe = 0x76; // bool
		constexpr auto bShowGroupColors = 0x77; // bool
		constexpr auto RemeshType = 0x78; // ERemeshType
		constexpr auto RemeshIterations = 0x7c; // int32_t
		constexpr auto bUseTargetEdgeLength = 0x80; // bool
		constexpr auto TargetEdgeLength = 0x84; // float
		constexpr auto bReproject = 0x88; // bool
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_ABP_WeaponBullet_50BMG_Crafted_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_AMedicationItem {
		constexpr auto usage = 0x7c0; // EMedicationUsage
		constexpr auto Type = 0x7c1; // EMedicationType
		constexpr auto DailyDoses = 0x7c4; // float
		constexpr auto TimeToAbsorbSeconds = 0x7c8; // float
		constexpr auto EffectTimeMultiplier = 0x7cc; // float
		constexpr auto ReuseEffectTimeIncrease = 0x7d0; // float
		constexpr auto MaxEffectTime = 0x7d4; // float
		constexpr auto RepeatedAbuseReaction = 0x7d8; // EMedicationRepeatedAbuseReaction
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UUI_NightVisionResourceIndicatorWidget_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto BatteryImage = 0x290; // UImage*
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_ADcxVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleWheels = 0x288; // UDcxVehicleWheelsComponent*
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UUI_CC_AttributeModifier_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto DecreaseButton = 0x280; // UButton*
		constexpr auto Image_1 = 0x288; // UImage*
		constexpr auto IncreaseButton = 0x290; // UButton*
		constexpr auto TitleText = 0x298; // UTextBlock*
		constexpr auto ValueText = 0x2a0; // UTextBlock*
		constexpr auto Title = 0x2a8; // FText
		constexpr auto OnIncrease = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnDecrease = 0x2d0; // FMulticastInlineDelegate
		constexpr auto _value = 0x2e0; // float
		constexpr auto Attribute = 0x2e4; // ESkillAttribute
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_AReplicationGraphDebugActor {
		constexpr auto ReplicationGraph = 0x220; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x228; // UNetReplicationGraphConnection*
	}

	namespace n_UAnimNotify_WeaponEjectCasing {
		constexpr auto EmitterSocketName = 0x38; // FName
		constexpr auto AttachEmitter = 0x40; // bool
	}

	namespace n_ULiftComponent {
		constexpr auto AerodynamicSurfaces = 0x1f8; // TArray<FAerodynamicSurface>
		constexpr auto PropellerLocation = 0x208; // FVector
		constexpr auto AirDensity = 0x214; // float
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto ReplicatedCrouchedStateAndCapsuleHalfHeight = 0x334; // uint32_t
		constexpr auto bProxyIsJumpForceApplied = 0x338; // char : 1
		constexpr auto bPressedJump = 0x338; // char : 1
		constexpr auto bClientUpdating = 0x338; // char : 1
		constexpr auto bClientWasFalling = 0x338; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x338; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x338; // char : 1
		constexpr auto bSimGravityDisabled = 0x338; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x338; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x339; // char : 1
		constexpr auto bWasJumping = 0x339; // char : 1
		constexpr auto JumpKeyHoldTime = 0x33c; // float
		constexpr auto JumpForceTimeRemaining = 0x340; // float
		constexpr auto ProxyJumpForceStartedTime = 0x344; // float
		constexpr auto JumpMaxHoldTime = 0x348; // float
		constexpr auto JumpMaxCount = 0x34c; // int32_t
		constexpr auto JumpCurrentCount = 0x350; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x354; // int32_t
		constexpr auto OnReachedJumpApex = 0x360; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x380; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x390; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x3a0; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3e0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x420; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x430; // FRepRootMotionMontage
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UUI_ContinueOrNewCharacterDialog_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ContinueButton = 0x268; // UUI_TrashMenuButton_C*
		constexpr auto Image_11 = 0x270; // UImage*
		constexpr auto MainText = 0x278; // UTextBlock*
		constexpr auto NewCharacterButton = 0x280; // UUI_TrashMenuButton_C*
		constexpr auto Continue = 0x288; // FMulticastInlineDelegate
		constexpr auto New = 0x298; // FMulticastInlineDelegate
		constexpr auto Ip = 0x2a8; // FString
		constexpr auto GameplayPort = 0x2b8; // int32_t
		constexpr auto ResponsePort = 0x2bc; // int32_t
		constexpr auto AuthToken = 0x2c0; // FString
		constexpr auto Canvas = 0x2d0; // UCanvasPanel*
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UHudWidget {
		constexpr auto _quickAccessBar = 0x278; // UQuickAccessBarWidget*
		constexpr auto _throwingAccess = 0x280; // UThrowingQuickAccessItemWidget*
		constexpr auto _handQuickAccessItemWidget = 0x288; // UQuickAccessItemWidget*
		constexpr auto _vicinityPanel = 0x290; // UVicinityPanel3*
		constexpr auto _vicinityContainer = 0x298; // UVicinityContainer3*
		constexpr auto _chatWidget = 0x2a0; // UChatWidget*
		constexpr auto _chatOpen = 0x2a8; // bool
		constexpr auto _objectivesContainer = 0x2c8; // UObjectivesContainerWidget*
		constexpr auto _missionResultWidget = 0x2d0; // UMissionResult*
		constexpr auto _dialogueContainerWidget = 0x2d8; // UDialogueContainerWidget*
		constexpr auto _journalPanelWidget = 0x2e0; // UJournalPanelWidget*
		constexpr auto _squadPanelWidget = 0x2e8; // USquadPanelWidget*
		constexpr auto _handPanel = 0x2f0; // UHandPanel3*
		constexpr auto _screenSpaceHealthWidget = 0x2f8; // UScreenSpaceHealthWidget*
		constexpr auto _nightVisionGogglesBatteryWidget = 0x300; // UResourceIndicatorWidget*
		constexpr auto _shotsFiredTrackerWidget = 0x308; // UShotsFiredTrackerWidget*
		constexpr auto _fishingContainerWidget = 0x310; // UFishingContainerWidget*
		constexpr auto _grapplingWidget = 0x318; // UGrapplingWidget*
		constexpr auto _musicPlayerDisplayWidget = 0x320; // UMusicPlayerDisplayWidget*
		constexpr auto _fishingTrophyWidget = 0x328; // UFishingTrophyWidget*
		constexpr auto _metabolismLeftPanel = 0x330; // UMetabolismLeftPanel*
		constexpr auto _metabolismRightPanel = 0x338; // UMetabolismRightPanel*
		constexpr auto _metabolismTreatmentItemsPanel = 0x340; // UMetabolismTreatmentItemsPanel*
		constexpr auto _vehicleHUD = 0x348; // UVehicleHudWidget*
		constexpr auto _chatCanvas = 0x350; // UCanvasPanel*
		constexpr auto _masterSwitcher = 0x358; // UWidgetSwitcher*
		constexpr auto _masterMenu = 0x360; // UMasterMenu*
		constexpr auto _masterHUD = 0x368; // UPanelWidget*
	}

	namespace n_UPrisonerBodyEffect_NotificationCooldown {
		constexpr auto _notificationClass = 0x40; // UNotificationDescription*
	}

	namespace n_ACTFFlag {
		constexpr auto SphereComponent = 0x220; // USphereComponent*
		constexpr auto FlagMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto TeamMaterials = 0x230; // TArray<UMaterialInstance*>
		constexpr auto AttachSocketName = 0x240; // FName
		constexpr auto _gameEvent = 0x248; // ACTFGameEvent*
		constexpr auto _team = 0x250; // int32_t
		constexpr auto _carrier = 0x258; // APrisoner*
		constexpr auto _resetProgress = 0x268; // float
		constexpr auto _baseTransform = 0x270; // FTransform
		constexpr auto _flagTransform = 0x2a0; // FTransform
	}

	namespace n_APrisoner_Left_Arm_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_ARadioItem {
		constexpr auto _radioComponent = 0x7c0; // URadioComponent*
		constexpr auto _resourceContainerComponent = 0x7c8; // UBasicGameResourceContainerComponent*
	}

	namespace n_UWeaponAttachmentMagazineState {
		constexpr auto ammoData = 0xf8; // TArray<FAmmunitionData>
	}

	namespace n_UModularTooltipSection {
		constexpr auto _sectionElementsPadding = 0x260; // FMargin
		constexpr auto _sectionSeparatorImage = 0x270; // UImage*
		constexpr auto _sectionNameTextBlock = 0x278; // UTextBlock*
		constexpr auto _sectionElementsVerticalBox = 0x280; // UVerticalBox*
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UUI_ComboBoxWrapper_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ComboBox = 0x268; // UComboBoxString*
		constexpr auto Open = 0x270; // bool
	}

	namespace n_UUVProjectionToolProperties {
		constexpr auto UVProjectionMethod = 0x60; // EUVProjectionMethod
		constexpr auto ProjectionPrimitiveScale = 0x64; // FVector
		constexpr auto CylinderProjectToTopOrBottomAngleThreshold = 0x70; // float
		constexpr auto UVScale = 0x74; // FVector2D
		constexpr auto UVOffset = 0x7c; // FVector2D
		constexpr auto bWorldSpaceUVScale = 0x84; // bool
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UMIDIDeviceOutputController {
		constexpr auto DeviceID = 0x28; // int32_t
		constexpr auto DeviceName = 0x30; // FString
	}

	namespace n_UABP_AK47_Magazine_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x3e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x428; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x4b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x5e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x680; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x880; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByInt = 0x9d8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByEnum = 0xa78; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xb28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xba8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xc28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xe28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xec8; // FAnimNode_SequencePlayer
		constexpr auto LastSection = 0xf48; // FName
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_USpaceCurveDeformationMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto TransformProperties = 0x68; // USpaceCurveDeformationMechanicPropertySet*
		constexpr auto PreviewGeometryActor = 0x168; // APreviewGeometryActor*
		constexpr auto RenderPoints = 0x170; // UPointSetComponent*
		constexpr auto RenderSegments = 0x178; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x1b8; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x1c0; // UTransformGizmo*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTouchInterface {
		constexpr auto controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventId = 0x34; // int32_t
	}

	namespace n_UDisplaceMeshPerlinNoiseProperties {
		constexpr auto PerlinLayerProperties = 0x60; // TArray<FPerlinLayerProperties>
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_ABP_Survival_Blueprints_PlaceShelter_Objective_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x370; // USceneComponent*
		constexpr auto DialogueData = 0x378; // UDialogueData*
		constexpr auto DialogueManager = 0x380; // AMissionDialogueManager*
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_ULiveLinkSettings {
		constexpr auto DefaultRoleSettings = 0x28; // TArray<FLiveLinkRoleProjectSetting>
		constexpr auto FrameInterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto DefaultLiveLinkPreset = 0x40; // TSoftObjectPtr<ULiveLinkPreset>
		constexpr auto PresetSaveDir = 0x68; // FDirectoryPath
		constexpr auto ClockOffsetCorrectionStep = 0x78; // float
		constexpr auto DefaultMessageBusSourceMode = 0x7c; // ELiveLinkSourceMode
		constexpr auto MessageBusPingRequestFrequency = 0x80; // double
		constexpr auto MessageBusHeartbeatFrequency = 0x88; // double
		constexpr auto MessageBusHeartbeatTimeout = 0x90; // double
		constexpr auto MessageBusTimeBeforeRemovingInactiveSource = 0x98; // double
		constexpr auto TimeWithoutFrameToBeConsiderAsInvalid = 0xa0; // double
		constexpr auto ValidColor = 0xa8; // FLinearColor
		constexpr auto InvalidColor = 0xb8; // FLinearColor
		constexpr auto TextSizeSource = 0xc8; // char
		constexpr auto TextSizeSubject = 0xc9; // char
	}

	namespace n_ABlueprintableItemObjective {
		constexpr auto _actionType = 0x330; // EBlueprintItemActionType
		constexpr auto _targetBlueprintActor = 0x338; // AActor*
		constexpr auto _itemsToFill = 0x340; // TArray<AActor*>
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UBrushSculptProperties {
		constexpr auto bIsRemeshingEnabled = 0x60; // bool
		constexpr auto PrimaryBrushType = 0x61; // EDynamicMeshSculptBrushType
		constexpr auto PrimaryBrushSpeed = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
		constexpr auto bFreezeTarget = 0x69; // bool
		constexpr auto SmoothBrushSpeed = 0x6c; // float
		constexpr auto bDetailPreservingSmooth = 0x70; // bool
	}

	namespace n_UHandheldLightItemAnimInstance {
		constexpr auto _lightAngle = 0x2b8; // float
	}

	namespace n_UHUDNotificationDescription {
		constexpr auto Message = 0x40; // FText
		constexpr auto beep = 0x58; // bool
	}

	namespace n_ALargeAquaticAnimal {
		constexpr auto _maxHealth = 0x7b0; // float
		constexpr auto _health = 0x7b4; // float
		constexpr auto _maxTimeWithoutRelevantPrisoners = 0x7c8; // float
		constexpr auto _behavior = 0x7d0; // EFishBehavior
		constexpr auto _deathAnimation = 0x7d8; // UAnimMontage*
		constexpr auto _deathSinkingSpeed = 0x7e0; // float
		constexpr auto _capsuleRadiusAndHalfHeightOnDeath = 0x7e4; // float
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UPrisonerViewComponent {
		constexpr auto DefaultSubviewBlendDuration = 0xb0; // float
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x458; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x460; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x468; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x469; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x46a; // bool
		constexpr auto CachedBodySetup = 0x470; // UBodySetup*
		constexpr auto BodySetups = 0x478; // TArray<UBodySetup*>
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4d8; // float
	}

	namespace n_APETBottle03_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UUI_HandPanel3_C {
		constexpr auto Image_1 = 0x290; // UImage*
		constexpr auto Image_2 = 0x298; // UImage*
		constexpr auto Image_3 = 0x2a0; // UImage*
		constexpr auto Image_4 = 0x2a8; // UImage*
		constexpr auto SizeBox_1 = 0x2b0; // USizeBox*
		constexpr auto UI_QuickAccessItemSwitcher3_1 = 0x2b8; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_4 = 0x2c0; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_5 = 0x2c8; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_6 = 0x2d0; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_7 = 0x2d8; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_8 = 0x2e0; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_9 = 0x2e8; // UUI_QuickAccessItemSwitcher3_C*
		constexpr auto UI_QuickAccessItemSwitcher3_10 = 0x2f0; // UUI_QuickAccessItemSwitcher3_C*
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UUI_TeamInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_2 = 0x268; // UBorder*
		constexpr auto MainResizableWindow = 0x270; // UResizableWindow_C*
		constexpr auto NamesVerticalBox = 0x278; // UVerticalBox*
		constexpr auto TeammateNames = 0x280; // UVerticalBox*
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UGerstnerWaterWaveGeneratorSpectrum {
		constexpr auto SpectrumType = 0x28; // EWaveSpectrumType
		constexpr auto Octaves = 0x30; // TArray<FGerstnerWaveOctave>
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UPrisonerAnimInstance_Grappled {
		constexpr auto _idleAnimation = 0x2b8; // UAnimSequence*
	}

	namespace n_UVoxelBlendMeshesTool {
		constexpr auto BlendProperties = 0x108; // UVoxelBlendMeshesToolProperties*
	}

	namespace n_UProceduralPuncturedDiscToolProperties {
		constexpr auto HoleRadius = 0x80; // float
	}

	namespace n_UInteractionUserWidget {
		constexpr auto _actionText = 0x278; // UTextBlock*
		constexpr auto _actionButton = 0x280; // UButton*
	}

	namespace n_ABP_WeaponBullet_MetalArrow_C {
		constexpr auto UberGraphFrame = 0x458; // FPointerToUberGraphFrame
		constexpr auto P_ArrowTrail = 0x460; // UParticleSystemComponent*
	}

	namespace n_UPrisonerResponseIdle_BodyConditionOrSymptomPresence {
		constexpr auto BodyConditionOrSymptom = 0x98; // UPrisonerBodyConditionOrSymptom*
		constexpr auto SeverityLevels = 0xa0; // FInt32Range
	}

	namespace n_UPolyEditOutsetProperties {
		constexpr auto Softness = 0x60; // float
		constexpr auto bBoundaryOnly = 0x64; // bool
		constexpr auto AreaScale = 0x68; // float
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_UAdminCommand_ListPrimaryAssets {
		constexpr auto _primaryAssetType = 0x80; // FPrimaryAssetType
		constexpr auto _primaryAssetsToExclude = 0x88; // TSet<FPrimaryAssetId>
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_ADoubleRegularDoorStatic {
		constexpr auto _openRotation0 = 0x410; // FRotator
		constexpr auto _openRotation1 = 0x41c; // FRotator
		constexpr auto _closedRotation0 = 0x428; // FRotator
		constexpr auto _closedRotation1 = 0x434; // FRotator
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UPrisonerPrisonWalletComponent {
		constexpr auto _deluxeItems = 0xc0; // TArray<AItem*>
		constexpr auto _milestoneEventItems = 0xd0; // TArray<AItem*>
		constexpr auto _milestoneItemChoiceType = 0xe0; // EPrisonWalletChoiceType
		constexpr auto _lastMilestone = 0xe4; // int32_t
	}

	namespace n_UUI_QuickAccessBar_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_1 = 0x298; // UHorizontalBox*
		constexpr auto UI_QuickAccessItemWidget_1 = 0x2a0; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_2 = 0x2a8; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_3 = 0x2b0; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_4 = 0x2b8; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_5 = 0x2c0; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_6 = 0x2c8; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_7 = 0x2d0; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_8 = 0x2d8; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_9 = 0x2e0; // UUI_QuickAccessItemWidget_C*
		constexpr auto UI_QuickAccessItemWidget_10 = 0x2e8; // UUI_QuickAccessItemWidget_C*
	}

	namespace n_UABP_M1_Clip_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x318; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_7 = 0x398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x3e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x428; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x4b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x5b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x5e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x680; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot_3 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x7c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x880; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x9d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xa78; // FAnimNode_SequencePlayer
	}

	namespace n_UUI_CharacterNameWidget_C {
		constexpr auto MainText = 0x260; // UTextBlock*
	}

	namespace n_UPrisonerBodyConditionTreatmentItemTag {
		constexpr auto InteractionCaption = 0x30; // FText
		constexpr auto BeginTreatmentMontage = 0x48; // EPrisonerMontage
		constexpr auto EndTreatmentMontage = 0x49; // EPrisonerMontage
	}

	namespace n_ABP_Tournament_C {
		constexpr auto DefaultSceneRoot = 0x270; // USceneComponent*
	}

	namespace n_AHip_Flask1_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_UUI_ItemTooltip_C {
		constexpr auto UI_Border = 0x2c0; // UUI_Border_C*
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UProceduralArrowToolProperties {
		constexpr auto ShaftRadius = 0x70; // float
		constexpr auto ShaftHeight = 0x74; // float
		constexpr auto HeadRadius = 0x78; // float
		constexpr auto HeadHeight = 0x7c; // float
		constexpr auto RadialSlices = 0x80; // int32_t
		constexpr auto TotalSubdivisions = 0x84; // int32_t
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto randomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto sortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_AConZWaterSpline {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // USplineComponent*
		constexpr auto SurfaceMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto SubsurfaceMeshComponent = 0x238; // UStaticMeshComponent*
		constexpr auto DrawDebug = 0x240; // bool
		constexpr auto SelectRangeStart = 0x244; // int32_t
		constexpr auto SelectRangeEnd = 0x248; // int32_t
		constexpr auto SelectRange = 0x24c; // bool
		constexpr auto FlattenZ = 0x24d; // bool
		constexpr auto ControlPoints = 0x250; // TArray<FConZWaterSplineControlPoint>
		constexpr auto MaxDepth = 0x260; // float
		constexpr auto SurfaceMesh = 0x268; // UStaticMesh*
		constexpr auto SubsurfaceMesh = 0x270; // UStaticMesh*
		constexpr auto SurfaceMeshMaterialOverride = 0x278; // UMaterialInterface*
		constexpr auto SubsurfaceMeshMaterialOverride = 0x280; // UMaterialInterface*
		constexpr auto UnderwaterPostProcessing = 0x288; // UMaterialInterface*
		constexpr auto SurfaceMeshUserData = 0x290; // TArray<UAssetUserData*>
		constexpr auto GerstnerWavesParameters = 0x2a0; // TArray<FConZGerstnerWavesParameters>
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_UGroomCreateStrandsTexturesOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto TraceType = 0x2c; // EStrandsTexturesTraceType
		constexpr auto TraceDistance = 0x30; // float
		constexpr auto MeshType = 0x34; // EStrandsTexturesMeshType
		constexpr auto StaticMesh = 0x38; // UStaticMesh*
		constexpr auto SkeletalMesh = 0x40; // USkeletalMesh*
		constexpr auto LODIndex = 0x48; // int32_t
		constexpr auto SectionIndex = 0x4c; // int32_t
		constexpr auto UVChannelIndex = 0x50; // int32_t
		constexpr auto GroupIndex = 0x58; // TArray<int32_t>
	}

	namespace n_UNiagaraDataInterfaceVelocityGrid {
		constexpr auto GridSize = 0xd8; // FIntVector
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UGroomImportOptions {
		constexpr auto ConversionSettings = 0x28; // FGroomConversionSettings
		constexpr auto InterpolationSettings = 0x40; // TArray<FHairGroupsInterpolation>
	}

	namespace n_UReplenishableResourceComponent {
		constexpr auto _replenishableResourceDescription = 0x588; // FReplenishableResourceDescription
		constexpr auto _replenishableResourceFillItemInteractionData = 0x620; // FFillItemWithReplenishableResourceInteractionData
		constexpr auto QuantityPerDrink = 0x660; // float
		constexpr auto Salinity = 0x664; // float
		constexpr auto StartDrinkingAudioEvent = 0x668; // UAkAudioEvent*
		constexpr auto StopDrinkingAudioEvent = 0x670; // UAkAudioEvent*
		constexpr auto _replenishableResourceAmountMaterialParameterName = 0x678; // FName
	}

	namespace n_USledgeDriverMountSlot {
		constexpr auto _forwardIdleAnimation = 0x128; // UBlendSpace*
		constexpr auto _forwardSteeringAnimation = 0x130; // UAnimSequenceBase*
		constexpr auto _forwardSteeringAnimationFP = 0x138; // UAnimSequenceBase*
		constexpr auto _reverseIdleAnimation = 0x140; // UBlendSpace*
		constexpr auto _reverseSteeringAnimation = 0x148; // UAnimSequenceBase*
		constexpr auto _reverseSteeringAnimationFP = 0x150; // UAnimSequenceBase*
	}

	namespace n_UVehicle2WPassengerMountSlot {
		constexpr auto _idleAnimation = 0x148; // UBlendSpace*
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UUI_DoorUpgrade_C {
		constexpr auto CraftingTitle = 0x338; // UImage*
		constexpr auto Image_1 = 0x340; // UImage*
		constexpr auto TitleText = 0x348; // UTextBlock*
		constexpr auto TitleText_4 = 0x350; // UTextBlock*
		constexpr auto UI_DoorSecurityUpgradeSlot = 0x358; // UUI_DoorSecurityUpgradeSlot_C*
		constexpr auto UI_DoorSecurityUpgradeSlot_275 = 0x360; // UUI_DoorSecurityUpgradeSlot_C*
		constexpr auto UI_DoorUpgradeSlot = 0x368; // UUI_DoorUpgradeSlot_C*
		constexpr auto UI_DoorUpgradeSlot_1 = 0x370; // UUI_DoorUpgradeSlot_C*
		constexpr auto UI_DoorUpgradeSlot_2 = 0x378; // UUI_DoorUpgradeSlot_C*
	}

	namespace n_UMetabolismRadialProgressBar {
		constexpr auto PreviewedAlertedState = 0x260; // bool
		constexpr auto PrimaryPercentageMinDisplayedValue = 0x264; // float
		constexpr auto PrimaryPercentageMaxDisplayedValue = 0x268; // float
		constexpr auto _scaleBox = 0x280; // UScaleBox*
		constexpr auto _coloredBackground = 0x288; // UImage*
		constexpr auto _radialProgressBar = 0x290; // UImage*
		constexpr auto _fontEffectPass1 = 0x298; // URetainerBox*
		constexpr auto _fontEffectPass2 = 0x2a0; // URetainerBox*
		constexpr auto _percentage = 0x2a8; // URichTextBlock*
		constexpr auto _value = 0x2b0; // UTextBlock*
		constexpr auto _title = 0x2b8; // UTextBlock*
		constexpr auto _defaultColorScheme = 0x2c0; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _alertedColorScheme = 0x340; // FMetabolismRadialProgressBarColorScheme
		constexpr auto _percentageFontSettings = 0x3c0; // FMetabolismRadialProgressBarFontSettings
		constexpr auto _widgetScale = 0x3d4; // float
		constexpr auto _isTitleVisible = 0x3d8; // bool
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AFishingAttachmentWire {
		constexpr auto ReelSocketName = 0x7e0; // FName
		constexpr auto _wireComponent = 0x7e8; // UFishingWireComponent*
		constexpr auto _wireComponentClass = 0x7f0; // UFishingWireComponent*
		constexpr auto _rippleParticleSystemComponent = 0x7f8; // UParticleSystemComponent*
		constexpr auto _visibilityFactor = 0x800; // float
		constexpr auto _wireWeightThreshold = 0x804; // float
		constexpr auto _wireThickness = 0x808; // float
		constexpr auto _minWireLength = 0x80c; // float
		constexpr auto _maxWireLength = 0x810; // float
		constexpr auto _reelInTensionThreshold = 0x814; // float
		constexpr auto _wireBreakThreshold = 0x818; // float
		constexpr auto _instantWireBreakThreshold = 0x81c; // float
		constexpr auto _wireBreakTimerThreshold = 0x820; // float
		constexpr auto _wireStrength = 0x824; // float
		constexpr auto _simulate = 0x828; // bool
	}

	namespace n_ULuminARSessionConfig {
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UConZBoatPassengerMountSlot {
		constexpr auto _idleAnimation = 0x118; // UBlendSpace*
		constexpr auto _vehicleWeaponAimingParameters = 0x120; // UVehicleWeaponAimingParameters*
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_AComplexAnimal2 {
		constexpr auto EnergyDepletionRate = 0x938; // float
		constexpr auto HungerDepletionRate = 0x93c; // float
		constexpr auto HungerDepletionRateWhenResting = 0x940; // float
		constexpr auto EnergyRefillRate = 0x944; // float
		constexpr auto HungerRefillRate = 0x948; // float
		constexpr auto HealthRegenerationRate = 0x94c; // float
		constexpr auto HealthDepletionRate = 0x950; // float
		constexpr auto MovementPaceSettings = 0x954; // FAnimalPaceSettings
		constexpr auto RotationRateSettings = 0x964; // FAnimalStationaryRotationRateSettings
		constexpr auto OnActionChanged = 0x9a0; // FMulticastInlineDelegate
		constexpr auto ChargeAttacks = 0x9b0; // TArray<FChargeAttackData>
		constexpr auto CloseRangeAttacks = 0x9c0; // TArray<FCloseRangeAttackData>
		constexpr auto TurnMonatges = 0x9d0; // FTurnMontages
		constexpr auto AnimalActions = 0x9e0; // FAnimalActionMontageData
		constexpr auto AttackRotationRate = 0x9f8; // float
		constexpr auto MinActionTime = 0x9fc; // float
		constexpr auto HitReactTypeResting = 0xa00; // FGameplayTag
		constexpr auto HitReactTypeIntimidate = 0xa08; // FGameplayTag
		constexpr auto _hungerAndEnergyReplicated = 0xa18; // uint16_t
		constexpr auto _lookAtPoint = 0xa30; // FVector
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x448; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x458; // float
		constexpr auto PixelHitDistanceThreshold = 0x45c; // float
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_ABP_Survival_Blueprints_CutBush_Objective_C {
		constexpr auto DefaultSceneRoot = 0x360; // USceneComponent*
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_ABP_Prisoner_C {
		constexpr auto UberGraphFrame = 0x1e50; // FPointerToUberGraphFrame
		constexpr auto TPV_Falling = 0x1e58; // UPrisonerThirdPersonAerialSubviewComponent*
		constexpr auto Ears = 0x1e60; // UStaticMeshComponent*
		constexpr auto TPV_Grappled = 0x1e68; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto Waist = 0x1e70; // USkeletalMeshComponent*
		constexpr auto FPV_MountedLeaningStanceAimingDownTheSights = 0x1e78; // UPrisonerFirstPersonVehicleAimingSubviewComponent*
		constexpr auto FPV_MountedDefaultStanceAimingDownTheSights = 0x1e80; // UPrisonerFirstPersonVehicleAimingSubviewComponent*
		constexpr auto FPV_MountedLeaningStanceAiming = 0x1e88; // UPrisonerFirstPersonVehicleAimingSubviewComponent*
		constexpr auto FPV_MountedDefaultStanceAiming = 0x1e90; // UPrisonerFirstPersonVehicleAimingSubviewComponent*
		constexpr auto FPViewsMouintedAiming = 0x1e98; // USceneComponent*
		constexpr auto TPV_Throwing = 0x1ea0; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto FPV_Lying = 0x1ea8; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_Mounted = 0x1eb0; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FacialHairMesh = 0x1eb8; // USkeletalMeshComponent*
		constexpr auto TPV_Swimming = 0x1ec0; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto HairMesh = 0x1ec8; // USkeletalMeshComponent*
		constexpr auto RightBreastCensor = 0x1ed0; // UStaticMeshComponent*
		constexpr auto LeftBreastCensor = 0x1ed8; // UStaticMeshComponent*
		constexpr auto DangerDetectionSphere = 0x1ee0; // USphereComponent*
		constexpr auto PenisCensor = 0x1ee8; // UStaticMeshComponent*
		constexpr auto GenitalsCensor = 0x1ef0; // UStaticMeshComponent*
		constexpr auto Neck = 0x1ef8; // USkeletalMeshComponent*
		constexpr auto Penis = 0x1f00; // USkeletalMeshComponent*
		constexpr auto VoiceAudio = 0x1f08; // UVoiceAudioComponent*
		constexpr auto VoiceChat = 0x1f10; // UVoiceChatComponent*
		constexpr auto MeleeAttackCollisionCapsuleFoot_R = 0x1f18; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleFoot_L = 0x1f20; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleHead = 0x1f28; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleLeg_R = 0x1f30; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleLeg_L = 0x1f38; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleHand_R = 0x1f40; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleHand_L = 0x1f48; // UMeleeAttackCollisionCapsule*
		constexpr auto BulletFlyBySoundCollision = 0x1f50; // USphereComponent*
		constexpr auto VisionEffectsComponent = 0x1f58; // UVisionEffectsComponent*
		constexpr auto Eyewear = 0x1f60; // UStaticMeshComponent*
		constexpr auto UpperHead = 0x1f68; // UStaticMeshComponent*
		constexpr auto LowerHead = 0x1f70; // UStaticMeshComponent*
		constexpr auto Chip = 0x1f78; // UStaticMeshComponent*
		constexpr auto LowerMouth = 0x1f80; // UStaticMeshComponent*
		constexpr auto UpperMouth = 0x1f88; // UStaticMeshComponent*
		constexpr auto REye = 0x1f90; // UStaticMeshComponent*
		constexpr auto LEye = 0x1f98; // UStaticMeshComponent*
		constexpr auto UpperHeadSkeletal = 0x1fa0; // USkeletalMeshComponent*
		constexpr auto BodyArmor = 0x1fa8; // USkeletalMeshComponent*
		constexpr auto Backpack = 0x1fb0; // USkeletalMeshComponent*
		constexpr auto Feet = 0x1fb8; // USkeletalMeshComponent*
		constexpr auto Legs = 0x1fc0; // USkeletalMeshComponent*
		constexpr auto Head = 0x1fc8; // USkeletalMeshComponent*
		constexpr auto Hands = 0x1fd0; // USkeletalMeshComponent*
		constexpr auto Arms = 0x1fd8; // USkeletalMeshComponent*
		constexpr auto Torso = 0x1fe0; // USkeletalMeshComponent*
		constexpr auto TPV_Defecating = 0x1fe8; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto FPV_ClimbingWindow = 0x1ff0; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto TPV_ClimbingWindow = 0x1ff8; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_Diving = 0x2000; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPViews = 0x2008; // USceneComponent*
		constexpr auto TPV_NarrowLadder = 0x2010; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_Ragdoll = 0x2018; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto NameWidget = 0x2020; // UWidgetComponent*
		constexpr auto TPV_StandingMelee = 0x2028; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto FPV_StandingMelee = 0x2030; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_ProneAimingDownTheSights = 0x2038; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_CrouchingAimingDownTheSights = 0x2040; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_StandingAimingDownTheSights = 0x2048; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_ProneAiming = 0x2050; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_CrouchingAiming = 0x2058; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_StandingAiming = 0x2060; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPViewsAiming = 0x2068; // USceneComponent*
		constexpr auto TPV_ProneAiming = 0x2070; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_CrouchingAiming = 0x2078; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_StandingAiming = 0x2080; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto FPV_Prone = 0x2088; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_Crouching = 0x2090; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPV_Standing = 0x2098; // UPrisonerFirstPersonSubviewComponent*
		constexpr auto FPViews = 0x20a0; // USceneComponent*
		constexpr auto TPV_Standing = 0x20a8; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_Prone = 0x20b0; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto TPV_Crouching = 0x20b8; // UPrisonerThirdPersonSubviewComponent*
		constexpr auto FirstPersonView = 0x20c0; // UPrisonerFirstPersonViewComponent*
		constexpr auto ThirdPersonView = 0x20c8; // UPrisonerThirdPersonViewComponent*
		constexpr auto ShortHairCurve = 0x20d0; // UCurveFloat*
		constexpr auto IKoffsetLeftFootToRemove = 0x20d8; // float
		constexpr auto IKoffsetRightFootToRemove = 0x20dc; // float
		constexpr auto IKInterpSpeedToRemove = 0x20e0; // float
		constexpr auto LeftFootSocket = 0x20e4; // FName
		constexpr auto RightFootSocket = 0x20ec; // FName
		constexpr auto FootstepTracker = 0x20f8; // ABP_FootstepTracker_C*
		constexpr auto IsHoldingObject = 0x2100; // bool
		constexpr auto BodyToMove = 0x2108; // UPrimitiveComponent*
		constexpr auto TargetDistance = 0x2110; // float
		constexpr auto TargetDistanceStep = 0x2114; // float
		constexpr auto MaxVoiceDistance = 0x2118; // float
		constexpr auto IsVoiceActive = 0x211c; // bool
		constexpr auto IgnorePenisPhysics = 0x211d; // bool
		constexpr auto MediumHairCurve = 0x2120; // UCurveFloat*
		constexpr auto MediumHairCurvePDO = 0x2128; // UCurveFloat*
		constexpr auto MediumHairCurveTopOpacity = 0x2130; // UCurveFloat*
		constexpr auto LongHairCurve = 0x2138; // UCurveFloat*
		constexpr auto LongHairCurvePDO = 0x2140; // UCurveFloat*
		constexpr auto LongHairCurveTopOpacity = 0x2148; // UCurveFloat*
		constexpr auto ShortFacialHairCurve = 0x2150; // UCurveFloat*
		constexpr auto MediumFacialHairCurve = 0x2158; // UCurveFloat*
		constexpr auto MediumFacialHairCurvePDO = 0x2160; // UCurveFloat*
		constexpr auto MediumFacialHairCurveTopOpacity = 0x2168; // UCurveFloat*
		constexpr auto LongFacialHairCurve = 0x2170; // UCurveFloat*
		constexpr auto LongFacialHairCurvePDO = 0x2178; // UCurveFloat*
		constexpr auto LongFacialHairCurveTopOpacity = 0x2180; // UCurveFloat*
		constexpr auto AfroMediumHairCurve = 0x2188; // UCurveFloat*
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UMetabolism_ICU_EKG_Stats {
		constexpr auto _heartPulseBPM = 0x278; // UTextBlock*
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x478; // bool
		constexpr auto bUseAsyncCooking = 0x479; // bool
		constexpr auto ProcMeshBodySetup = 0x480; // UBodySetup*
		constexpr auto ProcMeshSections = 0x488; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x498; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4a8; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4c8; // TArray<UBodySetup*>
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto AkComponent = 0x228; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x230; // bool
		constexpr auto AutoPost = 0x231; // bool
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_AProjectileArrow {
		constexpr auto _tempSceneComponent = 0x418; // USceneComponent*
		constexpr auto _relativeRotationSceneComponent = 0x420; // USceneComponent*
		constexpr auto _projectileArrowData = 0x428; // FProjectileArrowData
	}

	namespace n_UUI_CharacterSlot_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x280; // UButton*
		constexpr auto UI_MenuButton_129 = 0x288; // UUI_TrashMenuButton_C*
		constexpr auto OnClicked = 0x290; // FMulticastInlineDelegate
		constexpr auto OnDestroyClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto UserProfile = 0x2b0; // UUserProfile*
	}

	namespace n_UABP_Prisoner_Vehicle2W_C {
		constexpr auto UberGraphFrame = 0x440; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x448; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x4a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x4c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x4f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x518; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x5b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x5e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_Fabrik_20 = 0x610; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x7a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x7c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_19 = 0x7e0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x970; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x9f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Fabrik_18 = 0xa20; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0xbb0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0xbd0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_17 = 0xbf0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xd80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0xe00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Fabrik_16 = 0xe30; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0xfc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0xfe0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_15 = 0x1000; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1190; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1210; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x1240; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x1260; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_14 = 0x1280; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_13 = 0x1410; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x15a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik_12 = 0x15c0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_11 = 0x1750; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x18e0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x1900; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_10 = 0x1920; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x1ab0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_9 = 0x1ad0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x1c60; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x1df0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x1f80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x2068; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2188; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2208; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x22a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2348; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2430; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Fabrik_8 = 0x2460; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_7 = 0x25f0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x2780; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x27a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x27c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2840; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2870; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2958; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x29d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2a58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2af8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_2 = 0x2b98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x2bc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x2be8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_6 = 0x2c10; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_5 = 0x2da0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x2f30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik_4 = 0x2f50; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_3 = 0x30e0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3270; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x3290; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_2 = 0x32b0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3440; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik = 0x3460; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x35f0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x3780; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x3910; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x39f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x3b18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3b98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x3cd8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3dc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3df0; // FAnimNode_StateMachine
	}

	namespace n_UPolyEditCutProperties {
		constexpr auto Orientation = 0x60; // EPolyEditCutPlaneOrientation
		constexpr auto bSnapToVertices = 0x64; // bool
	}

	namespace n_UAmmunitionArrowSpawningParams {
		constexpr auto AmmunitionArrowClass = 0x28; // UObject*
		constexpr auto ItemsHealth = 0x30; // float
		constexpr auto IsPartOfEvent = 0x34; // bool
	}

	namespace n_UTrashMenuButton {
		constexpr auto MainButton = 0x278; // UButton*
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_Mosin_Bayonet_C {
		constexpr auto MeleeAttackCollisionCapsuleKnife = 0x7e0; // UMeleeAttackCollisionCapsule*
		constexpr auto MeleeAttackCollisionCapsuleBayonet = 0x7e8; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UPrisonerBodySymptom_Thirst {
		constexpr auto _severityVsHydrationRatio = 0xb8; // FRuntimeFloatCurve
	}

	namespace n_USphereMotionTriggerComponent {
		constexpr auto SphereCollisionComponent = 0x518; // USphereComponent*
		constexpr auto VisualizationMeshComponent = 0x520; // UStaticMeshComponent*
		constexpr auto _triggerRadius = 0x528; // float
		constexpr auto _visualizationMesh = 0x530; // UStaticMesh*
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_UUI_AdjustableSeparator_C {
		constexpr auto Image_1 = 0x260; // UImage*
		constexpr auto Image_2 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto UnderSlot = 0x278; // UNamedSlot*
		constexpr auto UpperSizeBox = 0x280; // USizeBox*
		constexpr auto UpperSlot = 0x288; // UNamedSlot*
		constexpr auto _shouldMove = 0x290; // bool
		constexpr auto MinHeight = 0x294; // float
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UUI_Settings_ClientSettingsMenu_C {
		constexpr auto bottomLIne = 0x3e8; // UImage*
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UUI_ItemSelectionSlotWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Selection = 0x280; // UScrollBox*
		constexpr auto TextBlock_1 = 0x288; // UTextBlock*
		constexpr auto VerticalBox_1 = 0x290; // UVerticalBox*
		constexpr auto Name = 0x298; // FText
		constexpr auto OnClicked = 0x2b0; // FMulticastInlineDelegate
		constexpr auto SelectedIndex = 0x2c0; // int32_t
	}

	namespace n_UMissionTabWidget {
		constexpr auto _tabNameText = 0x278; // UTextBlock*
		constexpr auto _backgroundImage = 0x280; // UImage*
		constexpr auto _sizeBox = 0x288; // USizeBox*
		constexpr auto _tabName = 0x290; // FText
		constexpr auto _activeTabHeight = 0x2a8; // float
		constexpr auto _inactiveTabHeight = 0x2ac; // float
		constexpr auto _activeFontSize = 0x2b0; // float
		constexpr auto _inactiveFontSize = 0x2b4; // float
		constexpr auto _activeBackgroundTexture = 0x2b8; // UTexture2D*
		constexpr auto _inactiveBackgroundTexture = 0x2c0; // UTexture2D*
		constexpr auto _activeFontColor = 0x2c8; // FLinearColor
		constexpr auto _inactiveFontColor = 0x2d8; // FLinearColor
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UUI_ChangeTextWidget_C {
		constexpr auto UberGraphFrame = 0x338; // FPointerToUberGraphFrame
		constexpr auto AcceptButton = 0x340; // UButton*
		constexpr auto Image_1 = 0x348; // UImage*
		constexpr auto Image_2 = 0x350; // UImage*
		constexpr auto InputText = 0x358; // UEditableText*
		constexpr auto MaxInputCharacters = 0x360; // int32_t
		constexpr auto _isEnabled = 0x364; // bool
		constexpr auto _currentText = 0x368; // FText
	}

	namespace n_UUI_Metabolism_TreatmentPanel_C {
		constexpr auto RecoveryBackground = 0x298; // UImage*
		constexpr auto StabilizationBackground = 0x2a0; // UImage*
		constexpr auto UntreatedBackground = 0x2a8; // UImage*
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_AFishingAttachmentHook {
		constexpr auto _visibilityFactor = 0x7e0; // float
		constexpr auto _maxTension = 0x7e4; // float
		constexpr auto _hookedWeight = 0x7e8; // float
		constexpr auto _hookedFishTransform = 0x7f0; // FTransform
		constexpr auto _hookedFishMesh = 0x820; // UStaticMeshComponent*
		constexpr auto _hookedFishHookPositionName = 0x828; // FName
		constexpr auto _checkIfFishIsHookedRate = 0x830; // float
		constexpr auto _timeToLooseTheFishWhenHookBitten = 0x834; // float
		constexpr auto _movingRippleParticleSystemComponent = 0x838; // UParticleSystemComponent*
		constexpr auto _splashParticleSystemComponent = 0x840; // UParticleSystemComponent*
	}

	namespace n_UDemolitionSkill {
		constexpr auto NoSkillParameters = 0xa8; // FDemolitionSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0x120; // FDemolitionSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0x198; // FDemolitionSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0x210; // FDemolitionSkillParametersPerSkillLevel
		constexpr auto AboveAdvancedSkillParameters = 0x288; // FDemolitionSkillParametersPerSkillLevel
	}

	namespace n_UAdminLight {
		constexpr auto _intensityVersusTimeOfDay = 0x360; // UCurveFloat*
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_AItem {
		constexpr auto DebugTextChanged = 0x2b0; // FMulticastInlineDelegate
		constexpr auto PickedUpState = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnStaticMeshChanged = 0x2d0; // FMulticastInlineDelegate
		constexpr auto OnSkeletalMeshChanged = 0x2e0; // FMulticastInlineDelegate
		constexpr auto Mesh = 0x300; // UStaticMeshComponent*
		constexpr auto ThrowingComponent = 0x328; // UThrowingComponent*
		constexpr auto _caption = 0x330; // FText
		constexpr auto _description = 0x348; // FText
		constexpr auto _uses = 0x360; // int32_t
		constexpr auto _health = 0x364; // float
		constexpr auto _maxHealth = 0x368; // float
		constexpr auto _defaultMaxHealth = 0x36c; // float
		constexpr auto _weight = 0x370; // float
		constexpr auto _initialWeightUsed = 0x374; // float
		constexpr auto _maxWaterWeightAsRatioOfWeight = 0x378; // float
		constexpr auto _choppingRecipeDataAsset = 0x380; // UChoppingRecipeDataAsset*
		constexpr auto _shouldBeMaintained = 0x388; // bool
		constexpr auto _canBeDropped = 0x389; // bool
		constexpr auto _canBeVisibleInVicinity = 0x38a; // bool
		constexpr auto _canPlaceItemsOn = 0x38b; // bool
		constexpr auto _overrideSkeletalMesh = 0x390; // USkeletalMesh*
		constexpr auto _overrideSkeletalMeshRelativeTransform = 0x3a0; // FTransform
		constexpr auto _ifExhausted = 0x3d0; // EItemExhausted
		constexpr auto _resourceAmountUsedPerWash = 0x3d4; // float
		constexpr auto _inventoryIcon = 0x3d8; // UTexture2D*
		constexpr auto _inventoryIconInHands = 0x3e0; // UTexture2D*
		constexpr auto _outsideInventoryIcon = 0x3e8; // UTexture2D*
		constexpr auto _sizeX = 0x3f0; // uint32_t
		constexpr auto _sizeY = 0x3f4; // uint32_t
		constexpr auto _inventoryWhiteList = 0x3f8; // TArray<UBaseItemTag*>
		constexpr auto _inventoryBlackList = 0x408; // TArray<UBaseItemTag*>
		constexpr auto _maxContainedWeight = 0x418; // float
		constexpr auto _canContainNonEmptyItems = 0x41c; // bool
		constexpr auto _isIgnoredBySpawners = 0x41d; // bool
		constexpr auto _spawnTimeoutPerPlayer = 0x420; // FFloatInterval
		constexpr auto _itemLocation = 0x428; // FItemLocation
		constexpr auto _rarity = 0x436; // EItemRarity
		constexpr auto _itemSpawnTypes = 0x438; // FGameplayTagContainer
		constexpr auto _itemSpawnGroup = 0x458; // FGameplayTag
		constexpr auto _spawnLocationOffset = 0x460; // FVector
		constexpr auto _spawnRotationOffset = 0x46c; // FRotator
		constexpr auto _spawnRotationRandomization = 0x478; // float
		constexpr auto _shouldOverrideUsageWhenSpawnedBySpawners = 0x47c; // bool
		constexpr auto _initialUsageWhenSpawnedBySpawners = 0x480; // float
		constexpr auto _randomizeUsageWhenSpawnedBySpawners = 0x484; // float
		constexpr auto _itemTags = 0x488; // TArray<UBaseItemTag*>
		constexpr auto _ownedItemTags = 0x498; // TArray<UBaseItemTag*>
		constexpr auto _noiseLevel = 0x4a8; // ENoiseLevel
		constexpr auto _motionNoise = 0x4b0; // FItemMotionNoise
		constexpr auto _inventoryHandlingSound = 0x4b8; // UAkAudioEvent*
		constexpr auto _destroyedSound = 0x4c0; // UAkAudioEvent*
		constexpr auto _craftingInteraction = 0x4c8; // EInteractionType
		constexpr auto _defaultCraftingParts = 0x4d0; // TArray<FCraftingPart>
		constexpr auto _damageOnUse = 0x4e0; // float
		constexpr auto _damageOverTime = 0x4e4; // float
		constexpr auto _autoDestructTime = 0x4e8; // float
		constexpr auto _allowContainedItemsDecay = 0x4ec; // bool
		constexpr auto _shouldDestroyContainedItemsOnDestroyEvent = 0x4f4; // bool
		constexpr auto _minTemperatureForHeatDamage = 0x4f8; // float
		constexpr auto _containedDamageStartPercentage = 0x4fc; // float
		constexpr auto _damageResponseFactor = 0x500; // float
		constexpr auto _attachmentSocketMountType = 0x508; // UAttachmentSocketMountType*
		constexpr auto _attachmentSockets = 0x510; // TArray<FAttachmentSocket>
		constexpr auto _holsterAttachmentSocketMountType = 0x520; // UAttachmentSocketMountType*
		constexpr auto _attachmentSocketsOffset = 0x528; // TMap<UAttachmentSocketMountType*, FAttachmentSocketOffset>
		constexpr auto _enableGlowOnBeginPlay = 0x578; // bool
		constexpr auto _enableAwarenessGlow = 0x579; // bool
		constexpr auto _enableHoverGlow = 0x57a; // bool
		constexpr auto _placementMeshOverride = 0x580; // UStaticMesh*
		constexpr auto _staticMeshHolsterOverride = 0x588; // UStaticMesh*
		constexpr auto _skeletalMeshHolsterOverride = 0x590; // USkeletalMesh*
		constexpr auto _hasHighLoadPriorityInVirtualization = 0x598; // bool
		constexpr auto _virtualizationDistanceOffset = 0x59c; // float
		constexpr auto _canEverBeVirtualized = 0x5a0; // bool
		constexpr auto _isSubjectToAllowMinesConfig = 0x5a2; // bool
		constexpr auto _resultHealthMultiplierWhenCraftingIngredient = 0x5a4; // float
		constexpr auto _preferredDamagePerUpdate = 0x5a8; // float
		constexpr auto _itemUniqueIdOverride = 0x5ac; // FGuid
		constexpr auto _useHandCorrections = 0x5bc; // bool
		constexpr auto _vicinityCheckDistance = 0x5c0; // float
		constexpr auto _stackableClasses = 0x5c8; // TArray<UObject*>
		constexpr auto _maxNumOfStacks = 0x5d8; // int32_t
		constexpr auto _bloodDryingSpeed = 0x5dc; // float
		constexpr auto _stackData = 0x5e0; // FItemStackData
		constexpr auto _craftingPartsData = 0x5f8; // TArray<UItemStateBase*>
		constexpr auto _skeletalMeshComponent = 0x610; // USkeletalMeshComponent*
		constexpr auto _weightUsed = 0x61c; // float
		constexpr auto _entityId = 0x620; // FDbIntegerId
		constexpr auto _itemUniqueId = 0x628; // FGuid
		constexpr auto _itemComponents = 0x668; // TArray<UItemComponent*>
		constexpr auto _attachParentObject = 0x678; // AActor*
		constexpr auto _visibilityReplication = 0x680; // FVisibilityReplication
		constexpr auto _uncraftTime = 0x6c4; // float
		constexpr auto _replicatedState = 0x6c8; // uint64_t
		constexpr auto _flagsReplicated = 0x6d1; // char
		constexpr auto _tempSceneComponent = 0x6f8; // USceneComponent*
		constexpr auto _expirationTime = 0x708; // int64_t
		constexpr auto _stacks = 0x710; // TArray<FInventoryStackData>
		constexpr auto _stackExhaustedSuccessorItem = 0x720; // AItem*
		constexpr auto _parentContainer = 0x728; // TScriptInterface<IInventoryContainer>
		constexpr auto _parentInventoryNode = 0x738; // TScriptInterface<IInventoryNode>
		constexpr auto _craftingParts = 0x778; // TArray<FCraftingPart>
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_UPrisonerRestingComponent {
		constexpr auto _restingData = 0xc0; // FPrisonerRestingData
		constexpr auto _restingDataAutonomous = 0xd0; // FPrisonerRestingDataAutonomous
	}

	namespace n_AProjectile {
		constexpr auto StaticMesh = 0x220; // UStaticMeshComponent*
		constexpr auto RotationFollowsVelocity = 0x228; // bool
		constexpr auto AddImpulseOnHit = 0x229; // bool
		constexpr auto ImpulseMultiplier = 0x22c; // float
		constexpr auto MaxImpulse = 0x230; // float
		constexpr auto ImpactEffects = 0x238; // UProjectileImpactEffects*
		constexpr auto ProjectileData = 0x240; // FProjectileData
		constexpr auto MeshScaleStartLocal = 0x290; // float
		constexpr auto MeshScaleRangeLocal = 0x294; // float
		constexpr auto MeshScaleMinLocal = 0x298; // float
		constexpr auto MeshScaleMaxLocal = 0x29c; // float
		constexpr auto MeshScaleStart = 0x2a0; // float
		constexpr auto MeshScaleRange = 0x2a4; // float
		constexpr auto MeshScaleMin = 0x2a8; // float
		constexpr auto MeshScaleMax = 0x2ac; // float
		constexpr auto TraceScaleMultiplier = 0x2b0; // float
		constexpr auto GravityScale = 0x2b4; // float
		constexpr auto Sharpness = 0x2b8; // float
		constexpr auto FlyByAudioEvent = 0x2c0; // UAkAudioEvent*
		constexpr auto ColorMaterialParameterName = 0x2c8; // FName
		constexpr auto InitialColor = 0x2d0; // FLinearColor
		constexpr auto FinalColor = 0x2e0; // FLinearColor
		constexpr auto MaxHitCount = 0x2f0; // int32_t
		constexpr auto NoiseLoudnessOnHit = 0x2f4; // float
		constexpr auto IgnoreCallingWeaponsFiringEffects = 0x2f8; // bool
		constexpr auto ExperienceMultiplier = 0x2fc; // float
		constexpr auto ShouldForceStopWhenNoVelocity = 0x300; // bool
		constexpr auto CanEverCollide = 0x301; // bool
		constexpr auto WaterSplashParticleSystem = 0x308; // UParticleSystem*
		constexpr auto _useFixedTimestep = 0x328; // bool
		constexpr auto _fixedTimestep = 0x32c; // float
		constexpr auto _zeroRange = 0x348; // int32_t
		constexpr auto _windage = 0x34c; // float
		constexpr auto _distanceTraveled = 0x350; // float
		constexpr auto _meshScaleFactor = 0x354; // float
		constexpr auto _offsetFromBarrel = 0x378; // float
		constexpr auto _randomSeed = 0x380; // int32_t
		constexpr auto _doNotForceInitialReplication = 0x3d8; // bool
		constexpr auto _muzzleVelocity = 0x3dc; // float
		constexpr auto _createdOnServer = 0x3e0; // bool
		constexpr auto _halfAngle = 0x3e4; // float
		constexpr auto _weaponFiringModeWhenShot = 0x408; // EWeaponFiringMode
		constexpr auto _firedShotDescriptionRep = 0x410; // FFiredShotDescriptionRep
	}

	namespace n_UImplicitOffsetProperties {
		constexpr auto Smoothness = 0x60; // float
		constexpr auto bPreserveUVs = 0x64; // bool
	}

	namespace n_UItemClassWidget {
		constexpr auto _itemClass = 0x278; // AItem*
	}

	namespace n_AChristmasGhost {
		constexpr auto _possibleGifts = 0x220; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _giftSpawnParticles = 0x230; // TSoftObjectPtr<UParticleSystem>
		constexpr auto _giftSpawnAudioEvent = 0x258; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto _giftSpawnParticlesRelativeTransform = 0x280; // FTransform
	}

	namespace n_ASentry2 {
		constexpr auto _pelvisBoneName = 0x7c8; // FName
		constexpr auto _eyesViewPointSocketName = 0x7d0; // FName
		constexpr auto _longRangeWeaponSocketName = 0x7d8; // FName
		constexpr auto _longRangeWeaponBoneName = 0x7ec; // FName
		constexpr auto _beginPlayAudioEvent = 0x7f8; // UAkAudioEvent*
		constexpr auto _fireBulletAudioEvent = 0x800; // UAkAudioEvent*
		constexpr auto _startHighFireRateAttack = 0x808; // UAkAudioEvent*
		constexpr auto _endHighFireRateAttack = 0x810; // UAkAudioEvent*
		constexpr auto _reloadAudioEvent = 0x818; // UAkAudioEvent*
		constexpr auto _deathAudioEvent = 0x820; // UAkAudioEvent*
		constexpr auto _freezeWarningAudioEvent = 0x828; // UAkAudioEvent*
		constexpr auto _dropWeaponsRaiseHandsAudioEvent = 0x830; // UAkAudioEvent*
		constexpr auto _walkAwayAudioEvent = 0x838; // UAkAudioEvent*
		constexpr auto _beginCombatAudioEvent = 0x840; // UAkAudioEvent*
		constexpr auto _reloadMontageLongRangeWeapon = 0x848; // UAnimMontage*
		constexpr auto _deathMontage = 0x850; // UAnimMontage*
		constexpr auto _kickMontages = 0x858; // TArray<UAnimMontage*>
		constexpr auto _gunsLerpFactor = 0x868; // float
		constexpr auto _projectileClass = 0x888; // AProjectile*
		constexpr auto _sentryMovementComponent = 0x898; // USentryMovementComponent*
		constexpr auto _hitReactComponent = 0x8a0; // UHitReactComponent*
		constexpr auto _maxHealth = 0x8ac; // float
		constexpr auto _armorDamageReductionExplosion = 0x8b8; // float
		constexpr auto _armorDamageReductionCollision = 0x8bc; // float
		constexpr auto _dataPerBodyPart = 0x8c0; // FBodyPartData [0xc]
		constexpr auto _sentryStance = 0x9b0; // ESentryStance
		constexpr auto _shouldAimWeapon = 0x9b1; // bool
		constexpr auto _longRangeWeaponFireRate = 0x9b4; // float
		constexpr auto _longRangeWeaponHalfAngleDegrees = 0x9b8; // float
		constexpr auto _maxAmmunitionLongRangeWeapon = 0x9bc; // int32_t
		constexpr auto _maxAmmunitionMediumRangeWeapon = 0x9c4; // int32_t
		constexpr auto _longRangeWeaponSpreadHalfAngle = 0x9cc; // float
		constexpr auto _mediumRangeWeaponFireRate = 0x9d0; // float
		constexpr auto _mediumRangeWeaponHalfAngleDegrees = 0x9d4; // float
		constexpr auto _mediumRangeWeaponActivationDistance = 0x9d8; // float
		constexpr auto _meleeAttackRate = 0x9dc; // float
		constexpr auto _meleeAttackActivationDistance = 0x9e0; // float
		constexpr auto _isAimAtTargetOverriden = 0x9e8; // bool
		constexpr auto _weaponOverrideAimLocationRep = 0x9ec; // FVector
		constexpr auto _patrolPoints = 0xa20; // TArray<FSentryPatrolPoint>
		constexpr auto _muzzlePS = 0xa30; // UParticleSystem*
		constexpr auto _muzzlePSC = 0xa38; // UParticleSystemComponent*
		constexpr auto _muzzleEffectsScaleDistanceStart = 0xa40; // float
		constexpr auto _muzzleEffectsScaleDistanceRange = 0xa44; // float
		constexpr auto _muzzleEffectsScaleByDistanceFactor = 0xa48; // float
		constexpr auto _spotlightLeftMesh = 0xa50; // UStaticMeshComponent*
		constexpr auto _spotlightRightMesh = 0xa58; // UStaticMeshComponent*
		constexpr auto _spotlight = 0xa60; // USpotLightComponent*
		constexpr auto _normalLightColor = 0xa68; // FColor
		constexpr auto _alertedLightColor = 0xa6c; // FColor
		constexpr auto _combatLightColor = 0xa70; // FColor
		constexpr auto _spottingPercentage = 0xa80; // float
		constexpr auto _stompShakeEffectRadius = 0xa84; // float
		constexpr auto _stompShakeMaxEffectRadius = 0xa88; // float
		constexpr auto _stompShakeEffectFalloffExponent = 0xa8c; // float
		constexpr auto _stompCameraShake = 0xa90; // UMatineeCameraShake*
		constexpr auto _laserMeshComponent = 0xa98; // UStaticMeshComponent*
		constexpr auto _shouldDrawLongRangeWeaponLaser = 0xaa0; // bool
		constexpr auto _autoSaveInterval = 0xab0; // float
		constexpr auto _shouldSaveAndLoadSentry = 0xab8; // bool
		constexpr auto _foe = 0xad0; // TWeakObjectPtr<APawn>
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UUI_TeamInvitationWidget_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto Accept = 0x2a8; // UButton*
		constexpr auto AcceptButton = 0x2b0; // UButton*
		constexpr auto AcceptText = 0x2b8; // UTextBlock*
		constexpr auto Decline = 0x2c0; // UButton*
		constexpr auto DeclineButton = 0x2c8; // UButton*
		constexpr auto DeclineText = 0x2d0; // UTextBlock*
		constexpr auto InvitationMessage = 0x2d8; // UTextBlock*
		constexpr auto InvitationTextBlock = 0x2e0; // UTextBlock*
		constexpr auto MainResizableWindow = 0x2e8; // UResizableWindow_C*
		constexpr auto TimerText = 0x2f0; // UTextBlock*
		constexpr auto TimeoutTimer = 0x2f8; // FTimerHandle
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x448; // FColor
		constexpr auto ArrowSize = 0x44c; // float
		constexpr auto ArrowLength = 0x450; // float
		constexpr auto ScreenSize = 0x454; // float
		constexpr auto bIsScreenSizeScaled = 0x458; // char : 1
		constexpr auto bTreatAsASprite = 0x458; // char : 1
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UPinchBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto bPerpDamping = 0x6c; // bool
	}

	namespace n_ASoundEmitter {
		constexpr auto AudioEvent = 0x220; // UAkAudioEvent*
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x448; // UModel*
		constexpr auto BrushBodySetup = 0x450; // UBodySetup*
	}

	namespace n_UUI_Metabolism_STATS_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMetabolismSkillProgressionPanel {
		constexpr auto SkillProgressBarWidgetClass = 0x260; // UUserWidget*
		constexpr auto _tabRow = 0x268; // UTabGroup*
		constexpr auto _tabButtonClass = 0x270; // UTabButton*
		constexpr auto _attributeSwitcher = 0x278; // UWidgetSwitcher*
		constexpr auto _STR_tab = 0x280; // UMetabolismSkillProgressionTab*
		constexpr auto _CON_tab = 0x288; // UMetabolismSkillProgressionTab*
		constexpr auto _DEX_tab = 0x290; // UMetabolismSkillProgressionTab*
		constexpr auto _INT_tab = 0x298; // UMetabolismSkillProgressionTab*
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULevelUpNotification_C {
		constexpr auto LevelUpAnimation = 0x2e0; // UWidgetAnimation*
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_USharkAnimInstance {
		constexpr auto _mouthTargetName = 0x2c8; // FName
		constexpr auto _mouthMorphValueChangePerSecond = 0x2d0; // float
		constexpr auto _teethTargetName = 0x2d4; // FName
		constexpr auto _teethMorphValueChangePerSecond = 0x2dc; // float
		constexpr auto _eyesTargetName = 0x2e0; // FName
		constexpr auto _eyesMorphValueChangePerSecond = 0x2e8; // float
		constexpr auto _velocity = 0x2ec; // FVector
		constexpr auto _angularVelocityYaw = 0x2f8; // float
		constexpr auto _angularVelocityPitch = 0x2fc; // float
		constexpr auto _behaviorMode = 0x300; // EFishBehavior
		constexpr auto _isAlive = 0x301; // bool
	}

	namespace n_ADrone {
		constexpr auto _engineAudioEvent = 0x798; // UAkAudioEvent*
		constexpr auto _engineStopAudioEvent = 0x7a0; // UAkAudioEvent*
		constexpr auto _speedSteps = 0x7a8; // TArray<float>
		constexpr auto _movementInertiaAI = 0x7b8; // float
		constexpr auto _movementRotationSpeedExpFactor = 0x7bc; // float
		constexpr auto _engineParticlesChangeSpeedExpFactor = 0x7c0; // float
		constexpr auto _engineVolumeFromSpeed = 0x7c8; // UCurveFloat*
		constexpr auto _movementBreathingInterval = 0x7d0; // float
		constexpr auto _movementBreathingIntensity = 0x7d4; // float
		constexpr auto _selfDestructParticles = 0x7d8; // UParticleSystem*
		constexpr auto _smokeParticles = 0x7e0; // UParticleSystem*
		constexpr auto _smokeParticleSystemComponent = 0x7e8; // UParticleSystemComponent*
		constexpr auto _selfDestructAudioEvent = 0x7f0; // UAkAudioEvent*
		constexpr auto _currentSpeedStep = 0x810; // char
		constexpr auto _movementInertia = 0x814; // float
		constexpr auto _cameraMesh = 0x820; // UStaticMeshComponent*
		constexpr auto _engineParticlesM = 0x828; // UParticleSystemComponent*
		constexpr auto _engineParticlesML = 0x830; // UParticleSystemComponent*
		constexpr auto _engineParticlesMR = 0x838; // UParticleSystemComponent*
		constexpr auto _engineParticlesLL = 0x840; // UParticleSystemComponent*
		constexpr auto _engineParticlesLR = 0x848; // UParticleSystemComponent*
		constexpr auto _lightComponent = 0x850; // USpotLightComponent*
		constexpr auto _health = 0x894; // float
	}

	namespace n_UUI_CollapsableContainer_C {
		constexpr auto _contentSlot = 0x7b0; // UNamedSlot*
	}

	namespace n_ASlidingDoorDestructible {
		constexpr auto ClosedPositionComponent = 0x408; // USceneComponent*
		constexpr auto OpenPositionComponent = 0x410; // USceneComponent*
	}

	namespace n_UMinigameConfiguration {
		constexpr auto MinigameClass = 0x28; // AMinigame*
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x470; // UPaperFlipbook*
		constexpr auto Material = 0x478; // UMaterialInterface*
		constexpr auto PlayRate = 0x480; // float
		constexpr auto bLooping = 0x484; // char : 1
		constexpr auto bReversePlayback = 0x484; // char : 1
		constexpr auto bPlaying = 0x484; // char : 1
		constexpr auto AccumulatedTime = 0x488; // float
		constexpr auto CachedFrameIndex = 0x48c; // int32_t
		constexpr auto SpriteColor = 0x490; // FLinearColor
		constexpr auto CachedBodySetup = 0x4a0; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4a8; // FMulticastInlineDelegate
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_ACharacterSpawningManager {
		constexpr auto _spawnableCharacters = 0x220; // TArray<FPawnCharacterInfo>
		constexpr auto _managerProcessUpdateTime = 0x230; // float
		constexpr auto _spawnUpdateTime = 0x234; // float
		constexpr auto _spawnTriggerGroupUpdateTime = 0x238; // float
		constexpr auto _spawnTriggerGroupRadius = 0x23c; // float
		constexpr auto _spawnTriggerGroupProximityQueryRadius = 0x240; // float
		constexpr auto _interiorSearchDistanceThreshold = 0x244; // float
		constexpr auto _exteriorSpawnerGroupsSpawnCooldownTimeSP = 0x248; // float
		constexpr auto _interiorSpawnerGroupsSpawnCooldownTimeSP = 0x24c; // float
		constexpr auto _exteriorSpawnerGroupsSpawnCooldownTimeMP = 0x250; // float
		constexpr auto _interiorSpawnerGroupsSpawnCooldownTimeMP = 0x254; // float
		constexpr auto _baseElementQueryDistance = 0x258; // float
		constexpr auto _exteriorSpawnerGroupsProbabilityMP = 0x25c; // float
		constexpr auto _interiorSpawnerGroupsProbabilityMP = 0x260; // float
		constexpr auto _exteriorSpawnerGroupsProbabilitySP = 0x264; // float
		constexpr auto _interiorSpawnerGroupsProbabilitySP = 0x268; // float
		constexpr auto _disableSerialization = 0x26c; // bool
		constexpr auto _startSpawnerGroupCooldownAfterSpawning = 0x26d; // bool
		constexpr auto _startSpawnerGroupCooldownAfterEnteringInterior = 0x26e; // bool
		constexpr auto _referencedPawnClasses = 0x3c8; // TSet<APawn*>
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UPrisonerThrowComponent {
		constexpr auto _throwingState = 0xc0; // EThrowingState
		constexpr auto _itemToThrow = 0xc4; // TWeakObjectPtr<AItem>
	}

	namespace n_UTabButtonAlertable {
		constexpr auto _alertedTextColorHandle = 0xc60; // FDataTableRowHandle
		constexpr auto _alertedBackgroundColorHandle = 0xc70; // FDataTableRowHandle
		constexpr auto _blinkSpeed = 0xc80; // float
	}

	namespace n_ABP_WeaponBullet_ShotgunBird_C {
		constexpr auto UberGraphFrame = 0x428; // FPointerToUberGraphFrame
	}

	namespace n_U590A1_Reload_Event_Chamber_C {
		constexpr auto UberGraphFrame = 0xa0; // FPointerToUberGraphFrame
		constexpr auto LoadedAmmoCount = 0xa8; // int32_t
		constexpr auto MaxAmmoCount = 0xac; // int32_t
	}

	namespace n_UTakeInHandsAssetData {
		constexpr auto AttachmentSocketMountType = 0x30; // UAttachmentSocketMountType*
		constexpr auto GripSocketName = 0x38; // FName
		constexpr auto SupportingHandIKSocketName = 0x40; // FName
		constexpr auto TakeInHandsMontage = 0x48; // UAnimMontage*
		constexpr auto RemoveFromHandsMontage = 0x50; // UAnimMontage*
		constexpr auto MeleeSkillAnimationsPreset = 0x58; // UMeleeSkillAnimationsPreset*
		constexpr auto HandsCorrectionssData = 0x60; // UHandsCorrectionsData*
		constexpr auto FirstPersonAnimationsData = 0x68; // UItemFirstPersonAnimationsDataAsset*
		constexpr auto MovementSpeedModifier = 0x70; // float
		constexpr auto SwimmingMovementSpeedModifier = 0x74; // float
		constexpr auto DivingMovementSpeedModifier = 0x78; // float
		constexpr auto BuoyancyMultiplier = 0x7c; // float
		constexpr auto ShouldActionConstrainStance = 0x80; // bool
		constexpr auto ShouldActionConstrainMove = 0x81; // bool
		constexpr auto ShouldActionConstrainTurn = 0x82; // bool
		constexpr auto ShouldActionForceStance = 0x83; // bool
		constexpr auto ActionStance = 0x84; // EPrisonerStance
		constexpr auto ActionStanceFlag = 0x85; // EStanceChangeFlag
		constexpr auto IsCarried = 0x86; // bool
		constexpr auto StanceWhileCarrying = 0x87; // EPrisonerStance
		constexpr auto CarryStanceFlag = 0x88; // EStanceChangeFlag
		constexpr auto ShouldDropWhenEnteringCombatMode = 0x89; // bool
		constexpr auto MaxPaceWhileCarrying = 0x8a; // EPrisonerMovementPace
		constexpr auto CarryItemIdleAnimationFP = 0x90; // UAnimSequenceBase*
		constexpr auto CarryItemIdleAnimationTP = 0x98; // UAnimSequenceBase*
		constexpr auto PlayerLongThrowMontage = 0xa0; // UAnimMontage*
		constexpr auto PlayerLongThrowLoopMontage = 0xa8; // UAnimMontage*
		constexpr auto PlayerShortThrowMontage = 0xb0; // UAnimMontage*
		constexpr auto PlayerThrowbackMontage = 0xb8; // UAnimMontage*
		constexpr auto ThrowingItemToWeaponMontage = 0xc0; // UAnimMontage*
		constexpr auto WeaponToThrowingItemMontage = 0xc8; // UAnimMontage*
		constexpr auto ThrowingAnimationSets = 0xd0; // TMap<EThrowingAnimationType, FThrowingAnimationSet>
		constexpr auto MaxObstructedDepenetrationDepth = 0x120; // float
		constexpr auto MaxObstructedDepenetrationDepthProne = 0x124; // float
		constexpr auto LeftObstructedIdleAnimationFP = 0x128; // UAnimSequenceBase*
		constexpr auto RightObstructedIdleAnimationFP = 0x130; // UAnimSequenceBase*
		constexpr auto ObstructedIdleAnimationTP = 0x138; // UAnimSequenceBase*
		constexpr auto ObstructedIdleAnimationProneTP = 0x140; // UAnimSequenceBase*
	}

	namespace n_USpawnScreen {
		constexpr auto Screen = 0x278; // UOverlay*
		constexpr auto _mainMenuButton = 0x280; // UButton*
		constexpr auto _messageBoxPanel = 0x288; // UVerticalBox*
	}

	namespace n_UUI_QuickAccessItemWidget_C {
		constexpr auto UberGraphFrame = 0x370; // FPointerToUberGraphFrame
		constexpr auto AdditionalIconFadeOut = 0x378; // UWidgetAnimation*
		constexpr auto AdditionalIconFadeIn = 0x380; // UWidgetAnimation*
		constexpr auto BlinkingBackground = 0x388; // UWidgetAnimation*
		constexpr auto LowerLeftBoxFadeOut = 0x390; // UWidgetAnimation*
		constexpr auto LowerLeftBoxFadeIn = 0x398; // UWidgetAnimation*
		constexpr auto _imageBackground = 0x3a0; // UImage*
		constexpr auto AmmoIcon = 0x3a8; // UImage*
		constexpr auto LeftSquareBracketImage = 0x3b0; // UImage*
		constexpr auto Overlay_5 = 0x3b8; // UOverlay*
		constexpr auto RightSquareBracketImage = 0x3c0; // UImage*
		constexpr auto SizeBox_1 = 0x3c8; // USizeBox*
		constexpr auto TextBlockItemSlotNumber = 0x3d0; // UTextBlock*
		constexpr auto TextColor = 0x3d8; // FLinearColor
		constexpr auto _itemSlotNumber = 0x3e8; // FText
		constexpr auto _alarmColor = 0x400; // FLinearColor
	}

	namespace n_ABP_Survival_Blueprints_FillShelter_Objective_C {
		constexpr auto DefaultSceneRoot = 0x368; // USceneComponent*
	}

	namespace n_ABP_WeaponBullet_cal22_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UProjectileImpactEffects {
		constexpr auto MinDecalSize = 0x30; // float
		constexpr auto MaxDecalSize = 0x34; // float
		constexpr auto MinDecalLifetime = 0x38; // float
		constexpr auto MaxDecalLifetime = 0x3c; // float
		constexpr auto DecalFadeFactor = 0x40; // float
		constexpr auto ParticleEffectsInitialScale = 0x44; // float
		constexpr auto ParticleEffectsScaleDistanceStart = 0x48; // float
		constexpr auto ParticleEffectsScaleDistanceRange = 0x4c; // float
		constexpr auto ParticleEffectsScaleByDistanceFactor = 0x50; // float
		constexpr auto BulletPenetrationExitParticlesDaytime = 0x58; // UParticleSystem*
		constexpr auto BulletPenetrationExitParticlesNighttime = 0x60; // UParticleSystem*
		constexpr auto DayTimePenetrationDecal = 0x68; // UMaterial*
		constexpr auto NightTimePenetrationDecal = 0x70; // UMaterial*
		constexpr auto AudioEvent = 0x78; // UAkAudioEvent*
		constexpr auto Default = 0x80; // FImpactEffectData
		constexpr auto grass = 0x90; // FImpactEffectData
		constexpr auto ForrestGroundCoastal = 0xa0; // FImpactEffectData
		constexpr auto ForrestGroundContinental = 0xb0; // FImpactEffectData
		constexpr auto Rock = 0xc0; // FImpactEffectData
		constexpr auto Stone = 0xd0; // FImpactEffectData
		constexpr auto Gravel = 0xe0; // FImpactEffectData
		constexpr auto GravelBeach = 0xf0; // FImpactEffectData
		constexpr auto Pebbles = 0x100; // FImpactEffectData
		constexpr auto Snow = 0x110; // FImpactEffectData
		constexpr auto Ice = 0x120; // FImpactEffectData
		constexpr auto Sand = 0x130; // FImpactEffectData
		constexpr auto Asphalt = 0x140; // FImpactEffectData
		constexpr auto Dirt = 0x150; // FImpactEffectData
		constexpr auto Water = 0x160; // FImpactEffectData
		constexpr auto WaterOcean = 0x170; // FImpactEffectData
		constexpr auto Cloth = 0x180; // FImpactEffectData
		constexpr auto Metal = 0x190; // FImpactEffectData
		constexpr auto Aluminium = 0x1a0; // FImpactEffectData
		constexpr auto Concrete = 0x1b0; // FImpactEffectData
		constexpr auto Brick = 0x1c0; // FImpactEffectData
		constexpr auto Wood = 0x1d0; // FImpactEffectData
		constexpr auto Plastic = 0x1e0; // FImpactEffectData
		constexpr auto Rubber = 0x1f0; // FImpactEffectData
		constexpr auto Glass = 0x200; // FImpactEffectData
		constexpr auto Folliage = 0x210; // FImpactEffectData
		constexpr auto Bark = 0x220; // FImpactEffectData
		constexpr auto Flesh = 0x230; // FImpactEffectData
		constexpr auto RoofTile = 0x240; // FImpactEffectData
		constexpr auto CeramicsTiles = 0x250; // FImpactEffectData
		constexpr auto Scrap = 0x260; // FImpactEffectData
		constexpr auto Trunk = 0x270; // FImpactEffectData
		constexpr auto Leaves = 0x280; // FImpactEffectData
		constexpr auto Cardboard = 0x290; // FImpactEffectData
		constexpr auto Plaster = 0x2a0; // FImpactEffectData
		constexpr auto Kevlar = 0x2b0; // FImpactEffectData
		constexpr auto ForceField = 0x2c0; // FImpactEffectData
		constexpr auto NoEffect = 0x2d0; // FImpactEffectData
	}

	namespace n_UUI_InspectedItem_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x298; // UImage*
		constexpr auto ComponentOrToolImage = 0x2a0; // UImage*
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UUI_HoverPanelWidget_C {
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto ContentBox = 0x280; // UVerticalBox*
	}

	namespace n_UDrawPolygonToolSnapProperties {
		constexpr auto bEnableSnapping = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
		constexpr auto bSnapToVertices = 0x62; // bool
		constexpr auto bSnapToEdges = 0x63; // bool
		constexpr auto bSnapToAngles = 0x64; // bool
		constexpr auto bSnapToLengths = 0x65; // bool
		constexpr auto SegmentLength = 0x68; // float
		constexpr auto bHitSceneObjects = 0x6c; // bool
		constexpr auto HitNormalOffset = 0x70; // float
	}

	namespace n_UConZVehicleAnimInstance {
		constexpr auto EngineState = 0xa38; // EVehicleEngineState
		constexpr auto IsEngineRunning = 0xa39; // bool
		constexpr auto EngineRpm = 0xa3c; // float
		constexpr auto EngineRpmInterpSpeed = 0xa40; // float
		constexpr auto Speed = 0xa44; // float
		constexpr auto SpeedKph = 0xa48; // float
		constexpr auto MaxSteeringWheelSteerAngle = 0xa4c; // float
		constexpr auto SteeringWheelSteerAngleInterpSpeed = 0xa50; // float
		constexpr auto CurrentSteeringWheelSteerAngle = 0xa54; // float
		constexpr auto DoorOpenPercentage = 0xa58; // TArray<float>
		constexpr auto DoorWindowOpenPercentage = 0xa68; // TArray<float>
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UUI_CraftingAvailableItem_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto _itemImage = 0x2a8; // UImage*
		constexpr auto AdditionalComponentImage = 0x2b0; // UImage*
		constexpr auto BackgroundImage = 0x2b8; // UImage*
		constexpr auto CountText = 0x2c0; // UTextBlock*
		constexpr auto MainRetainerBox = 0x2c8; // URetainerBox*
		constexpr auto UI_Border = 0x2d0; // UUI_Border_C*
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_AClothesItem {
		constexpr auto _inventoryComponent = 0x7c0; // UInventoryItemComponent*
		constexpr auto _clothesType = 0x7c8; // EClothesType
		constexpr auto _equipmentLayer = 0x7c9; // char
		constexpr auto _warmth = 0x7cc; // uint32_t
		constexpr auto _clothesTypesToUnequip = 0x7d0; // TArray<EClothesType>
		constexpr auto _clothesTypesToHide = 0x7e0; // TArray<EClothesType>
		constexpr auto _waterResistance = 0x7f0; // uint32_t
		constexpr auto _inwardsWaterPropagationFactor = 0x7f4; // float
		constexpr auto _outwardsWaterPropagationFactor = 0x7f8; // float
		constexpr auto _camouflageBonus = 0x7fc; // float
		constexpr auto _damageWhenEquipped = 0x800; // float
		constexpr auto _dirtinessWhenEquipped = 0x804; // float
		constexpr auto _thermalConductivityFactor = 0x808; // float
		constexpr auto _canBeEquipped = 0x80c; // bool
		constexpr auto _dirtiness = 0x810; // float
		constexpr auto _smallMaterialDamageLimit = 0x814; // float
		constexpr auto _bigMaterialDamageLimit = 0x818; // float
		constexpr auto _femaleEquippedStaticMesh = 0x820; // UStaticMesh*
		constexpr auto _maleEquippedStaticMesh = 0x828; // UStaticMesh*
		constexpr auto _femaleEquippedSkeletalMesh = 0x830; // USkeletalMesh*
		constexpr auto _maleEquippedSkeletalMesh = 0x838; // USkeletalMesh*
		constexpr auto _femaleEquippedMaterialsOverride = 0x840; // TArray<UMaterialInstance*>
		constexpr auto _maleEquippedMaterialsOverride = 0x850; // TArray<UMaterialInstance*>
		constexpr auto _coversWrists = 0x860; // bool
		constexpr auto _hidesHair = 0x861; // bool
		constexpr auto _hidesFacialHair = 0x862; // bool
		constexpr auto _maxFemaleHairLength = 0x864; // float
		constexpr auto _maxMaleHairLength = 0x868; // float
		constexpr auto _maxFacialHairLength = 0x86c; // float
		constexpr auto _bellyJiggleMultiplier = 0x870; // float
		constexpr auto _breastJiggleMultiplier = 0x874; // float
		constexpr auto _armor = 0x878; // uint32_t
		constexpr auto _hardness = 0x87c; // float
		constexpr auto _projectileHitEnergyAbsorption = 0x880; // float
		constexpr auto _projectileHitEnergyDamagedAbsorption = 0x884; // float
		constexpr auto _energyThroughputRatio = 0x888; // float
		constexpr auto _totalEnergyAbsorption = 0x88c; // float
		constexpr auto _sharpMeleeDamageReduction = 0x890; // float
		constexpr auto _bluntMeleeDamageReduction = 0x894; // float
		constexpr auto _capacityX = 0x898; // uint32_t
		constexpr auto _capacityY = 0x89c; // uint32_t
		constexpr auto _clothesModifierTags = 0x8a8; // TArray<UClothesModifierItemTag*>
		constexpr auto _meshOverridesForModifiers = 0x8b8; // TMap<UClothesModifierItemTag*, FClothesMeshPair>
		constexpr auto _materialParametersReplicated = 0x908; // char
		constexpr auto _inventoryContainer2D = 0x918; // UInventoryContainer2D*
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_ABP_Survival_Storage_CraftStoneAxe_Objective_C {
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
	}

	namespace n_UHandPanel3 {
		constexpr auto _handInventory = 0x278; // UHandsHolstersWidget2*
		constexpr auto _holsterInventory0 = 0x280; // UHandsHolstersWidget2*
		constexpr auto _holsterInventory1 = 0x288; // UHandsHolstersWidget2*
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto UpperHemisphereColor = 0x258; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x268; // float
		constexpr auto Contrast = 0x26c; // float
		constexpr auto OcclusionExponent = 0x270; // float
		constexpr auto MinOcclusion = 0x274; // float
		constexpr auto OcclusionTint = 0x278; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x27c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x280; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x284; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x288; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x28c; // float
		constexpr auto OcclusionCombineMode = 0x290; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x348; // UTextureCube*
	}

	namespace n_UMetabolismLeftPanel {
		constexpr auto _tabRow = 0x260; // UTabGroup*
		constexpr auto _mainTabSwitcher = 0x268; // UWidgetSwitcher*
		constexpr auto _statsPanel = 0x270; // UMetabolismStatsPanel*
		constexpr auto _statsName = 0x278; // FText
		constexpr auto _healthPanel = 0x290; // UMetabolismHealthPanel*
		constexpr auto _healthName = 0x298; // FText
		constexpr auto _buttonWidgetClass = 0x2b0; // UTabButtonAlertable*
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UContainerItemDescriptor {
		constexpr auto _itemClass = 0x48; // UObject*
		constexpr auto _data = 0x68; // FContainerItemDescriptorData
		constexpr auto _owningContainer = 0xa8; // TScriptInterface<IInventoryContainer>
		constexpr auto _owningNode = 0xb8; // TScriptInterface<IInventoryNode>
		constexpr auto _firstReplication = 0xc8; // bool
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UMeshAnalysisProperties {
		constexpr auto SurfaceArea = 0x60; // FString
		constexpr auto Volume = 0x70; // FString
	}

	namespace n_AWeaponHolsterItem {
		constexpr auto _holsteredWeaponRep = 0x928; // AWeapon*
		constexpr auto _maxLocationSocketName = 0x930; // FName
		constexpr auto _minLocationSocketName = 0x938; // FName
		constexpr auto _fatLocationSocketName = 0x940; // FName
		constexpr auto _leanLocationSocketName = 0x948; // FName
		constexpr auto _staticMeshSocketName = 0x950; // FName
	}

	namespace n_ABP_Survival_Tutorial_CraftWoodenSpearObjective_C {
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UKelvinBrushProperties {
		constexpr auto FalloffDistance = 0x60; // float
		constexpr auto Stiffness = 0x64; // float
		constexpr auto Incompressiblity = 0x68; // float
		constexpr auto BrushSteps = 0x6c; // int32_t
	}

	namespace n_UIterativeOffsetProperties {
		constexpr auto Steps = 0x60; // int32_t
		constexpr auto bOffsetBoundaries = 0x64; // bool
		constexpr auto SmoothingPerStep = 0x68; // float
		constexpr auto bReprojectSmooth = 0x6c; // bool
	}

	namespace n_URuntimeAudioImporterLibrary {
		constexpr auto OnProgress = 0x28; // FMulticastInlineDelegate
		constexpr auto OnResult = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDLSSSettings {
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_ADropZoneCargo {
		constexpr auto slot = 0x288; // UChildActorComponent*
	}

	namespace n_UWindowsContent_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto _parentWindow = 0x2a0; // UCustomGUIWindow_C*
		constexpr auto _childrenWindows = 0x2a8; // TArray<UCustomGUIWindow_C*>
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_UChainsawState {
		constexpr auto CurrentFuelAmount = 0xf8; // float
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x450; // TArray<FNavigationLink>
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UMetabolismPerformanceDataPanel {
		constexpr auto _apb_Stamina = 0x260; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_WeightLoad = 0x268; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_WalkSpeed = 0x270; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_JogSpeed = 0x278; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_RunSpeed = 0x280; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_HealingSpeed = 0x288; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_BloodRecoveryRate = 0x290; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_ImmuneSystem = 0x298; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_PerformanceScore = 0x2a0; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_StealthFactor = 0x2a8; // UMetabolismAdvancedProgressBar*
		constexpr auto _apb_MeleeDamage = 0x2b0; // UMetabolismAdvancedProgressBar*
		constexpr auto _csd_ConsumptionRecoveryResting = 0x2b8; // UMetabolismCurrentStatDark*
		constexpr auto _csd_ConsumptionRecoveryIdle = 0x2c0; // UMetabolismCurrentStatDark*
		constexpr auto _csd_ConsumptionRecoveryEasy = 0x2c8; // UMetabolismCurrentStatDark*
		constexpr auto _csd_ConsumptionRecoveryDemanding = 0x2d0; // UMetabolismCurrentStatDark*
		constexpr auto _csd_ConsumptionRecoveryVeryDemanding = 0x2d8; // UMetabolismCurrentStatDark*
		constexpr auto _csd_ConsumptionRecoveryExtremelyDemanding = 0x2e0; // UMetabolismCurrentStatDark*
		constexpr auto _csd_OverloadPenaltyEnergy = 0x2e8; // UMetabolismCurrentStatDark*
		constexpr auto _csd_OverloadPenaltyWater = 0x2f0; // UMetabolismCurrentStatDark*
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x88; // char : 1
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto randomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UMultiTransformer {
		constexpr auto GizmoManager = 0x70; // UInteractiveGizmoManager*
		constexpr auto TransformGizmo = 0xe0; // UTransformGizmo*
		constexpr auto TransformProxy = 0xe8; // UTransformProxy*
	}

	namespace n_UFailurePenalty {
		constexpr auto _shouldExecuteOnClients = 0x28; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_A1H_Wrench_Pipe_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UAdminCommand_RemovePrisonerBodyEffect {
		constexpr auto _bodyEffectClass = 0x80; // UPrisonerBodyEffect*
	}

	namespace n_UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription {
		constexpr auto ProxyForReplenishableResource = 0x90; // UGameResourceContainerProxyForReplenishableResource*
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_ULiveLinkPreset {
		constexpr auto Sources = 0x28; // TArray<FLiveLinkSourcePreset>
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectPreset>
	}

	namespace n_USelfUnionMeshesToolProperties {
		constexpr auto bAttemptFixHoles = 0x60; // bool
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bTrimFlaps = 0x62; // bool
		constexpr auto WindingNumberThreshold = 0x68; // double
		constexpr auto bOnlyUseFirstMeshMaterials = 0x70; // bool
	}

	namespace n_UCurveControlPointsMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto PreviewGeometryActor = 0x4e8; // APreviewGeometryActor*
		constexpr auto DrawnControlPoints = 0x4f0; // UPointSetComponent*
		constexpr auto DrawnControlSegments = 0x4f8; // ULineSetComponent*
		constexpr auto PreviewPoint = 0x500; // UPointSetComponent*
		constexpr auto PreviewSegment = 0x508; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x588; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x590; // UTransformGizmo*
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UAmmunitionBoxItemState {
		constexpr auto AmmoCount = 0xf8; // int32_t
	}

	namespace n_UMeshSpaceDeformerTool {
		constexpr auto SelectedOperationType = 0xc0; // ENonlinearOperationType
		constexpr auto UpperBoundsInterval = 0xc4; // float
		constexpr auto LowerBoundsInterval = 0xc8; // float
		constexpr auto ModifierPercent = 0xcc; // float
		constexpr auto bSnapToWorldGrid = 0xd0; // bool
		constexpr auto StateTarget = 0xd8; // UGizmoTransformChangeStateTarget*
		constexpr auto Preview = 0xe8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto GizmoCenter = 0x110; // FVector
		constexpr auto GizmoOrientation = 0x120; // FQuat
		constexpr auto IntervalGizmo = 0x130; // UIntervalGizmo*
		constexpr auto TransformGizmo = 0x138; // UTransformGizmo*
		constexpr auto TransformProxy = 0x140; // UTransformProxy*
		constexpr auto UpIntervalSource = 0x148; // UGizmoLocalFloatParameterSource*
		constexpr auto DownIntervalSource = 0x150; // UGizmoLocalFloatParameterSource*
		constexpr auto ForwardIntervalSource = 0x158; // UGizmoLocalFloatParameterSource*
	}

	namespace n_AWeaponAttachment {
		constexpr auto _staticMeshWhenAttached = 0x7c8; // UStaticMesh*
	}

	namespace n_ADeathmatchLocationMarker {
		constexpr auto DeathmatchParameters = 0x418; // FDeathmatchParameters
		constexpr auto FocusOffset = 0x42c; // FVector
		constexpr auto MinimalRadius = 0x438; // float
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UPolyEditSetUVProperties {
		constexpr auto bShowMaterial = 0x60; // bool
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UMetabolismCurrentStatLight {
		constexpr auto Title = 0x260; // FText
		constexpr auto _valueBackground = 0x278; // UImage*
		constexpr auto _title = 0x280; // UTextBlock*
		constexpr auto _value = 0x288; // URichTextBlock*
		constexpr auto _normalBackgroundColor = 0x290; // FDataTableRowHandle
		constexpr auto _alertedBackgroundColor = 0x2a0; // FDataTableRowHandle
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UPrisonerActionEatItem {
		constexpr auto _startEatingAudioEvent = 0x108; // UAkAudioEvent*
		constexpr auto _stopEatingAudioEvent = 0x110; // UAkAudioEvent*
		constexpr auto _itemClass = 0x118; // AFoodItem*
	}

	namespace n_UPrisonerAnimInstance_Parachute {
		constexpr auto _defaultOpeningAnimation = 0x2b8; // UAnimSequence*
		constexpr auto _openingAnimation = 0x2c0; // UAnimSequence*
		constexpr auto _openingAnimationTime = 0x2c8; // float
	}

	namespace n_UPrisonerMusicPlayerComponent {
		constexpr auto _musicRootFolder = 0xc0; // FName
		constexpr auto _volumeChangeRate = 0xc8; // float
		constexpr auto _fileSizeLimitInMB = 0xd0; // int64_t
		constexpr auto _turnOnAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto _turnOffAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto _importerLibrary = 0xe8; // URuntimeAudioImporterLibrary*
		constexpr auto _audioComponent = 0xf0; // UAudioComponent*
		constexpr auto _radioComponent = 0xf8; // URadioComponent*
		constexpr auto _playingSoundWave = 0x100; // TWeakObjectPtr<UImportedSoundWave>
	}

	namespace n_UTimedTriggerComponentState {
		constexpr auto CountdownRemainingTime = 0x28; // float
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UFishingTrophyWidget {
		constexpr auto _fishNameText = 0x290; // UTextBlock*
		constexpr auto _fishWeightText = 0x298; // UTextBlock*
		constexpr auto _fishSizeText = 0x2a0; // UTextBlock*
		constexpr auto _keepFishHotkeyText = 0x2a8; // UTextBlock*
		constexpr auto _releaseFishHotkeyText = 0x2b0; // UTextBlock*
		constexpr auto _keepButton = 0x2b8; // UButton*
		constexpr auto _releaseButton = 0x2c0; // UButton*
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_AZombie_01_Left_Arm_C {
		constexpr auto MeleeAttackCollisionCapsule = 0x7f0; // UMeleeAttackCollisionCapsule*
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_AConZCharacter {
		constexpr auto CorpseClass = 0x4f8; // ACorpse*
		constexpr auto ChoppingRecipeDataAsset = 0x500; // UChoppingRecipeDataAsset*
		constexpr auto IterativeChopping = 0x508; // bool
		constexpr auto ItemRepresentation = 0x510; // AItem*
		constexpr auto HeadBoneName = 0x518; // FName
		constexpr auto BodyPartByBoneName = 0x520; // TMap<FName, EBodyPart>
		constexpr auto HeadHeight = 0x570; // float
		constexpr auto TorsoHeight = 0x574; // float
		constexpr auto ShouldAutoUpdateEnvironmentDescription = 0x578; // bool
		constexpr auto EnvironmentDescriptionAutoUpdateInterval = 0x57c; // float
		constexpr auto EnteredIndoorEnvironmentAudioEvent = 0x580; // UAkAudioEvent*
		constexpr auto EnteredOutdoorEnvironmentAudioEvent = 0x588; // UAkAudioEvent*
		constexpr auto EnteredUndergroundAudioEvent = 0x590; // UAkAudioEvent*
		constexpr auto LeftUndergroundAudioEvent = 0x598; // UAkAudioEvent*
		constexpr auto _kockoutChanceModifier = 0x5c0; // float
		constexpr auto SoundComponent = 0x5c8; // UCharacterSoundComponent*
		constexpr auto _gender = 0x5f0; // EGender
		constexpr auto _physicsDominanceGroup = 0x610; // EConZPxDominanceGroup
		constexpr auto _activeHitTimeToLive = 0x614; // float
		constexpr auto _hitDamageVsVehicleSpeedInKph = 0x618; // UCurveFloat*
		constexpr auto _effectsOnVehicleHit = 0x620; // FHitEffects [0x5]
		constexpr auto _physicsAssetOnServer = 0x748; // UPhysicsAsset*
		constexpr auto _aiTeam = 0x750; // EAITeam
		constexpr auto _actionsList = 0x758; // TArray<UCharacterAction*>
		constexpr auto _characterActionPlayRateMultiplier = 0x788; // float
		constexpr auto _grappleActionComponent = 0x790; // UGrappleActionComponent*
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UPerformanceMonitor_C {
		constexpr auto MinimizableWidgetPerformanceMonitor = 0x2f8; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetPerformanceStats = 0x300; // UMinimizableWidget_C*
		constexpr auto MinimizableWidgetSkillModifiers = 0x308; // UMinimizableWidget_C*
		constexpr auto _isAlarmOn = 0x310; // bool
	}

	namespace n_APETBottle01_C {
		constexpr auto RainCollector = 0x920; // URainCollectorComponent*
	}

	namespace n_AWeaponScope_Dragunov_C {
		constexpr auto ScopeViewCollision = 0x950; // UDummyCollisionCapsule*
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto circleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto circleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UDisplaceMeshCommonProperties {
		constexpr auto DisplacementType = 0x60; // EDisplaceMeshToolDisplaceType
		constexpr auto DisplaceIntensity = 0x64; // float
		constexpr auto randomSeed = 0x68; // int32_t
		constexpr auto Subdivisions = 0x6c; // int32_t
		constexpr auto WeightMap = 0x70; // FName
		constexpr auto WeightMapsList = 0x78; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x88; // bool
		constexpr auto bDisableSizeWarning = 0x89; // bool
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UDrawPolygonTool {
		constexpr auto PolygonProperties = 0x88; // UDrawPolygonToolStandardProperties*
		constexpr auto SnapProperties = 0x90; // UDrawPolygonToolSnapProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0x150; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
		constexpr auto HeightMechanic = 0x540; // UPlaneDistanceFromHitMechanic*
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UBuriableItemComponentState {
		constexpr auto IsBuried = 0x40; // bool
		constexpr auto BurierUserId = 0x48; // FDbIntegerId
	}

	namespace n_ULargeAquaticAnimalSpeciesData {
		constexpr auto AnimalClass = 0x30; // ALargeAquaticAnimal*
		constexpr auto RequiredDepthForSpawning = 0x38; // float
		constexpr auto SpawningWaterType = 0x3c; // EConZWaterSplineType
	}

	namespace n_UCraftingDatabase {
		constexpr auto CraftableItems = 0x30; // TArray<UCraftableItem*>
		constexpr auto AssetPaths = 0x40; // TArray<FString>
		constexpr auto CookableTag = 0x50; // UCraftingItemTag*
		constexpr auto SmokableTag = 0x58; // UCraftingItemTag*
		constexpr auto OpenItemTag = 0x60; // UCraftingItemTag*
		constexpr auto LightFireTag = 0x68; // UCraftingItemTag*
		constexpr auto ConservedFoodTag = 0x70; // UCraftingItemTag*
		constexpr auto IngredientsGroup = 0x78; // UItemGroup*
		constexpr auto IngredientsGroupPaths = 0x80; // TArray<FString>
		constexpr auto IngredientsExcludePaths = 0x90; // TArray<FString>
		constexpr auto _itemsByTags = 0xa0; // TMap<UCraftingItemTag*, FItemClassesArray>
	}

	namespace n_UPrisonerBodyCondition_StomachEmpty {
		constexpr auto _stomachEmptinessToExist = 0xa8; // float
		constexpr auto _energyRatioToExist = 0xac; // float
		constexpr auto _stomachGrowlingSymptomClass = 0xb0; // UPrisonerBodySymptom_StomachGrowling*
		constexpr auto _stomachGrowlingSymptomSoundInterval = 0xb8; // float
		constexpr auto _stomachGrowlingSymptomCause = 0xc0; // UPrisonerBodySymptomCause_StomachGrowling*
	}

	namespace n_UUI_MissionResultWidget_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto MissionResultAnimation = 0x288; // UWidgetAnimation*
		constexpr auto _resultTitleBackground = 0x290; // UImage*
		constexpr auto _spaceFillerImage = 0x298; // UImage*
	}

	namespace n_USimpleDynamicMeshComponent {
		constexpr auto TangentsType = 0x4b8; // EDynamicMeshTangentCalcType
		constexpr auto bInvalidateProxyOnChange = 0x4b9; // bool
		constexpr auto bExplicitShowWireframe = 0x4f0; // bool
		constexpr auto bDrawOnTop = 0x540; // bool
	}

	namespace n_URunningSkill {
		constexpr auto NoSkillParameters = 0xc0; // FRunningSkillParametersPerSkillLevel
		constexpr auto BasicSkillParameters = 0xd0; // FRunningSkillParametersPerSkillLevel
		constexpr auto MediumSkillParameters = 0xe0; // FRunningSkillParametersPerSkillLevel
		constexpr auto AdvancedSkillParameters = 0xf0; // FRunningSkillParametersPerSkillLevel
	}

	namespace n_UConZAssetManager {
		constexpr auto _imageAssetsToLoad = 0x458; // TArray<FImageAssetToLoad>
		constexpr auto _prisonerResponseIdleCDOs = 0x4b8; // TArray<UPrisonerResponseIdle*>
		constexpr auto _autoAddablePrisonerBodyEffectCDOs = 0x4d0; // TArray<UPrisonerBodyEffect*>
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_USentryAnimInstance2 {
		constexpr auto InterpolationSpeed = 0x2b8; // float
		constexpr auto BlendInTime = 0x2bc; // float
		constexpr auto BlendOutTime = 0x2c0; // float
		constexpr auto GunsLerpFactor = 0x2c4; // float
		constexpr auto ShouldUseLUWalkStopAnimation = 0x2c8; // bool
		constexpr auto stoppingDistance = 0x2cc; // float
		constexpr auto _isSentryCompletelyInitialized = 0x314; // bool
		constexpr auto _shouldAimWeapon = 0x315; // bool
		constexpr auto _wantsToMove = 0x316; // bool
		constexpr auto _previousWantsToMove = 0x317; // bool
		constexpr auto _movementPace = 0x318; // ESentryMovementPace2
		constexpr auto _actualCourseAngle = 0x31c; // float
		constexpr auto _desiredCourseAngle = 0x320; // float
		constexpr auto _desiredCoursePitchAngle = 0x324; // float
		constexpr auto _angularVelocity = 0x328; // float
		constexpr auto _velocity = 0x32c; // FVector
		constexpr auto _speed = 0x338; // float
		constexpr auto _forwardVector = 0x33c; // FVector
		constexpr auto _isFalling = 0x348; // bool
		constexpr auto _isDead = 0x349; // bool
		constexpr auto _gunsLookAtLocation = 0x34c; // FVector
	}

	namespace n_UItemFirstPersonAnimationsDataAsset {
		constexpr auto UpperBody = 0x30; // FItemFirstPersonUpperBodyAnimationsData
		constexpr auto AimOffsetStanding = 0x80; // UBlendSpace*
		constexpr auto AimOffsetCrouching = 0x88; // UBlendSpace*
		constexpr auto AimOffsetProne = 0x90; // UBlendSpace*
	}

	namespace n_UUI_PlacedPlaceableIcon_C {
		constexpr auto Image_bg_black = 0x260; // UImage*
		constexpr auto Image_bg_white = 0x268; // UImage*
		constexpr auto Image_icon = 0x270; // UImage*
		constexpr auto _icon = 0x278; // UTexture2D*
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_URevolveBoundaryOperatorFactory {
		constexpr auto RevolveBoundaryTool = 0x30; // URevolveBoundaryTool*
	}

	namespace n_ABP_WeaponBullet_762x54FMJ_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
	}

	namespace n_UScrollableContent_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto InputChatLine = 0x2c0; // UEditableTextBox*
		constexpr auto InputLineOverlay = 0x2c8; // UOverlay*
		constexpr auto SafeZone_1 = 0x2d0; // USafeZone*
		constexpr auto Scroll = 0x2d8; // UScrollBox*
		constexpr auto _messageStrings = 0x2e0; // TArray<FText>
		constexpr auto _color = 0x2f0; // FLinearColor
		constexpr auto _defaultTitle = 0x300; // FText
		constexpr auto TextArray = 0x318; // TArray<FText>
	}

	namespace n_UOceanCollisionComponent {
		constexpr auto CachedBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UGameResourceType {
		constexpr auto ResourceName = 0x28; // FText
		constexpr auto ConfigSectionName = 0x40; // FString
		constexpr auto CanWashWith = 0x50; // bool
		constexpr auto CanPutOutFireWith = 0x51; // bool
		constexpr auto Color = 0x54; // FLinearColor
		constexpr auto ConsumptionData = 0x68; // UGameResourceConsumptionData*
	}

	namespace n_UUI_SquadConfirmation_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AcceptButton = 0x268; // UButton*
		constexpr auto CancelButton = 0x270; // UButton*
		constexpr auto DialogText = 0x278; // UExtendedRichTextBlock*
		constexpr auto OnConfirm = 0x280; // FMulticastInlineDelegate
		constexpr auto OnCancel = 0x290; // FMulticastInlineDelegate
		constexpr auto TextFormat = 0x2a0; // FText
		constexpr auto TextStyle = 0x2b8; // FTextBlockStyle
		constexpr auto Color = 0x528; // FSlateColor
	}

	namespace n_UMetabolism_ICU_GraphWidget_ST {
		constexpr auto TimeStretchCurveCurve = 0x218; // UCurveFloat*
	}

	namespace n_UGameResourceItemTag {
		constexpr auto ResourceType = 0x30; // UGameResourceType*
		constexpr auto SocketTypes = 0x38; // FGameplayTagContainer
		constexpr auto ResourceAmountPerUse = 0x58; // float
		constexpr auto RequiredItemTagsForFueling = 0x60; // TArray<UBaseItemTag*>
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x6a0; // UObject*
		constexpr auto AnimClass = 0x6a8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6b0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6b8; // UAnimInstance*
		constexpr auto AnimationData = 0x6c0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6e8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6f4; // FVector
		constexpr auto LinkedInstances = 0x730; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x750; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8b0; // float
		constexpr auto KinematicBonesUpdateType = 0x8b4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8b5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8b7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8b9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8b9; // char : 1
		constexpr auto bHasValidBodies = 0x8b9; // char : 1
		constexpr auto bBlendPhysics = 0x8b9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8b9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8b9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8ba; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8c0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8c0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8c0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8c0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8c1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8c1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8c1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8c1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8c1; // char : 1
		constexpr auto bPauseAnims = 0x8c1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8c1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8c2; // char : 1
		constexpr auto bForceRefpose = 0x8c2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bOldForceRefPose = 0x8c2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8c2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8c2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8c2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8c3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8c3; // char : 1
		constexpr auto bUseBendingElements = 0x8c3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8c3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8c3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8c3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8c3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8c3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8c4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8c4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8c4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8c6; // uint16_t
		constexpr auto MassMode = 0x8c8; // EClothMassMode
		constexpr auto UniformMass = 0x8cc; // float
		constexpr auto TotalMass = 0x8d0; // float
		constexpr auto Density = 0x8d4; // float
		constexpr auto MinPerParticleMass = 0x8d8; // float
		constexpr auto ClothBlendWeight = 0x8dc; // float
		constexpr auto EdgeStiffness = 0x8e0; // float
		constexpr auto BendingStiffness = 0x8e4; // float
		constexpr auto AreaStiffness = 0x8e8; // float
		constexpr auto VolumeStiffness = 0x8ec; // float
		constexpr auto StrainLimitingStiffness = 0x8f0; // float
		constexpr auto ShapeTargetStiffness = 0x8f4; // float
		constexpr auto bWaitForParallelClothTask = 0x8f8; // bool
		constexpr auto DisallowedAnimCurves = 0x900; // TArray<FName>
		constexpr auto BodySetup = 0x910; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x920; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x930; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0xa08; // float
		constexpr auto TeleportRotationThreshold = 0xa0c; // float
		constexpr auto LastPoseTickFrame = 0xa18; // uint32_t
		constexpr auto ClothingInteractor = 0xa70; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb40; // FMulticastInlineDelegate
	}

	namespace n_UItemActionSequenceLoadMagazine {
		constexpr auto _loadedAmmoCount = 0x88; // int32_t
	}

}