namespace off {
	constexpr auto GNames = 0x4bf5140;
	constexpr auto GObjects = 0x4c0d6d8;
	constexpr auto GWorld = 0x4d42f18;

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UIconAbilityCooldownWBP_Doppelganger_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeIn_1 = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto BG = 0x278; // UImage*
		constexpr auto BG_2 = 0x280; // UImage*
		constexpr auto BG_3 = 0x288; // UImage*
		constexpr auto BG_4 = 0x290; // UImage*
		constexpr auto Border_AbilityIcon = 0x298; // UBorder*
		constexpr auto Border_AbilityIcon_2 = 0x2a0; // UBorder*
		constexpr auto Border_AbilityIcon_3 = 0x2a8; // UBorder*
		constexpr auto Border_AbilityIcon_4 = 0x2b0; // UBorder*
		constexpr auto Border_AbilityIcon_5 = 0x2b8; // UBorder*
		constexpr auto Image_122 = 0x2c0; // UImage*
		constexpr auto TextBlock = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_2 = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_3 = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_106 = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_162 = 0x2e8; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x2f0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Main = 0x2f8; // UWidgetSwitcher*
		constexpr auto Material INstance = 0x300; // UMaterialInstanceDynamic*
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_ASurvParticleActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
		constexpr auto Niagara = 0x230; // UNiagaraComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UWallhackSpell_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UPlayFabDataAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xf8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x100; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x108; // UPlayFabJsonObject*
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_ALootBox_Totems_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto TextRender = 0x230; // UTextRenderComponent*
		constexpr auto Arrow = 0x238; // UArrowComponent*
		constexpr auto CurseSound = 0x240; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x248; // UPointLightComponent*
		constexpr auto FMODAudio4 = 0x250; // UFMODAudioComponent*
		constexpr auto FMODAudio3 = 0x258; // UFMODAudioComponent*
		constexpr auto InteractCollision = 0x260; // UBoxComponent*
		constexpr auto ParticleOpen = 0x268; // UParticleSystemComponent*
		constexpr auto ParticleClosed = 0x270; // UParticleSystemComponent*
		constexpr auto Scene1 = 0x278; // USceneComponent*
		constexpr auto PointLight = 0x280; // UPointLightComponent*
		constexpr auto ParticleBase = 0x288; // UParticleSystemComponent*
		constexpr auto FMODAudio2 = 0x290; // UFMODAudioComponent*
		constexpr auto FMODAudio1 = 0x298; // UFMODAudioComponent*
		constexpr auto FmodAudio = 0x2a0; // UFMODAudioComponent*
		constexpr auto Cap = 0x2a8; // UStaticMeshComponent*
		constexpr auto Scene = 0x2b0; // USceneComponent*
		constexpr auto Lock = 0x2b8; // UStaticMeshComponent*
		constexpr auto tongue = 0x2c0; // UStaticMeshComponent*
		constexpr auto Box = 0x2c8; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x2d0; // USceneComponent*
		constexpr auto T_LightPulse_Intensity_FDAE247148A61669465908BE102DB5B9 = 0x2d8; // float
		constexpr auto T_LightPulse__Direction_FDAE247148A61669465908BE102DB5B9 = 0x2dc; // ETimelineDirection
		constexpr auto T_LightPulse = 0x2e0; // UTimelineComponent*
		constexpr auto T_InsideShine_Intensity_B318E2E24D3F5812EA6F75B10D59070F = 0x2e8; // float
		constexpr auto T_InsideShine__Direction_B318E2E24D3F5812EA6F75B10D59070F = 0x2ec; // ETimelineDirection
		constexpr auto T_InsideShine = 0x2f0; // UTimelineComponent*
		constexpr auto T_OpenLootbox_OpenCap_383669F64A375D9D3F478AB6EA717C80 = 0x2f8; // float
		constexpr auto T_OpenLootbox_OpenTongue_383669F64A375D9D3F478AB6EA717C80 = 0x2fc; // float
		constexpr auto T_OpenLootbox__Direction_383669F64A375D9D3F478AB6EA717C80 = 0x300; // ETimelineDirection
		constexpr auto T_OpenLootbox = 0x308; // UTimelineComponent*
		constexpr auto T_CloseLootbox_CloseTongue_1CEA720B45830E78B1B9ADB7C5AD4184 = 0x310; // float
		constexpr auto T_CloseLootbox_CloseCap_1CEA720B45830E78B1B9ADB7C5AD4184 = 0x314; // float
		constexpr auto T_CloseLootbox__Direction_1CEA720B45830E78B1B9ADB7C5AD4184 = 0x318; // ETimelineDirection
		constexpr auto T_CloseLootbox = 0x320; // UTimelineComponent*
		constexpr auto T_NotEnoughMoney_LockValue_A94628944CABA0FB20D1859EECEFB4F3 = 0x328; // float
		constexpr auto T_NotEnoughMoney__Direction_A94628944CABA0FB20D1859EECEFB4F3 = 0x32c; // ETimelineDirection
		constexpr auto T_NotEnoughMoney = 0x330; // UTimelineComponent*
		constexpr auto bLocked = 0x338; // bool
		constexpr auto NeedPoints = 0x33c; // int32_t
		constexpr auto ItemsName = 0x340; // TArray<FName>
		constexpr auto ItemsChance = 0x350; // TArray<float>
		constexpr auto RarityName = 0x360; // TArray<FName>
		constexpr auto RarityChance = 0x370; // TArray<float>
		constexpr auto GetItemName = 0x380; // FName
		constexpr auto DroppedItem = 0x388; // FName
		constexpr auto TempInt = 0x390; // int32_t
		constexpr auto SpawnedItem = 0x398; // AActor*
		constexpr auto ItemSpawned? = 0x3a0; // bool
		constexpr auto FirstIndex = 0x3a4; // int32_t
		constexpr auto SecondIndex = 0x3a8; // int32_t
		constexpr auto Random = 0x3ac; // float
		constexpr auto GetRarityName = 0x3b0; // FName
		constexpr auto SurvRef = 0x3b8; // ASurvivorMasterBP_C*
		constexpr auto Chek = 0x3c0; // bool
		constexpr auto InsideDynMat = 0x3c8; // UMaterialInstanceDynamic*
		constexpr auto LootDynMat = 0x3d0; // UMaterialInstanceDynamic*
		constexpr auto ItemAccessDenied = 0x3d8; // TArray<bool>
		constexpr auto ItemsAmount = 0x3e8; // TArray<int32_t>
		constexpr auto ItemsAmountDropped = 0x3f8; // TArray<int32_t>
		constexpr auto Cursed = 0x408; // bool
		constexpr auto Opened? = 0x409; // bool
		constexpr auto OpenCount = 0x40c; // int32_t
		constexpr auto CloseCount = 0x410; // int32_t
		constexpr auto Data Table = 0x418; // UDataTable*
		constexpr auto Data Table Medkit = 0x420; // UDataTable*
		constexpr auto Data Table CommonItems = 0x428; // UDataTable*
		constexpr auto ZLocalMin = 0x430; // float
		constexpr auto ZLocal = 0x434; // float
		constexpr auto r3 = 0x438; // TArray<float>
		constexpr auto I = 0x448; // int32_t
		constexpr auto SREF = 0x450; // ASurvivorMasterBP_C*
		constexpr auto CountCoins = 0x458; // int32_t
		constexpr auto C = 0x460; // FText
		constexpr auto IncreaseRare = 0x478; // bool
		constexpr auto PerkBlock? = 0x479; // bool
		constexpr auto NotFoundItem? = 0x47a; // bool
	}

	namespace n_UWB_KeyBindings_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_DefaultCfg = 0x268; // UButton*
		constexpr auto ProgressBar_109 = 0x270; // UProgressBar*
		constexpr auto ScrollBox_Main = 0x278; // UScrollBox*
		constexpr auto TextBlock_6 = 0x280; // UTextBlock*
		constexpr auto Array_Movement = 0x288; // TArray<FName>
		constexpr auto Array_Surv = 0x298; // TArray<FName>
		constexpr auto Array_Killers = 0x2a8; // TArray<FName>
		constexpr auto Array_Spectator = 0x2b8; // TArray<FName>
		constexpr auto Array_Commons = 0x2c8; // TArray<FName>
		constexpr auto DefaultCfgActionKeys = 0x2d8; // FTransCfgInput_ACTION
		constexpr auto DefaultCfgAxisKeys = 0x2e8; // FTransCfgInput_AXIS
		constexpr auto Jump = 0x2f8; // TArray<FInputActionKeyMapping>
		constexpr auto W_MovementHeader = 0x308; // UWB_BindOverlayHeader_C*
		constexpr auto W_MouseSens = 0x310; // UMouseSensivity_C*
		constexpr auto CounterBackspace = 0x318; // float
		constexpr auto TimerHandle = 0x320; // FTimerHandle
		constexpr auto isCounterFull? = 0x328; // bool
		constexpr auto FocusHovered = 0x330; // UWidget*
		constexpr auto BlockedBind = 0x338; // FMulticastInlineDelegate
		constexpr auto Array_Surv+Killer_MapKeys = 0x348; // TMap<FName, FText>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UFMODAudioComponent {
		constexpr auto Event = 0x1f8; // UFMODEvent*
		constexpr auto ParameterCache = 0x200; // TMap<FName, float>
		constexpr auto ProgrammerSoundName = 0x258; // FString
		constexpr auto bEnableTimelineCallbacks = 0x268; // char : 1
		constexpr auto bAutoDestroy = 0x280; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x280; // char : 1
		constexpr auto OnEventStopped = 0x288; // FMulticastInlineDelegate
		constexpr auto OnTimelineMarker = 0x298; // FMulticastInlineDelegate
		constexpr auto OnTimelineBeat = 0x2a8; // FMulticastInlineDelegate
		constexpr auto AttenuationDetails = 0x2b8; // FFMODAttenuationDetails
		constexpr auto OcclusionDetails = 0x2c4; // FFMODOcclusionDetails
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x668; // FWorldPSCPool
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UEOSCoreAuthDeletePersistentAuth {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AHUD_PropHunt_Tutorial_C {
		constexpr auto UberGraphFrame = 0x4b0; // FPointerToUberGraphFrame
		constexpr auto HitMark = 0x4b8; // UWBP_HitMarkComponent_KillerAlarm_C*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UWBP_LastChance_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
		constexpr auto Image_2 = 0x270; // UImage*
		constexpr auto Image_3 = 0x278; // UImage*
		constexpr auto Image_4 = 0x280; // UImage*
		constexpr auto Image_Many_3 = 0x288; // UImage*
		constexpr auto Image_Many_5 = 0x290; // UImage*
		constexpr auto Image_Ref = 0x298; // UImage*
		constexpr auto TextBlock_Count = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_Count_2 = 0x2a8; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x2b0; // UWidgetSwitcher*
		constexpr auto Counter = 0x2b8; // int32_t
		constexpr auto IsHidden = 0x2bc; // bool
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UWBP_BDRush_Killer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto VerticalBox_84 = 0x268; // UVerticalBox*
		constexpr auto W_BDRush = 0x270; // UWBP_EffectBloodLust_C*
	}

	namespace n_AHypnoChairBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto SurvEndPointResque = 0x230; // USceneComponent*
		constexpr auto Cube = 0x238; // UStaticMeshComponent*
		constexpr auto TextRender = 0x240; // UTextRenderComponent*
		constexpr auto CoinScene = 0x248; // USceneComponent*
		constexpr auto BlockLight = 0x250; // USpotLightComponent*
		constexpr auto SurvResquePoint = 0x258; // USceneComponent*
		constexpr auto SurvEndPoint = 0x260; // USceneComponent*
		constexpr auto SurvOnChairStart = 0x268; // USceneComponent*
		constexpr auto Surv'sPlace1 = 0x270; // USceneComponent*
		constexpr auto ToChairStartPoint = 0x278; // USceneComponent*
		constexpr auto OtherSurvPoint = 0x280; // USceneComponent*
		constexpr auto Surv'sPlace = 0x288; // USceneComponent*
		constexpr auto ChairPoint = 0x290; // USceneComponent*
		constexpr auto CurseAudio = 0x298; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x2a0; // UPointLightComponent*
		constexpr auto BP_LightBeam = 0x2a8; // UChildActorComponent*
		constexpr auto PointLight1 = 0x2b0; // UPointLightComponent*
		constexpr auto SpotLight = 0x2b8; // USpotLightComponent*
		constexpr auto Collision = 0x2c0; // UBoxComponent*
		constexpr auto Chair = 0x2c8; // USkeletalMeshComponent*
		constexpr auto PointLight = 0x2d0; // UPointLightComponent*
		constexpr auto Box = 0x2d8; // UBoxComponent*
		constexpr auto DefaultSceneRoot = 0x2e0; // USceneComponent*
		constexpr auto Timeline_3_Alpha_F3F0C8904CBEA5AE70123CBC7FBDFDA4 = 0x2e8; // float
		constexpr auto Timeline_3__Direction_F3F0C8904CBEA5AE70123CBC7FBDFDA4 = 0x2ec; // ETimelineDirection
		constexpr auto Timeline_4 = 0x2f0; // UTimelineComponent*
		constexpr auto Timeline_2_NewTrack_0_0311E6074BB66B2271E34EB9869F9BBA = 0x2f8; // float
		constexpr auto Timeline_2__Direction_0311E6074BB66B2271E34EB9869F9BBA = 0x2fc; // ETimelineDirection
		constexpr auto Timeline_3 = 0x300; // UTimelineComponent*
		constexpr auto Timeline_1_NewTrack_0_966DA6584CA8AA6E67197F92AF48677A = 0x308; // float
		constexpr auto Timeline_1__Direction_966DA6584CA8AA6E67197F92AF48677A = 0x30c; // ETimelineDirection
		constexpr auto Timeline_2 = 0x310; // UTimelineComponent*
		constexpr auto Timeline_0_NewTrack_0_5E3A22F04FF737AFFFB011B0FC191AC8 = 0x318; // float
		constexpr auto Timeline_0__Direction_5E3A22F04FF737AFFFB011B0FC191AC8 = 0x31c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x320; // UTimelineComponent*
		constexpr auto Resque__Direction_580C4035489EA3A3CA303D89E7AED415 = 0x328; // ETimelineDirection
		constexpr auto Resque = 0x330; // UTimelineComponent*
		constexpr auto CloseAll_NewTrack_0_1C99BF13488FF0864006ADB4FDC86585 = 0x338; // float
		constexpr auto CloseAll__Direction_1C99BF13488FF0864006ADB4FDC86585 = 0x33c; // ETimelineDirection
		constexpr auto CloseAll = 0x340; // UTimelineComponent*
		constexpr auto KillingTimeRem = 0x348; // float
		constexpr auto Killing? = 0x34c; // bool
		constexpr auto KillingTime = 0x350; // float
		constexpr auto SurvOnChair = 0x358; // AActor*
		constexpr auto RandomChance = 0x360; // int32_t
		constexpr auto KillerRef = 0x368; // AKillerMasterBP_C*
		constexpr auto AnimSpeed = 0x370; // float
		constexpr auto SurvResque? = 0x374; // bool
		constexpr auto L_hand = 0x378; // float
		constexpr auto R_hand = 0x37c; // float
		constexpr auto L_leg = 0x380; // float
		constexpr auto R_leg = 0x384; // float
		constexpr auto Start? = 0x388; // bool
		constexpr auto OriginalLocation = 0x38c; // FVector
		constexpr auto LocationChangeStart = 0x398; // bool
		constexpr auto LocationChangerTime = 0x39c; // float
		constexpr auto LocationChange? = 0x3a0; // bool
		constexpr auto survToChair = 0x3a8; // ASurvivorMasterBP_C*
		constexpr auto OpenStage = 0x3b0; // int32_t
		constexpr auto Close = 0x3b4; // bool
		constexpr auto Pause = 0x3b5; // bool
		constexpr auto UsePicklock? = 0x3b6; // bool
		constexpr auto Cursed = 0x3b7; // bool
		constexpr auto BoostTime = 0x3b8; // float
		constexpr auto Block = 0x3bc; // bool
		constexpr auto LampMat = 0x3c0; // UMaterialInstanceDynamic*
		constexpr auto backToStartDelay = 0x3c8; // bool
		constexpr auto r3 = 0x3d0; // TArray<float>
		constexpr auto I = 0x3e0; // int32_t
		constexpr auto ZLocalMin = 0x3e4; // float
		constexpr auto ZLocal = 0x3e8; // float
		constexpr auto SREF = 0x3f0; // ASurvivorMasterBP_C*
		constexpr auto CountCoins = 0x3f8; // int32_t
		constexpr auto DeathEffectTime = 0x3fc; // float
		constexpr auto DeathEffectDuration = 0x400; // float
		constexpr auto Float1 = 0x404; // float
		constexpr auto DeathEffectTimer = 0x408; // FTimerHandle
		constexpr auto DynMatArr = 0x410; // TArray<UMaterialInstanceDynamic*>
		constexpr auto Tutorial? = 0x420; // bool
		constexpr auto As Killer Master BP = 0x428; // AKillerMasterBP_C*
		constexpr auto OverlapOtherActor = 0x430; // AActor*
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_Ukeymaster_intro_A_Pose_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x470; // AChaosSolverActor*
		constexpr auto RestCollection = 0x558; // UGeometryCollection*
		constexpr auto InitializationFields = 0x560; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x570; // bool
		constexpr auto ObjectType = 0x578; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x579; // bool
		constexpr auto ClusterGroupIndex = 0x57c; // int32_t
		constexpr auto MaxClusterLevel = 0x580; // int32_t
		constexpr auto DamageThreshold = 0x588; // TArray<float>
		constexpr auto ClusterConnectionType = 0x598; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x59c; // int32_t
		constexpr auto CollisionSampleFraction = 0x5a0; // float
		constexpr auto LinearEtherDrag = 0x5a4; // float
		constexpr auto AngularEtherDrag = 0x5a8; // float
		constexpr auto PhysicalMaterial = 0x5b0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5b8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5bc; // FVector
		constexpr auto InitialAngularVelocity = 0x5c8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5d8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5e0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x630; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x668; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x678; // float
		constexpr auto CachePlayback = 0x67c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x680; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x690; // bool
		constexpr auto bNotifyCollisions = 0x691; // bool
		constexpr auto bEnableReplication = 0x692; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x693; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x694; // int32_t
		constexpr auto RepData = 0x698; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8c8; // UBodySetup*
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_USurvFart_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto Sound = 0x100; // UFMODAudioComponent*
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UW_Banner_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowHide_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_Avatar = 0x270; // UImage*
		constexpr auto Image_AvatarBG = 0x278; // UImage*
		constexpr auto Image_AvatarFrameBG = 0x280; // UImage*
		constexpr auto Image_Banner = 0x288; // UImage*
		constexpr auto RetainerBox_1 = 0x290; // URetainerBox*
		constexpr auto SizeBox_38 = 0x298; // USizeBox*
		constexpr auto TextBlock_Name = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_Tag = 0x2a8; // UTextBlock*
		constexpr auto VerticalBox_text = 0x2b0; // UVerticalBox*
		constexpr auto DataTableBanner = 0x2b8; // TSoftObjectPtr<UDataTable>
		constexpr auto DataTableAvatar = 0x2e0; // TSoftObjectPtr<UDataTable>
		constexpr auto DTTags = 0x308; // TSoftObjectPtr<UDataTable>
		constexpr auto randomnumber = 0x330; // int32_t
		constexpr auto Object_Avatar = 0x338; // UObject*
		constexpr auto Object_Banner = 0x340; // UObject*
		constexpr auto Object_Tag = 0x348; // UObject*
		constexpr auto DefaultBanner = 0x350; // UTexture2D*
	}

	namespace n_ABP_Spectator_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto PostProcess = 0x288; // UPostProcessComponent*
		constexpr auto Camera = 0x290; // UCameraComponent*
		constexpr auto VoipManager = 0x298; // UVoipManagerComponent*
		constexpr auto Sphere1 = 0x2a0; // USphereComponent*
		constexpr auto Sphere = 0x2a8; // UStaticMeshComponent*
		constexpr auto SoundChatSounds = 0x2b0; // USoundChatSounds_C*
		constexpr auto AlarmsWidgetSize = 0x2b8; // UAlarmsWidgetSize_C*
		constexpr auto FootprintComponent = 0x2c0; // UFootprintComponent_C*
		constexpr auto ATPCCamera = 0x2c8; // UATPCCameraComponent*
		constexpr auto DefaultSceneRoot = 0x2d0; // USceneComponent*
		constexpr auto Timeline_0_distance_53E7CC384B3361E71E46DB96F09DA0D2 = 0x2d8; // float
		constexpr auto Timeline_0__Direction_53E7CC384B3361E71E46DB96F09DA0D2 = 0x2dc; // ETimelineDirection
		constexpr auto Timeline_1 = 0x2e0; // UTimelineComponent*
		constexpr auto PlayerIndex = 0x2e8; // int32_t
		constexpr auto SelectedActor = 0x2f0; // AActor*
		constexpr auto Block? = 0x2f8; // bool
		constexpr auto AllowVoice = 0x2f9; // bool
		constexpr auto VoipAudio = 0x300; // UVoipAudioComponent*
		constexpr auto VoiceActive? = 0x308; // bool
		constexpr auto MyCharForIgnore = 0x310; // APawn*
		constexpr auto As HUD Prop Hunt = 0x318; // AHUD_PropHunt_C*
		constexpr auto XAxis = 0x320; // float
		constexpr auto YAxis = 0x324; // float
		constexpr auto BaseLookUpRate = 0x328; // float
		constexpr auto BaseTurnRate = 0x32c; // float
		constexpr auto CustomOffset = 0x330; // FVector
		constexpr auto StandartOffset = 0x33c; // FVector
		constexpr auto Sensivity = 0x348; // float
		constexpr auto YaNajalNaknopky = 0x34c; // bool
		constexpr auto ProgBarTimer = 0x350; // FTimerHandle
		constexpr auto As Survivor Master BP = 0x358; // ASurvivorMasterBP_C*
		constexpr auto MaterialVignette2 = 0x360; // UMaterialInstanceDynamic*
		constexpr auto MaterialBlur = 0x368; // UMaterialInstanceDynamic*
		constexpr auto Invert Mouse Y? = 0x370; // bool
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UFMODEventControlTrack {
		constexpr auto ControlSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UW_BrowserCreateServer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ImageToThobber_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Throbber_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ChangeSwitcher_Anim = 0x278; // UWidgetAnimation*
		constexpr auto BG_2 = 0x280; // UImage*
		constexpr auto BG_3 = 0x288; // UImage*
		constexpr auto BG_4 = 0x290; // UImage*
		constexpr auto BG_5 = 0x298; // UImage*
		constexpr auto Button_6 = 0x2a0; // UButton*
		constexpr auto Button_7 = 0x2a8; // UButton*
		constexpr auto Button_12 = 0x2b0; // UButton*
		constexpr auto Button_13 = 0x2b8; // UButton*
		constexpr auto Button_14 = 0x2c0; // UButton*
		constexpr auto Button_15 = 0x2c8; // UButton*
		constexpr auto Button_16 = 0x2d0; // UButton*
		constexpr auto Button_17 = 0x2d8; // UButton*
		constexpr auto Button_18 = 0x2e0; // UButton*
		constexpr auto Button_98 = 0x2e8; // UButton*
		constexpr auto Button_StartGame = 0x2f0; // UButton*
		constexpr auto CircularThrobber = 0x2f8; // UCircularThrobber*
		constexpr auto CircularThrobber_2 = 0x300; // UCircularThrobber*
		constexpr auto CircularThrobber_3 = 0x308; // UCircularThrobber*
		constexpr auto ComboBoxString = 0x310; // UComboBoxString*
		constexpr auto ComboBoxString_2 = 0x318; // UComboBoxString*
		constexpr auto ComboBoxString_89 = 0x320; // UComboBoxString*
		constexpr auto Image_20 = 0x328; // UImage*
		constexpr auto Image_21 = 0x330; // UImage*
		constexpr auto Image_22 = 0x338; // UImage*
		constexpr auto Image_23 = 0x340; // UImage*
		constexpr auto Image_24 = 0x348; // UImage*
		constexpr auto Image_25 = 0x350; // UImage*
		constexpr auto Image_26 = 0x358; // UImage*
		constexpr auto Image_31 = 0x360; // UImage*
		constexpr auto Image_32 = 0x368; // UImage*
		constexpr auto Image_33 = 0x370; // UImage*
		constexpr auto Image_34 = 0x378; // UImage*
		constexpr auto Image_35 = 0x380; // UImage*
		constexpr auto Image_36 = 0x388; // UImage*
		constexpr auto Image_38 = 0x390; // UImage*
		constexpr auto Image_39 = 0x398; // UImage*
		constexpr auto Image_40 = 0x3a0; // UImage*
		constexpr auto Image_41 = 0x3a8; // UImage*
		constexpr auto Image_42 = 0x3b0; // UImage*
		constexpr auto Image_43 = 0x3b8; // UImage*
		constexpr auto Image_160 = 0x3c0; // UImage*
		constexpr auto Image_188 = 0x3c8; // UImage*
		constexpr auto Image_402 = 0x3d0; // UImage*
		constexpr auto Image_535 = 0x3d8; // UImage*
		constexpr auto Image_651 = 0x3e0; // UImage*
		constexpr auto Image_Button_2 = 0x3e8; // UImage*
		constexpr auto Image_Button_3 = 0x3f0; // UImage*
		constexpr auto Image_Button_4 = 0x3f8; // UImage*
		constexpr auto Image_CG_Icon = 0x400; // UImage*
		constexpr auto Image_MapPreviewImg = 0x408; // UImage*
		constexpr auto Image_Ref = 0x410; // UImage*
		constexpr auto Image_Throbber = 0x418; // UImage*
		constexpr auto SafeZone_2 = 0x420; // USafeZone*
		constexpr auto SafeZone_5 = 0x428; // USafeZone*
		constexpr auto SafeZone_110 = 0x430; // USafeZone*
		constexpr auto SizeBox_8 = 0x438; // USizeBox*
		constexpr auto SizeBox_Update = 0x440; // USizeBox*
		constexpr auto TextBlock = 0x448; // UTextBlock*
		constexpr auto TextBlock_4 = 0x450; // UTextBlock*
		constexpr auto TextBlock_15 = 0x458; // UTextBlock*
		constexpr auto TextBlock_244 = 0x460; // UTextBlock*
		constexpr auto TextBlock_GameMode = 0x468; // UTextBlock*
		constexpr auto TextBlock_MapSelect = 0x470; // UTextBlock*
		constexpr auto TextBlock_ServerType = 0x478; // UTextBlock*
		constexpr auto VisibilityBox = 0x480; // UComboBoxString*
		constexpr auto WBP_CustomComboBox = 0x488; // UWBP_CustomComboBox_C*
		constexpr auto WBP_CustomComboBox_Map = 0x490; // UWBP_CustomComboBox_C*
		constexpr auto WBP_CustomComboBox_ServerType = 0x498; // UWBP_CustomComboBox_C*
		constexpr auto WidgetSwitcher_3 = 0x4a0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_4 = 0x4a8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_5 = 0x4b0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_6 = 0x4b8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_7 = 0x4c0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_8 = 0x4c8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_9 = 0x4d0; // UWidgetSwitcher*
		constexpr auto Index = 0x4d8; // int32_t
		constexpr auto In Style = 0x4e0; // FButtonStyle
		constexpr auto In Style_D = 0x758; // FButtonStyle
		constexpr auto ClearText = 0x9d0; // FText
		constexpr auto HoverSrvType? = 0x9e8; // bool
		constexpr auto HoverGameMode? = 0x9e9; // bool
		constexpr auto HoverMapSelect? = 0x9ea; // bool
		constexpr auto ServerBrowser = 0x9f0; // Uw_ServerBrowser_C*
		constexpr auto MapPreviews = 0x9f8; // TMap<FString, UPaperSprite*>
		constexpr auto MapList = 0xa48; // TArray<FString>
		constexpr auto MapPreviews_1 = 0xa58; // TArray<UPaperSprite*>
		constexpr auto IsStartGameHovered = 0xa68; // bool
		constexpr auto StartGame_DefaultStyle = 0xa70; // FButtonStyle
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_USpell_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Cooldown = 0xb8; // float
		constexpr auto Usable = 0xbc; // bool
		constexpr auto Name = 0xc0; // FString
		constexpr auto CurrentCooldown = 0xd0; // float
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UCoreChat {
		constexpr auto OnChatMessageReceived = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UATPCCameraComponent {
		constexpr auto OnCameraModeChangedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto DefaultCameraModeTag = 0x20c; // FGameplayTag
		constexpr auto CameraModesAssets = 0x218; // TArray<UATPCCameraModeDataAsset*>
		constexpr auto SortedCameraModes = 0x228; // TMap<FGameplayTag, UATPCCameraModeDataAsset*>
		constexpr auto CustomCameraMode = 0x278; // UATPCCameraModeDataAsset*
		constexpr auto bPrintErrorsToScreen = 0x288; // bool
		constexpr auto LocationObjectClass = 0x290; // UATPCCameraLocationObject*
		constexpr auto FOVObjectClass = 0x298; // UATPCCameraFOVObject*
		constexpr auto FadingObjectClass = 0x2a0; // UATPCCameraFadingObject*
		constexpr auto FollowTerrainObjectClass = 0x2a8; // UATPCCameraFollowTerrainObject*
		constexpr auto CameraShakesObjectClass = 0x2b0; // UATPCCameraShakesObject*
		constexpr auto LockOnTargetObjectClass = 0x2b8; // UATPCCameraLockOnTargetObject*
		constexpr auto LocationObject = 0x2c0; // UATPCCameraLocationObject*
		constexpr auto FOVObject = 0x2c8; // UATPCCameraFOVObject*
		constexpr auto FadingObject = 0x2d0; // UATPCCameraFadingObject*
		constexpr auto FollowTerrainObject = 0x2d8; // UATPCCameraFollowTerrainObject*
		constexpr auto CameraShakesObject = 0x2e0; // UATPCCameraShakesObject*
		constexpr auto LockOnTargetObject = 0x2e8; // UATPCCameraLockOnTargetObject*
		constexpr auto CameraObjList = 0x2f0; // TArray<UATPCCameraBaseObject*>
		constexpr auto EmptyCameraMode = 0x300; // UATPCCameraModeDataAsset*
		constexpr auto CameraModeDEV = 0x308; // FATPCCameraMode
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_URedGirlLobbyAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2f8; // FAnimNode_RandomPlayer
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UW_Lobby_ButtonChangeCharacter_C {
		constexpr auto ButtonTextBlock = 0x260; // UTextBlock*
		constexpr auto HorizontalBox_2 = 0x268; // UHorizontalBox*
		constexpr auto Image_152 = 0x270; // UImage*
		constexpr auto Text = 0x278; // UTextBlock*
		constexpr auto Text_2 = 0x280; // UTextBlock*
	}

	namespace n_UWBP_MiniFriendList_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_FriendList = 0x268; // UButton*
		constexpr auto HorizontalBox_1 = 0x270; // UHorizontalBox*
		constexpr auto Image_ButtonBG = 0x278; // UImage*
		constexpr auto Image_ButtonIcon = 0x280; // UImage*
		constexpr auto WBP_MiniFriendEntry_1 = 0x288; // UWBP_MiniFriendEntry_C*
		constexpr auto WBP_MiniFriendEntry_2 = 0x290; // UWBP_MiniFriendEntry_C*
		constexpr auto WBP_MiniFriendEntry_3 = 0x298; // UWBP_MiniFriendEntry_C*
		constexpr auto WBP_MiniFriendEntry_4 = 0x2a0; // UWBP_MiniFriendEntry_C*
		constexpr auto WBP_SelfInfo_68 = 0x2a8; // UWBP_SelfInfo_C*
		constexpr auto Slots = 0x2b0; // TArray<UWBP_MiniFriendEntry_C*>
		constexpr auto EmptySlots = 0x2c0; // TArray<UWBP_MiniFriendEntry_C*>
		constexpr auto OnButtonPressed = 0x2d0; // FMulticastInlineDelegate
		constexpr auto MoveTimer = 0x2e0; // FTimerHandle
		constexpr auto AnimTarget = 0x2e8; // float
		constexpr auto C_ReservedSlots = 0x2ec; // int32_t
		constexpr auto MovindAnimFinished = 0x2f0; // FMulticastInlineDelegate
		constexpr auto IsLeavingLobbyAnimPlaying = 0x300; // bool
		constexpr auto EntriesQueue = 0x308; // TMap<FString, FString>
		constexpr auto FocusedButton = 0x358; // UButton*
	}

	namespace n_USurvivalStaminaBarWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HUD_JumpOut = 0x268; // UWidgetAnimation*
		constexpr auto HUD_JumpIn = 0x270; // UWidgetAnimation*
		constexpr auto HideAnim = 0x278; // UWidgetAnimation*
		constexpr auto ButtonsSwitcher = 0x280; // UWidgetSwitcher*
		constexpr auto Image_327 = 0x288; // UImage*
		constexpr auto Image_BG = 0x290; // UImage*
		constexpr auto Progress = 0x298; // UProgressBar*
		constexpr auto Progress_2 = 0x2a0; // UProgressBar*
		constexpr auto SafeZone_167 = 0x2a8; // USafeZone*
		constexpr auto W_Lobby_ButtonChangeCharacter = 0x2b0; // UW_Lobby_ButtonChangeCharacter_C*
		constexpr auto W_Lobby_WaitPlayers = 0x2b8; // UW_Lobby_WaitPlayers_C*
		constexpr auto WBP_Tip = 0x2c0; // UWBP_Tip_C*
		constexpr auto IsAnimPlaying = 0x2c8; // bool
		constexpr auto IsAnimInterrupted = 0x2c9; // bool
	}

	namespace n_UWBP_PlayWindow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Cancel = 0x268; // UButton*
		constexpr auto CircularThrobber_152 = 0x270; // UCircularThrobber*
		constexpr auto Image_139 = 0x278; // UImage*
		constexpr auto Image_248 = 0x280; // UImage*
		constexpr auto TextBlock_320 = 0x288; // UTextBlock*
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_ArangeSphereScream_C {
		constexpr auto UberGraphFrame = 0x230; // FPointerToUberGraphFrame
		constexpr auto Cylinder = 0x238; // UStaticMeshComponent*
		constexpr auto Sphere = 0x240; // UStaticMeshComponent*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UBanshAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xb60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0xb88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0xbb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0xbd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0xc00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0xc28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0xc50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xc78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0xca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0xcc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0xcf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0xd18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0xd40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0xd68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0xd90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0xdb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0xde0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0xe08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xe30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xe58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0xe80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xea8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0xed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0xf50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0xf80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x1000; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x10b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x10e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x1160; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1190; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x1210; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1240; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x12c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x12f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1370; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x13a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1420; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x14d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1580; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x15b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1630; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x1660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x16e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x1760; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_9 = 0x1800; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x18b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1930; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1a18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x1ad8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_8 = 0x1ba0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1bd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x1c50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1c80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1d00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1d30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1db0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x1ee0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_4 = 0x1fa8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1fd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x20d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_3 = 0x21a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x21d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x22d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_2 = 0x2398; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x23c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x24b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2570; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x25f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2670; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x27b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2898; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2960; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x2a48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2a78; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x2b28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x2bc8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2bf8; // FAnimNode_SequencePlayer
		constexpr auto IsHolded = 0x2c78; // float
		constexpr auto IsOnAir? = 0x2c7c; // bool
		constexpr auto Speed = 0x2c80; // float
		constexpr auto SpeedChek = 0x2c84; // float
		constexpr auto TypeAttack = 0x2c88; // int32_t
		constexpr auto Attak = 0x2c8c; // bool
		constexpr auto Direction = 0x2c90; // float
		constexpr auto JumpEndChek = 0x2c94; // bool
		constexpr auto FIRE = 0x2c95; // bool
		constexpr auto Plant = 0x2c96; // bool
		constexpr auto Flashed = 0x2c97; // bool
		constexpr auto Drop = 0x2c98; // bool
		constexpr auto ChairDrop = 0x2c99; // bool
		constexpr auto Catch = 0x2c9a; // bool
		constexpr auto MarioStun = 0x2c9b; // bool
		constexpr auto Runaway = 0x2c9c; // bool
		constexpr auto KnifeIn = 0x2c9d; // bool
		constexpr auto KnifeSpawn = 0x2c9e; // bool
		constexpr auto AstralBuild = 0x2c9f; // bool
		constexpr auto HeadR = 0x2ca0; // FRotator
		constexpr auto Vertical rotation = 0x2cac; // float
		constexpr auto HorizontalValue = 0x2cb0; // float
		constexpr auto bTurnL = 0x2cb4; // bool
		constexpr auto bTurnR = 0x2cb5; // bool
		constexpr auto Astral = 0x2cb6; // bool
		constexpr auto Fly = 0x2cb7; // bool
		constexpr auto IsOwner? = 0x2cb8; // bool
		constexpr auto Get Ready = 0x2cb9; // bool
		constexpr auto PropHunt? = 0x2cba; // bool
		constexpr auto SpeedRateF = 0x2cbc; // float
		constexpr auto Broke Anim = 0x2cc0; // bool
	}

	namespace n_UBansheeKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UPlayerScoreComponentButtonRep_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Click_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Hover_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Image_Icon_Unpressed = 0x278; // UImage*
		constexpr auto Clicked = 0x280; // FMulticastInlineDelegate
		constexpr auto IsEnabled = 0x290; // bool
	}

	namespace n_USurvPropDestruction_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto CD? = 0x100; // bool
	}

	namespace n_UAsianGirlIntroAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4a8; // FAnimNode_StateMachine
		constexpr auto MvpAnim? = 0x558; // bool
	}

	namespace n_UEOSCoreFriendsAcceptInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_ADoppelganger_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto PlayerStaticMesh = 0x1320; // UStaticMeshComponent*
		constexpr auto NicknameWidget_1 = 0x1328; // UWidgetComponent*
		constexpr auto SurvRoleWidget = 0x1330; // UWidgetComponent*
		constexpr auto PropFPPCamera = 0x1338; // UChildActorComponent*
		constexpr auto PropArm = 0x1340; // USpringArmComponent*
		constexpr auto FMODHealSound = 0x1348; // UFMODAudioComponent*
		constexpr auto InteractBox = 0x1350; // UBoxComponent*
		constexpr auto KnifeFPP = 0x1358; // USkeletalMeshComponent*
		constexpr auto Niagara = 0x1360; // UNiagaraComponent*
		constexpr auto knife = 0x1368; // USkeletalMeshComponent*
		constexpr auto FMODHit = 0x1370; // UFMODAudioComponent*
		constexpr auto FMODAudio2_1 = 0x1378; // UFMODAudioComponent*
		constexpr auto DoppelgangerSpell2 = 0x1380; // UDoppelgangerSpell2_C*
		constexpr auto DoppelgangerSpell1 = 0x1388; // UDoppelgangerSpell1_C*
		constexpr auto DefaultPointProp = 0x1390; // USceneComponent*
		constexpr auto FMODPropLoopAudio = 0x1398; // UFMODAudioComponent*
		constexpr auto FMODPropHitAudio = 0x13a0; // UFMODAudioComponent*
		constexpr auto StaticMeshContainer = 0x13a8; // USphereComponent*
		constexpr auto Timeline_6_0_Alpha_149ED0024B960B6929F17AB7BFC03992 = 0x13b0; // float
		constexpr auto Timeline_6_0__Direction_149ED0024B960B6929F17AB7BFC03992 = 0x13b4; // ETimelineDirection
		constexpr auto Timeline_6_1 = 0x13b8; // UTimelineComponent*
		constexpr auto Timeline_2_0_Jump_72A69D1F471F3505FB8E119B5DADA186 = 0x13c0; // float
		constexpr auto Timeline_2_0__Direction_72A69D1F471F3505FB8E119B5DADA186 = 0x13c4; // ETimelineDirection
		constexpr auto Timeline_2_1 = 0x13c8; // UTimelineComponent*
		constexpr auto Timeline_1_0_Lerp_DE93363644F27A278A6844B4BC25415F = 0x13d0; // float
		constexpr auto Timeline_1_0__Direction_DE93363644F27A278A6844B4BC25415F = 0x13d4; // ETimelineDirection
		constexpr auto Timeline_1_1 = 0x13d8; // UTimelineComponent*
		constexpr auto CalculateRayHitActor = 0x13e0; // AActor*
		constexpr auto TempCalculateRay_1 = 0x13e8; // AActor*
		constexpr auto TempVector = 0x13f0; // FVector
		constexpr auto PropData = 0x1400; // FPropData
		constexpr auto StartRotate? = 0x14a0; // bool
		constexpr auto PhysicsTickDeltaTime = 0x14a4; // float
		constexpr auto forwardVector = 0x14a8; // FVector
		constexpr auto RightVector = 0x14b4; // FVector
		constexpr auto AxisRotator = 0x14c0; // FRotator
		constexpr auto PropSpeed = 0x14cc; // float
		constexpr auto LerpAlpha = 0x14d0; // float
		constexpr auto StaticHit? = 0x14d4; // bool
		constexpr auto Start? = 0x14d5; // bool
		constexpr auto EndJump? = 0x14d6; // bool
		constexpr auto DeltaTime_1 = 0x14d8; // float
		constexpr auto ImProp? = 0x14dc; // bool
		constexpr auto GetPropReloading? = 0x14dd; // bool
		constexpr auto GetPersonReloading? = 0x14de; // bool
		constexpr auto NewOutline = 0x14e0; // AActor*
		constexpr auto MaterialOutline_1 = 0x14e8; // UMaterialInstanceDynamic*
		constexpr auto DefaultColorOutline = 0x14f0; // FLinearColor
		constexpr auto OldOutline = 0x1500; // AActor*
		constexpr auto DefaultCapsuleRadius = 0x1508; // float
		constexpr auto DefaultCapsuleHalfHeight = 0x150c; // float
		constexpr auto RotateInterpSpeed = 0x1510; // float
		constexpr auto JumpButtonPressed? = 0x1514; // bool
		constexpr auto SecondJumpProp? = 0x1515; // bool
		constexpr auto JumpAlpha = 0x1518; // float
		constexpr auto JumpVector = 0x151c; // FVector
		constexpr auto ImSurv? = 0x1528; // bool
		constexpr auto PlayerStates = 0x1530; // TArray<APS_PropHunt_C*>
		constexpr auto PropSoundActive? = 0x1540; // bool
		constexpr auto ImpulseThreshold = 0x1544; // float
		constexpr auto StartRotatePropSoundActive? = 0x1548; // bool
		constexpr auto LastCapsuleRadius = 0x154c; // float
		constexpr auto LastCapsuleHalfHeight = 0x1550; // float
		constexpr auto SchoolBell? = 0x1554; // bool
		constexpr auto PropCorrectionRotation = 0x1558; // FRotator
		constexpr auto StopMoveProp? = 0x1564; // bool
		constexpr auto FakeAlarmAnim? = 0x1565; // bool
		constexpr auto FakeHealingAnim? = 0x1566; // bool
		constexpr auto SavedNickname = 0x1568; // FText
		constexpr auto Move? = 0x1580; // bool
		constexpr auto Alarm = 0x1588; // AActor*
		constexpr auto FakeHealing? = 0x1590; // bool
		constexpr auto IsProp = 0x1598; // FMulticastInlineDelegate
		constexpr auto survChar = 0x15a8; // SurvChars
		constexpr auto ImpactPoint = 0x15ac; // FVector
		constexpr auto WallJump? = 0x15b8; // bool
		constexpr auto ParticleTransform = 0x15c0; // FTransform
		constexpr auto OldCharPos = 0x15f0; // FVector
		constexpr auto OldWidgetPos = 0x15fc; // FVector
		constexpr auto NicknamePropActorsIgnore = 0x1608; // TArray<AActor*>
		constexpr auto PropDistance = 0x1618; // float
		constexpr auto StaminaActive? = 0x161c; // bool
		constexpr auto PressedRun? = 0x161d; // bool
		constexpr auto SlowIncrease? = 0x161e; // bool
		constexpr auto CurrentStamina = 0x1620; // float
		constexpr auto StaminaIncreaseAmountValue = 0x1624; // float
		constexpr auto MaxStamina = 0x1628; // float
		constexpr auto ZeroStamina? = 0x162c; // bool
		constexpr auto StaminaDecreaseAmountValue = 0x1630; // float
		constexpr auto StaminaJumpAmountValue = 0x1634; // float
		constexpr auto PropMaxTimer = 0x1638; // float
		constexpr auto PropCurrentTimer = 0x163c; // float
		constexpr auto PropTempTimer = 0x1640; // float
		constexpr auto Temp2Vector = 0x1644; // FVector
		constexpr auto Temp3Vector = 0x1650; // FVector
		constexpr auto Temp4Vector = 0x165c; // FVector
		constexpr auto TempBool = 0x1668; // bool
		constexpr auto SavedPoints = 0x1670; // TArray<FVector>
		constexpr auto TempFloat = 0x1680; // float
		constexpr auto TempFloat2 = 0x1684; // float
		constexpr auto TempRotation = 0x1688; // FRotator
		constexpr auto TempRotation2 = 0x1694; // FRotator
		constexpr auto TempFloat3 = 0x16a0; // float
		constexpr auto PropCDTimer = 0x16a4; // float
		constexpr auto JumpEndPressE? = 0x16a8; // bool
		constexpr auto Capsule_TransormingSurv? = 0x16a9; // bool
		constexpr auto CustomAttackBlock? = 0x16aa; // bool
		constexpr auto InteractPressed? = 0x16ab; // bool
		constexpr auto cdProp = 0x16ac; // bool
		constexpr auto Chair? = 0x16ad; // bool
		constexpr auto Reincarnaiting? = 0x16ae; // bool
		constexpr auto MaxZToCheck = 0x16b0; // float
		constexpr auto RotateBlock? = 0x16b4; // bool
		constexpr auto Actors to Ignore = 0x16b8; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3a8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UW_VictoryScreen_Tutorial_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TexAnim = 0x268; // UWidgetAnimation*
		constexpr auto NewVictoryAnimation = 0x270; // UWidgetAnimation*
		constexpr auto Fade = 0x278; // UWidgetAnimation*
		constexpr auto VictoryAnimation = 0x280; // UWidgetAnimation*
		constexpr auto HorizontalBox_46 = 0x288; // UHorizontalBox*
		constexpr auto Image_37 = 0x290; // UImage*
		constexpr auto Image_102 = 0x298; // UImage*
		constexpr auto Image_114 = 0x2a0; // UImage*
		constexpr auto Image_254 = 0x2a8; // UImage*
		constexpr auto SizeBox_3 = 0x2b0; // USizeBox*
		constexpr auto Text_EndGameState = 0x2b8; // UTextBlock*
		constexpr auto Finished = 0x2c0; // bool
		constexpr auto DefeatText = 0x2c8; // FText
		constexpr auto VictoryText = 0x2e0; // FText
	}

	namespace n_UWB_IdenticalBindsDialog_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Blur_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Show_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Button_No = 0x278; // UButton*
		constexpr auto Button_Yes = 0x280; // UButton*
		constexpr auto Image_BlackScreen = 0x288; // UImage*
		constexpr auto Image_DialogBG = 0x290; // UImage*
		constexpr auto SafeZone_118 = 0x298; // USafeZone*
		constexpr auto Text_Label = 0x2a0; // UTextBlock*
		constexpr auto Text_Label_2 = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_42 = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_147 = 0x2b8; // UTextBlock*
		constexpr auto OnAccept = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnDecline = 0x2d0; // FMulticastInlineDelegate
		constexpr auto IsBlured = 0x2e0; // bool
		constexpr auto Label = 0x2e8; // FText
		constexpr auto IsShown = 0x300; // bool
		constexpr auto LastFocus = 0x308; // UButton*
		constexpr auto In Style Normal = 0x310; // FSlateBrush
		constexpr auto In Style Normal_1 = 0x398; // FSlateBrush
		constexpr auto In Style Normal_2 = 0x420; // FSlateBrush
		constexpr auto In Style Normal_3 = 0x4a8; // FSlateBrush
	}

	namespace n_UVoipManagerComponent {
		constexpr auto VoiceGenerated = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlayerTalking = 0xc0; // FMulticastInlineDelegate
		constexpr auto PlayerStopTalking = 0xd0; // FMulticastInlineDelegate
		constexpr auto StopTalkingThreshold = 0x16c; // float
		constexpr auto bAutoSetConsoleVariables = 0x170; // bool
		constexpr auto SilenceDetectionThreshold = 0x174; // float
		constexpr auto NoiseGateThreshold = 0x178; // float
		constexpr auto VoiceBufferDelay = 0x17c; // float
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UChairAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x4c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer = 0x588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x608; // FAnimNode_Root
		constexpr auto Speed = 0x638; // float
		constexpr auto ResqueMode? = 0x63c; // bool
		constexpr auto L_hand = 0x640; // float
		constexpr auto R_hand = 0x644; // float
		constexpr auto L_leg = 0x648; // float
		constexpr auto R_leg = 0x64c; // float
		constexpr auto Close = 0x650; // bool
		constexpr auto Stage = 0x654; // int32_t
	}

	namespace n_UKeymaster_run_R_Skeleton_AnimBlueprint_Lobby_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3a8; // FAnimNode_StateMachine
	}

	namespace n_AAlarmCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UW_LoadingScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto loading = 0x278; // UWidgetAnimation*
		constexpr auto BootScreenich = 0x280; // UImage*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_2 = 0x290; // UImage*
		constexpr auto Image_3 = 0x298; // UImage*
		constexpr auto Image_4 = 0x2a0; // UImage*
		constexpr auto Image_5 = 0x2a8; // UImage*
		constexpr auto Image_6 = 0x2b0; // UImage*
		constexpr auto Image_7 = 0x2b8; // UImage*
		constexpr auto Image_8 = 0x2c0; // UImage*
		constexpr auto Image_9 = 0x2c8; // UImage*
		constexpr auto Image_58 = 0x2d0; // UImage*
		constexpr auto Image_100 = 0x2d8; // UImage*
		constexpr auto Image_112 = 0x2e0; // UImage*
		constexpr auto Image_144 = 0x2e8; // UImage*
		constexpr auto Image_320 = 0x2f0; // UImage*
		constexpr auto Image_353 = 0x2f8; // UImage*
		constexpr auto Image_BG = 0x300; // UImage*
		constexpr auto Image_BG_2 = 0x308; // UImage*
		constexpr auto Image_FadeFilter = 0x310; // UImage*
		constexpr auto Image_FirstFrame = 0x318; // UImage*
		constexpr auto Image_FirstFrame_2 = 0x320; // UImage*
		constexpr auto Image_FirstFrame_3 = 0x328; // UImage*
		constexpr auto Image_FirstFrame_4 = 0x330; // UImage*
		constexpr auto Image_FirstFrame_5 = 0x338; // UImage*
		constexpr auto Image_LoadBG = 0x340; // UImage*
		constexpr auto Image_Progress = 0x348; // UImage*
		constexpr auto Image_ProphuntRef = 0x350; // UImage*
		constexpr auto ProgressBar_Loading = 0x358; // UProgressBar*
		constexpr auto SafeZone = 0x360; // USafeZone*
		constexpr auto SafeZone_600 = 0x368; // USafeZone*
		constexpr auto TextBlock_2 = 0x370; // UTextBlock*
		constexpr auto TextBlock_3 = 0x378; // UTextBlock*
		constexpr auto TextBlock_4 = 0x380; // UTextBlock*
		constexpr auto TextBlock_Des1 = 0x388; // UTextBlock*
		constexpr auto TextBlock_Des2 = 0x390; // UTextBlock*
		constexpr auto TextBlock_Des3 = 0x398; // UTextBlock*
		constexpr auto TextBlock_GameMode = 0x3a0; // UTextBlock*
		constexpr auto TextBlock_gameName = 0x3a8; // UTextBlock*
		constexpr auto TextBlock_MapName = 0x3b0; // UTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x3b8; // UWidgetSwitcher*
		constexpr auto Maps = 0x3c0; // TMap<FString, UTexture2D*>
		constexpr auto Delete = 0x410; // bool
		constexpr auto MapName = 0x418; // FText
		constexpr auto ModeName = 0x430; // FText
		constexpr auto Map = 0x448; // FString
		constexpr auto Surv Tips = 0x458; // TArray<FText>
		constexpr auto ScreenTips = 0x468; // TMap<FString, UPaperSprite*>
		constexpr auto ProgressMaterial = 0x4b8; // UMaterialInstanceDynamic*
		constexpr auto Texture = 0x4c0; // UTexture2D*
		constexpr auto Boot = 0x4c8; // UMediaPlayer*
		constexpr auto LoadingSound = 0x4d0; // FFMODEventInstance
		constexpr auto Map Name = 0x4d8; // FString
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UW_PlayCardContent_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_AGM_PropHunt_Lab_C {
		constexpr auto UberGraphFrame = 0x370; // FPointerToUberGraphFrame
		constexpr auto AC_BattlEye_Server = 0x378; // UAC_BattlEye_Server_C*
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x588; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x598; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5a0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5bc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5d8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5e8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5f0; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5f4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x610; // bool
		constexpr auto InstanceCountToRender = 0x614; // int32_t
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UDoppelJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_AGlueOfJarItemsBP_Common_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UWBP_HelpTip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_Tip = 0x268; // UImage*
		constexpr auto SizeBox_Content = 0x270; // USizeBox*
		constexpr auto TextBlock_Description = 0x278; // UTextBlock*
		constexpr auto TextBlock_Header = 0x280; // UTextBlock*
		constexpr auto HintNumber = 0x288; // int32_t
		constexpr auto Killer = 0x28c; // bool
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_AMagicLeapARPinRenderer {
		constexpr auto bInfoActorsVisibilityOverride = 0x220; // bool
		constexpr auto AllInfoActors = 0x228; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x280; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UW_DevLab_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_75 = 0x268; // UButton*
		constexpr auto Button_80 = 0x270; // UButton*
		constexpr auto Button_144 = 0x278; // UButton*
		constexpr auto ChangeLevel = 0x280; // UButton*
		constexpr auto ComboBoxString_132 = 0x288; // UComboBoxString*
	}

	namespace n_UEOSCoreLeaderboardsQueryLeaderboardUserScores {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ABuggedActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Killer = 0x238; // AKillerMasterBP_C*
	}

	namespace n_AMineKnife_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Box1 = 0x228; // UBoxComponent*
		constexpr auto PN_Ribbon = 0x230; // UNiagaraComponent*
		constexpr auto Box = 0x238; // UBoxComponent*
		constexpr auto FmodAudio = 0x240; // UFMODAudioComponent*
		constexpr auto P_MineHit = 0x248; // UParticleSystemComponent*
		constexpr auto knife = 0x250; // UStaticMeshComponent*
		constexpr auto InvisibilityMesh = 0x258; // UStaticMeshComponent*
		constexpr auto SmoothSync = 0x260; // USmoothSync*
		constexpr auto ProjectileMovement = 0x268; // UProjectileMovementComponent*
		constexpr auto DefaultSceneRoot = 0x270; // USceneComponent*
		constexpr auto Target = 0x278; // UCapsuleComponent*
		constexpr auto Killer = 0x280; // AKillerMasterBP_C*
		constexpr auto Surv = 0x288; // ASurvivorMasterBP_C*
		constexpr auto Other Actor = 0x290; // AActor*
		constexpr auto MineDamage = 0x298; // int32_t
		constexpr auto Collision = 0x29c; // bool
	}

	namespace n_AKillerMasterBP_C {
		constexpr auto UberGraphFrame = 0x4e0; // FPointerToUberGraphFrame
		constexpr auto PlaySound3DComponent = 0x4e8; // UPlaySound3DComponent_C*
		constexpr auto SoundIndicatorWidget = 0x4f0; // UWidgetComponent*
		constexpr auto SceneDropCheck = 0x4f8; // USceneComponent*
		constexpr auto CapsuleChecker = 0x500; // UCapsuleComponent*
		constexpr auto Box1 = 0x508; // UBoxComponent*
		constexpr auto MoveSoundComp = 0x510; // UFMODAudioComponent*
		constexpr auto BloodhoundSphere = 0x518; // USphereComponent*
		constexpr auto PerkKiller = 0x520; // UPerkKiller_C*
		constexpr auto CoinSpawn = 0x528; // USceneComponent*
		constexpr auto FPPCamera = 0x530; // UCameraComponent*
		constexpr auto SoundCommandKiller = 0x538; // USoundCommandKiller_C*
		constexpr auto KnifeLoc = 0x540; // USceneComponent*
		constexpr auto SceneCaptureComponent2D = 0x548; // USceneCaptureComponent2D*
		constexpr auto GraffityMakerHit = 0x550; // UGraffityMakerHit_C*
		constexpr auto PerkManager = 0x558; // UPerkManager_C*
		constexpr auto NicknameWidget = 0x560; // UWidgetComponent*
		constexpr auto ShootProphunt = 0x568; // UShootProphunt_C*
		constexpr auto AIPerceptionStimuliSource = 0x570; // UAIPerceptionStimuliSourceComponent*
		constexpr auto KillerIdle = 0x578; // UFMODAudioComponent*
		constexpr auto GraffityMaker = 0x580; // UGraffityMaker_C*
		constexpr auto JumpSound = 0x588; // UFMODAudioComponent*
		constexpr auto ChaseAudio = 0x590; // UFMODAudioComponent*
		constexpr auto StunSceneCheck = 0x598; // USceneComponent*
		constexpr auto Stund = 0x5a0; // UParticleSystemComponent*
		constexpr auto SoundChatSounds = 0x5a8; // USoundChatSounds_C*
		constexpr auto StunCollision = 0x5b0; // UBoxComponent*
		constexpr auto CheckInteractableKiller = 0x5b8; // UCheckInteractableKiller_C*
		constexpr auto AlarmsWidgetSize = 0x5c0; // UAlarmsWidgetSize_C*
		constexpr auto Box = 0x5c8; // UBoxComponent*
		constexpr auto SurvEndPlace = 0x5d0; // USceneComponent*
		constexpr auto SurvBeginPlace = 0x5d8; // USceneComponent*
		constexpr auto VoipAudio = 0x5e0; // UVoipAudioComponent*
		constexpr auto VoipManager = 0x5e8; // UVoipManagerComponent*
		constexpr auto PostProcess1 = 0x5f0; // UPostProcessComponent*
		constexpr auto SmoothSync = 0x5f8; // USmoothSync*
		constexpr auto SpringArm = 0x600; // USpringArmComponent*
		constexpr auto KnifeLocation = 0x608; // USceneComponent*
		constexpr auto HitAudi = 0x610; // UFMODAudioComponent*
		constexpr auto FPMeshPlace = 0x618; // USceneComponent*
		constexpr auto FPPSM = 0x620; // USkeletalMeshComponent*
		constexpr auto SoundKiller = 0x628; // USoundKiller_C*
		constexpr auto Sphere = 0x630; // USphereComponent*
		constexpr auto FMODAudio1 = 0x638; // UFMODAudioComponent*
		constexpr auto FollowCamera = 0x640; // UCameraComponent*
		constexpr auto ATPCCamera = 0x648; // UATPCCameraComponent*
		constexpr auto FmodAudio = 0x650; // UFMODAudioComponent*
		constexpr auto FootprintComponent1 = 0x658; // UFootprintComponent_C*
		constexpr auto ScreamSpell = 0x660; // UScreamSpell_C*
		constexpr auto WallhackSpell = 0x668; // UWallhackSpell_C*
		constexpr auto ContactCapsule = 0x670; // UCapsuleComponent*
		constexpr auto SpotLight = 0x678; // USpotLightComponent*
		constexpr auto Capsule = 0x680; // UCapsuleComponent*
		constexpr auto GrabLocation = 0x688; // USceneComponent*
		constexpr auto PhysicsHandle = 0x690; // UPhysicsHandleComponent*
		constexpr auto Timeline_6_NewTrack_0_DD0A11F8445618515EDF29AA255D1CE0 = 0x698; // float
		constexpr auto Timeline_6__Direction_DD0A11F8445618515EDF29AA255D1CE0 = 0x69c; // ETimelineDirection
		constexpr auto Timeline_7 = 0x6a0; // UTimelineComponent*
		constexpr auto Timeline_5_Alpha_7015A4DA41ED7E73DA445D8FB29046BE = 0x6a8; // float
		constexpr auto Timeline_5__Direction_7015A4DA41ED7E73DA445D8FB29046BE = 0x6ac; // ETimelineDirection
		constexpr auto Timeline_6 = 0x6b0; // UTimelineComponent*
		constexpr auto AfterStunColor_f_A70514EE49D40D103AD3BF8B9384BA66 = 0x6b8; // float
		constexpr auto AfterStunColor__Direction_A70514EE49D40D103AD3BF8B9384BA66 = 0x6bc; // ETimelineDirection
		constexpr auto AfterStunColor = 0x6c0; // UTimelineComponent*
		constexpr auto ScaleSizer_fX_77CCFD67432753C30A0F0B9123C98C2A = 0x6c8; // float
		constexpr auto ScaleSizer_fZ_77CCFD67432753C30A0F0B9123C98C2A = 0x6cc; // float
		constexpr auto ScaleSizer__Direction_77CCFD67432753C30A0F0B9123C98C2A = 0x6d0; // ETimelineDirection
		constexpr auto ScaleSizer = 0x6d8; // UTimelineComponent*
		constexpr auto Timeline_4_Alpha_FFBAA07C4FFE0AC4EFCCB2808F29A056 = 0x6e0; // float
		constexpr auto Timeline_4__Direction_FFBAA07C4FFE0AC4EFCCB2808F29A056 = 0x6e4; // ETimelineDirection
		constexpr auto Timeline_5 = 0x6e8; // UTimelineComponent*
		constexpr auto Timeline_3_Alpha_CCB2811B4D6B40280DAFDA9812E93AA9 = 0x6f0; // float
		constexpr auto Timeline_3__Direction_CCB2811B4D6B40280DAFDA9812E93AA9 = 0x6f4; // ETimelineDirection
		constexpr auto Timeline_4 = 0x6f8; // UTimelineComponent*
		constexpr auto Timeline_2_Alpha_6A7565474A6C83519B89AABBB688C874 = 0x700; // float
		constexpr auto Timeline_2__Direction_6A7565474A6C83519B89AABBB688C874 = 0x704; // ETimelineDirection
		constexpr auto Timeline_3 = 0x708; // UTimelineComponent*
		constexpr auto Timeline_1_Param_D056C010468E2F57128C429FAA65DEE4 = 0x710; // float
		constexpr auto Timeline_1__Direction_D056C010468E2F57128C429FAA65DEE4 = 0x714; // ETimelineDirection
		constexpr auto Timeline_2 = 0x718; // UTimelineComponent*
		constexpr auto StopSoundChaseTimeline_Alpha_06FAF5A548A0915B6864099F049D7C6A = 0x720; // float
		constexpr auto StopSoundChaseTimeline__Direction_06FAF5A548A0915B6864099F049D7C6A = 0x724; // ETimelineDirection
		constexpr auto StopSoundChaseTimeline = 0x728; // UTimelineComponent*
		constexpr auto SoundTimeline_Alpha_1F3BABE64CBB7521448AC3810D011723 = 0x730; // float
		constexpr auto SoundTimeline__Direction_1F3BABE64CBB7521448AC3810D011723 = 0x734; // ETimelineDirection
		constexpr auto SoundTimeline = 0x738; // UTimelineComponent*
		constexpr auto DecreasorSpeed_AlphaTime_7C7B01AF4FA603E5695B4EBEC9B01716 = 0x740; // float
		constexpr auto DecreasorSpeed__Direction_7C7B01AF4FA603E5695B4EBEC9B01716 = 0x744; // ETimelineDirection
		constexpr auto DecreasorSpeed = 0x748; // UTimelineComponent*
		constexpr auto IncreasorSpeed_AlphaTime_73C5FA014C02BF17B95C0094FD9E37EA = 0x750; // float
		constexpr auto IncreasorSpeed__Direction_73C5FA014C02BF17B95C0094FD9E37EA = 0x754; // ETimelineDirection
		constexpr auto IncreasorSpeed = 0x758; // UTimelineComponent*
		constexpr auto Timeline_0_lerp_258C0C6E4CF25F31EF1A08BE14D3F049 = 0x760; // float
		constexpr auto Timeline_0__Direction_258C0C6E4CF25F31EF1A08BE14D3F049 = 0x764; // ETimelineDirection
		constexpr auto Timeline_1 = 0x768; // UTimelineComponent*
		constexpr auto BaseTurnRate = 0x770; // float
		constexpr auto BaseLookUpRate = 0x774; // float
		constexpr auto Stunned? = 0x778; // bool
		constexpr auto WalkSpeed = 0x77c; // float
		constexpr auto Atack? = 0x780; // bool
		constexpr auto Contact = 0x781; // bool
		constexpr auto NewVar_1 = 0x788; // FString
		constexpr auto V3Forward = 0x798; // FVector
		constexpr auto mouseClick? = 0x7a4; // bool
		constexpr auto mouseClickTime = 0x7a8; // float
		constexpr auto ReduceMaxWalkSpeedTime = 0x7ac; // float
		constexpr auto SuperSmash = 0x7b0; // bool
		constexpr auto AbilityWallhackCd = 0x7b1; // bool
		constexpr auto IsHolded = 0x7b2; // bool
		constexpr auto GrabbedChar = 0x7b8; // AActor*
		constexpr auto HittedSurv = 0x7c0; // ASurvivorMasterBP_C*
		constexpr auto HypnoChairsArrayRef = 0x7c8; // TArray<AHypnoChairBP_C*>
		constexpr auto ChairOverlap? = 0x7d8; // bool
		constexpr auto OverlappedChair = 0x7e0; // AHypnoChairBP_C*
		constexpr auto SurvArrayRef = 0x7e8; // TArray<ASurvivorMasterBP_C*>
		constexpr auto SurvInRadiusArrayRef = 0x7f8; // TArray<ASurvivorMasterBP_C*>
		constexpr auto ToShakeSurv = 0x808; // bool
		constexpr auto CDWBPRed = 0x810; // UCoolDownWBP_C*
		constexpr auto AbilityScreamCd = 0x818; // bool
		constexpr auto WidgetCDRef = 0x820; // UCoolDownWBP_C*
		constexpr auto abilit1 = 0x828; // FName
		constexpr auto abilit2 = 0x830; // FName
		constexpr auto EndLineTraceV3 = 0x838; // FVector
		constexpr auto abiliti3 = 0x844; // FName
		constexpr auto SuperSmashCD = 0x84c; // bool
		constexpr auto FlashEffectWidget = 0x850; // UFlashWidget_C*
		constexpr auto DeltaSeconds = 0x858; // float
		constexpr auto BulletRef = 0x860; // ABulletBP_C*
		constexpr auto BulletCD? = 0x868; // bool
		constexpr auto AmmoWBPRef = 0x870; // UAmmoKillerWBP_C*
		constexpr auto SpyEyeSound = 0x878; // UAudioComponent*
		constexpr auto MaxSpeed = 0x880; // float
		constexpr auto CurrentSpeed = 0x884; // float
		constexpr auto IncreaseWalk? = 0x888; // bool
		constexpr auto IsOwner? = 0x889; // bool
		constexpr auto CurrentFootwear = 0x88a; // EFootprintStyle
		constexpr auto MinSpeed = 0x88c; // float
		constexpr auto DecreaseWalk? = 0x890; // bool
		constexpr auto OnSpyEye = 0x891; // bool
		constexpr auto InteractButtonWBP = 0x898; // UInteractableButtonsWidget_C*
		constexpr auto toChairText = 0x8a0; // FText
		constexpr auto pickupSurvText = 0x8b8; // FText
		constexpr auto dropSurvText = 0x8d0; // FText
		constexpr auto ExplosionSound = 0x8e8; // UAudioComponent*
		constexpr auto ProgressBarWBP = 0x8f0; // UProgressBarWBP_C*
		constexpr auto ActorsToIgnore = 0x8f8; // TArray<AActor*>
		constexpr auto MaxSpeedDefault = 0x908; // float
		constexpr auto MinSpeedDefault = 0x90c; // float
		constexpr auto LevelAmbient = 0x910; // FFMODEventInstance
		constexpr auto MeleeAttackRadius = 0x918; // float
		constexpr auto Sensivity = 0x91c; // float
		constexpr auto AttackBoolAnim = 0x920; // bool
		constexpr auto ChairSaved = 0x928; // AHypnoChairBP_C*
		constexpr auto NewVar_2 = 0x930; // AHypnoChairBP_C*
		constexpr auto AttackAllow = 0x938; // bool
		constexpr auto Laugh = 0x940; // FFMODEventInstance
		constexpr auto LaughComp = 0x948; // UFMODAudioComponent*
		constexpr auto XLocationFPPMESH = 0x950; // float
		constexpr auto Score = 0x954; // int32_t
		constexpr auto JumpEnd = 0x958; // bool
		constexpr auto CrossHair = 0x960; // UCrossHairWBP_C*
		constexpr auto FIRE = 0x968; // bool
		constexpr auto Plant = 0x969; // bool
		constexpr auto Flashed = 0x96a; // bool
		constexpr auto SurvCrawl = 0x970; // ASurvivorMasterBP_C*
		constexpr auto spyEyeSpotter = 0x978; // UFMODAudioComponent*
		constexpr auto VerticalValue = 0x980; // float
		constexpr auto HorizontalValue = 0x984; // float
		constexpr auto IncreaseSpeedMultiplyTime = 0x988; // float
		constexpr auto DecreaseSpeedMultiplyTime = 0x98c; // float
		constexpr auto KillerType = 0x990; // int32_t
		constexpr auto HardHit? = 0x994; // bool
		constexpr auto LockMouseInput = 0x995; // bool
		constexpr auto HudKiller = 0x998; // AHUD_PropHunt_C*
		constexpr auto AstralIn? = 0x9a0; // bool
		constexpr auto KnifeInHand = 0x9a1; // bool
		constexpr auto InertiaSpeed = 0x9a4; // float
		constexpr auto InertiaSoef = 0x9a8; // float
		constexpr auto NewVar_3 = 0x9b0; // ASurvivorMasterBP_C*
		constexpr auto ZinterpCoef = 0x9b8; // float
		constexpr auto AfterJump = 0x9bc; // bool
		constexpr auto SimpleDrop = 0x9bd; // bool
		constexpr auto ChairDrop = 0x9be; // bool
		constexpr auto Catch = 0x9bf; // bool
		constexpr auto Runaway = 0x9c0; // bool
		constexpr auto YawMod = 0x9c4; // float
		constexpr auto ToChairMove = 0x9c8; // bool
		constexpr auto HeadRotator = 0x9cc; // FRotator
		constexpr auto NewVar_4 = 0x9d8; // float
		constexpr auto SpawnKnife = 0x9dc; // bool
		constexpr auto AllowVoice = 0x9dd; // bool
		constexpr auto VoiceActive? = 0x9de; // bool
		constexpr auto ScoreText = 0x9e0; // FText
		constexpr auto DamageMultiply = 0x9f8; // float
		constexpr auto StartTrackSurv = 0x9fc; // bool
		constexpr auto SurfsOnEye = 0xa00; // TArray<ASurvivorMasterBP_C*>
		constexpr auto TimeDelay = 0xa10; // TArray<float>
		constexpr auto SeeSurvArray = 0xa20; // TArray<bool>
		constexpr auto ActorToMove = 0xa30; // AActor*
		constexpr auto LaughKiller = 0xa38; // UFMODAudioComponent*
		constexpr auto OnKiller? = 0xa40; // bool
		constexpr auto CDWidget = 0xa41; // bool
		constexpr auto StayDelay = 0xa48; // TArray<float>
		constexpr auto XAxis = 0xa58; // float
		constexpr auto YAxis = 0xa5c; // float
		constexpr auto SurvCanGetDMG = 0xa60; // bool
		constexpr auto SurvAttachBoneName = 0xa64; // FName
		constexpr auto SkillPoints = 0xa70; // USkillPoints_C*
		constexpr auto LevelSystemRef = 0xa78; // ULevelSystem_C*
		constexpr auto HandAttack = 0xa80; // int32_t
		constexpr auto CoinImpulse = 0xa88; // TArray<FVector>
		constexpr auto MarioStun = 0xa98; // bool
		constexpr auto SurvExitCollision = 0xa99; // bool
		constexpr auto StopKillerMusic? = 0xa9a; // bool
		constexpr auto ImKiller? = 0xa9b; // bool
		constexpr auto PropSound? = 0xa9c; // bool
		constexpr auto AttackBlocked? = 0xa9d; // bool
		constexpr auto HiddenAttack? = 0xa9e; // bool
		constexpr auto AudioIgnore = 0xaa0; // TArray<AActor*>
		constexpr auto chase = 0xab0; // bool
		constexpr auto ChaseArray = 0xab8; // TArray<bool>
		constexpr auto ChaseSound2D = 0xac8; // FFMODEventInstance
		constexpr auto JumpTime = 0xad0; // float
		constexpr auto chaseb = 0xad4; // bool
		constexpr auto SurvEscapeAnimationLenght = 0xad8; // float
		constexpr auto SurvMeshLastPosition = 0xae0; // FTransform
		constexpr auto arrayDynMatInst = 0xb10; // TArray<UMaterialInstanceDynamic*>
		constexpr auto UnStunned = 0xb20; // bool
		constexpr auto DoOnceChase = 0xb21; // bool
		constexpr auto DetectDelay = 0xb22; // bool
		constexpr auto PostProcessVolumeVar = 0xb28; // APostProcessVolume*
		constexpr auto DefaultPostProcessSettings = 0xb30; // FPostProcessSettings
		constexpr auto MaterialOutline = 0x1080; // UMaterialInstanceDynamic*
		constexpr auto MaterialLens = 0x1088; // UMaterialInstanceDynamic*
		constexpr auto gameStarted = 0x1090; // bool
		constexpr auto IdleTime = 0x1094; // float
		constexpr auto IdleBool = 0x1098; // bool
		constexpr auto IdleTimeReady = 0x109c; // float
		constexpr auto ToChairLoc = 0x10a0; // FVector
		constexpr auto SurvChaseDelay = 0x10b0; // TArray<float>
		constexpr auto DeltaSec = 0x10c0; // float
		constexpr auto IdleBlock = 0x10c4; // bool
		constexpr auto MaterialVignette = 0x10c8; // UMaterialInstanceDynamic*
		constexpr auto MaterialBlur = 0x10d0; // UMaterialInstanceDynamic*
		constexpr auto StopMove? = 0x10d8; // bool
		constexpr auto StunTimeBySurv = 0x10dc; // float
		constexpr auto LastAirTime = 0x10e0; // float
		constexpr auto Tutorial? = 0x10e4; // bool
		constexpr auto BlockSurvTrack? = 0x10e5; // bool
		constexpr auto CDAttackDuration = 0x10e8; // float
		constexpr auto AttackAnimDuration = 0x10ec; // float
		constexpr auto CDAttackDurationBig = 0x10f0; // float
		constexpr auto AttackAnimDurationBig = 0x10f4; // float
		constexpr auto chaseDelayer = 0x10f8; // bool
		constexpr auto UberRotate = 0x10f9; // bool
		constexpr auto DeltaSecSpeed = 0x10fc; // float
		constexpr auto SeekBool = 0x1100; // bool
		constexpr auto GetReady = 0x1101; // bool
		constexpr auto SeekDetectCheck = 0x1102; // bool
		constexpr auto OnlyTPP? = 0x1103; // bool
		constexpr auto DoOnceTrack = 0x1104; // bool
		constexpr auto SurfsOnEye2 = 0x1108; // TArray<ASurvivorMasterBP_C*>
		constexpr auto ImpulseStunMultiply = 0x1118; // float
		constexpr auto SurvivorStunRef = 0x1120; // ASurvivorMasterBP_C*
		constexpr auto NewVar_5 = 0x1128; // bool
		constexpr auto Phys Mat = 0x1130; // UPhysicalMaterial*
		constexpr auto Freeze = 0x1138; // bool
		constexpr auto Stun Actor = 0x1140; // AActor*
		constexpr auto BloodLustLvl = 0x1148; // float
		constexpr auto BloodLustSpeedAdd = 0x114c; // float
		constexpr auto BloodLustTimeActual = 0x1150; // float
		constexpr auto BloodLustSpeedSubtraction = 0x1154; // float
		constexpr auto BloodLustOffB = 0x1158; // bool
		constexpr auto BloodLustTimeOff = 0x115c; // float
		constexpr auto BloodLustHitted = 0x1160; // bool
		constexpr auto NewVar_6 = 0x1164; // float
		constexpr auto BloodLustTimeLvl = 0x1168; // float
		constexpr auto BloodLustLvlInt = 0x116c; // int32_t
		constexpr auto BloodLustTimeDiv = 0x1170; // float
		constexpr auto Range? = 0x1174; // bool
		constexpr auto SurvsSeeTimer = 0x1178; // TArray<float>
		constexpr auto BInFocus = 0x1188; // bool
		constexpr auto InFocusTime = 0x118c; // float
		constexpr auto BQuietHour = 0x1190; // bool
		constexpr auto BTimeIsTicking = 0x1191; // bool
		constexpr auto BNightmare = 0x1192; // bool
		constexpr auto BObservation = 0x1193; // bool
		constexpr auto BPunishment = 0x1194; // bool
		constexpr auto BDeadMansChest = 0x1195; // bool
		constexpr auto BImprisonment = 0x1196; // bool
		constexpr auto BBrokenTime = 0x1197; // bool
		constexpr auto BBait = 0x1198; // bool
		constexpr auto BloodLustFMOD = 0x11a0; // FFMODEventInstance
		constexpr auto UntouchMaxSpeedDefault = 0x11a8; // float
		constexpr auto Scale = 0x11ac; // FVector
		constexpr auto StunTimeBeforeAnim = 0x11b8; // float
		constexpr auto StunTimeAfterAnim = 0x11bc; // float
		constexpr auto ChairDropChecker = 0x11c0; // bool
		constexpr auto Socket Name = 0x11c4; // FName
		constexpr auto CoinsCount = 0x11cc; // int32_t
		constexpr auto As New Alarm BP = 0x11d0; // ANewAlarmBP_C*
		constexpr auto BrokeAlarm = 0x11d8; // bool
		constexpr auto BrokeTime = 0x11dc; // float
		constexpr auto NewVar_7 = 0x11e0; // FVector
		constexpr auto TempCalculateRay = 0x11f0; // AActor*
		constexpr auto DistanceSurvPropSee = 0x11f8; // float
		constexpr auto SurvPropSeeRef = 0x1200; // ASurvivorMasterBP_C*
		constexpr auto tempPropSeeSurv = 0x1208; // ASurvivorMasterBP_C*
		constexpr auto PropSeeTime = 0x1210; // float
		constexpr auto KillerSpottedFmod = 0x1218; // FFMODEventInstance
		constexpr auto KillerSpotted2 = 0x1220; // FFMODEventInstance
		constexpr auto SoftOutline = 0x1228; // UMaterialInstanceDynamic*
		constexpr auto MoveAmbAudio = 0x1230; // UFMODAudioComponent*
		constexpr auto TestViewB = 0x1238; // bool
		constexpr auto TPPCamEvent = 0x1239; // bool
		constexpr auto NewVar_8 = 0x1240; // AFlashCoin_C*
		constexpr auto KillerCheats = 0x1248; // bool
		constexpr auto RangeMeshHit = 0x1250; // UStaticMeshComponent*
		constexpr auto RangeLocHit = 0x1258; // FVector
		constexpr auto TutorialBlock? = 0x1264; // bool
		constexpr auto PickupSurv = 0x1265; // bool
		constexpr auto Exp = 0x1268; // int32_t
		constexpr auto CurrentLVL = 0x126c; // int32_t
		constexpr auto MaxLVL = 0x1270; // int32_t
		constexpr auto PerkIndex = 0x1274; // int32_t
		constexpr auto Bloodhound? = 0x1278; // bool
		constexpr auto LastSurvMusBool = 0x1279; // bool
		constexpr auto BrokeAnim = 0x127a; // bool
		constexpr auto ForwardM = 0x127c; // float
		constexpr auto LeftM = 0x1280; // float
		constexpr auto TurnLookUpM = 0x1284; // float
		constexpr auto BloodlustLastCustom? = 0x1288; // bool
		constexpr auto WiggleMoveRight = 0x1289; // bool
		constexpr auto ParasiteMovementSpeed = 0x128c; // float
		constexpr auto IsGlued = 0x1290; // bool
		constexpr auto IsYellowJar = 0x1291; // bool
		constexpr auto SurvPreArrachPreName = 0x1294; // FName
		constexpr auto As Survivor Master BP = 0x12a0; // ASurvivorMasterBP_C*
		constexpr auto Invert Mouse Y? = 0x12a8; // bool
		constexpr auto TestPickup = 0x12a9; // bool
		constexpr auto HardMode = 0x12aa; // bool
		constexpr auto hardModeSpeedUp = 0x12ac; // float
		constexpr auto BloodLustUped? = 0x12b0; // bool
		constexpr auto ClockKillerSound = 0x12b8; // FFMODEventInstance
		constexpr auto OverlapOtherActor = 0x12c0; // AActor*
		constexpr auto JumpInProcess = 0x12c8; // bool
		constexpr auto PickupInProcess = 0x12c9; // bool
		constexpr auto intI = 0x12cc; // int32_t
		constexpr auto WiggleMoveBack = 0x12d0; // bool
		constexpr auto StunLoc = 0x12d4; // FVector
		constexpr auto StunnerTimer = 0x12e0; // float
		constexpr auto StunnerSurvAttachTimer = 0x12e4; // float
		constexpr auto StunnerSurvAttachBool = 0x12e8; // bool
		constexpr auto OldIndicatorPos = 0x12ec; // FVector
		constexpr auto OldCharIndicatorPos = 0x12f8; // FVector
		constexpr auto WidgetPropActorsIgnore = 0x1308; // TArray<AActor*>
	}

	namespace n_UToyBomb_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto BAnim = 0xf0; // bool
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_UGraphicSettingsWBP1_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AA_W = 0x268; // UCustomGraphicButton_C*
		constexpr auto Button_187 = 0x270; // UButton*
		constexpr auto Button_ChangeFOcus = 0x278; // UButton*
		constexpr auto Button_GV = 0x280; // UButton*
		constexpr auto EQ_W = 0x288; // UCustomGraphicButton_C*
		constexpr auto GQ_W = 0x290; // UCustomGraphicButton_C*
		constexpr auto Image_238 = 0x298; // UImage*
		constexpr auto Image_grayGV = 0x2a0; // UImage*
		constexpr auto MB_W = 0x2a8; // UCustomGraphicButton_C*
		constexpr auto Overlay_Gamma = 0x2b0; // UOverlay*
		constexpr auto PP_W = 0x2b8; // UCustomGraphicButton_C*
		constexpr auto ProgressBar_Gamma = 0x2c0; // UProgressBar*
		constexpr auto RES_W = 0x2c8; // UCustomGraphicButton_C*
		constexpr auto SHQ_W = 0x2d0; // UCustomGraphicButton_C*
		constexpr auto Slider_Gamma = 0x2d8; // USlider*
		constexpr auto SM_W = 0x2e0; // UCustomGraphicButton_C*
		constexpr auto SQ_W = 0x2e8; // UCustomGraphicButton_C*
		constexpr auto TextBlock_228 = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_247 = 0x2f8; // UTextBlock*
		constexpr auto TQ_W = 0x300; // UCustomGraphicButton_C*
		constexpr auto VSyn_W = 0x308; // UCustomGraphicButton_C*
		constexpr auto MainSettings = 0x310; // TArray<FText>
		constexpr auto MainSettings_1 = 0x320; // TArray<FText>
		constexpr auto Resolutions = 0x330; // TArray<FText>
		constexpr auto GraphIndex = 0x340; // int32_t
		constexpr auto PPIndex = 0x344; // int32_t
		constexpr auto AAIndex = 0x348; // int32_t
		constexpr auto ShadowIndex = 0x34c; // int32_t
		constexpr auto ResIndex = 0x350; // int32_t
		constexpr auto ScreenIndex = 0x354; // int32_t
		constexpr auto GraphCom = 0x358; // TArray<FText>
		constexpr auto PPCom = 0x368; // TArray<FText>
		constexpr auto AACom = 0x378; // TArray<FText>
		constexpr auto ShadowCom = 0x388; // TArray<FText>
		constexpr auto ResCom = 0x398; // TArray<FText>
		constexpr auto ScreenText = 0x3a8; // TArray<FText>
		constexpr auto Ress = 0x3b8; // TArray<FIntPoint>
		constexpr auto ScreenStrings = 0x3c8; // TArray<FText>
		constexpr auto Saved = 0x3d8; // USaveGame*
		constexpr auto SHQCom = 0x3e0; // TArray<FText>
		constexpr auto SHQSettings = 0x3f0; // TArray<FText>
		constexpr auto SHQIndex = 0x400; // int32_t
		constexpr auto MBCom = 0x408; // TArray<FText>
		constexpr auto MBIndex = 0x418; // int32_t
		constexpr auto MB_TextBtn = 0x420; // TArray<FText>
		constexpr auto LastKnowFocused = 0x430; // UButton*
		constexpr auto HoverFocus = 0x438; // UButton*
		constexpr auto LastKnowFocusKeyboard = 0x440; // UCustomGraphicButton_C*
		constexpr auto EventDispatcher_UpPress = 0x448; // FMulticastInlineDelegate
		constexpr auto ArrayButtons = 0x458; // TArray<UButton*>
		constexpr auto MouseController? = 0x468; // bool
		constexpr auto Selected = 0x470; // UCustomGraphicButton_C*
		constexpr auto EQCOM = 0x478; // TArray<FText>
		constexpr auto EQ_TextBtn = 0x488; // TArray<FText>
		constexpr auto EQIndex = 0x498; // int32_t
		constexpr auto VSyncCom = 0x4a0; // TArray<FText>
		constexpr auto VSyncIndex = 0x4b0; // int32_t
		constexpr auto TQIndex = 0x4b4; // int32_t
		constexpr auto TQCOM = 0x4b8; // TArray<FText>
		constexpr auto TQCOM_Bias = 0x4c8; // TArray<FText>
		constexpr auto TQCOM_Pool = 0x4d8; // TArray<FText>
		constexpr auto KeyboardHoveredWidget = 0x4e8; // UWidget*
		constexpr auto TQCOM_MaxAnis = 0x4f0; // TArray<FText>
		constexpr auto ScreenMode = 0x500; // EWindowMode
		constexpr auto Gamma = 0x504; // float
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_USmoothSync {
		constexpr auto interpolationBackTime = 0xfc; // float
		constexpr auto ExtrapolationMode = 0x100; // ExtrapolationMode
		constexpr auto useExtrapolationTimeLimit = 0x101; // bool
		constexpr auto extrapolationTimeLimit = 0x104; // float
		constexpr auto useExtrapolationDistanceLimit = 0x108; // bool
		constexpr auto extrapolationDistanceLimit = 0x10c; // float
		constexpr auto sendPositionThreshold = 0x110; // float
		constexpr auto sendRotationThreshold = 0x114; // float
		constexpr auto sendScaleThreshold = 0x118; // float
		constexpr auto sendVelocityThreshold = 0x11c; // float
		constexpr auto sendAngularVelocityThreshold = 0x120; // float
		constexpr auto receivedPositionThreshold = 0x124; // float
		constexpr auto receivedRotationThreshold = 0x128; // float
		constexpr auto positionSnapThreshold = 0x12c; // float
		constexpr auto rotationSnapThreshold = 0x130; // float
		constexpr auto scaleSnapThreshold = 0x134; // float
		constexpr auto timeSmoothing = 0x138; // float
		constexpr auto positionLerpSpeed = 0x13c; // float
		constexpr auto rotationLerpSpeed = 0x140; // float
		constexpr auto scaleLerpSpeed = 0x144; // float
		constexpr auto syncPosition = 0x148; // SyncMode
		constexpr auto syncRotation = 0x149; // SyncMode
		constexpr auto syncScale = 0x14a; // SyncMode
		constexpr auto syncVelocity = 0x14b; // SyncMode
		constexpr auto syncAngularVelocity = 0x14c; // SyncMode
		constexpr auto syncMovementMode = 0x14d; // bool
		constexpr auto isPositionCompressed = 0x14e; // bool
		constexpr auto isRotationCompressed = 0x14f; // bool
		constexpr auto isScaleCompressed = 0x150; // bool
		constexpr auto isVelocityCompressed = 0x151; // bool
		constexpr auto isAngularVelocityCompressed = 0x152; // bool
		constexpr auto sendRate = 0x154; // float
		constexpr auto isUsingOriginRebasing = 0x158; // bool
		constexpr auto alwaysSendOrigin = 0x159; // bool
		constexpr auto realComponentToSync = 0x1f8; // USceneComponent*
		constexpr auto InterpolationTime = 0x218; // float
		constexpr auto atRestPositionThreshold = 0x350; // float
		constexpr auto atRestRotationThreshold = 0x354; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4d0; // FGuid
		constexpr auto ProxyComponentBases = 0x4e0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4f0; // int8_t
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x440; // FColor
		constexpr auto FrustumAngle = 0x444; // float
		constexpr auto FrustumAspectRatio = 0x448; // float
		constexpr auto FrustumStartDist = 0x44c; // float
		constexpr auto FrustumEndDist = 0x450; // float
		constexpr auto Texture = 0x458; // UTexture*
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UW_Path_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_EntryContainer = 0x268; // UHorizontalBox*
		constexpr auto RichTextBlock_92 = 0x270; // URichTextBlock*
		constexpr auto Path = 0x278; // TArray<UW_PathEntry_C*>
		constexpr auto RootEntry = 0x288; // UW_PathEntry_C*
		constexpr auto RootWidget = 0x290; // UWidget*
		constexpr auto NeedRemove = 0x298; // TArray<int32_t>
		constexpr auto HasRoot = 0x2a8; // bool
		constexpr auto bIsBlocked = 0x2a9; // bool
	}

	namespace n_UW_PlayerSkins_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SkinSelect = 0x268; // UWidgetAnimation*
		constexpr auto CharSelect = 0x270; // UWidgetAnimation*
		constexpr auto Button_LockAll = 0x278; // UButton*
		constexpr auto Button_UnlockAll = 0x280; // UButton*
		constexpr auto ScrollBox_Skins = 0x288; // UScrollBox*
		constexpr auto TextBlock_SkinName = 0x290; // UTextBlock*
		constexpr auto UniformGridPanel_CharSelect = 0x298; // UUniformGridPanel*
		constexpr auto VerticalBox_Develop = 0x2a0; // UVerticalBox*
		constexpr auto NameById = 0x2a8; // TMap<int32_t, FString>
		constexpr auto skinButtonInfoArr = 0x2f8; // TArray<UW_PlayerPortraitInfo_C*>
		constexpr auto ChararcterFocused = 0x308; // UW_PlayerPortraitInfo_C*
		constexpr auto SkinIndex = 0x310; // int32_t
		constexpr auto SkinselectItem = 0x318; // UW_PlayerSkinInfo_C*
		constexpr auto SkinSelectButtonArr = 0x320; // TArray<UW_PlayerSkinInfo_C*>
		constexpr auto ExplorerWidget = 0x330; // UW_Path_C*
		constexpr auto SkinselectItem_LastValid = 0x338; // UW_PlayerSkinInfo_C*
		constexpr auto MenuWidget = 0x340; // UWBP_CustomizationMenu_C*
		constexpr auto BeginAccessSkins = 0x348; // TArray<int32_t>
		constexpr auto SkinFocused = 0x358; // UW_PlayerSkinInfo_C*
		constexpr auto IsSkinSelectionActive = 0x360; // bool
	}

	namespace n_AGraffitiActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto decal = 0x228; // UDecalComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Timeline_0_time_34EAA401455F569E7367DEBBE557985B = 0x238; // float
		constexpr auto Timeline_0__Direction_34EAA401455F569E7367DEBBE557985B = 0x23c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x240; // UTimelineComponent*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UNightmare_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto Alarms = 0x128; // TArray<ANewAlarmBP_C*>
		constexpr auto RandomAlarmIndex = 0x138; // TArray<int32_t>
		constexpr auto RandomAlarmsRef = 0x148; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UW_GameResult_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AppearFromRight_Anim = 0x268; // UWidgetAnimation*
		constexpr auto AppearFromLeft_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ButtonMapHovered3 = 0x278; // UWidgetAnimation*
		constexpr auto ButtonMapHovered2 = 0x280; // UWidgetAnimation*
		constexpr auto ButtonMapHovered1 = 0x288; // UWidgetAnimation*
		constexpr auto ButtonMapAnim3 = 0x290; // UWidgetAnimation*
		constexpr auto ButtonMapAnim2 = 0x298; // UWidgetAnimation*
		constexpr auto ButtonMapAnim1 = 0x2a0; // UWidgetAnimation*
		constexpr auto FadeOutMatchRes = 0x2a8; // UWidgetAnimation*
		constexpr auto FadeOutVotMap = 0x2b0; // UWidgetAnimation*
		constexpr auto FadeInMatchRes = 0x2b8; // UWidgetAnimation*
		constexpr auto BackgroundBlur_114 = 0x2c0; // UBackgroundBlur*
		constexpr auto Button_Highlighs = 0x2c8; // UButton*
		constexpr auto Button_Level = 0x2d0; // UButton*
		constexpr auto Button_Rank = 0x2d8; // UButton*
		constexpr auto ButtonVoteMap1 = 0x2e0; // UButton*
		constexpr auto ButtonVoteMap1_2 = 0x2e8; // UButton*
		constexpr auto ButtonVoteMap1_3 = 0x2f0; // UButton*
		constexpr auto Canvas = 0x2f8; // UCanvasPanel*
		constexpr auto Image_156 = 0x300; // UImage*
		constexpr auto Image_CharacterSeparator = 0x308; // UImage*
		constexpr auto Image_HighlightsBG = 0x310; // UImage*
		constexpr auto Image_L1 = 0x318; // UImage*
		constexpr auto Image_L2 = 0x320; // UImage*
		constexpr auto Image_L3 = 0x328; // UImage*
		constexpr auto Image_LevelBG = 0x330; // UImage*
		constexpr auto KillerChar_Icon = 0x338; // UHorizontalBox*
		constexpr auto MapBG1 = 0x340; // UImage*
		constexpr auto MapBG2 = 0x348; // UImage*
		constexpr auto MapBG3 = 0x350; // UImage*
		constexpr auto MapBG_Border1 = 0x358; // UImage*
		constexpr auto MapBG_Border2 = 0x360; // UImage*
		constexpr auto MapBG_Border3 = 0x368; // UImage*
		constexpr auto MapBG_Border_Selected1 = 0x370; // UImage*
		constexpr auto MapBG_Border_Selected2 = 0x378; // UImage*
		constexpr auto MapBG_Border_Selected3 = 0x380; // UImage*
		constexpr auto MapImage1 = 0x388; // UImage*
		constexpr auto MapImage1_2 = 0x390; // UImage*
		constexpr auto MapImage1_3 = 0x398; // UImage*
		constexpr auto MapName1 = 0x3a0; // UTextBlock*
		constexpr auto MapName1_2 = 0x3a8; // UTextBlock*
		constexpr auto MapName1_3 = 0x3b0; // UTextBlock*
		constexpr auto MapVote1 = 0x3b8; // UTextBlock*
		constexpr auto MapVote1_2 = 0x3c0; // UTextBlock*
		constexpr auto MapVote1_3 = 0x3c8; // UTextBlock*
		constexpr auto NextGameTimer = 0x3d0; // UTextBlock*
		constexpr auto PlayersBoxPropnight = 0x3d8; // UHorizontalBox*
		constexpr auto Selected1 = 0x3e0; // USizeBox*
		constexpr auto Selected2 = 0x3e8; // USizeBox*
		constexpr auto Selected3 = 0x3f0; // USizeBox*
		constexpr auto SurvChar_Icons = 0x3f8; // UUniformGridPanel*
		constexpr auto TextBlock_HighlightsButton = 0x400; // UTextBlock*
		constexpr auto TextBlock_Label = 0x408; // UTextBlock*
		constexpr auto TextBlock_LevelButton = 0x410; // UTextBlock*
		constexpr auto WBP_EndGameLevel = 0x418; // UWBP_EndGameLevel_C*
		constexpr auto WBP_GameResultHighlight_Killer = 0x420; // UWBP_GameResultHighlight_C*
		constexpr auto WBP_GameResultHighlight_Surv_2 = 0x428; // UWBP_GameResultHighlight_C*
		constexpr auto WBP_GameResultHighlight_Surv_3 = 0x430; // UWBP_GameResultHighlight_C*
		constexpr auto WBP_GameResultHighlight_Surv_4 = 0x438; // UWBP_GameResultHighlight_C*
		constexpr auto WBP_GameResultHighlight_Surv_5 = 0x440; // UWBP_GameResultHighlight_C*
		constexpr auto WidgetSwitcher_StatContent = 0x448; // UWidgetSwitcher*
		constexpr auto PlayersState = 0x450; // TArray<APlayerState*>
		constexpr auto FadeTime = 0x460; // float
		constexpr auto RollNumber = 0x464; // int32_t
		constexpr auto RollArray = 0x468; // TArray<int32_t>
		constexpr auto Index = 0x478; // int32_t
		constexpr auto WinSurv = 0x47c; // bool
		constexpr auto imageArray = 0x480; // TArray<UPaperSprite*>
		constexpr auto RollStart = 0x490; // bool
		constexpr auto RollNum = 0x494; // int32_t
		constexpr auto RollFloat = 0x498; // float
		constexpr auto Serv? = 0x49c; // bool
		constexpr auto RollSpeed = 0x4a0; // float
		constexpr auto LootSoundStart = 0x4a8; // FFMODEventInstance
		constexpr auto RenderActor = 0x4b0; // AEndGameRenderMesh_C*
		constexpr auto EndGame? = 0x4b8; // bool
		constexpr auto Clicked? = 0x4b9; // bool
		constexpr auto Seconds = 0x4bc; // float
		constexpr auto StartFadeOut? = 0x4c0; // bool
		constexpr auto MistSound = 0x4c8; // FFMODEventInstance
		constexpr auto FadeSound? = 0x4d0; // bool
		constexpr auto MistVolume = 0x4d4; // float
		constexpr auto TempCategory = 0x4d8; // int32_t
		constexpr auto Killers? = 0x4dc; // int32_t
		constexpr auto ProgressBarPercentTemp = 0x4e0; // float
		constexpr auto Mapimage = 0x4e8; // TMap<FString, UTexture2D*>
		constexpr auto GameResultRow = 0x538; // TArray<UW_GameResultRow_C*>
		constexpr auto KillerArr = 0x548; // TArray<APlayerState*>
		constexpr auto PlayerArr = 0x558; // TArray<APlayerState*>
		constexpr auto Voted = 0x568; // bool
		constexpr auto VotedMap = 0x569; // bool
		constexpr auto PlayedAnim = 0x570; // TArray<UWidgetAnimation*>
		constexpr auto SelectedMap = 0x580; // TArray<UImage*>
		constexpr auto SelectadArr = 0x590; // TArray<USizeBox*>
		constexpr auto imageL = 0x5a0; // TArray<UImage*>
		constexpr auto VotedMap_3 = 0x5b0; // bool
		constexpr auto VotedMap_4 = 0x5b1; // bool
		constexpr auto IsSelectingAnimPlaying = 0x5b2; // bool
		constexpr auto AnimTimer_2 = 0x5b8; // FTimerHandle
		constexpr auto AnimTimer_3 = 0x5c0; // FTimerHandle
		constexpr auto AnimTimer_4 = 0x5c8; // FTimerHandle
		constexpr auto IsAnimForwardDirection_2 = 0x5d0; // bool
		constexpr auto IsAnimForwardDirection_3 = 0x5d1; // bool
		constexpr auto IsAnimForwardDirection_4 = 0x5d2; // bool
		constexpr auto SurvHighlightsArray = 0x5d8; // TArray<UWBP_GameResultHighlight_C*>
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UPlayerScore_ReportUser_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button = 0x268; // UButton*
		constexpr auto Button_69 = 0x270; // UButton*
		constexpr auto Image_286 = 0x278; // UImage*
		constexpr auto Image_451 = 0x280; // UImage*
		constexpr auto Image_530 = 0x288; // UImage*
		constexpr auto SizeBox_Report = 0x290; // USizeBox*
		constexpr auto Click = 0x298; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UMagicLeapSettings {
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UDoppelKillerWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x460; // FVector
		constexpr auto Rotation = 0x470; // FQuat
		constexpr auto Dimensions = 0x480; // FVector
		constexpr auto LineThickness = 0x48c; // float
		constexpr auto bRemoveHiddenLines = 0x490; // bool
		constexpr auto bEnableAxisFlip = 0x491; // bool
	}

	namespace n_UEOSCoreTitleStorageReadFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UChargeSpell_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Casted? = 0xf0; // bool
		constexpr auto Delta Seconds = 0xf4; // float
		constexpr auto CastTime = 0xf8; // float
		constexpr auto CastTimeDef = 0xfc; // float
		constexpr auto Move! = 0x100; // bool
		constexpr auto UseTimeDef = 0x104; // float
		constexpr auto UseTime = 0x108; // float
		constexpr auto SurvArr = 0x110; // TArray<ASurvivorMasterBP_C*>
		constexpr auto Peregrev = 0x120; // bool
		constexpr auto cdDelay = 0x124; // float
		constexpr auto CdDelayDef = 0x128; // float
		constexpr auto Rabbit = 0x130; // ARabbit_C*
		constexpr auto tempTime = 0x138; // float
		constexpr auto Caster = 0x13c; // bool
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x258; // float
		constexpr auto Contrast = 0x25c; // float
		constexpr auto OcclusionExponent = 0x260; // float
		constexpr auto MinOcclusion = 0x264; // float
		constexpr auto OcclusionTint = 0x268; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x26c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x270; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x274; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x278; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x27c; // float
		constexpr auto OcclusionCombineMode = 0x280; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UEOSCoreSessionsUpdateSession {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UKillerSpell_C {
		constexpr auto UberGraphFrame = 0xd8; // FPointerToUberGraphFrame
		constexpr auto Killer = 0xe0; // AKillerMasterBP_C*
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_ULuminARSessionConfig {
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UMagicLeapLightingTrackingComponent {
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UW_PlayCard_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Click_Blocked_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Hover_Blocked_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Hover_Anim_Lobby = 0x278; // UWidgetAnimation*
		constexpr auto HorizontalBox_MatchmakingContent = 0x280; // UHorizontalBox*
		constexpr auto Image_90 = 0x288; // UImage*
		constexpr auto Image_112 = 0x290; // UImage*
		constexpr auto Image_125 = 0x298; // UImage*
		constexpr auto Image_BG = 0x2a0; // UImage*
		constexpr auto Image_ContentBG = 0x2a8; // UImage*
		constexpr auto Image_Gradient = 0x2b0; // UImage*
		constexpr auto Image_IconMMR = 0x2b8; // UImage*
		constexpr auto Overlay_Content = 0x2c0; // UOverlay*
		constexpr auto SizeBox_Card = 0x2c8; // USizeBox*
		constexpr auto SizeBox_Content = 0x2d0; // USizeBox*
		constexpr auto TextBlock_Content = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_Header = 0x2e0; // UTextBlock*
		constexpr auto VerticalBox_MatchmakingHeader = 0x2e8; // UVerticalBox*
		constexpr auto CardType = 0x2f0; // FName
		constexpr auto SearchGame_OnClicked = 0x2f8; // FMulticastInlineDelegate
		constexpr auto CreateGame_OnClicked = 0x308; // FMulticastInlineDelegate
		constexpr auto ServerBrowser_OnClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto LobbyAnimation? = 0x328; // bool
		constexpr auto IsBlocked = 0x329; // bool
		constexpr auto ContentWidgetRef = 0x330; // UW_PlayCardContent_C*
		constexpr auto AnimTarget = 0x338; // float
		constexpr auto AnimTimer = 0x340; // FTimerHandle
		constexpr auto Is Forwar Direction = 0x348; // bool
		constexpr auto Width = 0x34c; // float
		constexpr auto Height = 0x350; // float
		constexpr auto animationSpeed = 0x354; // float
	}

	namespace n_APropnightBeaconHostObject {
		constexpr auto PNClientBeaconType = 0x248; // AOnlineBeaconClient*
	}

	namespace n_ABP_ItemSpawnPoint_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Cube = 0x228; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Manager = 0x238; // UBP_ItemsManager_C*
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UW_MainMenu_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HideSocAndVer_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Show_BanNotification = 0x270; // UWidgetAnimation*
		constexpr auto HideSocialNetworks_Anim = 0x278; // UWidgetAnimation*
		constexpr auto ShowHide_Social = 0x280; // UWidgetAnimation*
		constexpr auto FadeBlur = 0x288; // UWidgetAnimation*
		constexpr auto QuitMove_Anim = 0x290; // UWidgetAnimation*
		constexpr auto SettingsMove_Anim = 0x298; // UWidgetAnimation*
		constexpr auto TutorialMove_Anim = 0x2a0; // UWidgetAnimation*
		constexpr auto PlayMove_Anim = 0x2a8; // UWidgetAnimation*
		constexpr auto BackButton_Anim = 0x2b0; // UWidgetAnimation*
		constexpr auto Chat_Anim = 0x2b8; // UWidgetAnimation*
		constexpr auto ChangeSwitcherWidget_Anim = 0x2c0; // UWidgetAnimation*
		constexpr auto Logo_Anim = 0x2c8; // UWidgetAnimation*
		constexpr auto FadeIn = 0x2d0; // UWidgetAnimation*
		constexpr auto MainMenu_Appearance_Anim = 0x2d8; // UWidgetAnimation*
		constexpr auto BuildNumber = 0x2e0; // UTextBlock*
		constexpr auto Button = 0x2e8; // UButton*
		constexpr auto Button_2 = 0x2f0; // UButton*
		constexpr auto Button_79 = 0x2f8; // UButton*
		constexpr auto Button_198 = 0x300; // UButton*
		constexpr auto Button_525 = 0x308; // UButton*
		constexpr auto Button_632 = 0x310; // UButton*
		constexpr auto Button_Discord_Link = 0x318; // UButton*
		constexpr auto Button_Facebook_Link = 0x320; // UButton*
		constexpr auto Button_Instagram_Link = 0x328; // UButton*
		constexpr auto Button_Lootbox = 0x330; // UButton*
		constexpr auto Button_Play = 0x338; // UButton*
		constexpr auto Button_QUIT = 0x340; // UButton*
		constexpr auto Button_Settings = 0x348; // UButton*
		constexpr auto Button_Tutorial = 0x350; // UButton*
		constexpr auto Button_Twitter_Link = 0x358; // UButton*
		constexpr auto CanvasPanel_NewMainMenu = 0x360; // UCanvasPanel*
		constexpr auto ChatWindow = 0x368; // UChatWindow_C*
		constexpr auto ClearPerkButton = 0x370; // UButton*
		constexpr auto HorizontalBox_Social = 0x378; // UHorizontalBox*
		constexpr auto Image_60 = 0x380; // UImage*
		constexpr auto Image_88 = 0x388; // UImage*
		constexpr auto Image_905 = 0x390; // UImage*
		constexpr auto Image_DiscordLogoBG = 0x398; // UImage*
		constexpr auto Image_FadeBG = 0x3a0; // UImage*
		constexpr auto KillerPerkButton = 0x3a8; // UButton*
		constexpr auto Overlay_RedLine = 0x3b0; // UOverlay*
		constexpr auto Perk1 = 0x3b8; // UButton*
		constexpr auto Perk1Name = 0x3c0; // UTextBlock*
		constexpr auto Perk2 = 0x3c8; // UButton*
		constexpr auto Perk2Name = 0x3d0; // UTextBlock*
		constexpr auto Perk3 = 0x3d8; // UButton*
		constexpr auto Perk3Name = 0x3e0; // UTextBlock*
		constexpr auto PerkDesc = 0x3e8; // UTextBlock*
		constexpr auto PerkList = 0x3f0; // UHorizontalBox*
		constexpr auto PerkName = 0x3f8; // UTextBlock*
		constexpr auto PerkWindow = 0x400; // UOverlay*
		constexpr auto PlayerType = 0x408; // UHorizontalBox*
		constexpr auto ProgressBar_KB = 0x410; // UProgressBar*
		constexpr auto ProgressBar_Mouse = 0x418; // UProgressBar*
		constexpr auto SizeBox_Buttons = 0x420; // USizeBox*
		constexpr auto SurvPerkButton = 0x428; // UButton*
		constexpr auto TestSkinHBox = 0x430; // UHorizontalBox*
		constexpr auto TestSkinVBox = 0x438; // UVerticalBox*
		constexpr auto TextBlock_Lootbox = 0x440; // UTextBlock*
		constexpr auto TextBlock_Play = 0x448; // UTextBlock*
		constexpr auto TextBlock_Quit = 0x450; // UTextBlock*
		constexpr auto TextBlock_Settings = 0x458; // UTextBlock*
		constexpr auto TextBlock_TIMER = 0x460; // UTextBlock*
		constexpr auto TextBlock_Tutorial = 0x468; // UTextBlock*
		constexpr auto W_PlayScreen = 0x470; // UW_PlayScreen_C*
		constexpr auto W_PressAnyKeyScreen = 0x478; // UW_PressAnyKeyScreen_C*
		constexpr auto WBP_CustomizationMenu = 0x480; // UWBP_CustomizationMenu_C*
		constexpr auto WBP_LootboxMain = 0x488; // UWBP_LootboxMain_C*
		constexpr auto WBP_NewItemMarker_Skins = 0x490; // UWBP_NewItemMarker_C*
		constexpr auto WBP_QuickSearch = 0x498; // UWBP_QuickSearch_C*
		constexpr auto WBP_QuitDialog = 0x4a0; // UWBP_QuitDialog_C*
		constexpr auto WBP_ServerMessage = 0x4a8; // UWBP_ServerMessage_C*
		constexpr auto WBP_SocialUI = 0x4b0; // UWBP_SocialUI_C*
		constexpr auto WidgetSwitcher_MainMenu = 0x4b8; // UWidgetSwitcher*
		constexpr auto NumberOfSessions = 0x4c0; // int32_t
		constexpr auto Sessions = 0x4c8; // TArray<FBlueprintSessionResult>
		constexpr auto MinPing = 0x4d8; // int32_t
		constexpr auto AvialableSession = 0x4e0; // FBlueprintSessionResult
		constexpr auto Found? = 0x5e8; // bool
		constexpr auto MaxPlayers = 0x5ec; // int32_t
		constexpr auto HostLevel = 0x5f0; // FName
		constexpr auto GI = 0x5f8; // UGI_Prophunt_C*
		constexpr auto ServPing = 0x600; // int32_t
		constexpr auto SettingsOpen? = 0x604; // bool
		constexpr auto SearchingOpen? = 0x605; // bool
		constexpr auto int = 0x608; // int32_t
		constexpr auto arrayImg = 0x610; // TArray<UTexture2D*>
		constexpr auto arrayName = 0x620; // TArray<FString>
		constexpr auto MainMenuSound = 0x630; // FFMODEventInstance
		constexpr auto MenuSoundStarted? = 0x638; // bool
		constexpr auto LastKnowButton = 0x640; // UButton*
		constexpr auto FocusedStyleButton = 0x648; // FButtonStyle
		constexpr auto UnFocusedStyleButton = 0x8c0; // FButtonStyle
		constexpr auto SettingButtonIsHover? = 0xb38; // bool
		constexpr auto ButtonsArray = 0xb40; // TArray<UButton*>
		constexpr auto ImgNormalArray = 0xb50; // TArray<UObject*>
		constexpr auto ImgHoverArray = 0xb60; // TArray<UObject*>
		constexpr auto ImgPressedArray = 0xb70; // TArray<UObject*>
		constexpr auto ButtonsIndex = 0xb80; // int32_t
		constexpr auto ButtonImageSize_Normal = 0xb84; // FVector2D
		constexpr auto ButtonImageSize_Hovered = 0xb8c; // FVector2D
		constexpr auto ButtonImageSizePressed = 0xb94; // FVector2D
		constexpr auto Buttons_LinksArray = 0xba0; // TArray<UButton*>
		constexpr auto TextBlockArray = 0xbb0; // TArray<UTextBlock*>
		constexpr auto ImgPressedLinksArray = 0xbc0; // TArray<UObject*>
		constexpr auto ImgNormalLinksArray = 0xbd0; // TArray<UObject*>
		constexpr auto ImgHoverLinksArray = 0xbe0; // TArray<UObject*>
		constexpr auto ButtonImageSize_Links = 0xbf0; // FVector2D
		constexpr auto BlockButtonIsHover? = 0xbf8; // bool
		constexpr auto KillersCount = 0xbfc; // int32_t
		constexpr auto SurvCount = 0xc00; // int32_t
		constexpr auto SessionList = 0xc08; // TArray<UBP_SessionData_C*>
		constexpr auto IsInventoryButtonHovered? = 0xc18; // bool
		constexpr auto IsPlayButtonHovered? = 0xc19; // bool
		constexpr auto IsPracticeButtonPressed? = 0xc1a; // bool
		constexpr auto HoveredButton = 0xc20; // UButton*
		constexpr auto PerkNumber = 0xc28; // int32_t
		constexpr auto SurvPerk? = 0xc2c; // bool
		constexpr auto Last Text Name S = 0xc30; // FText
		constexpr auto Last Text Desc S = 0xc48; // FText
		constexpr auto Last Text Name K = 0xc60; // FText
		constexpr auto Last Text Desc K = 0xc78; // FText
		constexpr auto In Style Hovered = 0xc90; // FSlateBrush
		constexpr auto In Style Normal = 0xd18; // FSlateBrush
		constexpr auto In Style Normal_1 = 0xda0; // FSlateBrush
		constexpr auto In Style Hovered_1 = 0xe28; // FSlateBrush
		constexpr auto ButtonAnimsMap = 0xeb0; // TMap<UButton*, UWidgetAnimation*>
		constexpr auto IsButtonsUnpressible = 0xf00; // bool
		constexpr auto SliderValueFocus = 0xf04; // float
		constexpr auto SliderValueFocus_KB = 0xf08; // float
		constexpr auto In Style Normal_2 = 0xf10; // FSlateBrush
		constexpr auto In Style Normal_3 = 0xf98; // FSlateBrush
		constexpr auto In Style Normal_4 = 0x1020; // FSlateBrush
		constexpr auto In Style Normal_5 = 0x10a8; // FSlateBrush
		constexpr auto Char = 0x1130; // SurvChars
		constexpr auto IsMenuReady = 0x1131; // bool
		constexpr auto IsTutorialBlocked = 0x1132; // bool
		constexpr auto BanTimer = 0x1138; // FTimerHandle
		constexpr auto BP Ban Manager = 0x1140; // UBP_BanManager_C*
		constexpr auto VesionBuild = 0x1148; // FText
		constexpr auto bIsEscapeBlocked = 0x1160; // bool
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x690; // UObject*
		constexpr auto AnimClass = 0x698; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6a0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6a8; // UAnimInstance*
		constexpr auto AnimationData = 0x6b0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6d8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6e4; // FVector
		constexpr auto LinkedInstances = 0x720; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x730; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8a0; // float
		constexpr auto KinematicBonesUpdateType = 0x8a4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8a5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8a7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8a9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8a9; // char : 1
		constexpr auto bHasValidBodies = 0x8a9; // char : 1
		constexpr auto bBlendPhysics = 0x8a9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8a9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8a9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8aa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8b0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8b0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8b0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8b0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8b1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8b1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8b1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8b1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8b1; // char : 1
		constexpr auto bPauseAnims = 0x8b1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8b1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8b2; // char : 1
		constexpr auto bForceRefpose = 0x8b2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bOldForceRefPose = 0x8b2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8b2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8b2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8b2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8b3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8b3; // char : 1
		constexpr auto bUseBendingElements = 0x8b3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8b3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8b3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8b3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8b3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8b3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8b4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8b6; // uint16_t
		constexpr auto MassMode = 0x8b8; // EClothMassMode
		constexpr auto UniformMass = 0x8bc; // float
		constexpr auto TotalMass = 0x8c0; // float
		constexpr auto Density = 0x8c4; // float
		constexpr auto MinPerParticleMass = 0x8c8; // float
		constexpr auto ClothBlendWeight = 0x8cc; // float
		constexpr auto EdgeStiffness = 0x8d0; // float
		constexpr auto BendingStiffness = 0x8d4; // float
		constexpr auto AreaStiffness = 0x8d8; // float
		constexpr auto VolumeStiffness = 0x8dc; // float
		constexpr auto StrainLimitingStiffness = 0x8e0; // float
		constexpr auto ShapeTargetStiffness = 0x8e4; // float
		constexpr auto bWaitForParallelClothTask = 0x8e8; // bool
		constexpr auto DisallowedAnimCurves = 0x8f0; // TArray<FName>
		constexpr auto BodySetup = 0x900; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x910; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x920; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x9f8; // float
		constexpr auto TeleportRotationThreshold = 0x9fc; // float
		constexpr auto LastPoseTickFrame = 0xa08; // uint32_t
		constexpr auto ClothingInteractor = 0xa60; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb30; // FMulticastInlineDelegate
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_UEOSCoreAuthLogin {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UEOSCoreLobbyUpdateLobby {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_APC_MainMenu_C {
		constexpr auto UberGraphFrame = 0x5c0; // FPointerToUberGraphFrame
		constexpr auto BP_BanManager = 0x5c8; // UBP_BanManager_C*
		constexpr auto BP_PC_MenuPlayfabCustomGames = 0x5d0; // UBP_PC_MenuPlayfabCustomGames_C*
		constexpr auto BP_PC_MenuPlayfab = 0x5d8; // UBP_PC_MenuPlayfab_C*
		constexpr auto BP_HTTP_Wrapper = 0x5e0; // UBP_HTTP_Wrapper_C*
		constexpr auto PlayFabTitleID = 0x5e8; // FString
		constexpr auto LoginDataSlotName = 0x5f8; // FString
		constexpr auto ID = 0x608; // FString
		constexpr auto IsLoggedIn = 0x618; // bool
		constexpr auto IsBusy = 0x619; // bool
		constexpr auto ServerListReq = 0x620; // UObject*
		constexpr auto BuildId = 0x628; // FString
		constexpr auto Region = 0x638; // FString
		constexpr auto ServerListResponse = 0x648; // UObject*
		constexpr auto HasActiveServer = 0x650; // bool
		constexpr auto ActiveSessionID = 0x658; // FString
		constexpr auto Address = 0x668; // FString
		constexpr auto ServerDetailsRequest = 0x678; // UObject*
		constexpr auto ServerDetailsResponse = 0x680; // UObject*
		constexpr auto Opaopa = 0x688; // FString
		constexpr auto Sessions = 0x698; // TArray<FBlueprintSessionResult>
		constexpr auto SaveNameData = 0x6a8; // FString
		constexpr auto UserDataLocal = 0x6b8; // USaveGame*
		constexpr auto Logined = 0x6c0; // bool
		constexpr auto CameraActor = 0x6c8; // AMainMenuCameraActor_C*
		constexpr auto Tab = 0x6d0; // int32_t
		constexpr auto ServerId = 0x6d8; // FString
		constexpr auto IsCreatingServer = 0x6e8; // bool
		constexpr auto AutoJoinAttempts = 0x6ec; // int32_t
		constexpr auto IsAutoConnect = 0x6f0; // bool
		constexpr auto IsSearching = 0x6f1; // bool
		constexpr auto LastPingQoSResult = 0x6f8; // TArray<FPingQoSInfo>
		constexpr auto OnPlayfabReady = 0x708; // FMulticastInlineDelegate
		constexpr auto OnMatchFoundEvent = 0x718; // FMulticastInlineDelegate
		constexpr auto IsExit = 0x728; // bool
		constexpr auto stringCheat = 0x730; // FString
		constexpr auto IsPlayfabBackend = 0x740; // bool
		constexpr auto VaRestRequest = 0x748; // UVaRestRequestJSON*
		constexpr auto lootbox = 0x750; // AActor*
		constexpr auto OnBeginSteamCheck = 0x758; // FMulticastInlineDelegate
		constexpr auto OnBeginLoginPlayfab = 0x768; // FMulticastInlineDelegate
		constexpr auto OnSteamCheckError = 0x778; // FMulticastInlineDelegate
		constexpr auto BlockESC = 0x788; // bool
		constexpr auto SearchRole = 0x78c; // int32_t
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_APhysicsCharacter {
		constexpr auto realComponentToSync = 0x4c8; // USceneComponent*
		constexpr auto PrimitiveComponent = 0x4d0; // UPrimitiveComponent*
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UEOSCoreSessionsUnregisterPlayers {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UEOSCoreUIHideFriends {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_AMine_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x228; // UFMODAudioComponent*
		constexpr auto Spawn = 0x230; // UFMODAudioComponent*
		constexpr auto StaticMesh = 0x238; // UStaticMeshComponent*
		constexpr auto Box = 0x240; // UBoxComponent*
		constexpr auto Mine = 0x248; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x250; // USceneComponent*
		constexpr auto ShootDelay_Lerp_D4090CCF4B323182DE8FF4B79A93D459 = 0x258; // float
		constexpr auto ShootDelay__Direction_D4090CCF4B323182DE8FF4B79A93D459 = 0x25c; // ETimelineDirection
		constexpr auto ShootDelay = 0x260; // UTimelineComponent*
		constexpr auto Survs = 0x268; // TArray<ASurvivorMasterBP_C*>
		constexpr auto TargetSurvs = 0x278; // TArray<ASurvivorMasterBP_C*>
		constexpr auto Block? = 0x288; // bool
		constexpr auto Target = 0x290; // ASurvivorMasterBP_C*
		constexpr auto Killer = 0x298; // AKillerMasterBP_C*
		constexpr auto LocalZ = 0x2a0; // float
		constexpr auto EaseAlpha = 0x2a4; // float
		constexpr auto EaseUp = 0x2a8; // bool
		constexpr auto Overlapping Actors = 0x2b0; // TArray<AActor*>
		constexpr auto TransitionTime = 0x2c0; // float
		constexpr auto TurnOnDuration = 0x2c4; // float
		constexpr auto ErodeSubtractDef = 0x2c8; // float
		constexpr auto TurnOffDuration = 0x2cc; // float
		constexpr auto matRef = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto Float1 = 0x2d8; // float
		constexpr auto TurnOff = 0x2dc; // bool
		constexpr auto TurnOn = 0x2dd; // bool
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x440; // int32_t
		constexpr auto SectionBaseY = 0x444; // int32_t
		constexpr auto ComponentSizeQuads = 0x448; // int32_t
		constexpr auto SubsectionSizeQuads = 0x44c; // int32_t
		constexpr auto NumSubsections = 0x450; // int32_t
		constexpr auto OverrideMaterial = 0x458; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x460; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x468; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x478; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x488; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x498; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4a8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4b8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4c0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4d0; // float
		constexpr auto HeightmapScaleBias = 0x4e0; // FVector4
		constexpr auto CachedLocalBox = 0x4f0; // FBox
		constexpr auto CollisionComponent = 0x50c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x528; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x530; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x540; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x550; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x558; // FGuid
		constexpr auto IrrelevantLights = 0x568; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x578; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x57c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x580; // float
		constexpr auto PositiveZBoundsExtension = 0x584; // float
		constexpr auto StaticLightingResolution = 0x588; // float
		constexpr auto ForcedLOD = 0x58c; // int32_t
		constexpr auto LODBias = 0x590; // int32_t
		constexpr auto StateId = 0x594; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5a4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5b8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5c0; // char
		constexpr auto MobileMaterialInterface = 0x5c8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5d0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5e0; // TArray<UTexture2D*>
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_USurvivalEffectsUI_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto StartFadeOut = 0x268; // UWidgetAnimation*
		constexpr auto StartFadeIn = 0x270; // UWidgetAnimation*
		constexpr auto HitAnim = 0x278; // UWidgetAnimation*
		constexpr auto Bleeding = 0x280; // UImage*
		constexpr auto Fade = 0x288; // UImage*
		constexpr auto hit = 0x290; // UImage*
		constexpr auto Bleeding? = 0x298; // bool
		constexpr auto Bleeding1 = 0x29c; // FLinearColor
		constexpr auto Bleeding2 = 0x2ac; // FLinearColor
		constexpr auto change? = 0x2bc; // bool
		constexpr auto Normal = 0x2c0; // FLinearColor
		constexpr auto Faded? = 0x2d0; // bool
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_AExplosion_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x228; // UFMODAudioComponent*
		constexpr auto ParticleSystem = 0x230; // UParticleSystemComponent*
		constexpr auto RadialForce = 0x238; // URadialForceComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
	}

	namespace n_URegeneration_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto TestMode? = 0x100; // bool
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDrDolittle_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4d0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4e0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4e8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x4f8; // int32_t
		constexpr auto InstanceStartCullDistance = 0x4fc; // int32_t
		constexpr auto InstanceEndCullDistance = 0x500; // int32_t
		constexpr auto InstanceReorderTable = 0x508; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x560; // int32_t
		constexpr auto CachedMappings = 0x568; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UEOSCoreEcomQueryEntitlements {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UKeymasterLevelSystem_C {
		constexpr auto UberGraphFrame = 0x100; // FPointerToUberGraphFrame
		constexpr auto KeymasterRef = 0x108; // AKeymaster_C*
		constexpr auto DamageLvls = 0x110; // TArray<int32_t>
		constexpr auto RaduisLvls = 0x120; // TArray<float>
		constexpr auto EyeDurationLvls = 0x130; // TArray<float>
		constexpr auto Duration = 0x140; // float
		constexpr auto CDAstral = 0x144; // float
		constexpr auto CDAstralLvls = 0x148; // TArray<float>
		constexpr auto Damage = 0x158; // int32_t
		constexpr auto Radius = 0x15c; // float
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UW_MiniLobby_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ClickedReady_3 = 0x268; // UWidgetAnimation*
		constexpr auto ButtonReadyAnimWHITE_3 = 0x270; // UWidgetAnimation*
		constexpr auto ButtonReadyAnimRED_3 = 0x278; // UWidgetAnimation*
		constexpr auto ButtonReadyAnimWHITE = 0x280; // UWidgetAnimation*
		constexpr auto PrivateButtonAnim = 0x288; // UWidgetAnimation*
		constexpr auto ShowReady = 0x290; // UWidgetAnimation*
		constexpr auto HideStart = 0x298; // UWidgetAnimation*
		constexpr auto ClickedReady = 0x2a0; // UWidgetAnimation*
		constexpr auto ButtonReadyAnimRED = 0x2a8; // UWidgetAnimation*
		constexpr auto ButtonConfirmAnim = 0x2b0; // UWidgetAnimation*
		constexpr auto ButtonStartAnim = 0x2b8; // UWidgetAnimation*
		constexpr auto BackgroundBlur_Timer_Middle = 0x2c0; // UBackgroundBlur*
		constexpr auto ButtonPractice = 0x2c8; // UButton*
		constexpr auto ButtonPrivateInvite = 0x2d0; // UButton*
		constexpr auto ButtonReady = 0x2d8; // UButton*
		constexpr auto ButtonStart = 0x2e0; // UButton*
		constexpr auto ButtonTextBlock = 0x2e8; // UTextBlock*
		constexpr auto CanvasPanel_1 = 0x2f0; // UCanvasPanel*
		constexpr auto CanvasPlayers = 0x2f8; // UCanvasPanel*
		constexpr auto Gsi = 0x300; // UTextBlock*
		constexpr auto Gsi_2 = 0x308; // UTextBlock*
		constexpr auto HorizontalBox_HowToPlay = 0x310; // UHorizontalBox*
		constexpr auto HorizontalBox_InviteCode = 0x318; // UHorizontalBox*
		constexpr auto Image_4 = 0x320; // UImage*
		constexpr auto Image_5 = 0x328; // UImage*
		constexpr auto Image_240 = 0x330; // UImage*
		constexpr auto Image_403 = 0x338; // UImage*
		constexpr auto Image_599 = 0x340; // UImage*
		constexpr auto Image_711 = 0x348; // UImage*
		constexpr auto Image_2Start = 0x350; // UImage*
		constexpr auto Image_396C = 0x358; // UImage*
		constexpr auto Image_3Start = 0x360; // UImage*
		constexpr auto Image_494C = 0x368; // UImage*
		constexpr auto Image_BG = 0x370; // UImage*
		constexpr auto Image_Lock = 0x378; // UImage*
		constexpr auto Image_ready = 0x380; // UImage*
		constexpr auto Image_start = 0x388; // UImage*
		constexpr auto KillerBox = 0x390; // UHorizontalBox*
		constexpr auto KillerTypes = 0x398; // UUniformGridPanel*
		constexpr auto LobbyCanvas = 0x3a0; // UCanvasPanel*
		constexpr auto Overlay_Practice = 0x3a8; // UOverlay*
		constexpr auto Overlay_StartNow = 0x3b0; // UOverlay*
		constexpr auto Overlay_Time = 0x3b8; // UOverlay*
		constexpr auto PrivateKey_2 = 0x3c0; // UTextBlock*
		constexpr auto ReadyText = 0x3c8; // UTextBlock*
		constexpr auto RenderTexture_Characters = 0x3d0; // UImage*
		constexpr auto SizeBox_4 = 0x3d8; // USizeBox*
		constexpr auto SizeBox_115 = 0x3e0; // USizeBox*
		constexpr auto SizeBox_ChatTip = 0x3e8; // USizeBox*
		constexpr auto SizeBox_ct = 0x3f0; // USizeBox*
		constexpr auto SizeBox_Ready = 0x3f8; // USizeBox*
		constexpr auto SizeBox_st = 0x400; // USizeBox*
		constexpr auto SlotsBox = 0x408; // UUniformGridPanel*
		constexpr auto SlotsBox_2 = 0x410; // UUniformGridPanel*
		constexpr auto SpacerKiller = 0x418; // USpacer*
		constexpr auto SpacerSurv = 0x420; // USpacer*
		constexpr auto SurvBox = 0x428; // UHorizontalBox*
		constexpr auto SurvProfessions = 0x430; // UUniformGridPanel*
		constexpr auto Text = 0x438; // UTextBlock*
		constexpr auto Text_2 = 0x440; // UTextBlock*
		constexpr auto TextBlock_2 = 0x448; // UTextBlock*
		constexpr auto TextBlock_193 = 0x450; // UTextBlock*
		constexpr auto TextBlock_ChatTip = 0x458; // UTextBlock*
		constexpr auto W_Lobby_WaitPlayers = 0x460; // UW_Lobby_WaitPlayers_C*
		constexpr auto WBP_User_Message = 0x468; // UWBP_User_Message_C*
		constexpr auto WidgetSwitcher_2 = 0x470; // UWidgetSwitcher*
		constexpr auto IsCanceled = 0x478; // bool
		constexpr auto SurvProfessionsButtons = 0x480; // TArray<UW_LobbySurv_C*>
		constexpr auto KillerTypeButtons = 0x490; // TArray<UW_LobbyKiller_C*>
		constexpr auto LobbyMusic = 0x4a0; // FFMODEventInstance
		constexpr auto Volume = 0x4a8; // float
		constexpr auto Ready? = 0x4ac; // bool
		constexpr auto IsSlotsCreated = 0x4ad; // bool
		constexpr auto SlotsMap = 0x4b0; // TMap<FString, UWidget*>
		constexpr auto MiniLobbyPawn = 0x500; // AMiniLobbyPawn_C*
		constexpr auto LobbyStartTime = 0x508; // int32_t
		constexpr auto ReadyBlock? = 0x50c; // bool
		constexpr auto W_Slots = 0x510; // TArray<UW_Slot_C*>
		constexpr auto IsAllSlotsBusy? = 0x520; // bool
		constexpr auto PriviteKey = 0x528; // FString
		constexpr auto IsPrivateButtonHovered = 0x538; // bool
		constexpr auto KillersOrder = 0x540; // TArray<KillerType>
		constexpr auto SlotsOrder = 0x550; // TArray<int32_t>
		constexpr auto CurIsKiller = 0x560; // bool
	}

	namespace n_UATPCCameraBaseObject {
		constexpr auto OwningCamera = 0x28; // UATPCCameraComponent*
	}

	namespace n_URush_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UEOSCoreSessionsQueryInvites {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USettingsSave_C {
		constexpr auto Graphiccommand = 0x28; // FText
		constexpr auto PPCommand = 0x40; // FText
		constexpr auto AACommand = 0x58; // FText
		constexpr auto ShadowCommand = 0x70; // FText
		constexpr auto TQCommand = 0x88; // FText
		constexpr auto EQCommand = 0xa0; // FText
		constexpr auto ResolutionCommand = 0xb8; // FText
		constexpr auto ScreenCommand = 0xd0; // FText
		constexpr auto BMCommand = 0xe8; // FText
		constexpr auto VSyncCommand = 0x100; // FText
		constexpr auto AAMCommand = 0x118; // FText
		constexpr auto SoundSettingsMain = 0x130; // float
		constexpr auto SoundSettingsMusic = 0x134; // float
		constexpr auto SoundSettingsSFX = 0x138; // float
		constexpr auto Sensivity = 0x13c; // float
		constexpr auto XAxis = 0x140; // float
		constexpr auto YAxis = 0x144; // float
		constexpr auto VoiceVolume = 0x148; // float
		constexpr auto VoiceBoostVolume = 0x14c; // float
		constexpr auto MusicBG = 0x150; // float
		constexpr auto IsVoiceChatMuted? = 0x154; // bool
		constexpr auto InvertMouseY? = 0x155; // bool
		constexpr auto MipBiasCommand = 0x158; // FText
		constexpr auto PoolSizeCommand = 0x170; // FText
		constexpr auto TQMaxAnisCommand = 0x188; // FText
		constexpr auto Gamma = 0x1a0; // float
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_USpyEyes_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto CD = 0xf0; // bool
		constexpr auto Ammo = 0xf4; // int32_t
		constexpr auto EyesRef = 0xf8; // TArray<ASpyEye_C*>
		constexpr auto SurvsRef = 0x108; // TArray<ASurvivorMasterBP_C*>
		constexpr auto IgnorActors = 0x118; // TArray<AActor*>
		constexpr auto Count = 0x128; // int32_t
		constexpr auto Reloading = 0x12c; // bool
		constexpr auto Radius = 0x130; // float
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UWBP_Effect_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto HorizontalBox_403 = 0x270; // UHorizontalBox*
		constexpr auto Image = 0x278; // UImage*
		constexpr auto Image_2 = 0x280; // UImage*
		constexpr auto Image_122 = 0x288; // UImage*
		constexpr auto Image_201 = 0x290; // UImage*
		constexpr auto TextBlock = 0x298; // UTextBlock*
		constexpr auto TextBlock_91 = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_132 = 0x2a8; // UTextBlock*
		constexpr auto Material = 0x2b0; // UMaterial*
		constexpr auto Material INstance = 0x2b8; // UMaterialInstanceDynamic*
		constexpr auto Time = 0x2c0; // float
		constexpr auto Book = 0x2c8; // UObject*
		constexpr auto Pot = 0x2d0; // UObject*
		constexpr auto Anbrosia = 0x2d8; // UObject*
		constexpr auto Duration = 0x2e0; // float
		constexpr auto Removed = 0x2e8; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UMagicLeapARPinContentBindings {
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_ATriggerTeleportPrototypeLevel_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto Tutorial? = 0x230; // bool
		constexpr auto StartSpawn = 0x238; // APlayerStart*
		constexpr auto Block = 0x240; // bool
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UBrokenTime_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto Out Actors = 0x128; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UWBP_EliminatedScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Animation = 0x268; // UWidgetAnimation*
		constexpr auto HorizontalBox_1 = 0x270; // UHorizontalBox*
		constexpr auto Image_74 = 0x278; // UImage*
		constexpr auto Image_121 = 0x280; // UImage*
		constexpr auto Text_Nickname = 0x288; // UTextBlock*
		constexpr auto Text_Number = 0x290; // UTextBlock*
		constexpr auto Text_Status = 0x298; // UTextBlock*
		constexpr auto W_Banner_56 = 0x2a0; // UW_Banner_C*
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26c0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26e0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26f0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26f8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2738; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2778; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2780; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2780; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2780; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2780; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2781; // char : 1
		constexpr auto ViewPitchMin = 0x2784; // float
		constexpr auto ViewPitchMax = 0x2788; // float
		constexpr auto ViewYawMin = 0x278c; // float
		constexpr auto ViewYawMax = 0x2790; // float
		constexpr auto ViewRollMin = 0x2794; // float
		constexpr auto ViewRollMax = 0x2798; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27a0; // float
	}

	namespace n_UPlayFabMultiplayerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x428; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x430; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x438; // UPlayFabJsonObject*
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_ABP_Lamp_Hanging_ON_C {
		constexpr auto RectLight1 = 0x220; // URectLightComponent*
		constexpr auto RectLight = 0x228; // URectLightComponent*
		constexpr auto SM_LampGym = 0x230; // UStaticMeshComponent*
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UEOSCoreSessionsStartSession {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMouseSensivity_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_306 = 0x268; // UButton*
		constexpr auto Button_308 = 0x270; // UButton*
		constexpr auto Button_719 = 0x278; // UButton*
		constexpr auto Button_ChangeFOcus = 0x280; // UButton*
		constexpr auto Button_Sensivity = 0x288; // UButton*
		constexpr auto Button_X = 0x290; // UButton*
		constexpr auto Button_Y = 0x298; // UButton*
		constexpr auto HorizontalBox_78 = 0x2a0; // UHorizontalBox*
		constexpr auto Image_162 = 0x2a8; // UImage*
		constexpr auto Image_238 = 0x2b0; // UImage*
		constexpr auto Image_AxisX_BG = 0x2b8; // UImage*
		constexpr auto Image_AxisY_BG = 0x2c0; // UImage*
		constexpr auto Image_grayMSense = 0x2c8; // UImage*
		constexpr auto Image_grayXAxis = 0x2d0; // UImage*
		constexpr auto Image_grayYAxis = 0x2d8; // UImage*
		constexpr auto Image_SensivityBG = 0x2e0; // UImage*
		constexpr auto InvertY = 0x2e8; // UCustomGraphicButton_C*
		constexpr auto MOUSeSENS = 0x2f0; // USlider*
		constexpr auto Overlay_133 = 0x2f8; // UOverlay*
		constexpr auto Overlay_232 = 0x300; // UOverlay*
		constexpr auto Overlay_344 = 0x308; // UOverlay*
		constexpr auto Overlay_483 = 0x310; // UOverlay*
		constexpr auto ProgressBar_MSens = 0x318; // UProgressBar*
		constexpr auto ProgressBar_X_Axis = 0x320; // UProgressBar*
		constexpr auto ProgressBar_Y_Axis = 0x328; // UProgressBar*
		constexpr auto SafeZone_68 = 0x330; // USafeZone*
		constexpr auto Slider_169 = 0x338; // USlider*
		constexpr auto TextBlock = 0x340; // UTextBlock*
		constexpr auto TextBlock_2 = 0x348; // UTextBlock*
		constexpr auto TextBlock_3 = 0x350; // UTextBlock*
		constexpr auto TextBlock_4 = 0x358; // UTextBlock*
		constexpr auto TextBlock_5 = 0x360; // UTextBlock*
		constexpr auto TextBlock_6 = 0x368; // UTextBlock*
		constexpr auto TextBlock_228 = 0x370; // UTextBlock*
		constexpr auto TextBlock_247 = 0x378; // UTextBlock*
		constexpr auto X_AXIS = 0x380; // USlider*
		constexpr auto Y_AXIS = 0x388; // USlider*
		constexpr auto Senivity = 0x390; // float
		constexpr auto KillerRef = 0x398; // AKillerMasterBP_C*
		constexpr auto SurvRef = 0x3a0; // ASurvivorMasterBP_C*
		constexpr auto NewVar_2 = 0x3a8; // USaveGame*
		constexpr auto WasHovered = 0x3b0; // bool
		constexpr auto XAxis = 0x3b4; // float
		constexpr auto YAxis = 0x3b8; // float
		constexpr auto LastFocus = 0x3c0; // USlider*
		constexpr auto MouseHere? = 0x3c8; // bool
		constexpr auto SelectedImage = 0x3d0; // UImage*
		constexpr auto HoveredSlider = 0x3d8; // USlider*
		constexpr auto Value = 0x3e0; // float
		constexpr auto InvertYIndex = 0x3e4; // int32_t
		constexpr auto InvertYText = 0x3e8; // TArray<FText>
		constexpr auto Invert Mouse Y? = 0x3f8; // bool
		constexpr auto Defaults? = 0x3f9; // bool
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x460; // FVector
		constexpr auto Gap = 0x46c; // float
		constexpr auto Length = 0x470; // float
		constexpr auto Thickness = 0x474; // float
	}

	namespace n_ARabbit_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto ChargeSpell = 0x1320; // UChargeSpell_C*
		constexpr auto NiagaraChainsawVroom = 0x1328; // UNiagaraComponent*
		constexpr auto NiagaraChainsawMain = 0x1330; // UNiagaraComponent*
		constexpr auto RadioFpp = 0x1338; // UStaticMeshComponent*
		constexpr auto Radio = 0x1340; // UStaticMeshComponent*
		constexpr auto FMODAudio3 = 0x1348; // UFMODAudioComponent*
		constexpr auto ChainCollusion = 0x1350; // UBoxComponent*
		constexpr auto FMODAudio2_1 = 0x1358; // UFMODAudioComponent*
		constexpr auto ChainsawFPPMesh = 0x1360; // USkeletalMeshComponent*
		constexpr auto ChainsawMesh = 0x1368; // USkeletalMeshComponent*
		constexpr auto ToyBomb = 0x1370; // UToyBomb_C*
		constexpr auto Chainsaw = 0x1378; // UChainsaw_C*
		constexpr auto ChargeAttack = 0x1380; // bool
		constexpr auto ChargeSound = 0x1388; // UFMODAudioComponent*
		constexpr auto ChainCollisionActor = 0x1390; // AActor*
		constexpr auto FmodChainsawTerr = 0x1398; // FFMODEventInstance
		constexpr auto BChainsawTerror = 0x13a0; // bool
	}

	namespace n_UWBP_FriendsComboBox_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Selector = 0x268; // UButton*
		constexpr auto Image_Arrow = 0x270; // UImage*
		constexpr auto Image_ScrollBG = 0x278; // UImage*
		constexpr auto Image_Selected = 0x280; // UImage*
		constexpr auto Image_Separator = 0x288; // UImage*
		constexpr auto ScrollBox_711 = 0x290; // UScrollBox*
		constexpr auto SizeBox_Content = 0x298; // USizeBox*
		constexpr auto Text_Counter = 0x2a0; // UTextBlock*
		constexpr auto Text_Label = 0x2a8; // UTextBlock*
		constexpr auto VerticalBox_Entries = 0x2b0; // UVerticalBox*
		constexpr auto Entries = 0x2b8; // TArray<UWBP_FriendEntry_C*>
		constexpr auto MaxNumVisibleEntries = 0x2c8; // int32_t
		constexpr auto AnimTickTimer = 0x2d0; // FTimerHandle
		constexpr auto AnimSpeed = 0x2d8; // float
		constexpr auto IsExpanded = 0x2dc; // bool
		constexpr auto OnEntryClicked = 0x2e0; // FMulticastInlineDelegate
		constexpr auto OnEntrySelected = 0x2f0; // FMulticastInlineDelegate
		constexpr auto OnExpanded = 0x300; // FMulticastInlineDelegate
		constexpr auto OnCollapsed = 0x310; // FMulticastInlineDelegate
		constexpr auto NeedScrollBar = 0x320; // bool
		constexpr auto EntriesOffset = 0x324; // float
		constexpr auto Label = 0x328; // FText
		constexpr auto FocusedEntry = 0x340; // UWBP_FriendEntry_C*
	}

	namespace n_UVampireMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_USilentProp_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UGrandma_Facerig_Skeleton_AnimBlueprint_Lobby_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x3a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x480; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x530; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult = 0x5d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x678; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x758; // FAnimNode_StateMachine
		constexpr auto Reset? = 0x808; // bool
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_UW_CustomizeBanner_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Avatar = 0x268; // UButton*
		constexpr auto Button_Bunner = 0x270; // UButton*
		constexpr auto Button_Tags = 0x278; // UButton*
		constexpr auto Image_4 = 0x280; // UImage*
		constexpr auto Image_5 = 0x288; // UImage*
		constexpr auto Image_6 = 0x290; // UImage*
		constexpr auto Image_7 = 0x298; // UImage*
		constexpr auto Image_65 = 0x2a0; // UImage*
		constexpr auto Image_518 = 0x2a8; // UImage*
		constexpr auto Image_Arrow = 0x2b0; // UImage*
		constexpr auto Image_Arrow_2 = 0x2b8; // UImage*
		constexpr auto Image_Arrow_3 = 0x2c0; // UImage*
		constexpr auto SizeBox_AvatarButton = 0x2c8; // USizeBox*
		constexpr auto SizeBox_BannerButton = 0x2d0; // USizeBox*
		constexpr auto SizeBox_TagsButton = 0x2d8; // USizeBox*
		constexpr auto TextBannerInfo = 0x2e0; // UTextBlock*
		constexpr auto TextBannerName = 0x2e8; // UTextBlock*
		constexpr auto TextBannerRarity = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_Avatar = 0x2f8; // UTextBlock*
		constexpr auto TextBlock_Banner = 0x300; // UTextBlock*
		constexpr auto TextBlock_Tags = 0x308; // UTextBlock*
		constexpr auto UniformGridPanel_Avatar = 0x310; // UUniformGridPanel*
		constexpr auto UniformGridPanel_Banner = 0x318; // UUniformGridPanel*
		constexpr auto UniformGridPanel_Tags = 0x320; // UUniformGridPanel*
		constexpr auto VerticalBox_Buttons = 0x328; // UVerticalBox*
		constexpr auto VerticalBox_Information = 0x330; // UVerticalBox*
		constexpr auto W_Banner = 0x338; // UW_Banner_C*
		constexpr auto WidgetSwitcher_Main = 0x340; // UWidgetSwitcher*
		constexpr auto DataTableBanners = 0x348; // TSoftObjectPtr<UDataTable>
		constexpr auto DataTableAvatars = 0x370; // TSoftObjectPtr<UDataTable>
		constexpr auto DTTags = 0x398; // TSoftObjectPtr<UDataTable>
		constexpr auto SelectedAvatar = 0x3c0; // UW_CustomizeAvatarInfo_C*
		constexpr auto SelectedBanner = 0x3c8; // UW_CustomizeBannerInfo_C*
		constexpr auto AvatarSelectorArr = 0x3d0; // TArray<UW_CustomizeAvatarInfo_C*>
		constexpr auto BannerSelectorArr = 0x3e0; // TArray<UW_CustomizeBannerInfo_C*>
		constexpr auto TagButtons = 0x3f0; // TArray<UW_CutomizeTagInfo_C*>
		constexpr auto SelectedTag = 0x400; // UW_CutomizeTagInfo_C*
		constexpr auto IsButtonHover?_FocusGraphic = 0x408; // bool
		constexpr auto IsButtonHover?_FocusControl = 0x409; // bool
		constexpr auto IsButtonHover?_FocusAudio = 0x40a; // bool
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_ULobbyGreenGirlAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4a8; // FAnimNode_StateMachine
		constexpr auto MvpAnim? = 0x558; // bool
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_AWaypointMarkActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Widget = 0x228; // UWidgetComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto MarkType = 0x238; // MarkTypeEnum
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABanshee_Tutorial_C {
		constexpr auto UberGraphFrame = 0x13e8; // FPointerToUberGraphFrame
		constexpr auto QuestWidget = 0x13f0; // UW_Tutorial_Quest_C*
	}

	namespace n_UGeneralSettingWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fade_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_Audio = 0x270; // UButton*
		constexpr auto Button_Control = 0x278; // UButton*
		constexpr auto Button_DefaultCfg = 0x280; // UButton*
		constexpr auto Button_FocusToAudio = 0x288; // UButton*
		constexpr auto Button_FocusToControl = 0x290; // UButton*
		constexpr auto Button_FocusToGraphic = 0x298; // UButton*
		constexpr auto Button_Graphic = 0x2a0; // UButton*
		constexpr auto CanvasPanel_1 = 0x2a8; // UCanvasPanel*
		constexpr auto GraphicSettings_WBP = 0x2b0; // UGraphicSettingsWBP1_C*
		constexpr auto Image_4 = 0x2b8; // UImage*
		constexpr auto Image_5 = 0x2c0; // UImage*
		constexpr auto Image_6 = 0x2c8; // UImage*
		constexpr auto Image_7 = 0x2d0; // UImage*
		constexpr auto Image_Arrow = 0x2d8; // UImage*
		constexpr auto Image_Arrow_2 = 0x2e0; // UImage*
		constexpr auto Image_Arrow_3 = 0x2e8; // UImage*
		constexpr auto Image_UpdateServerList = 0x2f0; // UImage*
		constexpr auto ProgressBar_109 = 0x2f8; // UProgressBar*
		constexpr auto SafeZone = 0x300; // USafeZone*
		constexpr auto SafeZone_2 = 0x308; // USafeZone*
		constexpr auto SafeZone_141 = 0x310; // USafeZone*
		constexpr auto SizeBox_Audio = 0x318; // USizeBox*
		constexpr auto SizeBox_Audio_2 = 0x320; // USizeBox*
		constexpr auto SizeBox_Control = 0x328; // USizeBox*
		constexpr auto SizeBox_Graphic = 0x330; // USizeBox*
		constexpr auto SizeBox_ResetToDEf = 0x338; // USizeBox*
		constexpr auto SoundSettings_WBP = 0x340; // USoundSettings_C*
		constexpr auto TextBlock_Audio = 0x348; // UTextBlock*
		constexpr auto TextBlock_Controls = 0x350; // UTextBlock*
		constexpr auto TextBlock_Grapics = 0x358; // UTextBlock*
		constexpr auto VerticalBox_Buttons = 0x360; // UVerticalBox*
		constexpr auto W_Path = 0x368; // UW_Path_C*
		constexpr auto WB_KeyBindings = 0x370; // UWB_KeyBindings_C*
		constexpr auto WBP_CustomComboBox = 0x378; // UWBP_CustomComboBox_C*
		constexpr auto WidgetSwitcher_159 = 0x380; // UWidgetSwitcher*
		constexpr auto Widget = 0x388; // UUserWidget*
		constexpr auto TextToGray = 0x390; // UTextBlock*
		constexpr auto LastKnowFocusButton = 0x398; // UButton*
		constexpr auto IsButtonHover? = 0x3a0; // bool
		constexpr auto Specified ColorActive = 0x3a4; // FLinearColor
		constexpr auto Specified ColorDisable = 0x3b4; // FLinearColor
		constexpr auto IsButtonHover?_FocusGraphic = 0x3c4; // bool
		constexpr auto IsButtonHover?_FocusControl = 0x3c5; // bool
		constexpr auto IsButtonHover?_FocusAudio = 0x3c6; // bool
		constexpr auto SaveData = 0x3c8; // USaveGame*
		constexpr auto Locs = 0x3d0; // TArray<FString>
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UWBP_HitMarkComponent_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x268; // UWidgetAnimation*
		constexpr auto Image_38 = 0x270; // UImage*
		constexpr auto LifeTime = 0x278; // float
		constexpr auto OnRemoved = 0x280; // FMulticastInlineDelegate
		constexpr auto InstigatorLocation = 0x290; // FVector
		constexpr auto PlayerRef = 0x2a0; // ASurvivorMasterBP_C*
	}

	namespace n_UMagicLeapPlanesComponent {
		constexpr auto QueryFlags = 0x1f8; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x208; // UBoxComponent*
		constexpr auto MaxResults = 0x210; // int32_t
		constexpr auto MinHolePerimeter = 0x214; // float
		constexpr auto MinPlaneArea = 0x218; // float
		constexpr auto QueryType = 0x21c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x220; // float
		constexpr auto OnPlanesQueryResult = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x238; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreEcomQueryOwnershipToken {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UBP_ServerReporter_C {
		constexpr auto UberGraphFrame = 0xc0; // FPointerToUberGraphFrame
		constexpr auto TimerHandle = 0xc8; // FTimerHandle
		constexpr auto Players = 0xd0; // int32_t
		constexpr auto Seed = 0xd8; // FString
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UATPCCameraModeDataAsset {
		constexpr auto CameraModeTag = 0x30; // FGameplayTag
		constexpr auto CameraModeSettings = 0x38; // FATPCCameraMode
		constexpr auto CameraModeScripts = 0x250; // TArray<UATPCCameraModeScript*>
	}

	namespace n_UMagnet_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UavatarSteamTest_C {
		constexpr auto Image_52 = 0x260; // UImage*
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UW_GameResultRow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto searching = 0x268; // UWidgetAnimation*
		constexpr auto LoadingAnim = 0x270; // UWidgetAnimation*
		constexpr auto Avatar = 0x278; // UImage*
		constexpr auto Avatar_BG = 0x280; // UImage*
		constexpr auto HorizontalBox_111 = 0x288; // UHorizontalBox*
		constexpr auto Image = 0x290; // UImage*
		constexpr auto Image_2 = 0x298; // UImage*
		constexpr auto Image_3 = 0x2a0; // UImage*
		constexpr auto Image_13 = 0x2a8; // UImage*
		constexpr auto Image_14 = 0x2b0; // UImage*
		constexpr auto Image_15 = 0x2b8; // UImage*
		constexpr auto Image_412 = 0x2c0; // UImage*
		constexpr auto Nickname = 0x2c8; // UTextBlock*
		constexpr auto RetainerBox_2 = 0x2d0; // URetainerBox*
		constexpr auto ScaleBox_nickname = 0x2d8; // UScaleBox*
		constexpr auto ScrollBox_Nickname = 0x2e0; // UScrollBox*
		constexpr auto SizeBox = 0x2e8; // USizeBox*
		constexpr auto SizeBox_1 = 0x2f0; // USizeBox*
		constexpr auto SizeBox_2 = 0x2f8; // USizeBox*
		constexpr auto SizeBox_3 = 0x300; // USizeBox*
		constexpr auto SizeBox_4 = 0x308; // USizeBox*
		constexpr auto SizeBox_1522 = 0x310; // USizeBox*
		constexpr auto WidgetSwitcher_Status = 0x318; // UWidgetSwitcher*
		constexpr auto Player State = 0x320; // APS_PropHunt_C*
		constexpr auto Like = 0x328; // int32_t
		constexpr auto Is Forward Direction = 0x32c; // bool
		constexpr auto AnimTimer = 0x330; // FTimerHandle
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_AFMODEventLooper_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x228; // UFMODAudioComponent*
		constexpr auto Delay = 0x230; // float
		constexpr auto Event = 0x238; // UFMODEvent*
		constexpr auto WithDelay = 0x240; // bool
		constexpr auto OverrideAttenuation = 0x241; // bool
		constexpr auto MinDistance = 0x244; // float
		constexpr auto MaxDistance = 0x248; // float
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UVaRestSettings {
		constexpr auto bExtendedLog = 0x28; // bool
		constexpr auto bUseChunkedParser = 0x29; // bool
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x468; // EWidgetSpace
		constexpr auto TimingPolicy = 0x469; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x470; // UUserWidget*
		constexpr auto DrawSize = 0x478; // FIntPoint
		constexpr auto bManuallyRedraw = 0x480; // bool
		constexpr auto bRedrawRequested = 0x481; // bool
		constexpr auto RedrawTime = 0x484; // float
		constexpr auto CurrentDrawSize = 0x490; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x498; // bool
		constexpr auto Pivot = 0x49c; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4a4; // bool
		constexpr auto bWindowFocusable = 0x4a5; // bool
		constexpr auto WindowVisibility = 0x4a6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4a7; // bool
		constexpr auto OwnerPlayer = 0x4a8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d0; // float
		constexpr auto BlendMode = 0x4d4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4d5; // bool
		constexpr auto TickWhenOffscreen = 0x4d6; // bool
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto SharedLayerName = 0x524; // FName
		constexpr auto LayerZOrder = 0x52c; // int32_t
		constexpr auto GeometryMode = 0x530; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x534; // float
		constexpr auto TickMode = 0x538; // ETickMode
		constexpr auto Widget = 0x560; // UUserWidget*
	}

	namespace n_UFMODAnimNotifyPlay {
		constexpr auto bFollow = 0x38; // char : 1
		constexpr auto AttachName = 0x40; // FString
		constexpr auto Event = 0x50; // UFMODEvent*
	}

	namespace n_ASurv4_C {
		constexpr auto UberGraphFrame = 0x1830; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AGlueJarThrow_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x240; // UStaticMeshComponent*
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto Radius = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto NumSides = 0x474; // int32_t
		constexpr auto bViewAligned = 0x478; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x479; // bool
	}

	namespace n_AAlarmFullCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto IsChair = 0x300; // bool
	}

	namespace n_UMagicLeapImageTrackerComponent {
		constexpr auto TargetImageTexture = 0x1f8; // UTexture2D*
		constexpr auto Name = 0x200; // FString
		constexpr auto LongerDimension = 0x210; // float
		constexpr auto bIsStationary = 0x214; // bool
		constexpr auto bUseUnreliablePose = 0x215; // bool
		constexpr auto AxisOrientation = 0x216; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x218; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x228; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UWBP_User_Message_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Messsage = 0x268; // FText
		constexpr auto ShowAnimationTime = 0x280; // float
		constexpr auto ShowTime = 0x284; // float
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UVampire_apos_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x2c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x368; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x6d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x7c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x7f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x8a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x920; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x9d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xa00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0xa80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xab0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0xb30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xb60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0xbe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0xc10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0xc90; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0xd58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0xdd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xe08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0xe88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xf50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0xfd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x1080; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1148; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x11c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x11f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x12e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x13c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x14c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x1630; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_4 = 0x16d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x1700; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x17b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1918; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x1998; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x1a38; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1ad8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x1bc0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1ca8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x1d90; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x1e50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x1f70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x2058; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2118; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt = 0x21b8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2340; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2428; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x24f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x25a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x25d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x2658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2688; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose = 0x2738; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x2890; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x2950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x2978; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x29a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2a40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2ac0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x2b60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x2c00; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x2cc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Root = 0x2d88; // FAnimNode_Root
		constexpr auto AnimGraphNode_ApplyAdditive = 0x2db8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer = 0x2e80; // FAnimNode_SequencePlayer
		constexpr auto Get Ready = 0x2f00; // bool
		constexpr auto IsHolded = 0x2f04; // float
		constexpr auto IsOnAir? = 0x2f08; // bool
		constexpr auto PropHunt? = 0x2f09; // bool
		constexpr auto Speed = 0x2f0c; // float
		constexpr auto SpeedChek = 0x2f10; // float
		constexpr auto TypeAttack = 0x2f14; // int32_t
		constexpr auto Attak = 0x2f18; // bool
		constexpr auto Direction = 0x2f1c; // float
		constexpr auto JumpEndChek = 0x2f20; // bool
		constexpr auto FIRE = 0x2f21; // bool
		constexpr auto Plant = 0x2f22; // bool
		constexpr auto Flashed = 0x2f23; // bool
		constexpr auto Drop = 0x2f24; // bool
		constexpr auto ChairDrop = 0x2f25; // bool
		constexpr auto Catch = 0x2f26; // bool
		constexpr auto Broke Anim = 0x2f27; // bool
		constexpr auto MarioStun = 0x2f28; // bool
		constexpr auto Runaway = 0x2f29; // bool
		constexpr auto HeadR = 0x2f2c; // FRotator
		constexpr auto Vertical rotation = 0x2f38; // float
		constexpr auto HorizontalValue = 0x2f3c; // float
		constexpr auto bTurnL = 0x2f40; // bool
		constexpr auto bTurnR = 0x2f41; // bool
		constexpr auto Alt Attack? = 0x2f42; // bool
		constexpr auto KillerType = 0x2f44; // int32_t
		constexpr auto Active Spell 1? = 0x2f48; // bool
		constexpr auto IsOwner? = 0x2f49; // bool
		constexpr auto vs3 = 0x2f4a; // bool
		constexpr auto head = 0x2f4b; // bool
	}

	namespace n_UPlayerScoreComponentAddedScore_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Spawn = 0x268; // UWidgetAnimation*
		constexpr auto Hide = 0x270; // UWidgetAnimation*
		constexpr auto AddScore = 0x278; // UTextBlock*
		constexpr auto Image_573 = 0x280; // UImage*
		constexpr auto WhatScore = 0x288; // UTextBlock*
		constexpr auto Score = 0x290; // FText
		constexpr auto Text = 0x2a8; // FText
		constexpr auto Block? = 0x2c0; // bool
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UEOSCoreTitleStorageDeleteCache {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_ABP_CF_PlayerPosition_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto BendPos = 0x230; // FVector
		constexpr auto PlayerPawnIndex = 0x23c; // int32_t
		constexpr auto BendPosLength = 0x240; // float
		constexpr auto PlayerSpeed = 0x244; // float
	}

	namespace n_UPunishment_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
	}

	namespace n_UCoolDownWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HUD_JumpOut_Curve = 0x268; // UWidgetAnimation*
		constexpr auto HUD_JumpIn = 0x270; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x278; // UCanvasPanel*
		constexpr auto HorBox_Spy = 0x280; // UHorizontalBox*
		constexpr auto HorBox_Spy_Middle = 0x288; // UHorizontalBox*
		constexpr auto Image_136 = 0x290; // UImage*
		constexpr auto TextAbility1 = 0x298; // UTextBlock*
		constexpr auto TextAbility2 = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_106 = 0x2a8; // UTextBlock*
		constexpr auto VerticalBox_60 = 0x2b0; // UHorizontalBox*
		constexpr auto CoolDownTime1 = 0x2b8; // float
		constexpr auto CurrentTime1 = 0x2bc; // float
		constexpr auto CoolDownTime2 = 0x2c0; // float
		constexpr auto CurrentTime2 = 0x2c4; // float
		constexpr auto Ability1Use? = 0x2c8; // bool
		constexpr auto Ability2Use? = 0x2c9; // bool
		constexpr auto Ability1 = 0x2cc; // int32_t
		constexpr auto Ability2 = 0x2d0; // int32_t
		constexpr auto textAbility_2 = 0x2d8; // FText
		constexpr auto textAbility_3 = 0x2f0; // FText
		constexpr auto NewVar_1 = 0x308; // FLinearColor
		constexpr auto NewVar_2 = 0x318; // UObject*
		constexpr auto AbilityName1 = 0x320; // FName
		constexpr auto AbilityName2 = 0x328; // FName
		constexpr auto textArray = 0x330; // TArray<FString>
		constexpr auto NewVar_3 = 0x340; // UIconAbilityCooldownWBP_C*
		constexpr auto AbilityIconsRefs = 0x348; // TArray<UIconAbilityCooldownWBP_C*>
		constexpr auto abilityUsed? = 0x358; // bool
		constexpr auto AbilityNameUse = 0x360; // FString
		constexpr auto GS = 0x370; // FS_GameSettings
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UEOSCoreLobbyCreateLobby {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_UVampire_Bite_Shake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UEOSCorePlayerDataStorageReadFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UEOSCoreConnectTransferDeviceIdAccount {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AEndGameCoin_C {
		constexpr auto StaticMesh = 0x220; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UW_PlayCardContent_QuickPlay_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Button_SearchGame = 0x270; // UButton*
		constexpr auto Image = 0x278; // UImage*
		constexpr auto Image_90 = 0x280; // UImage*
		constexpr auto Image_CG_Icon = 0x288; // UImage*
		constexpr auto Overlay_TeamLeaderOnly = 0x290; // UOverlay*
		constexpr auto Overlay_TeamLeaderOnly_2 = 0x298; // UOverlay*
		constexpr auto SizeBox_54 = 0x2a0; // USizeBox*
		constexpr auto Text_Description = 0x2a8; // UTextBlock*
		constexpr auto Text_Header = 0x2b0; // UTextBlock*
		constexpr auto TextBlock = 0x2b8; // UTextBlock*
		constexpr auto TextBlock_4 = 0x2c0; // UTextBlock*
		constexpr auto W_RoleSelector = 0x2c8; // UW_RoleSelector_C*
		constexpr auto BP Ban Manager = 0x2d0; // UBP_BanManager_C*
		constexpr auto Is Banned = 0x2d8; // bool
		constexpr auto RandomFloat = 0x2dc; // float
		constexpr auto SearchGame_DefaultStyle = 0x2e0; // FButtonStyle
		constexpr auto IsSearchGameHovered = 0x558; // bool
	}

	namespace n_USG_Playfab_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
		constexpr auto ID = 0x30; // FString
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_ABP_PrizeActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto WeaponImpostor = 0x228; // USkeletalMeshComponent*
		constexpr auto TextRender = 0x230; // UTextRenderComponent*
		constexpr auto WeaponBear = 0x238; // USkeletalMeshComponent*
		constexpr auto WeaponVampire = 0x240; // USkeletalMeshComponent*
		constexpr auto RectLight = 0x248; // URectLightComponent*
		constexpr auto Lightshaft = 0x250; // UStaticMeshComponent*
		constexpr auto CharMesh = 0x258; // USkeletalMeshComponent*
		constexpr auto Avatar = 0x260; // UStaticMeshComponent*
		constexpr auto Banner = 0x268; // UStaticMeshComponent*
		constexpr auto Scene = 0x270; // USceneComponent*
		constexpr auto Stand = 0x278; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x280; // USceneComponent*
		constexpr auto Rarity = 0x288; // Rarity
		constexpr auto PrizeID = 0x28c; // int32_t
		constexpr auto PrizeType = 0x290; // E_LootboxType
		constexpr auto DT_Lootbox = 0x298; // FS_LootBoxSkin
		constexpr auto LightshaftDynMat = 0x2c8; // UMaterialInstanceDynamic*
		constexpr auto StandDynMat = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto Sense = 0x2d8; // float
		constexpr auto IsSurv = 0x2dc; // bool
	}

	namespace n_UFlexible_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_ASurvDestructionActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Destructible = 0x228; // UDestructibleComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Materials = 0x238; // TArray<UMaterialInstanceDynamic*>
		constexpr auto Float1 = 0x248; // float
		constexpr auto EffectDuration = 0x24c; // float
		constexpr auto EffectTime = 0x250; // float
		constexpr auto MaterialEffectEvent = 0x258; // FTimerHandle
		constexpr auto DestructibleMeshToCheck = 0x260; // TArray<UDestructibleMesh*>
		constexpr auto IsOne? = 0x270; // bool
		constexpr auto Target = 0x278; // UMaterialInstance*
	}

	namespace n_USurvivorInteraction_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto SkillActivated? = 0x100; // bool
		constexpr auto BlockTick? = 0x101; // bool
		constexpr auto CrawlPlayer = 0x108; // ASurvivorMasterBP_C*
		constexpr auto ReanimateProgress = 0x110; // float
		constexpr auto SelfReanimateProgress = 0x114; // float
		constexpr auto ReanimateAllyFullProgress = 0x118; // float
		constexpr auto ReanimateSelfFullProgress = 0x11c; // float
		constexpr auto RestoreHealth = 0x120; // int32_t
		constexpr auto CurrentAlarm = 0x128; // ANewAlarmBP_C*
		constexpr auto RandomSkillCheck? = 0x130; // bool
		constexpr auto DeltaSeconds = 0x134; // float
		constexpr auto Chair = 0x138; // AHypnoChairBP_C*
		constexpr auto FullProgressHelpGetOutChair = 0x140; // float
		constexpr auto CurrentHelpGetOutChair = 0x144; // float
		constexpr auto ProgressFull? = 0x148; // bool
		constexpr auto FullProgressSelfGetOutChair = 0x14c; // float
		constexpr auto CurrentSelfGetOutChair = 0x150; // float
		constexpr auto RandomChance = 0x154; // int32_t
		constexpr auto RandomSelfGetOut? = 0x158; // bool
		constexpr auto Exit = 0x160; // AExit_C*
		constexpr auto Failed? = 0x168; // bool
		constexpr auto ChanceIncreaseRate = 0x16c; // float
		constexpr auto PenaltyTime = 0x170; // float
		constexpr auto MaxSkillCheckTime = 0x174; // float
		constexpr auto MinSkillCheckTime = 0x178; // float
		constexpr auto SurvShakingAudio = 0x180; // UFMODAudioComponent*
		constexpr auto CurrentSkillCheckTime = 0x188; // float
		constexpr auto SkillCheckedStarted = 0x18c; // bool
		constexpr auto CloseDoor = 0x18d; // bool
		constexpr auto SkillCheckLevel = 0x190; // float
		constexpr auto TutorialBlock? = 0x194; // bool
		constexpr auto Lootable Mesh = 0x198; // ALootableMesh_C*
		constexpr auto CurrentLootableTime = 0x1a0; // float
		constexpr auto FullLootableTime = 0x1a4; // float
		constexpr auto RestoreHealthSelf = 0x1a8; // int32_t
		constexpr auto ReanimateSound = 0x1b0; // UFMODAudioComponent*
		constexpr auto Hit Actor = 0x1b8; // TArray<AActor*>
		constexpr auto CanSave? = 0x1c8; // bool
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UWBP_CustomComboBox_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Selector = 0x268; // UButton*
		constexpr auto Image_Arrow = 0x270; // UImage*
		constexpr auto Image_ContentBG = 0x278; // UImage*
		constexpr auto Image_ScrollBG = 0x280; // UImage*
		constexpr auto Image_Selected = 0x288; // UImage*
		constexpr auto Image_Separator = 0x290; // UImage*
		constexpr auto ScrollBox_711 = 0x298; // UScrollBox*
		constexpr auto SizeBox_Content = 0x2a0; // USizeBox*
		constexpr auto Text_Label = 0x2a8; // UTextBlock*
		constexpr auto VerticalBox_Entries = 0x2b0; // UVerticalBox*
		constexpr auto Label = 0x2b8; // FText
		constexpr auto Entries = 0x2d0; // TArray<FText>
		constexpr auto MaxNumVisibleEntries = 0x2e0; // int32_t
		constexpr auto AnimTickTimer = 0x2e8; // FTimerHandle
		constexpr auto AnimSpeed = 0x2f0; // float
		constexpr auto MultiSelect = 0x2f4; // bool
		constexpr auto IsExpanded = 0x2f5; // bool
		constexpr auto CurrentEntryIndex = 0x2f8; // int32_t
		constexpr auto SelectedEntries = 0x300; // TArray<int32_t>
		constexpr auto OnEntryClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OnEntrySelected = 0x320; // FMulticastInlineDelegate
		constexpr auto OnExpanded = 0x330; // FMulticastInlineDelegate
		constexpr auto OnCollapsed = 0x340; // FMulticastInlineDelegate
		constexpr auto NeedScrollBar = 0x350; // bool
		constexpr auto UseSelectedEntryName = 0x351; // bool
		constexpr auto CheckedBrush = 0x358; // FCheckBoxStyle
		constexpr auto CanHoverLabel = 0x8d8; // bool
		constexpr auto Play Sound = 0x8d9; // bool
		constexpr auto FocusedEntry = 0x8e0; // UWBP_CustomComboBoxEntry_C*
		constexpr auto IsSelectorHovered = 0x8e8; // bool
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x388; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UVampireSpell2_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Charges = 0xf0; // float
		constexpr auto Cast? = 0xf4; // bool
		constexpr auto CastTime = 0xf8; // float
		constexpr auto Active? = 0xfc; // bool
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UDoppel_Knife_AnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x3c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x4e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x590; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x5c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x640; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x6e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x7e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_2 = 0x880; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x8b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x960; // FAnimNode_StateMachine
		constexpr auto ImSurv? = 0xa10; // bool
		constexpr auto Switch? = 0xa11; // bool
		constexpr auto HiddenAttack? = 0xa12; // bool
		constexpr auto HardHit? = 0xa13; // bool
		constexpr auto TPP? = 0xa14; // bool
		constexpr auto local? = 0xa15; // bool
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x450; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x458; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x460; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x461; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x462; // bool
		constexpr auto CachedBodySetup = 0x468; // UBodySetup*
		constexpr auto BodySetups = 0x470; // TArray<UBodySetup*>
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_ASave_OutChairCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
		constexpr auto IsChair = 0x300; // bool
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UFMODSettings {
		constexpr auto bLoadAllBanks = 0x28; // bool
		constexpr auto bLoadAllSampleData = 0x29; // bool
		constexpr auto bEnableLiveUpdate = 0x2a; // bool
		constexpr auto bEnableEditorLiveUpdate = 0x2b; // bool
		constexpr auto BankOutputDirectory = 0x30; // FDirectoryPath
		constexpr auto OutputFormat = 0x40; // EFMODSpeakerMode
		constexpr auto Locales = 0x48; // TArray<FFMODProjectLocale>
		constexpr auto bVol0Virtual = 0x58; // bool
		constexpr auto Vol0VirtualLevel = 0x5c; // float
		constexpr auto SampleRate = 0x60; // int32_t
		constexpr auto bMatchHardwareSampleRate = 0x64; // bool
		constexpr auto RealChannelCount = 0x68; // int32_t
		constexpr auto TotalChannelCount = 0x6c; // int32_t
		constexpr auto DSPBufferLength = 0x70; // int32_t
		constexpr auto DSPBufferCount = 0x74; // int32_t
		constexpr auto FileBufferSize = 0x78; // int32_t
		constexpr auto StudioUpdatePeriod = 0x7c; // int32_t
		constexpr auto InitialOutputDriverName = 0x80; // FString
		constexpr auto bLockAllBuses = 0x90; // bool
		constexpr auto MemoryPoolSizes = 0x94; // FCustomPoolSizes
		constexpr auto LiveUpdatePort = 0xa8; // int32_t
		constexpr auto EditorLiveUpdatePort = 0xac; // int32_t
		constexpr auto ReloadBanksDelay = 0xb0; // int32_t
		constexpr auto bEnableMemoryTracking = 0xb4; // bool
		constexpr auto PluginFiles = 0xb8; // TArray<FString>
		constexpr auto ContentBrowserPrefix = 0xc8; // FString
		constexpr auto ForcePlatformName = 0xd8; // FString
		constexpr auto MasterBankName = 0xe8; // FString
		constexpr auto SkipLoadBankName = 0xf8; // FString
		constexpr auto StudioBankKey = 0x108; // FString
		constexpr auto WavWriterPath = 0x118; // FString
		constexpr auto LoggingLevel = 0x128; // EFMODLogging
		constexpr auto OcclusionParameter = 0x130; // FString
		constexpr auto AmbientVolumeParameter = 0x140; // FString
		constexpr auto AmbientLPFParameter = 0x150; // FString
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ANewLobbyV2_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto MoonLight1 = 0x228; // UDirectionalLightComponent*
		constexpr auto P_SmokeFull1b_Edit = 0x230; // UParticleSystemComponent*
		constexpr auto TextRender2 = 0x238; // UTextRenderComponent*
		constexpr auto Surv4Point = 0x240; // USceneComponent*
		constexpr auto TextRender1 = 0x248; // UTextRenderComponent*
		constexpr auto Surv3Point = 0x250; // USceneComponent*
		constexpr auto TextRender6 = 0x258; // UTextRenderComponent*
		constexpr auto Surv2Point = 0x260; // USceneComponent*
		constexpr auto TextRender = 0x268; // UTextRenderComponent*
		constexpr auto Surv1Point = 0x270; // USceneComponent*
		constexpr auto TextRender7 = 0x278; // UTextRenderComponent*
		constexpr auto KillerPoint = 0x280; // USceneComponent*
		constexpr auto PlayersPoints = 0x288; // USceneComponent*
		constexpr auto StaticMesh = 0x290; // UStaticMeshComponent*
		constexpr auto RedLight-1 = 0x298; // USceneComponent*
		constexpr auto RedLight-2 = 0x2a0; // USceneComponent*
		constexpr auto RectLight1 = 0x2a8; // URectLightComponent*
		constexpr auto RectLight = 0x2b0; // URectLightComponent*
		constexpr auto Box = 0x2b8; // UBoxComponent*
		constexpr auto Player5 = 0x2c0; // UChildActorComponent*
		constexpr auto Player4 = 0x2c8; // UChildActorComponent*
		constexpr auto Player3 = 0x2d0; // UChildActorComponent*
		constexpr auto Player2 = 0x2d8; // UChildActorComponent*
		constexpr auto Player1 = 0x2e0; // UChildActorComponent*
		constexpr auto ManiacSunLight-2 = 0x2e8; // UDirectionalLightComponent*
		constexpr auto SurvSunLight-2 = 0x2f0; // UDirectionalLightComponent*
		constexpr auto KillerPoint-2 = 0x2f8; // USceneComponent*
		constexpr auto Surv4-2 = 0x300; // USceneComponent*
		constexpr auto Surv3-2 = 0x308; // USceneComponent*
		constexpr auto Surv2-2 = 0x310; // USceneComponent*
		constexpr auto Surv1-2 = 0x318; // USceneComponent*
		constexpr auto SurvVisible = 0x320; // USceneComponent*
		constexpr auto ManiacSunLight-1 = 0x328; // UDirectionalLightComponent*
		constexpr auto SurvSunLight-1 = 0x330; // UDirectionalLightComponent*
		constexpr auto KillerPoint-1 = 0x338; // USceneComponent*
		constexpr auto Surv4-1 = 0x340; // USceneComponent*
		constexpr auto Surv3-1 = 0x348; // USceneComponent*
		constexpr auto Surv2-1 = 0x350; // USceneComponent*
		constexpr auto Surv1-1 = 0x358; // USceneComponent*
		constexpr auto KillerVisible = 0x360; // USceneComponent*
		constexpr auto MoonLight = 0x368; // UDirectionalLightComponent*
		constexpr auto HDRIBackdrop_SceneComponent = 0x370; // USceneComponent*
		constexpr auto Floor = 0x378; // UStaticMeshComponent*
		constexpr auto Cine Camera Actor_CameraComponent = 0x380; // UCineCameraComponent*
		constexpr auto Cine Camera Actor_SceneComponent = 0x388; // USceneComponent*
		constexpr auto SharedRoot = 0x390; // USceneComponent*
		constexpr auto Killer? = 0x398; // bool
		constexpr auto TempInt = 0x39c; // int32_t
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_AInteractableDoor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto GlassBox_Spell = 0x230; // UBoxComponent*
		constexpr auto Arrow = 0x238; // UArrowComponent*
		constexpr auto GlassBox = 0x240; // UBoxComponent*
		constexpr auto Glass = 0x248; // UParticleSystemComponent*
		constexpr auto GlassMesh = 0x250; // UStaticMeshComponent*
		constexpr auto InteractableBox = 0x258; // UBoxComponent*
		constexpr auto DoorMark = 0x260; // UWidgetComponent*
		constexpr auto DoorFrame = 0x268; // UStaticMeshComponent*
		constexpr auto ParticlePositions = 0x270; // USceneComponent*
		constexpr auto hit = 0x278; // UParticleSystemComponent*
		constexpr auto Break = 0x280; // UParticleSystemComponent*
		constexpr auto CheckKillerBox = 0x288; // UBoxComponent*
		constexpr auto door_window_DM = 0x290; // UDestructibleComponent*
		constexpr auto Box = 0x298; // UBoxComponent*
		constexpr auto StaticMesh = 0x2a0; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x2a8; // USceneComponent*
		constexpr auto OpeningTimeline_DoorOffset_E85DBBC74771E564B66C5393B7E80CEA = 0x2b0; // float
		constexpr auto OpeningTimeline_Alpha_E85DBBC74771E564B66C5393B7E80CEA = 0x2b4; // float
		constexpr auto OpeningTimeline__Direction_E85DBBC74771E564B66C5393B7E80CEA = 0x2b8; // ETimelineDirection
		constexpr auto OpeningTimeline = 0x2c0; // UTimelineComponent*
		constexpr auto ClosingTimeline_DoorOffset_C50BA6A345065B62E7B28CA2A9430BC0 = 0x2c8; // float
		constexpr auto ClosingTimeline_Alpha_C50BA6A345065B62E7B28CA2A9430BC0 = 0x2cc; // float
		constexpr auto ClosingTimeline__Direction_C50BA6A345065B62E7B28CA2A9430BC0 = 0x2d0; // ETimelineDirection
		constexpr auto ClosingTimeline = 0x2d8; // UTimelineComponent*
		constexpr auto Closed? = 0x2e0; // bool
		constexpr auto Rotation = 0x2e4; // FRotator
		constexpr auto DoorHP = 0x2f0; // int32_t
		constexpr auto DoorDestroyed? = 0x2f4; // bool
		constexpr auto EndAnim? = 0x2f5; // bool
		constexpr auto Surv = 0x2f8; // ASurvivorMasterBP_C*
		constexpr auto RotationTemp = 0x300; // FRotator
		constexpr auto NoChangeDamagedMesh? = 0x30c; // bool
		constexpr auto InvertRotation? = 0x30d; // bool
		constexpr auto SurvLocation = 0x310; // FVector
		constexpr auto Impulse Strength = 0x31c; // float
		constexpr auto Glass? = 0x320; // bool
		constexpr auto CountGlass = 0x324; // int32_t
		constexpr auto Open = 0x328; // UFMODEvent*
		constexpr auto Close = 0x330; // UFMODEvent*
		constexpr auto TempBool = 0x338; // bool
		constexpr auto DamagedMesh = 0x340; // UStaticMesh*
		constexpr auto NormalMesh = 0x348; // UStaticMesh*
		constexpr auto KillerStun? = 0x350; // bool
		constexpr auto IsDelayed = 0x351; // bool
		constexpr auto OverlappedSurv = 0x358; // ASurvivorMasterBP_C*
		constexpr auto DamegedGlass = 0x360; // UStaticMesh*
		constexpr auto MaterialEffectEvent = 0x368; // FTimerHandle
		constexpr auto Materials = 0x370; // TArray<UMaterialInstanceDynamic*>
		constexpr auto EffectTime = 0x380; // float
		constexpr auto EffectDuration = 0x384; // float
		constexpr auto Float1 = 0x388; // float
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_AItemsBPHand_C {
		constexpr auto Cube = 0x220; // UStaticMeshComponent*
		constexpr auto ItemTypeVar = 0x228; // ItemType
		constexpr auto Rarity = 0x229; // Rarity
		constexpr auto Charges = 0x22c; // int32_t
		constexpr auto Infinity? = 0x230; // bool
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_UEndGameSurvAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x3c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x4c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x548; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x5f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x6a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x758; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x908; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x9b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xa68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xae8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xb68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0xbe8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xc68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0xce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xd68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xde8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0xe68; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0xf18; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0xfc8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1078; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x10f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x1128; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum = 0x11d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1288; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x1408; // FAnimNode_SequencePlayer
		constexpr auto Status = 0x1488; // EndGameStatus
		constexpr auto Surv Char = 0x1489; // SurvChars
		constexpr auto VictoryPose = 0x148a; // VictoryPoseEnum
		constexpr auto DefeatPose = 0x148b; // DefeatPoseEnum
		constexpr auto TempRandom = 0x148c; // int32_t
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x690; // char : 1
		constexpr auto FractureEffects = 0x698; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6a8; // bool
		constexpr auto LargeChunkThreshold = 0x6ac; // float
		constexpr auto OnComponentFracture = 0x6c0; // FMulticastInlineDelegate
	}

	namespace n_UKillerWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_AEndGamePlayerMesh_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto NicknameWidget = 0x288; // UWidgetComponent*
		constexpr auto StaticMesh = 0x290; // UStaticMeshComponent*
		constexpr auto Niagara = 0x298; // UNiagaraComponent*
		constexpr auto ParticleSystem = 0x2a0; // UParticleSystemComponent*
		constexpr auto SkeletalMesh = 0x2a8; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x2b0; // USceneComponent*
		constexpr auto Status = 0x2b8; // EndGameStatus
		constexpr auto SavedStatus = 0x2b9; // EndGameStatus
		constexpr auto ImSurv? = 0x2ba; // bool
		constexpr auto SurvDynMat1 = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat2 = 0x2c8; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat3 = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto DeathEffectTime = 0x2d8; // float
		constexpr auto DeathEffectDuration = 0x2dc; // float
		constexpr auto Float1 = 0x2e0; // float
		constexpr auto DeathEffectTimer = 0x2e8; // FTimerHandle
		constexpr auto SurvDynMaterials = 0x2f0; // TArray<UMaterialInstanceDynamic*>
		constexpr auto Surv Char = 0x300; // SurvChars
		constexpr auto NiagaraForDoppel = 0x301; // bool
		constexpr auto KnifeVis = 0x302; // bool
		constexpr auto NicknameString = 0x308; // FString
		constexpr auto KillerMesh = 0x318; // ALobbyPlayerMesh_EndGameKiller_C*
		constexpr auto Player State = 0x320; // APlayerState*
		constexpr auto SlotName = 0x328; // FString
		constexpr auto SteamId = 0x338; // FString
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UWBP_DoorMark_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Disappear = 0x268; // UWidgetAnimation*
		constexpr auto Appear = 0x270; // UWidgetAnimation*
		constexpr auto Image_Circle = 0x278; // UImage*
		constexpr auto Image_Point = 0x280; // UImage*
	}

	namespace n_UW_PressAnyKeyScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HideTrhobber_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Throbber_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Flashing_Anim = 0x278; // UWidgetAnimation*
		constexpr auto Fade_Anim = 0x280; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x288; // UCanvasPanel*
		constexpr auto Image_81 = 0x290; // UImage*
		constexpr auto Image_390 = 0x298; // UImage*
		constexpr auto Image_BG = 0x2a0; // UImage*
		constexpr auto Image_Dark = 0x2a8; // UImage*
		constexpr auto Image_Logo = 0x2b0; // UImage*
		constexpr auto Image_Ref = 0x2b8; // UImage*
		constexpr auto Image_Throbber = 0x2c0; // UImage*
		constexpr auto TextBlock_Status = 0x2c8; // UTextBlock*
		constexpr auto IsActive = 0x2d0; // bool
		constexpr auto OnShown = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnHidden = 0x2e8; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreAuthLogout {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USurvivalInventoryWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HUD_JumpOut_Curve = 0x268; // UWidgetAnimation*
		constexpr auto HUD_JumpOut = 0x270; // UWidgetAnimation*
		constexpr auto HUD_JumpIn = 0x278; // UWidgetAnimation*
		constexpr auto ItemHelpFadeIn = 0x280; // UWidgetAnimation*
		constexpr auto ItemHelpAnim = 0x288; // UWidgetAnimation*
		constexpr auto CanvasPanel_Main = 0x290; // UCanvasPanel*
		constexpr auto HorizontalBox_Inventory = 0x298; // UHorizontalBox*
		constexpr auto Image_3 = 0x2a0; // UImage*
		constexpr auto Image_5 = 0x2a8; // UImage*
		constexpr auto Image_83 = 0x2b0; // UImage*
		constexpr auto Image_560 = 0x2b8; // UImage*
		constexpr auto Image_HelperText = 0x2c0; // UImage*
		constexpr auto Inventory1 = 0x2c8; // UTextBlock*
		constexpr auto Inventory2 = 0x2d0; // UTextBlock*
		constexpr auto Inventory3 = 0x2d8; // UTextBlock*
		constexpr auto ItemDescription = 0x2e0; // UTextBlock*
		constexpr auto ItemName = 0x2e8; // UTextBlock*
		constexpr auto Overlay_ItemHelpText = 0x2f0; // UOverlay*
		constexpr auto Slot1 = 0x2f8; // USurvivalInventorySlotWidget_C*
		constexpr auto Slot1Image = 0x300; // UImage*
		constexpr auto Slot2 = 0x308; // USurvivalInventorySlotWidget_C*
		constexpr auto Slot2Image = 0x310; // UImage*
		constexpr auto Slot3 = 0x318; // USurvivalInventorySlotWidget_C*
		constexpr auto Slot3Image = 0x320; // UImage*
		constexpr auto CurrentSlot = 0x328; // int32_t
		constexpr auto AllSlots = 0x330; // TArray<USurvivalInventorySlotWidget_C*>
		constexpr auto AllItemsType = 0x340; // TArray<ItemType>
		constexpr auto Selected = 0x350; // FSlateBrush
		constexpr auto Deselected = 0x3d8; // FSlateBrush
		constexpr auto In Color And Opacity Specified Color_gray = 0x460; // FLinearColor
		constexpr auto In Color And Opacity Specified Color__black = 0x470; // FLinearColor
		constexpr auto isVis = 0x480; // bool
		constexpr auto isManuallyFadingOut = 0x481; // bool
		constexpr auto WasStopped = 0x482; // bool
	}

	namespace n_UPlayerScoreComponent_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BG = 0x268; // UImage*
		constexpr auto BG_Border_Down = 0x270; // UImage*
		constexpr auto BG_Border_Up = 0x278; // UImage*
		constexpr auto Image_200 = 0x280; // UImage*
		constexpr auto Image_Score = 0x288; // UImage*
		constexpr auto Image_Voice = 0x290; // UImage*
		constexpr auto KillerAvatar = 0x298; // UImage*
		constexpr auto Nickname = 0x2a0; // UTextBlock*
		constexpr auto Ping = 0x2a8; // UTextBlock*
		constexpr auto PlayerAvatar = 0x2b0; // UImage*
		constexpr auto PlayerPlace = 0x2b8; // UTextBlock*
		constexpr auto PlayerScoreComponentButton = 0x2c0; // UPlayerScoreComponentButtonSound_C*
		constexpr auto PlayerScoreComponentButton_TextChat = 0x2c8; // UPlayerScoreComponentButtonSound_C*
		constexpr auto PlayerScoreComponentButtonRep = 0x2d0; // UPlayerScoreComponentButtonRep_C*
		constexpr auto RetainerBox_1 = 0x2d8; // URetainerBox*
		constexpr auto ScorePoints = 0x2e0; // UTextBlock*
		constexpr auto ScorePoints_2 = 0x2e8; // UTextBlock*
		constexpr auto ScrollBox_1 = 0x2f0; // UScrollBox*
		constexpr auto SizeBox_1 = 0x2f8; // USizeBox*
		constexpr auto SizeBox_4 = 0x300; // USizeBox*
		constexpr auto SpectatorAvatar = 0x308; // UImage*
		constexpr auto StatusPlayer = 0x310; // UTextBlock*
		constexpr auto WidgetSwitcher_116 = 0x318; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_141 = 0x320; // UWidgetSwitcher*
		constexpr auto Player = 0x328; // APawn*
		constexpr auto Alive = 0x330; // FText
		constexpr auto Crawl = 0x348; // FText
		constexpr auto OnChair = 0x360; // FText
		constexpr auto Death = 0x378; // FText
		constexpr auto Player State = 0x390; // APlayerState*
		constexpr auto Icons = 0x398; // TMap<SurvChars, UPaperSprite*>
		constexpr auto Pawn Private = 0x3e8; // APawn*
		constexpr auto IsEmpty = 0x3f0; // bool
		constexpr auto Slate Brush = 0x3f8; // FSlateBrush
		constexpr auto isSoundMuted = 0x480; // bool
		constexpr auto IsForwardDirection = 0x481; // bool
		constexpr auto AnimTimer = 0x488; // FTimerHandle
		constexpr auto IsTextMuted = 0x490; // bool
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UW_CustomizeAvatarInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_70 = 0x268; // UButton*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_4 = 0x288; // UImage*
		constexpr auto Image_74 = 0x290; // UImage*
		constexpr auto Image_140 = 0x298; // UImage*
		constexpr auto Image_Avatar = 0x2a0; // UImage*
		constexpr auto Image_AVATAR_FRAME = 0x2a8; // UImage*
		constexpr auto SizeBox_45 = 0x2b0; // USizeBox*
		constexpr auto TextBlock_BannerName = 0x2b8; // UTextBlock*
		constexpr auto WBP_NewItemMarker = 0x2c0; // UWBP_NewItemMarker_C*
		constexpr auto WidgetSwitcher_BGs = 0x2c8; // UWidgetSwitcher*
		constexpr auto AvatarID = 0x2d0; // int32_t
		constexpr auto OnClickDispatcher = 0x2d8; // FMulticastInlineDelegate
		constexpr auto IsClicked = 0x2e8; // bool
		constexpr auto Specified Color = 0x2ec; // FLinearColor
		constexpr auto W_CustomizeBanner = 0x300; // UW_CustomizeBanner_C*
		constexpr auto Rarity = 0x308; // FText
		constexpr auto BannerName = 0x320; // FText
		constexpr auto E_Rarity = 0x338; // Rarity
		constexpr auto IsBlocked = 0x339; // bool
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_ALootboxShop_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Widget1 = 0x228; // UWidgetComponent*
		constexpr auto Widget = 0x230; // UWidgetComponent*
		constexpr auto IconPoint = 0x238; // USceneComponent*
		constexpr auto FMODAudioLoop = 0x240; // UFMODAudioComponent*
		constexpr auto Box = 0x248; // UBoxComponent*
		constexpr auto FMODAudioCloseDoor = 0x250; // UFMODAudioComponent*
		constexpr auto FMODAudioBeep = 0x258; // UFMODAudioComponent*
		constexpr auto FMODAudioLever = 0x260; // UFMODAudioComponent*
		constexpr auto LeverArm = 0x268; // UStaticMeshComponent*
		constexpr auto DownDoor = 0x270; // UStaticMeshComponent*
		constexpr auto UpDoor = 0x278; // UStaticMeshComponent*
		constexpr auto SpawnItemPoint = 0x280; // USceneComponent*
		constexpr auto Machine = 0x288; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto ItemsName = 0x298; // TArray<FName>
		constexpr auto RarityName = 0x2a8; // TArray<FName>
		constexpr auto ItemsChance = 0x2b8; // TArray<float>
		constexpr auto RarityChance = 0x2c8; // TArray<float>
		constexpr auto Random = 0x2d8; // float
		constexpr auto FirstIndex = 0x2dc; // int32_t
		constexpr auto SecondIndex = 0x2e0; // int32_t
		constexpr auto TempInt = 0x2e4; // int32_t
		constexpr auto GetItemName = 0x2e8; // FName
		constexpr auto GetRarityName = 0x2f0; // FName
		constexpr auto DroppedItem = 0x2f8; // FName
		constexpr auto Block? = 0x300; // bool
		constexpr auto SpawnedItem = 0x308; // AActor*
		constexpr auto ItemSpawned? = 0x310; // bool
		constexpr auto NeedPoints = 0x314; // int32_t
		constexpr auto DeltaTime = 0x318; // float
		constexpr auto ArmDown? = 0x31c; // bool
		constexpr auto DoorOpen? = 0x31d; // bool
		constexpr auto Lamp1 = 0x320; // UMaterialInstanceDynamic*
		constexpr auto Lamp2 = 0x328; // UMaterialInstanceDynamic*
		constexpr auto Lamp3 = 0x330; // UMaterialInstanceDynamic*
		constexpr auto Lamp4 = 0x338; // UMaterialInstanceDynamic*
		constexpr auto Lamp5 = 0x340; // UMaterialInstanceDynamic*
		constexpr auto Lamp6 = 0x348; // UMaterialInstanceDynamic*
		constexpr auto Moon1 = 0x350; // UMaterialInstanceDynamic*
		constexpr auto Moon2 = 0x358; // UMaterialInstanceDynamic*
		constexpr auto MaterialsReady? = 0x360; // bool
		constexpr auto UpLampsSpeed = 0x364; // float
		constexpr auto MoonLampSpeed = 0x368; // float
		constexpr auto RandomFlickerValue = 0x36c; // float
		constexpr auto AllOff? = 0x370; // bool
		constexpr auto ItemDropped? = 0x371; // bool
		constexpr auto First? = 0x372; // bool
		constexpr auto Second? = 0x373; // bool
		constexpr auto Third? = 0x374; // bool
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_ULobbyRabbitAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x370; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x420; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x450; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x500; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x5a0; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult = 0x5d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x678; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x758; // FAnimNode_StateMachine
		constexpr auto Reset? = 0x808; // bool
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_URabbitChargeShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_AYellowJarThrow_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x240; // UStaticMeshComponent*
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_AFMODSoundTrigger_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x230; // UFMODAudioComponent*
		constexpr auto Volume = 0x238; // float
		constexpr auto Overlap? = 0x23c; // bool
		constexpr auto Speed = 0x240; // float
	}

	namespace n_UFP_Vampire_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xa98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0xb18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xb48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xbc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xbf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0xc78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0xd28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0xd58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0xdd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xe08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0xe88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xeb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0xf38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xf68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0xfe8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1088; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1108; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1138; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1220; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x12d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1380; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x13b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x14d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1550; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1600; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x1630; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x16e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x17a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x17d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1850; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x1900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x19b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x19e0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose = 0x1a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root = 0x1be8; // FAnimNode_Root
		constexpr auto AnimGraphNode_UseCachedPose = 0x1c18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1c40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x1cc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x1d60; // FAnimNode_SequencePlayer
		constexpr auto keepSurv = 0x1de0; // float
		constexpr auto IsInAir = 0x1de4; // bool
		constexpr auto Speed = 0x1de8; // float
		constexpr auto Direction = 0x1dec; // float
		constexpr auto PropHunt? = 0x1df0; // bool
		constexpr auto AttackBool = 0x1df1; // bool
		constexpr auto JumpEndChek = 0x1df2; // bool
		constexpr auto FIRE = 0x1df3; // bool
		constexpr auto Plant = 0x1df4; // bool
		constexpr auto MarioStun = 0x1df5; // bool
		constexpr auto Flashed = 0x1df6; // bool
		constexpr auto Broke Anim = 0x1df7; // bool
		constexpr auto TypeAttack = 0x1df8; // int32_t
		constexpr auto Delta Time X = 0x1dfc; // float
		constexpr auto Alt Attack? = 0x1e00; // bool
		constexpr auto Active Spell 1? = 0x1e01; // bool
		constexpr auto vs3 = 0x1e02; // bool
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_AMiniLobbyPawn_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto VoipManager = 0x288; // UVoipManagerComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto Nickname = 0x298; // FString
		constexpr auto Avatar = 0x2a8; // UTexture2D*
		constexpr auto LobbyMesh = 0x2b0; // A3DLobbyMesh_C*
		constexpr auto SurvSkin = 0x2b8; // int32_t
		constexpr auto InfoMiniLobby = 0x2c0; // FPlayerInfo
		constexpr auto Temp1 = 0x2d8; // FVector
		constexpr auto Temp2 = 0x2e4; // FRotator
		constexpr auto LobbyCamRef = 0x2f0; // ACamLobby_C*
		constexpr auto VoiceActive? = 0x2f8; // bool
		constexpr auto Allow Voice = 0x2f9; // bool
		constexpr auto VoipAudio = 0x300; // UVoipAudioComponent*
		constexpr auto Surv Char = 0x308; // SurvChars
		constexpr auto KillerChar = 0x309; // bool
		constexpr auto NewLobbyReference = 0x310; // ANewLobby_C*
		constexpr auto LobbyV2 = 0x318; // ANewLobbyV2_C*
		constexpr auto WLoadingT = 0x320; // UW_LoadingTutorial_C*
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x460; // FVector
		constexpr auto DirectionY = 0x46c; // FVector
		constexpr auto OffsetX = 0x478; // float
		constexpr auto OffsetY = 0x47c; // float
		constexpr auto LengthX = 0x480; // float
		constexpr auto LengthY = 0x484; // float
		constexpr auto Thickness = 0x488; // float
		constexpr auto SegmentFlags = 0x48c; // char
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_ULuminRuntimeSettings {
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UPlayFabEventsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xa8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xb0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb8; // UPlayFabJsonObject*
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UWBP_SoundChatMiniCooldDown_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CD_Anim = 0x268; // UWidgetAnimation*
		constexpr auto CoolDownTime = 0x270; // float
	}

	namespace n_UEOSCoreEcomQueryOffers {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto HandleSize = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto Direction = 0x474; // FVector
		constexpr auto Length = 0x480; // float
		constexpr auto bImageScale = 0x484; // bool
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x470; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x478; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x480; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x490; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x598; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5a0; // int32_t
		constexpr auto MinLodModel = 0x5a4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5b0; // float
		constexpr auto LODInfo = 0x5c0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5f4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x5f6; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5f6; // char : 1
		constexpr auto bForceWireframe = 0x5f6; // char : 1
		constexpr auto bDisplayBones = 0x5f6; // char : 1
		constexpr auto bDisableMorphTarget = 0x5f6; // char : 1
		constexpr auto bHideSkin = 0x5f7; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5f7; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5f7; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5f7; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5f7; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5f7; // char : 1
		constexpr auto bRecentlyRendered = 0x5f7; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5f7; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5f8; // char : 1
		constexpr auto bCPUSkinning = 0x5f8; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bRenderStatic = 0x5f8; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5f8; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5f9; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5f9; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5fc; // float
		constexpr auto CachedWorldSpaceBounds = 0x610; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x630; // FMatrix
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UWB_BindOverlayHeader_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ButtonReFocuser = 0x268; // UButton*
		constexpr auto Changer = 0x270; // UOverlay*
		constexpr auto Image_83 = 0x278; // UImage*
		constexpr auto SafeZone_71 = 0x280; // USafeZone*
		constexpr auto SizeBox_Main = 0x288; // USizeBox*
		constexpr auto TextBlock_SomeTEXT = 0x290; // UTextBlock*
		constexpr auto bIsSelected = 0x298; // bool
		constexpr auto EventDispatcher_LeftBtn = 0x2a0; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_RightBtn = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x2c0; // FMulticastInlineDelegate
		constexpr auto InputName = 0x2d0; // FText
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UEOSCoreSessionsJoinSession {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UNewPropmachineAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x2f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x3b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x438; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x4f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x578; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x618; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x6d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x758; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x7d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x858; // FAnimNode_SequencePlayer
		constexpr auto Failed? = 0x8d8; // bool
		constexpr auto Finished? = 0x8d9; // bool
		constexpr auto Reloading Time = 0x8dc; // float
		constexpr auto Reloading Time Rem = 0x8e0; // float
		constexpr auto Creak Int = 0x8e4; // int32_t
		constexpr auto Reloading Starts? = 0x8e8; // bool
		constexpr auto FailedAnimStart? = 0x8e9; // bool
		constexpr auto Crack? = 0x8ea; // bool
		constexpr auto Lvl = 0x8ec; // int32_t
		constexpr auto Stage = 0x8f0; // int32_t
	}

	namespace n_UPlayerScoreComponentButtonSound_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Click_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Hover_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Image_Icon_Pressed = 0x278; // UImage*
		constexpr auto Image_Icon_Unpressed = 0x280; // UImage*
		constexpr auto Clicked = 0x288; // FMulticastInlineDelegate
		constexpr auto IsEnabled = 0x298; // bool
		constexpr auto DefaultIcon = 0x2a0; // UPaperSprite*
		constexpr auto PressedIcon = 0x2a8; // UPaperSprite*
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x440; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto CollisionSizeQuads = 0x458; // int32_t
		constexpr auto CollisionScale = 0x45c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x460; // int32_t
		constexpr auto CollisionQuadFlags = 0x468; // TArray<char>
		constexpr auto HeightfieldGuid = 0x478; // FGuid
		constexpr auto CachedLocalBox = 0x488; // FBox
		constexpr auto RenderComponent = 0x4a4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4d0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_ASurvIntro_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto RectLight6 = 0x228; // URectLightComponent*
		constexpr auto RectLight5 = 0x230; // URectLightComponent*
		constexpr auto RectLight4 = 0x238; // URectLightComponent*
		constexpr auto RectLight = 0x240; // URectLightComponent*
		constexpr auto RectLight2 = 0x248; // URectLightComponent*
		constexpr auto RectLight1 = 0x250; // URectLightComponent*
		constexpr auto Sphere = 0x258; // UStaticMeshComponent*
		constexpr auto EndPoint = 0x260; // USceneComponent*
		constexpr auto StartPoint = 0x268; // USceneComponent*
		constexpr auto CineCamera = 0x270; // UCineCameraComponent*
		constexpr auto Main = 0x278; // USceneComponent*
		constexpr auto TargetPoint = 0x280; // USceneComponent*
		constexpr auto StartTimeline_Focus_Distance_598CCCFC44D033BBCC5443B94BFA1CB9 = 0x288; // float
		constexpr auto StartTimeline_Alpha_598CCCFC44D033BBCC5443B94BFA1CB9 = 0x28c; // float
		constexpr auto StartTimeline__Direction_598CCCFC44D033BBCC5443B94BFA1CB9 = 0x290; // ETimelineDirection
		constexpr auto StartTimeline = 0x298; // UTimelineComponent*
		constexpr auto Nicknames? = 0x2a0; // bool
		constexpr auto forKiller = 0x2a1; // bool
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UAlarmsCountWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FakeHardModeStart = 0x268; // UWidgetAnimation*
		constexpr auto HardModeStart = 0x270; // UWidgetAnimation*
		constexpr auto LastSurvNotification_Anim = 0x278; // UWidgetAnimation*
		constexpr auto MoveSurvNotifications = 0x280; // UWidgetAnimation*
		constexpr auto NotificationStart_LastSurv_Ground = 0x288; // UWidgetAnimation*
		constexpr auto NotificationStart_LastSurv = 0x290; // UWidgetAnimation*
		constexpr auto AllAlarmsDone = 0x298; // UWidgetAnimation*
		constexpr auto NotificationStart_34 = 0x2a0; // UWidgetAnimation*
		constexpr auto NotificationStart_23 = 0x2a8; // UWidgetAnimation*
		constexpr auto SwitchColor = 0x2b0; // UWidgetAnimation*
		constexpr auto ShowTimer = 0x2b8; // UWidgetAnimation*
		constexpr auto GetReadyAppearanceFinish = 0x2c0; // UWidgetAnimation*
		constexpr auto OverlayHide = 0x2c8; // UWidgetAnimation*
		constexpr auto TextHide_Target = 0x2d0; // UWidgetAnimation*
		constexpr auto Timer5_2 = 0x2d8; // UWidgetAnimation*
		constexpr auto Timer5 = 0x2e0; // UWidgetAnimation*
		constexpr auto TimerAdd = 0x2e8; // UWidgetAnimation*
		constexpr auto GetReadyAppearanceStart = 0x2f0; // UWidgetAnimation*
		constexpr auto NotificationStart = 0x2f8; // UWidgetAnimation*
		constexpr auto LastSurvivorStart = 0x300; // UWidgetAnimation*
		constexpr auto AddedTime = 0x308; // UTextBlock*
		constexpr auto AlarmSwitch = 0x310; // UWidgetSwitcher*
		constexpr auto Background = 0x318; // UImage*
		constexpr auto Background_2 = 0x320; // UImage*
		constexpr auto Background_3 = 0x328; // UImage*
		constexpr auto Box_Time = 0x330; // UHorizontalBox*
		constexpr auto CanvasPanel_1 = 0x338; // UCanvasPanel*
		constexpr auto GameplayNotification = 0x340; // UTextBlock*
		constexpr auto GameplayNotification_2 = 0x348; // UTextBlock*
		constexpr auto GetReadyTextBox = 0x350; // USizeBox*
		constexpr auto GetReadyTextBox_2 = 0x358; // USizeBox*
		constexpr auto GetReadyTextBox_AlarmsDone = 0x360; // USizeBox*
		constexpr auto HMLMIcon_2 = 0x368; // UImage*
		constexpr auto HMLMIcon_3 = 0x370; // UImage*
		constexpr auto HorizontalBox_3 = 0x378; // UHorizontalBox*
		constexpr auto IconAbilityCooldownAlarmWBP_Survivor_Middle = 0x380; // UIconAbilityCooldownAlarmWBP_Survivor_Middle_C*
		constexpr auto Image = 0x388; // UImage*
		constexpr auto Image_2 = 0x390; // UImage*
		constexpr auto Image_3 = 0x398; // UImage*
		constexpr auto Image_4 = 0x3a0; // UImage*
		constexpr auto Image_5 = 0x3a8; // UImage*
		constexpr auto Image_6 = 0x3b0; // UImage*
		constexpr auto Image_7 = 0x3b8; // UImage*
		constexpr auto Image_8 = 0x3c0; // UImage*
		constexpr auto Image_9 = 0x3c8; // UImage*
		constexpr auto Image_10 = 0x3d0; // UImage*
		constexpr auto Image_11 = 0x3d8; // UImage*
		constexpr auto Image_23 = 0x3e0; // UImage*
		constexpr auto Image_78 = 0x3e8; // UImage*
		constexpr auto Image_122 = 0x3f0; // UImage*
		constexpr auto Image_126 = 0x3f8; // UImage*
		constexpr auto Image_347 = 0x400; // UImage*
		constexpr auto Image_403 = 0x408; // UImage*
		constexpr auto Image_475 = 0x410; // UImage*
		constexpr auto Image_541 = 0x418; // UImage*
		constexpr auto Image_556 = 0x420; // UImage*
		constexpr auto Image_AddedTime = 0x428; // UImage*
		constexpr auto Image_backtimer = 0x430; // UImage*
		constexpr auto KillerSee = 0x438; // UTextBlock*
		constexpr auto MinutesText = 0x440; // UTextBlock*
		constexpr auto Overlay_AddedTime = 0x448; // UOverlay*
		constexpr auto Overlay_Detect = 0x450; // UOverlay*
		constexpr auto Overlay_HardMode = 0x458; // UOverlay*
		constexpr auto Overlay_TIMERSIZE = 0x460; // UOverlay*
		constexpr auto Overtime_Text = 0x468; // UTextBlock*
		constexpr auto ReadyText = 0x470; // UTextBlock*
		constexpr auto ReadyText_2 = 0x478; // UTextBlock*
		constexpr auto SecondsText = 0x480; // UTextBlock*
		constexpr auto SecondsText_2 = 0x488; // UTextBlock*
		constexpr auto SurvLive = 0x490; // UTextBlock*
		constexpr auto TextBlock_89 = 0x498; // UTextBlock*
		constexpr auto TextBlock_123 = 0x4a0; // UTextBlock*
		constexpr auto WBP_AlarmsCounter = 0x4a8; // UWBP_AlarmsCounter_C*
		constexpr auto WidgetSwitcher_730 = 0x4b0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_GETREADYTEXT = 0x4b8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_StatusSurv = 0x4c0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_TIMER = 0x4c8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Tip_Alarms = 0x4d0; // UWidgetSwitcher*
		constexpr auto str = 0x4d8; // FString
		constexpr auto AlarmText = 0x4e8; // FText
		constexpr auto AlarmsCount = 0x500; // int32_t
		constexpr auto AlarmsDone = 0x504; // int32_t
		constexpr auto GameStarting? = 0x508; // bool
		constexpr auto GameEndEvent = 0x510; // FFMODEventInstance
		constexpr auto HardModeEvent = 0x518; // FFMODEventInstance
		constexpr auto LastManStandEvent = 0x520; // FFMODEventInstance
		constexpr auto HardMode? = 0x528; // bool
		constexpr auto LastManStand? = 0x529; // bool
		constexpr auto Volume = 0x52c; // float
		constexpr auto Sound2D = 0x530; // FFMODEventInstance
		constexpr auto StartGame? = 0x538; // bool
		constexpr auto Minutes = 0x53c; // int32_t
		constexpr auto Seconds = 0x540; // int32_t
		constexpr auto IsStop = 0x544; // bool
		constexpr auto KillerSeeSound = 0x548; // FFMODEventInstance
		constexpr auto DeltaSecond = 0x550; // float
		constexpr auto Speed = 0x554; // float
		constexpr auto LastSecondsMusic? = 0x558; // bool
		constexpr auto LastSecondVolume = 0x55c; // float
		constexpr auto GameEnd? = 0x560; // bool
		constexpr auto Chased? = 0x561; // bool
		constexpr auto EyeScale = 0x564; // float
		constexpr auto Delay = 0x568; // float
		constexpr auto StopMusic? = 0x56c; // bool
		constexpr auto VolumeKillerSee = 0x570; // float
		constexpr auto 10Sec = 0x578; // FFMODEventInstance
		constexpr auto CountAliveSurv = 0x580; // FText
		constexpr auto Last = 0x598; // FFMODEventInstance
		constexpr auto LastChance = 0x5a0; // bool
		constexpr auto Seconds_Start5 = 0x5a4; // float
		constexpr auto GameStarting?_6 = 0x5a8; // bool
		constexpr auto Material INstance = 0x5b0; // UMaterialInstanceDynamic*
		constexpr auto Seconds_Start3 = 0x5b8; // float
		constexpr auto Alarms = 0x5bc; // int32_t
		constexpr auto LastSurvPlay? = 0x5c0; // bool
		constexpr auto bIsAlarmsDone = 0x5c1; // bool
		constexpr auto Last Survivor Start = 0x5c8; // UWidgetAnimation*
		constexpr auto IsLastSurvAnimationPlaying = 0x5d0; // bool
		constexpr auto bIsAlarmsAnimFinished = 0x5d1; // bool
		constexpr auto OnLastSurmAnimFinished = 0x5d8; // FMulticastInlineDelegate
		constexpr auto Voice = 0x5e8; // FFMODEventInstance
		constexpr auto OnHardModeAnimFinished = 0x5f0; // FMulticastInlineDelegate
	}

	namespace n_UW_Slot_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto loading = 0x268; // UWidgetAnimation*
		constexpr auto MiniSearching = 0x270; // UWidgetAnimation*
		constexpr auto SearchingAnimation = 0x278; // UWidgetAnimation*
		constexpr auto Avatar_BG = 0x280; // UImage*
		constexpr auto Avatar_BG_4 = 0x288; // UImage*
		constexpr auto Avatar_BG_5 = 0x290; // UImage*
		constexpr auto BackgroundBlur_2 = 0x298; // UBackgroundBlur*
		constexpr auto Image_3 = 0x2a0; // UImage*
		constexpr auto Image_9 = 0x2a8; // UImage*
		constexpr auto Image_10 = 0x2b0; // UImage*
		constexpr auto Image_11 = 0x2b8; // UImage*
		constexpr auto Image_12 = 0x2c0; // UImage*
		constexpr auto Image_116 = 0x2c8; // UImage*
		constexpr auto Image_189 = 0x2d0; // UImage*
		constexpr auto Image_207 = 0x2d8; // UImage*
		constexpr auto Image_412 = 0x2e0; // UImage*
		constexpr auto Image_1113 = 0x2e8; // UImage*
		constexpr auto Image_CharIcon = 0x2f0; // UImage*
		constexpr auto Nickname = 0x2f8; // UTextBlock*
		constexpr auto Overlay_SWAP_TEXT = 0x300; // UOverlay*
		constexpr auto PlayerSlotSwitcher = 0x308; // UWidgetSwitcher*
		constexpr auto ReserveButton = 0x310; // UButton*
		constexpr auto RetainerBox_1 = 0x318; // URetainerBox*
		constexpr auto ScrollBox_1 = 0x320; // UScrollBox*
		constexpr auto SlotName1 = 0x328; // UTextBlock*
		constexpr auto SlotName2 = 0x330; // UTextBlock*
		constexpr auto SwapButton = 0x338; // UButton*
		constexpr auto SwapIcon = 0x340; // UImage*
		constexpr auto SwapText = 0x348; // UTextBlock*
		constexpr auto Text = 0x350; // FText
		constexpr auto Name = 0x368; // FString
		constexpr auto IsMySlot = 0x378; // bool
		constexpr auto SurvClassEnum = 0x379; // SurvClass
		constexpr auto ImKiller = 0x37a; // bool
		constexpr auto PlayerState = 0x380; // APlayerState*
		constexpr auto W_MiniLobbby = 0x388; // UW_MiniLobby_C*
		constexpr auto Point = 0x390; // float
		constexpr auto SwapRequestHandled = 0x394; // bool
		constexpr auto SwapAccepted = 0x395; // bool
		constexpr auto LastSender = 0x398; // APawn*
		constexpr auto IsSwapRequest = 0x3a0; // bool
		constexpr auto In Style Normal = 0x3a8; // FSlateBrush
		constexpr auto In Style Normal_1 = 0x430; // FSlateBrush
		constexpr auto Style Hovered = 0x4b8; // FSlateBrush
		constexpr auto Style Pressed = 0x540; // FSlateBrush
		constexpr auto Style Disabled = 0x5c8; // FSlateBrush
		constexpr auto In Style Normal_2 = 0x650; // FSlateBrush
		constexpr auto As PS Prop Hunt = 0x6d8; // APS_PropHunt_C*
		constexpr auto IsForwardDirection = 0x6e0; // bool
		constexpr auto AnimTimer = 0x6e8; // FTimerHandle
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UEOSCoreTitleStorageQueryFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_AKeymaster_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto Hammer_slashFX_VFX = 0x1320; // UNiagaraComponent*
		constexpr auto Hammer_slashFX_ = 0x1328; // UNiagaraComponent*
		constexpr auto HammerIntro = 0x1330; // USkeletalMeshComponent*
		constexpr auto HammerInvis = 0x1338; // USkeletalMeshComponent*
		constexpr auto Hammer = 0x1340; // USkeletalMeshComponent*
		constexpr auto HammerFPPInvis = 0x1348; // USkeletalMeshComponent*
		constexpr auto HammerFPP = 0x1350; // USkeletalMeshComponent*
		constexpr auto KeymasterLevelSystem = 0x1358; // UKeymasterLevelSystem_C*
		constexpr auto FMODAudio2_1 = 0x1360; // UFMODAudioComponent*
		constexpr auto FPPSMInvis = 0x1368; // USkeletalMeshComponent*
		constexpr auto MeshInvis = 0x1370; // USkeletalMeshComponent*
		constexpr auto SpyEyes = 0x1378; // USpyEyes_C*
		constexpr auto Astral = 0x1380; // UAstral_C*
		constexpr auto Shoot = 0x1388; // UShoot_C*
		constexpr auto Timeline_5_0_alpha_F6D4614945F224AEFEB4E0AAB4F8AE2D = 0x1390; // float
		constexpr auto Timeline_5_0__Direction_F6D4614945F224AEFEB4E0AAB4F8AE2D = 0x1394; // ETimelineDirection
		constexpr auto Timeline_5_1 = 0x1398; // UTimelineComponent*
		constexpr auto AudioBool = 0x13a0; // bool
		constexpr auto HamMat = 0x13a8; // UMaterialInstanceDynamic*
		constexpr auto HamMatTpp = 0x13b0; // UMaterialInstanceDynamic*
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x440; // UBodySetup*
		constexpr auto AreaClass = 0x448; // UNavAreaBase*
		constexpr auto ShapeColor = 0x450; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x454; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x454; // char : 1
		constexpr auto bDynamicObstacle = 0x454; // char : 1
	}

	namespace n_UW_Tutorial_Quest_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto BackgroundBlur_1 = 0x270; // UBackgroundBlur*
		constexpr auto CanvasPanel_Main = 0x278; // UCanvasPanel*
		constexpr auto Image = 0x280; // UImage*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto Image_3 = 0x290; // UImage*
		constexpr auto Image_4 = 0x298; // UImage*
		constexpr auto Image_5 = 0x2a0; // UImage*
		constexpr auto Image_6 = 0x2a8; // UImage*
		constexpr auto Image_7 = 0x2b0; // UImage*
		constexpr auto Image_8 = 0x2b8; // UImage*
		constexpr auto Image_9 = 0x2c0; // UImage*
		constexpr auto Image_10 = 0x2c8; // UImage*
		constexpr auto Image_11 = 0x2d0; // UImage*
		constexpr auto Image_12 = 0x2d8; // UImage*
		constexpr auto Image_13 = 0x2e0; // UImage*
		constexpr auto Image_14 = 0x2e8; // UImage*
		constexpr auto Image_15 = 0x2f0; // UImage*
		constexpr auto Image_16 = 0x2f8; // UImage*
		constexpr auto Image_17 = 0x300; // UImage*
		constexpr auto Image_18 = 0x308; // UImage*
		constexpr auto Image_19 = 0x310; // UImage*
		constexpr auto Image_20 = 0x318; // UImage*
		constexpr auto Image_23 = 0x320; // UImage*
		constexpr auto Image_24 = 0x328; // UImage*
		constexpr auto Image_25 = 0x330; // UImage*
		constexpr auto Image_26 = 0x338; // UImage*
		constexpr auto Image_27 = 0x340; // UImage*
		constexpr auto Image_28 = 0x348; // UImage*
		constexpr auto Image_29 = 0x350; // UImage*
		constexpr auto Image_30 = 0x358; // UImage*
		constexpr auto Image_31 = 0x360; // UImage*
		constexpr auto Image_32 = 0x368; // UImage*
		constexpr auto Image_33 = 0x370; // UImage*
		constexpr auto Image_34 = 0x378; // UImage*
		constexpr auto Image_35 = 0x380; // UImage*
		constexpr auto Image_36 = 0x388; // UImage*
		constexpr auto Image_37 = 0x390; // UImage*
		constexpr auto Image_38 = 0x398; // UImage*
		constexpr auto Image_39 = 0x3a0; // UImage*
		constexpr auto Image_40 = 0x3a8; // UImage*
		constexpr auto Image_41 = 0x3b0; // UImage*
		constexpr auto Image_42 = 0x3b8; // UImage*
		constexpr auto Image_43 = 0x3c0; // UImage*
		constexpr auto Image_44 = 0x3c8; // UImage*
		constexpr auto Image_45 = 0x3d0; // UImage*
		constexpr auto Image_46 = 0x3d8; // UImage*
		constexpr auto Image_47 = 0x3e0; // UImage*
		constexpr auto Image_48 = 0x3e8; // UImage*
		constexpr auto Image_49 = 0x3f0; // UImage*
		constexpr auto Image_50 = 0x3f8; // UImage*
		constexpr auto Image_110 = 0x400; // UImage*
		constexpr auto Image_157 = 0x408; // UImage*
		constexpr auto Image_666 = 0x410; // UImage*
		constexpr auto Image_BG = 0x418; // UImage*
		constexpr auto Image_BG_2 = 0x420; // UImage*
		constexpr auto Image_Separator = 0x428; // UImage*
		constexpr auto Image_SS = 0x430; // UImage*
		constexpr auto Image_SS_2 = 0x438; // UImage*
		constexpr auto Image_SS_3 = 0x440; // UImage*
		constexpr auto Image_SS_4 = 0x448; // UImage*
		constexpr auto Image_SS_5 = 0x450; // UImage*
		constexpr auto Image_SS_6 = 0x458; // UImage*
		constexpr auto Image_SS_7 = 0x460; // UImage*
		constexpr auto Image_SS_8 = 0x468; // UImage*
		constexpr auto Image_SS_9 = 0x470; // UImage*
		constexpr auto Image_SS_10 = 0x478; // UImage*
		constexpr auto Image_SS_11 = 0x480; // UImage*
		constexpr auto Image_SS_12 = 0x488; // UImage*
		constexpr auto Image_SS_13 = 0x490; // UImage*
		constexpr auto Image_SS_14 = 0x498; // UImage*
		constexpr auto Image_SS_15 = 0x4a0; // UImage*
		constexpr auto Image_SS_16 = 0x4a8; // UImage*
		constexpr auto Overlay_111 = 0x4b0; // UOverlay*
		constexpr auto Overlay_112 = 0x4b8; // UOverlay*
		constexpr auto Overlay_113 = 0x4c0; // UOverlay*
		constexpr auto Overlay_122 = 0x4c8; // UOverlay*
		constexpr auto Overlay_123 = 0x4d0; // UOverlay*
		constexpr auto Overlay_127 = 0x4d8; // UOverlay*
		constexpr auto SizeBox_Button = 0x4e0; // USizeBox*
		constexpr auto SizeBox_Button_2 = 0x4e8; // USizeBox*
		constexpr auto SizeBox_Button_3 = 0x4f0; // USizeBox*
		constexpr auto SizeBox_Button_4 = 0x4f8; // USizeBox*
		constexpr auto SizeBox_Button_5 = 0x500; // USizeBox*
		constexpr auto SizeBox_Button_6 = 0x508; // USizeBox*
		constexpr auto SizeBox_Button_7 = 0x510; // USizeBox*
		constexpr auto SizeBox_Button_8 = 0x518; // USizeBox*
		constexpr auto SizeBox_Button_9 = 0x520; // USizeBox*
		constexpr auto SizeBox_Button_10 = 0x528; // USizeBox*
		constexpr auto SizeBox_Button_11 = 0x530; // USizeBox*
		constexpr auto SizeBox_Button_12 = 0x538; // USizeBox*
		constexpr auto SizeBox_Button_13 = 0x540; // USizeBox*
		constexpr auto SizeBox_Button_14 = 0x548; // USizeBox*
		constexpr auto SizeBox_Button_15 = 0x550; // USizeBox*
		constexpr auto SizeBox_Button_16 = 0x558; // USizeBox*
		constexpr auto SizeBox_Button_17 = 0x560; // USizeBox*
		constexpr auto SizeBox_Button_18 = 0x568; // USizeBox*
		constexpr auto Text_Header = 0x570; // UTextBlock*
		constexpr auto TextBlock_5 = 0x578; // UTextBlock*
		constexpr auto TextBlock_6 = 0x580; // UTextBlock*
		constexpr auto TextBlock_7 = 0x588; // UTextBlock*
		constexpr auto TextBlock_8 = 0x590; // UTextBlock*
		constexpr auto TextBlock_9 = 0x598; // UTextBlock*
		constexpr auto TextBlock_10 = 0x5a0; // UTextBlock*
		constexpr auto TextBlock_13 = 0x5a8; // UTextBlock*
		constexpr auto TextBlock_14 = 0x5b0; // UTextBlock*
		constexpr auto TextBlock_15 = 0x5b8; // UTextBlock*
		constexpr auto TextBlock_35 = 0x5c0; // UTextBlock*
		constexpr auto TextBlock_73 = 0x5c8; // UTextBlock*
		constexpr auto TextBlock_113 = 0x5d0; // UTextBlock*
		constexpr auto TextBlock_159 = 0x5d8; // UTextBlock*
		constexpr auto TextBlock_Q1 = 0x5e0; // UTextBlock*
		constexpr auto TextBlock_Q1_3 = 0x5e8; // UTextBlock*
		constexpr auto TextBlock_Q1_4 = 0x5f0; // UTextBlock*
		constexpr auto TextBlock_Q1_6 = 0x5f8; // UTextBlock*
		constexpr auto TextBlock_Q1_7 = 0x600; // UTextBlock*
		constexpr auto TextBlock_Q1_8 = 0x608; // UTextBlock*
		constexpr auto TextBlock_Q1_9 = 0x610; // UTextBlock*
		constexpr auto TextBlock_Q1_10 = 0x618; // UTextBlock*
		constexpr auto TextBlock_Q1_11 = 0x620; // UTextBlock*
		constexpr auto TextBlock_Q1_12 = 0x628; // UTextBlock*
		constexpr auto TextBlock_Q1_13 = 0x630; // UTextBlock*
		constexpr auto TextBlock_Q1_14 = 0x638; // UTextBlock*
		constexpr auto TextBlock_Q1_15 = 0x640; // UTextBlock*
		constexpr auto TextBlock_Q1_16 = 0x648; // UTextBlock*
		constexpr auto TextBlock_Q1_17 = 0x650; // UTextBlock*
		constexpr auto TextBlock_Q1_18 = 0x658; // UTextBlock*
		constexpr auto TextBlock_Q1_19 = 0x660; // UTextBlock*
		constexpr auto TextBlock_Q1_20 = 0x668; // UTextBlock*
		constexpr auto TextBlock_Q1_21 = 0x670; // UTextBlock*
		constexpr auto TextBlock_Q1_22 = 0x678; // UTextBlock*
		constexpr auto TextBlock_Q1_23 = 0x680; // UTextBlock*
		constexpr auto TextBlock_Q1_24 = 0x688; // UTextBlock*
		constexpr auto TextBlock_Q1_25 = 0x690; // UTextBlock*
		constexpr auto TextBlock_Q1_26 = 0x698; // UTextBlock*
		constexpr auto TextBlock_Q1_27 = 0x6a0; // UTextBlock*
		constexpr auto TextBlock_Q1_28 = 0x6a8; // UTextBlock*
		constexpr auto TextBlock_Q1_29 = 0x6b0; // UTextBlock*
		constexpr auto TextBlock_Q1_30 = 0x6b8; // UTextBlock*
		constexpr auto TextBlock_Q1_31 = 0x6c0; // UTextBlock*
		constexpr auto TextBlock_Q1_32 = 0x6c8; // UTextBlock*
		constexpr auto TextBlock_Q1_34 = 0x6d0; // UTextBlock*
		constexpr auto TextBlock_Q1_35 = 0x6d8; // UTextBlock*
		constexpr auto TextBlock_Q1_36 = 0x6e0; // UTextBlock*
		constexpr auto TextBlock_Q1_37 = 0x6e8; // UTextBlock*
		constexpr auto TextBlock_Q1_59 = 0x6f0; // UTextBlock*
		constexpr auto TextBlock_Q1_62 = 0x6f8; // UTextBlock*
		constexpr auto TextBlock_Q1_77 = 0x700; // UTextBlock*
		constexpr auto TextBlock_Q1_81 = 0x708; // UTextBlock*
		constexpr auto TextBlock_Q1_83 = 0x710; // UTextBlock*
		constexpr auto TextBlock_Q1_84 = 0x718; // UTextBlock*
		constexpr auto TextBlock_Q1_87 = 0x720; // UTextBlock*
		constexpr auto TextBlock_Q1_91 = 0x728; // UTextBlock*
		constexpr auto TextBlock_Q1_92 = 0x730; // UTextBlock*
		constexpr auto TextBlock_Q1_93 = 0x738; // UTextBlock*
		constexpr auto TextBlock_Q1_96 = 0x740; // UTextBlock*
		constexpr auto TextBlock_Q1_97 = 0x748; // UTextBlock*
		constexpr auto TextBlock_Q1_99 = 0x750; // UTextBlock*
		constexpr auto TextBlock_Q1_101 = 0x758; // UTextBlock*
		constexpr auto TextBlock_Q1_104 = 0x760; // UTextBlock*
		constexpr auto TextBlock_Q1_105 = 0x768; // UTextBlock*
		constexpr auto TextBlock_Q1_106 = 0x770; // UTextBlock*
		constexpr auto TextBlock_Q1_113 = 0x778; // UTextBlock*
		constexpr auto TextBlock_Q1_115 = 0x780; // UTextBlock*
		constexpr auto TextBlock_Q1_118 = 0x788; // UTextBlock*
		constexpr auto TextBlock_Q1_119 = 0x790; // UTextBlock*
		constexpr auto TextBlock_Q1_120 = 0x798; // UTextBlock*
		constexpr auto TextBlock_Q1_121 = 0x7a0; // UTextBlock*
		constexpr auto TextBlock_Q1_124 = 0x7a8; // UTextBlock*
		constexpr auto TextBlock_Q1_128 = 0x7b0; // UTextBlock*
		constexpr auto TextBlock_Q1_131 = 0x7b8; // UTextBlock*
		constexpr auto TextBlock_StepCount = 0x7c0; // UTextBlock*
		constexpr auto WidgetSwitcher_366 = 0x7c8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck = 0x7d0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_2 = 0x7d8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_3 = 0x7e0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_4 = 0x7e8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_5 = 0x7f0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_6 = 0x7f8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_7 = 0x800; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_8 = 0x808; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_9 = 0x810; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_10 = 0x818; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_11 = 0x820; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_12 = 0x828; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_13 = 0x830; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_14 = 0x838; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_15 = 0x840; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_QCheck_16 = 0x848; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Quest = 0x850; // UWidgetSwitcher*
		constexpr auto Array = 0x858; // TArray<float>
		constexpr auto IndexQuest = 0x868; // int32_t
		constexpr auto In Brush = 0x870; // FSlateBrush
		constexpr auto In Brush_Full = 0x8f8; // FSlateBrush
		constexpr auto NewVar_1 = 0x980; // int32_t
		constexpr auto IsSurvTutorEnded = 0x984; // bool
		constexpr auto StepCounter = 0x988; // int32_t
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UInteractableButtonsComponentWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox_2 = 0x268; // UHorizontalBox*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Overlay_3 = 0x278; // UOverlay*
		constexpr auto Text = 0x280; // UTextBlock*
		constexpr auto WBP_KeyIcon = 0x288; // UWBP_KeyIcon_C*
		constexpr auto ButtonText = 0x290; // FString
		constexpr auto InteractableText = 0x2a0; // FText
		constexpr auto Actor = 0x2b8; // AActor*
		constexpr auto Surv = 0x2c0; // ASurvivorMasterBP_C*
		constexpr auto Ready? = 0x2c8; // bool
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UAstralTutorial_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Timer = 0xf0; // float
		constexpr auto Casted? = 0xf4; // bool
		constexpr auto postProcessMonochrome = 0x100; // FPostProcessSettings
		constexpr auto postProcessNormal = 0x650; // FPostProcessSettings
		constexpr auto TransitionTime = 0xba0; // float
		constexpr auto TurnOnDuration = 0xba4; // float
		constexpr auto TurnOffDuration = 0xba8; // float
		constexpr auto TurnOffAttackDuration = 0xbac; // float
		constexpr auto ErodeSubtractDef = 0xbb0; // float
		constexpr auto KillerDynMat1 = 0xbb8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat2 = 0xbc0; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat3 = 0xbc8; // UMaterialInstanceDynamic*
		constexpr auto Float1 = 0xbd0; // float
		constexpr auto TransitionOn = 0xbd4; // bool
		constexpr auto TransitionOff = 0xbd5; // bool
		constexpr auto KillerDynMatInvis = 0xbd8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMatInvisFPP = 0xbe0; // UMaterialInstanceDynamic*
		constexpr auto InvisRefractionTPP = 0xbe8; // float
		constexpr auto InvisRefractionFPP = 0xbec; // float
		constexpr auto InvisRefractionZero = 0xbf0; // float
		constexpr auto KillerDynMatFPP = 0xbf8; // UMaterialInstanceDynamic*
		constexpr auto IsAfterAttack = 0xc00; // bool
		constexpr auto KillerDynMat4 = 0xc08; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat5 = 0xc10; // UMaterialInstanceDynamic*
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto DepthPriorityGroup = 0x20c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x20d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x20e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x20f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x210; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x210; // char : 1
		constexpr auto bNeverDistanceCull = 0x210; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x210; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x211; // char : 1
		constexpr auto bMultiBodyOverlap = 0x211; // char : 1
		constexpr auto bTraceComplexOnMove = 0x211; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x211; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x211; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x211; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x211; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x211; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x212; // char : 1
		constexpr auto bVisibleInRayTracing = 0x212; // char : 1
		constexpr auto bRenderInMainPass = 0x212; // char : 1
		constexpr auto bRenderInDepthPass = 0x212; // char : 1
		constexpr auto bReceivesDecals = 0x212; // char : 1
		constexpr auto bOwnerNoSee = 0x212; // char : 1
		constexpr auto bOnlyOwnerSee = 0x212; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x212; // char : 1
		constexpr auto bUseAsOccluder = 0x213; // char : 1
		constexpr auto bSelectable = 0x213; // char : 1
		constexpr auto bForceMipStreaming = 0x213; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x213; // char : 1
		constexpr auto CastShadow = 0x213; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x213; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x213; // char : 1
		constexpr auto bCastDynamicShadow = 0x213; // char : 1
		constexpr auto bCastStaticShadow = 0x214; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x214; // char : 1
		constexpr auto bCastContactShadow = 0x214; // char : 1
		constexpr auto bSelfShadowOnly = 0x214; // char : 1
		constexpr auto bCastFarShadow = 0x214; // char : 1
		constexpr auto bCastInsetShadow = 0x214; // char : 1
		constexpr auto bCastCinematicShadow = 0x214; // char : 1
		constexpr auto bCastHiddenShadow = 0x214; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x215; // char : 1
		constexpr auto bLightAsIfStatic = 0x215; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x215; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x215; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x215; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x215; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x215; // char : 1
		constexpr auto bIgnoreRadialForce = 0x215; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x216; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x216; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x216; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x216; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x216; // char : 1
		constexpr auto bUseEditorCompositing = 0x216; // char : 1
		constexpr auto bRenderCustomDepth = 0x216; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x217; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x219; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x21c; // int32_t
		constexpr auto CustomPrimitiveData = 0x220; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x230; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x248; // int32_t
		constexpr auto VisibilityId = 0x24c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x250; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x260; // int8_t
		constexpr auto VirtualTextureCullMips = 0x261; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x262; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x263; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x268; // float
		constexpr auto BoundsScale = 0x274; // float
		constexpr auto MoveIgnoreActors = 0x288; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x298; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2b8; // FBodyInstance
		constexpr auto OnComponentHit = 0x410; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x411; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x412; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x413; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x414; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x416; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x417; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x418; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x419; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x41a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x41b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x41c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x41d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x438; // UPrimitiveComponent*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UVampireSpell1_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Radius = 0xf0; // float
		constexpr auto ActiveSpell1? = 0xf4; // bool
		constexpr auto CD? = 0xf5; // bool
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_ACrystalRune_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto P_RuneGlow = 0x228; // UParticleSystemComponent*
		constexpr auto PointLight = 0x230; // UPointLightComponent*
		constexpr auto Sphere = 0x238; // USphereComponent*
		constexpr auto Cube = 0x240; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto RotationSpeed = 0x250; // float
		constexpr auto Block? = 0x254; // bool
		constexpr auto EaseUp = 0x255; // bool
		constexpr auto EaseAlpha = 0x258; // float
		constexpr auto LocalZ = 0x25c; // float
		constexpr auto Totem = 0x260; // ItemType
		constexpr auto Ambience = 0x268; // FFMODEventInstance
		constexpr auto Event = 0x270; // UFMODEvent*
		constexpr auto DynMat = 0x278; // UMaterialInstanceDynamic*
		constexpr auto EaseSpeed = 0x280; // float
		constexpr auto UpPosOffset = 0x284; // float
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UBansheeFlyShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UGrannyLobbyABP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x480; // FAnimNode_StateMachine
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x468; // UGeometryCache*
		constexpr auto bRunning = 0x470; // bool
		constexpr auto bLooping = 0x471; // bool
		constexpr auto StartTimeOffset = 0x474; // float
		constexpr auto PlaybackSpeed = 0x478; // float
		constexpr auto NumTracks = 0x47c; // int32_t
		constexpr auto ElapsedTime = 0x480; // float
		constexpr auto Duration = 0x4b4; // float
		constexpr auto bManualTick = 0x4b8; // bool
	}

	namespace n_UEOSCoreFriendsRejectInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_UEOSCoreConnectQueryProductUserIdMappings {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UW_PathSeparator_C {
		constexpr auto TextBlock_55 = 0x260; // UTextBlock*
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UJumpShakeForProps_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_ABP_LootBox_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Lightshaft = 0x228; // UStaticMeshComponent*
		constexpr auto DropItemPosition = 0x230; // USceneComponent*
		constexpr auto CameraMain = 0x238; // USceneComponent*
		constexpr auto Camera = 0x240; // UCineCameraComponent*
		constexpr auto lootbox = 0x248; // USkeletalMeshComponent*
		constexpr auto LootBox_ParticleClosed = 0x250; // UParticleSystemComponent*
		constexpr auto LootBox_PointLight = 0x258; // UPointLightComponent*
		constexpr auto LootBox_ParticleOpen = 0x260; // UParticleSystemComponent*
		constexpr auto LootboxMain = 0x268; // USceneComponent*
		constexpr auto Scene = 0x270; // USceneComponent*
		constexpr auto DefaultSceneRoot = 0x278; // USceneComponent*
		constexpr auto Timeline_1_PrizeCardLocation_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x280; // FVector
		constexpr auto Timeline_1_RotationDropItem_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x28c; // FVector
		constexpr auto Timeline_1_LocationDropItem_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x298; // FVector
		constexpr auto Timeline_1_RotationCam_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x2a4; // FVector
		constexpr auto Timeline_1_LocationCam_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x2b0; // FVector
		constexpr auto Timeline_1_LighshaftAlpha_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x2bc; // float
		constexpr auto Timeline_1_FocalLength_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x2c0; // float
		constexpr auto Timeline_1__Direction_4FACAD3D4042E15CBDDF4B8566DA6543 = 0x2c4; // ETimelineDirection
		constexpr auto Timeline_2 = 0x2c8; // UTimelineComponent*
		constexpr auto Timeline_0_Lootbox_F4C3F56048B718ADAD8FF5999B815D02 = 0x2d0; // FVector
		constexpr auto Timeline_0_Rotation_F4C3F56048B718ADAD8FF5999B815D02 = 0x2dc; // FVector
		constexpr auto Timeline_0_Location_F4C3F56048B718ADAD8FF5999B815D02 = 0x2e8; // FVector
		constexpr auto Timeline_0_CameraShake_F4C3F56048B718ADAD8FF5999B815D02 = 0x2f4; // float
		constexpr auto Timeline_0__Direction_F4C3F56048B718ADAD8FF5999B815D02 = 0x2f8; // ETimelineDirection
		constexpr auto Timeline_1 = 0x300; // UTimelineComponent*
		constexpr auto DataTable = 0x308; // TSoftObjectPtr<UDataTable>
		constexpr auto RareIDs = 0x330; // TArray<int32_t>
		constexpr auto EpicIDs = 0x340; // TArray<int32_t>
		constexpr auto LegendaryIDs = 0x350; // TArray<int32_t>
		constexpr auto CommonIDs = 0x360; // TArray<int32_t>
		constexpr auto DefaultCommonChance = 0x370; // float
		constexpr auto DefaultRareChance = 0x374; // float
		constexpr auto DefaultEpicChance = 0x378; // float
		constexpr auto DefaultLegendaryChance = 0x37c; // float
		constexpr auto randomnumber = 0x380; // int32_t
		constexpr auto HeightenedLootBox = 0x388; // TArray<int32_t>
		constexpr auto HeightenedCommonChance = 0x398; // float
		constexpr auto HeightenedRareChance = 0x39c; // float
		constexpr auto HeightenedEpicChance = 0x3a0; // float
		constexpr auto HeightenedLegendaryChance = 0x3a4; // float
		constexpr auto LoweredCommonChance = 0x3a8; // float
		constexpr auto LoweredRareChance = 0x3ac; // float
		constexpr auto LoweredEpicChance = 0x3b0; // float
		constexpr auto LoweredLegendaryChance = 0x3b4; // float
		constexpr auto IsLegendary = 0x3b8; // bool
		constexpr auto IsEpic = 0x3b9; // bool
		constexpr auto CommonChance = 0x3bc; // float
		constexpr auto RareChance = 0x3c0; // float
		constexpr auto EpicChance = 0x3c4; // float
		constexpr auto LegendaryChance = 0x3c8; // float
		constexpr auto ItemsCountInLootBox = 0x3cc; // int32_t
		constexpr auto ItemsIDFromLootBox = 0x3d0; // TArray<int32_t>
		constexpr auto DuplicateCounter = 0x3e0; // int32_t
		constexpr auto DuplicateCounter_UI = 0x3e4; // int32_t
		constexpr auto ScrollChancePerItem = 0x3e8; // TArray<int32_t>
		constexpr auto CurrentLoot = 0x3f8; // FS_LootBoxSkin
		constexpr auto Start? = 0x428; // bool
		constexpr auto SpawnedItem = 0x430; // ABP_PrizeActor_C*
		constexpr auto Object = 0x438; // UObject*
		constexpr auto IsDuplicate = 0x440; // bool
		constexpr auto IsOpened = 0x441; // bool
		constexpr auto LightshaftDynMat = 0x448; // UMaterialInstanceDynamic*
		constexpr auto ParticleOpenDynMat = 0x450; // UMaterialInstanceDynamic*
		constexpr auto ItemFromLootBox = 0x458; // int32_t
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UBPA_RHG_Lobby_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x2f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x3a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x3d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_40 = 0x450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_39 = 0x500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_20 = 0x530; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x5e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_38 = 0x688; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x6b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_37 = 0x738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_19 = 0x768; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0x8c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x8f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_35 = 0x970; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_18 = 0x9a0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xa50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0xa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0xaf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0xb28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_33 = 0xba8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_17 = 0xbd8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_14 = 0xc88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0xcb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_32 = 0xd30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0xd60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0xde0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_16 = 0xe10; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0xec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_30 = 0xf40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0xf70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0xff0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_15 = 0x1020; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x10d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x1170; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1220; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x1248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_28 = 0x12c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x12f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0x1378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_14 = 0x13a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0x1500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_25 = 0x15b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_13 = 0x15e0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x16b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0x1738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1768; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_23 = 0x17e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_12 = 0x1818; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x18c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x18f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x1970; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x19a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x1a20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_11 = 0x1a50; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1b00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1b28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x1ba8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1bd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x1c58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_10 = 0x1c88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1d38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x1db8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1de8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x1e68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0x1e98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1f48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1fe8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x2010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x2090; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x20c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x2140; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0x2170; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2220; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x22c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x22e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x2368; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x2418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0x2448; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x24f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x25c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x2640; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x26f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x2720; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x27d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2870; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x2918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x29c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x29f8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2aa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x2bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x2ca0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2cd0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2d80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2e20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2e48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x2ec8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2f78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x2fa8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3058; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x30f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x3198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x31c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x3240; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3270; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x32f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3320; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult = 0x33d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x33f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x34a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3528; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3558; // FAnimNode_StateMachine
		constexpr auto survChar = 0x3608; // SurvChars
		constexpr auto Reset? = 0x3609; // bool
		constexpr auto AmericanFootball? = 0x360a; // bool
		constexpr auto IsSunshinechris = 0x360b; // bool
		constexpr auto IsStreetIrArtist = 0x360c; // bool
		constexpr auto IsBaseball = 0x360d; // bool
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4d0; // float
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_AGM_PropHunt_Tutorial_C {
		constexpr auto UberGraphFrame = 0x370; // FPointerToUberGraphFrame
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UEOSCoreLobbyRejectInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UCheckInteractableKiller_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Killer = 0xb8; // AKillerMasterBP_C*
		constexpr auto InteractableActor = 0xc0; // AActor*
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UATPCCameraModeScript_ChangeMovementSpeed {
		constexpr auto NewMaxMovementSpeed = 0x40; // float
		constexpr auto bRestoreOldMovementSpeedOnExitCameraMode = 0x44; // bool
		constexpr auto OldMaxMovementSpeed = 0x48; // float
	}

	namespace n_UEOSCoreUserInfoByExternalAccount {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UW_PublicServers_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_2 = 0x270; // UImage*
		constexpr auto Image_3 = 0x278; // UImage*
		constexpr auto Image_4 = 0x280; // UImage*
		constexpr auto Image_5 = 0x288; // UImage*
		constexpr auto Image_6 = 0x290; // UImage*
		constexpr auto Image_7 = 0x298; // UImage*
		constexpr auto Image_8 = 0x2a0; // UImage*
		constexpr auto Image_9 = 0x2a8; // UImage*
		constexpr auto Image_10 = 0x2b0; // UImage*
		constexpr auto Image_11 = 0x2b8; // UImage*
		constexpr auto Image_12 = 0x2c0; // UImage*
		constexpr auto Image_13 = 0x2c8; // UImage*
		constexpr auto Image_14 = 0x2d0; // UImage*
		constexpr auto Image_15 = 0x2d8; // UImage*
		constexpr auto Image_16 = 0x2e0; // UImage*
		constexpr auto Image_17 = 0x2e8; // UImage*
		constexpr auto Image_166 = 0x2f0; // UImage*
		constexpr auto Image_BG = 0x2f8; // UImage*
		constexpr auto Image_ScrollBG = 0x300; // UImage*
		constexpr auto Image_Scrubber = 0x308; // UImage*
		constexpr auto ListView_69 = 0x310; // UListView*
		constexpr auto MapButton = 0x318; // UButton*
		constexpr auto ModeButton_2 = 0x320; // UButton*
		constexpr auto PingButton = 0x328; // UButton*
		constexpr auto PlayersButton = 0x330; // UButton*
		constexpr auto SB_ScrollRail = 0x338; // USizeBox*
		constexpr auto ScrollBox_79 = 0x340; // UScrollBox*
		constexpr auto ServerNameButton = 0x348; // UButton*
		constexpr auto StatusButton = 0x350; // UButton*
		constexpr auto Text = 0x358; // UTextBlock*
		constexpr auto TextBlock = 0x360; // UTextBlock*
		constexpr auto TextBlock_39 = 0x368; // UTextBlock*
		constexpr auto TextBlock_42 = 0x370; // UTextBlock*
		constexpr auto TextBlock_60 = 0x378; // UTextBlock*
		constexpr auto TextBlock_155 = 0x380; // UTextBlock*
		constexpr auto WidgetSwitcher = 0x388; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_2 = 0x390; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_3 = 0x398; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_4 = 0x3a0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_5 = 0x3a8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_106 = 0x3b0; // UWidgetSwitcher*
		constexpr auto SelectedRow = 0x3b8; // bool
		constexpr auto PrevItem = 0x3c0; // UObject*
		constexpr auto Sessions = 0x3c8; // TArray<UBP_SessionData_C*>
		constexpr auto SortedSessions = 0x3d8; // TArray<UBP_SessionData_C*>
		constexpr auto SortState = 0x3e8; // TMap<FString, bool>
		constexpr auto In Color And Opacity Specified Color = 0x438; // FLinearColor
		constexpr auto CurrentTimeAnimation = 0x448; // float
		constexpr auto CountFakeElement = 0x44c; // int32_t
		constexpr auto FakeElements = 0x450; // TArray<UW_ServerEntryV3_C*>
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_AItemsBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Item = 0x228; // UStaticMeshComponent*
		constexpr auto ItemPlace = 0x230; // USceneComponent*
		constexpr auto ItemCapsule = 0x238; // UCapsuleComponent*
		constexpr auto PointLight = 0x240; // UPointLightComponent*
		constexpr auto FmodAudio = 0x248; // UFMODAudioComponent*
		constexpr auto Scene = 0x250; // USceneComponent*
		constexpr auto Capsule = 0x258; // UCapsuleComponent*
		constexpr auto Timeline_0_NewTrack_0_CAD16150485926BBF07399BEB76406FB = 0x260; // float
		constexpr auto Timeline_0__Direction_CAD16150485926BBF07399BEB76406FB = 0x264; // ETimelineDirection
		constexpr auto Timeline_1 = 0x268; // UTimelineComponent*
		constexpr auto ItemVar = 0x270; // FItemStructure
		constexpr auto EaseAlpha = 0x2a0; // float
		constexpr auto LocalZ = 0x2a4; // float
		constexpr auto DefaultLightIntensity = 0x2a8; // float
		constexpr auto EaseUp = 0x2ac; // bool
		constexpr auto ItemSpawnIndex = 0x2b0; // int32_t
		constexpr auto Block? = 0x2b4; // bool
		constexpr auto TempFloat = 0x2b8; // float
		constexpr auto TempInt = 0x2bc; // int32_t
		constexpr auto Temp2Int = 0x2c0; // int32_t
		constexpr auto ItemsName = 0x2c8; // TArray<FName>
		constexpr auto Random = 0x2d8; // int32_t
		constexpr auto RollCount = 0x2dc; // float
		constexpr auto LootboxSpawnedItem? = 0x2e0; // bool
		constexpr auto LootboxShopActor = 0x2e8; // ALootboxShop_C*
		constexpr auto LootboxActor = 0x2f0; // AActor*
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_UEOSCoreConnectLogin {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_USurvivalSkillCheckWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto StartSkillcheck_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Warning_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Failed_Anim = 0x278; // UWidgetAnimation*
		constexpr auto Successed_Anim = 0x280; // UWidgetAnimation*
		constexpr auto PressSpace_Anim = 0x288; // UWidgetAnimation*
		constexpr auto CanvasPanel_5 = 0x290; // UCanvasPanel*
		constexpr auto Image = 0x298; // UImage*
		constexpr auto Image_222 = 0x2a0; // UImage*
		constexpr auto Image_355 = 0x2a8; // UImage*
		constexpr auto SB_Warning = 0x2b0; // USizeBox*
		constexpr auto SkillCheckLine = 0x2b8; // UImage*
		constexpr auto SkillCheckLine__Level1 = 0x2c0; // UImage*
		constexpr auto SkillCheckLine__Level2 = 0x2c8; // UImage*
		constexpr auto SkillCheckLine__Level3 = 0x2d0; // UImage*
		constexpr auto SkillCheckLine__Level4 = 0x2d8; // UImage*
		constexpr auto SkillCheckLine_Phantom = 0x2e0; // UImage*
		constexpr auto SkillCheckLineBox = 0x2e8; // USizeBox*
		constexpr auto SkillCheckLineBox_2 = 0x2f0; // USizeBox*
		constexpr auto SkillCheckZone = 0x2f8; // UImage*
		constexpr auto SkillCheckZoneBox = 0x300; // USizeBox*
		constexpr auto TextBlock_85 = 0x308; // UTextBlock*
		constexpr auto Angle = 0x310; // float
		constexpr auto Time = 0x314; // float
		constexpr auto Start? = 0x318; // bool
		constexpr auto StartGreatZone = 0x31c; // float
		constexpr auto StartNormalZone = 0x320; // float
		constexpr auto EndZone = 0x324; // float
		constexpr auto Failed? = 0x328; // bool
		constexpr auto Success? = 0x329; // bool
		constexpr auto GreatSuccess? = 0x32a; // bool
		constexpr auto Active? = 0x32b; // bool
		constexpr auto CurrentAngle = 0x32c; // float
		constexpr auto Pressed? = 0x330; // bool
		constexpr auto Difficulty = 0x334; // float
		constexpr auto NormalDifficulty = 0x338; // float
		constexpr auto HardDifficulty = 0x33c; // float
		constexpr auto Actor = 0x340; // AActor*
		constexpr auto Player = 0x348; // ASurvivorMasterBP_C*
		constexpr auto Level1 = 0x350; // float
		constexpr auto Level2 = 0x354; // float
		constexpr auto Level3 = 0x358; // float
		constexpr auto Level4 = 0x35c; // float
		constexpr auto StartZone = 0x360; // float
		constexpr auto Level1? = 0x364; // bool
		constexpr auto Level2? = 0x365; // bool
		constexpr auto Level3? = 0x366; // bool
		constexpr auto Level4? = 0x367; // bool
		constexpr auto LevelsClipZone = 0x368; // float
		constexpr auto Interrupted = 0x36c; // bool
		constexpr auto Warning? = 0x36d; // bool
	}

	namespace n_UCrossHairWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HitAnim = 0x268; // UWidgetAnimation*
		constexpr auto ToBigCross = 0x270; // UWidgetAnimation*
		constexpr auto CanvasPanel_1 = 0x278; // UCanvasPanel*
		constexpr auto CrossHair = 0x280; // UImage*
		constexpr auto CrossHair_3 = 0x288; // UImage*
		constexpr auto CrossHair_4 = 0x290; // UImage*
		constexpr auto CrossHair_5 = 0x298; // UImage*
		constexpr auto CrossHair_6 = 0x2a0; // UImage*
		constexpr auto Crosshair_Hit = 0x2a8; // UImage*
		constexpr auto Crosshair_Hit_2 = 0x2b0; // UImage*
		constexpr auto Crosshair_Hit_3 = 0x2b8; // UImage*
		constexpr auto Crosshair_Hit_4 = 0x2c0; // UImage*
		constexpr auto Crosshair_Hit_5 = 0x2c8; // UImage*
		constexpr auto Image_80 = 0x2d0; // UImage*
		constexpr auto Hitted? = 0x2d8; // bool
		constexpr auto Time = 0x2dc; // float
		constexpr auto KillerRef = 0x2e0; // AKillerMasterBP_C*
		constexpr auto Time_Attak = 0x2e8; // float
		constexpr auto Attack? = 0x2ec; // bool
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UGraffityMaker_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Busy = 0xb8; // bool
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UFlashWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto FlashImage = 0x270; // UImage*
		constexpr auto SceneTexture = 0x278; // UImage*
	}

	namespace n_UO_AWS_Worker_C {
		constexpr auto AuthRequest = 0x28; // UVaRestRequestJSON*
		constexpr auto OnAuthFail = 0x30; // FMulticastInlineDelegate
		constexpr auto OnAuthComplete = 0x40; // FMulticastInlineDelegate
		constexpr auto APIKeyDev = 0x50; // FString
		constexpr auto APIKeyProd = 0x60; // FString
		constexpr auto AuthURL = 0x70; // FString
		constexpr auto ValidateRequest = 0x80; // UVaRestRequestJSON*
		constexpr auto ValidateSteamSessionURL = 0x88; // FString
		constexpr auto OnValidateFail = 0x98; // FMulticastInlineDelegate
		constexpr auto OnValidateComplete = 0xa8; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_USkillPoints_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BG = 0x268; // UImage*
		constexpr auto Description = 0x270; // UTextBlock*
		constexpr auto Image = 0x278; // UImage*
		constexpr auto Image_397 = 0x280; // UImage*
		constexpr auto ProgressBar_164 = 0x288; // UProgressBar*
		constexpr auto Skill1BG = 0x290; // UImage*
		constexpr auto Skill1Image = 0x298; // UImage*
		constexpr auto Skill2BG = 0x2a0; // UImage*
		constexpr auto Skill2CDBG = 0x2a8; // UImage*
		constexpr auto Skill2CDText = 0x2b0; // UTextBlock*
		constexpr auto Skill2Image = 0x2b8; // UImage*
		constexpr auto Skill3BG = 0x2c0; // UImage*
		constexpr auto Skill3Image = 0x2c8; // UImage*
		constexpr auto TextBlock_2 = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_75 = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_87 = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_155 = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_251 = 0x2f0; // UTextBlock*
		constexpr auto Title = 0x2f8; // UTextBlock*
		constexpr auto WidgetSwitcher_2 = 0x300; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_93 = 0x308; // UWidgetSwitcher*
		constexpr auto Surv = 0x310; // ASurvivorMasterBP_C*
		constexpr auto Killer = 0x318; // AKillerMasterBP_C*
		constexpr auto Open? = 0x320; // bool
		constexpr auto Skills = 0x328; // TArray<FString>
		constexpr auto SelectedSkill = 0x338; // int32_t
		constexpr auto Start? = 0x33c; // bool
		constexpr auto SkillsPassive? = 0x340; // TArray<bool>
		constexpr auto PrevLevel = 0x350; // int32_t
		constexpr auto LevelUp? = 0x354; // bool
	}

	namespace n_UEOSCoreTitleStorageQueryFileList {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UBP_BanManager_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto BanDateTime = 0xb8; // FString
		constexpr auto BanMinutes = 0xc8; // int32_t
		constexpr auto BanSlot = 0xd0; // FString
		constexpr auto SG_Ban = 0xe0; // USG_Ban_C*
	}

	namespace n_UEOSCoreAuthVerifyUserAuth {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UAlarmShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UDoppelKillerMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UWBP_SocialUI_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowHide_DetailedFriendList = 0x268; // UWidgetAnimation*
		constexpr auto ShowHide_MiniFriendList = 0x270; // UWidgetAnimation*
		constexpr auto Button_Hide = 0x278; // UButton*
		constexpr auto WBP_DetailedFriendList = 0x280; // UWBP_DetailedFriendList_C*
		constexpr auto WBP_LeaveTeamDialog_359 = 0x288; // UWBP_LeaveTeamDialog_C*
		constexpr auto WBP_MiniFriendList = 0x290; // UWBP_MiniFriendList_C*
		constexpr auto OnShowDetailed = 0x298; // FMulticastInlineDelegate
		constexpr auto IsFriendListVisible = 0x2a8; // bool
		constexpr auto OnHideDetailed = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UVaRestRequestJSON {
		constexpr auto OnRequestComplete = 0x28; // FMulticastInlineDelegate
		constexpr auto OnRequestFail = 0x38; // FMulticastInlineDelegate
		constexpr auto ResponseSize = 0x88; // int32_t
		constexpr auto ResponseContent = 0x90; // FString
		constexpr auto bIsValidJsonResponse = 0xa0; // bool
		constexpr auto RequestJsonObj = 0xb0; // UVaRestJsonObject*
		constexpr auto ResponseJsonObj = 0xe8; // UVaRestJsonObject*
		constexpr auto ResponseJsonValue = 0xf0; // UVaRestJsonValue*
	}

	namespace n_AGlueOfJarItemsBP_Rare_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_ABP_LootBoxOriginal_C {
		constexpr auto UberGraphFrame = 0x460; // FPointerToUberGraphFrame
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_ASurv5_C {
		constexpr auto UberGraphFrame = 0x1830; // FPointerToUberGraphFrame
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UWBP_FriendEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Throbber_Anim = 0x268; // UWidgetAnimation*
		constexpr auto LeftLobby_Hovered_Anim = 0x270; // UWidgetAnimation*
		constexpr auto LeftLobby_Anim = 0x278; // UWidgetAnimation*
		constexpr auto RejectedHovered_Anim = 0x280; // UWidgetAnimation*
		constexpr auto Rejected_Anim = 0x288; // UWidgetAnimation*
		constexpr auto StopWaiting_Anim_Delayed = 0x290; // UWidgetAnimation*
		constexpr auto StopWaiting_Anim = 0x298; // UWidgetAnimation*
		constexpr auto Hover_Anim_Waiting = 0x2a0; // UWidgetAnimation*
		constexpr auto Hover_Anim = 0x2a8; // UWidgetAnimation*
		constexpr auto Click_Anim = 0x2b0; // UWidgetAnimation*
		constexpr auto Button_FriendList = 0x2b8; // UButton*
		constexpr auto Button_FriendList_2 = 0x2c0; // UButton*
		constexpr auto Image_BG = 0x2c8; // UImage*
		constexpr auto Image_ButtonIcon = 0x2d0; // UImage*
		constexpr auto Image_FriendHover = 0x2d8; // UImage*
		constexpr auto Image_TeamMember = 0x2e0; // UImage*
		constexpr auto Image_Throbber = 0x2e8; // UImage*
		constexpr auto RetainerBox_1 = 0x2f0; // URetainerBox*
		constexpr auto ScrollBox_1 = 0x2f8; // UScrollBox*
		constexpr auto Text_Nickname = 0x300; // UTextBlock*
		constexpr auto WBP_MiniFriendEntry_ForList = 0x308; // UWBP_MiniFriendEntry_ForList_C*
		constexpr auto SteamStruct = 0x310; // FSteamFriend
		constexpr auto IsSendingRequest = 0x338; // bool
		constexpr auto IsUnhovered = 0x339; // bool
		constexpr auto IsDelayed = 0x33a; // bool
		constexpr auto onAfterDelay = 0x340; // FMulticastInlineDelegate
		constexpr auto IsForwardDirection = 0x350; // bool
		constexpr auto AnimTimer = 0x358; // FTimerHandle
		constexpr auto IsInvitationAccepted = 0x360; // bool
		constexpr auto WaitingTimer = 0x368; // FTimerHandle
	}

	namespace n_UFartTimer_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto Image_168 = 0x270; // UImage*
		constexpr auto Image_268 = 0x278; // UImage*
		constexpr auto Image_Cooldown = 0x280; // UImage*
		constexpr auto Overlay_Main = 0x288; // UOverlay*
		constexpr auto TextBlock = 0x290; // UTextBlock*
		constexpr auto TextBlock_TIMER = 0x298; // UTextBlock*
		constexpr auto Seconds = 0x2a0; // int32_t
		constexpr auto Time = 0x2a4; // float
		constexpr auto Seconds_Max = 0x2a8; // int32_t
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UDoppelLobby_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer = 0x458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x4d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x508; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x5b8; // FAnimNode_BlendListByBool
		constexpr auto Reset? = 0x658; // bool
	}

	namespace n_UEOSCoreStatsIngestStat {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x440; // int32_t
		constexpr auto Hand = 0x444; // EControllerHand
		constexpr auto MotionSource = 0x448; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x450; // char : 1
		constexpr auto CurrentTrackingStatus = 0x454; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x455; // bool
		constexpr auto DisplayModelSource = 0x458; // FName
		constexpr auto CustomDisplayMesh = 0x460; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x468; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4e0; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UWBP_MiniFriendEntry_ForList_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_Avatar = 0x268; // UImage*
		constexpr auto Image_BG = 0x270; // UImage*
		constexpr auto RetainerBox_52 = 0x278; // URetainerBox*
		constexpr auto AvatarSize = 0x280; // FVector2D
		constexpr auto SteamId = 0x288; // FString
		constexpr auto Material = 0x298; // UMaterialInstanceDynamic*
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_UWBP_Cursor_Default_C {
		constexpr auto Image_60 = 0x260; // UImage*
	}

	namespace n_UAmmoKillerWBP_C {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto TextBlock_3 = 0x268; // UTextBlock*
		constexpr auto Ammo = 0x270; // int32_t
		constexpr auto Eyes = 0x274; // int32_t
	}

	namespace n_UEOSCorePresenceSetPresence {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_ABP_AudioActor_SoundSpawner_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto SoundToSpawn = 0x238; // USoundBase*
		constexpr auto NumberOfSpawns = 0x240; // int32_t
		constexpr auto MinTimer = 0x244; // float
		constexpr auto MaxTimer = 0x248; // float
		constexpr auto MinSpawns = 0x24c; // int32_t
		constexpr auto MaxSpawns = 0x250; // int32_t
		constexpr auto bAutoStart = 0x254; // bool
		constexpr auto bRepeat = 0x255; // bool
		constexpr auto VolumeScale = 0x258; // float
		constexpr auto PitchScale = 0x25c; // float
		constexpr auto SpawnCounter = 0x260; // int32_t
		constexpr auto MinStepDuration = 0x264; // float
		constexpr auto MaxStepDuration = 0x268; // float
		constexpr auto MinVolumeRange = 0x26c; // float
		constexpr auto MaxVolumeRange = 0x270; // float
		constexpr auto MinPitchRange = 0x274; // float
		constexpr auto MaxPitchRange = 0x278; // float
		constexpr auto AttenuationSettings = 0x280; // USoundAttenuation*
		constexpr auto ConcurrencySettings = 0x288; // USoundConcurrency*
		constexpr auto bIncludeHeight = 0x290; // bool
		constexpr auto SpawnRadius = 0x294; // float
		constexpr auto bContinueSpawner = 0x298; // bool
		constexpr auto PhraseLocation = 0x29c; // FVector
		constexpr auto bDelayFirstTime = 0x2a8; // bool
	}

	namespace n_A3DLobbyMesh_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto HammerIntro = 0x228; // USkeletalMeshComponent*
		constexpr auto Surv_RedGirls = 0x230; // USkeletalMeshComponent*
		constexpr auto Surv_Mable = 0x238; // USkeletalMeshComponent*
		constexpr auto Surv_Chris = 0x240; // USkeletalMeshComponent*
		constexpr auto Surv_Taiga = 0x248; // USkeletalMeshComponent*
		constexpr auto SceneCaptureComponent2DMasked = 0x250; // USceneCaptureComponent2D*
		constexpr auto RectLight1 = 0x258; // URectLightComponent*
		constexpr auto RectLight = 0x260; // URectLightComponent*
		constexpr auto Banshee = 0x268; // USkeletalMeshComponent*
		constexpr auto Niagara = 0x270; // UNiagaraComponent*
		constexpr auto knife = 0x278; // USkeletalMeshComponent*
		constexpr auto Doppelganger = 0x280; // USkeletalMeshComponent*
		constexpr auto SkeletalMesh = 0x288; // USkeletalMeshComponent*
		constexpr auto PointLight = 0x290; // UPointLightComponent*
		constexpr auto Surv_Isaac = 0x298; // USkeletalMeshComponent*
		constexpr auto Keymaster = 0x2a0; // USkeletalMeshComponent*
		constexpr auto Granny = 0x2a8; // USkeletalMeshComponent*
		constexpr auto SpringArm = 0x2b0; // USpringArmComponent*
		constexpr auto SceneCaptureComponent2D = 0x2b8; // USceneCaptureComponent2D*
		constexpr auto DefaultSceneRoot = 0x2c0; // USceneComponent*
		constexpr auto Killer? = 0x2c8; // bool
		constexpr auto KillerType = 0x2c9; // KillerType
		constexpr auto SurvSkin = 0x2cc; // int32_t
		constexpr auto survChar = 0x2d0; // SurvChars
		constexpr auto TrueSurvSkin = 0x2d1; // SurvChars
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UCheckInteractable_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Survivor = 0xb8; // ASurvivorMasterBP_C*
		constexpr auto InteractableActor = 0xc0; // AActor*
		constexpr auto Alarm? = 0xc8; // bool
		constexpr auto Chair? = 0xc9; // bool
		constexpr auto Exit? = 0xca; // bool
		constexpr auto Lootbox? = 0xcb; // bool
		constexpr auto Survivor? = 0xcc; // bool
		constexpr auto FindedSurvivor? = 0xcd; // bool
		constexpr auto LootboxCanOpen? = 0xce; // bool
		constexpr auto LootBoxs = 0xd0; // TArray<ALootBox_C*>
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UMainchar1_AnimBP_FPP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x4b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x4d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x500; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x528; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x5a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x5c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x5f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x618; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x640; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x668; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x6e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x768; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x7e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x8e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x9e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0xa68; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_9 = 0xb18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0xb48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0xbc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0xbf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0xc78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0xca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0xd28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0xd58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0xe40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0xf28; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1010; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x10f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x11e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x12c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x13b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1460; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1548; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1578; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1660; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0x1690; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x1730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x17b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x1830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x18b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x1930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x19b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x1a30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1ab0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x1b30; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1be0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1c60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x1c90; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1d30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1fb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x2030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x20b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x2130; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x21e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2260; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByInt = 0x2290; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x23b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x24b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x25b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x26b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x2730; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x27e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x2860; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2890; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x2940; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2970; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x29f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x2a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x2be8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x2d40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x2d68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2e90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2fb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x3050; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x30f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3170; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x3210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3290; // FAnimNode_BlendListByBool
		constexpr auto IsOwner? = 0x3330; // bool
		constexpr auto IsInAir? = 0x3331; // bool
		constexpr auto Speed = 0x3334; // float
		constexpr auto Direction = 0x3338; // float
		constexpr auto Crawl? = 0x333c; // bool
		constexpr auto FPP? = 0x333d; // bool
		constexpr auto OnChair? = 0x333e; // bool
		constexpr auto Grapple? = 0x333f; // bool
		constexpr auto EndJump? = 0x3340; // bool
		constexpr auto HasItem = 0x3344; // float
		constexpr auto ItemType = 0x3348; // ItemType
		constexpr auto UseFlashlight? = 0x3349; // bool
		constexpr auto SurvStateEnum = 0x334a; // SurvStateEnum
		constexpr auto MovementType = 0x334b; // MovementTypeEnum
		constexpr auto ItemTake? = 0x334c; // bool
		constexpr auto ItemSwap? = 0x334d; // bool
		constexpr auto NewVar_1 = 0x3350; // FVector
		constexpr auto XYSpeed = 0x335c; // float
		constexpr auto Surv Char = 0x3360; // SurvChars
		constexpr auto Energy Drnk Anim B = 0x3361; // bool
		constexpr auto KBook Anim B = 0x3362; // bool
		constexpr auto Painkiller = 0x3363; // bool
		constexpr auto ThrowGrenade = 0x3364; // bool
		constexpr auto TakeRune = 0x3365; // bool
		constexpr auto Is Tool Activated = 0x3366; // bool
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UWB_Spectator_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
		constexpr auto HorizontalBox_call = 0x270; // UHorizontalBox*
		constexpr auto SafeZone_265 = 0x278; // USafeZone*
		constexpr auto SafeZone_428 = 0x280; // USafeZone*
		constexpr auto Text_NameCurrentPLR = 0x288; // UTextBlock*
		constexpr auto TextBlock_8 = 0x290; // UTextBlock*
		constexpr auto WBP_KeyIcon = 0x298; // UWBP_KeyIcon_C*
		constexpr auto WBP_KeyIcon_148 = 0x2a0; // UWBP_KeyIcon_C*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_ABulletBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x228; // UFMODAudioComponent*
		constexpr auto PointLight = 0x230; // UPointLightComponent*
		constexpr auto ParticleSystem = 0x238; // UParticleSystemComponent*
		constexpr auto Cube = 0x240; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto ImpactFlashTime_NewTrack_0_16CAF47F417A4B2BA11A899404422494 = 0x250; // float
		constexpr auto ImpactFlashTime__Direction_16CAF47F417A4B2BA11A899404422494 = 0x254; // ETimelineDirection
		constexpr auto ImpactFlashTime = 0x258; // UTimelineComponent*
		constexpr auto Hited? = 0x260; // bool
		constexpr auto KillerRef = 0x268; // AKillerMasterBP_C*
		constexpr auto Time = 0x270; // float
		constexpr auto SoundExplo = 0x278; // UAudioComponent*
		constexpr auto NewVar_1 = 0x280; // FFMODEventInstance
		constexpr auto NewVar_2 = 0x288; // bool
		constexpr auto Color1 = 0x28c; // FLinearColor
		constexpr auto Color2 = 0x29c; // FLinearColor
		constexpr auto Damage = 0x2ac; // int32_t
		constexpr auto Radius = 0x2b0; // float
		constexpr auto LinearVelocity = 0x2b4; // FVector
		constexpr auto v3b = 0x2c0; // bool
		constexpr auto ImpactParticle = 0x2c8; // UParticleSystem*
		constexpr auto LightDefIntensity = 0x2d0; // float
	}

	namespace n_UW_VictoryScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto NewVictoryAnimation = 0x268; // UWidgetAnimation*
		constexpr auto Fade = 0x270; // UWidgetAnimation*
		constexpr auto HorizontalBox_46 = 0x278; // UHorizontalBox*
		constexpr auto Image_102 = 0x280; // UImage*
		constexpr auto Image_114 = 0x288; // UImage*
		constexpr auto Image_254 = 0x290; // UImage*
		constexpr auto SizeBox_3 = 0x298; // USizeBox*
		constexpr auto DefeatText = 0x2a0; // FText
		constexpr auto VictoryText = 0x2b8; // FText
	}

	namespace n_AFlashCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_AGranny_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto FPPSMInvis = 0x1320; // USkeletalMeshComponent*
		constexpr auto MeshInvis = 0x1328; // USkeletalMeshComponent*
		constexpr auto Astral = 0x1330; // UAstral_C*
		constexpr auto SkeletalMesh = 0x1338; // USkeletalMeshComponent*
		constexpr auto MineSpell = 0x1340; // UMineSpell_C*
		constexpr auto FMODAudio2_1 = 0x1348; // UFMODAudioComponent*
		constexpr auto KnifeShoot = 0x1350; // UKnifeShoot_C*
		constexpr auto GrannyAstral = 0x1358; // UGrannyAstral_C*
		constexpr auto Timeline_6_0_NewTrack_0_8F17A98B4A22CE5C14557F88A7B533A0 = 0x1360; // float
		constexpr auto Timeline_6_0__Direction_8F17A98B4A22CE5C14557F88A7B533A0 = 0x1364; // ETimelineDirection
		constexpr auto Timeline_6_1 = 0x1368; // UTimelineComponent*
		constexpr auto AstralTimeline_Alpha_5454405F4AD75BD4D8210CA26B2BE808 = 0x1370; // float
		constexpr auto AstralTimeline__Direction_5454405F4AD75BD4D8210CA26B2BE808 = 0x1374; // ETimelineDirection
		constexpr auto AstralTimeline = 0x1378; // UTimelineComponent*
		constexpr auto RMB = 0x1380; // bool
		constexpr auto AstralBuild = 0x1381; // bool
		constexpr auto Move? = 0x1382; // bool
		constexpr auto AstralMaterial = 0x1388; // UMaterialInstanceDynamic*
		constexpr auto bKSS = 0x1390; // bool
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UPingShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_APC_PropHunt_C {
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto AC_BattlEye_Client = 0x578; // UAC_BattlEye_Client_C*
		constexpr auto BP_BanManager = 0x580; // UBP_BanManager_C*
		constexpr auto PlayFabPlayerID = 0x588; // FString
		constexpr auto isKiller = 0x598; // bool
		constexpr auto LobbyPawn = 0x5a0; // APawn*
		constexpr auto Char = 0x5a8; // APawn*
		constexpr auto DevLabOpened = 0x5b0; // bool
		constexpr auto IsJustSpawnedPawn = 0x5b1; // bool
		constexpr auto LobbySlotName = 0x5b8; // FString
		constexpr auto SpectatorRef = 0x5c8; // APawn*
		constexpr auto Nickname = 0x5d0; // FString
		constexpr auto IsGranny = 0x5e0; // bool
		constexpr auto SenderText = 0x5e8; // FText
		constexpr auto SenderName = 0x600; // FText
		constexpr auto TypeMessage = 0x618; // int32_t
		constexpr auto NextSessionID = 0x620; // FString
		constexpr auto SessionIsFound = 0x630; // bool
		constexpr auto NextSession = 0x638; // FBlueprintSessionResult
		constexpr auto ImNextHost = 0x740; // bool
		constexpr auto SurvClass = 0x741; // SurvClass
		constexpr auto Avatar = 0x748; // UTexture2D*
		constexpr auto BlockUI? = 0x750; // bool
		constexpr auto KillerMessage? = 0x751; // bool
		constexpr auto KillerType = 0x752; // KillerType
		constexpr auto SurvSkills = 0x753; // SurvSkills
		constexpr auto NewVar_1 = 0x758; // TArray<ADoppelganger_C*>
		constexpr auto EndGameActor = 0x768; // AEndGameBP_C*
		constexpr auto EndGameMesh = 0x770; // AEndGamePlayerMesh_C*
		constexpr auto Spectator? = 0x778; // bool
		constexpr auto Escape? = 0x779; // bool
		constexpr auto SurvWin? = 0x77a; // bool
		constexpr auto LobbyWait? = 0x77b; // bool
		constexpr auto SurvCharPC = 0x77c; // SurvChars
		constexpr auto MapVoteEnum = 0x77d; // MapVote
		constexpr auto PlayerCategoryVoteEnum = 0x77e; // PlayerCategoryVote
		constexpr auto Liked? = 0x77f; // bool
		constexpr auto Player Start = 0x780; // AActor*
		constexpr auto NewVar_2 = 0x788; // ABP_Spectator_C*
		constexpr auto IsUsingGamepad? = 0x790; // bool
		constexpr auto SoundmenuVisible? = 0x791; // bool
		constexpr auto EndGameSwapSlotName = 0x798; // FString
		constexpr auto MvpAnimStart? = 0x7a8; // bool
		constexpr auto WinForce = 0x7a9; // bool
		constexpr auto NicknameOff? = 0x7aa; // bool
		constexpr auto HelpWindow = 0x7b0; // UW_HelpWindow_C*
		constexpr auto NewVar_3 = 0x7b8; // bool
		constexpr auto SecLobbyPawn = 0x7c0; // AActor*
		constexpr auto PerkName = 0x7c8; // FString
		constexpr auto PerkIndex = 0x7d8; // int32_t
		constexpr auto TempName = 0x7e0; // TArray<FName>
		constexpr auto TabStatsVisible? = 0x7f0; // bool
		constexpr auto PlayerCategoryVoteNickname = 0x7f8; // FString
		constexpr auto SkinIDarr = 0x808; // TArray<int32_t>
		constexpr auto PlayerStateArray = 0x818; // TArray<APlayerState*>
		constexpr auto PlayerStartTagArray = 0x828; // TArray<FName>
		constexpr auto SteamUserID = 0x838; // FString
		constexpr auto Avatar_1 = 0x848; // int32_t
		constexpr auto Banner ID = 0x84c; // int32_t
		constexpr auto Tag ID = 0x850; // int32_t
		constexpr auto SurvDeath? = 0x854; // bool
		constexpr auto InvertY? = 0x855; // bool
		constexpr auto TextChatMuteList = 0x858; // TArray<FString>
		constexpr auto SenderSteamID = 0x868; // FString
		constexpr auto IsTABStatOpen = 0x878; // bool
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UNetDriverEOSCore {
		constexpr auto bIsPassthrough = 0x7b8; // bool
		constexpr auto bIsUsingP2PSockets = 0x7b9; // bool
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UAC_BattlEye_Client_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto BEClient = 0xb8; // UO_BEClient_C*
		constexpr auto IsTicketSent = 0xc0; // bool
		constexpr auto IsInited = 0xc1; // bool
	}

	namespace n_AFootprint_Actor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FootprintDecal = 0x228; // UDecalComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Duration = 0x238; // float
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UW_PathEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Entry = 0x268; // UButton*
		constexpr auto Text_EntryName = 0x270; // UTextBlock*
		constexpr auto EntryText = 0x278; // FText
		constexpr auto EntryName = 0x290; // FName
		constexpr auto MoveToWidget = 0x298; // UWidget*
		constexpr auto Click = 0x2a0; // FMulticastInlineDelegate
		constexpr auto IsEnabled = 0x2b0; // bool
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x668; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x688; // FGuid
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_AHDRIBackdrop_C {
		constexpr auto SkyLight = 0x220; // USkyLightComponent*
		constexpr auto Geometry = 0x228; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto Cubemap = 0x238; // UTextureCube*
		constexpr auto MaterialInstance = 0x240; // UMaterialInstanceDynamic*
		constexpr auto Intensity = 0x248; // float
		constexpr auto Size = 0x24c; // float
		constexpr auto LightingDistanceFactor = 0x250; // float
		constexpr auto UseCameraProjection = 0x254; // bool
		constexpr auto Mesh = 0x258; // UStaticMesh*
		constexpr auto ProjectionCenter = 0x260; // FVector
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x620; // APlayerController*
		constexpr auto OriginalPlayer = 0x628; // UPlayer*
		constexpr auto SpeedScale = 0x630; // float
		constexpr auto InitialMaxSpeed = 0x634; // float
		constexpr auto InitialAccel = 0x638; // float
		constexpr auto InitialDecel = 0x63c; // float
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UW_PlayerPortraitInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Hover_Anim = 0x268; // UWidgetAnimation*
		constexpr auto SelectAnim = 0x270; // UWidgetAnimation*
		constexpr auto Button_Char = 0x278; // UButton*
		constexpr auto Image_40 = 0x280; // UImage*
		constexpr auto Image_Border = 0x288; // UImage*
		constexpr auto Image_BorderSelected = 0x290; // UImage*
		constexpr auto Image_RedBlur = 0x298; // UImage*
		constexpr auto WBP_NewItemMarker = 0x2a0; // UWBP_NewItemMarker_C*
		constexpr auto OnClickDispatcher = 0x2a8; // FMulticastInlineDelegate
		constexpr auto IsClicked = 0x2b8; // bool
		constexpr auto PlayerSkins = 0x2c0; // UW_PlayerSkins_C*
		constexpr auto Name = 0x2c8; // FText
		constexpr auto ID = 0x2e0; // int32_t
		constexpr auto OnHoverDispatcher = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnUnhoverDispatcher = 0x2f8; // FMulticastInlineDelegate
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UO_BEClient_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
		constexpr auto SendPacketEvent = 0x30; // FMulticastInlineDelegate
		constexpr auto PrintMessageEvent = 0x40; // FMulticastInlineDelegate
		constexpr auto RequestRestartEvent = 0x50; // FMulticastInlineDelegate
	}

	namespace n_AGraffitiActor_Hit_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
	}

	namespace n_UBP_ItemsManager_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto SpawnPoints = 0xb8; // TArray<ABP_ItemSpawnPoint_C*>
		constexpr auto SupportItems = 0xc8; // TMap<AItemsBP_C*, float>
		constexpr auto ToolItems = 0x118; // TMap<AItemsBP_C*, float>
		constexpr auto SupportItemNames = 0x168; // TArray<FString>
		constexpr auto ToolItemNames = 0x178; // TArray<FString>
		constexpr auto SupportItemsV2 = 0x188; // TArray<FS_SpawnItemChanceRange>
		constexpr auto ToolItemsV2 = 0x198; // TArray<FS_SpawnItemChanceRange>
		constexpr auto Temp = 0x1a8; // float
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UIconAbilityCooldownAlarmWBP_Survivor_Middle_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut_Alarm = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn_Alarm = 0x270; // UWidgetAnimation*
		constexpr auto FadeOut = 0x278; // UWidgetAnimation*
		constexpr auto FadeIn = 0x280; // UWidgetAnimation*
		constexpr auto BG = 0x288; // UImage*
		constexpr auto Border_AbilityIcon = 0x290; // UBorder*
		constexpr auto Border_AbilityIcon_2 = 0x298; // UBorder*
		constexpr auto Border_AbilityIcon_3 = 0x2a0; // UBorder*
		constexpr auto Border_AbilityIcon_4 = 0x2a8; // UBorder*
		constexpr auto Border_AbilityIcon_5 = 0x2b0; // UBorder*
		constexpr auto Image_55 = 0x2b8; // UImage*
		constexpr auto Image_101 = 0x2c0; // UImage*
		constexpr auto Image_Avatar = 0x2c8; // UImage*
		constexpr auto Overlay_46 = 0x2d0; // UOverlay*
		constexpr auto Overlay_surv = 0x2d8; // UOverlay*
		constexpr auto SizeBox_1 = 0x2e0; // USizeBox*
		constexpr auto SizeBox_3 = 0x2e8; // USizeBox*
		constexpr auto Text_Action = 0x2f0; // UTextBlock*
		constexpr auto Text_Nickname = 0x2f8; // UTextBlock*
		constexpr auto TextBlock = 0x300; // UTextBlock*
		constexpr auto TextBlock_61 = 0x308; // UTextBlock*
		constexpr auto TextBlock_106 = 0x310; // UTextBlock*
		constexpr auto WidgetSwitcher_Surv = 0x318; // UWidgetSwitcher*
		constexpr auto TimerCallAnimFadeOut = 0x320; // FTimerHandle
		constexpr auto TimerCallAnimFadeOutAlarm = 0x328; // FTimerHandle
		constexpr auto OnAlarmNotificationIsHiddenManually = 0x330; // FMulticastInlineDelegate
		constexpr auto OnAvatarNotificationHidden = 0x340; // FMulticastInlineDelegate
		constexpr auto AvatarsMap = 0x350; // TMap<SurvChars, UPaperSprite*>
		constexpr auto NotificationTime = 0x3a0; // float
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_ASurvTutorial_C {
		constexpr auto UberGraphFrame = 0x1830; // FPointerToUberGraphFrame
		constexpr auto TutorialGrannys = 0x1838; // TArray<AActor*>
		constexpr auto Part2Granny = 0x1848; // AActor*
		constexpr auto QuestWidget = 0x1850; // UW_Tutorial_Quest_C*
		constexpr auto FirstProp? = 0x1858; // bool
		constexpr auto Puppet? = 0x1859; // bool
		constexpr auto Prop? = 0x185a; // bool
		constexpr auto QuestDelayTime = 0x185c; // float
	}

	namespace n_UTimeIsTicking_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto Alarms = 0x128; // TArray<ANewAlarmBP_C*>
		constexpr auto AlarmsRDY = 0x138; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UWBP_InGameBannerScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show_Anim = 0x268; // UWidgetAnimation*
		constexpr auto TextBlock_CaughtBy = 0x270; // UTextBlock*
		constexpr auto W_Banner = 0x278; // UW_Banner_C*
		constexpr auto ShowTimer = 0x280; // FTimerHandle
		constexpr auto Time = 0x288; // float
		constexpr auto bIsBannerVisible = 0x28c; // bool
		constexpr auto IsSpectatorMode = 0x28d; // bool
		constexpr auto IsCaughtByBanner = 0x28e; // bool
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UCountSurvStatus_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Reanimate = 0x268; // UWidgetAnimation*
		constexpr auto hit = 0x270; // UWidgetAnimation*
		constexpr auto BG_2 = 0x278; // UImage*
		constexpr auto CanvasPanel_separator = 0x280; // UCanvasPanel*
		constexpr auto HealthProgress_Additional = 0x288; // UProgressBar*
		constexpr auto HealthProgress_Ally = 0x290; // UProgressBar*
		constexpr auto HealthProgress_Ally_Additional = 0x298; // UProgressBar*
		constexpr auto HealthProgress_blocked = 0x2a0; // UProgressBar*
		constexpr auto HealthProgress_Default = 0x2a8; // UProgressBar*
		constexpr auto HealthText = 0x2b0; // UTextBlock*
		constexpr auto HitBlur_Additional = 0x2b8; // UHitBlur_C*
		constexpr auto HitBlur_Ally = 0x2c0; // UHitBlur_C*
		constexpr auto HitBlur_Default = 0x2c8; // UHitBlur_C*
		constexpr auto HorizontalBox_4 = 0x2d0; // UHorizontalBox*
		constexpr auto HorizontalBox_5 = 0x2d8; // UHorizontalBox*
		constexpr auto Image = 0x2e0; // UImage*
		constexpr auto Image_2 = 0x2e8; // UImage*
		constexpr auto Image_3 = 0x2f0; // UImage*
		constexpr auto Image_4 = 0x2f8; // UImage*
		constexpr auto Image_6 = 0x300; // UImage*
		constexpr auto Image_14 = 0x308; // UImage*
		constexpr auto Image_97 = 0x310; // UImage*
		constexpr auto Image_163 = 0x318; // UImage*
		constexpr auto Image_175 = 0x320; // UImage*
		constexpr auto Image_226 = 0x328; // UImage*
		constexpr auto Image_230 = 0x330; // UImage*
		constexpr auto Image_553 = 0x338; // UImage*
		constexpr auto Image_3535 = 0x340; // UImage*
		constexpr auto Image_ActiveSelf = 0x348; // UImage*
		constexpr auto Image_ActiveSelf_BG = 0x350; // UImage*
		constexpr auto Image_Ally_Chair_Progress = 0x358; // UImage*
		constexpr auto Image_Ally_Injured_Progress = 0x360; // UImage*
		constexpr auto Image_AllyIndicator2 = 0x368; // UImage*
		constexpr auto Image_AllylIndicator1 = 0x370; // UImage*
		constexpr auto Image_ChairAlly = 0x378; // UImage*
		constexpr auto Image_ChairAlly_BG = 0x380; // UImage*
		constexpr auto Image_ChairSelf = 0x388; // UImage*
		constexpr auto Image_ChairSelf_BG = 0x390; // UImage*
		constexpr auto Image_DeadAlly = 0x398; // UImage*
		constexpr auto Image_DeadAlly_BG = 0x3a0; // UImage*
		constexpr auto Image_DeadSelf = 0x3a8; // UImage*
		constexpr auto Image_DeadSelf_BG = 0x3b0; // UImage*
		constexpr auto Image_DefaultIconAlly = 0x3b8; // UImage*
		constexpr auto Image_DefaultIconAlly_BG = 0x3c0; // UImage*
		constexpr auto Image_EscapedIconAlly = 0x3c8; // UImage*
		constexpr auto Image_EscapedIconAlly_BG = 0x3d0; // UImage*
		constexpr auto Image_FreeSelf = 0x3d8; // UImage*
		constexpr auto Image_FreeSelf_BG = 0x3e0; // UImage*
		constexpr auto Image_Green = 0x3e8; // UImage*
		constexpr auto Image_Grey = 0x3f0; // UImage*
		constexpr auto Image_HealthAlly = 0x3f8; // UImage*
		constexpr auto Image_HealthAlly_BG = 0x400; // UImage*
		constexpr auto Image_knockSelf = 0x408; // UImage*
		constexpr auto Image_knockSelf_BG = 0x410; // UImage*
		constexpr auto Image_Red = 0x418; // UImage*
		constexpr auto Image_Red_Crawl_Chair = 0x420; // UImage*
		constexpr auto Image_SeflIndicator_2 = 0x428; // UImage*
		constexpr auto Image_SeflIndicator_3 = 0x430; // UImage*
		constexpr auto Image_VoiceAlly = 0x438; // UImage*
		constexpr auto Image_VoiceSelf = 0x440; // UImage*
		constexpr auto Image_White_Alive = 0x448; // UImage*
		constexpr auto Item1 = 0x450; // UImage*
		constexpr auto Item1_2 = 0x458; // UImage*
		constexpr auto Item2 = 0x460; // UImage*
		constexpr auto Item2_2 = 0x468; // UImage*
		constexpr auto Item3 = 0x470; // UImage*
		constexpr auto Item3_2 = 0x478; // UImage*
		constexpr auto Items = 0x480; // UOverlay*
		constexpr auto Items_2 = 0x488; // UOverlay*
		constexpr auto MaxHealthText = 0x490; // UTextBlock*
		constexpr auto MiniStatusText_Time = 0x498; // UTextBlock*
		constexpr auto MiniStatusText_Time_2 = 0x4a0; // UTextBlock*
		constexpr auto MiniStatusText_Time_3 = 0x4a8; // UTextBlock*
		constexpr auto MiniStatusText_Time_4 = 0x4b0; // UTextBlock*
		constexpr auto Nickname_Ally = 0x4b8; // UTextBlock*
		constexpr auto Nickname_Ally_Hunter = 0x4c0; // UTextBlock*
		constexpr auto Nickname_Self = 0x4c8; // UTextBlock*
		constexpr auto ProgressBar_2 = 0x4d0; // UProgressBar*
		constexpr auto ProgressBar_AllyKnock = 0x4d8; // UProgressBar*
		constexpr auto ProgressBar_AllyOnChair = 0x4e0; // UProgressBar*
		constexpr auto ProgressBar_SelfReanimate = 0x4e8; // UProgressBar*
		constexpr auto RedBlurHealthProgress_Additional = 0x4f0; // UProgressBar*
		constexpr auto RedBlurHealthProgress_Ally = 0x4f8; // UProgressBar*
		constexpr auto RedBlurHealthProgress_Default = 0x500; // UProgressBar*
		constexpr auto RetainerBox = 0x508; // URetainerBox*
		constexpr auto RetainerBox_98 = 0x510; // URetainerBox*
		constexpr auto RetainerBox_155 = 0x518; // URetainerBox*
		constexpr auto RetainerBox_303 = 0x520; // URetainerBox*
		constexpr auto RetainerBox_313 = 0x528; // URetainerBox*
		constexpr auto RetainerBox_413 = 0x530; // URetainerBox*
		constexpr auto RetainerBox_418 = 0x538; // URetainerBox*
		constexpr auto RetainerBox_463 = 0x540; // URetainerBox*
		constexpr auto RetainerBox_606 = 0x548; // URetainerBox*
		constexpr auto RetainerBox_Active = 0x550; // URetainerBox*
		constexpr auto ScaleBox_Owner = 0x558; // UScaleBox*
		constexpr auto SizeBox_HealthBar_Ally = 0x560; // USizeBox*
		constexpr auto SizeBox_HealthBar_Ally_Additional = 0x568; // USizeBox*
		constexpr auto SizeBox_HelathBars = 0x570; // USizeBox*
		constexpr auto SizeBox_HP = 0x578; // USizeBox*
		constexpr auto SizeBox_HP_Additional = 0x580; // USizeBox*
		constexpr auto StatusSwitcherIcons = 0x588; // UWidgetSwitcher*
		constexpr auto StatusSwitcherIcons_Ally = 0x590; // UWidgetSwitcher*
		constexpr auto Switch_2 = 0x598; // UWidgetSwitcher*
		constexpr auto TextBlock_2 = 0x5a0; // UTextBlock*
		constexpr auto TextBlock_4 = 0x5a8; // UTextBlock*
		constexpr auto TextBlock_308 = 0x5b0; // UTextBlock*
		constexpr auto VerticalBox_Chair_IndicatorAlly = 0x5b8; // UVerticalBox*
		constexpr auto WidgetSwitcher_795 = 0x5c0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Banned = 0x5c8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_BlockSelf? = 0x5d0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_ChairBlock? = 0x5d8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Health = 0x5e0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Ministatus = 0x5e8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_StatusCircle = 0x5f0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_StatusCircle_Ally = 0x5f8; // UWidgetSwitcher*
		constexpr auto textCount = 0x600; // FText
		constexpr auto OnChair? = 0x618; // bool
		constexpr auto Self? = 0x619; // bool
		constexpr auto Surv = 0x620; // ASurvivorMasterBP_C*
		constexpr auto PrevHealth = 0x628; // int32_t
		constexpr auto Hitted? = 0x62c; // bool
		constexpr auto DeltaTime = 0x630; // float
		constexpr auto EndBlurEffect? = 0x634; // bool
		constexpr auto ActualHealth = 0x638; // int32_t
		constexpr auto Speed = 0x63c; // float
		constexpr auto Escape? = 0x640; // bool
		constexpr auto Block? = 0x641; // bool
		constexpr auto PrevHealth_Ally = 0x644; // int32_t
		constexpr auto ActualHealth_Ally = 0x648; // int32_t
		constexpr auto It'sME? = 0x64c; // bool
		constexpr auto TimeSelfReanimate = 0x650; // int32_t
		constexpr auto TimeSelfOnChair = 0x654; // int32_t
		constexpr auto TimeSelfOnChair_Banned = 0x658; // int32_t
		constexpr auto Out Row Self = 0x660; // FS_PlayerIconsSurv
		constexpr auto ControllerIND = 0x6a0; // int32_t
		constexpr auto HealthBarType = 0x6a4; // E_HealthBarType
		constexpr auto Max Health Calculate Value = 0x6a8; // float
		constexpr auto Max HP = 0x6ac; // float
		constexpr auto MinRangeHP_Default = 0x6b0; // float
		constexpr auto MaxRangeHP_Default = 0x6b4; // float
		constexpr auto MinRangeHP_Additional = 0x6b8; // float
		constexpr auto MaxRangeHP_Additional = 0x6bc; // float
		constexpr auto AllyInjuredMaterial = 0x6c0; // UMaterialInstanceDynamic*
		constexpr auto AllyChairMaterial = 0x6c8; // UMaterialInstanceDynamic*
		constexpr auto IsDead = 0x6d0; // bool
		constexpr auto IsAnimating = 0x6d1; // bool
		constexpr auto AnimTimerHanle = 0x6d8; // FTimerHandle
		constexpr auto NeedStopAnim = 0x6e0; // bool
		constexpr auto IsClientKiller = 0x6e1; // bool
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UEOSCoreSessionsRegisterPlayers {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDoppelKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UFMODAsset {
		constexpr auto AssetGuid = 0x28; // FGuid
	}

	namespace n_AItemsBPActual_Flashlight_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x240; // USkeletalMeshComponent*
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDoppel_FPP_AnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x3c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x3f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x548; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x570; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose = 0x630; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x658; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x6f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x798; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x8f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x9b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x9e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0xa08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0xa30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xa58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xa80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xaa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0xad0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0xaf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0xb20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0xb48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0xb70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0xb98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0xbc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0xbe8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0xc10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0xc38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0xc60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0xc88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0xcb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0xcd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0xd00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0xd28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xd50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0xd78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xda0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xdc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xdf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xe18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xe40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xe68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xe90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xeb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xee0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0xf08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0xf30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0xf58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0xf80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0xfa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0xfd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1048; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1070; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1098; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x10c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x10e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1110; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x1138; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1160; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x11b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x11d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x1250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x12d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x1300; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x13a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x1420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x14a0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x1540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x15c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x1640; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x16e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1760; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1790; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x1810; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x18b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x1960; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x1a48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1ae8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1bd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1c00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1c80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1cb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1d30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1d60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1de0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x1e90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1ec0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1f60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1fe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x2060; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x2100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x2180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x2200; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x22a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x2320; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x2350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x23f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x24f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x25a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x2620; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x26c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x27e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2860; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_4 = 0x2900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x29b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x2a30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_3 = 0x2ad0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2c00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2ca0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2d40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2ee0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2f10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2f90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x30b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x30e0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x3190; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool = 0x31c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x3260; // FAnimNode_SequencePlayer
		constexpr auto keepSurv = 0x32e0; // float
		constexpr auto IsInAir = 0x32e4; // bool
		constexpr auto Speed = 0x32e8; // float
		constexpr auto Direction = 0x32ec; // float
		constexpr auto TypeAttack = 0x32f0; // int32_t
		constexpr auto AttackBool = 0x32f4; // bool
		constexpr auto JumpEndChek = 0x32f5; // bool
		constexpr auto FIRE = 0x32f6; // bool
		constexpr auto Plant = 0x32f7; // bool
		constexpr auto MarioStun = 0x32f8; // bool
		constexpr auto ImSurv? = 0x32f9; // bool
		constexpr auto Switch? = 0x32fa; // bool
		constexpr auto SchoolBell? = 0x32fb; // bool
		constexpr auto Flashed = 0x32fc; // bool
		constexpr auto HiddenAttack? = 0x32fd; // bool
		constexpr auto HardHit? = 0x32fe; // bool
		constexpr auto PropHunt? = 0x32ff; // bool
		constexpr auto SpeedRateF = 0x3300; // float
		constexpr auto Delta Time X = 0x3304; // float
		constexpr auto TimeRun = 0x3308; // float
		constexpr auto Broke Anim = 0x330c; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_UEOSCorePlayerDataStorageDeleteFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEOSCorePresenceQueryPresence {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UW_RoleSelector_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Any = 0x268; // UButton*
		constexpr auto Button_Killer = 0x270; // UButton*
		constexpr auto Button_Surv = 0x278; // UButton*
		constexpr auto HorizontalBox_49 = 0x280; // UHorizontalBox*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_174 = 0x290; // UImage*
		constexpr auto Image_267 = 0x298; // UImage*
		constexpr auto Image_AR_Indicator = 0x2a0; // UImage*
		constexpr auto Image_K_Indicator = 0x2a8; // UImage*
		constexpr auto Image_S_Indicator = 0x2b0; // UImage*
		constexpr auto Overlay_AnyRole = 0x2b8; // UOverlay*
		constexpr auto TextBlock_188 = 0x2c0; // UTextBlock*
		constexpr auto TextBlock_300 = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_399 = 0x2d0; // UTextBlock*
		constexpr auto RoleType = 0x2d8; // E_RoleType
		constexpr auto FocusedButton = 0x2e0; // UButton*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_AIntroRail_C {
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto RectLight2 = 0x248; // URectLightComponent*
		constexpr auto RectLight = 0x250; // URectLightComponent*
		constexpr auto RectLight1 = 0x258; // URectLightComponent*
		constexpr auto CineCamera = 0x260; // UCineCameraComponent*
		constexpr auto TargetPoint = 0x268; // USceneComponent*
		constexpr auto StartTimeline_Focus_Distance_83FB9F8F401897F4D30BEAB0968C1557 = 0x270; // float
		constexpr auto StartTimeline_Alpha_83FB9F8F401897F4D30BEAB0968C1557 = 0x274; // float
		constexpr auto StartTimeline__Direction_83FB9F8F401897F4D30BEAB0968C1557 = 0x278; // ETimelineDirection
		constexpr auto StartTimeline = 0x280; // UTimelineComponent*
		constexpr auto Nicknames? = 0x288; // bool
		constexpr auto forKiller = 0x289; // bool
	}

	namespace n_UGrandmaAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0xb60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0xb88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0xbb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0xbd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xc00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xc28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0xc50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0xcd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0xd00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0xde8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0xea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0xf28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0xf58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x1040; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x1180; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x11b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x1298; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x13d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1408; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x1508; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_16 = 0x15a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x15d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x1658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1708; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x17b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x17e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1868; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x1948; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x1a30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1b70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x1c20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1d08; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_9 = 0x1dc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1df8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x1e78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1f40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1fc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x1ff0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x20b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x21b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x21e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x22b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x23b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x23e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x24a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x2590; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x2678; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x2738; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2850; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x28f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2a90; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2b78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2c40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2d08; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2df0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x2ed8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2f98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x3080; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x3140; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x3228; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x32e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x33d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3400; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x34b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x3550; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x3600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x3628; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x36d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3780; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x37b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3830; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3860; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x3910; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x39b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x3b08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x3b30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose = 0x3bf0; // FAnimNode_UseCachedPose
		constexpr auto KillerType = 0x3c18; // int32_t
		constexpr auto IsHolded = 0x3c1c; // float
		constexpr auto IsOnAir? = 0x3c20; // bool
		constexpr auto Speed = 0x3c24; // float
		constexpr auto SpeedChek = 0x3c28; // float
		constexpr auto Attak = 0x3c2c; // bool
		constexpr auto Direction = 0x3c30; // float
		constexpr auto JumpEndChek = 0x3c34; // bool
		constexpr auto FIRE = 0x3c35; // bool
		constexpr auto Plant = 0x3c36; // bool
		constexpr auto Flashed = 0x3c37; // bool
		constexpr auto Drop = 0x3c38; // bool
		constexpr auto ChairDrop = 0x3c39; // bool
		constexpr auto Catch = 0x3c3a; // bool
		constexpr auto Runaway = 0x3c3b; // bool
		constexpr auto HeadR = 0x3c3c; // FRotator
		constexpr auto Vertical rotation = 0x3c48; // float
		constexpr auto HorizontalValue = 0x3c4c; // float
		constexpr auto bTurnL = 0x3c50; // bool
		constexpr auto bTurnR = 0x3c51; // bool
		constexpr auto KnifeIn = 0x3c52; // bool
		constexpr auto IsOwner? = 0x3c53; // bool
		constexpr auto KnifeSpawn = 0x3c54; // bool
		constexpr auto AstralBuild = 0x3c55; // bool
		constexpr auto TypeAttack = 0x3c58; // int32_t
		constexpr auto MarioStun = 0x3c5c; // bool
		constexpr auto Get Ready = 0x3c5d; // bool
		constexpr auto PropHunt? = 0x3c5e; // bool
		constexpr auto SpeedRateF = 0x3c60; // float
		constexpr auto Broke Anim = 0x3c64; // bool
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_USoundCommandKiller_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Event = 0xb8; // TArray<UFMODEvent*>
		constexpr auto 3D_Sound = 0xc8; // UFMODAudioComponent*
		constexpr auto Killer Type = 0xd0; // int32_t
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UBansheeJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x440; // UModel*
		constexpr auto BrushBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_USurvivalProgressBarWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MovePB_Anim = 0x268; // UWidgetAnimation*
		constexpr auto AlarmCharge = 0x270; // UWidgetAnimation*
		constexpr auto GrappleAnim = 0x278; // UWidgetAnimation*
		constexpr auto Background = 0x280; // UImage*
		constexpr auto BGCircle = 0x288; // UImage*
		constexpr auto ButtonA = 0x290; // UImage*
		constexpr auto ButtonA_2 = 0x298; // UImage*
		constexpr auto ButtonA_3 = 0x2a0; // UImage*
		constexpr auto ButtonA_4 = 0x2a8; // UImage*
		constexpr auto ButtonD = 0x2b0; // UImage*
		constexpr auto ButtonD_2 = 0x2b8; // UImage*
		constexpr auto ButtonD_5 = 0x2c0; // UImage*
		constexpr auto ButtonD_6 = 0x2c8; // UImage*
		constexpr auto ButtonD_7 = 0x2d0; // UImage*
		constexpr auto ButtonD_8 = 0x2d8; // UImage*
		constexpr auto ButtonsSwitcher = 0x2e0; // UWidgetSwitcher*
		constexpr auto ButtonsSwitcher_2 = 0x2e8; // UWidgetSwitcher*
		constexpr auto CircleOverlay = 0x2f0; // UOverlay*
		constexpr auto CrossHair = 0x2f8; // UImage*
		constexpr auto GetOutText = 0x300; // UTextBlock*
		constexpr auto HorizontalBox_Status = 0x308; // UHorizontalBox*
		constexpr auto Image = 0x310; // UImage*
		constexpr auto Image_Alarm = 0x318; // UImage*
		constexpr auto Image_Settings = 0x320; // UImage*
		constexpr auto Image_Settings_2 = 0x328; // UImage*
		constexpr auto Image_Settings_3 = 0x330; // UImage*
		constexpr auto Image_Settings_4 = 0x338; // UImage*
		constexpr auto Image_Wiggle = 0x340; // UImage*
		constexpr auto Image_Wiggle_2 = 0x348; // UImage*
		constexpr auto Image_Wiggle_3 = 0x350; // UImage*
		constexpr auto Main = 0x358; // UOverlay*
		constexpr auto Main_1-OLDSAVE = 0x360; // UOverlay*
		constexpr auto MainCircle = 0x368; // UImage*
		constexpr auto MainProgressBar = 0x370; // UVerticalBox*
		constexpr auto MainProgressBar_2 = 0x378; // UVerticalBox*
		constexpr auto Overlay_2 = 0x380; // UOverlay*
		constexpr auto OverlayA_4 = 0x388; // UOverlay*
		constexpr auto OverlayA_5 = 0x390; // UOverlay*
		constexpr auto OverlayA_6 = 0x398; // UOverlay*
		constexpr auto OverlayA_BIG = 0x3a0; // UOverlay*
		constexpr auto OverlayA_Small = 0x3a8; // UOverlay*
		constexpr auto OverlayD = 0x3b0; // UOverlay*
		constexpr auto OverlayD_4 = 0x3b8; // UOverlay*
		constexpr auto OverlayD_5 = 0x3c0; // UOverlay*
		constexpr auto OverlayD_6 = 0x3c8; // UOverlay*
		constexpr auto OverlayD_BIG = 0x3d0; // UOverlay*
		constexpr auto OverlayD_Small = 0x3d8; // UOverlay*
		constexpr auto Progress = 0x3e0; // UProgressBar*
		constexpr auto Progress_2 = 0x3e8; // UProgressBar*
		constexpr auto Progress_3 = 0x3f0; // UProgressBar*
		constexpr auto Progress_BG = 0x3f8; // UProgressBar*
		constexpr auto Progress_BG_2 = 0x400; // UProgressBar*
		constexpr auto Progress_Fake = 0x408; // UProgressBar*
		constexpr auto Progress_Fake_2 = 0x410; // UProgressBar*
		constexpr auto Progress_Red_Green = 0x418; // UProgressBar*
		constexpr auto Progress_Red_Green_2 = 0x420; // UProgressBar*
		constexpr auto ScaleBox_Energy = 0x428; // UScaleBox*
		constexpr auto ScaleBox_HelperAlarmX = 0x430; // UScaleBox*
		constexpr auto ScaleBox_KeyDoor = 0x438; // UScaleBox*
		constexpr auto ScaleBox_Speed = 0x440; // UScaleBox*
		constexpr auto SizeBox_3 = 0x448; // USizeBox*
		constexpr auto SizeBox_Charger = 0x450; // USizeBox*
		constexpr auto TextBlock_BigA = 0x458; // UTextBlock*
		constexpr auto TextBlock_BigD = 0x460; // UTextBlock*
		constexpr auto TextBlock_SmallA = 0x468; // UTextBlock*
		constexpr auto TextBlock_SmallD = 0x470; // UTextBlock*
		constexpr auto TextBlock_StatusSpeedX = 0x478; // UTextBlock*
		constexpr auto TextBlock_StatusSpeedX_2 = 0x480; // UTextBlock*
		constexpr auto TextSwitcher = 0x488; // UWidgetSwitcher*
		constexpr auto TextSwitcher_2 = 0x490; // UWidgetSwitcher*
		constexpr auto W_Banner = 0x498; // UW_Banner_C*
		constexpr auto W_SurvonChair_Banned = 0x4a0; // UW_SurvonChair_Banned_C*
		constexpr auto WBP_HitMark = 0x4a8; // UWBP_HitMark_C*
		constexpr auto WBP_KeyIcon = 0x4b0; // UWBP_KeyIcon_C*
		constexpr auto Grapple? = 0x4b8; // bool
		constexpr auto GrappleButton? = 0x4b9; // bool
		constexpr auto PressA? = 0x4ba; // bool
		constexpr auto PressD? = 0x4bb; // bool
		constexpr auto BreakFreeProgress = 0x4bc; // float
		constexpr auto BreakFreeFullProgress = 0x4c0; // float
		constexpr auto Player = 0x4c8; // ASurvivorMasterBP_C*
		constexpr auto PrevSurvState = 0x4d0; // SurvStateEnum
		constexpr auto Normal = 0x4d8; // FSlateBrush
		constexpr auto Bleeding = 0x560; // FSlateBrush
		constexpr auto GetOutS = 0x5e8; // FString
		constexpr auto Invisible = 0x5f8; // FSlateBrush
		constexpr auto CurrentColor = 0x680; // FLinearColor
		constexpr auto Scale = 0x690; // float
		constexpr auto CurrentScale = 0x694; // float
		constexpr auto SpectatorMode? = 0x698; // bool
		constexpr auto CountSurvAlarm = 0x69c; // int32_t
		constexpr auto ReloadingAlarm? = 0x6a0; // bool
		constexpr auto NewVar_1 = 0x6a4; // float
		constexpr auto Alpha = 0x6a8; // float
		constexpr auto AlarmTickTimer = 0x6b0; // FTimerHandle
		constexpr auto IsAlarmAnimPlaying = 0x6b8; // bool
		constexpr auto AlarmTickTime = 0x6bc; // float
		constexpr auto DoorOpeningNow? = 0x6c0; // bool
		constexpr auto Pressed? = 0x6c1; // bool
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UShoot_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Killer = 0xb8; // AKillerMasterBP_C*
		constexpr auto CD = 0xc0; // bool
		constexpr auto Ammo = 0xc4; // int32_t
		constexpr auto NewVar_1 = 0xc8; // bool
		constexpr auto DeltaSec = 0xcc; // float
		constexpr auto FIRE = 0xd0; // bool
		constexpr auto AimRDY = 0xd1; // bool
		constexpr auto timeFire = 0xd4; // float
		constexpr auto targetRotat = 0xd8; // FRotator
		constexpr auto InterpSpeed = 0xe4; // float
		constexpr auto Damage = 0xe8; // int32_t
		constexpr auto Radius = 0xec; // float
	}

	namespace n_URabbitWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto CameraSettings = 0x268; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x270; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x278; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x280; // char : 1
		constexpr auto bOverrideInstanceData = 0x280; // char : 1
		constexpr auto bReplicatePlayback = 0x280; // char : 1
		constexpr auto DefaultInstanceData = 0x288; // UObject*
		constexpr auto BurnInInstance = 0x290; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x298; // bool
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_UBP_SessionData_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
		constexpr auto session = 0x30; // FBlueprintSessionResult
		constexpr auto Map = 0x138; // FString
		constexpr auto Mode = 0x148; // FString
		constexpr auto Capacity = 0x158; // int32_t
		constexpr auto Players = 0x15c; // int32_t
		constexpr auto IsEos = 0x160; // bool
		constexpr auto HostAddress = 0x168; // FString
		constexpr auto Status = 0x178; // FString
		constexpr auto Owner = 0x188; // FString
		constexpr auto Widget = 0x198; // UObject*
		constexpr auto IsFake = 0x1a0; // bool
		constexpr auto ServerId = 0x1a8; // FString
		constexpr auto BeaconPort = 0x1b8; // int32_t
		constexpr auto Ping = 0x1bc; // int32_t
		constexpr auto Browser = 0x1c0; // UObject*
		constexpr auto IsCanceled = 0x1c8; // bool
		constexpr auto ShouldDelete = 0x1c9; // bool
	}

	namespace n_UCreateEOSSessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UInFocus_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_URabbitAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x908; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x9f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0xab0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0xb30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0xb60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0xc48; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0xd08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0xd88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0xdb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xea0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0xf60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xfe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1090; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x10c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1140; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1170; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x11f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x1220; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x1308; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x13c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1448; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x14f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x15a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x15d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x1658; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x16f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x17e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x18a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1920; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x1950; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x1b18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x1b48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1c10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x1d10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x1dc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1e88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1f08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x1f38; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2020; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x20a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2120; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x21c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2260; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2328; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2410; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x2440; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ApplyAdditive = 0x24f0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x25b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x26a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x2740; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x2770; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2810; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x28b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x29b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x2ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x2bf0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2cb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2d98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2dc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2de8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2e68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2e98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2f18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x2fc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2ff8; // FAnimNode_StateMachine
		constexpr auto KillerType = 0x30a8; // int32_t
		constexpr auto Get Ready = 0x30ac; // bool
		constexpr auto IsHolded = 0x30b0; // float
		constexpr auto IsOnAir? = 0x30b4; // bool
		constexpr auto PropHunt? = 0x30b5; // bool
		constexpr auto Speed = 0x30b8; // float
		constexpr auto SpeedChek = 0x30bc; // float
		constexpr auto TypeAttack = 0x30c0; // int32_t
		constexpr auto Attak = 0x30c4; // bool
		constexpr auto Direction = 0x30c8; // float
		constexpr auto JumpEndChek = 0x30cc; // bool
		constexpr auto FIRE = 0x30cd; // bool
		constexpr auto Plant = 0x30ce; // bool
		constexpr auto Flashed = 0x30cf; // bool
		constexpr auto Drop = 0x30d0; // bool
		constexpr auto ChairDrop = 0x30d1; // bool
		constexpr auto Catch = 0x30d2; // bool
		constexpr auto Broke Anim = 0x30d3; // bool
		constexpr auto MarioStun = 0x30d4; // bool
		constexpr auto Runaway = 0x30d5; // bool
		constexpr auto HeadR = 0x30d8; // FRotator
		constexpr auto Vertical rotation = 0x30e4; // float
		constexpr auto HorizontalValue = 0x30e8; // float
		constexpr auto bTurnL = 0x30ec; // bool
		constexpr auto bTurnR = 0x30ed; // bool
		constexpr auto IsOwner? = 0x30ee; // bool
		constexpr auto SpeedRateF = 0x30f0; // float
		constexpr auto Charge = 0x30f4; // bool
		constexpr auto Move! = 0x30f5; // bool
		constexpr auto Charge Attack = 0x30f6; // bool
		constexpr auto BAnim = 0x30f7; // bool
		constexpr auto BChainsaw Terror = 0x30f8; // bool
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_USoundSettings_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BG_MUSIC = 0x268; // UCustomGraphicButton_C*
		constexpr auto Button_187 = 0x270; // UButton*
		constexpr auto Button_188 = 0x278; // UButton*
		constexpr auto Button_189 = 0x280; // UButton*
		constexpr auto Button_190 = 0x288; // UButton*
		constexpr auto Button_191 = 0x290; // UButton*
		constexpr auto Button_Device = 0x298; // UButton*
		constexpr auto Button_GV = 0x2a0; // UButton*
		constexpr auto Button_MV = 0x2a8; // UButton*
		constexpr auto Button_SFX = 0x2b0; // UButton*
		constexpr auto Button_VOIP = 0x2b8; // UButton*
		constexpr auto Button_VOIP_Boost = 0x2c0; // UButton*
		constexpr auto GeneralS = 0x2c8; // USlider*
		constexpr auto Image = 0x2d0; // UImage*
		constexpr auto Image_2 = 0x2d8; // UImage*
		constexpr auto Image_3 = 0x2e0; // UImage*
		constexpr auto Image_7 = 0x2e8; // UImage*
		constexpr auto Image_8 = 0x2f0; // UImage*
		constexpr auto Image_9 = 0x2f8; // UImage*
		constexpr auto Image_87 = 0x300; // UImage*
		constexpr auto Image_238 = 0x308; // UImage*
		constexpr auto Image_grayGV = 0x310; // UImage*
		constexpr auto Image_grayMV = 0x318; // UImage*
		constexpr auto Image_graySFX = 0x320; // UImage*
		constexpr auto Image_grayVOIP = 0x328; // UImage*
		constexpr auto Image_grayVOIP_Boost = 0x330; // UImage*
		constexpr auto MusicS = 0x338; // USlider*
		constexpr auto Overlay_BG_Music = 0x340; // UOverlay*
		constexpr auto Overlay_Device = 0x348; // UOverlay*
		constexpr auto Overlay_GV = 0x350; // UOverlay*
		constexpr auto Overlay_MV = 0x358; // UOverlay*
		constexpr auto Overlay_SFX = 0x360; // UOverlay*
		constexpr auto Overlay_VOIP = 0x368; // UOverlay*
		constexpr auto Overlay_VOIP_Boost = 0x370; // UOverlay*
		constexpr auto ProgressBar_GeneralS = 0x378; // UProgressBar*
		constexpr auto ProgressBar_MusicS = 0x380; // UProgressBar*
		constexpr auto ProgressBar_SFXS = 0x388; // UProgressBar*
		constexpr auto ProgressBar_VOIP = 0x390; // UProgressBar*
		constexpr auto ProgressBar_VOIP_Boost = 0x398; // UProgressBar*
		constexpr auto SFXS = 0x3a0; // USlider*
		constexpr auto SizeBox_VOIP_Boost = 0x3a8; // USizeBox*
		constexpr auto TextBlock = 0x3b0; // UTextBlock*
		constexpr auto TextBlock_2 = 0x3b8; // UTextBlock*
		constexpr auto TextBlock_3 = 0x3c0; // UTextBlock*
		constexpr auto TextBlock_4 = 0x3c8; // UTextBlock*
		constexpr auto TextBlock_5 = 0x3d0; // UTextBlock*
		constexpr auto TextBlock_6 = 0x3d8; // UTextBlock*
		constexpr auto TextBlock_7 = 0x3e0; // UTextBlock*
		constexpr auto TextBlock_8 = 0x3e8; // UTextBlock*
		constexpr auto TextBlock_228 = 0x3f0; // UTextBlock*
		constexpr auto TextBlock_247 = 0x3f8; // UTextBlock*
		constexpr auto VoiceDevice = 0x400; // UCustomVoiceButton_C*
		constexpr auto VOIP = 0x408; // USlider*
		constexpr auto VOIP_Boost = 0x410; // USlider*
		constexpr auto GeneralVolume = 0x418; // float
		constexpr auto MusicVolume = 0x41c; // float
		constexpr auto SFXVolume = 0x420; // float
		constexpr auto NewVar_2 = 0x428; // USaveGame*
		constexpr auto MapStormRef = 0x430; // TArray<AMapStormBP_C*>
		constexpr auto MapStorm1Ref = 0x440; // TArray<AMapStormBP_C*>
		constexpr auto LastFocusKnow = 0x450; // UWidget*
		constexpr auto VoiceVolume = 0x458; // float
		constexpr auto InputAudioDevices = 0x460; // TArray<FMediaCaptureDevice>
		constexpr auto ComboBoxFocused = 0x470; // UComboBoxString*
		constexpr auto ComboLastFocused? = 0x478; // bool
		constexpr auto SelectedImage = 0x480; // UImage*
		constexpr auto HoveredSlider = 0x488; // USlider*
		constexpr auto Value = 0x490; // float
		constexpr auto VoiceBoostVolume = 0x494; // float
		constexpr auto Selected = 0x498; // UCustomGraphicButton_C*
		constexpr auto Music_BG = 0x4a0; // float
		constexpr auto BGMUSIC_TextBtn = 0x4a8; // TArray<FText>
		constexpr auto KeyboardHoveredWidget = 0x4b8; // UWidget*
		constexpr auto IsMutedChat? = 0x4c0; // bool
	}

	namespace n_UPerkManager_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Perk1 = 0xb8; // UPerk_C*
		constexpr auto Perk2 = 0xc0; // UPerk_C*
		constexpr auto Perk3 = 0xc8; // UPerk_C*
		constexpr auto PerksName = 0xd0; // FString
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UAlarmProgressWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ProgressBar_85 = 0x268; // UProgressBar*
		constexpr auto SizeBox_1 = 0x270; // USizeBox*
		constexpr auto Owner = 0x278; // AActor*
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_ULevelSystem_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto KillerRef = 0xb8; // AKillerMasterBP_C*
		constexpr auto SurvivorRef = 0xc0; // ASurvivorMasterBP_C*
		constexpr auto LvlNew = 0xc8; // int32_t
		constexpr auto LvlExp = 0xd0; // TArray<int32_t>
		constexpr auto LvlReal = 0xe0; // int32_t
		constexpr auto SkillLvl = 0xe8; // TArray<int32_t>
		constexpr auto UpLvl = 0xf8; // bool
		constexpr auto BLvlCalc = 0xf9; // bool
		constexpr auto MaxLVL = 0xfc; // int32_t
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UProgressBarWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_327 = 0x268; // UImage*
		constexpr auto Image_Alarm = 0x270; // UImage*
		constexpr auto ProgressBar_41 = 0x278; // UProgressBar*
		constexpr auto RepairText = 0x280; // UTextBlock*
		constexpr auto SizeBox_Charger = 0x288; // USizeBox*
		constexpr auto TextBlock_98 = 0x290; // UTextBlock*
		constexpr auto TimeCurrent = 0x298; // float
		constexpr auto RangeMax = 0x29c; // float
		constexpr auto Alpha = 0x2a0; // float
	}

	namespace n_UPlayFabProfilesAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xf8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x100; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x108; // UPlayFabJsonObject*
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UVoiceChatWindow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto VerticalBox_191 = 0x268; // UVerticalBox*
		constexpr auto VoiceChatWindowComponent = 0x270; // UVoiceChatWindowComponent_C*
		constexpr auto VoiceChatWindowComponent_2 = 0x278; // UVoiceChatWindowComponent_C*
		constexpr auto VoiceChatWindowComponent_3 = 0x280; // UVoiceChatWindowComponent_C*
		constexpr auto Players = 0x288; // TArray<APlayerState*>
		constexpr auto PlayersVoice = 0x298; // TArray<UVoiceChatWindowComponent_C*>
	}

	namespace n_UW_HelpWindow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto bgblack = 0x268; // UImage*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_4 = 0x288; // UImage*
		constexpr auto Image_5 = 0x290; // UImage*
		constexpr auto Image_75 = 0x298; // UImage*
		constexpr auto Image_150 = 0x2a0; // UImage*
		constexpr auto Image_189 = 0x2a8; // UImage*
		constexpr auto Image_297 = 0x2b0; // UImage*
		constexpr auto Image_586 = 0x2b8; // UImage*
		constexpr auto Image_Abil1 = 0x2c0; // UImage*
		constexpr auto Image_Abil1_2 = 0x2c8; // UImage*
		constexpr auto Image_Abil2 = 0x2d0; // UImage*
		constexpr auto Image_Abil2_2 = 0x2d8; // UImage*
		constexpr auto Image_Abil2_3 = 0x2e0; // UImage*
		constexpr auto Image_Abil3 = 0x2e8; // UImage*
		constexpr auto Image_Abil3_2 = 0x2f0; // UImage*
		constexpr auto Image_Abil3_3 = 0x2f8; // UImage*
		constexpr auto Image_Abil3_4 = 0x300; // UImage*
		constexpr auto Image_Abil3_5 = 0x308; // UImage*
		constexpr auto Image_btAbil1 = 0x310; // UImage*
		constexpr auto Image_btAbil2 = 0x318; // UImage*
		constexpr auto Image_btAbil3 = 0x320; // UImage*
		constexpr auto Image_Killer_Ref = 0x328; // UImage*
		constexpr auto Image_Surv_Ref = 0x330; // UImage*
		constexpr auto TextAbil1 = 0x338; // UTextBlock*
		constexpr auto TextAbil1_2 = 0x340; // UTextBlock*
		constexpr auto TextAbil2 = 0x348; // UTextBlock*
		constexpr auto TextAbil2_2 = 0x350; // UTextBlock*
		constexpr auto TextAbil2_3 = 0x358; // UTextBlock*
		constexpr auto TextAbil3 = 0x360; // UTextBlock*
		constexpr auto TextAbil3_2 = 0x368; // UTextBlock*
		constexpr auto TextAbil3_3 = 0x370; // UTextBlock*
		constexpr auto TextAbil3_4 = 0x378; // UTextBlock*
		constexpr auto TextAbil3_5 = 0x380; // UTextBlock*
		constexpr auto TextBlock_532 = 0x388; // UTextBlock*
		constexpr auto TextBlock_696 = 0x390; // UTextBlock*
		constexpr auto TextDesc1 = 0x398; // UTextBlock*
		constexpr auto TextDesc1_2 = 0x3a0; // UTextBlock*
		constexpr auto TextDesc2 = 0x3a8; // UTextBlock*
		constexpr auto TextDesc2_2 = 0x3b0; // UTextBlock*
		constexpr auto TextDesc2_3 = 0x3b8; // UTextBlock*
		constexpr auto TextDesc3 = 0x3c0; // UTextBlock*
		constexpr auto TextDesc3_2 = 0x3c8; // UTextBlock*
		constexpr auto TextDesc3_3 = 0x3d0; // UTextBlock*
		constexpr auto TextDesc3_4 = 0x3d8; // UTextBlock*
		constexpr auto TextDesc3_5 = 0x3e0; // UTextBlock*
		constexpr auto WBP_HelpTip_Killer_2 = 0x3e8; // UWBP_HelpTip_C*
		constexpr auto WBP_HelpTip_Killer_3 = 0x3f0; // UWBP_HelpTip_C*
		constexpr auto WBP_HelpTip_Killer_4 = 0x3f8; // UWBP_HelpTip_C*
		constexpr auto WBP_HelpTip_Surv_2 = 0x400; // UWBP_HelpTip_C*
		constexpr auto WBP_HelpTip_Surv_3 = 0x408; // UWBP_HelpTip_C*
		constexpr auto WBP_HelpTip_Surv_4 = 0x410; // UWBP_HelpTip_C*
		constexpr auto WidgetSwitcher_103 = 0x418; // UWidgetSwitcher*
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UKillerMarked_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Text = 0x268; // UTextBlock*
		constexpr auto Off = 0x270; // bool
		constexpr auto Time = 0x274; // float
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryId = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UBansheeWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_USkinSelectedButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_26 = 0x268; // UButton*
		constexpr auto TextBlock_59 = 0x270; // UTextBlock*
		constexpr auto Name = 0x278; // FName
		constexpr auto ID = 0x280; // int32_t
		constexpr auto Char = 0x284; // SurvChars
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UGrannyAstral_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto SpawnedMesh = 0xf0; // AKillerMesh_C*
		constexpr auto Timer = 0xf8; // float
		constexpr auto SkillActivated? = 0xfc; // bool
		constexpr auto MonochromeColor = 0x100; // FVector4
		constexpr auto NormalColor = 0x110; // FVector4
		constexpr auto MeshLocation = 0x120; // FVector
		constexpr auto FarAway? = 0x12c; // bool
		constexpr auto knife = 0x130; // AKnife_C*
		constexpr auto SurvsArray = 0x138; // TArray<ASurvivorMasterBP_C*>
		constexpr auto Tutorial? = 0x148; // bool
		constexpr auto KillerDynMat1 = 0x150; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat2 = 0x158; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat3 = 0x160; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat4 = 0x168; // UMaterialInstanceDynamic*
		constexpr auto TransitionOn = 0x170; // bool
		constexpr auto TransitionOff = 0x171; // bool
		constexpr auto TransitionTime = 0x174; // float
		constexpr auto TurnOnDuration = 0x178; // float
		constexpr auto Float1 = 0x17c; // float
		constexpr auto ErodeSubtractDef = 0x180; // float
		constexpr auto TurnOffDuration = 0x184; // float
		constexpr auto TurnOffAttackDuration = 0x188; // float
		constexpr auto On? = 0x18c; // bool
		constexpr auto KillerDynMat5 = 0x190; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat6 = 0x198; // UMaterialInstanceDynamic*
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UATPCCameraModeScript_RotateActorToTarget {
		constexpr auto RotationSpeed = 0x40; // float
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UPlayFabCloudScriptAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x158; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x160; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x168; // UPlayFabJsonObject*
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_ADeathSurvCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UPlayFabExperimentationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x158; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x160; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x168; // UPlayFabJsonObject*
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UBugged_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto Actor = 0x100; // ABuggedActor_C*
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UEOSCoreSessionsRejectInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_USurvRole_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto NeedHeal = 0x268; // UWidgetAnimation*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_58 = 0x278; // UImage*
		constexpr auto Surv = 0x280; // ASurvivorMasterBP_C*
	}

	namespace n_UW_CustomizeBannerInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Banner = 0x268; // UButton*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_4 = 0x288; // UImage*
		constexpr auto Image_140 = 0x290; // UImage*
		constexpr auto Image_Avatar = 0x298; // UImage*
		constexpr auto Image_Locked = 0x2a0; // UImage*
		constexpr auto RetainerBox_1 = 0x2a8; // URetainerBox*
		constexpr auto SizeBox_45 = 0x2b0; // USizeBox*
		constexpr auto TextBlock_BannerName = 0x2b8; // UTextBlock*
		constexpr auto WBP_NewItemMarker = 0x2c0; // UWBP_NewItemMarker_C*
		constexpr auto WidgetSwitcher_BGs = 0x2c8; // UWidgetSwitcher*
		constexpr auto BannerID = 0x2d0; // int32_t
		constexpr auto OnClickDispatcher = 0x2d8; // FMulticastInlineDelegate
		constexpr auto IsClicked = 0x2e8; // bool
		constexpr auto Specified Color = 0x2ec; // FLinearColor
		constexpr auto W_CustomizeBanner = 0x300; // UW_CustomizeBanner_C*
		constexpr auto Rarity = 0x308; // FText
		constexpr auto BannerName = 0x320; // FText
		constexpr auto E_Rarity = 0x338; // Rarity
		constexpr auto IsBlocked = 0x339; // bool
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UPingQoSSubsystem {
		constexpr auto OnPingCompleted = 0x30; // FMulticastInlineDelegate
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_USurvHP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ProgressBar_85 = 0x268; // UProgressBar*
		constexpr auto SizeBox_1 = 0x270; // USizeBox*
		constexpr auto Owner = 0x278; // AActor*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UWBP_EffectsWindow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_50 = 0x268; // UImage*
		constexpr auto Image_145 = 0x270; // UImage*
		constexpr auto VerticalBox_84 = 0x278; // UVerticalBox*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UEOSCoreConnectCreateDeviceId {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UVampireWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UGrannyKillerMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x468; // int32_t
		constexpr auto PreviousLODLevel = 0x46c; // int32_t
		constexpr auto MinLOD = 0x470; // int32_t
		constexpr auto SubDivisionStepSize = 0x474; // int32_t
		constexpr auto StaticMesh = 0x478; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x480; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x484; // char : 1
		constexpr auto bOverrideWireframeColor = 0x484; // char : 1
		constexpr auto bOverrideMinLod = 0x484; // char : 1
		constexpr auto bOverrideNavigationExport = 0x484; // char : 1
		constexpr auto bForceNavigationObstacle = 0x484; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x484; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x484; // char : 1
		constexpr auto bOverrideLightMapRes = 0x484; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x485; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x485; // char : 1
		constexpr auto bUseSubDivisions = 0x485; // char : 1
		constexpr auto bUseDefaultCollision = 0x485; // char : 1
		constexpr auto bReverseCulling = 0x485; // char : 1
		constexpr auto OverriddenLightMapRes = 0x488; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x48c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x490; // float
		constexpr auto StreamingDistanceMultiplier = 0x494; // float
		constexpr auto LODData = 0x498; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4a8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4b8; // FLightmassPrimitiveSettings
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UEOSCoreLobbyQueryInvites {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UWBP_SoundChatCoolDown_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CD_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_BG = 0x270; // UImage*
		constexpr auto Image_circularPB = 0x278; // UImage*
		constexpr auto Image_Lock = 0x280; // UImage*
		constexpr auto CoolDownTime = 0x288; // float
		constexpr auto OnFinished = 0x290; // FMulticastInlineDelegate
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_USG_EOSDeviceLogin_C {
		constexpr auto Login = 0x28; // FString
	}

	namespace n_UW_MatchCanceled_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_98 = 0x270; // UImage*
		constexpr auto Image_396C_2 = 0x278; // UImage*
		constexpr auto Image_494C_2 = 0x280; // UImage*
		constexpr auto QuitButton = 0x288; // UButton*
		constexpr auto QuitOverlay = 0x290; // UOverlay*
		constexpr auto QuitText = 0x298; // UTextBlock*
		constexpr auto QuitText_2 = 0x2a0; // UTextBlock*
		constexpr auto SizeBox_ct_2 = 0x2a8; // USizeBox*
		constexpr auto WidgetSwitcher_1 = 0x2b0; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_2 = 0x2b8; // UWidgetSwitcher*
	}

	namespace n_UWBP_HitMark_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_HitMarks = 0x268; // UCanvasPanel*
		constexpr auto Overlay_38 = 0x270; // UOverlay*
		constexpr auto PlayerRef = 0x278; // ASurvivorMasterBP_C*
		constexpr auto HitMarks = 0x280; // TArray<UWBP_HitMarkComponent_C*>
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UBPA_RHG_AnimGame_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x2c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x420; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x4c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x510; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x668; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x6b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x830; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0x8d0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0x990; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0xa50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0xaf0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0xc48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0xc70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0xc98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0xcc0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0xd60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0xd88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xdb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0xdd8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_57 = 0xe98; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0xf48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x10a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x10c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_44 = 0x10f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x11d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x1298; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x12c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x12e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1438; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x1458; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x15b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x16b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x17c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x1880; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x18a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x1948; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x1a08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x1b60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x1b88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_56 = 0x1bb0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x1c60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_112 = 0x1c88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0x1cb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0x1cd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0x1d00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0x1d28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0x1d50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0x1d78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0x1da0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x1dc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x1df0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x1e18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x1e40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x1e68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x1e90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x1eb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x1ee0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x1f08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x1f30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x1f58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x1f80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x1fa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x1fd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x1ff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x2020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x2048; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x2070; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x2098; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x20c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x20e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x2110; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x2138; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x2160; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x2188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x21b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x21d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x2200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x2228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x2250; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x2278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x22a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x22c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x22f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x2318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x2340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x2368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x2390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x23b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x23e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x2408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x2430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x2458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x2480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x24a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x24d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x24f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x2520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x2548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x2570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x2598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x25c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x25e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x2610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x2638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x2660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x2688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x26b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x26d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x2700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x2728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x2750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x2778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x27a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x27c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x27f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x2818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x2840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x2868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x2890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x28b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x28e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x2908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x2930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x2958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x2980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x29a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x29d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x29f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2a20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2a48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2a70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x2a98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2ac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x2ae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x2b10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x2b38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x2b60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x2b88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x2bb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x2bd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x2c00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x2c28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x2c50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x2c78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x2ca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x2cc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x2cf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2d18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2d40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2d68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2d90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2db8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2de0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_312 = 0x2e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_311 = 0x2e88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_310 = 0x2f08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_309 = 0x2f88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_308 = 0x3008; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_11 = 0x3088; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_307 = 0x3128; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_47 = 0x31a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x31d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_306 = 0x32a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_305 = 0x3320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_304 = 0x33a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x3420; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_303 = 0x34e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_302 = 0x3568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x35e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_301 = 0x36b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_300 = 0x3730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_299 = 0x37b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_10 = 0x3830; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_298 = 0x38d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_46 = 0x3950; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_297 = 0x3980; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_296 = 0x3a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_295 = 0x3a80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_294 = 0x3b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_293 = 0x3b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_9 = 0x3c00; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_292 = 0x3ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_45 = 0x3d20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_291 = 0x3d50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_290 = 0x3dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_289 = 0x3e50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_288 = 0x3ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_287 = 0x3f50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_55 = 0x3fd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_44 = 0x4080; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_286 = 0x40b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_285 = 0x4130; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_284 = 0x41b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_283 = 0x4230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_282 = 0x42b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_281 = 0x4330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_8 = 0x43b0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_43 = 0x4450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_280 = 0x4480; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_279 = 0x4500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_278 = 0x4580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_277 = 0x4600; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_276 = 0x4680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_275 = 0x4700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_7 = 0x4780; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_42 = 0x4820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_274 = 0x4850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_273 = 0x48d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_272 = 0x4950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_271 = 0x49d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_270 = 0x4a50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_269 = 0x4ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_6 = 0x4b50; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_41 = 0x4bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_268 = 0x4c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_267 = 0x4ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_266 = 0x4d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_265 = 0x4da0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_54 = 0x4e20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_264 = 0x4ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_40 = 0x4f50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_263 = 0x4f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_262 = 0x5000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_261 = 0x5080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_260 = 0x5100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_53 = 0x5180; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_259 = 0x5230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_39 = 0x52b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_258 = 0x52e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_257 = 0x5360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_256 = 0x53e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_255 = 0x5460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_52 = 0x54e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_254 = 0x5590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_38 = 0x5610; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_253 = 0x5640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_252 = 0x56c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_251 = 0x5740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_250 = 0x57c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_249 = 0x5840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_248 = 0x58c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_247 = 0x5940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_246 = 0x59c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_51 = 0x5a40; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_50 = 0x5af0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_245 = 0x5ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_244 = 0x5c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_43 = 0x5ca0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_42 = 0x5d88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_41 = 0x5e70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x5f58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendBoneByChannel_2 = 0x5ff8; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_BlendListByEnum_49 = 0x6060; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x6110; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_37 = 0x61b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_243 = 0x61e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_242 = 0x6260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_241 = 0x62e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_240 = 0x6360; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_48 = 0x63e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_239 = 0x6490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0x6510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_47 = 0x6540; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_238 = 0x65f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_237 = 0x6670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_236 = 0x66f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_235 = 0x6770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_234 = 0x67f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_35 = 0x6870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_233 = 0x68a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_232 = 0x6920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_231 = 0x69a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_230 = 0x6a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_46 = 0x6aa0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_229 = 0x6b50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0x6bd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_228 = 0x6c00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_227 = 0x6c80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_226 = 0x6d00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_225 = 0x6d80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_224 = 0x6e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_223 = 0x6e80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_222 = 0x6f00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_221 = 0x6f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_45 = 0x7000; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_44 = 0x70b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_220 = 0x7160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_219 = 0x71e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_40 = 0x7260; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_39 = 0x7348; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_38 = 0x7430; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x7518; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendBoneByChannel = 0x75b8; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x7620; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_43 = 0x76c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_33 = 0x7770; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_218 = 0x77a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_217 = 0x7820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_216 = 0x78a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_215 = 0x7920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_214 = 0x79a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_42 = 0x7a20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_213 = 0x7ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_32 = 0x7b50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_212 = 0x7b80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_211 = 0x7c00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_210 = 0x7c80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_209 = 0x7d00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_208 = 0x7d80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_41 = 0x7e00; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_207 = 0x7eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x7f30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_206 = 0x7f60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x7fe0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_205 = 0x80a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_204 = 0x8120; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_203 = 0x81a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_202 = 0x8220; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_40 = 0x82a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_201 = 0x8350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_30 = 0x83d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_200 = 0x8400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x8480; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_199 = 0x8540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_198 = 0x85c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_197 = 0x8640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_196 = 0x86c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_39 = 0x8740; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_195 = 0x87f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x8870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_194 = 0x88a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x8920; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_193 = 0x89e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_192 = 0x8a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_191 = 0x8ae0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_190 = 0x8b60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_38 = 0x8be0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_189 = 0x8c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_28 = 0x8d10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_188 = 0x8d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x8dc0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_187 = 0x8e80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_186 = 0x8f00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_185 = 0x8f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_184 = 0x9000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_37 = 0x9080; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_183 = 0x9130; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0x91b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_182 = 0x91e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x9260; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_181 = 0x9320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_180 = 0x93a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_179 = 0x9420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_178 = 0x94a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_36 = 0x9520; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_177 = 0x95d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0x9650; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_176 = 0x9680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x9700; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_175 = 0x97c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_174 = 0x9840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_173 = 0x98c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_172 = 0x9940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_35 = 0x99c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_171 = 0x9a70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_25 = 0x9af0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_170 = 0x9b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_169 = 0x9ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_168 = 0x9c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_167 = 0x9ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_166 = 0x9d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_165 = 0x9da0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_5 = 0x9e20; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_24 = 0x9ec0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_164 = 0x9ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_163 = 0x9f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_162 = 0x9ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_161 = 0xa070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_160 = 0xa0f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_159 = 0xa170; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_4 = 0xa1f0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_23 = 0xa290; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_158 = 0xa2c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_157 = 0xa340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0xa3c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_156 = 0xa460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_155 = 0xa4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_154 = 0xa560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_153 = 0xa5e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_152 = 0xa660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0xa6e0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_22 = 0xa780; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_151 = 0xa7b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_150 = 0xa830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_149 = 0xa8b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_148 = 0xa930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_34 = 0xa9b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_147 = 0xaa60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0xaae0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_146 = 0xab10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_145 = 0xab90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_144 = 0xac10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_143 = 0xac90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_33 = 0xad10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_142 = 0xadc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0xae40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_141 = 0xae70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_140 = 0xaef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0xaf70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_37 = 0xb010; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_139 = 0xb0f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_138 = 0xb178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_36 = 0xb1f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0xb2e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0xb380; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_137 = 0xb420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_35 = 0xb4a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0xb588; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0xb628; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0xb6c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_34 = 0xb768; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_33 = 0xb850; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_136 = 0xb938; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_32 = 0xb9b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0xbaa0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_19 = 0xbb40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_135 = 0xbb70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_134 = 0xbbf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_133 = 0xbc70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_132 = 0xbcf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_32 = 0xbd70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_131 = 0xbe20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0xbea0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_130 = 0xbed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0xbf50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0xbfd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0xc050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_31 = 0xc0d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0xc180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0xc200; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0xc230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0xc2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0xc330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0xc3b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_30 = 0xc430; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0xc4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0xc560; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0xc590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_31 = 0xc610; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0xc6f8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0xc7c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0xc840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0xc8c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0xc940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0xc9c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0xca40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0xcac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0xcb40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_29 = 0xcbc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_28 = 0xcc70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0xcd20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0xcda0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0xce20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0xcea0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0xcf60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xcfe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0xd010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0xd090; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_30 = 0xd158; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0xd240; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0xd2c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0xd340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0xd3c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0xd440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0xd4c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0xd540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0xd5c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_27 = 0xd640; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_26 = 0xd6f0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0xd7a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0xd820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0xd8a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0xd920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xd9a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_14 = 0xda60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0xda90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0xdb10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0xdb90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0xdc10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0xdc90; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0xdd40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0xddc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0xddf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0xde70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0xdef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0xdf70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0xdff0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0xe0a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0xe120; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0xe150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0xe1d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0xe250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0xe2d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0xe350; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0xe400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0xe480; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0xe4b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0xe530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0xe5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0xe630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0xe6b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0xe760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0xe7e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0xe810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0xe890; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0xe910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0xe990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0xea10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0xeac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0xeb40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0xeb70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0xebf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0xec70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0xecf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0xed70; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0xee20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0xeea0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0xef20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0xef50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0xefd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0xf050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0xf0d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0xf150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0xf1d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0xf280; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0xf300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0xf380; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0xf400; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0xf4b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0xf530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0xf5b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_7 = 0xf650; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0xf680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0xf700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0xf780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0xf800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0xf880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0xf900; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_6 = 0xf9a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0xf9d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0xfa80; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0xfb30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0xfbb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0xfc30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0xfcb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0xfd30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0xfdb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0xfe30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0xfeb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0xff30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0xffb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x10078; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x100f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x10128; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x101a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x10228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x102a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x10328; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x103d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x10458; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x10488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x10508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x10588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x10608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x10688; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x10738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x107b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x107e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x10868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x108e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x10968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x109e8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x10a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x10b18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_29 = 0x10b48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_28 = 0x10c30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0x10d18; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x10e00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x10ea0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x10f50; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x11038; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x11120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x11208; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x112f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x11390; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x11440; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x11528; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x11610; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x116c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x11760; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x11810; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x118c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x11960; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x11a48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x11b30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x11c18; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x11d00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x11de8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x11ed0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x11fb8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x12080; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x12168; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x12230; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x122e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x123c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x124b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x12550; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x12600; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x126e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x127d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x12800; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x128b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x12930; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x129f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x12a18; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x12ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x12b48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x12bc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x12bf0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x12c18; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x12cc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x12d68; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x12ec0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x12ee8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x12fd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x13080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x13100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x13180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x13200; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x13280; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x13300; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x133c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x133e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x13468; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x135c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x13608; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x13630; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x13788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x137b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x13898; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x138c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x138e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x13968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x139e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x13b40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x13bc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x13c40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x13cc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x13d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot = 0x13dc0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x13e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x13e88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x13f08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x13f88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x14070; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x14120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x14208; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x142f0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x143d8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x144c0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x14588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x14608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x14688; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x147e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x14880; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x14940; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x14a98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x14ac0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0x14ae8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool = 0x14b98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x14c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x14cb8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root = 0x14e10; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x14e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x14ec0; // FAnimNode_BlendSpacePlayer
		constexpr auto Delta Time X = 0x14fa8; // float
		constexpr auto Surv = 0x14fb0; // ASurvivorMasterBP_C*
		constexpr auto IsInAir? = 0x14fb8; // bool
		constexpr auto Speed = 0x14fbc; // float
		constexpr auto Direction = 0x14fc0; // float
		constexpr auto Blend Weights 0 = 0x14fc4; // float
		constexpr auto Capture Mode? = 0x14fc8; // bool
		constexpr auto MovementType = 0x14fc9; // MovementTypeEnum
		constexpr auto Idle2? = 0x14fca; // bool
		constexpr auto Surv Char = 0x14fcb; // SurvChars
		constexpr auto HeadRotation = 0x14fcc; // FRotator
		constexpr auto Health = 0x14fd8; // int32_t
		constexpr auto KillerType = 0x14fdc; // int32_t
		constexpr auto VerticalCameraAxis = 0x14fe0; // float
		constexpr auto SurvStateEnum = 0x14fe4; // SurvStateEnum
		constexpr auto Attack? = 0x14fe5; // bool
		constexpr auto EndJump? = 0x14fe6; // bool
		constexpr auto HorizontalCameraAxis = 0x14fe8; // float
		constexpr auto TurnLeft? = 0x14fec; // bool
		constexpr auto TurnRight? = 0x14fed; // bool
		constexpr auto GetReady? = 0x14fee; // bool
		constexpr auto Crawl? = 0x14fef; // bool
		constexpr auto Grapple? = 0x14ff0; // bool
		constexpr auto OnChair? = 0x14ff1; // bool
		constexpr auto AlarmReloading? = 0x14ff2; // bool
		constexpr auto FPP? = 0x14ff3; // bool
		constexpr auto Stop Move? = 0x14ff4; // bool
		constexpr auto Custom Play Anim Walk? = 0x14ff5; // bool
		constexpr auto IdleToIdleCrawl = 0x14ff8; // UAnimMontage*
		constexpr auto DropChairMontage = 0x15000; // UAnimMontage*
		constexpr auto SelfGetOutMontage = 0x15008; // UAnimMontage*
		constexpr auto HelpGetOutMontage = 0x15010; // UAnimMontage*
		constexpr auto Hitted? = 0x15018; // bool
		constexpr auto HasItem = 0x1501c; // float
		constexpr auto ItemType = 0x15020; // ItemType
		constexpr auto StartCrawl? = 0x15021; // bool
		constexpr auto IsOwner? = 0x15022; // bool
		constexpr auto ItemTake? = 0x15023; // bool
		constexpr auto Failed? = 0x15024; // bool
		constexpr auto RandomSelfGetOut? = 0x15025; // bool
		constexpr auto TaigaBonesTransform? = 0x15026; // bool
		constexpr auto NotTestMode? = 0x15027; // bool
		constexpr auto Escape Loop = 0x15028; // bool
		constexpr auto Intro Anim? = 0x15029; // bool
		constexpr auto RandomPlayRateIntro = 0x1502c; // float
		constexpr auto AlphaAdditiveSpeed = 0x15030; // float
		constexpr auto Rotation = 0x15034; // float
		constexpr auto Escape? = 0x15038; // bool
		constexpr auto Tutorial? = 0x15039; // bool
		constexpr auto CritHP = 0x1503c; // int32_t
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UVampireKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_ALootableMesh_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Door1 = 0x228; // UStaticMeshComponent*
		constexpr auto Door = 0x230; // UStaticMeshComponent*
		constexpr auto DoorPoint = 0x238; // USceneComponent*
		constexpr auto Sphere = 0x240; // USphereComponent*
		constexpr auto Arrow = 0x248; // UArrowComponent*
		constexpr auto CurseSound = 0x250; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x258; // UPointLightComponent*
		constexpr auto InteractCollision = 0x260; // UBoxComponent*
		constexpr auto Scene1 = 0x268; // USceneComponent*
		constexpr auto FMODAudio2 = 0x270; // UFMODAudioComponent*
		constexpr auto FMODAudio1 = 0x278; // UFMODAudioComponent*
		constexpr auto Scene = 0x280; // USceneComponent*
		constexpr auto Box = 0x288; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x290; // USceneComponent*
		constexpr auto T_InsideShine_Intensity_71121A464EB065EE6103698DB596570F = 0x298; // float
		constexpr auto T_InsideShine__Direction_71121A464EB065EE6103698DB596570F = 0x29c; // ETimelineDirection
		constexpr auto T_InsideShine = 0x2a0; // UTimelineComponent*
		constexpr auto T_OpenLootbox_OpenCap_9A44E95D400B6552C917E3A62224627C = 0x2a8; // float
		constexpr auto T_OpenLootbox_OpenTongue_9A44E95D400B6552C917E3A62224627C = 0x2ac; // float
		constexpr auto T_OpenLootbox__Direction_9A44E95D400B6552C917E3A62224627C = 0x2b0; // ETimelineDirection
		constexpr auto T_OpenLootbox = 0x2b8; // UTimelineComponent*
		constexpr auto T_CloseLootbox_CloseTongue_5CDA91604678F732E9C179AB4D8E8CA9 = 0x2c0; // float
		constexpr auto T_CloseLootbox_CloseCap_5CDA91604678F732E9C179AB4D8E8CA9 = 0x2c4; // float
		constexpr auto T_CloseLootbox__Direction_5CDA91604678F732E9C179AB4D8E8CA9 = 0x2c8; // ETimelineDirection
		constexpr auto T_CloseLootbox = 0x2d0; // UTimelineComponent*
		constexpr auto bLocked = 0x2d8; // bool
		constexpr auto NeedPoints = 0x2dc; // int32_t
		constexpr auto ItemsName = 0x2e0; // TArray<FName>
		constexpr auto ItemsChance = 0x2f0; // TArray<float>
		constexpr auto RarityName = 0x300; // TArray<FName>
		constexpr auto RarityChance = 0x310; // TArray<float>
		constexpr auto GetItemName = 0x320; // FName
		constexpr auto DroppedItem = 0x328; // FName
		constexpr auto TempInt = 0x330; // int32_t
		constexpr auto SpawnedItem = 0x338; // AActor*
		constexpr auto ItemSpawned? = 0x340; // bool
		constexpr auto FirstIndex = 0x344; // int32_t
		constexpr auto SecondIndex = 0x348; // int32_t
		constexpr auto Random = 0x34c; // float
		constexpr auto GetRarityName = 0x350; // FName
		constexpr auto SurvRef = 0x358; // ASurvivorMasterBP_C*
		constexpr auto Chek = 0x360; // bool
		constexpr auto InsideDynMat = 0x368; // UMaterialInstanceDynamic*
		constexpr auto LootDynMat = 0x370; // UMaterialInstanceDynamic*
		constexpr auto ItemAccessDenied = 0x378; // TArray<bool>
		constexpr auto ItemsAmount = 0x388; // TArray<int32_t>
		constexpr auto ItemsAmountDropped = 0x398; // TArray<int32_t>
		constexpr auto Cursed = 0x3a8; // bool
		constexpr auto Opened? = 0x3a9; // bool
		constexpr auto OpenCount = 0x3ac; // int32_t
		constexpr auto CloseCount = 0x3b0; // int32_t
		constexpr auto Data Table = 0x3b8; // UDataTable*
		constexpr auto Data Table Medkit = 0x3c0; // UDataTable*
		constexpr auto Data Table CommonItems = 0x3c8; // UDataTable*
		constexpr auto ZLocalMin = 0x3d0; // float
		constexpr auto ZLocal = 0x3d4; // float
		constexpr auto r3 = 0x3d8; // TArray<float>
		constexpr auto I = 0x3e8; // int32_t
		constexpr auto SREF = 0x3f0; // ASurvivorMasterBP_C*
		constexpr auto CountCoins = 0x3f8; // int32_t
		constexpr auto C = 0x400; // FText
		constexpr auto IncreaseRare = 0x418; // bool
		constexpr auto PerkBlock? = 0x419; // bool
		constexpr auto DynMaterials = 0x420; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_AWaitLobbyBlock_C {
		constexpr auto Cube = 0x220; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_ULeader_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UWBP_NewItemMarker_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Shining_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_Glow = 0x270; // UImage*
		constexpr auto Image_Marker = 0x278; // UImage*
		constexpr auto Visible = 0x280; // bool
	}

	namespace n_USurvivorSpell_C {
		constexpr auto UberGraphFrame = 0xd8; // FPointerToUberGraphFrame
		constexpr auto Survivor = 0xe0; // ASurvivorMasterBP_C*
		constexpr auto ShowIcon? = 0xe8; // bool
		constexpr auto Spectator = 0xf0; // ABP_Spectator_C*
	}

	namespace n_UPlaySound3DComponent_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Sound = 0xb8; // UFMODAudioComponent*
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UPlayFabMatchmakerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xd8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xe0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xe8; // UPlayFabJsonObject*
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_AGS_PropHunt_Tutorial_C {
		constexpr auto UberGraphFrame = 0x818; // FPointerToUberGraphFrame
		constexpr auto GameEndEvent = 0x820; // FFMODEventInstance
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_ACapsuleDvij_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Capsule = 0x228; // UCapsuleComponent*
		constexpr auto Timeline_RadiusUp_NewTrack_0_EFC83FC041D69005FDEC469DE45F01F8 = 0x230; // float
		constexpr auto Timeline_RadiusUp__Direction_EFC83FC041D69005FDEC469DE45F01F8 = 0x234; // ETimelineDirection
		constexpr auto Timeline_RadiusUp = 0x238; // UTimelineComponent*
		constexpr auto Radius = 0x240; // float
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_URabbitKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UScreamSpell_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto ShakeDuration = 0xf0; // float
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UGrannyJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UW_LoadingTutorial_C {
		constexpr auto W_Lobby_WaitPlayers = 0x260; // UW_Lobby_WaitPlayers_C*
	}

	namespace n_ABanshee_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x1320; // UParticleSystemComponent*
		constexpr auto PN_Shockwave = 0x1328; // UNiagaraComponent*
		constexpr auto Curse = 0x1330; // UCurse_C*
		constexpr auto FMODJump = 0x1338; // UFMODAudioComponent*
		constexpr auto FMODAudio3 = 0x1340; // UFMODAudioComponent*
		constexpr auto ScreamFMOD = 0x1348; // UFMODAudioComponent*
		constexpr auto CurseS = 0x1350; // UFMODAudioComponent*
		constexpr auto FastSoundFmod = 0x1358; // UFMODAudioComponent*
		constexpr auto RushSoundFmod = 0x1360; // UFMODAudioComponent*
		constexpr auto Box1_1 = 0x1368; // UBoxComponent*
		constexpr auto Scream = 0x1370; // UScream_C*
		constexpr auto Timeline_5_0_Value_AE6778D44E9C7E800202E5B157E4247D = 0x1378; // float
		constexpr auto Timeline_5_0__Direction_AE6778D44E9C7E800202E5B157E4247D = 0x137c; // ETimelineDirection
		constexpr auto Timeline_5_1 = 0x1380; // UTimelineComponent*
		constexpr auto Timeline_4_0_Value_0DF127DB457CBB3190707499D9292828 = 0x1388; // float
		constexpr auto Timeline_4_0__Direction_0DF127DB457CBB3190707499D9292828 = 0x138c; // ETimelineDirection
		constexpr auto Timeline_4_1 = 0x1390; // UTimelineComponent*
		constexpr auto RMBPRESS = 0x1398; // bool
		constexpr auto TimeSpeed = 0x139c; // float
		constexpr auto TimeSpeedDur = 0x13a0; // float
		constexpr auto NewVar_4_1 = 0x13a4; // float
		constexpr auto FlyOff = 0x13a8; // bool
		constexpr auto BRCD = 0x13a9; // bool
		constexpr auto CDSV = 0x13ac; // int32_t
		constexpr auto CurseActor = 0x13b0; // AActor*
		constexpr auto Down = 0x13b8; // bool
		constexpr auto JumpPressed = 0x13b9; // bool
		constexpr auto FMODAudio2_1 = 0x13c0; // UFMODAudioComponent*
		constexpr auto FlyDelay = 0x13c8; // bool
		constexpr auto ScreamAnim = 0x13c9; // bool
		constexpr auto CurseAnim = 0x13ca; // bool
		constexpr auto DelayFlyTime = 0x13cc; // float
		constexpr auto hotkeyActorsArray = 0x13d0; // TArray<AActor*>
		constexpr auto PhantomCurseActor = 0x13e0; // AActor*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UWBP_HitMark_KillerAlarm_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_HitMarks = 0x268; // UCanvasPanel*
		constexpr auto Overlay_38 = 0x270; // UOverlay*
		constexpr auto PlayerRef = 0x278; // ASurvivorMasterBP_C*
		constexpr auto HitMarks = 0x280; // TArray<UWBP_HitMarkComponent_C*>
		constexpr auto TutorialHitMark = 0x290; // UWBP_HitMarkComponent_KillerAlarm_C*
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UEOSCoreLobbyDestroyLobby {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UW_PerkButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto NamePerk = 0x268; // UTextBlock*
		constexpr auto PerkButton = 0x270; // UButton*
		constexpr auto PerkName = 0x278; // FString
		constexpr auto PerkDesc = 0x288; // FString
		constexpr auto Owner = 0x298; // UW_MainMenu_C*
		constexpr auto PerkClass = 0x2a0; // UPerk_C*
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UEOSCoreEcomCheckout {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_UO_BEServer_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
		constexpr auto KickPlayerEvent = 0x30; // FMulticastInlineDelegate
		constexpr auto SendPacketEvent = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_UItemWorker_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto HealpackCharge = 0xb8; // int32_t
		constexpr auto IsPressed = 0xbc; // bool
		constexpr auto ItemType = 0xbd; // ItemType
		constexpr auto Player = 0xc0; // ASurvivorMasterBP_C*
		constexpr auto HealDuration = 0xc8; // float
		constexpr auto SpentTime = 0xcc; // float
		constexpr auto CurrentItem = 0xd0; // AItemsBPHand_C*
		constexpr auto IsHealing = 0xd8; // bool
		constexpr auto HealTarget = 0xe0; // ASurvivorMasterBP_C*
		constexpr auto HealSoundComponent = 0xe8; // UFMODAudioComponent*
		constexpr auto ItemsInventory = 0xf0; // TArray<FItemStructure>
		constexpr auto SpawnItemLocation = 0x100; // FTransform
		constexpr auto ClassItemToSpawn = 0x130; // AItemsBPHand_C*
		constexpr auto InventoryIndex = 0x138; // int32_t
		constexpr auto Item = 0x140; // AActor*
		constexpr auto ItemFound? = 0x148; // bool
		constexpr auto PickUpItems = 0x150; // TArray<AActor*>
		constexpr auto SurvDynMat1 = 0x160; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat2 = 0x168; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat3 = 0x170; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMatFPP = 0x178; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMatInvis = 0x180; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMatInvisFPP = 0x188; // UMaterialInstanceDynamic*
		constexpr auto TransitionOn = 0x190; // bool
		constexpr auto TransitionOff = 0x191; // bool
		constexpr auto TransitionTime = 0x194; // float
		constexpr auto TurnOffDuration = 0x198; // float
		constexpr auto TurnOnDuration = 0x19c; // float
		constexpr auto InvisRefractionZero = 0x1a0; // float
		constexpr auto InvisRefractionFPP = 0x1a4; // float
		constexpr auto InvisRefractionTPP = 0x1a8; // float
		constexpr auto Float1 = 0x1ac; // float
		constexpr auto ErodeSubtractDef = 0x1b0; // float
		constexpr auto CurrentTimerInvis = 0x1b4; // float
		constexpr auto Casted? = 0x1b8; // bool
		constexpr auto postProcessNormal = 0x1c0; // FPostProcessSettings
		constexpr auto postProcessMonochrome = 0x710; // FPostProcessSettings
		constexpr auto TimerInvis = 0xc60; // float
		constexpr auto LootboxShop = 0xc68; // ALootboxShop_C*
		constexpr auto CanUsePicklock? = 0xc70; // bool
		constexpr auto SkillCheckCount = 0xc74; // int32_t
		constexpr auto DeltaSecond = 0xc78; // float
		constexpr auto CurrentPicklockProgress = 0xc7c; // float
		constexpr auto FullPicklockProgress = 0xc80; // float
		constexpr auto Block? = 0xc84; // bool
		constexpr auto UsePicklock? = 0xc85; // bool
		constexpr auto PicklockText = 0xc88; // FText
		constexpr auto ItemTake? = 0xca0; // bool
		constexpr auto Medic = 0xca8; // FItemStructure
		constexpr auto Reporter = 0xcd8; // FItemStructure
		constexpr auto Alchemist = 0xd08; // FItemStructure
		constexpr auto Gamer = 0xd38; // FItemStructure
		constexpr auto Apprentice = 0xd68; // FItemStructure
		constexpr auto Thief = 0xd98; // FItemStructure
		constexpr auto TakeAnim? = 0xdc8; // bool
		constexpr auto UseItemText = 0xdd0; // FText
		constexpr auto SelfHealText = 0xde8; // FText
		constexpr auto ItemName = 0xe00; // FText
		constexpr auto ItemSwap? = 0xe18; // bool
		constexpr auto Lotbox = 0xe20; // AActor*
		constexpr auto DropItemBlock? = 0xe28; // bool
		constexpr auto FirstItem? = 0xe29; // bool
		constexpr auto Slot1 = 0xe30; // FItemStructure
		constexpr auto Slot2 = 0xe60; // FItemStructure
		constexpr auto Slot3 = 0xe90; // FItemStructure
		constexpr auto TempInt = 0xec0; // int32_t
		constexpr auto TempDrop = 0xec8; // FItemStructure
		constexpr auto FlashlightCanUse? = 0xef8; // bool
		constexpr auto SurvDynMaterialsTPP = 0xf00; // TArray<UMaterialInstanceDynamic*>
		constexpr auto SurvDynMaterialsFPP = 0xf10; // TArray<UMaterialInstanceDynamic*>
		constexpr auto HoudiniPerk? = 0xf20; // bool
		constexpr auto HoudiniText = 0xf28; // FText
		constexpr auto CurrentSlot = 0xf40; // FItemStructure
		constexpr auto InventoryFull? = 0xf70; // bool
		constexpr auto ItemMesh = 0xf78; // AActor*
		constexpr auto MeshMaterInst = 0xf80; // TArray<UMaterialInstanceDynamic*>
		constexpr auto MeshInvisMaterInst = 0xf90; // TArray<UMaterialInstanceDynamic*>
		constexpr auto StunKiller = 0xfa0; // AKillerMasterBP_C*
		constexpr auto TempRandom = 0xfa8; // int32_t
		constexpr auto TotemOfBraveryCharge = 0xfac; // int32_t
		constexpr auto IsTotemOfBravery = 0xfb0; // bool
		constexpr auto IsTotemOfConcentration = 0xfb1; // bool
		constexpr auto TotemOfConcentrationCharge = 0xfb4; // int32_t
		constexpr auto IsTotemOfFriemdship = 0xfb8; // bool
		constexpr auto TotemOfFriendshipCharge = 0xfbc; // int32_t
		constexpr auto PainkillerTimer = 0xfc0; // FTimerHandle
		constexpr auto PainKillerT = 0xfc8; // int32_t
		constexpr auto TotemOfGravityCharge = 0xfcc; // int32_t
		constexpr auto IsTotemOfGravity = 0xfd0; // bool
		constexpr auto HealpackArr = 0xfd8; // TArray<AItemsBPHand_C*>
		constexpr auto IsHealthpack = 0xfe8; // bool
		constexpr auto TotemOfGravityTimer = 0xff0; // FTimerHandle
		constexpr auto TotemOfConcentrationTimer = 0xff8; // FTimerHandle
		constexpr auto TotemOfFriendshipTime = 0x1000; // FTimerHandle
		constexpr auto TotemOfBraveryTimer = 0x1008; // FTimerHandle
		constexpr auto TotemOfEnduranceTimer = 0x1010; // FTimerHandle
		constexpr auto ToolCharges = 0x1018; // int32_t
		constexpr auto ToolTimer = 0x1020; // FTimerHandle
		constexpr auto GemOfEndurance = 0x1028; // FText
		constexpr auto Gem of Friendship = 0x1040; // FText
		constexpr auto Gem of Bravery = 0x1058; // FText
		constexpr auto Gem of Gravity = 0x1070; // FText
		constexpr auto Condition = 0x1088; // bool
		constexpr auto IsPainkillerActivated = 0x1089; // bool
		constexpr auto IsToolActivated = 0x108a; // bool
		constexpr auto ToolsAnim = 0x108b; // bool
		constexpr auto ItemToPickUpReference = 0x1090; // AItemsBP_C*
		constexpr auto ItemWorkerSpawnIndex = 0x1098; // int32_t
		constexpr auto FPressed? = 0x109c; // bool
		constexpr auto BlockSwap = 0x109d; // bool
		constexpr auto BlockPropItem = 0x109e; // bool
		constexpr auto BlockDropDup = 0x109f; // bool
	}

	namespace n_UDoppelgangerSpell2_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Alarms = 0xf0; // TArray<ANewAlarmBP_C*>
		constexpr auto SpottedSurvs = 0x100; // TArray<AActor*>
	}

	namespace n_UEOSCoreSettings {
		constexpr auto DefaultConfigurationName = 0x38; // FString
		constexpr auto TickBudgetInMilliseconds = 0x48; // int32_t
		constexpr auto IOSClientId = 0x50; // FString
		constexpr auto AndroidClientId = 0x60; // FString
		constexpr auto EOSConfigurations = 0x70; // TArray<FEOSConfig>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UEOSCoreLobbyKickMember {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UInAppPurchaseComponent {
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_AStaticBulletBP1_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Cube = 0x228; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Hited? = 0x238; // bool
		constexpr auto Time = 0x23c; // float
		constexpr auto KillerRef = 0x240; // AKillerMasterBP_C*
	}

	namespace n_UDeadMansChest_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto LootboxArray = 0x128; // TArray<ALootBox_C*>
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4d8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x530; // FVector
		constexpr auto SplineBoundaryMin = 0x53c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x540; // FGuid
		constexpr auto BodySetup = 0x550; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x558; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x55c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x55c; // char : 1
		constexpr auto bMeshDirty = 0x55c; // char : 1
		constexpr auto ForwardAxis = 0x55d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x560; // float
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UWB_KeyBindOverlay_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ButtonReFocuser = 0x268; // UButton*
		constexpr auto Changer = 0x270; // UOverlay*
		constexpr auto Gamepad_InputKeySelector = 0x278; // UInputKeySelector*
		constexpr auto Image = 0x280; // UImage*
		constexpr auto Image_2 = 0x288; // UImage*
		constexpr auto Image_3 = 0x290; // UImage*
		constexpr auto Image_4 = 0x298; // UImage*
		constexpr auto Image_5 = 0x2a0; // UImage*
		constexpr auto Image_7 = 0x2a8; // UImage*
		constexpr auto Image_8 = 0x2b0; // UImage*
		constexpr auto Image_9 = 0x2b8; // UImage*
		constexpr auto Image_10 = 0x2c0; // UImage*
		constexpr auto Image_11 = 0x2c8; // UImage*
		constexpr auto Image_12 = 0x2d0; // UImage*
		constexpr auto Image_83 = 0x2d8; // UImage*
		constexpr auto Image_377 = 0x2e0; // UImage*
		constexpr auto Image_KeyGP_2 = 0x2e8; // UImage*
		constexpr auto Image_KeyGP_3 = 0x2f0; // UImage*
		constexpr auto Image_KeyKB = 0x2f8; // UImage*
		constexpr auto Keyboard_InputKeySelector = 0x300; // UInputKeySelector*
		constexpr auto SafeZone = 0x308; // USafeZone*
		constexpr auto SafeZone_278 = 0x310; // USafeZone*
		constexpr auto SizeBox_KeyGP_3 = 0x318; // USizeBox*
		constexpr auto TextBlock_clear_GP = 0x320; // UTextBlock*
		constexpr auto TextBlock_clear_GP_2 = 0x328; // UTextBlock*
		constexpr auto TextBlock_emty = 0x330; // UTextBlock*
		constexpr auto TextBlock_emty_GP = 0x338; // UTextBlock*
		constexpr auto TextBlock_Input_GP = 0x340; // UTextBlock*
		constexpr auto TextBlock_Input_GP_2 = 0x348; // UTextBlock*
		constexpr auto TextBlock_KeyGP = 0x350; // UTextBlock*
		constexpr auto TextBlock_KeyGP_2 = 0x358; // UTextBlock*
		constexpr auto TextBlock_KeyKB = 0x360; // UTextBlock*
		constexpr auto TextBlock_SomeTEXT = 0x368; // UTextBlock*
		constexpr auto WidgetSwitcher_Keyboard = 0x370; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_KeyGamePad = 0x378; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_KeySelStyleBtn_gamepad = 0x380; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_KeySelStyleBtn_KeyBoard = 0x388; // UWidgetSwitcher*
		constexpr auto bIsSelected = 0x390; // bool
		constexpr auto EventDispatcher_LeftBtn = 0x398; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_RightBtn = 0x3a8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3b8; // FMulticastInlineDelegate
		constexpr auto InputNameKey = 0x3c8; // FName
		constexpr auto Gamepad_LastKeyChanged = 0x3d0; // FInputChord
		constexpr auto Gamepad_LastKeySelected = 0x3f0; // FInputChord
		constexpr auto Gamepad_BeingReplaced = 0x410; // FInputAxisKeyMapping
		constexpr auto Gamepad_TextButtons_ImageWrap1 = 0x438; // TMap<FString, UPaperSprite*>
		constexpr auto Gamepad_TextButtons_ImageWrap2 = 0x488; // TMap<FString, UPaperSprite*>
		constexpr auto Gamepad_TextButtons_ImageWrap2_Hide = 0x4d8; // TArray<FString>
		constexpr auto Keyboard_LastKeyChanged = 0x4e8; // FInputChord
		constexpr auto Keyboard_LastKeySelected = 0x508; // FInputChord
		constexpr auto Keyboard_BeingReplaced = 0x528; // FInputAxisKeyMapping
		constexpr auto Keyboard_TextButtons = 0x550; // TMap<FString, FText>
		constexpr auto Keyboard_TextButtons_ImageWrap = 0x5a0; // TMap<FString, UPaperSprite*>
		constexpr auto Text Style_Vis = 0x5f0; // FTextBlockStyle
		constexpr auto Text Style_InVis = 0x860; // FTextBlockStyle
		constexpr auto CurrentKey = 0xad0; // FMulticastInlineDelegate
		constexpr auto IdenticalBind = 0xae0; // UWB_IdenticalBindsDialog_C*
		constexpr auto Array_Surv = 0xae8; // TArray<FText>
		constexpr auto Press_Keyboard? = 0xaf8; // bool
		constexpr auto WB_LastSwap = 0xb00; // UWB_KeyBindOverlay_C*
		constexpr auto SavedSelectedKey_Swaped_GamePad = 0xb08; // FInputChord
		constexpr auto Intext_KEYNAME = 0xb28; // FText
	}

	namespace n_UHitBlur_C {
		constexpr auto Image_342 = 0x260; // UImage*
		constexpr auto SizeBlur = 0x268; // USizeBox*
	}

	namespace n_UFPGrannyAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_127 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_126 = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_125 = 0x348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_124 = 0x370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_123 = 0x398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_122 = 0x3c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_121 = 0x3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_120 = 0x410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_119 = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_118 = 0x460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0x488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0x4b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0x4d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0x500; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0x528; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0x550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0x578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0x5a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0x5c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0x5f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0x618; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0x640; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0x668; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x6b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x6e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x730; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x7a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x7d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x7f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x848; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x870; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x898; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x8c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x8e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x910; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x938; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x960; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x988; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x9b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x9d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0xa00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0xa28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0xa50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0xa78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0xaa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0xac8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0xaf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0xb18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0xb40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0xb68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0xb90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0xbb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0xbe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0xc08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0xc30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0xc58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0xc80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0xca8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0xcd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0xcf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0xd20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0xd48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0xd70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0xd98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0xdc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0xde8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0xe10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0xe38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0xe60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0xe88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0xeb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xed8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xf00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xf28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0xf50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0xf78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0xfa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0xfc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0xff0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x1018; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x1040; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x1068; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x1090; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x10b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x10e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x1108; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x1130; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x1158; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x1180; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x11a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x11d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x11f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x1220; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x1248; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x1270; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x1298; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x12c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x12e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x1310; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x1338; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x1360; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x1388; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x13b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x13d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1400; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1428; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x14a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x14c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x14f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1518; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x1568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x15b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x15e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1630; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x1658; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1680; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x16a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x16d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x1750; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x1780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x1800; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x1830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x18b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x18e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x1960; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x1990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x1a10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x1a40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x1ac0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x1b70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x1c20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1c50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1cd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1d00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1d80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x1e30; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x1ed0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1f98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x2018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x2098; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x20c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2148; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x21e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x2268; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x2298; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x2318; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x23e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x2460; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x2510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2540; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x2708; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x2738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x27b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x27e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x2868; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x2918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x29c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2a68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x2ae8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2b18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2b98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2c18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2cb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2d58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2dd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x2e88; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2f28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x30f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x3120; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3208; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3238; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x32e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x3388; // FAnimNode_SequencePlayer
		constexpr auto keepSurv = 0x3408; // float
		constexpr auto IsInAir = 0x340c; // bool
		constexpr auto Speed = 0x3410; // float
		constexpr auto AttackBool = 0x3414; // bool
		constexpr auto JumpEndChek = 0x3415; // bool
		constexpr auto FIRE = 0x3416; // bool
		constexpr auto Plant = 0x3417; // bool
		constexpr auto KnifeIn = 0x3418; // bool
		constexpr auto KnifeSpawn = 0x3419; // bool
		constexpr auto Direction = 0x341c; // float
		constexpr auto MarioStun = 0x3420; // bool
		constexpr auto TypeAttack = 0x3424; // int32_t
		constexpr auto Astral = 0x3428; // bool
		constexpr auto Flashed = 0x3429; // bool
		constexpr auto PropHunt? = 0x342a; // bool
		constexpr auto SpeedRateF = 0x342c; // float
		constexpr auto TimeRun = 0x3430; // float
		constexpr auto Delta Time X = 0x3434; // float
		constexpr auto Broke Anim = 0x3438; // bool
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UWBP_IntroUI_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_67 = 0x268; // UImage*
		constexpr auto W_Banner_Surv1 = 0x270; // UW_Banner_C*
		constexpr auto W_Banner_Surv2 = 0x278; // UW_Banner_C*
		constexpr auto W_Banner_Surv3 = 0x280; // UW_Banner_C*
		constexpr auto W_Banner_Surv4 = 0x288; // UW_Banner_C*
		constexpr auto SlotsMap = 0x290; // TMap<FName, UW_Banner_C*>
	}

	namespace n_ABP_PartImp_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto decal = 0x228; // UDecalComponent*
		constexpr auto NiagaraCompnent = 0x230; // UNiagaraComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
		constexpr auto IsHit = 0x240; // bool
		constexpr auto Surface_Type = 0x244; // int32_t
		constexpr auto VFX = 0x248; // TArray<UNiagaraSystem*>
		constexpr auto Hit Information = 0x258; // FHitResult
		constexpr auto Actor Information = 0x2e8; // AKillerMasterBP_C*
		constexpr auto NewVar_1 = 0x2f0; // int32_t
		constexpr auto Phys Mat = 0x2f8; // TMap<UPhysicalMaterial*, int32_t>
		constexpr auto NewVar_2 = 0x348; // bool
		constexpr auto NewVar_3 = 0x349; // bool
		constexpr auto Condition = 0x34a; // bool
	}

	namespace n_ALootBox_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere = 0x228; // USphereComponent*
		constexpr auto TextRender = 0x230; // UTextRenderComponent*
		constexpr auto Arrow = 0x238; // UArrowComponent*
		constexpr auto CurseSound = 0x240; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x248; // UPointLightComponent*
		constexpr auto FMODAudio4 = 0x250; // UFMODAudioComponent*
		constexpr auto FMODAudio3 = 0x258; // UFMODAudioComponent*
		constexpr auto InteractCollision = 0x260; // UBoxComponent*
		constexpr auto ParticleOpen = 0x268; // UParticleSystemComponent*
		constexpr auto ParticleClosed = 0x270; // UParticleSystemComponent*
		constexpr auto Scene1 = 0x278; // USceneComponent*
		constexpr auto PointLight = 0x280; // UPointLightComponent*
		constexpr auto ParticleBase = 0x288; // UParticleSystemComponent*
		constexpr auto FMODAudio2 = 0x290; // UFMODAudioComponent*
		constexpr auto FMODAudio1 = 0x298; // UFMODAudioComponent*
		constexpr auto FmodAudio = 0x2a0; // UFMODAudioComponent*
		constexpr auto Cap = 0x2a8; // UStaticMeshComponent*
		constexpr auto Scene = 0x2b0; // USceneComponent*
		constexpr auto Lock = 0x2b8; // UStaticMeshComponent*
		constexpr auto tongue = 0x2c0; // UStaticMeshComponent*
		constexpr auto Box = 0x2c8; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x2d0; // USceneComponent*
		constexpr auto T_LightPulse_Intensity_FD5C180C4B9A99344442349B037C880D = 0x2d8; // float
		constexpr auto T_LightPulse__Direction_FD5C180C4B9A99344442349B037C880D = 0x2dc; // ETimelineDirection
		constexpr auto T_LightPulse = 0x2e0; // UTimelineComponent*
		constexpr auto T_InsideShine_Intensity_28828CFD456256C3FBB3A6AFA599EA25 = 0x2e8; // float
		constexpr auto T_InsideShine__Direction_28828CFD456256C3FBB3A6AFA599EA25 = 0x2ec; // ETimelineDirection
		constexpr auto T_InsideShine = 0x2f0; // UTimelineComponent*
		constexpr auto T_OpenLootbox_OpenCap_E9A3FE3D4BF5DE0D51FC96B5AC9D5136 = 0x2f8; // float
		constexpr auto T_OpenLootbox_OpenTongue_E9A3FE3D4BF5DE0D51FC96B5AC9D5136 = 0x2fc; // float
		constexpr auto T_OpenLootbox__Direction_E9A3FE3D4BF5DE0D51FC96B5AC9D5136 = 0x300; // ETimelineDirection
		constexpr auto T_OpenLootbox = 0x308; // UTimelineComponent*
		constexpr auto T_CloseLootbox_CloseTongue_809797E34D6473C0DFD04A9AF09A8AAD = 0x310; // float
		constexpr auto T_CloseLootbox_CloseCap_809797E34D6473C0DFD04A9AF09A8AAD = 0x314; // float
		constexpr auto T_CloseLootbox__Direction_809797E34D6473C0DFD04A9AF09A8AAD = 0x318; // ETimelineDirection
		constexpr auto T_CloseLootbox = 0x320; // UTimelineComponent*
		constexpr auto T_NotEnoughMoney_LockValue_CD045F8344E6D66401BD0A9B1D892F30 = 0x328; // float
		constexpr auto T_NotEnoughMoney__Direction_CD045F8344E6D66401BD0A9B1D892F30 = 0x32c; // ETimelineDirection
		constexpr auto T_NotEnoughMoney = 0x330; // UTimelineComponent*
		constexpr auto bLocked = 0x338; // bool
		constexpr auto NeedPoints = 0x33c; // int32_t
		constexpr auto ItemsName = 0x340; // TArray<FName>
		constexpr auto ItemsChance = 0x350; // TArray<float>
		constexpr auto RarityName = 0x360; // TArray<FName>
		constexpr auto RarityChance = 0x370; // TArray<float>
		constexpr auto GetItemName = 0x380; // FName
		constexpr auto DroppedItem = 0x388; // FName
		constexpr auto TempInt = 0x390; // int32_t
		constexpr auto SpawnedItem = 0x398; // AActor*
		constexpr auto ItemSpawned? = 0x3a0; // bool
		constexpr auto FirstIndex = 0x3a4; // int32_t
		constexpr auto SecondIndex = 0x3a8; // int32_t
		constexpr auto Random = 0x3ac; // float
		constexpr auto GetRarityName = 0x3b0; // FName
		constexpr auto SurvRef = 0x3b8; // ASurvivorMasterBP_C*
		constexpr auto Chek = 0x3c0; // bool
		constexpr auto InsideDynMat = 0x3c8; // UMaterialInstanceDynamic*
		constexpr auto LootDynMat = 0x3d0; // UMaterialInstanceDynamic*
		constexpr auto ItemAccessDenied = 0x3d8; // TArray<bool>
		constexpr auto ItemsAmount = 0x3e8; // TArray<int32_t>
		constexpr auto ItemsAmountDropped = 0x3f8; // TArray<int32_t>
		constexpr auto Cursed = 0x408; // bool
		constexpr auto Opened? = 0x409; // bool
		constexpr auto OpenCount = 0x40c; // int32_t
		constexpr auto CloseCount = 0x410; // int32_t
		constexpr auto Data Table = 0x418; // UDataTable*
		constexpr auto Data Table Medkit = 0x420; // UDataTable*
		constexpr auto Data Table CommonItems = 0x428; // UDataTable*
		constexpr auto ZLocalMin = 0x430; // float
		constexpr auto ZLocal = 0x434; // float
		constexpr auto r3 = 0x438; // TArray<float>
		constexpr auto I = 0x448; // int32_t
		constexpr auto SREF = 0x450; // ASurvivorMasterBP_C*
		constexpr auto CountCoins = 0x458; // int32_t
		constexpr auto C = 0x460; // FText
		constexpr auto IncreaseRare = 0x478; // bool
		constexpr auto PerkBlock? = 0x479; // bool
		constexpr auto NotFoundItem? = 0x47a; // bool
		constexpr auto LastDroppedItem = 0x47c; // FName
		constexpr auto Temp = 0x488; // TArray<FName>
		constexpr auto Data Table If Failed = 0x498; // UDataTable*
	}

	namespace n_UQuietHour_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto Alarms = 0x128; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_AGlueOfJarItemsBP_Legendary_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UWBP_HitMarkComponent_KillerAlarm_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowAnim = 0x268; // UWidgetAnimation*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_38 = 0x280; // UImage*
		constexpr auto SizeBox_2 = 0x288; // USizeBox*
		constexpr auto WidgetSwitcher_ColorArrow = 0x290; // UWidgetSwitcher*
		constexpr auto LifeTime = 0x298; // float
		constexpr auto OnRemoved = 0x2a0; // FMulticastInlineDelegate
		constexpr auto InstigatorLocation = 0x2b0; // FVector
		constexpr auto PlayerRef = 0x2c0; // ASurvivorMasterBP_C*
		constexpr auto Tutorial? = 0x2c8; // bool
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UDamageTypeMasterBP_C {
		constexpr auto Type = 0x40; // DamageTypeEnum
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBansheeLobbyAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_RandomPlayer_2 = 0x2c8; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x340; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_Root = 0x3b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool = 0x3e8; // FAnimNode_BlendListByBool
		constexpr auto Ready? = 0x488; // bool
		constexpr auto Reset? = 0x489; // bool
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_ASpyEye_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Box1 = 0x228; // UBoxComponent*
		constexpr auto Sphere = 0x230; // USphereComponent*
		constexpr auto SkeletalMesh = 0x238; // USkeletalMeshComponent*
		constexpr auto EyeSphere = 0x240; // UStaticMeshComponent*
		constexpr auto Scene = 0x248; // USceneComponent*
		constexpr auto EyeSound = 0x250; // UFMODAudioComponent*
		constexpr auto Box = 0x258; // UBoxComponent*
		constexpr auto PointLight = 0x260; // UPointLightComponent*
		constexpr auto DefaultSceneRoot = 0x268; // USceneComponent*
		constexpr auto SurvRef = 0x270; // ASurvivorMasterBP_C*
		constexpr auto KillersRef = 0x278; // TArray<AKillerMasterBP_C*>
		constexpr auto On? = 0x288; // bool
		constexpr auto SurvsRef = 0x290; // TArray<ASurvivorMasterBP_C*>
		constexpr auto LastSpottedSurv = 0x2a0; // ASurvivorMasterBP_C*
		constexpr auto SphereLocalZ = 0x2a8; // float
		constexpr auto EaseUp = 0x2ac; // bool
		constexpr auto EaseAlpha = 0x2b0; // float
		constexpr auto KillerRef = 0x2b8; // AKillerMasterBP_C*
		constexpr auto EyeSphereDynMat1 = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto EyeSphereDynMat2 = 0x2c8; // UMaterialInstanceDynamic*
		constexpr auto EyeSphereDynMat3 = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto TurnOnDuration = 0x2d8; // float
		constexpr auto TurnOffDuration = 0x2dc; // float
		constexpr auto TransitionTime = 0x2e0; // float
		constexpr auto ErodeSubtractDef = 0x2e4; // float
		constexpr auto TurnOn = 0x2e8; // bool
		constexpr auto TurnOff = 0x2e9; // bool
		constexpr auto Float1 = 0x2ec; // float
		constexpr auto BlinkTime = 0x2f0; // float
		constexpr auto BlinkOn = 0x2f4; // bool
		constexpr auto BlinkOff = 0x2f5; // bool
		constexpr auto BlinkColor1 = 0x2f8; // FLinearColor
		constexpr auto BlinkColor2 = 0x308; // FLinearColor
		constexpr auto BlinkActive = 0x318; // bool
		constexpr auto BlinkOnTimer = 0x320; // FTimerHandle
		constexpr auto BlinkOffTimer = 0x328; // FTimerHandle
		constexpr auto MoveDetected = 0x330; // bool
		constexpr auto SurvStoppedDelayTimer = 0x338; // FTimerHandle
		constexpr auto SurvHidden = 0x340; // bool
		constexpr auto LastLeftSurv = 0x348; // ASurvivorMasterBP_C*
		constexpr auto BlinkOnDuration = 0x350; // float
		constexpr auto BlinkOffDuration = 0x354; // float
		constexpr auto LightOnTime = 0x358; // float
		constexpr auto LightOnTimer = 0x360; // FTimerHandle
		constexpr auto LightOffTime = 0x368; // float
		constexpr auto LightOffTimer = 0x370; // FTimerHandle
		constexpr auto SavedLightIntensity = 0x378; // float
		constexpr auto SpottedSurvs = 0x380; // TArray<ASurvivorMasterBP_C*>
		constexpr auto ShouldOn? = 0x390; // bool
		constexpr auto AlreadyOn? = 0x391; // bool
		constexpr auto TraceBool = 0x392; // bool
		constexpr auto SurvsInEye = 0x398; // TArray<ASurvivorMasterBP_C*>
		constexpr auto SpawnAlpha = 0x3a8; // float
		constexpr auto RootLocalZ = 0x3ac; // float
		constexpr auto SpawnZOffset = 0x3b0; // float
		constexpr auto EyeCount = 0x3b4; // bool
		constexpr auto Off? = 0x3b5; // bool
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UIconAbilityCooldownWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto IconOpacityBackward_Anim = 0x268; // UWidgetAnimation*
		constexpr auto IconOpacityForward_Anim = 0x270; // UWidgetAnimation*
		constexpr auto CoolDown_Time_Is_Over = 0x278; // UWidgetAnimation*
		constexpr auto CoolDown_End_Short_Anim = 0x280; // UWidgetAnimation*
		constexpr auto CoolDown_ShowTimer_Anim = 0x288; // UWidgetAnimation*
		constexpr auto CoolDown_Begin_Anim = 0x290; // UWidgetAnimation*
		constexpr auto BG = 0x298; // UImage*
		constexpr auto Border_AbilityIcon = 0x2a0; // UBorder*
		constexpr auto CDOverlay = 0x2a8; // UOverlay*
		constexpr auto CDTextBox = 0x2b0; // UTextBlock*
		constexpr auto Count = 0x2b8; // UTextBlock*
		constexpr auto HorizontalBox_Counter = 0x2c0; // UHorizontalBox*
		constexpr auto Image_ChargeIconFake = 0x2c8; // UImage*
		constexpr auto Image_RBM = 0x2d0; // UImage*
		constexpr auto Image_Substrate = 0x2d8; // UImage*
		constexpr auto ProgressBar_CD = 0x2e0; // UProgressBar*
		constexpr auto TextBlock_KeyName = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_Multiplier = 0x2f0; // UTextBlock*
		constexpr auto CoolDownTime = 0x2f8; // float
		constexpr auto CurrentTime = 0x2fc; // float
		constexpr auto CdText = 0x300; // FText
		constexpr auto RemainTime = 0x318; // int32_t
		constexpr auto abilityUse? = 0x31c; // bool
		constexpr auto CDWBPRef = 0x320; // UCoolDownWBP_C*
		constexpr auto Key = 0x328; // FText
		constexpr auto Owner = 0x340; // AKillerMasterBP_C*
		constexpr auto charge? = 0x348; // bool
		constexpr auto CircleMat = 0x350; // UMaterialInstanceDynamic*
		constexpr auto FillTime = 0x358; // float
		constexpr auto Name = 0x360; // FText
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_UFMODEventControlSection {
		constexpr auto ControlKeys = 0xe8; // FFMODEventControlChannel
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_AGM_PropHunt_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto PlayfabServer = 0x2c8; // UPlayfabServerComponent*
		constexpr auto BP_ServerReporter = 0x2d0; // UBP_ServerReporter_C*
		constexpr auto DefaultSceneRoot = 0x2d8; // USceneComponent*
		constexpr auto IsGameStarted = 0x2e0; // bool
		constexpr auto Seconds = 0x2e4; // int32_t
		constexpr auto PlayersCount = 0x2e8; // int32_t
		constexpr auto ShutdownServerHandle = 0x2f0; // FTimerHandle
		constexpr auto ShutdownTimer = 0x2f8; // float
		constexpr auto RoundTime = 0x2fc; // int32_t
		constexpr auto BeaconHost = 0x300; // APropnightBeaconHost*
		constexpr auto LockTravel = 0x308; // bool
		constexpr auto StopTimer? = 0x309; // bool
		constexpr auto StartNextGameTimer? = 0x30a; // bool
		constexpr auto NextGameTimer = 0x30c; // int32_t
		constexpr auto MatchTime = 0x310; // int32_t
		constexpr auto IsPlayerReloadingAlarm = 0x314; // bool
		constexpr auto Alarms = 0x318; // TArray<ANewAlarmBP_C*>
		constexpr auto Status = 0x328; // FString
		constexpr auto MapName = 0x338; // FString
		constexpr auto PlayfabPlayers = 0x348; // TArray<APC_PropHunt_C*>
		constexpr auto CustomSession = 0x358; // bool
		constexpr auto PlayfabKillerID = 0x360; // FString
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_UPlayFabInsightsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xe8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xf0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xf8; // UPlayFabJsonObject*
	}

	namespace n_UEOSCoreLobbySendInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UWBP_SecretCode_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_Ok = 0x270; // UButton*
		constexpr auto Image_Hovered_Buy = 0x278; // UImage*
		constexpr auto Image_Normal_Buy = 0x280; // UImage*
		constexpr auto Image_start = 0x288; // UImage*
		constexpr auto Overlay_BuyButton = 0x290; // UOverlay*
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_AVampire_C {
		constexpr auto UberGraphFrame = 0x1318; // FPointerToUberGraphFrame
		constexpr auto NiagaraShadow = 0x1320; // UNiagaraComponent*
		constexpr auto SpyEyes = 0x1328; // USpyEyes_C*
		constexpr auto FMODAudio2 = 0x1330; // UFMODAudioComponent*
		constexpr auto BladeDanceSphere = 0x1338; // USphereComponent*
		constexpr auto VampireSpell3 = 0x1340; // UVampireSpell3_C*
		constexpr auto WeaponTP = 0x1348; // USkeletalMeshComponent*
		constexpr auto WeaponFP = 0x1350; // USkeletalMeshComponent*
		constexpr auto VampireSpell1 = 0x1358; // UVampireSpell1_C*
		constexpr auto VampireSpell2 = 0x1360; // UVampireSpell2_C*
		constexpr auto Timeline_7_alpha_350AB93E425F2173709E42BB2943C6BB = 0x1368; // float
		constexpr auto Timeline_7__Direction_350AB93E425F2173709E42BB2943C6BB = 0x136c; // ETimelineDirection
		constexpr auto Timeline_8 = 0x1370; // UTimelineComponent*
		constexpr auto AltAttackAnim? = 0x1378; // bool
		constexpr auto AltAttackas = 0x1379; // bool
		constexpr auto BloodlustMat = 0x1380; // UMaterialInstanceDynamic*
		constexpr auto BladeDanceSurvs = 0x1388; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UPlayFabAuthenticationContext {
		constexpr auto ClientSessionTicket = 0x28; // FString
		constexpr auto EntityToken = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
		constexpr auto PlayFabId = 0x58; // FString
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_UWBP_Tip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut_Anim = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Fade_Anim_Full = 0x278; // UWidgetAnimation*
		constexpr auto Image_BG = 0x280; // UImage*
		constexpr auto Image_Button = 0x288; // UImage*
		constexpr auto Image_Ref = 0x290; // UImage*
		constexpr auto Image_Separator = 0x298; // UImage*
		constexpr auto SizeBox_Button = 0x2a0; // USizeBox*
		constexpr auto Text_Button = 0x2a8; // UTextBlock*
		constexpr auto Text_Header = 0x2b0; // UTextBlock*
		constexpr auto Text_Tip = 0x2b8; // UTextBlock*
		constexpr auto WasProp = 0x2c0; // bool
		constexpr auto WasHuman = 0x2c1; // bool
		constexpr auto TouchedClock = 0x2c2; // bool
		constexpr auto Surv = 0x2c8; // ASurvivorMasterBP_C*
		constexpr auto TipsArray = 0x2d0; // TArray<FName>
		constexpr auto CurrentTipIndex = 0x2e0; // int32_t
		constexpr auto ShowTips = 0x2e4; // bool
		constexpr auto CallForHelp = 0x2e5; // bool
		constexpr auto PrevTip = 0x2e8; // int32_t
		constexpr auto Hidden = 0x2ec; // bool
		constexpr auto Dead = 0x2ed; // bool
		constexpr auto End Game? = 0x2ee; // bool
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UKnifeShoot_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto KnifeIN? = 0xb8; // bool
		constexpr auto CD? = 0xb9; // bool
		constexpr auto KillerRef = 0xc0; // AKillerMasterBP_C*
		constexpr auto BeginPlay = 0xc8; // bool
		constexpr auto knife = 0xd0; // AKnife_C*
		constexpr auto targetRotat = 0xd8; // FRotator
		constexpr auto InterpSpeed = 0xe4; // float
		constexpr auto FIRE = 0xe8; // bool
		constexpr auto DeltaSec = 0xec; // float
		constexpr auto AimRDY = 0xf0; // bool
		constexpr auto NewVar_1 = 0xf4; // FVector
		constexpr auto ForwardV3 = 0x100; // FVector
		constexpr auto NewVar_2 = 0x10c; // FVector
		constexpr auto RotationKnife = 0x118; // FRotator
		constexpr auto TimeRotate = 0x124; // float
		constexpr auto CD2 = 0x128; // bool
		constexpr auto KnifeCdAttack = 0x12c; // float
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_URabbitMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UW_PlayCardContent_CustomGame_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Button_CreateGame = 0x270; // UButton*
		constexpr auto Button_ServerBrowser = 0x278; // UButton*
		constexpr auto Image_90 = 0x280; // UImage*
		constexpr auto Image_CG_Icon = 0x288; // UImage*
		constexpr auto Image_CG_Icon_2 = 0x290; // UImage*
		constexpr auto Overlay_TeamLeaderOnly = 0x298; // UOverlay*
		constexpr auto SizeBox = 0x2a0; // USizeBox*
		constexpr auto SizeBox_54 = 0x2a8; // USizeBox*
		constexpr auto Text_Description = 0x2b0; // UTextBlock*
		constexpr auto Text_Header = 0x2b8; // UTextBlock*
		constexpr auto TextBlock = 0x2c0; // UTextBlock*
		constexpr auto TextBlock_4 = 0x2c8; // UTextBlock*
		constexpr auto CreateGame_OnClicked = 0x2d0; // FMulticastInlineDelegate
		constexpr auto ServerBrowser_OnClicked = 0x2e0; // FMulticastInlineDelegate
		constexpr auto IsCreateGameHovered = 0x2f0; // bool
		constexpr auto CreateGame_DefaultStyle = 0x2f8; // FButtonStyle
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_ABP_LevelInfo_C {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto LevelName = 0x228; // FString
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x440; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x458; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UBait_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto AlarmsRef = 0x128; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x440; // FColor
		constexpr auto ArrowSize = 0x444; // float
		constexpr auto ArrowLength = 0x448; // float
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto bIsScreenSizeScaled = 0x450; // char : 1
		constexpr auto bTreatAsASprite = 0x450; // char : 1
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UVampireSpell3_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Timer = 0xf0; // float
		constexpr auto Casted? = 0xf4; // bool
		constexpr auto postProcessMonochrome = 0x100; // FPostProcessSettings
		constexpr auto postProcessNormal = 0x650; // FPostProcessSettings
		constexpr auto TransitionTime = 0xba0; // float
		constexpr auto TurnOnDuration = 0xba4; // float
		constexpr auto TurnOffDuration = 0xba8; // float
		constexpr auto TurnOffAttackDuration = 0xbac; // float
		constexpr auto ErodeSubtractDef = 0xbb0; // float
		constexpr auto KillerDynMat1 = 0xbb8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat2 = 0xbc0; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat3 = 0xbc8; // UMaterialInstanceDynamic*
		constexpr auto Float1 = 0xbd0; // float
		constexpr auto TransitionOn = 0xbd4; // bool
		constexpr auto TransitionOff = 0xbd5; // bool
		constexpr auto KillerDynMatInvis = 0xbd8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMatInvisFPP = 0xbe0; // UMaterialInstanceDynamic*
		constexpr auto InvisRefractionTPP = 0xbe8; // float
		constexpr auto InvisRefractionFPP = 0xbec; // float
		constexpr auto InvisRefractionZero = 0xbf0; // float
		constexpr auto KillerDynMatFPP = 0xbf8; // UMaterialInstanceDynamic*
		constexpr auto IsAfterAttack = 0xc00; // bool
		constexpr auto HamDynMatFPP = 0xc08; // UMaterialInstanceDynamic*
		constexpr auto HamDynMatInvisFPP = 0xc10; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat4 = 0xc18; // UMaterialInstanceDynamic*
		constexpr auto Ham Mat Tpp = 0xc20; // UMaterialInstanceDynamic*
		constexpr auto HamDynInvisTPP = 0xc28; // UMaterialInstanceDynamic*
		constexpr auto Keymaster = 0xc30; // bool
		constexpr auto VampireWeaponTPMDyn = 0xc38; // UMaterialInstanceDynamic*
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_ANewLobby_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto RectLight57_LightComponent0 = 0x228; // URectLightComponent*
		constexpr auto RectLight56_LightComponent0 = 0x230; // URectLightComponent*
		constexpr auto RectLight55_LightComponent0 = 0x238; // URectLightComponent*
		constexpr auto RectLight54_LightComponent0 = 0x240; // URectLightComponent*
		constexpr auto CineCameraActor1_CameraComponent = 0x248; // UCineCameraComponent*
		constexpr auto CineCameraActor1_SceneComponent = 0x250; // USceneComponent*
		constexpr auto RedGirl = 0x258; // USkeletalMeshComponent*
		constexpr auto GreenGirl = 0x260; // USkeletalMeshComponent*
		constexpr auto NewSurv = 0x268; // USkeletalMeshComponent*
		constexpr auto Surv = 0x270; // USkeletalMeshComponent*
		constexpr auto AsianGirl = 0x278; // USkeletalMeshComponent*
		constexpr auto Hammer_SkeletalMeshComponent0 = 0x280; // USkeletalMeshComponent*
		constexpr auto Keymaster = 0x288; // USkeletalMeshComponent*
		constexpr auto knife_SkeletalMeshComponent0 = 0x290; // USkeletalMeshComponent*
		constexpr auto Granny = 0x298; // USkeletalMeshComponent*
		constexpr auto DoppelNiagaraSystemV3_NiagaraComponent0 = 0x2a0; // UNiagaraComponent*
		constexpr auto Doppel_A_Pose_propnight_doppelganger_batterfly_knife_lock_low_SkeletalMeshComponent0 = 0x2a8; // USkeletalMeshComponent*
		constexpr auto Doppel = 0x2b0; // USkeletalMeshComponent*
		constexpr auto Banshee = 0x2b8; // USkeletalMeshComponent*
		constexpr auto SharedRoot = 0x2c0; // USceneComponent*
	}

	namespace n_AMapStormBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Thunder = 0x228; // UAudioComponent*
		constexpr auto FmodAudio = 0x230; // UFMODAudioComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
		constexpr auto Timeline_1_NewTrack_0_D67461CE416563FB2B48E2B80652FA43 = 0x240; // float
		constexpr auto Timeline_1__Direction_D67461CE416563FB2B48E2B80652FA43 = 0x244; // ETimelineDirection
		constexpr auto Timeline_2 = 0x248; // UTimelineComponent*
		constexpr auto Timeline_0_NewTrack_0_A19B948C4F191372C1CF8DB1F06EA309 = 0x250; // float
		constexpr auto Timeline_0__Direction_A19B948C4F191372C1CF8DB1F06EA309 = 0x254; // ETimelineDirection
		constexpr auto Timeline_1 = 0x258; // UTimelineComponent*
		constexpr auto Lights = 0x260; // TArray<AStormLight_Blueprint_C*>
		constexpr auto Windows = 0x270; // TArray<AStaticMeshActor*>
		constexpr auto LightBeams = 0x280; // TArray<ABP_LightBeam_C*>
		constexpr auto RandomTime = 0x290; // float
		constexpr auto Time = 0x294; // float
		constexpr auto LightsIntense = 0x298; // float
		constexpr auto BeamsBrightness = 0x29c; // float
		constexpr auto NewVar_1 = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto NewVar_2 = 0x2a8; // UMaterialInterface*
		constexpr auto NewVar_3 = 0x2b0; // FLinearColor
		constexpr auto ThunderType = 0x2c0; // int32_t
		constexpr auto Volume = 0x2c4; // float
		constexpr auto JustSound = 0x2c8; // bool
		constexpr auto Block = 0x2c9; // bool
	}

	namespace n_UPerkSurv_C {
		constexpr auto UberGraphFrame = 0xd0; // FPointerToUberGraphFrame
		constexpr auto Surv = 0xd8; // ASurvivorMasterBP_C*
		constexpr auto Perk1Activated = 0xe0; // bool
		constexpr auto Perk2Activated = 0xe1; // bool
		constexpr auto Perk3Activated = 0xe2; // bool
		constexpr auto Perk1LVL = 0xe4; // int32_t
		constexpr auto Perk2LVL = 0xe8; // int32_t
		constexpr auto Perk3LVL = 0xec; // int32_t
		constexpr auto KillerToAll = 0xf0; // bool
		constexpr auto bDelayedStun = 0xf1; // bool
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UGI_Prophunt_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto PlayFabUserID = 0x2c0; // FString
		constexpr auto Nickname = 0x2d0; // FString
		constexpr auto HostLevel = 0x2e0; // FName
		constexpr auto NewVar_1 = 0x2e8; // TArray<FBlueprintSessionResult>
		constexpr auto NewVar_2 = 0x2f8; // USaveGame*
		constexpr auto Sensivity = 0x300; // float
		constexpr auto BAdvertise = 0x304; // bool
		constexpr auto Sessions = 0x308; // TArray<FBlueprintSessionResult>
		constexpr auto AudioHandles = 0x318; // FS_AudioHandles
		constexpr auto ShouldJoin = 0x338; // bool
		constexpr auto Avatar = 0x340; // UTexture2D*
		constexpr auto MapIndex = 0x348; // int32_t
		constexpr auto Blacklist = 0x350; // TArray<FString>
		constexpr auto SuccessJoin = 0x360; // bool
		constexpr auto DelayedSearch = 0x361; // bool
		constexpr auto SessionId = 0x368; // FString
		constexpr auto afterMenu = 0x378; // bool
		constexpr auto MapName = 0x380; // FString
		constexpr auto PlayerInfo = 0x390; // FPlayerInfo
		constexpr auto LoggedIn = 0x3a8; // bool
		constexpr auto SurvSkinID = 0x3ac; // int32_t
		constexpr auto Exp = 0x3b0; // int32_t
		constexpr auto Lvl = 0x3b4; // int32_t
		constexpr auto PercentageLVL = 0x3b8; // float
		constexpr auto SurvSkinArray = 0x3c0; // TArray<int32_t>
		constexpr auto UserDataSave = 0x3d0; // USaveGame*
		constexpr auto SaveName = 0x3d8; // FString
		constexpr auto LoginSuccess = 0x3e8; // bool
		constexpr auto ServerGameSettings = 0x3f0; // FS_GameSettings
		constexpr auto ServerSettings = 0x410; // FS_ServerSettings
		constexpr auto NeedMainMenuFadeOut = 0x438; // bool
		constexpr auto XAxis = 0x43c; // float
		constexpr auto YAxis = 0x440; // float
		constexpr auto SurvPerk1 = 0x448; // UPerk_C*
		constexpr auto SurvPerk2 = 0x450; // UPerk_C*
		constexpr auto SurvPerk3 = 0x458; // UPerk_C*
		constexpr auto KillerPerk1 = 0x460; // UPerk_C*
		constexpr auto KillerPerk2 = 0x468; // UPerk_C*
		constexpr auto KillerPerk3 = 0x470; // UPerk_C*
		constexpr auto ServiceAddress = 0x478; // FString
		constexpr auto ServerRegion = 0x488; // FString
		constexpr auto IsActualServer = 0x498; // bool
		constexpr auto BuildNumber = 0x49c; // int32_t
		constexpr auto ServerName = 0x4a0; // FString
		constexpr auto ID = 0x4b0; // FString
		constexpr auto ServerError? = 0x4c0; // bool
		constexpr auto TitlePlayerID = 0x4c8; // FString
		constexpr auto SteamUserID = 0x4d8; // FString
		constexpr auto IsPlayfabServer = 0x4e8; // bool
		constexpr auto KillerID = 0x4f0; // FString
		constexpr auto IsMatchmaking = 0x500; // bool
		constexpr auto Char Selected Skin Ids = 0x508; // TArray<int32_t>
		constexpr auto SteamLoggedIn = 0x518; // bool
		constexpr auto SteamLobbyCreated = 0x519; // bool
		constexpr auto OnComeOnline = 0x520; // FMulticastInlineDelegate
		constexpr auto OnGoneOffline = 0x530; // FMulticastInlineDelegate
		constexpr auto AmILobbyMember = 0x540; // bool
		constexpr auto UserToInvite = 0x548; // FString
		constexpr auto PlayfabMatchPlayers = 0x558; // TArray<UPlayFabJsonObject*>
		constexpr auto OnEnterLobby = 0x568; // FMulticastInlineDelegate
		constexpr auto OnLeftLobby = 0x578; // FMulticastInlineDelegate
		constexpr auto Pings = 0x588; // TArray<FPingQoSInfo>
		constexpr auto OpenMenuReason = 0x598; // E_MenuReason
		constexpr auto GoingToMenu = 0x599; // bool
		constexpr auto JoinSteamLobbyAtStartup = 0x59a; // bool
		constexpr auto JoinLobbyID = 0x5a0; // FString
		constexpr auto DevCheat? = 0x5b0; // bool
		constexpr auto SkinsAndId = 0x5b8; // TMap<int32_t, USkeletalMesh*>
		constexpr auto SkinIDThatsPlayerOwns = 0x608; // TArray<int32_t>
		constexpr auto LootBoxCount = 0x618; // int32_t
		constexpr auto SelectedSkinIDs = 0x620; // TMap<int32_t, int32_t>
		constexpr auto coins = 0x670; // int32_t
		constexpr auto OpenedLootBoxCount = 0x674; // int32_t
		constexpr auto SelectedBannerID = 0x678; // int32_t
		constexpr auto GLOBAL_XP = 0x67c; // int32_t
		constexpr auto MMR_SURV = 0x680; // int32_t
		constexpr auto MMR_KILLER = 0x684; // int32_t
		constexpr auto TagID = 0x688; // int32_t
		constexpr auto XP_ForNextLVL = 0x68c; // int32_t
		constexpr auto XP_ForLvl = 0x690; // int32_t
		constexpr auto CachedSortedPings = 0x698; // TArray<FPingQoSInfo>
		constexpr auto IsNewSkin = 0x6a8; // bool
		constexpr auto IsNewBanner = 0x6a9; // bool
		constexpr auto IsNewAvatar = 0x6aa; // bool
		constexpr auto IsNewTags = 0x6ab; // bool
		constexpr auto IsSkinCustomizationNew = 0x6b0; // TMap<int32_t, bool>
		constexpr auto ArrAvatarPlayerOwn = 0x700; // TArray<int32_t>
		constexpr auto ArrBannerPlayerOwn = 0x710; // TArray<int32_t>
		constexpr auto ArrTagsPlayerOwn = 0x720; // TArray<int32_t>
		constexpr auto IsAvatarCustomizationNew = 0x730; // TMap<int32_t, bool>
		constexpr auto IsBannerCustomizationNew = 0x780; // TMap<int32_t, bool>
		constexpr auto IsTagsCustomizationNew = 0x7d0; // TMap<int32_t, bool>
		constexpr auto AvatarID = 0x820; // int32_t
		constexpr auto UnlockAllSkins = 0x824; // bool
		constexpr auto CachedBuildId = 0x828; // FString
		constexpr auto DisableAllSkins = 0x838; // bool
		constexpr auto CS_SessionId = 0x840; // FString
		constexpr auto CS_Region = 0x850; // FString
		constexpr auto ShouldCreateLobby = 0x860; // bool
		constexpr auto LD_CustomGameAddress = 0x868; // FString
		constexpr auto Invert Mouse Y? = 0x878; // bool
		constexpr auto SessionAuthRequest = 0x880; // UVaRestRequestJSON*
		constexpr auto LoadingScreenWidget = 0x888; // UW_LoadingScreen_C*
		constexpr auto ClearLobbyUI = 0x890; // FMulticastInlineDelegate
		constexpr auto CurrentLobbyID = 0x8a0; // FString
		constexpr auto DltSkinsFromLB = 0x8b0; // bool
		constexpr auto UploadingSaveData = 0x8b1; // bool
		constexpr auto TriedUploadSave = 0x8b2; // bool
		constexpr auto SteamSessinTicket = 0x8b8; // FString
		constexpr auto ResetRedDot = 0x8c8; // bool
		constexpr auto FirstEOSLoad = 0x8c9; // bool
		constexpr auto CheatsEnabled = 0x8ca; // bool
		constexpr auto Scrap = 0x8cc; // int32_t
		constexpr auto Mmr = 0x8d0; // int32_t
		constexpr auto MatchesPlayed = 0x8d4; // int32_t
		constexpr auto OnEOSLoad = 0x8d8; // FMulticastInlineDelegate
		constexpr auto GamepadInput = 0x8e8; // bool
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x448; // TArray<FNavigationLink>
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AFMODAmbientSound {
		constexpr auto AudioComponent = 0x220; // UFMODAudioComponent*
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UWBP_AlarmCounterItem_C {
		constexpr auto Activate_Anim = 0x260; // UWidgetAnimation*
		constexpr auto Image_BG = 0x268; // UImage*
		constexpr auto Image_checker = 0x270; // UImage*
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UEOSCoreLobbyLeaveLobby {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UW_ServerEntryV3_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Hover_Anim = 0x268; // UWidgetAnimation*
		constexpr auto HideWaiting_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Waiting_Anim = 0x278; // UWidgetAnimation*
		constexpr auto BG = 0x280; // UImage*
		constexpr auto BG_Hovered = 0x288; // UImage*
		constexpr auto CanvasPanel_Root = 0x290; // UCanvasPanel*
		constexpr auto Image_MapPreview = 0x298; // UImage*
		constexpr auto Image_Waiting = 0x2a0; // UImage*
		constexpr auto Map = 0x2a8; // UTextBlock*
		constexpr auto Mode = 0x2b0; // UTextBlock*
		constexpr auto Mode_2 = 0x2b8; // UTextBlock*
		constexpr auto Name = 0x2c0; // UTextBlock*
		constexpr auto Ping = 0x2c8; // UTextBlock*
		constexpr auto Players = 0x2d0; // UTextBlock*
		constexpr auto RetainerBox_1 = 0x2d8; // URetainerBox*
		constexpr auto ScrollBox_1 = 0x2e0; // UScrollBox*
		constexpr auto Status = 0x2e8; // UTextBlock*
		constexpr auto session = 0x2f0; // UBP_SessionData_C*
		constexpr auto SelectedColor = 0x2f8; // FLinearColor
		constexpr auto HoveredColor = 0x308; // FLinearColor
		constexpr auto DefaultColor = 0x318; // FLinearColor
		constexpr auto SelectedBrash = 0x328; // FSlateBrush
		constexpr auto HoveredBrush = 0x3b0; // FSlateBrush
		constexpr auto DefaultBrush = 0x438; // FSlateBrush
		constexpr auto IsSelected = 0x4c0; // bool
		constexpr auto Hovered = 0x4c1; // bool
		constexpr auto IsForwardDirection = 0x4c2; // bool
		constexpr auto AnimTimer = 0x4c8; // FTimerHandle
	}

	namespace n_UFMODEventParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UEOSCoreAuthLinkAccount {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreUIShowFriends {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UPerk_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto PerkFind? = 0xb8; // bool
		constexpr auto PerkName = 0xc0; // FString
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_AElevatorM_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Box = 0x228; // UBoxComponent*
		constexpr auto Floor1 = 0x230; // UStaticMeshComponent*
		constexpr auto Floor2 = 0x238; // UStaticMeshComponent*
		constexpr auto Floor3 = 0x240; // UStaticMeshComponent*
		constexpr auto Floor4 = 0x248; // UStaticMeshComponent*
		constexpr auto Floor5 = 0x250; // UStaticMeshComponent*
		constexpr auto Panel = 0x258; // UStaticMeshComponent*
		constexpr auto Cube4 = 0x260; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x268; // USceneComponent*
		constexpr auto Floors = 0x270; // TArray<UActorComponent*>
		constexpr auto FloorToGo = 0x280; // int32_t
		constexpr auto Floor = 0x284; // int32_t
		constexpr auto Elevator = 0x288; // AElevator_C*
	}

	namespace n_UCustomVoiceButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_LeftClick_4 = 0x268; // UButton*
		constexpr auto Button_RightClick_4 = 0x270; // UButton*
		constexpr auto Changer = 0x278; // UOverlay*
		constexpr auto ComboBox_InputDevice_2 = 0x280; // UComboBoxString*
		constexpr auto Image_5 = 0x288; // UImage*
		constexpr auto Image_6 = 0x290; // UImage*
		constexpr auto Image_83 = 0x298; // UImage*
		constexpr auto SafeZone_71 = 0x2a0; // USafeZone*
		constexpr auto SafeZone_278 = 0x2a8; // USafeZone*
		constexpr auto TextBlock_154 = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_SET_4 = 0x2b8; // UTextBlock*
		constexpr auto EventDispatcher_Left = 0x2c0; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_Right = 0x2d0; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_FocusedStyle = 0x2e0; // FMulticastInlineDelegate
		constexpr auto NewVar_1 = 0x2f0; // FSlateBrush
		constexpr auto NewVar_2 = 0x378; // FSlateBrush
		constexpr auto EventDispatcher_SetMicrophone = 0x400; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_Open = 0x410; // FMulticastInlineDelegate
		constexpr auto Focus? = 0x420; // bool
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UWBP_SelfInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChangeIcons_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_LeaveLobby = 0x270; // UButton*
		constexpr auto Image_BG = 0x278; // UImage*
		constexpr auto Image_Hover = 0x280; // UImage*
		constexpr auto Image_LeaderLobby = 0x288; // UImage*
		constexpr auto Image_SelfAvatar = 0x290; // UImage*
		constexpr auto Image_SelfAvatarBG = 0x298; // UImage*
		constexpr auto Image_SelfLeaveLobby_Icon = 0x2a0; // UImage*
		constexpr auto RetainerBox_1 = 0x2a8; // URetainerBox*
		constexpr auto Text_Nickname = 0x2b0; // UTextBlock*
		constexpr auto OnLeavePressed = 0x2b8; // FMulticastInlineDelegate
	}

	namespace n_UPerkKiller_C {
		constexpr auto UberGraphFrame = 0xd0; // FPointerToUberGraphFrame
		constexpr auto Killer = 0xd8; // AKillerMasterBP_C*
		constexpr auto CursedProp? = 0xe0; // bool
		constexpr auto CursedProp = 0xe8; // ABasePropBP_C*
		constexpr auto Props = 0xf0; // TArray<ABasePropBP_C*>
		constexpr auto Perk1Activated = 0x100; // bool
		constexpr auto Perk2Activated = 0x101; // bool
		constexpr auto Perk3Activated = 0x102; // bool
		constexpr auto Perk1LVL = 0x104; // int32_t
		constexpr auto Perk2LVL = 0x108; // int32_t
		constexpr auto Perk3LVL = 0x10c; // int32_t
		constexpr auto ArrayOfLB = 0x110; // TArray<ALootBox_C*>
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UEOSCoreStatsQueryStats {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UNewATPCCameraFOVObject {
		constexpr auto IsOverride = 0x38; // bool
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UIsaacLobbyAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4a8; // FAnimNode_StateMachine
		constexpr auto LPM = 0x558; // ALobbyPlayerMesh_C*
		constexpr auto MvpAnim? = 0x560; // bool
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_APC_PropnightMainMenu {
		constexpr auto CBuildID = 0x5b0; // FString
	}

	namespace n_UNewsurv_Intro_A_Pose_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x348; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4a8; // FAnimNode_StateMachine
		constexpr auto MvpAnim? = 0x558; // bool
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_AHUD_PropHunt_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x318; // USceneComponent*
		constexpr auto Timeline_0_Alpha_BD8370D34F8ED99EECACF0A572FB9267 = 0x320; // float
		constexpr auto Timeline_0__Direction_BD8370D34F8ED99EECACF0A572FB9267 = 0x324; // ETimelineDirection
		constexpr auto Timeline_1 = 0x328; // UTimelineComponent*
		constexpr auto SurvivorProgress = 0x330; // USurvivalProgressBarWidget_C*
		constexpr auto SurvivorSkillCheck = 0x338; // USurvivalSkillCheckWidget_C*
		constexpr auto KillerCooldown = 0x340; // UCoolDownWBP_C*
		constexpr auto MiniLobby = 0x348; // UW_MiniLobby_C*
		constexpr auto AlarmWidget = 0x350; // UAlarmsCountWBP_C*
		constexpr auto SurvStatus = 0x358; // USurvStatusWBP_C*
		constexpr auto SurvivorInventory = 0x360; // USurvivalInventoryWidget_C*
		constexpr auto SurvivorAbility = 0x368; // UCoolDownWBP_C*
		constexpr auto GameResult = 0x370; // UW_GameResult_C*
		constexpr auto DevLab = 0x378; // UW_DevLab_C*
		constexpr auto InteractableButtonSurv = 0x380; // UInteractableButtonsWidget_C*
		constexpr auto KillerFlash = 0x388; // UFlashWidget_C*
		constexpr auto AmmoKiller = 0x390; // UAmmoKillerWBP_C*
		constexpr auto InteractableButtonKiller = 0x398; // UInteractableButtonsWidget_C*
		constexpr auto CrosshairKiller = 0x3a0; // UCrossHairWBP_C*
		constexpr auto WaypointWidget = 0x3a8; // UWaypointWidget_C*
		constexpr auto KillerMarked = 0x3b0; // UKillerMarked_C*
		constexpr auto PlayerScore = 0x3b8; // UPlayersScore_Tab_Stats_C*
		constexpr auto ChatWindow = 0x3c0; // UChatWindow_C*
		constexpr auto Settings = 0x3c8; // UGeneralSettingWBP_C*
		constexpr auto VoiceChat = 0x3d0; // UVoiceChatWindow_C*
		constexpr auto PauseMenu = 0x3d8; // UPauseMenu_C*
		constexpr auto SurvEffectsUI = 0x3e0; // USurvivalEffectsUI_C*
		constexpr auto SurvStaminaBar = 0x3e8; // USurvivalStaminaBarWidget_C*
		constexpr auto bLocked = 0x3f0; // bool
		constexpr auto EffectWindow = 0x3f8; // UWBP_EffectsWindow_C*
		constexpr auto SoundChat = 0x400; // USoundChat_C*
		constexpr auto EffectsHUD = 0x408; // UEffectsHUDWidget_C*
		constexpr auto EffectBloodLast = 0x410; // UWBP_BDRush_Killer_C*
		constexpr auto LobbyEffects = 0x418; // ULobbyEffectsHUD_C*
		constexpr auto FartTimer = 0x420; // UFartTimer_C*
		constexpr auto VictoryScreen = 0x428; // UW_VictoryScreen_C*
		constexpr auto NewVar_1 = 0x430; // UW_LoadingScreen_C*
		constexpr auto LoadingScreen = 0x438; // UW_LoadingScreen_C*
		constexpr auto WidgetTip = 0x440; // UWBP_Tip_C*
		constexpr auto WidgetEliminationScreen = 0x448; // UWBP_EliminatedScreen_C*
		constexpr auto Spectator = 0x450; // UWB_Spectator_C*
		constexpr auto LastChanceWidget = 0x458; // UWBP_LastChance_C*
		constexpr auto Killer_HitmarkAlarmDone = 0x460; // UWBP_HitMark_KillerAlarm_C*
		constexpr auto MVPScreen = 0x468; // UWBP_MVPScreen_C*
		constexpr auto MatchCanceled = 0x470; // UW_MatchCanceled_C*
		constexpr auto Tutorial? = 0x478; // bool
		constexpr auto VictoryScreenTutorial = 0x480; // UW_VictoryScreen_Tutorial_C*
		constexpr auto IsGameLoading = 0x488; // bool
		constexpr auto InGameBannerScreen = 0x490; // UWBP_InGameBannerScreen_C*
		constexpr auto IntroUI = 0x498; // UWBP_IntroUI_C*
		constexpr auto IsGameLoaded = 0x4a0; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_AGrenade_C {
		constexpr auto DefaultSceneRoot = 0x220; // USceneComponent*
		constexpr auto Rarity = 0x228; // Rarity
		constexpr auto CharIgnore = 0x230; // ASurvivorMasterBP_C*
	}

	namespace n_UAstral_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Timer = 0xf0; // float
		constexpr auto Casted? = 0xf4; // bool
		constexpr auto postProcessMonochrome = 0x100; // FPostProcessSettings
		constexpr auto postProcessNormal = 0x650; // FPostProcessSettings
		constexpr auto TransitionTime = 0xba0; // float
		constexpr auto TurnOnDuration = 0xba4; // float
		constexpr auto TurnOffDuration = 0xba8; // float
		constexpr auto TurnOffAttackDuration = 0xbac; // float
		constexpr auto ErodeSubtractDef = 0xbb0; // float
		constexpr auto KillerDynMat1 = 0xbb8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat2 = 0xbc0; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat3 = 0xbc8; // UMaterialInstanceDynamic*
		constexpr auto Float1 = 0xbd0; // float
		constexpr auto TransitionOn = 0xbd4; // bool
		constexpr auto TransitionOff = 0xbd5; // bool
		constexpr auto KillerDynMatInvis = 0xbd8; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMatInvisFPP = 0xbe0; // UMaterialInstanceDynamic*
		constexpr auto InvisRefractionTPP = 0xbe8; // float
		constexpr auto InvisRefractionFPP = 0xbec; // float
		constexpr auto InvisRefractionZero = 0xbf0; // float
		constexpr auto KillerDynMatFPP = 0xbf8; // UMaterialInstanceDynamic*
		constexpr auto IsAfterAttack = 0xc00; // bool
		constexpr auto HamDynMatFPP = 0xc08; // UMaterialInstanceDynamic*
		constexpr auto HamDynMatInvisFPP = 0xc10; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat4 = 0xc18; // UMaterialInstanceDynamic*
		constexpr auto Ham Mat Tpp = 0xc20; // UMaterialInstanceDynamic*
		constexpr auto HamDynInvisTPP = 0xc28; // UMaterialInstanceDynamic*
		constexpr auto Keymaster = 0xc30; // bool
	}

	namespace n_USoundChatSounds_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Sound1 = 0xb8; // TArray<FFMODEventInstance>
		constexpr auto Sound2 = 0xc8; // TArray<FFMODEventInstance>
		constexpr auto Block? = 0xd8; // bool
		constexpr auto SoundCount = 0xdc; // int32_t
		constexpr auto CD? = 0xe0; // bool
		constexpr auto OnStartedCD = 0xe8; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreFriendsSendInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAC_BattlEye_Server_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto BEServer = 0xb8; // UO_BEServer_C*
		constexpr auto BEPlayers = 0xc0; // TMap<int32_t, APC_PropHunt_C*>
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_USurvivalHealthWidget_C {
		constexpr auto Health = 0x260; // UTextBlock*
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UWBP_DetailedFriendList_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChangeContent_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_Friends = 0x270; // UButton*
		constexpr auto Button_Invites = 0x278; // UButton*
		constexpr auto Button_Search = 0x280; // UButton*
		constexpr auto EditableTextBox_Hint = 0x288; // UEditableTextBox*
		constexpr auto EditableTextBox_SearchLine = 0x290; // UEditableTextBox*
		constexpr auto Image = 0x298; // UImage*
		constexpr auto Image_105 = 0x2a0; // UImage*
		constexpr auto Image_305 = 0x2a8; // UImage*
		constexpr auto Image_396 = 0x2b0; // UImage*
		constexpr auto Image_BG = 0x2b8; // UImage*
		constexpr auto Image_FriendsBtnBG = 0x2c0; // UImage*
		constexpr auto Image_InvetesBtnBG = 0x2c8; // UImage*
		constexpr auto Text_InvitesBtn = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_FriendsBtn = 0x2d8; // UTextBlock*
		constexpr auto WBP_FriendsComboBox_Offline = 0x2e0; // UWBP_FriendsComboBox_C*
		constexpr auto WBP_FriendsComboBox_Online = 0x2e8; // UWBP_FriendsComboBox_C*
		constexpr auto WBP_FriendsComboBox_Search = 0x2f0; // UWBP_FriendsComboBox_C*
		constexpr auto WidgetSwitcher_Content = 0x2f8; // UWidgetSwitcher*
		constexpr auto Friends = 0x300; // TArray<FSteamFriend>
		constexpr auto C_FRIENDS_PAGE = 0x310; // int32_t
		constexpr auto C_INVITES_PAGE = 0x314; // int32_t
		constexpr auto OnHide = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_UWBP_AlarmsCounter_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Done_Anim = 0x268; // UWidgetAnimation*
		constexpr auto TextBlock_Obj = 0x270; // UTextBlock*
		constexpr auto WBP_AlarmCounterItem_1 = 0x278; // UWBP_AlarmCounterItem_C*
		constexpr auto WBP_AlarmCounterItem_2 = 0x280; // UWBP_AlarmCounterItem_C*
		constexpr auto WBP_AlarmCounterItem_3 = 0x288; // UWBP_AlarmCounterItem_C*
		constexpr auto WBP_AlarmCounterItem_4 = 0x290; // UWBP_AlarmCounterItem_C*
		constexpr auto WBP_AlarmCounterItem_5 = 0x298; // UWBP_AlarmCounterItem_C*
		constexpr auto ItemsArray = 0x2a0; // TArray<UWBP_AlarmCounterItem_C*>
		constexpr auto CurrentIndex = 0x2b0; // int32_t
		constexpr auto OnAlarmsDone = 0x2b8; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_ALuminAROrigin {
		constexpr auto MRMeshComponent = 0x220; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x228; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x230; // UMaterialInterface*
	}

	namespace n_AATPCArrowDebugActor {
		constexpr auto SceneRootcomponent = 0x220; // USceneComponent*
		constexpr auto ArrowComponent = 0x228; // UArrowComponent*
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UEOSCoreConnectUnlinkAccount {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3a8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b0; // bool
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x468; // bool
		constexpr auto bAttachEnd = 0x469; // bool
		constexpr auto AttachEndTo = 0x470; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x498; // FName
		constexpr auto EndLocation = 0x4a0; // FVector
		constexpr auto CableLength = 0x4ac; // float
		constexpr auto NumSegments = 0x4b0; // int32_t
		constexpr auto SubstepTime = 0x4b4; // float
		constexpr auto SolverIterations = 0x4b8; // int32_t
		constexpr auto bEnableStiffness = 0x4bc; // bool
		constexpr auto bUseSubstepping = 0x4bd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4be; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4bf; // bool
		constexpr auto bEnableCollision = 0x4c0; // bool
		constexpr auto CollisionFriction = 0x4c4; // float
		constexpr auto CableForce = 0x4c8; // FVector
		constexpr auto CableGravityScale = 0x4d4; // float
		constexpr auto CableWidth = 0x4d8; // float
		constexpr auto NumSides = 0x4dc; // int32_t
		constexpr auto TileMaterial = 0x4e0; // float
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UEffectsHUDWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutLong = 0x268; // UWidgetAnimation*
		constexpr auto FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto FadeIn = 0x278; // UWidgetAnimation*
		constexpr auto Black = 0x280; // UImage*
		constexpr auto Block? = 0x288; // bool
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UVampireJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UChatWindowText_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto InvalidationBox_85 = 0x278; // UInvalidationBox*
		constexpr auto MessageBox = 0x280; // UHorizontalBox*
		constexpr auto Text = 0x288; // URichTextBlock*
		constexpr auto TypeMessage = 0x290; // UTextBlock*
		constexpr auto NicknameText = 0x298; // FText
		constexpr auto MessageText = 0x2b0; // FText
		constexpr auto ChatTypeMessage = 0x2c8; // FText
		constexpr auto Killer? = 0x2e0; // bool
		constexpr auto Normal = 0x2e8; // FSlateColor
		constexpr auto Killer = 0x310; // FSlateColor
		constexpr auto HidingTimerHandler = 0x338; // FTimerHandle
		constexpr auto DisplayingTimerHandler = 0x340; // FTimerHandle
		constexpr auto Interrupt = 0x348; // bool
		constexpr auto HiddenTimeAnimation = 0x34c; // float
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UMagicLeapMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x200; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x210; // bool
		constexpr auto MeshType = 0x211; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x218; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x220; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x224; // float
		constexpr auto Planarize = 0x228; // bool
		constexpr auto DisconnectedSectionArea = 0x22c; // float
		constexpr auto RequestNormals = 0x230; // bool
		constexpr auto RequestVertexConfidence = 0x231; // bool
		constexpr auto VertexColorMode = 0x232; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x268; // bool
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x278; // int32_t
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x440; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x448; // char : 1
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto U = 0x450; // float
		constexpr auto UL = 0x454; // float
		constexpr auto V = 0x458; // float
		constexpr auto VL = 0x45c; // float
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UEOSCoreUserInfoQueryUserInfoByDisplayName {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_ASurvivorMasterBP_C {
		constexpr auto UberGraphFrame = 0x4e0; // FPointerToUberGraphFrame
		constexpr auto SoundIndicatorWidget = 0x4e8; // UWidgetComponent*
		constexpr auto ThrowArrow = 0x4f0; // UArrowComponent*
		constexpr auto SurvHP = 0x4f8; // UWidgetComponent*
		constexpr auto FMODPropShiftLoopAudio = 0x500; // UFMODAudioComponent*
		constexpr auto PerkSurv = 0x508; // UPerkSurv_C*
		constexpr auto FPPCamera = 0x510; // UCameraComponent*
		constexpr auto SpringArm1 = 0x518; // USpringArmComponent*
		constexpr auto StaticMeshNiagaraDestructable = 0x520; // UNiagaraComponent*
		constexpr auto SurvPropDestruction = 0x528; // USurvPropDestruction_C*
		constexpr auto FMODPropBurningAudio = 0x530; // UFMODAudioComponent*
		constexpr auto NicknameWidget = 0x538; // UWidgetComponent*
		constexpr auto SurvRoleWidget = 0x540; // UWidgetComponent*
		constexpr auto StaticMeshNiagaraCursed = 0x548; // UNiagaraComponent*
		constexpr auto SkeletalMeshNiagara = 0x550; // UNiagaraComponent*
		constexpr auto StaticMeshNiagara = 0x558; // UNiagaraComponent*
		constexpr auto PropArm = 0x560; // USpringArmComponent*
		constexpr auto PropFPPCamera = 0x568; // UChildActorComponent*
		constexpr auto GraffityMaker = 0x570; // UGraffityMaker_C*
		constexpr auto FMODOnceVoices = 0x578; // UFMODAudioComponent*
		constexpr auto FMODLoopVoices = 0x580; // UFMODAudioComponent*
		constexpr auto FMODChair = 0x588; // UFMODAudioComponent*
		constexpr auto StaticMeshContainer = 0x590; // USphereComponent*
		constexpr auto PlayerStaticMesh = 0x598; // UStaticMeshComponent*
		constexpr auto StunScene = 0x5a0; // USceneComponent*
		constexpr auto SoundChatSounds = 0x5a8; // USoundChatSounds_C*
		constexpr auto FPPCamerasPlace = 0x5b0; // USceneComponent*
		constexpr auto CheckInteractable = 0x5b8; // UCheckInteractable_C*
		constexpr auto AlarmsWidgetSize = 0x5c0; // UAlarmsWidgetSize_C*
		constexpr auto Cable = 0x5c8; // UCableComponent*
		constexpr auto FMODAudio2 = 0x5d0; // UFMODAudioComponent*
		constexpr auto ItemWorker = 0x5d8; // UItemWorker_C*
		constexpr auto FMODAudio1 = 0x5e0; // UFMODAudioComponent*
		constexpr auto InvisFPPMesh = 0x5e8; // USkeletalMeshComponent*
		constexpr auto InvisMesh = 0x5f0; // USkeletalMeshComponent*
		constexpr auto VoipManager = 0x5f8; // UVoipManagerComponent*
		constexpr auto VoipAudio = 0x600; // UVoipAudioComponent*
		constexpr auto DropItemPosition = 0x608; // USceneComponent*
		constexpr auto InteractBox = 0x610; // UBoxComponent*
		constexpr auto InteractBoxContainer = 0x618; // USceneComponent*
		constexpr auto SpotLight = 0x620; // USpotLightComponent*
		constexpr auto AudioListener = 0x628; // USceneComponent*
		constexpr auto ATPCCamera = 0x630; // UATPCCameraComponent*
		constexpr auto Scene = 0x638; // USceneComponent*
		constexpr auto SurvFart = 0x640; // USurvFart_C*
		constexpr auto SpringArm = 0x648; // USpringArmComponent*
		constexpr auto Regeneration1 = 0x650; // URegeneration_C*
		constexpr auto SurvivorSoundMaster = 0x658; // USurvivorSoundsMaster-2D_C*
		constexpr auto SurvInteraction = 0x660; // USurvivorInteraction_C*
		constexpr auto DefaultPointProp = 0x668; // USceneComponent*
		constexpr auto Box1 = 0x670; // UBoxComponent*
		constexpr auto FMODPropLoopAudio = 0x678; // UFMODAudioComponent*
		constexpr auto FPPMeshContainer = 0x680; // USceneComponent*
		constexpr auto FMODPropHitAudio = 0x688; // UFMODAudioComponent*
		constexpr auto CameraGrapplePoint = 0x690; // USceneComponent*
		constexpr auto FPPMesh = 0x698; // USkeletalMeshComponent*
		constexpr auto FollowCamera = 0x6a0; // UCameraComponent*
		constexpr auto FmodAudio = 0x6a8; // UFMODAudioComponent*
		constexpr auto PostProcess = 0x6b0; // UPostProcessComponent*
		constexpr auto FootprintComponent = 0x6b8; // UFootprintComponent_C*
		constexpr auto SmoothSync = 0x6c0; // USmoothSync*
		constexpr auto Timeline_5_NewTrack_0_C2263A7A48628D8CF8B3A18298FB69AE = 0x6c8; // float
		constexpr auto Timeline_5__Direction_C2263A7A48628D8CF8B3A18298FB69AE = 0x6cc; // ETimelineDirection
		constexpr auto Timeline_6 = 0x6d0; // UTimelineComponent*
		constexpr auto Timeline_4_Alpha_4D4D07A64AF531E051135BB4A10EAAE4 = 0x6d8; // float
		constexpr auto Timeline_4__Direction_4D4D07A64AF531E051135BB4A10EAAE4 = 0x6dc; // ETimelineDirection
		constexpr auto Timeline_5 = 0x6e0; // UTimelineComponent*
		constexpr auto Timeline_3_Alpha_EDD8D8BB42BC6EFFD204ACB3F90E9A23 = 0x6e8; // float
		constexpr auto Timeline_3__Direction_EDD8D8BB42BC6EFFD204ACB3F90E9A23 = 0x6ec; // ETimelineDirection
		constexpr auto Timeline_4 = 0x6f0; // UTimelineComponent*
		constexpr auto ZoomOutTimeline_Alpha_56FD6C724DFA377C7F5A27A71D58F2DB = 0x6f8; // float
		constexpr auto ZoomOutTimeline__Direction_56FD6C724DFA377C7F5A27A71D58F2DB = 0x6fc; // ETimelineDirection
		constexpr auto ZoomOutTimeline = 0x700; // UTimelineComponent*
		constexpr auto Timeline_0_Alpha_D8903D0E43C9C9AC8C494192B318AADB = 0x708; // float
		constexpr auto Timeline_0__Direction_D8903D0E43C9C9AC8C494192B318AADB = 0x70c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x710; // UTimelineComponent*
		constexpr auto DropItemHold__Direction_5E24FDAC43B39BF64E2B2E89568AAD81 = 0x718; // ETimelineDirection
		constexpr auto DropItemHold = 0x720; // UTimelineComponent*
		constexpr auto DeathEffectTimeline_Lerp_1AD56D5F482733F5B7FF21945C716C1A = 0x728; // float
		constexpr auto DeathEffectTimeline__Direction_1AD56D5F482733F5B7FF21945C716C1A = 0x72c; // ETimelineDirection
		constexpr auto DeathEffectTimeline = 0x730; // UTimelineComponent*
		constexpr auto Timeline_2_Alpha_F590837A4D182D3C48036EA9ACD1FE91 = 0x738; // float
		constexpr auto Timeline_2__Direction_F590837A4D182D3C48036EA9ACD1FE91 = 0x73c; // ETimelineDirection
		constexpr auto Timeline_3 = 0x740; // UTimelineComponent*
		constexpr auto BlurTimeline_Alpha_E678B1E44A3CA3CCBC33F2870F4D589F = 0x748; // float
		constexpr auto BlurTimeline__Direction_E678B1E44A3CA3CCBC33F2870F4D589F = 0x74c; // ETimelineDirection
		constexpr auto BlurTimeline = 0x750; // UTimelineComponent*
		constexpr auto CapsuleTimeline_Alpha_3931415B4DA717316CBCC4B2447C088F = 0x758; // float
		constexpr auto CapsuleTimeline__Direction_3931415B4DA717316CBCC4B2447C088F = 0x75c; // ETimelineDirection
		constexpr auto CapsuleTimeline = 0x760; // UTimelineComponent*
		constexpr auto TimelineFOV_Alpha_BB6E0F3D4368D461E87B1DA7C8A0706C = 0x768; // float
		constexpr auto TimelineFOV__Direction_BB6E0F3D4368D461E87B1DA7C8A0706C = 0x76c; // ETimelineDirection
		constexpr auto TimelineFOV = 0x770; // UTimelineComponent*
		constexpr auto CameraInteract_NewTrack_0_D42A0B284E3720C10D21618BBE3F6A57 = 0x778; // float
		constexpr auto CameraInteract__Direction_D42A0B284E3720C10D21618BBE3F6A57 = 0x77c; // ETimelineDirection
		constexpr auto CameraInteract = 0x780; // UTimelineComponent*
		constexpr auto Rope_NewTrack_0_79166F2E47E56ABEB7D4D381CFC3C44E = 0x788; // float
		constexpr auto Rope__Direction_79166F2E47E56ABEB7D4D381CFC3C44E = 0x78c; // ETimelineDirection
		constexpr auto Rope = 0x790; // UTimelineComponent*
		constexpr auto HitTimeline_Pitch_033072B4460D8031F3574FA1B2C15E3C = 0x798; // float
		constexpr auto HitTimeline__Direction_033072B4460D8031F3574FA1B2C15E3C = 0x79c; // ETimelineDirection
		constexpr auto HitTimeline = 0x7a0; // UTimelineComponent*
		constexpr auto Timeline_1_NewTrack_0_28424CF84D5D555B496C44BDBC6E5372 = 0x7a8; // float
		constexpr auto Timeline_1__Direction_28424CF84D5D555B496C44BDBC6E5372 = 0x7ac; // ETimelineDirection
		constexpr auto Timeline_2 = 0x7b0; // UTimelineComponent*
		constexpr auto PPColorChange_Lerp_E61BC77648192EB1FD5307BB391141EA = 0x7b8; // float
		constexpr auto PPColorChange__Direction_E61BC77648192EB1FD5307BB391141EA = 0x7bc; // ETimelineDirection
		constexpr auto PPColorChange = 0x7c0; // UTimelineComponent*
		constexpr auto TimelineJump_Jump_74BC80A542EA939C26100EB00C9A924D = 0x7c8; // float
		constexpr auto TimelineJump__Direction_74BC80A542EA939C26100EB00C9A924D = 0x7cc; // ETimelineDirection
		constexpr auto TimelineJump = 0x7d0; // UTimelineComponent*
		constexpr auto LerpAlphaTimeline_Lerp_281CB55F46C7C7F578BF9F88611AAA8F = 0x7d8; // float
		constexpr auto LerpAlphaTimeline__Direction_281CB55F46C7C7F578BF9F88611AAA8F = 0x7dc; // ETimelineDirection
		constexpr auto LerpAlphaTimeline = 0x7e0; // UTimelineComponent*
		constexpr auto BaseTurnRate = 0x7e8; // float
		constexpr auto BaseLookUpRate = 0x7ec; // float
		constexpr auto RunSpeed = 0x7f0; // float
		constexpr auto CrouchSpeed = 0x7f4; // float
		constexpr auto WalkSpeed = 0x7f8; // float
		constexpr auto CrawlSpeed = 0x7fc; // float
		constexpr auto Health = 0x800; // int32_t
		constexpr auto Hitted? = 0x804; // bool
		constexpr auto MeleeSpeedUpPercent = 0x808; // float
		constexpr auto MovementType = 0x80c; // MovementTypeEnum
		constexpr auto SpeedUpAfterMeleeHit? = 0x80d; // bool
		constexpr auto ImProp? = 0x80e; // bool
		constexpr auto forwardVector = 0x810; // FVector
		constexpr auto RightVector = 0x81c; // FVector
		constexpr auto Item = 0x828; // AActor*
		constexpr auto ItemsInventory = 0x830; // TArray<AItemsBPHand_C*>
		constexpr auto ItemToSpawn = 0x840; // AItemsBPHand_C*
		constexpr auto InventoryIndex = 0x848; // int32_t
		constexpr auto StartRotate? = 0x84c; // bool
		constexpr auto DeltaSeconds = 0x850; // float
		constexpr auto StopMove? = 0x854; // bool
		constexpr auto LerpAlpha = 0x858; // float
		constexpr auto ItemFound? = 0x85c; // bool
		constexpr auto JumpVector = 0x860; // FVector
		constexpr auto HealingProgress = 0x86c; // float
		constexpr auto EmptyInventory? = 0x870; // bool
		constexpr auto AxisRotator = 0x874; // FRotator
		constexpr auto ReanimateProgress = 0x880; // float
		constexpr auto Grapple? = 0x884; // bool
		constexpr auto OnChair? = 0x885; // bool
		constexpr auto ZeroSpeed = 0x888; // float
		constexpr auto RightLeft = 0x88c; // float
		constexpr auto PressA? = 0x890; // bool
		constexpr auto PressD? = 0x891; // bool
		constexpr auto BreakFreeProgress = 0x894; // float
		constexpr auto Shake? = 0x898; // bool
		constexpr auto KillerActor = 0x8a0; // AActor*
		constexpr auto HeartbeatSound1 = 0x8a8; // USoundBase*
		constexpr auto NewDelay = 0x8b0; // float
		constexpr auto change? = 0x8b4; // bool
		constexpr auto FinalDelay = 0x8b8; // float
		constexpr auto NewCall? = 0x8bc; // bool
		constexpr auto PrevDelay = 0x8c0; // float
		constexpr auto SurvivalProgressBar = 0x8c8; // USurvivalProgressBarWidget_C*
		constexpr auto SurvivalSkillCheck = 0x8d0; // USurvivalSkillCheckWidget_C*
		constexpr auto ProgressUI = 0x8d8; // float
		constexpr auto FullHealTime = 0x8dc; // float
		constexpr auto FullReanimateTime = 0x8e0; // float
		constexpr auto CurrentHelpGetOutChair = 0x8e4; // float
		constexpr auto FullHelpGetOutChair = 0x8e8; // float
		constexpr auto FullOpenExit = 0x8ec; // float
		constexpr auto FullReloaingAlarm = 0x8f0; // float
		constexpr auto CurrentGetOutChair = 0x8f4; // float
		constexpr auto ChairActor = 0x8f8; // AActor*
		constexpr auto FullGetOutChair = 0x900; // float
		constexpr auto RandomChance = 0x904; // int32_t
		constexpr auto SurvivalHealth = 0x908; // USurvivalHealthWidget_C*
		constexpr auto SurvivalInventory = 0x910; // USurvivalInventoryWidget_C*
		constexpr auto CurrentItem = 0x918; // AItemsBPHand_C*
		constexpr auto AddItem? = 0x920; // bool
		constexpr auto DeleteItem? = 0x921; // bool
		constexpr auto ItemSwitch? = 0x922; // bool
		constexpr auto ED_MovementType = 0x928; // FMulticastInlineDelegate
		constexpr auto SurvivalAbility = 0x938; // UCoolDownWBP_C*
		constexpr auto Ability1Reloading? = 0x940; // bool
		constexpr auto Ability2Reloading? = 0x941; // bool
		constexpr auto FullGetOutKillerHand = 0x944; // float
		constexpr auto FailedSkillCheck? = 0x948; // bool
		constexpr auto RandomSkillCheck? = 0x949; // bool
		constexpr auto CurrentAlarm = 0x950; // ANewAlarmBP_C*
		constexpr auto Skill1 = 0x958; // FString
		constexpr auto Skill2 = 0x968; // FString
		constexpr auto Skill3Rotate = 0x978; // FString
		constexpr auto Skill3Flashlight = 0x988; // FString
		constexpr auto Skill3Empty = 0x998; // FString
		constexpr auto KillingTime = 0x9a8; // float
		constexpr auto InteractableButtons = 0x9b0; // UInteractableButtonsWidget_C*
		constexpr auto AlarmText = 0x9b8; // FText
		constexpr auto ReanimateText = 0x9d0; // FText
		constexpr auto HealAllyText = 0x9e8; // FText
		constexpr auto HealSelfText = 0xa00; // FText
		constexpr auto OpenExitText = 0xa18; // FText
		constexpr auto PickUpText = 0xa30; // FText
		constexpr auto UpdateInteractable? = 0xa48; // bool
		constexpr auto FlashlightText = 0xa50; // FText
		constexpr auto RotateText = 0xa68; // FText
		constexpr auto RotateInteractableActive? = 0xa80; // bool
		constexpr auto BreakFreeText = 0xa88; // FString
		constexpr auto ChairInteractableActive? = 0xa98; // bool
		constexpr auto TorqueValue = 0xa9c; // float
		constexpr auto PropData = 0xaa0; // FPropData
		constexpr auto CurrentStamina = 0xb40; // float
		constexpr auto MaxHP = 0xb44; // int32_t
		constexpr auto IsOwner? = 0xb48; // bool
		constexpr auto CurrentFootwear = 0xb49; // EFootprintStyle
		constexpr auto StaminaBar = 0xb50; // USurvivalStaminaBarWidget_C*
		constexpr auto MaxStamina = 0xb58; // float
		constexpr auto StaminaActive? = 0xb5c; // bool
		constexpr auto PressedRun? = 0xb5d; // bool
		constexpr auto JumpButtonPressed? = 0xb5e; // bool
		constexpr auto SlowIncrease? = 0xb5f; // bool
		constexpr auto StaminaDecreaseAmountValue = 0xb60; // float
		constexpr auto StaminaJumpAmountValue = 0xb64; // float
		constexpr auto MaxValueProgressUI = 0xb68; // float
		constexpr auto StaticHit? = 0xb6c; // bool
		constexpr auto RotateInterpSpeed = 0xb70; // float
		constexpr auto CanJump? = 0xb74; // bool
		constexpr auto ImpulseThreshold = 0xb78; // float
		constexpr auto ImpulseThresholdMax = 0xb7c; // float
		constexpr auto VolumeSensitivity = 0xb80; // float
		constexpr auto MaxVolume = 0xb84; // float
		constexpr auto PropSoundActive? = 0xb88; // bool
		constexpr auto PropSpeed = 0xb8c; // float
		constexpr auto TestSwitchActive? = 0xb90; // bool
		constexpr auto CurrentCharacterSpeed = 0xb94; // float
		constexpr auto PropTempValue = 0xb98; // float
		constexpr auto CalculateRayHitActor = 0xba0; // AActor*
		constexpr auto HeartbeatSound2 = 0xba8; // USoundBase*
		constexpr auto StartRegeneration? = 0xbb0; // bool
		constexpr auto StartSelfReanimate? = 0xbb1; // bool
		constexpr auto SelfReanimateValue = 0xbb4; // float
		constexpr auto SelfReanimateFullValue = 0xbb8; // float
		constexpr auto CrawlStatusStart? = 0xbbc; // bool
		constexpr auto StaminaIncreaseAmountValue = 0xbc0; // float
		constexpr auto NewOutline = 0xbc8; // AActor*
		constexpr auto OldOutline = 0xbd0; // AActor*
		constexpr auto CloseColorOutline = 0xbd8; // FLinearColor
		constexpr auto MaterialOutline = 0xbe8; // UMaterialInstanceDynamic*
		constexpr auto OpenColorOutline = 0xbf0; // FLinearColor
		constexpr auto DefaultColorOutline = 0xc00; // FLinearColor
		constexpr auto LastExitActor = 0xc10; // AActor*
		constexpr auto ChasingFMODSound = 0xc18; // FFMODEventInstance
		constexpr auto AlarmRef = 0xc20; // ANewAlarmBP_C*
		constexpr auto MaxHealthCalculateValue = 0xc28; // float
		constexpr auto GameStart? = 0xc2c; // bool
		constexpr auto KillerAmbientValue = 0xc30; // float
		constexpr auto ZeroStamina? = 0xc34; // bool
		constexpr auto LevelAmbient = 0xc38; // FFMODEventInstance
		constexpr auto FreeCam? = 0xc40; // bool
		constexpr auto RestoreHealth = 0xc44; // int32_t
		constexpr auto JumpAlpha = 0xc48; // float
		constexpr auto TempVector = 0xc4c; // FVector
		constexpr auto EscapeText = 0xc58; // FText
		constexpr auto ActiveCamera = 0xc70; // UCameraComponent*
		constexpr auto FPP? = 0xc78; // bool
		constexpr auto SurvTransform = 0xc80; // UFMODAudioComponent*
		constexpr auto Flashlight = 0xc88; // UFMODAudioComponent*
		constexpr auto MouseSensitive = 0xc90; // float
		constexpr auto KillerAstral? = 0xc94; // bool
		constexpr auto ReloadingAlarm? = 0xc95; // bool
		constexpr auto Points = 0xc98; // int32_t
		constexpr auto EndJump? = 0xc9c; // bool
		constexpr auto WaypointWidget = 0xca0; // UWaypointWidget_C*
		constexpr auto Skill4 = 0xca8; // FString
		constexpr auto Ability4Reloading? = 0xcb8; // bool
		constexpr auto OpenDoor? = 0xcb9; // bool
		constexpr auto MeleeAttack? = 0xcba; // bool
		constexpr auto RangeAttack? = 0xcbb; // bool
		constexpr auto RangeSpeedUpPercent = 0xcbc; // float
		constexpr auto SpeedUpAfterRangeHit? = 0xcc0; // bool
		constexpr auto MaxWalkSpeed = 0xcc4; // float
		constexpr auto ImHealing? = 0xcc8; // bool
		constexpr auto MaxHPForRegeneration = 0xccc; // int32_t
		constexpr auto UseFlashlight? = 0xcd0; // bool
		constexpr auto Escape? = 0xcd1; // bool
		constexpr auto Temp2Vector = 0xcd4; // FVector
		constexpr auto RotateLerp = 0xce0; // float
		constexpr auto RotateHitted? = 0xce4; // bool
		constexpr auto ImHealingAlly? = 0xce5; // bool
		constexpr auto NormalColor = 0xcf0; // FVector4
		constexpr auto MonochromeColor = 0xd00; // FVector4
		constexpr auto GetReady? = 0xd10; // bool
		constexpr auto HelpGetOutChair? = 0xd11; // bool
		constexpr auto DamageType = 0xd12; // DamageTypeEnum
		constexpr auto BleedingText = 0xd18; // FText
		constexpr auto KnifeInTheBody? = 0xd30; // bool
		constexpr auto MaxPullOut = 0xd34; // float
		constexpr auto CurrentPullOut = 0xd38; // float
		constexpr auto HeadRotation = 0xd3c; // FRotator
		constexpr auto Move? = 0xd48; // bool
		constexpr auto HealingMe? = 0xd49; // bool
		constexpr auto SurvStateEnum = 0xd4a; // SurvStateEnum
		constexpr auto StartRotateProp? = 0xd4b; // bool
		constexpr auto RotateProp = 0xd4c; // FRotator
		constexpr auto ItemVar = 0xd58; // AItemsBPHand_C*
		constexpr auto ItemSpawnIndex = 0xd60; // int32_t
		constexpr auto SpawnItemLocation = 0xd70; // FTransform
		constexpr auto BreakFreeFull? = 0xda0; // bool
		constexpr auto YawMod = 0xda4; // float
		constexpr auto SurvDynMat1 = 0xda8; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat2 = 0xdb0; // UMaterialInstanceDynamic*
		constexpr auto SurvDynMat3 = 0xdb8; // UMaterialInstanceDynamic*
		constexpr auto DeathEffectTime = 0xdc0; // float
		constexpr auto DeathEffectDuration = 0xdc4; // float
		constexpr auto DeathEffectTimer = 0xdc8; // FTimerHandle
		constexpr auto Float1 = 0xdd0; // float
		constexpr auto SoundsStop? = 0xdd4; // bool
		constexpr auto AllSurvs = 0xdd8; // TArray<ASurvivorMasterBP_C*>
		constexpr auto SurvBodyHitMaterial = 0xde8; // UMaterialInterface*
		constexpr auto SurvPastedClothHitMaterial = 0xdf0; // UMaterialInterface*
		constexpr auto SurvClothHitMaterial = 0xdf8; // UMaterialInterface*
		constexpr auto SurvBodyDefaultMaterial = 0xe00; // UMaterialInterface*
		constexpr auto SurvPastedClothDefaultMaterial = 0xe08; // UMaterialInterface*
		constexpr auto SurvClothDefaultMaterial = 0xe10; // UMaterialInterface*
		constexpr auto HUDRef = 0xe18; // AHUD_PropHunt_C*
		constexpr auto Allow Voice = 0xe20; // bool
		constexpr auto VoiceActive? = 0xe21; // bool
		constexpr auto EnergyDrinkBoost = 0xe24; // float
		constexpr auto Boosted? = 0xe28; // bool
		constexpr auto Invulnerability? = 0xe29; // bool
		constexpr auto InvulnerabilityTime = 0xe2c; // float
		constexpr auto LootboxShopText = 0xe30; // FText
		constexpr auto BeginPlayOver? = 0xe48; // bool
		constexpr auto CoinText = 0xe50; // FString
		constexpr auto ScoreText = 0xe60; // FText
		constexpr auto LastHittedSurv = 0xe78; // ASurvivorMasterBP_C*
		constexpr auto HelpLeader? = 0xe80; // bool
		constexpr auto StartPos = 0xe84; // FVector
		constexpr auto TargetPos = 0xe90; // FVector
		constexpr auto DistanceForGraple = 0xe9c; // float
		constexpr auto MovedDistance = 0xea0; // float
		constexpr auto Speed = 0xea4; // float
		constexpr auto InGraple = 0xea8; // bool
		constexpr auto HookInHands = 0xea9; // bool
		constexpr auto HeightCurve = 0xeb0; // UCurveFloat*
		constexpr auto SurvEffectsUI = 0xeb8; // USurvivalEffectsUI_C*
		constexpr auto SurvClass = 0xec0; // SurvClass
		constexpr auto KillerSee? = 0xec1; // bool
		constexpr auto BreakFreeProgressSaved = 0xec4; // float
		constexpr auto KillerType = 0xec8; // int32_t
		constexpr auto SelfReanimateProgressReplicated = 0xecc; // float
		constexpr auto Smooth? = 0xed0; // bool
		constexpr auto CDInteract = 0xed1; // bool
		constexpr auto Bias = 0xed4; // float
		constexpr auto LootBoxs = 0xed8; // TArray<ALootBox_C*>
		constexpr auto XAxis = 0xee8; // float
		constexpr auto YAxis = 0xeec; // float
		constexpr auto StartRotatePropSoundActive? = 0xef0; // bool
		constexpr auto Freeze = 0xef1; // bool
		constexpr auto OldCharPos = 0xef4; // FVector
		constexpr auto OldWidgetPos = 0xf00; // FVector
		constexpr auto TempCalculateRay = 0xf10; // AActor*
		constexpr auto PhysicsTickDeltaTime = 0xf18; // float
		constexpr auto BoostExit = 0xf1c; // float
		constexpr auto animationSpeed = 0xf20; // float
		constexpr auto SecondJumpProp? = 0xf24; // bool
		constexpr auto WidgetPropActorsIgnore = 0xf28; // TArray<AActor*>
		constexpr auto CustomOffset = 0xf38; // FVector
		constexpr auto StandartOffset = 0xf44; // FVector
		constexpr auto TransformChangeHealth? = 0xf50; // bool
		constexpr auto Doppelganger = 0xf58; // ADoppelganger_C*
		constexpr auto SurvSkill = 0xf60; // SurvSkills
		constexpr auto NeedPointsLootbox = 0xf64; // int32_t
		constexpr auto DefaultFOV = 0xf68; // float
		constexpr auto ChairStage = 0xf6c; // int32_t
		constexpr auto AirTime = 0xf70; // float
		constexpr auto Intro? = 0xf74; // bool
		constexpr auto MaterialBlur = 0xf78; // UMaterialInstanceDynamic*
		constexpr auto NicknameString = 0xf80; // FString
		constexpr auto PostProcessVolumeVar = 0xf90; // APostProcessVolume*
		constexpr auto DefaultPostProcessSettings = 0xfa0; // FPostProcessSettings
		constexpr auto MaterialVignette = 0x14f0; // UMaterialInstanceDynamic*
		constexpr auto PropCorrectionRotation = 0x14f8; // FRotator
		constexpr auto ScenePropHealth = 0x1504; // float
		constexpr auto SavedPoints = 0x1508; // TArray<FVector>
		constexpr auto TempFloat = 0x1518; // float
		constexpr auto TempBool = 0x151c; // bool
		constexpr auto TempFloat2 = 0x1520; // float
		constexpr auto Temp3Vector = 0x1524; // FVector
		constexpr auto Temp4Vector = 0x1530; // FVector
		constexpr auto TempRotation = 0x153c; // FRotator
		constexpr auto TempRotation2 = 0x1548; // FRotator
		constexpr auto TempFloat3 = 0x1554; // float
		constexpr auto NewVar_1 = 0x1558; // bool
		constexpr auto ProgressUISpectator = 0x155c; // float
		constexpr auto MaxProgressUISpectator = 0x1560; // float
		constexpr auto LastAirTime = 0x1564; // float
		constexpr auto PullOut? = 0x1568; // bool
		constexpr auto PropMovementInterpVar = 0x156c; // FVector
		constexpr auto BlockLMB? = 0x1578; // bool
		constexpr auto BlockRMB? = 0x1579; // bool
		constexpr auto Tutorial? = 0x157a; // bool
		constexpr auto PropHuntMode? = 0x157b; // bool
		constexpr auto Mode = 0x157c; // E_Mode
		constexpr auto isAI = 0x157d; // bool
		constexpr auto HealAlly = 0x1580; // ASurvivorMasterBP_C*
		constexpr auto LobbbyWait? = 0x1588; // bool
		constexpr auto IsaacBoosted? = 0x1589; // bool
		constexpr auto IsaacTimeBoost = 0x158c; // float
		constexpr auto PressedCrouch? = 0x1590; // bool
		constexpr auto AliveTime = 0x1594; // int32_t
		constexpr auto PropObject = 0x1598; // AActor*
		constexpr auto LocalBoolProp = 0x15a0; // bool
		constexpr auto survChar = 0x15a1; // SurvChars
		constexpr auto OutlineBlock = 0x15a2; // bool
		constexpr auto Small Prop? = 0x15a3; // bool
		constexpr auto OnlyTPP? = 0x15a4; // bool
		constexpr auto CustomPlayAnimWalk? = 0x15a5; // bool
		constexpr auto PropMaterials = 0x15a8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DistanceTraveled = 0x15b8; // float
		constexpr auto PingText = 0x15c0; // FText
		constexpr auto SurvTrack3000Block? = 0x15d8; // bool
		constexpr auto BlockHelp? = 0x15d9; // bool
		constexpr auto PropJumpCount = 0x15dc; // int32_t
		constexpr auto DefaultJumpCount = 0x15e0; // int32_t
		constexpr auto PropSoundVolumeModifier = 0x15e4; // float
		constexpr auto BreakFreeBonusVar = 0x15e8; // float
		constexpr auto BlockTime = 0x15ec; // float
		constexpr auto FullHP? = 0x15f0; // bool
		constexpr auto NeedPointsMedkit = 0x15f4; // int32_t
		constexpr auto DrDolittle? = 0x15f8; // bool
		constexpr auto DrDolittleInteractReady? = 0x15f9; // bool
		constexpr auto AlarmFinished? = 0x15fa; // bool
		constexpr auto RushActive? = 0x15fb; // bool
		constexpr auto StaminaRushDecreaseAmountValue = 0x15fc; // float
		constexpr auto Rush? = 0x1600; // bool
		constexpr auto BlockTimeMultiply = 0x1604; // float
		constexpr auto CursedPropChallenge? = 0x1608; // bool
		constexpr auto CursedPropChallengeValue = 0x160c; // float
		constexpr auto CursedPropChallengeMaxValue = 0x1610; // float
		constexpr auto Cursed Prop = 0x1618; // ABasePropBP_C*
		constexpr auto HoudiniText = 0x1620; // FText
		constexpr auto MaterialVignette2 = 0x1638; // UMaterialInstanceDynamic*
		constexpr auto ImpactPoint = 0x1640; // FVector
		constexpr auto WallJump? = 0x164c; // bool
		constexpr auto BP_Spectator = 0x1650; // ABP_Spectator_C*
		constexpr auto ParticleTransform = 0x1660; // FTransform
		constexpr auto SurvRole = 0x1690; // SurvRole
		constexpr auto r3 = 0x1698; // TArray<float>
		constexpr auto I = 0x16a8; // int32_t
		constexpr auto ZLocalMin = 0x16ac; // float
		constexpr auto ZLocal = 0x16b0; // float
		constexpr auto SREF = 0x16b8; // ASurvivorMasterBP_C*
		constexpr auto CountCoins = 0x16c0; // int32_t
		constexpr auto SupportHealedCount = 0x16c4; // int32_t
		constexpr auto PropDynMaterials = 0x16c8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DoorArray = 0x16d8; // TArray<AInteractableDoor_C*>
		constexpr auto DamageMarkerAngle = 0x16e8; // float
		constexpr auto escapeLoop = 0x16ec; // bool
		constexpr auto SoftOutline = 0x16f0; // UMaterialInstanceDynamic*
		constexpr auto BleedingSound = 0x16f8; // UFMODAudioComponent*
		constexpr auto EscapeStruggle = 0x1700; // UFMODAudioComponent*
		constexpr auto ChaseValue = 0x1708; // float
		constexpr auto PropDistance = 0x170c; // float
		constexpr auto IntroAnim? = 0x1710; // bool
		constexpr auto OldIndicatorPos = 0x1714; // FVector
		constexpr auto TestViewB = 0x1720; // bool
		constexpr auto CanBurning? = 0x1721; // bool
		constexpr auto Burning? = 0x1722; // bool
		constexpr auto EnergyDrnkAnimB = 0x1723; // bool
		constexpr auto KBookAnimB = 0x1724; // bool
		constexpr auto SkinID = 0x1728; // int32_t
		constexpr auto DestructionLvl = 0x172c; // int32_t
		constexpr auto MaxScoreInt = 0x1730; // TArray<FCoinMaxStruct>
		constexpr auto MaxScoreTemp = 0x1740; // TArray<int32_t>
		constexpr auto IsMessageBlocked = 0x1750; // bool
		constexpr auto SurvCheats = 0x1751; // bool
		constexpr auto AxisForwardFloat = 0x1754; // float
		constexpr auto CurrentLVL = 0x1758; // int32_t
		constexpr auto MaxLVL = 0x175c; // int32_t
		constexpr auto Exp = 0x1760; // int32_t
		constexpr auto Perk1Activated = 0x1764; // bool
		constexpr auto Perk1LVL = 0x1768; // int32_t
		constexpr auto Perk2LVL = 0x176c; // int32_t
		constexpr auto Perk3LVL = 0x1770; // int32_t
		constexpr auto Perk2Activated = 0x1774; // bool
		constexpr auto Perk3Activated = 0x1775; // bool
		constexpr auto RestoreHealthTimeMultiplier = 0x1778; // float
		constexpr auto PerkIndex = 0x177c; // int32_t
		constexpr auto HitCounter = 0x1780; // int32_t
		constexpr auto HitUI = 0x1784; // bool
		constexpr auto HaveShield = 0x1785; // bool
		constexpr auto ShiftOn? = 0x1786; // bool
		constexpr auto AfterHitTimer = 0x1788; // FTimerHandle
		constexpr auto coins = 0x1790; // int32_t
		constexpr auto TPS = 0x1794; // float
		constexpr auto BlockProp? = 0x1798; // bool
		constexpr auto IsTotemOfEndurance = 0x1799; // bool
		constexpr auto JumpCount = 0x179c; // int32_t
		constexpr auto TotemOfEnduranceTime = 0x17a0; // int32_t
		constexpr auto TotemOfFriendshipTime = 0x17a4; // int32_t
		constexpr auto TotemOfBraveryTime = 0x17a8; // int32_t
		constexpr auto TotemOfConcentrationTime = 0x17ac; // int32_t
		constexpr auto TotemOfGravityTime = 0x17b0; // int32_t
		constexpr auto IsPropmachineBoosted = 0x17b4; // bool
		constexpr auto Painkiller = 0x17b5; // bool
		constexpr auto ThrowGrenade = 0x17b6; // bool
		constexpr auto TakeRune = 0x17b7; // bool
		constexpr auto DamageNull? = 0x17b8; // bool
		constexpr auto Dialogue = 0x17c0; // TArray<FTestDialogue>
		constexpr auto RunChance? = 0x17d0; // bool
		constexpr auto Invert Mouse Y? = 0x17d1; // bool
		constexpr auto HasOutline? = 0x17d2; // bool
		constexpr auto GrappleFailed? = 0x17d3; // bool
		constexpr auto IsLifted = 0x17d4; // bool
		constexpr auto Reincarnating? = 0x17d5; // bool
		constexpr auto MaxZToCheck = 0x17d8; // float
		constexpr auto RotateBlock? = 0x17dc; // bool
		constexpr auto Hitcount = 0x17e0; // int32_t
		constexpr auto Actors to Ignore = 0x17e8; // TArray<AActor*>
		constexpr auto BlockSpam? = 0x17f8; // bool
		constexpr auto HitsCount = 0x17fc; // int32_t
		constexpr auto Delte2 = 0x1800; // bool
		constexpr auto SavedPointsProp = 0x1808; // TArray<FTransform>
		constexpr auto PropPoint = 0x1818; // int32_t
		constexpr auto BlockSpamRMB = 0x181c; // bool
		constexpr auto OldCharIndicatorPos = 0x1820; // FVector
		constexpr auto HitCountMin = 0x182c; // int32_t
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_UVoiceChatWindowComponent_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_126 = 0x268; // UImage*
		constexpr auto NicknameText = 0x270; // UTextBlock*
		constexpr auto VoiceChatBox = 0x278; // UHorizontalBox*
		constexpr auto Owner = 0x280; // AActor*
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_USurvivorSoundsMaster-2D_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
		constexpr auto ChasingFMODSound = 0x100; // FFMODEventInstance
		constexpr auto LevelAmbient = 0x108; // FFMODEventInstance
		constexpr auto KillerAmbientValue = 0x110; // float
		constexpr auto DeltaSeconds = 0x114; // float
		constexpr auto NewDelay = 0x118; // float
		constexpr auto KillerActor = 0x120; // AKillerMasterBP_C*
		constexpr auto NewCall? = 0x128; // bool
		constexpr auto HeartbeatSound1 = 0x130; // USoundBase*
		constexpr auto HeartbeatSound2 = 0x138; // USoundBase*
		constexpr auto Stop = 0x140; // bool
		constexpr auto chase = 0x141; // bool
		constexpr auto chaseb = 0x142; // bool
		constexpr auto StopMusic? = 0x143; // bool
		constexpr auto NewVar_1 = 0x144; // bool
		constexpr auto change? = 0x145; // bool
		constexpr auto ChaseParameter = 0x148; // float
		constexpr auto NewChaseParameter = 0x14c; // float
		constexpr auto bAfterChase = 0x150; // bool
		constexpr auto AllSoundsCustomStop? = 0x151; // bool
		constexpr auto Volume = 0x154; // float
		constexpr auto Killers = 0x158; // TArray<AKillerMasterBP_C*>
		constexpr auto TempFloat1 = 0x168; // float
		constexpr auto TempFloat2 = 0x16c; // float
		constexpr auto VolumeZ = 0x170; // float
		constexpr auto bZ = 0x174; // bool
		constexpr auto DeltaTime = 0x178; // float
		constexpr auto KillerRange = 0x17c; // float
		constexpr auto KillerClose = 0x180; // FFMODEventInstance
		constexpr auto CloseKiller = 0x188; // float
		constexpr auto MaxNoiseValue = 0x18c; // float
		constexpr auto NoiseB = 0x190; // bool
		constexpr auto LvlAmbBlock = 0x191; // bool
		constexpr auto NoiseSoundFloat = 0x194; // float
		constexpr auto HeartbeatFloat = 0x198; // float
		constexpr auto HeartBeatFmod = 0x1a0; // FFMODEventInstance
		constexpr auto SurvShoulder = 0x1a8; // FFMODEventInstance
		constexpr auto KillerLoc = 0x1b0; // FVector
		constexpr auto LastMan = 0x1bc; // bool
		constexpr auto checkeree228 = 0x1c0; // FFMODEventInstance
		constexpr auto Spectator? = 0x1c8; // bool
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_ANewAlarmBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto ClockToolRepair = 0x228; // UFMODAudioComponent*
		constexpr auto Noga5 = 0x230; // UStaticMeshComponent*
		constexpr auto Noga4 = 0x238; // UStaticMeshComponent*
		constexpr auto Noga3 = 0x240; // UStaticMeshComponent*
		constexpr auto Noga2 = 0x248; // UStaticMeshComponent*
		constexpr auto Noga1 = 0x250; // UStaticMeshComponent*
		constexpr auto Noga = 0x258; // UStaticMeshComponent*
		constexpr auto Rot = 0x260; // UStaticMeshComponent*
		constexpr auto glaz1 = 0x268; // UStaticMeshComponent*
		constexpr auto glaz = 0x270; // UStaticMeshComponent*
		constexpr auto Juk = 0x278; // UStaticMeshComponent*
		constexpr auto Sphere = 0x280; // USphereComponent*
		constexpr auto P_AlarmFull = 0x288; // UParticleSystemComponent*
		constexpr auto P_AlarmCurse = 0x290; // UParticleSystemComponent*
		constexpr auto P_AlarmBreak1 = 0x298; // UParticleSystemComponent*
		constexpr auto Capsule = 0x2a0; // UCapsuleComponent*
		constexpr auto P_AlarmSmoke = 0x2a8; // UParticleSystemComponent*
		constexpr auto P_AlarmProgress = 0x2b0; // UParticleSystemComponent*
		constexpr auto NightmareLight1 = 0x2b8; // UPointLightComponent*
		constexpr auto FMODAudioHelperThird = 0x2c0; // UFMODAudioComponent*
		constexpr auto FMODAudioHelperSecond = 0x2c8; // UFMODAudioComponent*
		constexpr auto CoinSpwner = 0x2d0; // USceneComponent*
		constexpr auto CurseAudio = 0x2d8; // UFMODAudioComponent*
		constexpr auto FMODAlarmProgress = 0x2e0; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x2e8; // UPointLightComponent*
		constexpr auto LightBeamParticle = 0x2f0; // UParticleSystemComponent*
		constexpr auto Box1 = 0x2f8; // UBoxComponent*
		constexpr auto Widget = 0x300; // UWidgetComponent*
		constexpr auto WidgetContainer = 0x308; // USceneComponent*
		constexpr auto Alarm_rig = 0x310; // USkeletalMeshComponent*
		constexpr auto FMODFailed = 0x318; // UFMODAudioComponent*
		constexpr auto Box = 0x320; // UBoxComponent*
		constexpr auto FMODAlarmNoise = 0x328; // UFMODAudioComponent*
		constexpr auto FMODReloadingAlarm = 0x330; // UFMODAudioComponent*
		constexpr auto FmodAudio = 0x338; // UFMODAudioComponent*
		constexpr auto PointLight = 0x340; // UPointLightComponent*
		constexpr auto DefaultSceneRoot = 0x348; // USceneComponent*
		constexpr auto Timeline_6_NewTrack_0_79FBDF634800A6E1C50B3B9FE43A640C = 0x350; // float
		constexpr auto Timeline_6__Direction_79FBDF634800A6E1C50B3B9FE43A640C = 0x354; // ETimelineDirection
		constexpr auto Timeline_7 = 0x358; // UTimelineComponent*
		constexpr auto Propmachine_LightEmi_80EE49C34236407460455F9F899A3043 = 0x360; // float
		constexpr auto Propmachine__Direction_80EE49C34236407460455F9F899A3043 = 0x364; // ETimelineDirection
		constexpr auto propmachine = 0x368; // UTimelineComponent*
		constexpr auto Timeline_5_Lerp_539EB76C41BFEB191228CDB1D68DA17A = 0x370; // float
		constexpr auto Timeline_5__Direction_539EB76C41BFEB191228CDB1D68DA17A = 0x374; // ETimelineDirection
		constexpr auto Timeline_6 = 0x378; // UTimelineComponent*
		constexpr auto Timeline_4_NewTrack_0_E893B9C746576B6E9153299EE00955BA = 0x380; // float
		constexpr auto Timeline_4__Direction_E893B9C746576B6E9153299EE00955BA = 0x384; // ETimelineDirection
		constexpr auto Timeline_5 = 0x388; // UTimelineComponent*
		constexpr auto CrackEmissionTimeline_NewTrack_0_88EF93874DE27168A83ACA991C96E2F1 = 0x390; // float
		constexpr auto CrackEmissionTimeline__Direction_88EF93874DE27168A83ACA991C96E2F1 = 0x394; // ETimelineDirection
		constexpr auto CrackEmissionTimeline = 0x398; // UTimelineComponent*
		constexpr auto Timeline_3_NewTrack_0_90A7A9AF4446AF853B71AAA3059C147E = 0x3a0; // float
		constexpr auto Timeline_3__Direction_90A7A9AF4446AF853B71AAA3059C147E = 0x3a4; // ETimelineDirection
		constexpr auto Timeline_4 = 0x3a8; // UTimelineComponent*
		constexpr auto Timeline_2_NewTrack_0_7F02F97E42A66FFE1FB8739FCE7826B5 = 0x3b0; // float
		constexpr auto Timeline_2__Direction_7F02F97E42A66FFE1FB8739FCE7826B5 = 0x3b4; // ETimelineDirection
		constexpr auto Timeline_3 = 0x3b8; // UTimelineComponent*
		constexpr auto Timeline_1_NewTrack_0_EF3489634043E5245C774D8350860F8E = 0x3c0; // float
		constexpr auto Timeline_1__Direction_EF3489634043E5245C774D8350860F8E = 0x3c4; // ETimelineDirection
		constexpr auto Timeline_2 = 0x3c8; // UTimelineComponent*
		constexpr auto Timeline_0_NewTrack_0_6392CBD2429CCE588C622091FADED503 = 0x3d0; // float
		constexpr auto Timeline_0__Direction_6392CBD2429CCE588C622091FADED503 = 0x3d4; // ETimelineDirection
		constexpr auto Timeline_1 = 0x3d8; // UTimelineComponent*
		constexpr auto AlphaLerp_Alpha_81F2A34B4B26167A49B34BAD07BCC0A7 = 0x3e0; // float
		constexpr auto AlphaLerp__Direction_81F2A34B4B26167A49B34BAD07BCC0A7 = 0x3e4; // ETimelineDirection
		constexpr auto AlphaLerp = 0x3e8; // UTimelineComponent*
		constexpr auto ReloadingTime = 0x3f0; // float
		constexpr auto ReloadingTimeRem = 0x3f4; // float
		constexpr auto ReloadingStarts? = 0x3f8; // bool
		constexpr auto actorsArray = 0x400; // TArray<AActor*>
		constexpr auto Finished? = 0x410; // bool
		constexpr auto BlockAlarm? = 0x411; // bool
		constexpr auto KillersRef = 0x418; // TArray<AKillerMasterBP_C*>
		constexpr auto ActorSurvRef = 0x428; // AActor*
		constexpr auto SurfRef = 0x430; // ASurvivorMasterBP_C*
		constexpr auto SkillCheck? = 0x438; // bool
		constexpr auto OldProgress = 0x43c; // float
		constexpr auto Alpha = 0x440; // float
		constexpr auto BoostModeValue = 0x444; // float
		constexpr auto SurvCountsChange? = 0x448; // bool
		constexpr auto BoostedSurvs = 0x44c; // int32_t
		constexpr auto FailedBlock? = 0x450; // bool
		constexpr auto SizeWidget = 0x454; // FVector2D
		constexpr auto FailedAnimStart? = 0x45c; // bool
		constexpr auto UseParticle? = 0x45d; // bool
		constexpr auto Cursed = 0x45e; // bool
		constexpr auto RushBoost = 0x460; // float
		constexpr auto SpwnCoinsV3 = 0x468; // TArray<FVector>
		constexpr auto SpwnCoinsV3SkillCheck = 0x478; // TArray<FVector>
		constexpr auto CountCoins = 0x488; // int32_t
		constexpr auto I = 0x48c; // int32_t
		constexpr auto v3Coins = 0x490; // FVector
		constexpr auto r3 = 0x4a0; // TArray<float>
		constexpr auto SREF = 0x4b0; // ASurvivorMasterBP_C*
		constexpr auto IsPaused = 0x4b8; // bool
		constexpr auto OldReloadingTime = 0x4bc; // float
		constexpr auto IsPlayer = 0x4c0; // bool
		constexpr auto BrokenTime = 0x4c1; // bool
		constexpr auto Delta Seconds = 0x4c4; // float
		constexpr auto Reloading Time = 0x4c8; // float
		constexpr auto Reloading Time_1 = 0x4cc; // float
		constexpr auto BrokenB = 0x4d0; // bool
		constexpr auto Bait = 0x4d1; // bool
		constexpr auto BTimeIsTick = 0x4d2; // bool
		constexpr auto CurseLightCol = 0x4d4; // FLinearColor
		constexpr auto CurseVisible = 0x4e4; // bool
		constexpr auto Tinkers = 0x4e8; // int32_t
		constexpr auto Killers = 0x4f0; // TArray<AKillerMasterBP_C*>
		constexpr auto SoundOff? = 0x500; // bool
		constexpr auto LightBeamDynMat = 0x508; // UMaterialInstanceDynamic*
		constexpr auto CreakInt = 0x510; // int32_t
		constexpr auto AlarmMaterial = 0x518; // UMaterialInstanceDynamic*
		constexpr auto MaterialLevel = 0x520; // int32_t
		constexpr auto Crack? = 0x524; // bool
		constexpr auto OldCreak = 0x528; // int32_t
		constexpr auto PropmachineMaterial = 0x530; // UMaterialInstanceDynamic*
		constexpr auto TutorialBlock? = 0x538; // bool
		constexpr auto KillerTutorial? = 0x539; // bool
		constexpr auto SurvTutorial? = 0x53a; // bool
		constexpr auto PropmachineKillerPerk? = 0x53c; // int32_t
		constexpr auto TempInt = 0x540; // int32_t
		constexpr auto Test? = 0x544; // bool
		constexpr auto Stage = 0x548; // int32_t
		constexpr auto BrakerAlarmer = 0x54c; // bool
		constexpr auto BrakerDuration = 0x550; // float
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x440; // FSplineCurves
		constexpr auto SplineInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4c8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4e0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4f8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x510; // bool
		constexpr auto ReparamStepsPerSegment = 0x514; // int32_t
		constexpr auto Duration = 0x518; // float
		constexpr auto bStationaryEndpoints = 0x51c; // bool
		constexpr auto bSplineHasBeenEdited = 0x51d; // bool
		constexpr auto bModifiedByConstructionScript = 0x51e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x51f; // bool
		constexpr auto bDrawDebug = 0x520; // bool
		constexpr auto bClosedLoop = 0x521; // bool
		constexpr auto bLoopPositionOverride = 0x522; // bool
		constexpr auto LoopPosition = 0x524; // float
		constexpr auto DefaultUpVector = 0x528; // FVector
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_UShootProphunt_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Killer = 0xb8; // AKillerMasterBP_C*
		constexpr auto CD = 0xc0; // bool
		constexpr auto Ammo = 0xc4; // int32_t
		constexpr auto FIRE = 0xc8; // bool
		constexpr auto targetRotat = 0xcc; // FRotator
		constexpr auto InterpSpeed = 0xd8; // float
		constexpr auto ReloadDelay = 0xdc; // float
		constexpr auto FullAMMO = 0xe0; // int32_t
		constexpr auto AimRDY = 0xe4; // bool
		constexpr auto DeltaSec = 0xe8; // float
		constexpr auto timeFire = 0xec; // float
		constexpr auto Damage = 0xf0; // int32_t
		constexpr auto Radius = 0xf4; // float
		constexpr auto ReloadTimeA = 0xf8; // float
		constexpr auto SpellName = 0x100; // FString
		constexpr auto Shoot? = 0x110; // bool
		constexpr auto ShootCD? = 0x111; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x440; // FText
		constexpr auto TextMaterial = 0x458; // UMaterialInterface*
		constexpr auto Font = 0x460; // UFont*
		constexpr auto HorizontalAlignment = 0x468; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x469; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x46c; // FColor
		constexpr auto XScale = 0x470; // float
		constexpr auto YScale = 0x474; // float
		constexpr auto WorldSize = 0x478; // float
		constexpr auto InvDefaultSize = 0x47c; // float
		constexpr auto HorizSpacingAdjust = 0x480; // float
		constexpr auto VertSpacingAdjust = 0x484; // float
		constexpr auto bAlwaysRenderAsText = 0x488; // char : 1
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UEOSCoreAchievementsQueryPlayerAchievements {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UBansheeScreamShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UFMODBankLookup {
		constexpr auto DataTable = 0x28; // UDataTable*
		constexpr auto MasterBankPath = 0x30; // FString
		constexpr auto MasterAssetsBankPath = 0x40; // FString
		constexpr auto MasterStringsBankPath = 0x50; // FString
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UEOSCoreAchievementsUnlockAchievements {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x440; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x450; // float
		constexpr auto PixelHitDistanceThreshold = 0x454; // float
	}

	namespace n_UGraffityMakerHit_C {
		constexpr auto UberGraphFrame = 0xc0; // FPointerToUberGraphFrame
		constexpr auto v3Arr = 0xc8; // TArray<FVector>
		constexpr auto rotArr = 0xd8; // TArray<FRotator>
		constexpr auto Impact Normal = 0xe8; // FVector
		constexpr auto Actor Location = 0xf4; // FVector
		constexpr auto Forward Vector = 0x100; // FVector
	}

	namespace n_USurvivalInventorySlotWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto StopCD_Anim = 0x268; // UWidgetAnimation*
		constexpr auto StartCD_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Spawn = 0x278; // UWidgetAnimation*
		constexpr auto Count = 0x280; // UTextBlock*
		constexpr auto ImageCD = 0x288; // UImage*
		constexpr auto ItemIcon = 0x290; // UImage*
		constexpr auto ProgressBar_76 = 0x298; // UProgressBar*
		constexpr auto RarityIcon = 0x2a0; // UImage*
		constexpr auto Selected = 0x2a8; // UImage*
		constexpr auto SizeBox_96 = 0x2b0; // USizeBox*
		constexpr auto SizeBox_97 = 0x2b8; // USizeBox*
		constexpr auto TextCD = 0x2c0; // UTextBlock*
		constexpr auto Owner = 0x2c8; // int32_t
		constexpr auto ItemName = 0x2d0; // FString
		constexpr auto Visibility? = 0x2e0; // bool
		constexpr auto Cooldown = 0x2e8; // UMaterialInstanceDynamic*
		constexpr auto ColorHelper = 0x2f0; // FLinearColor
		constexpr auto ItemSelect? = 0x300; // bool
		constexpr auto IsCDStarted = 0x301; // bool
		constexpr auto CurrentTime = 0x304; // float
		constexpr auto Item = 0x308; // FItemStructure
		constexpr auto FillTime = 0x338; // float
	}

	namespace n_UWBP_MiniFriendEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Hide_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_124 = 0x270; // UButton*
		constexpr auto Image_Avatar = 0x278; // UImage*
		constexpr auto Image_BG = 0x280; // UImage*
		constexpr auto Image_BG_2 = 0x288; // UImage*
		constexpr auto Image_Hover = 0x290; // UImage*
		constexpr auto Image_LeaderLobby = 0x298; // UImage*
		constexpr auto Overlay_Nickname = 0x2a0; // UOverlay*
		constexpr auto RetainerBox_52 = 0x2a8; // URetainerBox*
		constexpr auto TextBlock_Nickname = 0x2b0; // UTextBlock*
		constexpr auto AvatarSize = 0x2b8; // FVector2D
		constexpr auto SteamId = 0x2c0; // FString
		constexpr auto Material = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto Username = 0x2d8; // FString
		constexpr auto IsOwner = 0x2e8; // bool
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_AGS_PropHunt_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto BP_ItemsManager = 0x278; // UBP_ItemsManager_C*
		constexpr auto DefaultSceneRoot = 0x280; // USceneComponent*
		constexpr auto Seconds = 0x288; // int32_t
		constexpr auto IsLobby = 0x28c; // bool
		constexpr auto LobbyState = 0x290; // FMiniLobbyState
		constexpr auto AlarmsCount = 0x2e8; // int32_t
		constexpr auto SurvArrayRef = 0x2f0; // TArray<ASurvivorMasterBP_C*>
		constexpr auto IsKillerWin = 0x300; // bool
		constexpr auto PlayerStarts = 0x308; // TArray<APlayerStart*>
		constexpr auto AliveSurvivors = 0x318; // TArray<AActor*>
		constexpr auto ReadyPlayers = 0x328; // TArray<AActor*>
		constexpr auto ChairRef = 0x338; // TArray<AHypnoChairBP_C*>
		constexpr auto AlarmsRef = 0x348; // TArray<ANewAlarmBP_C*>
		constexpr auto IsGameSession = 0x358; // bool
		constexpr auto SurvsOnChair = 0x35c; // int32_t
		constexpr auto NeedAlarmRelaoding = 0x360; // int32_t
		constexpr auto EndGameAlarmCount = 0x364; // int32_t
		constexpr auto DoorOpened? = 0x368; // bool
		constexpr auto EscapedSurvCount = 0x36c; // int32_t
		constexpr auto GameStart? = 0x370; // bool
		constexpr auto ItemSnapshots = 0x378; // TArray<FItemSnapshot>
		constexpr auto FloorsCount = 0x388; // int32_t
		constexpr auto Score = 0x38c; // int32_t
		constexpr auto GameEnd? = 0x390; // bool
		constexpr auto VoteMap = 0x398; // TMap<AActor*, FString>
		constexpr auto IsGranny = 0x3e8; // bool
		constexpr auto Random = 0x3ec; // int32_t
		constexpr auto RemoveSurvs? = 0x3f0; // TArray<bool>
		constexpr auto CurrentCountCoins = 0x400; // int32_t
		constexpr auto MaxCountCoins = 0x404; // int32_t
		constexpr auto CoinsPositions = 0x408; // TArray<FTransform>
		constexpr auto FreeSpaceCoinsPositions = 0x418; // TArray<FTransform>
		constexpr auto DeltaSeconds = 0x428; // float
		constexpr auto SurvClass = 0x42c; // SurvClass
		constexpr auto IsPublic = 0x42d; // bool
		constexpr auto StartGameTimer = 0x430; // FTimerHandle
		constexpr auto BoostModeON? = 0x438; // bool
		constexpr auto KillerType = 0x439; // KillerType
		constexpr auto Temp1 = 0x43c; // FVector
		constexpr auto Temp2 = 0x448; // FRotator
		constexpr auto TimerStart? = 0x454; // bool
		constexpr auto MaxScore_AlarmGame = 0x458; // int32_t
		constexpr auto MaxScore_REVIVE = 0x45c; // int32_t
		constexpr auto MaxScore_OutChair = 0x460; // int32_t
		constexpr auto MaxScore_FLASH = 0x464; // int32_t
		constexpr auto MaxScore_HealALLY = 0x468; // int32_t
		constexpr auto MaxScore_HealSELF = 0x46c; // int32_t
		constexpr auto MaxScore_OutGrip = 0x470; // int32_t
		constexpr auto MaxScore_HIT = 0x474; // int32_t
		constexpr auto MaxScore_DOWNED = 0x478; // int32_t
		constexpr auto MaxScore_CHAIR = 0x47c; // int32_t
		constexpr auto MaxScore_Stun = 0x480; // int32_t
		constexpr auto MAXSCOREBLOCK_AlarmGame = 0x484; // int32_t
		constexpr auto MAXSCOREBLOCK_REVIVE = 0x488; // int32_t
		constexpr auto MAXSCOREBLOCK_OutChair = 0x48c; // int32_t
		constexpr auto MAXSCOREBLOCK_FLASH = 0x490; // int32_t
		constexpr auto MAXSCOREBLOCK_HealALLY = 0x494; // int32_t
		constexpr auto MAXSCOREBLOCK_HealSELF = 0x498; // int32_t
		constexpr auto MAXSCOREBLOCK_OutGrip = 0x49c; // int32_t
		constexpr auto MAXSCOREBLOCK_Stun = 0x4a0; // int32_t
		constexpr auto MAXSCOREBLOCK_HIT = 0x4a4; // int32_t
		constexpr auto MAXSCOREBLOCK_DOWNED = 0x4a8; // int32_t
		constexpr auto MAXSCOREBLOCK_CHAIR = 0x4ac; // int32_t
		constexpr auto KillScoreCounter = 0x4b0; // int32_t
		constexpr auto PropHuntMode? = 0x4b4; // bool
		constexpr auto CaptureMode? = 0x4b5; // bool
		constexpr auto coins = 0x4b8; // TArray<ACoinActor_C*>
		constexpr auto GameSettings = 0x4c8; // FS_GameSettings
		constexpr auto FartSeconds = 0x4e8; // int32_t
		constexpr auto IsLobbyStateAccepted? = 0x4ec; // bool
		constexpr auto TempCategory = 0x4f0; // int32_t
		constexpr auto IgnoredPlayer = 0x4f8; // APlayerState*
		constexpr auto TempPlayerStates = 0x500; // TArray<APlayerState*>
		constexpr auto SurvFirstCategory = 0x510; // APlayerState*
		constexpr auto SurvSecondCategory = 0x518; // APlayerState*
		constexpr auto KillerCategory = 0x520; // APlayerState*
		constexpr auto TempSwap1 = 0x528; // int32_t
		constexpr auto TempSwap2 = 0x52c; // int32_t
		constexpr auto ReadingMapVotesMap = 0x530; // TMap<MapVote, int32_t>
		constexpr auto ReadingPlayersCategoryVotes = 0x580; // TMap<PlayerCategoryVote, int32_t>
		constexpr auto VoteCountMap1 = 0x5d0; // int32_t
		constexpr auto VoteCountMap2 = 0x5d4; // int32_t
		constexpr auto VoteCountMap3 = 0x5d8; // int32_t
		constexpr auto VoteCountPlayerCategory1 = 0x5dc; // int32_t
		constexpr auto VoteCountPlayerCategory2 = 0x5e0; // int32_t
		constexpr auto VoteCountPlayerCategory3 = 0x5e4; // int32_t
		constexpr auto TempMapNames = 0x5e8; // TArray<FName>
		constexpr auto IntTemp = 0x5f8; // int32_t
		constexpr auto Map1 = 0x5fc; // FName
		constexpr auto Map2 = 0x604; // FName
		constexpr auto Map3 = 0x60c; // FName
		constexpr auto NextGameTimer = 0x614; // int32_t
		constexpr auto IntArrayTemp = 0x618; // TArray<int32_t>
		constexpr auto AllAlarmsReady? = 0x628; // bool
		constexpr auto MatchTime = 0x62c; // int32_t
		constexpr auto TempPlayerStates2 = 0x630; // TArray<APlayerState*>
		constexpr auto bPlayerStart = 0x640; // bool
		constexpr auto TempSlotName1 = 0x648; // FString
		constexpr auto TempSlotName2 = 0x658; // FString
		constexpr auto Tutorial? = 0x668; // bool
		constexpr auto ServerSettings = 0x670; // FS_ServerSettings
		constexpr auto CountKillers = 0x698; // int32_t
		constexpr auto CountSurvs = 0x69c; // int32_t
		constexpr auto IsLobbyWait = 0x6a0; // bool
		constexpr auto SoloMode? = 0x6a1; // bool
		constexpr auto OnChairSurvs = 0x6a4; // int32_t
		constexpr auto KillerPoints = 0x6a8; // int32_t
		constexpr auto SurvPoints = 0x6ac; // int32_t
		constexpr auto LobbyTime = 0x6b0; // int32_t
		constexpr auto LobbyBlockRdy? = 0x6b4; // bool
		constexpr auto TempMvp = 0x6b8; // int32_t
		constexpr auto MvpSurv = 0x6c0; // APS_PropHunt_C*
		constexpr auto MvpPlayerReady? = 0x6c8; // bool
		constexpr auto TempSwap = 0x6d0; // APS_PropHunt_C*
		constexpr auto INDX_Slots = 0x6d8; // int32_t
		constexpr auto PointsType = 0x6dc; // CoinEnum
		constexpr auto TempPlayer = 0x6e0; // AActor*
		constexpr auto WaitPlayersTimerHandle = 0x6e8; // FTimerHandle
		constexpr auto SomeoneLeftAfterFullLobby = 0x6f0; // bool
		constexpr auto FullLobbyWasReached = 0x6f1; // bool
		constexpr auto CanAssign = 0x6f2; // bool
		constexpr auto KillerLeave? = 0x6f3; // bool
		constexpr auto TempPerks = 0x6f8; // TArray<FName>
		constexpr auto TempInt = 0x708; // int32_t
		constexpr auto ReadingPlayersCategoryVotes_v2 = 0x710; // TMap<FString, int32_t>
		constexpr auto VotesArray = 0x760; // TArray<int32_t>
		constexpr auto OnVoted = 0x770; // FMulticastInlineDelegate
		constexpr auto MaxScore_DoorOpen = 0x780; // int32_t
		constexpr auto MaxScore_ExitDoor = 0x784; // int32_t
		constexpr auto HighlightPlayerInformation = 0x788; // TArray<FEndGamePlayerData>
		constexpr auto BannerInfo = 0x798; // TArray<FST_BannerInfo>
		constexpr auto HandlerAddBanerInfo = 0x7a8; // FTimerHandle
		constexpr auto OnLogin = 0x7b0; // FMulticastInlineDelegate
		constexpr auto LeftSurvsCounter = 0x7c0; // int32_t
		constexpr auto ActivityPlayers = 0x7c8; // TArray<APS_PropHunt_C*>
		constexpr auto UpdateActivityPlayers = 0x7d8; // FMulticastInlineDelegate
		constexpr auto HaveDyingChars? = 0x7e8; // bool
		constexpr auto LeavePlayers = 0x7f0; // TArray<FST_LeavePlayers_Tab_Stats>
		constexpr auto UpdateLeavePlayers = 0x800; // FMulticastInlineDelegate
		constexpr auto IsPlayerReloadingAlarmOvertime = 0x810; // bool
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UHoudini_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UW_Lobby_WaitPlayers_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ButtonTextBlock = 0x268; // UTextBlock*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_94 = 0x278; // UImage*
		constexpr auto Overlay_3 = 0x280; // UOverlay*
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UEOSCorePlayerDataStorageDuplicateFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UEOSReportsSendPlayerBehaviorReport {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEOSCorePlayerDataStorageQueryFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UWBP_ServerMessage_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Ok = 0x268; // UButton*
		constexpr auto Image_DialogBG = 0x270; // UImage*
		constexpr auto Text_Label = 0x278; // UTextBlock*
		constexpr auto TextBlock_147 = 0x280; // UTextBlock*
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UATPCCameraModeScript_PawnUseControllerRotation {
		constexpr auto OrientRotationToMovement = 0x40; // bool
		constexpr auto UseControllerDesiredRotation = 0x41; // bool
		constexpr auto bRestoreOldValuesOnExitCameraMode = 0x42; // bool
		constexpr auto OldOrientRotationToMovement = 0x43; // bool
		constexpr auto OldUseControllerDesiredRotation = 0x44; // bool
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreLobbySearchFind {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_ULuminApplicationLifecycleComponent {
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UChainAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x4c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x5e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x698; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x6c8; // FAnimNode_StateMachine
		constexpr auto Charge = 0x778; // bool
		constexpr auto Move! = 0x779; // bool
		constexpr auto Charge Attack = 0x77a; // bool
		constexpr auto BAnim = 0x77b; // bool
		constexpr auto FP? = 0x77c; // bool
	}

	namespace n_AMainMenuCameraActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto GrannyKnife = 0x228; // USkeletalMeshComponent*
		constexpr auto DoppelKnife = 0x230; // USkeletalMeshComponent*
		constexpr auto AkashaBlade = 0x238; // USkeletalMeshComponent*
		constexpr auto Chainsaw = 0x240; // USkeletalMeshComponent*
		constexpr auto NewSurvPosition = 0x248; // USceneComponent*
		constexpr auto NewCamera = 0x250; // USceneComponent*
		constexpr auto IsaacPoint = 0x258; // USceneComponent*
		constexpr auto TaigaPoint = 0x260; // USceneComponent*
		constexpr auto MablePoint = 0x268; // USceneComponent*
		constexpr auto ChrisPoint = 0x270; // USceneComponent*
		constexpr auto SkeletalMesh = 0x278; // USkeletalMeshComponent*
		constexpr auto RectLight3 = 0x280; // URectLightComponent*
		constexpr auto RectLight2 = 0x288; // URectLightComponent*
		constexpr auto RectLight = 0x290; // URectLightComponent*
		constexpr auto CineCamera = 0x298; // UCineCameraComponent*
		constexpr auto Point2 = 0x2a0; // USceneComponent*
		constexpr auto Point1 = 0x2a8; // USceneComponent*
		constexpr auto DefaultCameraPoint = 0x2b0; // USceneComponent*
		constexpr auto SharedRoot = 0x2b8; // USceneComponent*
		constexpr auto Timeline_1_Rotation_02004E434E234EFDBB9602A1C94D94DE = 0x2c0; // FVector
		constexpr auto Timeline_1_Location_02004E434E234EFDBB9602A1C94D94DE = 0x2cc; // FVector
		constexpr auto Timeline_1_Focus_02004E434E234EFDBB9602A1C94D94DE = 0x2d8; // float
		constexpr auto Timeline_1__Direction_02004E434E234EFDBB9602A1C94D94DE = 0x2dc; // ETimelineDirection
		constexpr auto Timeline_2 = 0x2e0; // UTimelineComponent*
		constexpr auto Timeline_0_Rotation_9C06C0454B54CC92CC80E0922E24F185 = 0x2e8; // FVector
		constexpr auto Timeline_0_Location_9C06C0454B54CC92CC80E0922E24F185 = 0x2f4; // FVector
		constexpr auto Timeline_0_Focus_9C06C0454B54CC92CC80E0922E24F185 = 0x300; // float
		constexpr auto Timeline_0__Direction_9C06C0454B54CC92CC80E0922E24F185 = 0x304; // ETimelineDirection
		constexpr auto Timeline_1 = 0x308; // UTimelineComponent*
		constexpr auto NewCameraBackTimeline_Rotation_E607634644F1975D7540B3B1EBF44EEE = 0x310; // FVector
		constexpr auto NewCameraBackTimeline_Location_E607634644F1975D7540B3B1EBF44EEE = 0x31c; // FVector
		constexpr auto NewCameraBackTimeline_Focus_E607634644F1975D7540B3B1EBF44EEE = 0x328; // float
		constexpr auto NewCameraBackTimeline__Direction_E607634644F1975D7540B3B1EBF44EEE = 0x32c; // ETimelineDirection
		constexpr auto NewCameraBackTimeline = 0x330; // UTimelineComponent*
		constexpr auto NewCameraForwardTimeline_Rotation_C5EA47564EC099B5186CD09AFF7DD53B = 0x338; // FVector
		constexpr auto NewCameraForwardTimeline_Location_C5EA47564EC099B5186CD09AFF7DD53B = 0x344; // FVector
		constexpr auto NewCameraForwardTimeline_Focus_C5EA47564EC099B5186CD09AFF7DD53B = 0x350; // float
		constexpr auto NewCameraForwardTimeline__Direction_C5EA47564EC099B5186CD09AFF7DD53B = 0x354; // ETimelineDirection
		constexpr auto NewCameraForwardTimeline = 0x358; // UTimelineComponent*
		constexpr auto CameraPoint2Timeline_Rotation_EE3A4378463FDC9DC349308970E009BF = 0x360; // FVector
		constexpr auto CameraPoint2Timeline_Location_EE3A4378463FDC9DC349308970E009BF = 0x36c; // FVector
		constexpr auto CameraPoint2Timeline_FocalLenght_EE3A4378463FDC9DC349308970E009BF = 0x378; // float
		constexpr auto CameraPoint2Timeline__Direction_EE3A4378463FDC9DC349308970E009BF = 0x37c; // ETimelineDirection
		constexpr auto CameraPoint2Timeline = 0x380; // UTimelineComponent*
		constexpr auto CameraPoint1Timeline_Rotation_E10221AB429DA27310900598424A0349 = 0x388; // FVector
		constexpr auto CameraPoint1Timeline_Location_E10221AB429DA27310900598424A0349 = 0x394; // FVector
		constexpr auto CameraPoint1Timeline_Focus_E10221AB429DA27310900598424A0349 = 0x3a0; // float
		constexpr auto CameraPoint1Timeline__Direction_E10221AB429DA27310900598424A0349 = 0x3a4; // ETimelineDirection
		constexpr auto CameraPoint1Timeline = 0x3a8; // UTimelineComponent*
		constexpr auto Random = 0x3b0; // int32_t
		constexpr auto SkinID = 0x3b4; // int32_t
		constexpr auto Camera = 0x3b8; // MainMenuCameraEnum
		constexpr auto HandlerLoadMenu = 0x3c0; // FTimerHandle
		constexpr auto SurvType = 0x3c8; // SurvChars
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UWBP_EndGameLevel_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Opacity_Anim = 0x268; // UWidgetAnimation*
		constexpr auto PropboxCoinsAppearance_Anim = 0x270; // UWidgetAnimation*
		constexpr auto NewSkin_Anim = 0x278; // UWidgetAnimation*
		constexpr auto TotalScoreAppearance_Anim = 0x280; // UWidgetAnimation*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_43 = 0x290; // UImage*
		constexpr auto Image_152 = 0x298; // UImage*
		constexpr auto Image_Lock = 0x2a0; // UImage*
		constexpr auto Image_SkinPreview = 0x2a8; // UImage*
		constexpr auto Overlay_PropboxCoins = 0x2b0; // UOverlay*
		constexpr auto RetainerBox_SkinPreview = 0x2b8; // URetainerBox*
		constexpr auto Text_CharacterName = 0x2c0; // UTextBlock*
		constexpr auto Text_SkinName = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_Level = 0x2d0; // UTextBlock*
		constexpr auto TextBlock_PropboxCoins = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_TotalScore = 0x2e0; // UTextBlock*
		constexpr auto VerticalBox_Categories = 0x2e8; // UVerticalBox*
		constexpr auto WBP_LevelProgress = 0x2f0; // UWBP_LevelProgress_C*
		constexpr auto MaterialInstance = 0x2f8; // UMaterialInstanceDynamic*
		constexpr auto OnCalculationFinished = 0x300; // FMulticastInlineDelegate
	}

	namespace n_ULootboxShopUI_C {
		constexpr auto Image_105 = 0x260; // UImage*
	}

	namespace n_UWBP_LootboxMain_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Throbber_AnimByScrap = 0x268; // UWidgetAnimation*
		constexpr auto Throbber_AnimByCoins = 0x270; // UWidgetAnimation*
		constexpr auto FadeIn = 0x278; // UWidgetAnimation*
		constexpr auto HideViewer_Anim = 0x280; // UWidgetAnimation*
		constexpr auto ShowViewerUI_Anim = 0x288; // UWidgetAnimation*
		constexpr auto HideLootboxUI_Anim = 0x290; // UWidgetAnimation*
		constexpr auto Button_Add = 0x298; // UButton*
		constexpr auto Button_Clear = 0x2a0; // UButton*
		constexpr auto Button_start = 0x2a8; // UButton*
		constexpr auto Button_start_BuyByScraps = 0x2b0; // UButton*
		constexpr auto ButtonCont = 0x2b8; // UButton*
		constexpr auto FadeBG = 0x2c0; // UImage*
		constexpr auto HorizontalBox_ButtonContent = 0x2c8; // UHorizontalBox*
		constexpr auto HorizontalBox_ButtonContentByScraps = 0x2d0; // UHorizontalBox*
		constexpr auto Image_Hovered_Buy = 0x2d8; // UImage*
		constexpr auto Image_Hovered_Buy_Scraps = 0x2e0; // UImage*
		constexpr auto Image_Hovered_Remaining = 0x2e8; // UImage*
		constexpr auto Image_Normal_Buy = 0x2f0; // UImage*
		constexpr auto Image_Normal_Buy_Scraps = 0x2f8; // UImage*
		constexpr auto Image_Normal_Remaining = 0x300; // UImage*
		constexpr auto Image_start = 0x308; // UImage*
		constexpr auto Image_start_Scraps = 0x310; // UImage*
		constexpr auto Image_Throbber = 0x318; // UImage*
		constexpr auto Image_Throbber_Scraps = 0x320; // UImage*
		constexpr auto Overlay_BuyButtonByCoins = 0x328; // UOverlay*
		constexpr auto Overlay_BuyButtonByScraps = 0x330; // UOverlay*
		constexpr auto Overlay_RemainingButton = 0x338; // UOverlay*
		constexpr auto Text_Money = 0x340; // UTextBlock*
		constexpr auto Text_Money_Scrap = 0x348; // UTextBlock*
		constexpr auto TextBlock_BuyLabel = 0x350; // UTextBlock*
		constexpr auto TextBlock_BuyLabel_ByScraps = 0x358; // UTextBlock*
		constexpr auto W_Path = 0x360; // UW_Path_C*
		constexpr auto WBP_LootViewerUI = 0x368; // UWBP_LootViewerUI_C*
		constexpr auto W_MainMenu = 0x370; // UW_MainMenu_C*
		constexpr auto IsViewerMode = 0x378; // bool
		constexpr auto Current Loot = 0x380; // FS_LootBoxSkin
		constexpr auto PrizeActor = 0x3b0; // ABP_PrizeActor_C*
		constexpr auto lootbox = 0x3b8; // ABP_LootBoxOriginal_C*
		constexpr auto AfterRowOpen = 0x3c0; // bool
		constexpr auto IsThrobberAnim = 0x3c1; // bool
		constexpr auto isEscapeBlocked = 0x3c2; // bool
		constexpr auto IsCoinsEnough = 0x3c3; // bool
		constexpr auto IsScapsEnough = 0x3c4; // bool
		constexpr auto FocusedButton = 0x3c8; // UButton*
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UWaypointWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_1 = 0x268; // UCanvasPanel*
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UWBP_KeyIcon_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BorderBG = 0x268; // UBorder*
		constexpr auto KeyBorder = 0x270; // UBorder*
		constexpr auto KeyImage = 0x278; // UImage*
		constexpr auto KeyText = 0x280; // UTextBlock*
		constexpr auto KeyTextScaleBox = 0x288; // UScaleBox*
		constexpr auto ActionName = 0x290; // FName
		constexpr auto HideBorder = 0x298; // bool
		constexpr auto HideBorderWhenImageUsing = 0x299; // bool
		constexpr auto BorderType = 0x29a; // BorderType_emum
		constexpr auto XSize = 0x29c; // int32_t
		constexpr auto YSize = 0x2a0; // int32_t
		constexpr auto Frame Color = 0x2a4; // FLinearColor
		constexpr auto Content Color = 0x2b4; // FLinearColor
		constexpr auto TextPaddingPercent = 0x2c4; // FMargin
		constexpr auto ImagePaddingPercent = 0x2d4; // FMargin
		constexpr auto BGColor = 0x2e4; // FLinearColor
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UEOSCoreLeaderboardsQueryLeaderboardDefinitions {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UEOSCoreSessionsSearchFind {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_AStunCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UATPCFadeProps_C {
		constexpr auto UberGraphFrame = 0xe0; // FPointerToUberGraphFrame
	}

	namespace n_UEOSCoreUserInfoQueryUserInfo {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_ADuplicatePropActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FMODPropHitAudio = 0x228; // UFMODAudioComponent*
		constexpr auto StaticMesh = 0x230; // UStaticMeshComponent*
		constexpr auto PropSoundActive? = 0x238; // bool
		constexpr auto ImpulseThreshold = 0x23c; // float
		constexpr auto PropSoundVolumeModifier = 0x240; // float
		constexpr auto PropDynMaterials = 0x248; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DeathEffectTimer = 0x258; // FTimerHandle
		constexpr auto DeathEffectTime = 0x260; // float
		constexpr auto DeathEffectDuration = 0x264; // float
		constexpr auto Float1 = 0x268; // float
		constexpr auto SpawnedEffectTimer = 0x270; // FTimerHandle
		constexpr auto SpawnedEffectTime = 0x278; // float
		constexpr auto SpawnedEffectDuration = 0x27c; // float
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UCurse_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto DelayTime = 0xf0; // float
		constexpr auto PlantRdy? = 0xf4; // bool
	}

	namespace n_UEOSCoreSessionsDestroySession {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_ACamLobby_C {
		constexpr auto UberGraphFrame = 0x7a0; // FPointerToUberGraphFrame
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_AItemsBPActual_KeymasterBook_C {
		constexpr auto CubeInvis = 0x238; // UStaticMeshComponent*
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_UATPCCameraLockOnTargetObject {
		constexpr auto OnTargetChangeDelegate = 0x30; // FMulticastInlineDelegate
		constexpr auto TargetDebugActor = 0x50; // AATPCArrowDebugActor*
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_UPlayFabLocalizationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x98; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xa0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xa8; // UPlayFabJsonObject*
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UInteractableButtonsWidget_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ButtonsHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto CanvasPanel_1 = 0x270; // UCanvasPanel*
		constexpr auto InteractableButtons = 0x278; // TArray<UInteractableButtonsComponentWidget_C*>
		constexpr auto DeleteIndex = 0x288; // int32_t
		constexpr auto Found? = 0x28c; // bool
		constexpr auto Player = 0x290; // ASurvivorMasterBP_C*
		constexpr auto Actors = 0x298; // TArray<AActor*>
		constexpr auto ActorsText = 0x2a8; // TArray<FString>
		constexpr auto ActorFound? = 0x2b8; // bool
		constexpr auto DeleteActorIndex = 0x2bc; // int32_t
		constexpr auto PicklockFound? = 0x2c0; // bool
		constexpr auto CheckInteractableButtons = 0x2c8; // TArray<UInteractableButtonsComponentWidget_C*>
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UWBP_GameResultHighlight_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Opacity_Anim = 0x268; // UWidgetAnimation*
		constexpr auto HoverPosition_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ToVoted_Killer_Hovered_Anim = 0x278; // UWidgetAnimation*
		constexpr auto ToVoted_Surv_Hovered_Anim = 0x280; // UWidgetAnimation*
		constexpr auto VotedPressed_Killer_Anim = 0x288; // UWidgetAnimation*
		constexpr auto VotedPressed_Surv_Anim = 0x290; // UWidgetAnimation*
		constexpr auto HoverVoted_Killer_Anim_Voted = 0x298; // UWidgetAnimation*
		constexpr auto HoverVoted_Surv_Anim_Voted = 0x2a0; // UWidgetAnimation*
		constexpr auto HoverVoted_Killer_Anim = 0x2a8; // UWidgetAnimation*
		constexpr auto HoverSelf_Killer_Anim = 0x2b0; // UWidgetAnimation*
		constexpr auto ToVoted_NotHovered_Anim = 0x2b8; // UWidgetAnimation*
		constexpr auto HoverVoted_Surv_Anim = 0x2c0; // UWidgetAnimation*
		constexpr auto HoverSelf_Surv_Anim = 0x2c8; // UWidgetAnimation*
		constexpr auto Button_Vote = 0x2d0; // UButton*
		constexpr auto Button_VoteButton = 0x2d8; // UButton*
		constexpr auto Image_Arrow = 0x2e0; // UImage*
		constexpr auto Image_AvatarIcon = 0x2e8; // UImage*
		constexpr auto Image_BG = 0x2f0; // UImage*
		constexpr auto Image_BG_Line = 0x2f8; // UImage*
		constexpr auto Image_ButtonClass = 0x300; // UImage*
		constexpr auto Image_ButtonDef = 0x308; // UImage*
		constexpr auto Image_ButtonDef_2 = 0x310; // UImage*
		constexpr auto Image_ButtonHovered = 0x318; // UImage*
		constexpr auto Image_MVPBorder = 0x320; // UImage*
		constexpr auto Image_MVPCrown = 0x328; // UImage*
		constexpr auto Image_MVPCrownCircle = 0x330; // UImage*
		constexpr auto Image_Separator = 0x338; // UImage*
		constexpr auto RetainerBox_Nickname = 0x340; // URetainerBox*
		constexpr auto RichTextBlock_Obj_Killer_2 = 0x348; // URichTextBlock*
		constexpr auto RichTextBlock_Obj_Killer_3 = 0x350; // URichTextBlock*
		constexpr auto RichTextBlock_Obj_Killer_4 = 0x358; // URichTextBlock*
		constexpr auto RichTextBlock_Obj_Surv_2 = 0x360; // URichTextBlock*
		constexpr auto RichTextBlock_Obj_Surv_3 = 0x368; // URichTextBlock*
		constexpr auto RichTextBlock_Obj_Surv_4 = 0x370; // URichTextBlock*
		constexpr auto ScrollBox_Nickname = 0x378; // UScrollBox*
		constexpr auto Text_Nickname = 0x380; // UTextBlock*
		constexpr auto Text_SelfCounter = 0x388; // UTextBlock*
		constexpr auto Text_VotedCounter = 0x390; // UTextBlock*
		constexpr auto isKiller = 0x398; // bool
		constexpr auto IsSelf = 0x399; // bool
		constexpr auto IsVoted = 0x39a; // bool
		constexpr auto IsMVP = 0x39b; // bool
		constexpr auto PlayerState = 0x3a0; // APS_PropHunt_C*
		constexpr auto Hovered = 0x3a8; // bool
		constexpr auto VoteCounter = 0x3ac; // int32_t
		constexpr auto WasPressed = 0x3b0; // bool
		constexpr auto Voted = 0x3b8; // FMulticastInlineDelegate
		constexpr auto AnimTimer = 0x3c8; // FTimerHandle
		constexpr auto IsForwardDirection = 0x3d0; // bool
		constexpr auto PlayerInfo = 0x3d8; // FEndGamePlayerData
	}

	namespace n_AExit_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto ExitDoor_Lock = 0x228; // UStaticMeshComponent*
		constexpr auto ExitDoor_Frame = 0x230; // UStaticMeshComponent*
		constexpr auto FMODLoopAudio3 = 0x238; // UFMODAudioComponent*
		constexpr auto Box4 = 0x240; // UBoxComponent*
		constexpr auto FMODAudioMus = 0x248; // UFMODAudioComponent*
		constexpr auto Box3 = 0x250; // UBoxComponent*
		constexpr auto FMODDoorOpening = 0x258; // UFMODAudioComponent*
		constexpr auto survEnter = 0x260; // UFMODAudioComponent*
		constexpr auto Scene2 = 0x268; // USceneComponent*
		constexpr auto Scene1 = 0x270; // USceneComponent*
		constexpr auto CurseAudio = 0x278; // UFMODAudioComponent*
		constexpr auto KillerBlock = 0x280; // UBoxComponent*
		constexpr auto StartPoint = 0x288; // USceneComponent*
		constexpr auto EndPoint = 0x290; // USceneComponent*
		constexpr auto CineCamera = 0x298; // UCineCameraComponent*
		constexpr auto ExitColliderForProps = 0x2a0; // UBoxComponent*
		constexpr auto ExitPoint = 0x2a8; // USceneComponent*
		constexpr auto CameraBlock = 0x2b0; // UBoxComponent*
		constexpr auto FloorSmoke = 0x2b8; // UParticleSystemComponent*
		constexpr auto DoorSmoke4 = 0x2c0; // UParticleSystemComponent*
		constexpr auto DoorSmoke3 = 0x2c8; // UParticleSystemComponent*
		constexpr auto DoorSmoke2 = 0x2d0; // UParticleSystemComponent*
		constexpr auto DoorSmoke1 = 0x2d8; // UParticleSystemComponent*
		constexpr auto FMODChainsAudio = 0x2e0; // UFMODAudioComponent*
		constexpr auto CurseLight = 0x2e8; // UPointLightComponent*
		constexpr auto Box2 = 0x2f0; // UBoxComponent*
		constexpr auto FMODLoopAudio2 = 0x2f8; // UFMODAudioComponent*
		constexpr auto FMODLoopAudio1 = 0x300; // UFMODAudioComponent*
		constexpr auto Box1 = 0x308; // UBoxComponent*
		constexpr auto ExitDoor_CHAINS = 0x310; // UStaticMeshComponent*
		constexpr auto SurvOpenPointHasItem = 0x318; // USceneComponent*
		constexpr auto SurvOpenPoint = 0x320; // USceneComponent*
		constexpr auto ExitDoor = 0x328; // UStaticMeshComponent*
		constexpr auto ExitDoor_2 = 0x330; // UStaticMeshComponent*
		constexpr auto ExitDoor_Static = 0x338; // UStaticMeshComponent*
		constexpr auto Scene = 0x340; // USceneComponent*
		constexpr auto FmodAudio = 0x348; // UFMODAudioComponent*
		constexpr auto ExitCollider = 0x350; // UBoxComponent*
		constexpr auto Box = 0x358; // UBoxComponent*
		constexpr auto DefaultSceneRoot = 0x360; // USceneComponent*
		constexpr auto DoorLock_Alpha_321FCDA846EA928116F9F48F49B95BE7 = 0x368; // float
		constexpr auto DoorLock__Direction_321FCDA846EA928116F9F48F49B95BE7 = 0x36c; // ETimelineDirection
		constexpr auto DoorLock = 0x370; // UTimelineComponent*
		constexpr auto Timeline_0_alpha_C016DF65404DECEA15D0BDA804B2F155 = 0x378; // float
		constexpr auto Timeline_0__Direction_C016DF65404DECEA15D0BDA804B2F155 = 0x37c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x380; // UTimelineComponent*
		constexpr auto CameraLerp_Alpha_092B50C44E8C1F47954A0EA779D48FA5 = 0x388; // float
		constexpr auto CameraLerp__Direction_092B50C44E8C1F47954A0EA779D48FA5 = 0x38c; // ETimelineDirection
		constexpr auto CameraLerp = 0x390; // UTimelineComponent*
		constexpr auto OpenDoorAnimTimeline_Alpha_0AA21B4245F607E33C0455AE3978165C = 0x398; // float
		constexpr auto OpenDoorAnimTimeline__Direction_0AA21B4245F607E33C0455AE3978165C = 0x39c; // ETimelineDirection
		constexpr auto OpenDoorAnimTimeline = 0x3a0; // UTimelineComponent*
		constexpr auto OpenProgress = 0x3a8; // float
		constexpr auto Opens? = 0x3ac; // bool
		constexpr auto Opened? = 0x3ad; // bool
		constexpr auto Actor = 0x3b0; // AActor*
		constexpr auto Block? = 0x3b8; // bool
		constexpr auto FullOpenProgress = 0x3bc; // float
		constexpr auto BoostModeValue = 0x3c0; // float
		constexpr auto DeltaSeconds = 0x3c4; // float
		constexpr auto ChainsMaterial = 0x3c8; // UMaterialInstanceDynamic*
		constexpr auto TransitionOn = 0x3d0; // bool
		constexpr auto TransitionOff = 0x3d1; // bool
		constexpr auto TransitionTime = 0x3d4; // float
		constexpr auto TurnOnDuration = 0x3d8; // float
		constexpr auto TurnOffDuration = 0x3dc; // float
		constexpr auto InvisRefraction = 0x3e0; // float
		constexpr auto InvisRefractionZero = 0x3e4; // float
		constexpr auto Float1 = 0x3e8; // float
		constexpr auto ErodeSubtractDef = 0x3ec; // float
		constexpr auto LoopAudioVolume1 = 0x3f0; // float
		constexpr auto LoopAudioVolume2 = 0x3f4; // float
		constexpr auto Speed = 0x3f8; // float
		constexpr auto SurvBoost = 0x3fc; // float
		constexpr auto Cursed = 0x400; // bool
		constexpr auto EscapedSurvs = 0x408; // TArray<ASurvivorMasterBP_C*>
		constexpr auto CameraLerp? = 0x418; // bool
		constexpr auto Find? = 0x419; // bool
		constexpr auto Tutorial? = 0x41a; // bool
		constexpr auto TeleportPoint = 0x420; // AActor*
		constexpr auto TutorialEnd = 0x428; // bool
		constexpr auto TutorialTrigger = 0x430; // ATutorialTrigger_C*
		constexpr auto DoorFrame = 0x438; // UMaterialInstanceDynamic*
		constexpr auto AlarmCount = 0x440; // int32_t
		constexpr auto BlockExit? = 0x444; // bool
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_ULobbyEffectsHUD_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto Black = 0x278; // UImage*
	}

	namespace n_AHUD_MainMenu_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x318; // USceneComponent*
		constexpr auto Widget = 0x320; // UW_MainMenu_C*
		constexpr auto Settings = 0x328; // UGeneralSettingWBP_C*
		constexpr auto PlayWindow = 0x330; // UWBP_PlayWindow_C*
		constexpr auto LoadingScreen = 0x338; // UW_LoadingScreen_C*
		constexpr auto LanguageSaveData = 0x340; // USaveGame*
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UKillerMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UGrannyKillerWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UIconAbilityCooldownWBP_Doppelganger_Middle_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut_23 = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn_23 = 0x270; // UWidgetAnimation*
		constexpr auto FadeOut = 0x278; // UWidgetAnimation*
		constexpr auto FadeIn = 0x280; // UWidgetAnimation*
		constexpr auto BG = 0x288; // UImage*
		constexpr auto BG_2 = 0x290; // UImage*
		constexpr auto BG_3 = 0x298; // UImage*
		constexpr auto BG_4 = 0x2a0; // UImage*
		constexpr auto Border_AbilityIcon = 0x2a8; // UBorder*
		constexpr auto Border_AbilityIcon_2 = 0x2b0; // UBorder*
		constexpr auto Border_AbilityIcon_3 = 0x2b8; // UBorder*
		constexpr auto Border_AbilityIcon_4 = 0x2c0; // UBorder*
		constexpr auto Border_AbilityIcon_5 = 0x2c8; // UBorder*
		constexpr auto Image_122 = 0x2d0; // UImage*
		constexpr auto Overlay_prop = 0x2d8; // UOverlay*
		constexpr auto TextBlock = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_2 = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_106 = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_162 = 0x2f8; // UTextBlock*
		constexpr auto WidgetSwitcher_Main = 0x300; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Surv = 0x308; // UWidgetSwitcher*
		constexpr auto Was?_2 = 0x310; // bool
		constexpr auto Material INstance = 0x318; // UMaterialInstanceDynamic*
		constexpr auto Was?_1 = 0x320; // bool
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x458; // FVector
		constexpr auto LineThickness = 0x464; // float
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UWBP_QuitDialog_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Blur_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Show_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Button_No = 0x278; // UButton*
		constexpr auto Button_Yes = 0x280; // UButton*
		constexpr auto Image_BlackScreen = 0x288; // UImage*
		constexpr auto Image_DialogBG = 0x290; // UImage*
		constexpr auto SafeZone_118 = 0x298; // USafeZone*
		constexpr auto SizeBox_1 = 0x2a0; // USizeBox*
		constexpr auto Text_Label = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_42 = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_147 = 0x2b8; // UTextBlock*
		constexpr auto OnAccept = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnAcceptDelayed = 0x2d0; // FMulticastInlineDelegate
		constexpr auto OnDecline = 0x2e0; // FMulticastInlineDelegate
		constexpr auto OnDeclineDelayed = 0x2f0; // FMulticastInlineDelegate
		constexpr auto IsBlured = 0x300; // bool
		constexpr auto Label = 0x308; // FText
		constexpr auto IsShown = 0x320; // bool
		constexpr auto LastFocus = 0x328; // UButton*
		constexpr auto In Style Normal = 0x330; // FSlateBrush
		constexpr auto In Style Normal_1 = 0x3b8; // FSlateBrush
		constexpr auto In Style Normal_2 = 0x440; // FSlateBrush
		constexpr auto In Style Normal_3 = 0x4c8; // FSlateBrush
		constexpr auto Label_Update = 0x550; // FText
		constexpr auto UpdateStyle = 0x568; // bool
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x458; // float
		constexpr auto CapsuleRadius = 0x45c; // float
	}

	namespace n_UEOSCoreEcomQueryOwnership {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBP_HTTP_Wrapper_C {
		constexpr auto UberGraphFrame = 0xb8; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_AGM_MainMenu_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x2c8; // USceneComponent*
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UAlarmsWidgetSize_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Actor = 0xb8; // AActor*
		constexpr auto Alarms = 0xc0; // TArray<ANewAlarmBP_C*>
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_Uw_ServerBrowser_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Searching_Anim = 0x268; // UWidgetAnimation*
		constexpr auto ChangePageName_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ChangeContent_Anim = 0x278; // UWidgetAnimation*
		constexpr auto ChangeDescription_Anim = 0x280; // UWidgetAnimation*
		constexpr auto BG_4 = 0x288; // UImage*
		constexpr auto Button_Back = 0x290; // UButton*
		constexpr auto Button_CreateGame = 0x298; // UButton*
		constexpr auto Button_GM_Prophunt = 0x2a0; // UButton*
		constexpr auto Button_GM_Propnight = 0x2a8; // UButton*
		constexpr auto Button_JoinPrivate = 0x2b0; // UButton*
		constexpr auto Button_JoinServer = 0x2b8; // UButton*
		constexpr auto Button_JoinServer_Left = 0x2c0; // UButton*
		constexpr auto Button_JoinServer_Right = 0x2c8; // UButton*
		constexpr auto Button_PublicGames = 0x2d0; // UButton*
		constexpr auto Button_Update = 0x2d8; // UButton*
		constexpr auto ComboBoxString_REGIONSINFO = 0x2e0; // UComboBoxString*
		constexpr auto FreeMode = 0x2e8; // UButton*
		constexpr auto Image = 0x2f0; // UImage*
		constexpr auto Image_3 = 0x2f8; // UImage*
		constexpr auto Image_130 = 0x300; // UImage*
		constexpr auto Image_321 = 0x308; // UImage*
		constexpr auto Image_ArrowLeft = 0x310; // UImage*
		constexpr auto Image_ArrowRight = 0x318; // UImage*
		constexpr auto Image_BackIcon = 0x320; // UImage*
		constexpr auto Image_CG_Icon = 0x328; // UImage*
		constexpr auto Image_GM_Background = 0x330; // UImage*
		constexpr auto Image_RegionBG = 0x338; // UImage*
		constexpr auto Image_UpdateServerList = 0x340; // UImage*
		constexpr auto QueryPoolSize = 0x348; // UTextBlock*
		constexpr auto ServerButton = 0x350; // UButton*
		constexpr auto ServersInQueue = 0x358; // UTextBlock*
		constexpr auto SizeBox_GameModeDescription = 0x360; // USizeBox*
		constexpr auto SizeBox_GameModeMenu = 0x368; // USizeBox*
		constexpr auto SizeBox_JoinWithCode = 0x370; // USizeBox*
		constexpr auto SizeBox_TopMenu_BrowserRegion = 0x378; // USizeBox*
		constexpr auto SizeBox_Update = 0x380; // USizeBox*
		constexpr auto TextBlock = 0x388; // UTextBlock*
		constexpr auto TextBlock_4 = 0x390; // UTextBlock*
		constexpr auto TextBlock_BackButton = 0x398; // UTextBlock*
		constexpr auto TextBlock_Hunt = 0x3a0; // UTextBlock*
		constexpr auto TextBlock_Night = 0x3a8; // UTextBlock*
		constexpr auto TextBlock_REGION = 0x3b0; // UTextBlock*
		constexpr auto TotalServers = 0x3b8; // UTextBlock*
		constexpr auto VerticalBox_Buttons = 0x3c0; // UVerticalBox*
		constexpr auto W_BrowserCreateServer = 0x3c8; // UW_BrowserCreateServer_C*
		constexpr auto W_PrivateGame = 0x3d0; // UW_PrivateGame_C*
		constexpr auto W_PublicServers_Fake = 0x3d8; // UW_PublicServers_C*
		constexpr auto W_PublicServers_Propnight = 0x3e0; // UW_PublicServers_C*
		constexpr auto WBP_CustomComboBox_Maps = 0x3e8; // UWBP_CustomComboBox_C*
		constexpr auto WBP_CustomComboBox_Region = 0x3f0; // UWBP_CustomComboBox_C*
		constexpr auto WidgetSwitcher_GameModeDescription = 0x3f8; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Main = 0x400; // UWidgetSwitcher*
		constexpr auto SessionList = 0x408; // TArray<UBP_SessionData_C*>
		constexpr auto session = 0x418; // UBP_SessionData_C*
		constexpr auto CurrentGameMode = 0x420; // int32_t
		constexpr auto WaitingEntries = 0x428; // TArray<UW_ServerEntryV3_C*>
		constexpr auto IsSearching = 0x438; // bool
		constexpr auto SearchingIsOver = 0x440; // FMulticastInlineDelegate
		constexpr auto NewGM = 0x450; // int32_t
		constexpr auto IsAnimPlaying = 0x454; // bool
		constexpr auto IsSearchingAfterCreation = 0x455; // bool
		constexpr auto SearchingTickTimer = 0x458; // FTimerHandle
		constexpr auto HasResponce = 0x460; // bool
		constexpr auto ExplorerWidget = 0x468; // UW_Path_C*
		constexpr auto PlayScreenWidget = 0x470; // UW_PlayScreen_C*
		constexpr auto ToCreateGame = 0x478; // bool
		constexpr auto SessionsQueue = 0x480; // TArray<UBP_SessionData_C*>
		constexpr auto SessionsPool = 0x490; // TArray<UBP_SessionData_C*>
		constexpr auto ControllerRef = 0x4a0; // APlayerController*
		constexpr auto DoneLoadServers = 0x4a8; // FMulticastInlineDelegate
		constexpr auto SessionPoolSize = 0x4b8; // int32_t
		constexpr auto RegionArray = 0x4c0; // TArray<FString>
		constexpr auto TotalServersCount = 0x4d0; // int32_t
		constexpr auto SessionItemCounter = 0x4d4; // int32_t
	}

	namespace n_UImprisonment_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
		constexpr auto SurvRefs = 0x128; // TArray<ASurvivorMasterBP_C*>
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent {
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UEOSCoreLeaderboardsQueryLeaderboardRanks {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreConnectQueryExternalAccountMappings {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UFootprintComponent_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto Mesh = 0xb8; // USceneComponent*
		constexpr auto CurrentFootwear = 0xc0; // EFootprintStyle
		constexpr auto FootState = 0xc1; // EFootState
		constexpr auto MaxMudSteps = 0xc4; // float
		constexpr auto CurrentMudSteps = 0xc8; // float
		constexpr auto MaxSandSteps = 0xcc; // float
		constexpr auto CurrentSandSteps = 0xd0; // float
		constexpr auto Left = 0xd4; // bool
		constexpr auto Right = 0xd5; // bool
		constexpr auto Location = 0xd8; // FVector
		constexpr auto Rotation = 0xe4; // FRotator
		constexpr auto MaxWetSteps = 0xf0; // float
		constexpr auto CurrentWetSteps = 0xf4; // float
		constexpr auto MaxBloodSteps = 0xf8; // float
		constexpr auto CurrentBloodSteps = 0xfc; // float
		constexpr auto CurrentMulticastSteps = 0x100; // float
		constexpr auto CurrentMaxSteps = 0x104; // float
		constexpr auto FootprintActor = 0x108; // AFootprint_Actor_C*
		constexpr auto decal = 0x110; // UMaterialInstance*
		constexpr auto ImpulseThreshold = 0x118; // float
		constexpr auto VolumeSensitivity = 0x11c; // float
		constexpr auto VolumeFootprint = 0x120; // float
		constexpr auto ImpulseThresholdMax = 0x124; // float
		constexpr auto MaxVolume = 0x128; // float
		constexpr auto FmodAudio = 0x130; // UFMODAudioComponent*
		constexpr auto JumpEnd = 0x138; // bool
		constexpr auto Killer? = 0x139; // bool
		constexpr auto ImProp? = 0x13a; // bool
		constexpr auto JumpStart = 0x13b; // bool
		constexpr auto Run? = 0x13c; // bool
		constexpr auto KillerType = 0x140; // int32_t
		constexpr auto Crouch? = 0x144; // bool
		constexpr auto Crawl? = 0x145; // bool
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UProphuntGameInstance {
		constexpr auto IsInMainMenu = 0x1a8; // bool
	}

	namespace n_UbansheeAnimBp_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0xb60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0xb88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0xbb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0xbd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0xc00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0xc28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0xc50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0xc78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0xca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0xcc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0xcf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0xd18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0xd40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0xd68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0xd90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0xdb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0xde0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xe08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0xe30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xe58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xe80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xea8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xed0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xef8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xf20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xf48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xf70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xf98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0xfc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0xfe8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x1010; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1038; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1060; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1088; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x10b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x10d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1100; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1128; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1150; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1178; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x11a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x11c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x11f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1218; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x1240; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x1268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x1290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x12b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x12e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1308; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x1388; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x13b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1438; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x14b8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_18 = 0x1558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x1608; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1638; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x1720; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1750; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x17d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1880; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x18b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x19e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1a90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1b40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1ca0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1cd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x1d50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1d80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1e00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x1e80; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_6 = 0x1f20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1f50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1fd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2080; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2120; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x21a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x21d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x2250; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2280; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x2300; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x23a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2420; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x2450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x24d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2500; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x25b0; // FAnimNode_Root
		constexpr auto keepSurv = 0x25e0; // float
		constexpr auto IsInAir = 0x25e4; // bool
		constexpr auto Speed = 0x25e8; // float
		constexpr auto Direction = 0x25ec; // float
		constexpr auto AttackBool = 0x25f0; // bool
		constexpr auto JumpEndChek = 0x25f1; // bool
		constexpr auto FIRE = 0x25f2; // bool
		constexpr auto Plant = 0x25f3; // bool
		constexpr auto MarioStun = 0x25f4; // bool
		constexpr auto TypeAttack = 0x25f8; // int32_t
		constexpr auto KnifeIn = 0x25fc; // bool
		constexpr auto KnifeSpawn = 0x25fd; // bool
		constexpr auto Astral = 0x25fe; // bool
		constexpr auto Fly = 0x25ff; // bool
		constexpr auto Flashed = 0x2600; // bool
		constexpr auto PropHunt? = 0x2601; // bool
		constexpr auto SpeedRateF = 0x2604; // float
		constexpr auto Delta Time X = 0x2608; // float
		constexpr auto TimeRun = 0x260c; // float
		constexpr auto Broke Anim = 0x2610; // bool
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_AReanimateCoin_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_UEOSCorePlayerDataStorageQueryFileList {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UEOSCoreAchievementsQueryDefinitions {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_AElevator_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
		constexpr auto StageLocation = 0x230; // TArray<FVector>
		constexpr auto CurrentFloor = 0x240; // int32_t
		constexpr auto Up? = 0x244; // bool
		constexpr auto Interactable? = 0x245; // bool
		constexpr auto NextFloor = 0x248; // int32_t
		constexpr auto Queue = 0x250; // TArray<int32_t>
		constexpr auto ElevatorMRefs = 0x260; // TArray<AElevatorM_C*>
		constexpr auto Using? = 0x270; // bool
	}

	namespace n_UPropBox_opening_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x498; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x538; // FAnimNode_SequencePlayer
		constexpr auto Start? = 0x5b8; // bool
		constexpr auto Opened = 0x5b9; // bool
	}

	namespace n_ABasePropBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Box = 0x228; // UBoxComponent*
		constexpr auto PropStaticMesh = 0x230; // UStaticMeshComponent*
		constexpr auto ShakeTimeline_Alpha_6E84376740D7DD5629651BBE931BFF0C = 0x238; // float
		constexpr auto ShakeTimeline__Direction_6E84376740D7DD5629651BBE931BFF0C = 0x23c; // ETimelineDirection
		constexpr auto ShakeTimeline = 0x240; // UTimelineComponent*
		constexpr auto Start = 0x250; // FTransform
		constexpr auto ImpulseThreshold = 0x280; // float
		constexpr auto Volume = 0x284; // float
		constexpr auto Active? = 0x288; // bool
		constexpr auto Mesh = 0x290; // UStaticMesh*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto Color = 0x2a0; // FLinearColor
		constexpr auto Scale = 0x2b0; // float
		constexpr auto HasOutline? = 0x2b4; // bool
		constexpr auto PropHealth = 0x2b8; // float
		constexpr auto DefaultRot = 0x2bc; // FRotator
		constexpr auto FloatX = 0x2c8; // float
		constexpr auto FloatY = 0x2cc; // float
		constexpr auto Block = 0x2d0; // bool
		constexpr auto Perk Killer = 0x2d8; // UPerkKiller_C*
		constexpr auto CursedProp? = 0x2e0; // bool
		constexpr auto DynamicMaterials = 0x2e8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto StandartMaterials = 0x2f8; // TArray<UMaterialInterface*>
		constexpr auto MaterialsCreated? = 0x308; // bool
		constexpr auto ChallengeStarted? = 0x309; // bool
		constexpr auto Replicated? = 0x30a; // bool
		constexpr auto DefaultLoc = 0x30c; // FVector
		constexpr auto EndGameHide? = 0x318; // bool
		constexpr auto Tutorial? = 0x319; // bool
		constexpr auto CastShadow? = 0x31a; // bool
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto customData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UChainLobbyAnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool = 0x2f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x440; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x4f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x520; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult = 0x5d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x678; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x758; // FAnimNode_StateMachine
		constexpr auto Reset? = 0x808; // bool
	}

	namespace n_UGI_BattlEye_Prophunt_C {
		constexpr auto UberGraphFrame = 0x8f0; // FPointerToUberGraphFrame
		constexpr auto CurrentServerAddress = 0x8f8; // FString
		constexpr auto BEClient = 0x908; // UO_BEClient_C*
		constexpr auto IsBEInited = 0x910; // bool
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UATPCCameraModeScript {
		constexpr auto OwningCamera = 0x28; // UATPCCameraComponent*
		constexpr auto bEnableTick = 0x30; // bool
		constexpr auto TickGroup = 0x34; // EATPCCameraModeScriptTickGroup
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15bc; // float
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UGrannyKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UEOSCorePlayerDataStorageWriteFile {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UDoppelgangerSpell1_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto DefaultSkeletalMesh = 0xf0; // USkeletalMesh*
		constexpr auto DefaultSkeletalMeshFPP = 0xf8; // USkeletalMesh*
		constexpr auto DefaultAnimClassFPP = 0x100; // UAnimInstance*
		constexpr auto DefaultAnimClass = 0x108; // UAnimInstance*
		constexpr auto DefaultMaterialsFPP = 0x110; // TArray<UMaterialInterface*>
		constexpr auto DefaultMaterials = 0x120; // TArray<UMaterialInterface*>
		constexpr auto DefaultMeshTransform = 0x130; // FTransform
		constexpr auto DefaultMeshTransformFPP = 0x160; // FTransform
		constexpr auto GetSurvPawn = 0x190; // AActor*
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UW_LobbyKiller_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Select_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button = 0x270; // UButton*
		constexpr auto Image_110 = 0x278; // UImage*
		constexpr auto Image_killerIcon = 0x280; // UImage*
		constexpr auto Image_RedBlur = 0x288; // UImage*
		constexpr auto KillerName = 0x290; // UTextBlock*
		constexpr auto Overlay_FULL = 0x298; // UOverlay*
		constexpr auto KillerType = 0x2a0; // KillerType
		constexpr auto Owner = 0x2a8; // UW_MiniLobby_C*
		constexpr auto CounterTimeUP = 0x2b0; // float
		constexpr auto CounterTimeDOWN = 0x2b4; // float
		constexpr auto bStartAnimButton?UP = 0x2b8; // bool
		constexpr auto bStartAnimButton?DOWN = 0x2b9; // bool
		constexpr auto Selected = 0x2ba; // bool
		constexpr auto In Style Normal = 0x2c0; // FSlateBrush
		constexpr auto In Style Normal_1 = 0x348; // FSlateBrush
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UW_SurvonChair_Banned_C {
		constexpr auto HealthProgress = 0x260; // UProgressBar*
		constexpr auto Image_148 = 0x268; // UImage*
		constexpr auto SafeZone_235 = 0x270; // USafeZone*
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x398; // FDestructibleParameters
		constexpr auto FractureEffects = 0x420; // TArray<FFractureEffect>
	}

	namespace n_ADeathSparks_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Chair = 0x228; // USkeletalMeshComponent*
		constexpr auto Centre = 0x230; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
	}

	namespace n_UFroggie_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEOSCoreFriendsQueryFriends {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UEOSCoreLobbyJoinLobby {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USaveUserData_C {
		constexpr auto SurvSkinID = 0x28; // int32_t
		constexpr auto SurvSkinArray = 0x30; // TArray<int32_t>
		constexpr auto Exp = 0x40; // int32_t
		constexpr auto CharSelectedSkinIds = 0x48; // TMap<int32_t, int32_t>
		constexpr auto ArrayOfSkinsThatPlayerOwn = 0x98; // TArray<int32_t>
		constexpr auto coins = 0xa8; // int32_t
		constexpr auto lootbox = 0xac; // int32_t
		constexpr auto OpenedLootBoxCount = 0xb0; // int32_t
		constexpr auto SelectedBannerID = 0xb4; // int32_t
		constexpr auto GLOBAL_XP = 0xb8; // int32_t
		constexpr auto MMR_SURV = 0xbc; // int32_t
		constexpr auto MMR_KILLER = 0xc0; // int32_t
		constexpr auto TagID = 0xc4; // int32_t
		constexpr auto IsNewSkin = 0xc8; // bool
		constexpr auto IsNewBanner = 0xc9; // bool
		constexpr auto IsNewTag = 0xca; // bool
		constexpr auto IsNewAvatar = 0xcb; // bool
		constexpr auto IsSkinCustomNew = 0xd0; // TMap<int32_t, bool>
		constexpr auto BannerThatPlayerOwnArr = 0x120; // TArray<int32_t>
		constexpr auto TagsThatPlayerOwnArr = 0x130; // TArray<int32_t>
		constexpr auto AvatarThatPlayerOwnArr = 0x140; // TArray<int32_t>
		constexpr auto IsAvatarCustomNew = 0x150; // TMap<int32_t, bool>
		constexpr auto IsBannerCustomNew = 0x1a0; // TMap<int32_t, bool>
		constexpr auto IsTagsCustomNew = 0x1f0; // TMap<int32_t, bool>
		constexpr auto AvatarID = 0x240; // int32_t
		constexpr auto UnlockAllSkins = 0x244; // bool
		constexpr auto DisableAllSkin = 0x245; // bool
		constexpr auto DltSkin = 0x246; // bool
		constexpr auto ResetDot = 0x247; // bool
		constexpr auto Scrap = 0x248; // int32_t
		constexpr auto Mmr = 0x24c; // int32_t
		constexpr auto MatchesPlayed = 0x250; // int32_t
	}

	namespace n_UKillerWalkGrabbedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UMineSpell_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto SkillActivated? = 0xf0; // bool
		constexpr auto Mines = 0xf8; // TArray<AMine_C*>
		constexpr auto Count = 0x108; // int32_t
	}

	namespace n_UEOSCoreConnectCreateUser {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto onSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UKillerJumpShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UEOSCoreSessionsEndSession {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ULuminARLightEstimate {
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UChaseShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_AEndGameRenderMesh_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto SceneCaptureComponent2D = 0x228; // USceneCaptureComponent2D*
		constexpr auto SpringArm = 0x230; // USpringArmComponent*
		constexpr auto ChildActor = 0x238; // UChildActorComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UDoppelganger_AnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x2c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x4a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x560; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x600; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x628; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x6c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x6f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x7d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x930; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xa48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xa70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xa98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xac0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xae8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xb10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xb38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xb60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0xb88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0xbb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0xbd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0xc00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0xc28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0xc50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xc78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0xca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0xcc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0xcf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0xd18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0xd40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0xd68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0xd90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0xdb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0xde0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0xe08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xe30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xe58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0xe80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0xf00; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0xf30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x1018; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x10d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x1158; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x1188; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1270; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x1330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x13b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x13e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x14c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x1588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1608; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x1638; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x16d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x1758; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x17d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1858; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_12 = 0x18f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x1928; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x19a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x19d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1a58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x1a88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x1b08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x1b88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x1c08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x1c88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x1d08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1d88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x1e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x1e88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1f28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x1fc8; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByInt = 0x2068; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2108; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x21a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2268; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x2350; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x2380; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x2400; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x2430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x24b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x2578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x25f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x26a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x27f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2820; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x28e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x2968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x29e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x2b18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2cb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x2d58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2e18; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2f00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2fe8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x3068; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x30e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x3188; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x3228; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x3310; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x33d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x3498; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x3580; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x3668; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3698; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x3748; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3808; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose = 0x38a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x38d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3950; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x39f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x3a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x3aa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x3ac8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x3b70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x3c50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x3cd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3d00; // FAnimNode_StateMachine
		constexpr auto KillerType = 0x3db0; // int32_t
		constexpr auto IsHolded = 0x3db4; // float
		constexpr auto IsOnAir? = 0x3db8; // bool
		constexpr auto Speed = 0x3dbc; // float
		constexpr auto SpeedChek = 0x3dc0; // float
		constexpr auto TypeAttack = 0x3dc4; // int32_t
		constexpr auto Attak = 0x3dc8; // bool
		constexpr auto Direction = 0x3dcc; // float
		constexpr auto JumpEndChek = 0x3dd0; // bool
		constexpr auto FIRE = 0x3dd1; // bool
		constexpr auto Plant = 0x3dd2; // bool
		constexpr auto Flashed = 0x3dd3; // bool
		constexpr auto Drop = 0x3dd4; // bool
		constexpr auto ChairDrop = 0x3dd5; // bool
		constexpr auto Catch = 0x3dd6; // bool
		constexpr auto MarioStun = 0x3dd7; // bool
		constexpr auto Runaway = 0x3dd8; // bool
		constexpr auto HeadR = 0x3ddc; // FRotator
		constexpr auto Vertical rotation = 0x3de8; // float
		constexpr auto HorizontalValue = 0x3dec; // float
		constexpr auto bTurnL = 0x3df0; // bool
		constexpr auto bTurnR = 0x3df1; // bool
		constexpr auto IsOwner? = 0x3df2; // bool
		constexpr auto GrabbedChar? = 0x3df3; // bool
		constexpr auto SchoolBell? = 0x3df4; // bool
		constexpr auto HiddenAttack? = 0x3df5; // bool
		constexpr auto HardHit? = 0x3df6; // bool
		constexpr auto Blend Weights 0 = 0x3df8; // float
		constexpr auto Delta Time X = 0x3dfc; // float
		constexpr auto Get Ready = 0x3e00; // bool
		constexpr auto PropHunt? = 0x3e01; // bool
		constexpr auto SpeedRateF = 0x3e04; // float
		constexpr auto Broke Anim = 0x3e08; // bool
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_UPlayerNickName_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto NicknameWidget = 0x268; // UTextBlock*
		constexpr auto On = 0x270; // bool
		constexpr auto Time = 0x274; // float
		constexpr auto End = 0x278; // bool
	}

	namespace n_UChatWindow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_2 = 0x268; // UCanvasPanel*
		constexpr auto ChatLog = 0x270; // UScrollBox*
		constexpr auto HiddenCloseChatButton = 0x278; // UButton*
		constexpr auto Image_77 = 0x280; // UImage*
		constexpr auto Image_91 = 0x288; // UImage*
		constexpr auto Image_104 = 0x290; // UImage*
		constexpr auto Image_192 = 0x298; // UImage*
		constexpr auto Image_Fake = 0x2a0; // UImage*
		constexpr auto Image_Ref = 0x2a8; // UImage*
		constexpr auto Image_ScrollBG = 0x2b0; // UImage*
		constexpr auto Image_ScrollThumb = 0x2b8; // UImage*
		constexpr auto MultiLineChatEntry = 0x2c0; // UMultiLineEditableText*
		constexpr auto OverlayChatEntry = 0x2c8; // UOverlay*
		constexpr auto SB_ScrollRail = 0x2d0; // USizeBox*
		constexpr auto TypeMessage = 0x2d8; // UTextBlock*
		constexpr auto Window = 0x2e0; // UBorder*
		constexpr auto Global? = 0x2e8; // bool
		constexpr auto VisibleWindow = 0x2ec; // FLinearColor
		constexpr auto HiddenWindow = 0x2fc; // FLinearColor
		constexpr auto CustomOpen? = 0x30c; // bool
		constexpr auto IsChatVisible = 0x30d; // bool
		constexpr auto IsShiftPressed = 0x30e; // bool
		constexpr auto CurrentScrollOffset = 0x310; // float
		constexpr auto EndScrollOffset = 0x314; // float
		constexpr auto NeedAutoScroll = 0x318; // bool
		constexpr auto AutoScrollSpeed = 0x31c; // float
		constexpr auto ChatLogHeight = 0x320; // float
		constexpr auto FakeRemoved = 0x324; // bool
		constexpr auto DefaultTimeOffset = 0x328; // float
		constexpr auto CurrentTimeOffset = 0x32c; // float
		constexpr auto ArrayHiddenMessages = 0x330; // TArray<UChatWindowText_C*>
		constexpr auto HandlerHiddenMessages = 0x340; // FTimerHandle
		constexpr auto MessageVisibilityTime = 0x348; // float
		constexpr auto MaxCountSumbol = 0x34c; // int32_t
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UWBP_CustomComboBoxEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Entry = 0x268; // UButton*
		constexpr auto CheckBox_MultiValue = 0x270; // UCheckBox*
		constexpr auto Image_Selected = 0x278; // UImage*
		constexpr auto Text_EntryName = 0x280; // UTextBlock*
		constexpr auto EntryName = 0x288; // FText
		constexpr auto OnClicked = 0x2a0; // FMulticastInlineDelegate
		constexpr auto IsSelected = 0x2b0; // bool
		constexpr auto CheckerStyle = 0x2b8; // FCheckBoxStyle
		constexpr auto DefaultButtonStyle = 0x838; // FButtonStyle
	}

	namespace n_UPauseMenu_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowNotification = 0x268; // UWidgetAnimation*
		constexpr auto HideAllButtons_Anim = 0x270; // UWidgetAnimation*
		constexpr auto MoveExit = 0x278; // UWidgetAnimation*
		constexpr auto MoveSettings = 0x280; // UWidgetAnimation*
		constexpr auto MoveContinue = 0x288; // UWidgetAnimation*
		constexpr auto ShowButtons = 0x290; // UWidgetAnimation*
		constexpr auto ChangeButtonText_Anim = 0x298; // UWidgetAnimation*
		constexpr auto HideMenu_Anim = 0x2a0; // UWidgetAnimation*
		constexpr auto FadeAnim = 0x2a8; // UWidgetAnimation*
		constexpr auto Background_Mask = 0x2b0; // UImage*
		constexpr auto Background_Mask_2 = 0x2b8; // UImage*
		constexpr auto Button_212 = 0x2c0; // UButton*
		constexpr auto Button_Back = 0x2c8; // UButton*
		constexpr auto Button_DefaultCfg = 0x2d0; // UButton*
		constexpr auto CanvasPanel_1 = 0x2d8; // UCanvasPanel*
		constexpr auto ContinueButton = 0x2e0; // UButton*
		constexpr auto ExitButton = 0x2e8; // UButton*
		constexpr auto HorizontalBox_144 = 0x2f0; // UHorizontalBox*
		constexpr auto Image_2 = 0x2f8; // UImage*
		constexpr auto Image_67 = 0x300; // UImage*
		constexpr auto Image_93 = 0x308; // UImage*
		constexpr auto Image_119 = 0x310; // UImage*
		constexpr auto Image_BackIcon = 0x318; // UImage*
		constexpr auto Image_CHover = 0x320; // UImage*
		constexpr auto Image_EHover = 0x328; // UImage*
		constexpr auto Image_FadeScreen = 0x330; // UImage*
		constexpr auto Image_SHover = 0x338; // UImage*
		constexpr auto Overlay_1 = 0x340; // UOverlay*
		constexpr auto Overlay_45 = 0x348; // UOverlay*
		constexpr auto Overlay_89 = 0x350; // UOverlay*
		constexpr auto Overlay_107 = 0x358; // UOverlay*
		constexpr auto Overlay_221 = 0x360; // UOverlay*
		constexpr auto ProgressBar_109 = 0x368; // UProgressBar*
		constexpr auto ProgressBar_125 = 0x370; // UProgressBar*
		constexpr auto SafeZone = 0x378; // USafeZone*
		constexpr auto SafeZone_4 = 0x380; // USafeZone*
		constexpr auto SafeZone_5 = 0x388; // USafeZone*
		constexpr auto SafeZone_6 = 0x390; // USafeZone*
		constexpr auto SafeZone_7 = 0x398; // USafeZone*
		constexpr auto SafeZone_8 = 0x3a0; // USafeZone*
		constexpr auto SafeZone_9 = 0x3a8; // USafeZone*
		constexpr auto SafeZone_126 = 0x3b0; // USafeZone*
		constexpr auto SettingsButton = 0x3b8; // UButton*
		constexpr auto SizeBox_BackButton = 0x3c0; // USizeBox*
		constexpr auto SizeBox_Buttons = 0x3c8; // USizeBox*
		constexpr auto TextBlock_2 = 0x3d0; // UTextBlock*
		constexpr auto TextBlock_183 = 0x3d8; // UTextBlock*
		constexpr auto TextBlock_354 = 0x3e0; // UTextBlock*
		constexpr auto TextBlock_501 = 0x3e8; // UTextBlock*
		constexpr auto TextBlock_BackButton = 0x3f0; // UTextBlock*
		constexpr auto WBP_QuitDialog = 0x3f8; // UWBP_QuitDialog_C*
		constexpr auto Paused? = 0x400; // bool
		constexpr auto SettingsOpen? = 0x401; // bool
		constexpr auto LastKnowFocused = 0x408; // UButton*
		constexpr auto StyleButtonArray = 0x410; // TArray<UButton*>
		constexpr auto StyleButton = 0x420; // TArray<UObject*>
		constexpr auto ImageSizeButton = 0x430; // FVector2D
		constexpr auto textArray = 0x438; // TArray<UTextBlock*>
		constexpr auto IsBackButtonHovered = 0x448; // bool
		constexpr auto HoveredButton = 0x450; // UButton*
		constexpr auto Hide All Buttons Anim = 0x458; // UWidgetAnimation*
		constexpr auto BlockPause = 0x460; // bool
		constexpr auto SliderValueFocus = 0x464; // float
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UInventorySurvCommand_Radial_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fade_Fart = 0x268; // UWidgetAnimation*
		constexpr auto Fade_Mission = 0x270; // UWidgetAnimation*
		constexpr auto Fade_Baby = 0x278; // UWidgetAnimation*
		constexpr auto Button_1 = 0x280; // UButton*
		constexpr auto Button_2 = 0x288; // UButton*
		constexpr auto Button_3 = 0x290; // UButton*
		constexpr auto CanvasPanel_1202 = 0x298; // UCanvasPanel*
		constexpr auto CanvasPanel_1314 = 0x2a0; // UCanvasPanel*
		constexpr auto CanvasPanel_1401 = 0x2a8; // UCanvasPanel*
		constexpr auto Image_357 = 0x2b0; // UImage*
		constexpr auto Image_BG = 0x2b8; // UImage*
		constexpr auto Image_H_4 = 0x2c0; // UImage*
		constexpr auto Image_H_5 = 0x2c8; // UImage*
		constexpr auto Image_H_6 = 0x2d0; // UImage*
		constexpr auto Image_SelectorBG = 0x2d8; // UImage*
		constexpr auto SizeBox_Picker = 0x2e0; // USizeBox*
		constexpr auto slot_ind0 = 0x2e8; // UImage*
		constexpr auto slot_ind1 = 0x2f0; // UImage*
		constexpr auto Slot_ind2 = 0x2f8; // UImage*
		constexpr auto TextBlock_ITEM = 0x300; // UTextBlock*
		constexpr auto TextBlock_MAIN = 0x308; // UTextBlock*
		constexpr auto TextBlock_MAIN_2 = 0x310; // UTextBlock*
		constexpr auto WidgetSwitcher_action = 0x318; // UWidgetSwitcher*
		constexpr auto Interacting? = 0x320; // bool
		constexpr auto InputVector = 0x324; // FVector2D
		constexpr auto CIndex = 0x32c; // int32_t
		constexpr auto PressedStyle_BTN = 0x330; // FButtonStyle
		constexpr auto SelectedStyle_BTN = 0x5a8; // FButtonStyle
		constexpr auto DefaultStyle_BTN = 0x820; // FButtonStyle
		constexpr auto DefaultStyle_BTN_3D = 0xa98; // FButtonStyle
		constexpr auto CIndex_Music = 0xd10; // int32_t
		constexpr auto DefaultStyle_BTN_3D_1 = 0xd18; // FButtonStyle
		constexpr auto CIndex_ZOrder = 0xf90; // int32_t
		constexpr auto Inventory_Icon = 0xf98; // TArray<UPaperSprite*>
		constexpr auto Healpack = 0xfa8; // FText
		constexpr auto Flashlight = 0xfc0; // FText
		constexpr auto EnergyDrink = 0xfd8; // FText
		constexpr auto Picklock = 0xff0; // FText
		constexpr auto Key = 0x1008; // FText
		constexpr auto Book = 0x1020; // FText
		constexpr auto Potion = 0x1038; // FText
		constexpr auto Shield = 0x1050; // FText
		constexpr auto Painkiller = 0x1068; // FText
		constexpr auto Tools = 0x1080; // FText
		constexpr auto YellowJar = 0x1098; // FText
		constexpr auto JarOfGlue = 0x10b0; // FText
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UPlayFabAdminAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x7d8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x7e0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x7e8; // UPlayFabJsonObject*
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UWBP_QuickSearch_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChangeText_DisappearAnim = 0x268; // UWidgetAnimation*
		constexpr auto HideButton_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ChangeText_AppearAnim = 0x278; // UWidgetAnimation*
		constexpr auto Throbber_Anim = 0x280; // UWidgetAnimation*
		constexpr auto ShowHide_Anim = 0x288; // UWidgetAnimation*
		constexpr auto Button_Cancel = 0x290; // UButton*
		constexpr auto Image_Separator = 0x298; // UImage*
		constexpr auto Image_Throbber = 0x2a0; // UImage*
		constexpr auto Image_ThrobberBG = 0x2a8; // UImage*
		constexpr auto RichTextBlock_Timer = 0x2b0; // URichTextBlock*
		constexpr auto TextBlock_ButtonText = 0x2b8; // UTextBlock*
		constexpr auto TextBlock_Label = 0x2c0; // UTextBlock*
		constexpr auto TargetTime = 0x2c8; // int32_t
		constexpr auto CurrentTime = 0x2cc; // int32_t
		constexpr auto Timer = 0x2d0; // FTimerHandle
		constexpr auto OnTimeIsOver = 0x2d8; // FMulticastInlineDelegate
		constexpr auto IsCanceled = 0x2e8; // bool
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x440; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x448; // bool
		constexpr auto bFilledSpline = 0x449; // bool
		constexpr auto AssociatedSpline = 0x450; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x458; // int32_t
		constexpr auto SegmentOverlapAmount = 0x45c; // float
		constexpr auto TerrainColor = 0x460; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x470; // int32_t
		constexpr auto SpriteCollisionDomain = 0x474; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x478; // float
		constexpr auto CachedBodySetup = 0x480; // UBodySetup*
	}

	namespace n_UCustomGraphicButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_LeftClick = 0x268; // UButton*
		constexpr auto Button_RightClick = 0x270; // UButton*
		constexpr auto ButtonReFocuser = 0x278; // UButton*
		constexpr auto Changer = 0x280; // UOverlay*
		constexpr auto Image_83 = 0x288; // UImage*
		constexpr auto Image_92 = 0x290; // UImage*
		constexpr auto Image_168 = 0x298; // UImage*
		constexpr auto SafeZone_71 = 0x2a0; // USafeZone*
		constexpr auto TextBlock_154 = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_SET = 0x2b0; // UTextBlock*
		constexpr auto EventDispatcher_Left = 0x2b8; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_Right = 0x2c8; // FMulticastInlineDelegate
		constexpr auto EventDispatcher_FocusedStyle = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x2e8; // FMulticastInlineDelegate
		constexpr auto bIsSelected = 0x2f8; // bool
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UW_PlayerSkinInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SelectToNormal_Anim = 0x268; // UWidgetAnimation*
		constexpr auto HoverToSelect_Anim = 0x270; // UWidgetAnimation*
		constexpr auto NormalToHover_Anim = 0x278; // UWidgetAnimation*
		constexpr auto Clicked = 0x280; // UWidgetAnimation*
		constexpr auto Button_Skin = 0x288; // UButton*
		constexpr auto Image_74 = 0x290; // UImage*
		constexpr auto Image_Hovered = 0x298; // UImage*
		constexpr auto Image_Normal = 0x2a0; // UImage*
		constexpr auto Image_Selected = 0x2a8; // UImage*
		constexpr auto SizeBox_60 = 0x2b0; // USizeBox*
		constexpr auto TextBlock_SkinName = 0x2b8; // UTextBlock*
		constexpr auto WBP_NewItemMarker = 0x2c0; // UWBP_NewItemMarker_C*
		constexpr auto SkinType = 0x2c8; // E_SkinType
		constexpr auto Name = 0x2d0; // FText
		constexpr auto SkinID = 0x2e8; // int32_t
		constexpr auto OnClickedDispatcher = 0x2f0; // FMulticastInlineDelegate
		constexpr auto IsClicked = 0x300; // bool
		constexpr auto Skin = 0x308; // TMap<int32_t, USkeletalMesh*>
		constexpr auto CharID = 0x358; // int32_t
		constexpr auto IsBlocked = 0x35c; // bool
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UWBP_LeaveTeamDialog_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Show_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Button_No = 0x270; // UButton*
		constexpr auto Button_Yes = 0x278; // UButton*
		constexpr auto CanvasPanel_Root = 0x280; // UCanvasPanel*
		constexpr auto Image_BG = 0x288; // UImage*
		constexpr auto Overlay_19 = 0x290; // UOverlay*
		constexpr auto TextBlock_Yes = 0x298; // UTextBlock*
		constexpr auto OnLeaveLobby = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x440; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x450; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x460; // TArray<UMeshComponent*>
	}

	namespace n_UWaypointWidgetComponent_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Distance = 0x268; // UTextBlock*
		constexpr auto Icon = 0x270; // UImage*
		constexpr auto Material = 0x278; // UMaterialInstanceDynamic*
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_APS_PropHunt_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x328; // USceneComponent*
		constexpr auto IsDead = 0x330; // bool
		constexpr auto isKiller = 0x331; // bool
		constexpr auto NamePS = 0x338; // FString
		constexpr auto Status = 0x348; // E_SurvivorStatus
		constexpr auto NickNamePS = 0x350; // FString
		constexpr auto KillerType = 0x360; // int32_t
		constexpr auto PlayerScore = 0x364; // int32_t
		constexpr auto ScoreText = 0x368; // FText
		constexpr auto SurvClass = 0x380; // SurvClass
		constexpr auto AvatarPS = 0x388; // UTexture2D*
		constexpr auto PlayerFinalScore = 0x390; // int32_t
		constexpr auto Ready? = 0x394; // bool
		constexpr auto Info = 0x398; // FPlayerInfo
		constexpr auto SurvSkinID = 0x3b0; // int32_t
		constexpr auto SurvSkinArray = 0x3b8; // TArray<int32_t>
		constexpr auto Exp = 0x3c8; // int32_t
		constexpr auto Lvl = 0x3cc; // int32_t
		constexpr auto AliveSurvivors = 0x3d0; // TArray<AActor*>
		constexpr auto Scores = 0x3e0; // int32_t
		constexpr auto MaxScore_AlarmGame = 0x3e4; // int32_t
		constexpr auto MaxScore_REVIVE = 0x3e8; // int32_t
		constexpr auto MaxScore_OutChair = 0x3ec; // int32_t
		constexpr auto MaxScore_OutChair_Self = 0x3f0; // int32_t
		constexpr auto MaxScore_OutChair_Self_PickLock = 0x3f4; // int32_t
		constexpr auto MaxScore_OutGrip = 0x3f8; // int32_t
		constexpr auto MaxScore_FLASH = 0x3fc; // int32_t
		constexpr auto MaxScore_HealALLY = 0x400; // int32_t
		constexpr auto MaxScore_HealSELF = 0x404; // int32_t
		constexpr auto MaxScore_HIT = 0x408; // int32_t
		constexpr auto MaxScore_DOWNED = 0x40c; // int32_t
		constexpr auto MaxScore_CHAIR = 0x410; // int32_t
		constexpr auto MaxScore_Stun = 0x414; // int32_t
		constexpr auto MaxScore_ChaseSurv = 0x418; // int32_t
		constexpr auto MaxScore_ChaseKiller = 0x41c; // int32_t
		constexpr auto MaxScore_DoorOpen = 0x420; // int32_t
		constexpr auto MaxScore_ExitDoor = 0x424; // int32_t
		constexpr auto MAXSCOREBLOCK_AlarmGame = 0x428; // int32_t
		constexpr auto MAXSCOREBLOCK_REVIVE = 0x42c; // int32_t
		constexpr auto MAXSCOREBLOCK_OutChair = 0x430; // int32_t
		constexpr auto MAXSCOREBLOCK_OutChair_Self = 0x434; // int32_t
		constexpr auto MAXSCOREBLOCK_OutChair_Self_PickLock = 0x438; // int32_t
		constexpr auto MAXSCOREBLOCK_OutGrip = 0x43c; // int32_t
		constexpr auto MAXSCOREBLOCK_FLASH = 0x440; // int32_t
		constexpr auto MAXSCOREBLOCK_HealALLY = 0x444; // int32_t
		constexpr auto MAXSCOREBLOCK_HealSELF = 0x448; // int32_t
		constexpr auto MAXSCOREBLOCK_Stun = 0x44c; // int32_t
		constexpr auto MAXSCOREBLOCK_HIT = 0x450; // int32_t
		constexpr auto MAXSCOREBLOCK_DOWNED = 0x454; // int32_t
		constexpr auto MAXSCOREBLOCK_CHAIR = 0x458; // int32_t
		constexpr auto KillScoreCounter = 0x45c; // int32_t
		constexpr auto survChar = 0x460; // SurvChars
		constexpr auto Assists = 0x464; // int32_t
		constexpr auto ObjectivesDone = 0x468; // int32_t
		constexpr auto DamageTaken = 0x46c; // int32_t
		constexpr auto DamageDone = 0x470; // int32_t
		constexpr auto PointsGained = 0x474; // int32_t
		constexpr auto SurvCategory = 0x478; // SurvCategory
		constexpr auto TopCategory? = 0x479; // bool
		constexpr auto KillerCategory = 0x47a; // KillerCategory
		constexpr auto CategoryValue = 0x47c; // int32_t
		constexpr auto SurvivalTime = 0x480; // int32_t
		constexpr auto Stuns = 0x484; // int32_t
		constexpr auto Kills = 0x488; // int32_t
		constexpr auto SurvAllCategory = 0x490; // TArray<SurvCategory>
		constexpr auto KillerAllCategory = 0x4a0; // TArray<KillerCategory>
		constexpr auto AllCategoryValue = 0x4b0; // TArray<int32_t>
		constexpr auto TopSeveralCategory? = 0x4c0; // bool
		constexpr auto SwapSender = 0x4c8; // APawn*
		constexpr auto Alarms = 0x4d0; // int32_t
		constexpr auto TempRandom = 0x4d4; // int32_t
		constexpr auto Likes = 0x4d8; // int32_t
		constexpr auto KillerSecondCategory = 0x4dc; // KillerCategory
		constexpr auto SecondCategoryValue = 0x4e0; // int32_t
		constexpr auto SurvSecondCategory = 0x4e4; // SurvCategory
		constexpr auto SwapSenders = 0x4e8; // TArray<APawn*>
		constexpr auto DistanceTraveled = 0x4f8; // int32_t
		constexpr auto KillerChar = 0x4fc; // KillerType
		constexpr auto BonusCounter = 0x500; // float
		constexpr auto MvpCategory = 0x504; // int32_t
		constexpr auto MvpAllCategory = 0x508; // int32_t
		constexpr auto MvpCategoryEnum = 0x50c; // SurvCategory
		constexpr auto ID = 0x510; // int32_t
		constexpr auto IsTalking = 0x514; // bool
		constexpr auto SkinCheat = 0x515; // bool
		constexpr auto PerkIndex = 0x518; // int32_t
		constexpr auto CurrentLVL = 0x51c; // int32_t
		constexpr auto MaxLVL = 0x520; // int32_t
		constexpr auto IsLVlAdded = 0x524; // bool
		constexpr auto PointsForPerks = 0x528; // int32_t
		constexpr auto Skin = 0x530; // TMap<int32_t, USkeletalMesh*>
		constexpr auto SkinArr = 0x580; // TArray<int32_t>
		constexpr auto TagID = 0x590; // int32_t
		constexpr auto BannerID = 0x594; // int32_t
		constexpr auto DiamondsCount = 0x598; // int32_t
		constexpr auto MaxScore_AlarmGame_Coin = 0x59c; // int32_t
		constexpr auto MAXSCOREBLOCK_AlarmGame_Coin = 0x5a0; // int32_t
		constexpr auto MaxScore_AlarmFull_Coin = 0x5a4; // int32_t
		constexpr auto MAXSCOREBLOCK_AlarmFull_Coin = 0x5a8; // int32_t
		constexpr auto MaxScore_Reanimate_Coin = 0x5ac; // int32_t
		constexpr auto MAXSCOREBLOCK_Reanimate_Coin = 0x5b0; // int32_t
		constexpr auto MaxScore_OutChair_Coin = 0x5b4; // int32_t
		constexpr auto MAXSCOREBLOCK_OutChair_Coin = 0x5b8; // int32_t
		constexpr auto MaxScore_StunKiller_Coin = 0x5bc; // int32_t
		constexpr auto MAXSCOREBLOCK_StunKiller_Coin = 0x5c0; // int32_t
		constexpr auto MaxScore_FlashKiller_Coin = 0x5c4; // int32_t
		constexpr auto MAXSCOREBLOCK_FlashKiller_Coin = 0x5c8; // int32_t
		constexpr auto MAXSCOREBLOCK_ChaseSurv = 0x5cc; // int32_t
		constexpr auto MAXSCOREBLOCK_ChaseKiller = 0x5d0; // int32_t
		constexpr auto Sum_Assists_Surv = 0x5d4; // int32_t
		constexpr auto Sum_Objectives_Surv = 0x5d8; // int32_t
		constexpr auto Sum_KillerAction_Surv = 0x5dc; // int32_t
		constexpr auto Sum_Chase_Killer = 0x5e0; // int32_t
		constexpr auto Avatar = 0x5e4; // int32_t
		constexpr auto Sum_Hit_Killer = 0x5e8; // int32_t
		constexpr auto Sum_Captured_Killer = 0x5ec; // int32_t
		constexpr auto Sum_Downed_Killer = 0x5f0; // int32_t
		constexpr auto Sum_Kills_Killer = 0x5f4; // int32_t
		constexpr auto SteamPlayerID = 0x5f8; // FString
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_ALobbyPlayerMesh_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto NiagaraChainsaw = 0x228; // UNiagaraComponent*
		constexpr auto VampireWeapon = 0x230; // USkeletalMeshComponent*
		constexpr auto Vampire = 0x238; // USkeletalMeshComponent*
		constexpr auto Chainsaw = 0x240; // USkeletalMeshComponent*
		constexpr auto Rabbit = 0x248; // USkeletalMeshComponent*
		constexpr auto EndGameMesh = 0x250; // USkeletalMeshComponent*
		constexpr auto RedGirl = 0x258; // USkeletalMeshComponent*
		constexpr auto GreenGirl = 0x260; // USkeletalMeshComponent*
		constexpr auto NewSurv = 0x268; // USkeletalMeshComponent*
		constexpr auto Surv = 0x270; // USkeletalMeshComponent*
		constexpr auto AsianGirl = 0x278; // USkeletalMeshComponent*
		constexpr auto Hammer_SkeletalMeshComponent0 = 0x280; // USkeletalMeshComponent*
		constexpr auto Keymaster = 0x288; // USkeletalMeshComponent*
		constexpr auto knife_SkeletalMeshComponent0 = 0x290; // USkeletalMeshComponent*
		constexpr auto Granny = 0x298; // USkeletalMeshComponent*
		constexpr auto Doppel_A_Pose_propnight_doppelganger_batterfly_knife_lock_low_SkeletalMeshComponent0 = 0x2a0; // USkeletalMeshComponent*
		constexpr auto DoppelNiagaraSystemV3_NiagaraComponent0 = 0x2a8; // UNiagaraComponent*
		constexpr auto Doppel = 0x2b0; // USkeletalMeshComponent*
		constexpr auto Banshee = 0x2b8; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x2c0; // USceneComponent*
		constexpr auto Player = 0x2c8; // APS_PropHunt_C*
		constexpr auto Character = 0x2d0; // LobbyCharacter
		constexpr auto LocalBlock? = 0x2d1; // bool
		constexpr auto GameStarted? = 0x2d2; // bool
		constexpr auto Surv? = 0x2d3; // bool
		constexpr auto SkinID = 0x2d4; // int32_t
		constexpr auto Char = 0x2d8; // LobbyCharacter
		constexpr auto Scale Lock? = 0x2d9; // bool
		constexpr auto DevCheatLBM = 0x2da; // bool
		constexpr auto Character_1 = 0x2db; // LobbyCharacter
	}

	namespace n_ACoinActor_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Sphere1 = 0x228; // USphereComponent*
		constexpr auto FMODAudio1 = 0x230; // UFMODAudioComponent*
		constexpr auto Cube = 0x238; // UStaticMeshComponent*
		constexpr auto SmoothSync = 0x240; // USmoothSync*
		constexpr auto FmodAudio = 0x248; // UFMODAudioComponent*
		constexpr auto ParticleSystem = 0x250; // UParticleSystemComponent*
		constexpr auto Sphere = 0x258; // USphereComponent*
		constexpr auto PointLight = 0x260; // UPointLightComponent*
		constexpr auto Timeline_0_Alpha_CEEA19814DF45D5FC7AD0ABCF514B472 = 0x268; // float
		constexpr auto Timeline_0__Direction_CEEA19814DF45D5FC7AD0ABCF514B472 = 0x26c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x270; // UTimelineComponent*
		constexpr auto Points = 0x278; // int32_t
		constexpr auto EaseUp = 0x27c; // bool
		constexpr auto EaseAlpha = 0x280; // float
		constexpr auto LocalZ = 0x284; // float
		constexpr auto DefaultLightIntensity = 0x288; // float
		constexpr auto Block? = 0x28c; // bool
		constexpr auto FromKiller = 0x28d; // bool
		constexpr auto LerpingActor = 0x290; // AActor*
		constexpr auto Material = 0x298; // UMaterialInstanceDynamic*
		constexpr auto StartPosition = 0x2a0; // FVector
		constexpr auto rotationFloat = 0x2ac; // float
		constexpr auto ground = 0x2b0; // bool
		constexpr auto FromAlarm = 0x2b1; // bool
		constexpr auto zUp = 0x2b2; // bool
		constexpr auto zDown = 0x2b3; // bool
		constexpr auto IsStun = 0x2b4; // bool
		constexpr auto IsFlashlight = 0x2b5; // bool
		constexpr auto SceneSpawnMoney? = 0x2b6; // bool
		constexpr auto SavedTransform = 0x2c0; // FTransform
		constexpr auto CoinType = 0x2f0; // CoinEnum
		constexpr auto B = 0x2f1; // bool
		constexpr auto FromSurv = 0x2f2; // bool
		constexpr auto DeathSurvPoints = 0x2f4; // int32_t
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x440; // UVectorField*
		constexpr auto Intensity = 0x448; // float
		constexpr auto Tightness = 0x44c; // float
		constexpr auto bPreviewVectorField = 0x450; // char : 1
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UW_PrivateGame_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Disappearance_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Appearance_Anim = 0x270; // UWidgetAnimation*
		constexpr auto ChangeStatus_Anim = 0x278; // UWidgetAnimation*
		constexpr auto Successed_Anim = 0x280; // UWidgetAnimation*
		constexpr auto Failed_Anim = 0x288; // UWidgetAnimation*
		constexpr auto Button_Cancel = 0x290; // UButton*
		constexpr auto Button_Connect = 0x298; // UButton*
		constexpr auto Button_Paste = 0x2a0; // UButton*
		constexpr auto EditableTextBox_Password = 0x2a8; // UEditableTextBox*
		constexpr auto EditableTextBox_Password_View = 0x2b0; // UEditableTextBox*
		constexpr auto Image_116 = 0x2b8; // UImage*
		constexpr auto Image_BlackScreen = 0x2c0; // UImage*
		constexpr auto Image_DialogBG = 0x2c8; // UImage*
		constexpr auto Image_PassBG = 0x2d0; // UImage*
		constexpr auto Image_ScreenRef = 0x2d8; // UImage*
		constexpr auto Label_Status = 0x2e0; // UTextBlock*
		constexpr auto SizeBox_Dialog = 0x2e8; // USizeBox*
		constexpr auto TextBlock = 0x2f0; // UTextBlock*
		constexpr auto Browser = 0x2f8; // Uw_ServerBrowser_C*
		constexpr auto In Brush_Wrong = 0x300; // FSlateBrush
		constexpr auto In Brush_Right = 0x388; // FSlateBrush
		constexpr auto In Brush_Default = 0x410; // FSlateBrush
		constexpr auto In Style_btn = 0x498; // FButtonStyle
		constexpr auto In Style_btn_Default = 0x710; // FButtonStyle
		constexpr auto IsSearching = 0x988; // bool
		constexpr auto IsShown = 0x989; // bool
		constexpr auto PassView = 0x990; // FString
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UW_PlayScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChangeSwitcherWidget_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_Ref_2 = 0x270; // UImage*
		constexpr auto Image_Ref_3 = 0x278; // UImage*
		constexpr auto W_Path = 0x280; // UW_Path_C*
		constexpr auto W_PlayCard_CustomGame = 0x288; // UW_PlayCard_C*
		constexpr auto W_PlayCard_QuickPlay = 0x290; // UW_PlayCard_C*
		constexpr auto w_ServerBrowser = 0x298; // Uw_ServerBrowser_C*
		constexpr auto WidgetSwitcher_189 = 0x2a0; // UWidgetSwitcher*
		constexpr auto IsAnimPlaying = 0x2a8; // bool
		constexpr auto IsButtonsUnpressible = 0x2a9; // bool
		constexpr auto C_PLAY_SCREEN_PAGE = 0x2ac; // int32_t
		constexpr auto C_SERVER_BROWSER_PAGE = 0x2b0; // int32_t
		constexpr auto FocusedCard = 0x2b8; // UW_PlayCard_C*
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UEOSCoreLobbyPromoteMember {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_ABP_LightBeam_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto UISprite = 0x228; // UBillboardComponent*
		constexpr auto GodRayMesh = 0x230; // UStaticMeshComponent*
		constexpr auto Light = 0x238; // AActor*
		constexpr auto Width = 0x240; // float
		constexpr auto Length = 0x244; // float
		constexpr auto Mid = 0x248; // UMaterialInstanceDynamic*
		constexpr auto Color_1 = 0x250; // FLinearColor
		constexpr auto Brightness = 0x260; // float
		constexpr auto Fade distance = 0x264; // float
		constexpr auto Animated = 0x268; // bool
		constexpr auto RandomTime = 0x26c; // FRandomStream
		constexpr auto SpotLight = 0x274; // bool
		constexpr auto Use light for rotation = 0x275; // bool
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UPlayersScore_Tab_Stats_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ReportAnim = 0x268; // UWidgetAnimation*
		constexpr auto CoinsAnim = 0x270; // UWidgetAnimation*
		constexpr auto AnimDisableScore = 0x278; // UWidgetAnimation*
		constexpr auto BG = 0x280; // UImage*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_2 = 0x290; // UImage*
		constexpr auto Image_117 = 0x298; // UImage*
		constexpr auto Image_154 = 0x2a0; // UImage*
		constexpr auto Image_269 = 0x2a8; // UImage*
		constexpr auto Image_277 = 0x2b0; // UImage*
		constexpr auto NewScoreBox = 0x2b8; // UVerticalBox*
		constexpr auto OwnerScore = 0x2c0; // UBorder*
		constexpr auto PlayersBox = 0x2c8; // UVerticalBox*
		constexpr auto ReportMessageText = 0x2d0; // UTextBlock*
		constexpr auto Score = 0x2d8; // UTextBlock*
		constexpr auto Scoreboard = 0x2e0; // UBorder*
		constexpr auto SizeBox_276 = 0x2e8; // USizeBox*
		constexpr auto Killer = 0x2f0; // AKillerMasterBP_C*
		constexpr auto Survs = 0x2f8; // TArray<ASurvivorMasterBP_C*>
		constexpr auto GameStart? = 0x308; // bool
		constexpr auto OwnerLastScore = 0x30c; // int32_t
		constexpr auto OwnerNewScore = 0x310; // int32_t
		constexpr auto AddedScoreWidgets = 0x318; // TArray<UPlayerScoreComponentAddedScore_C*>
		constexpr auto Killers = 0x328; // TArray<AKillerMasterBP_C*>
		constexpr auto PlayerState = 0x338; // TArray<APlayerState*>
		constexpr auto Pawns = 0x348; // TArray<APawn*>
		constexpr auto EmptySlots = 0x358; // TArray<UPlayerScoreComponent_C*>
		constexpr auto Swapping = 0x368; // bool
		constexpr auto Index = 0x36c; // int32_t
		constexpr auto Blocked? = 0x370; // bool
		constexpr auto isVisibleScore = 0x371; // bool
		constexpr auto IsCoinsAnim = 0x372; // bool
		constexpr auto ReportWidget = 0x378; // UUserWidget*
		constexpr auto HandlerRemoveReportMessage = 0x380; // FTimerHandle
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_AMagicLeapARPinInfoActor_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Right = 0x240; // UStaticMeshComponent*
		constexpr auto Forward = 0x248; // UStaticMeshComponent*
		constexpr auto Up = 0x250; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x258; // USphereComponent*
		constexpr auto AxisRoot = 0x260; // USceneComponent*
		constexpr auto VisualizerRoot = 0x268; // USceneComponent*
		constexpr auto TypeValue = 0x270; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x278; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x280; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x288; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x290; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2a8; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b0; // USceneComponent*
		constexpr auto Root = 0x2b8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c0; // float
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto shadow = 0x54; // FExpressionInput
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UWBP_CustomizationMenu_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowContent_Anim = 0x268; // UWidgetAnimation*
		constexpr auto ChangeContent_Anim = 0x270; // UWidgetAnimation*
		constexpr auto BannersButtonAnimation = 0x278; // UWidgetAnimation*
		constexpr auto CharactersButtonAnimation = 0x280; // UWidgetAnimation*
		constexpr auto Button_Banners = 0x288; // UButton*
		constexpr auto Button_Characters = 0x290; // UButton*
		constexpr auto HorizontalBox_Buttons = 0x298; // UHorizontalBox*
		constexpr auto Overlay_Content = 0x2a0; // UOverlay*
		constexpr auto Overlay_RedLine = 0x2a8; // UOverlay*
		constexpr auto ProgressBar_KB = 0x2b0; // UProgressBar*
		constexpr auto ProgressBar_Mouse = 0x2b8; // UProgressBar*
		constexpr auto SizeBox_Buttons = 0x2c0; // USizeBox*
		constexpr auto TextBlock_Banners = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_Characters = 0x2d0; // UTextBlock*
		constexpr auto W_Path = 0x2d8; // UW_Path_C*
		constexpr auto WBP_NewItemMarker_Banners = 0x2e0; // UWBP_NewItemMarker_C*
		constexpr auto WBP_NewItemMarker_Skins = 0x2e8; // UWBP_NewItemMarker_C*
		constexpr auto IsButtonsLocked = 0x2f0; // bool
		constexpr auto CurrentHoveredButton = 0x2f8; // UButton*
		constexpr auto ButtonsArray = 0x300; // TArray<UButton*>
		constexpr auto SliderValueFocus = 0x310; // float
		constexpr auto CustomizeBannerWidget = 0x318; // UW_CustomizeBanner_C*
		constexpr auto PlayerSkinsWidget = 0x320; // UW_PlayerSkins_C*
		constexpr auto CurrentPageIndex = 0x328; // int32_t
		constexpr auto UNDEFINED_PAGE = 0x32c; // int32_t
		constexpr auto ROOT_PAGE = 0x330; // int32_t
		constexpr auto SKINS_PAGE = 0x334; // int32_t
		constexpr auto BANNERS_PAGE = 0x338; // int32_t
		constexpr auto Initializer Widget = 0x340; // UW_MainMenu_C*
		constexpr auto NewEventDispatcher_1 = 0x348; // FMulticastInlineDelegate
		constexpr auto Is Escape Locked = 0x358; // bool
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UBP_PC_MenuPlayfabCustomGames_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto VaRestRequest = 0xb8; // UVaRestRequestJSON*
		constexpr auto ApiKey = 0xc0; // FString
		constexpr auto ServerBuildID = 0xd0; // FString
		constexpr auto VaRestCreateServerReq = 0xe0; // UVaRestRequestJSON*
		constexpr auto Region = 0xe8; // FString
		constexpr auto IsBusy = 0xf8; // bool
		constexpr auto CS_Map = 0x100; // FString
		constexpr auto CS_Name = 0x110; // FString
		constexpr auto CS_Region = 0x120; // FString
		constexpr auto NextRequestV2 = 0x130; // E_RequestType
		constexpr auto PageSize = 0x134; // int32_t
		constexpr auto StopPoll = 0x138; // bool
		constexpr auto CG_Port = 0x140; // FString
		constexpr auto URL_BuildID = 0x150; // FString
		constexpr auto URL_ListServers = 0x160; // FString
		constexpr auto URL_CreateServer = 0x170; // FString
		constexpr auto CG_Address = 0x180; // FString
		constexpr auto CurrentRequest = 0x190; // E_RequestType
		constexpr auto Errors = 0x194; // int32_t
		constexpr auto SkipToken = 0x198; // FString
		constexpr auto URL_Prod_BuildID = 0x1a8; // FString
		constexpr auto URL_Prod_ListServers = 0x1b8; // FString
		constexpr auto URL_Prod_CreateServer = 0x1c8; // FString
		constexpr auto ApiKey_Prod = 0x1d8; // FString
		constexpr auto URL_Prod_GetActualBuildNumber = 0x1e8; // FString
		constexpr auto VaRestBuildNumberReq = 0x1f8; // UVaRestRequestJSON*
		constexpr auto BuildNumberErrors = 0x200; // int32_t
		constexpr auto CG_SessionId = 0x208; // FString
		constexpr auto CG_Region = 0x218; // FString
		constexpr auto URL_Prod_CheckTicket = 0x228; // FString
		constexpr auto SteamTicket = 0x238; // FString
		constexpr auto SteamTicketCounter = 0x248; // int32_t
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2b4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2b8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2bc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c0; // int32_t
		constexpr auto CollisionRadius = 0x2c4; // float
		constexpr auto ShadeRadius = 0x2c8; // float
		constexpr auto NumSteps = 0x2cc; // int32_t
		constexpr auto InitialSeedDensity = 0x2d0; // float
		constexpr auto AverageSpreadDistance = 0x2d4; // float
		constexpr auto SpreadVariance = 0x2d8; // float
		constexpr auto SeedsPerStep = 0x2dc; // int32_t
		constexpr auto DistributionSeed = 0x2e0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2e4; // float
		constexpr auto bCanGrowInShade = 0x2e8; // bool
		constexpr auto bSpawnsInShade = 0x2e9; // bool
		constexpr auto MaxInitialAge = 0x2ec; // float
		constexpr auto MaxAge = 0x2f0; // float
		constexpr auto OverlapPriority = 0x2f4; // float
		constexpr auto ProceduralScale = 0x2f8; // FFloatInterval
		constexpr auto ScaleCurve = 0x300; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x388; // int32_t
		constexpr auto ReapplyDensity = 0x38c; // char : 1
		constexpr auto ReapplyRadius = 0x38c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x38c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x38c; // char : 1
		constexpr auto ReapplyScaling = 0x38c; // char : 1
		constexpr auto ReapplyScaleX = 0x38c; // char : 1
		constexpr auto ReapplyScaleY = 0x38c; // char : 1
		constexpr auto ReapplyScaleZ = 0x38c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x38d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x38d; // char : 1
		constexpr auto ReapplyHeight = 0x38d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x38d; // char : 1
		constexpr auto ReapplyZOffset = 0x38d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x38d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x38d; // char : 1
		constexpr auto bEnableDensityScaling = 0x38d; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x38e; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x390; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3a4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto onSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto onFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x468; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x478; // TArray<FSpriteInstanceData>
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UEOSSanctionsQueryActivePlayerSanctions {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AMagicLeapARPinInfoActorBase {
		constexpr auto PinId = 0x220; // FGuid
		constexpr auto bVisibilityOverride = 0x230; // bool
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UVaRestSubsystem {
		constexpr auto RequestMap = 0x30; // TMap<UVaRestRequestJSON*, FVaRestCallResponse>
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UPlayFabRuntimeSettings {
		constexpr auto ProductionEnvironmentURL = 0x28; // FString
		constexpr auto TitleId = 0x38; // FString
		constexpr auto DeveloperSecretKey = 0x48; // FString
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_USpottedShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
		constexpr auto ShakeLoc = 0x1ac; // FVOscillator
	}

	namespace n_AGlueOfJarItemsBP_Epic_C {
		constexpr auto UberGraphFrame = 0x2f8; // FPointerToUberGraphFrame
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UUpdateEOSSessionCallbackProxy {
		constexpr auto OnCallback = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x468; // UPaperSprite*
		constexpr auto MaterialOverride = 0x470; // UMaterialInterface*
		constexpr auto SpriteColor = 0x478; // FLinearColor
	}

	namespace n_ABP_ClientBeacon_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x2b8; // USceneComponent*
		constexpr auto ServerEntry = 0x2c0; // UObject*
		constexpr auto Players = 0x2c8; // int32_t
		constexpr auto SendTime = 0x2d0; // FDateTime
		constexpr auto ReceiveTime = 0x2d8; // FDateTime
		constexpr auto session = 0x2e0; // UBP_SessionData_C*
	}

	namespace n_ACoinSpawner_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
	}

	namespace n_USoundCommand_Radial_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowCD = 0x268; // UWidgetAnimation*
		constexpr auto ShowHimeCD_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Fade_MLG = 0x278; // UWidgetAnimation*
		constexpr auto Fade_Help = 0x280; // UWidgetAnimation*
		constexpr auto Fade_Bruh = 0x288; // UWidgetAnimation*
		constexpr auto Fade_Fart = 0x290; // UWidgetAnimation*
		constexpr auto Fade_Mission = 0x298; // UWidgetAnimation*
		constexpr auto Fade_Baby = 0x2a0; // UWidgetAnimation*
		constexpr auto Fade_Airhorn = 0x2a8; // UWidgetAnimation*
		constexpr auto Fade_OOF = 0x2b0; // UWidgetAnimation*
		constexpr auto Button = 0x2b8; // UButton*
		constexpr auto Button_2 = 0x2c0; // UButton*
		constexpr auto Button_3 = 0x2c8; // UButton*
		constexpr auto Button_4 = 0x2d0; // UButton*
		constexpr auto Button_5 = 0x2d8; // UButton*
		constexpr auto Button_6 = 0x2e0; // UButton*
		constexpr auto Button_7 = 0x2e8; // UButton*
		constexpr auto Button_8 = 0x2f0; // UButton*
		constexpr auto Button_9 = 0x2f8; // UButton*
		constexpr auto Button_10 = 0x300; // UButton*
		constexpr auto CanvasPanel_585 = 0x308; // UCanvasPanel*
		constexpr auto CanvasPanel_943 = 0x310; // UCanvasPanel*
		constexpr auto CanvasPanel_1202 = 0x318; // UCanvasPanel*
		constexpr auto CanvasPanel_1314 = 0x320; // UCanvasPanel*
		constexpr auto CanvasPanel_1401 = 0x328; // UCanvasPanel*
		constexpr auto CanvasPanel_1619 = 0x330; // UCanvasPanel*
		constexpr auto CanvasPanel_1690 = 0x338; // UCanvasPanel*
		constexpr auto CanvasPanel_1785 = 0x340; // UCanvasPanel*
		constexpr auto Image = 0x348; // UImage*
		constexpr auto Image_2 = 0x350; // UImage*
		constexpr auto Image_3 = 0x358; // UImage*
		constexpr auto Image_173 = 0x360; // UImage*
		constexpr auto Image_357 = 0x368; // UImage*
		constexpr auto Image_BG = 0x370; // UImage*
		constexpr auto Image_H_2 = 0x378; // UImage*
		constexpr auto Image_H_3 = 0x380; // UImage*
		constexpr auto Image_H_4 = 0x388; // UImage*
		constexpr auto Image_H_5 = 0x390; // UImage*
		constexpr auto Image_H_6 = 0x398; // UImage*
		constexpr auto Image_H_7 = 0x3a0; // UImage*
		constexpr auto Image_H_8 = 0x3a8; // UImage*
		constexpr auto Image_H_9 = 0x3b0; // UImage*
		constexpr auto Image_SelectorBG = 0x3b8; // UImage*
		constexpr auto SafeZone = 0x3c0; // USafeZone*
		constexpr auto SafeZone_96 = 0x3c8; // USafeZone*
		constexpr auto SizeBox_8 = 0x3d0; // USizeBox*
		constexpr auto SizeBox_Picker = 0x3d8; // USizeBox*
		constexpr auto TextBlock_ITEM = 0x3e0; // UTextBlock*
		constexpr auto TextBlock_MAIN = 0x3e8; // UTextBlock*
		constexpr auto TextButton = 0x3f0; // UTextBlock*
		constexpr auto TextButton1 = 0x3f8; // UTextBlock*
		constexpr auto TextButton2 = 0x400; // UTextBlock*
		constexpr auto TextButton3 = 0x408; // UTextBlock*
		constexpr auto TextButton4 = 0x410; // UTextBlock*
		constexpr auto TextButton5 = 0x418; // UTextBlock*
		constexpr auto TextButton6 = 0x420; // UTextBlock*
		constexpr auto TextButton7 = 0x428; // UTextBlock*
		constexpr auto WBP_SoundChatCoolDown = 0x430; // UWBP_SoundChatCoolDown_C*
		constexpr auto WidgetSwitcher_Icon = 0x438; // UWidgetSwitcher*
		constexpr auto Interacting? = 0x440; // bool
		constexpr auto InputVector = 0x444; // FVector2D
		constexpr auto CIndex = 0x44c; // int32_t
		constexpr auto PressedStyle_BTN = 0x450; // FButtonStyle
		constexpr auto SelectedStyle_BTN = 0x6c8; // FButtonStyle
		constexpr auto DefaultStyle_BTN = 0x940; // FButtonStyle
		constexpr auto DefaultStyle_BTN_3D = 0xbb8; // FButtonStyle
		constexpr auto CIndex_Music = 0xe30; // int32_t
		constexpr auto DefaultStyle_BTN_3D_1 = 0xe38; // FButtonStyle
		constexpr auto CIndex_ZOrder = 0x10b0; // int32_t
		constexpr auto Array_Buttons = 0x10b8; // TArray<UButton*>
		constexpr auto Array_Animations = 0x10c8; // TArray<UWidgetAnimation*>
		constexpr auto OnCoolDownFinished = 0x10d8; // FMulticastInlineDelegate
		constexpr auto AnimationButton = 0x10e8; // TMap<UButton*, UWidgetAnimation*>
		constexpr auto CanvasButton = 0x1138; // TMap<UButton*, UCanvasPanel*>
		constexpr auto AngleSelectButton = 0x1188; // TMap<UButton*, float>
		constexpr auto ActiveButton = 0x11d8; // UButton*
		constexpr auto IndexButton = 0x11e0; // TMap<UButton*, int32_t>
		constexpr auto ArrayButtonText = 0x1230; // TArray<UTextBlock*>
		constexpr auto L_isKiller = 0x1240; // bool
		constexpr auto TextButtonMap = 0x1248; // TMap<UButton*, UTextBlock*>
		constexpr auto IsLock = 0x1298; // bool
		constexpr auto StartTimeAnimation = 0x129c; // float
		constexpr auto ButtonPressed = 0x12a0; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UPlayFabClientAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xaf8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xb00; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb08; // UPlayFabJsonObject*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x440; // TArray<FMaterialSpriteElement>
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UW_CutomizeTagInfo_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_133 = 0x268; // UButton*
		constexpr auto Image = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_74 = 0x280; // UImage*
		constexpr auto Image_86 = 0x288; // UImage*
		constexpr auto SizeBox_60 = 0x290; // USizeBox*
		constexpr auto TextBlock_TagsName = 0x298; // UTextBlock*
		constexpr auto WBP_NewItemMarker = 0x2a0; // UWBP_NewItemMarker_C*
		constexpr auto WidgetSwitcher_1 = 0x2a8; // UWidgetSwitcher*
		constexpr auto OnClickedDispatcher = 0x2b0; // FMulticastInlineDelegate
		constexpr auto IsClicked = 0x2c0; // bool
		constexpr auto TagName = 0x2c8; // FText
		constexpr auto TagID = 0x2e0; // int32_t
		constexpr auto W_Banner = 0x2e8; // UW_Banner_C*
		constexpr auto E_Rarity = 0x2f0; // Rarity
		constexpr auto IsBlocked = 0x2f1; // bool
		constexpr auto Rarity = 0x2f8; // FText
		constexpr auto W_CustomizeBanner = 0x310; // UW_CustomizeBanner_C*
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9ec; // float
		constexpr auto MulticastRecordOptions = 0xa10; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa20; // bool
		constexpr auto SpectatorControllers = 0xa28; // TArray<APlayerController*>
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UEOSCoreConnectLinkAccount {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UPlayFabGroupsAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x218; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x220; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x228; // UPlayFabJsonObject*
	}

	namespace n_UFMODSnapshotReverb {
		constexpr auto AssetGuid = 0x60; // FGuid
	}

	namespace n_ULanguageSave_C {
		constexpr auto Language = 0x28; // FString
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x468; // int32_t
		constexpr auto MapHeight = 0x46c; // int32_t
		constexpr auto TileWidth = 0x470; // int32_t
		constexpr auto TileHeight = 0x474; // int32_t
		constexpr auto DefaultLayerTileSet = 0x478; // UPaperTileSet*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto TileLayers = 0x488; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x498; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4a8; // int32_t
		constexpr auto bUseSingleLayer = 0x4ac; // bool
		constexpr auto TileMap = 0x4b0; // UPaperTileMap*
	}

	namespace n_UMagicLeapTouchpadGesturesComponent {
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UMainchar1_AnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x2c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x2f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x448; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x470; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x4b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x4e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x638; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x6d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x700; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x728; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x958; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xab0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xad8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xb00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0xb28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0xb70; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0xcc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xd68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0xd90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0xdb8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xf10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0xf38; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x1090; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x10b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x1138; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x11d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x1298; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x1358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x13d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x1478; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x15d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x15f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x1620; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x1648; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x16c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x16f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x1848; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Slot = 0x18f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x19e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x1aa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x1b20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x1bd0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x1d28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x1d50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x1d78; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x1ed0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x1f90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x1fb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2038; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x2058; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x2080; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x20a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x20d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x20f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x2120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x2148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x2170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x2198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x21c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x21e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x2210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x2238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x2260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x2288; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x22b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x22d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x2300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x2328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x2350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x2378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x23a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x23c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x23f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x2418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x2440; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x2468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x2490; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x24b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x24e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x2508; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x2530; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x2558; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x2580; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x25a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x25d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x25f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x2620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x2648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x2670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x2698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x26c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x26e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x2710; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x2738; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x2760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x2788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x27b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x27d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x2800; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x2828; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x2850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x2878; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x28a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x28c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x28f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x2918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x2940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x2968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x2990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x29b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x29e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x2a08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x2a30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2a58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2a80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2aa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x2ad0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2af8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x2b20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x2b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x2b70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x2b98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x2bc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x2be8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x2c10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x2c38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x2c60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x2c88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x2cb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x2cd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x2d00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x2d28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2d50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2d78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2da0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2dc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2df0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2e18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x2e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_47 = 0x2ec0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x2ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x2f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x2ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x3070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x30f0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x31a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_46 = 0x3220; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x3250; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x32d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x3350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_8 = 0x33d0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x3470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_45 = 0x34f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x3520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x35a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x3620; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_7 = 0x36a0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x3740; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_44 = 0x37c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x37f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x3870; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x38f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_6 = 0x3970; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x3a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_43 = 0x3a90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x3ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_42 = 0x3b40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x3b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_41 = 0x3bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x3c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_40 = 0x3ca0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x3cd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x3d50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendBoneByChannel_2 = 0x3df0; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x3e58; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x3f08; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x3ff0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x40d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x4178; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x4260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_39 = 0x42e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x4310; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_38 = 0x4390; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x43c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_37 = 0x4440; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x4470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0x44f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x4520; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x45a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendBoneByChannel = 0x4640; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x46a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x4790; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x4878; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x4918; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x49c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x4ab0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_35 = 0x4b30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x4b60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0x4be0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x4c10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_33 = 0x4c90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x4cc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_32 = 0x4d40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x4d70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x4df0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x4e20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_30 = 0x4ea0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x4ed0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x4f50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x4f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_28 = 0x5000; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x5030; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0x50b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x50e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x5160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x51e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_5 = 0x5260; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x5300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0x5380; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x53b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x5430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x54b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_4 = 0x5530; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x55d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_25 = 0x5650; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x5680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x5700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0x5780; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x5820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x58a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0x5920; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x5950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_23 = 0x59d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x5a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_22 = 0x5a80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x5ab0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x5b98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x5c18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x5cb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x5da0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x5e20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x5ec0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x5fa8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x6090; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_StateResult_21 = 0x6130; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x6160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x61e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x6210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x6290; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x62c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x6340; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x6370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x63f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x6420; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x64a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x64d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x6550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x65d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x6650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x66d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x6750; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x67d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x6850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x68d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x6950; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x6a00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x6ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x6b40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x6c28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x6ca8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_15 = 0x6d68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x6d98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x6e58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x6f18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x6f98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x7018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x7098; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x7118; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x7198; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x7218; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x7298; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x7318; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x73c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x7448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x74c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x7548; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x7630; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x7660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x76e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x7710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x7790; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x77c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x7840; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x7870; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x78f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x7920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x79a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x79d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x7a50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x7a80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x7b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x7ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x7c20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x7c50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x7cd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x7d50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x7dd0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x7e70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x7ef0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x7f20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x8008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x8038; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x80b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x80e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x8168; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x8198; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x8218; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x8248; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x8330; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x8418; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x84b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x8538; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x85b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x8638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x86b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x8738; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x87e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x88d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x8950; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x89d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x8a50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum = 0x8b10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x8bc0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult = 0x8ca8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x8cd8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x8d88; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Root = 0x8da8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x8dd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x8ee0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x8fe8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x90a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x90d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x9150; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x91f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose = 0x92b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x9408; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x9430; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x9458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x94d8; // FAnimNode_SequencePlayer
		constexpr auto IsOwner? = 0x9558; // bool
		constexpr auto IsInAir? = 0x9559; // bool
		constexpr auto Speed = 0x955c; // float
		constexpr auto Direction = 0x9560; // float
		constexpr auto Crawl? = 0x9564; // bool
		constexpr auto FPP? = 0x9565; // bool
		constexpr auto Grapple? = 0x9566; // bool
		constexpr auto OnChair? = 0x9567; // bool
		constexpr auto AlarmReloading? = 0x9568; // bool
		constexpr auto EndJump? = 0x9569; // bool
		constexpr auto OpenDoor? = 0x956a; // bool
		constexpr auto ItemType = 0x956b; // ItemType
		constexpr auto ImHealing? = 0x956c; // bool
		constexpr auto UseFlashlight? = 0x956d; // bool
		constexpr auto HasItem = 0x9570; // float
		constexpr auto HeadRotation = 0x9574; // FRotator
		constexpr auto TurnLeft? = 0x9580; // bool
		constexpr auto TurnRight? = 0x9581; // bool
		constexpr auto HorizontalCameraAxis = 0x9584; // float
		constexpr auto VerticalCameraAxis = 0x9588; // float
		constexpr auto ImHealingAlly? = 0x958c; // bool
		constexpr auto HealingMe? = 0x958d; // bool
		constexpr auto SurvStateEnum = 0x958e; // SurvStateEnum
		constexpr auto MovementType = 0x958f; // MovementTypeEnum
		constexpr auto Idle2? = 0x9590; // bool
		constexpr auto Surv = 0x9598; // ASurvivorMasterBP_C*
		constexpr auto Hitted? = 0x95a0; // bool
		constexpr auto ItemTake? = 0x95a1; // bool
		constexpr auto KillerType = 0x95a4; // int32_t
		constexpr auto Health = 0x95a8; // int32_t
		constexpr auto RandomSelfGetOut? = 0x95ac; // bool
		constexpr auto Failed? = 0x95ad; // bool
		constexpr auto Attack? = 0x95ae; // bool
		constexpr auto GetReady? = 0x95af; // bool
		constexpr auto CrouchAnimStart? = 0x95b0; // bool
		constexpr auto UnCrouch? = 0x95b1; // bool
		constexpr auto Capture Mode? = 0x95b2; // bool
		constexpr auto Delta Time X = 0x95b4; // float
		constexpr auto Blend Weights 0 = 0x95b8; // float
		constexpr auto HelpGetOutMontage = 0x95c0; // UAnimMontage*
		constexpr auto SelfGetOutMontage = 0x95c8; // UAnimMontage*
		constexpr auto DropChairMontage = 0x95d0; // UAnimMontage*
		constexpr auto IdleToIdleCrawl = 0x95d8; // UAnimMontage*
		constexpr auto Surv Char = 0x95e0; // SurvChars
		constexpr auto StartCrawl? = 0x95e1; // bool
		constexpr auto Custom Play Anim Walk? = 0x95e2; // bool
		constexpr auto TaigaBonesTransform? = 0x95e3; // bool
		constexpr auto Stop Move? = 0x95e4; // bool
		constexpr auto Close Door = 0x95e5; // bool
		constexpr auto NotTestMode? = 0x95e6; // bool
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UFindEOSSessionsCallbackProxy {
		constexpr auto OnCallback = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x440; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x448; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x458; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x469; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x469; // char : 1
		constexpr auto bAllowRecycling = 0x469; // char : 1
		constexpr auto bAutoManageAttachment = 0x469; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x469; // char : 1
		constexpr auto bWarmingUp = 0x46a; // char : 1
		constexpr auto bOverrideLODMethod = 0x46a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x46a; // char : 1
		constexpr auto LODMethod = 0x475; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x476; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x478; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4b8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4c8; // bool
		constexpr auto OldPosition = 0x4cc; // FVector
		constexpr auto PartSysVelocity = 0x4d8; // FVector
		constexpr auto WarmupTime = 0x4e4; // float
		constexpr auto WarmupTickRate = 0x4e8; // float
		constexpr auto SecondsBeforeInactive = 0x4f0; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4f8; // float
		constexpr auto ReplayClips = 0x518; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x530; // float
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5c8; // FMulticastInlineDelegate
	}

	namespace n_UPlayFabAuthenticationAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0xa8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0xb0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0xb8; // UPlayFabJsonObject*
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_AKillerMesh_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Tutorial? = 0x238; // bool
		constexpr auto TransitionTime = 0x23c; // float
		constexpr auto TurnOffDuration = 0x240; // float
		constexpr auto ErodeSubtractDef = 0x244; // float
		constexpr auto TurnOnDuration = 0x248; // float
		constexpr auto KillerDynMat1 = 0x250; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat2 = 0x258; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat3 = 0x260; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat4 = 0x268; // UMaterialInstanceDynamic*
		constexpr auto KillerDynMat5 = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Float1 = 0x278; // float
		constexpr auto TransitionOff = 0x27c; // bool
		constexpr auto TransitionOn = 0x27d; // bool
		constexpr auto On? = 0x27e; // bool
		constexpr auto arrayDynMatInst = 0x280; // TArray<UMaterialInstanceDynamic*>
		constexpr auto KnifeRef = 0x290; // AKnife_C*
		constexpr auto KillerDynMat6 = 0x298; // UMaterialInstanceDynamic*
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_ADecalActor {
		constexpr auto decal = 0x220; // UDecalComponent*
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_AGrannyTutorial_C {
		constexpr auto UberGraphFrame = 0x1398; // FPointerToUberGraphFrame
		constexpr auto AstralTutorial = 0x13a0; // UAstralTutorial_C*
		constexpr auto NewVar_5_1 = 0x13a8; // bool
		constexpr auto teleporter = 0x13b0; // ATriggerTeleportPrototypeLevel_C*
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UWBP_LootViewerUI_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CreateGame = 0x268; // UButton*
		constexpr auto HorizontalBox_Dublicate = 0x270; // UHorizontalBox*
		constexpr auto Image_73 = 0x278; // UImage*
		constexpr auto Image_ArrowLeft = 0x280; // UImage*
		constexpr auto Image_ArrowRight = 0x288; // UImage*
		constexpr auto Image_LMB = 0x290; // UImage*
		constexpr auto Image_MouseWheel = 0x298; // UImage*
		constexpr auto Text_CharName = 0x2a0; // UTextBlock*
		constexpr auto Text_LootRarity = 0x2a8; // UTextBlock*
		constexpr auto Text_LootType = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_Equip = 0x2b8; // UTextBlock*
		constexpr auto Lootbox Type = 0x2c0; // E_LootboxType
		constexpr auto Rarity = 0x2c1; // Rarity
		constexpr auto Lootbox Info = 0x2c8; // FS_LootBoxSkin
		constexpr auto ButtonFocused = 0x2f8; // bool
		constexpr auto DefaultStyle = 0x300; // FButtonStyle
	}

	namespace n_UObservation_C {
		constexpr auto UberGraphFrame = 0x120; // FPointerToUberGraphFrame
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_Udoppel_a_pose_Skeleton_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_USurvOnChair_C {
		constexpr auto UberGraphFrame = 0x40; // FPointerToUberGraphFrame
		constexpr auto StandartOffset = 0x48; // FVector
		constexpr auto Tick? = 0x54; // bool
		constexpr auto CustomOffset = 0x58; // FVector
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_AATPCCameraVolume {
		constexpr auto CameraModeTag = 0x258; // FGameplayTag
		constexpr auto bChangeCameraModeWithInterp = 0x260; // bool
		constexpr auto bCheckFilterActorClassWithCamera = 0x261; // bool
		constexpr auto FilterActorClassesWithCamera = 0x268; // TArray<AActor*>
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UEOSCoreEcomRedeemEntitlements {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_ULuminARCandidateImage {
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x470; // bool
		constexpr auto bUseAsyncCooking = 0x471; // bool
		constexpr auto ProcMeshBodySetup = 0x478; // UBodySetup*
		constexpr auto ProcMeshSections = 0x480; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x490; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4a0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4c0; // TArray<UBodySetup*>
	}

	namespace n_UW_LobbySurv_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Select_Anim = 0x268; // UWidgetAnimation*
		constexpr auto PickSurv = 0x270; // UWidgetAnimation*
		constexpr auto Button = 0x278; // UButton*
		constexpr auto Image_133 = 0x280; // UImage*
		constexpr auto Image_RedBlur = 0x288; // UImage*
		constexpr auto Overlay_FULL = 0x290; // UOverlay*
		constexpr auto ProfessionImage = 0x298; // UImage*
		constexpr auto ProfessionText = 0x2a0; // UTextBlock*
		constexpr auto W_MiniLobby_Role = 0x2a8; // UW_MiniLobby_Role_C*
		constexpr auto SurvClass = 0x2b0; // SurvClass
		constexpr auto Owner = 0x2b8; // UW_MiniLobby_C*
		constexpr auto SurvSkill = 0x2c0; // SurvSkills
		constexpr auto Class? = 0x2c1; // bool
		constexpr auto Char = 0x2c2; // SurvChars
		constexpr auto bStartAnimButton?UP = 0x2c3; // bool
		constexpr auto bStartAnimButton?DOWN = 0x2c4; // bool
		constexpr auto CounterTimeUP = 0x2c8; // float
		constexpr auto Selected = 0x2cc; // bool
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UFPRabbitBPAnim_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x908; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x988; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xa28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0xaa8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0xb58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xb88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0xc08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0xc38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0xcb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0xce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0xd68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xd98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0xe18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xe48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0xec8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0xf78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xfa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1028; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1058; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x10d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1108; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x11f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1220; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x12a0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x13c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x13f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1470; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x14a0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x1550; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x15f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Root = 0x1690; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x16c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1740; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x17e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x1860; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x1888; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x18b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1930; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x19e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x1a90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1ac0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x1b70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x1c10; // FAnimNode_SequencePlayer
		constexpr auto Delta Time X = 0x1c90; // float
		constexpr auto keepSurv = 0x1c94; // float
		constexpr auto IsInAir = 0x1c98; // bool
		constexpr auto Speed = 0x1c9c; // float
		constexpr auto Direction = 0x1ca0; // float
		constexpr auto PropHunt? = 0x1ca4; // bool
		constexpr auto AttackBool = 0x1ca5; // bool
		constexpr auto JumpEndChek = 0x1ca6; // bool
		constexpr auto FIRE = 0x1ca7; // bool
		constexpr auto Plant = 0x1ca8; // bool
		constexpr auto MarioStun = 0x1ca9; // bool
		constexpr auto Flashed = 0x1caa; // bool
		constexpr auto Broke Anim = 0x1cab; // bool
		constexpr auto TypeAttack = 0x1cac; // int32_t
		constexpr auto KnifeIn = 0x1cb0; // bool
		constexpr auto KnifeSpawn = 0x1cb1; // bool
		constexpr auto Astral = 0x1cb2; // bool
		constexpr auto SpeedRateF = 0x1cb4; // float
		constexpr auto Charge = 0x1cb8; // bool
		constexpr auto Move! = 0x1cb9; // bool
		constexpr auto Charge Attack = 0x1cba; // bool
		constexpr auto BAnim = 0x1cbb; // bool
		constexpr auto BChainsaw Terror = 0x1cbc; // bool
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x440; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x448; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x450; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x518; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x518; // char : 1
		constexpr auto bAutoDestroy = 0x544; // char : 1
		constexpr auto bRenderingEnabled = 0x544; // char : 1
		constexpr auto bAutoManageAttachment = 0x544; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x544; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x548; // float
		constexpr auto EmitterMaterials = 0x550; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x568; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x578; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x580; // FName
		constexpr auto AutoAttachLocationRule = 0x588; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x589; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x58a; // EAttachmentRule
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_AEndGameBP_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto RectLight6 = 0x228; // URectLightComponent*
		constexpr auto RectLight8 = 0x230; // URectLightComponent*
		constexpr auto KillerPoint = 0x238; // USceneComponent*
		constexpr auto RectLight5 = 0x240; // URectLightComponent*
		constexpr auto OverlapHiddenActors = 0x248; // UBoxComponent*
		constexpr auto RectLight3 = 0x250; // URectLightComponent*
		constexpr auto NewCameraEndPoint = 0x258; // USceneComponent*
		constexpr auto NewCameraPoint = 0x260; // USceneComponent*
		constexpr auto EndPoint2Killer = 0x268; // USceneComponent*
		constexpr auto EndPointKiller = 0x270; // USceneComponent*
		constexpr auto StartPointKiller = 0x278; // USceneComponent*
		constexpr auto Surv6Point = 0x280; // USceneComponent*
		constexpr auto Surv7Point = 0x288; // USceneComponent*
		constexpr auto Surv5Point = 0x290; // USceneComponent*
		constexpr auto Surv4Point = 0x298; // USceneComponent*
		constexpr auto Surv3Point = 0x2a0; // USceneComponent*
		constexpr auto Surv2Point = 0x2a8; // USceneComponent*
		constexpr auto KillerPoint3 = 0x2b0; // USceneComponent*
		constexpr auto KillerPoint2 = 0x2b8; // USceneComponent*
		constexpr auto Surv1Point = 0x2c0; // USceneComponent*
		constexpr auto PlayersPoints = 0x2c8; // USceneComponent*
		constexpr auto EndPoint = 0x2d0; // USceneComponent*
		constexpr auto EndPoint2 = 0x2d8; // USceneComponent*
		constexpr auto LookPoint = 0x2e0; // USceneComponent*
		constexpr auto StartPoint = 0x2e8; // USceneComponent*
		constexpr auto CineCamera = 0x2f0; // UCineCameraComponent*
		constexpr auto CameraLoc = 0x2f8; // USceneComponent*
		constexpr auto Killer1 = 0x300; // USkeletalMeshComponent*
		constexpr auto Killer2 = 0x308; // USkeletalMeshComponent*
		constexpr auto Killer3 = 0x310; // USkeletalMeshComponent*
		constexpr auto Surv2 = 0x318; // USkeletalMeshComponent*
		constexpr auto Surv7 = 0x320; // USkeletalMeshComponent*
		constexpr auto Surv6 = 0x328; // USkeletalMeshComponent*
		constexpr auto Surv5 = 0x330; // USkeletalMeshComponent*
		constexpr auto Surv4 = 0x338; // USkeletalMeshComponent*
		constexpr auto Surv3 = 0x340; // USkeletalMeshComponent*
		constexpr auto Surv1 = 0x348; // USkeletalMeshComponent*
		constexpr auto Plane = 0x350; // UStaticMeshComponent*
		constexpr auto TextRender9 = 0x358; // UTextRenderComponent*
		constexpr auto TextRender8 = 0x360; // UTextRenderComponent*
		constexpr auto TextRender7 = 0x368; // UTextRenderComponent*
		constexpr auto TextRender6 = 0x370; // UTextRenderComponent*
		constexpr auto TextRender5 = 0x378; // UTextRenderComponent*
		constexpr auto TextRender4 = 0x380; // UTextRenderComponent*
		constexpr auto TextRender3 = 0x388; // UTextRenderComponent*
		constexpr auto TextRender2 = 0x390; // UTextRenderComponent*
		constexpr auto TextRender1 = 0x398; // UTextRenderComponent*
		constexpr auto TextRender = 0x3a0; // UTextRenderComponent*
		constexpr auto SharedRoot = 0x3a8; // USceneComponent*
		constexpr auto NewEndGameTimeline_Alpha_A4F1A862465DD968E89DDA84774FF1C2 = 0x3b0; // float
		constexpr auto NewEndGameTimeline__Direction_A4F1A862465DD968E89DDA84774FF1C2 = 0x3b4; // ETimelineDirection
		constexpr auto NewEndGameTimeline = 0x3b8; // UTimelineComponent*
		constexpr auto KillerCameraLerp_Rotation_C501199D4FD4696A79504BB37BB9C5AF = 0x3c0; // FVector
		constexpr auto KillerCameraLerp_Location_C501199D4FD4696A79504BB37BB9C5AF = 0x3cc; // FVector
		constexpr auto KillerCameraLerp_Camera_C501199D4FD4696A79504BB37BB9C5AF = 0x3d8; // float
		constexpr auto KillerCameraLerp__Direction_C501199D4FD4696A79504BB37BB9C5AF = 0x3dc; // ETimelineDirection
		constexpr auto KillerCameraLerp = 0x3e0; // UTimelineComponent*
		constexpr auto CameraLerp_Rotation_10464FBF4DA3C40F9E525C843F3343B9 = 0x3e8; // FVector
		constexpr auto CameraLerp_Location_10464FBF4DA3C40F9E525C843F3343B9 = 0x3f4; // FVector
		constexpr auto CameraLerp_Camera_10464FBF4DA3C40F9E525C843F3343B9 = 0x400; // float
		constexpr auto CameraLerp__Direction_10464FBF4DA3C40F9E525C843F3343B9 = 0x404; // ETimelineDirection
		constexpr auto CameraLerp = 0x408; // UTimelineComponent*
		constexpr auto alarmsArray = 0x410; // TArray<USceneComponent*>
		constexpr auto AlarmsCount = 0x420; // int32_t
		constexpr auto EndGameType = 0x424; // int32_t
		constexpr auto ChangedLoc? = 0x428; // bool
		constexpr auto ChangedKillerLoc? = 0x429; // bool
		constexpr auto HiddenActors = 0x430; // TArray<AActor*>
		constexpr auto Teleported? = 0x440; // bool
		constexpr auto Points = 0x448; // TArray<USceneComponent*>
		constexpr auto Meshs = 0x458; // TArray<USceneComponent*>
		constexpr auto Temp = 0x468; // USceneComponent*
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEOSCoreConnectDeleteDeviceId {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UChainsaw_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto casted = 0xf0; // bool
		constexpr auto TimeCast = 0xf4; // float
		constexpr auto TimeCastDef = 0xf8; // float
		constexpr auto As Rabbit = 0x100; // ARabbit_C*
	}

	namespace n_UFPAnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x3c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x4b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x4d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x500; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x528; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x5a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x5c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x5f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x618; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x640; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x668; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x6b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x6e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x730; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x758; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x780; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x7a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x7d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x7f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x820; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x848; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x870; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x898; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x8c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x8e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x910; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x938; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x960; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x988; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x9b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x9d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0xa00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0xa28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0xa50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0xa78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0xaa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0xac8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0xaf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0xb18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0xb40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0xb68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0xb90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0xbb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0xbe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0xc08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0xc30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0xc58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0xc80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0xca8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0xcd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0xcf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0xd20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0xd48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0xd70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0xd98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0xdc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0xde8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0xe10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0xe38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0xe60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0xe88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xeb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xed8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0xf00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xf28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0xf50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0xfd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x1000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x1080; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x10b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x1130; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x1160; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x11e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x1210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1290; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x12c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1340; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x13f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x14b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1538; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x15e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1698; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x16c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1748; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1778; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x17f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1828; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x18a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x19c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x19f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1a78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1b18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1b98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1bc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x1c48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1ce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x1d68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1d98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x1e80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x1eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x1f30; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1ff8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2078; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x20a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x2128; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2158; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Inertialization = 0x2208; // FAnimNode_Inertialization
		constexpr auto Speed = 0x2278; // float
		constexpr auto IsInAir = 0x227c; // bool
		constexpr auto AttackBool = 0x227d; // bool
		constexpr auto keepSurv = 0x2280; // float
		constexpr auto JumpEndChek = 0x2284; // bool
		constexpr auto FIRE = 0x2285; // bool
		constexpr auto Plant = 0x2286; // bool
		constexpr auto Direction = 0x2288; // float
		constexpr auto TypeAttack = 0x228c; // int32_t
		constexpr auto MarioStun = 0x2290; // bool
		constexpr auto Flashed = 0x2291; // bool
		constexpr auto PropHunt? = 0x2292; // bool
		constexpr auto Delta Time X = 0x2294; // float
		constexpr auto SpeedB = 0x2298; // bool
		constexpr auto StopRunB = 0x2299; // bool
		constexpr auto StopRunDelay = 0x229c; // float
		constexpr auto Hard Hit? = 0x22a0; // bool
		constexpr auto SpeedRateF = 0x22a4; // float
		constexpr auto TimeRun = 0x22a8; // float
		constexpr auto NewVar_1 = 0x22ac; // bool
	}

	namespace n_ABulletBP_Child_C {
		constexpr auto UberGraphFrame = 0x2d8; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x2e0; // UStaticMeshComponent*
	}

	namespace n_UNewKeyMasterAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x2c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x5c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x5e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x6b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x6d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x7a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x7c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x7f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x818; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x840; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x868; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x890; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x8b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x8e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x908; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x9a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xa20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0xa48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0xb30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xbf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0xc70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0xca0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0xd88; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xe48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0xec8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0xf78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x1018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1098; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x10c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1148; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x1178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x11f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x12a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x12d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x1358; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1440; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_8 = 0x1500; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x15b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x15e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x1660; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x1748; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_6 = 0x1808; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x1838; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x1920; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x19e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x1ac8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1af8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1b78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x1bf8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_4 = 0x1cc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1d70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x1df0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_3 = 0x1eb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1ee8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x1f68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x1fe8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_2 = 0x20b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x20e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x21a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2260; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2348; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2430; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x24f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2578; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x25f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x2698; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2738; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x2820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x28a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2960; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2a48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2b30; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult = 0x2bf8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2c28; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x2cd8; // FAnimNode_Root
		constexpr auto IsOnAir? = 0x2d08; // bool
		constexpr auto Attak = 0x2d09; // bool
		constexpr auto IsOwner? = 0x2d0a; // bool
		constexpr auto Speed = 0x2d0c; // float
		constexpr auto Direction = 0x2d10; // float
		constexpr auto IsHolded = 0x2d14; // float
		constexpr auto JumpEndChek = 0x2d18; // bool
		constexpr auto FIRE = 0x2d19; // bool
		constexpr auto Plant = 0x2d1a; // bool
		constexpr auto Flashed = 0x2d1b; // bool
		constexpr auto Vertical rotation = 0x2d1c; // float
		constexpr auto HorizontalValue = 0x2d20; // float
		constexpr auto SpeedChek = 0x2d24; // float
		constexpr auto KillerType = 0x2d28; // int32_t
		constexpr auto Drop = 0x2d2c; // bool
		constexpr auto ChairDrop = 0x2d2d; // bool
		constexpr auto Catch = 0x2d2e; // bool
		constexpr auto Runaway = 0x2d2f; // bool
		constexpr auto HeadR = 0x2d30; // FRotator
		constexpr auto bTurnL = 0x2d3c; // bool
		constexpr auto bTurnR = 0x2d3d; // bool
		constexpr auto KillerRef = 0x2d40; // AKeymaster_C*
		constexpr auto TypeAttack = 0x2d48; // int32_t
		constexpr auto MarioStun = 0x2d4c; // bool
		constexpr auto PropHunt? = 0x2d4d; // bool
		constexpr auto Get Ready = 0x2d4e; // bool
		constexpr auto Effector Transform = 0x2d50; // FTransform
		constexpr auto SpeedRateF = 0x2d80; // float
		constexpr auto HammerLocation = 0x2d90; // FTransform
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UWBP_CategoryEntry_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ScoreAppearance_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_173 = 0x270; // UImage*
		constexpr auto Text_CategoryName = 0x278; // UTextBlock*
		constexpr auto Text_Score = 0x280; // UTextBlock*
		constexpr auto SurvCategoryType = 0x288; // SurvCategory
		constexpr auto KillerCategotyType = 0x289; // KillerCategory
		constexpr auto Score = 0x28c; // int32_t
		constexpr auto Other? = 0x290; // bool
		constexpr auto KillerOtherCategories = 0x298; // TArray<KillerCategory>
		constexpr auto SurvOtherCategories = 0x2a8; // TArray<SurvCategory>
		constexpr auto KillerCategories = 0x2b8; // TArray<FText>
		constexpr auto SurvCategories = 0x2c8; // TMap<int32_t, FText>
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UPlayFabServerAPI {
		constexpr auto OnPlayFabResponse = 0x30; // FMulticastInlineDelegate
		constexpr auto CallAuthenticationContext = 0x8c8; // UPlayFabAuthenticationContext*
		constexpr auto RequestJsonObj = 0x8d0; // UPlayFabJsonObject*
		constexpr auto ResponseJsonObj = 0x8d8; // UPlayFabJsonObject*
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_ABomb_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto P_SodaBomb_Fuse = 0x228; // UParticleSystemComponent*
		constexpr auto FmodAudio = 0x230; // UFMODAudioComponent*
		constexpr auto StaticMesh = 0x238; // UStaticMeshComponent*
		constexpr auto KRef = 0x240; // AKillerMasterBP_C*
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_ATutorialTrigger_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto DoorTrigger = 0x230; // AActor*
		constexpr auto SurvPart2-1 = 0x238; // AActor*
		constexpr auto SurvPart2-2 = 0x240; // AActor*
		constexpr auto QuestTrigger? = 0x248; // bool
		constexpr auto Block = 0x249; // bool
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x458; // float
	}

	namespace n_AKnife_C {
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto FmodAudio = 0x228; // UFMODAudioComponent*
		constexpr auto Sphere1 = 0x230; // USphereComponent*
		constexpr auto PN_ThrowKnife = 0x238; // UNiagaraComponent*
		constexpr auto StaticMesh = 0x240; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto RotationChanger_float_8E19C30041BC09E4F89BD699E125933B = 0x250; // float
		constexpr auto RotationChanger__Direction_8E19C30041BC09E4F89BD699E125933B = 0x254; // ETimelineDirection
		constexpr auto RotationChanger = 0x258; // UTimelineComponent*
		constexpr auto hit = 0x260; // bool
		constexpr auto KillerRef = 0x268; // AKillerMasterBP_C*
		constexpr auto Start = 0x270; // bool
		constexpr auto Rotation = 0x274; // FRotator
		constexpr auto v3 = 0x280; // FVector
		constexpr auto Velocity = 0x28c; // float
		constexpr auto RightVector = 0x290; // FVector
		constexpr auto KnifeMat = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto TransitionTime = 0x2a8; // float
		constexpr auto TurnOffDuration = 0x2ac; // float
		constexpr auto ErodeSubtractDef = 0x2b0; // float
		constexpr auto StopAnim? = 0x2b4; // bool
		constexpr auto Float1 = 0x2b8; // float
		constexpr auto StopLinetrace? = 0x2bc; // bool
		constexpr auto RotatorKnife = 0x2bd; // bool
		constexpr auto Relative Rotation Z (Yaw) = 0x2c0; // float
		constexpr auto Hit Location = 0x2c4; // FVector
		constexpr auto Relative Rotation = 0x2d0; // FRotator
		constexpr auto Block = 0x2dc; // bool
		constexpr auto transition = 0x2dd; // bool
		constexpr auto TurnOnDuration = 0x2e0; // float
		constexpr auto transited = 0x2e4; // bool
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UScream_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto SurvRefs = 0xf0; // TArray<AActor*>
		constexpr auto sphereActor = 0x100; // ArangeSphereScream_C*
		constexpr auto B = 0x108; // bool
	}

	namespace n_ATest0_MAIN_MENU_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_USG_Ban_C {
		constexpr auto DateTime = 0x28; // FDateTime
		constexpr auto Duration = 0x30; // FTimespan
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_USurvStatusWBP_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HUD_JumpOut_Curve = 0x268; // UWidgetAnimation*
		constexpr auto HUD_JumpIn = 0x270; // UWidgetAnimation*
		constexpr auto Image_83 = 0x278; // UImage*
		constexpr auto Image_Voice = 0x280; // UImage*
		constexpr auto Overlay_KillerVoice = 0x288; // UOverlay*
		constexpr auto SizeBox_SelfStatus = 0x290; // USizeBox*
		constexpr auto TextBlock_Nickname = 0x298; // UTextBlock*
		constexpr auto VerticalBox = 0x2a0; // UVerticalBox*
		constexpr auto VerticalBox_AllyStatus = 0x2a8; // UVerticalBox*
		constexpr auto text1 = 0x2b0; // FText
		constexpr auto textBox = 0x2c8; // UTextBlock*
		constexpr auto string1 = 0x2d0; // FString
		constexpr auto Nickname = 0x2e0; // FString
		constexpr auto KillingTimeString = 0x2f0; // FString
		constexpr auto SurvArray = 0x300; // TArray<ASurvivorMasterBP_C*>
		constexpr auto Widgets = 0x310; // TArray<UCountSurvStatus_C*>
		constexpr auto Chair? = 0x320; // bool
		constexpr auto HealthValue = 0x324; // int32_t
		constexpr auto Killer = 0x328; // TArray<AKillerMasterBP_C*>
		constexpr auto string3 = 0x338; // FString
		constexpr auto SelfFound = 0x348; // bool
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x468; // UPaperFlipbook*
		constexpr auto Material = 0x470; // UMaterialInterface*
		constexpr auto PlayRate = 0x478; // float
		constexpr auto bLooping = 0x47c; // char : 1
		constexpr auto bReversePlayback = 0x47c; // char : 1
		constexpr auto bPlaying = 0x47c; // char : 1
		constexpr auto AccumulatedTime = 0x480; // float
		constexpr auto CachedFrameIndex = 0x484; // int32_t
		constexpr auto SpriteColor = 0x488; // FLinearColor
		constexpr auto CachedBodySetup = 0x498; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4a0; // FMulticastInlineDelegate
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_USoundChat_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fade_Anim = 0x268; // UWidgetAnimation*
		constexpr auto ShowHideCD_Anim = 0x270; // UWidgetAnimation*
		constexpr auto Image_102 = 0x278; // UImage*
		constexpr auto Image_BlackScreen = 0x280; // UImage*
		constexpr auto Image_BlackScreen_CDFade = 0x288; // UImage*
		constexpr auto OverlayParent = 0x290; // UOverlay*
		constexpr auto TextBlock_58 = 0x298; // UTextBlock*
		constexpr auto WBP_SoundChatMiniCooldDown = 0x2a0; // UWBP_SoundChatMiniCooldDown_C*
		constexpr auto WidgetSwitcher_Circles = 0x2a8; // UWidgetSwitcher*
		constexpr auto Sound = 0x2b0; // FFMODEventInstance
		constexpr auto SoundCommandMenuOpen? = 0x2b8; // bool
		constexpr auto SecondMenuOpen? = 0x2b9; // bool
		constexpr auto SelectedSound = 0x2bc; // int32_t
		constexpr auto Open? = 0x2c0; // bool
		constexpr auto Owner = 0x2c8; // APawn*
		constexpr auto InputVector = 0x2d0; // FVector2D
		constexpr auto InventoryMenuOpen? = 0x2d8; // bool
		constexpr auto WidgetAcitve? = 0x2d9; // bool
		constexpr auto IsCD = 0x2da; // bool
		constexpr auto HandlerStopListenKeys = 0x2e0; // FTimerHandle
		constexpr auto HandlerCoolDown = 0x2e8; // FTimerHandle
		constexpr auto StartColdown = 0x2f0; // FMulticastInlineDelegate
		constexpr auto WidgetSoundCommand = 0x300; // USoundCommand_Radial_C*
		constexpr auto WidgetInventory = 0x308; // UInventorySurvCommand_Radial_C*
	}

	namespace n_UEOSCoreSessionsSendInvite {
		constexpr auto OnCallback = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UWBP_LevelProgress_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Opacity_Anim = 0x268; // UWidgetAnimation*
		constexpr auto NewLevel_Anim = 0x270; // UWidgetAnimation*
		constexpr auto CanvasPanel_LevelBar = 0x278; // UCanvasPanel*
		constexpr auto Image_68 = 0x280; // UImage*
		constexpr auto ProgressBar_115 = 0x288; // UProgressBar*
		constexpr auto SizeBox_Root = 0x290; // USizeBox*
		constexpr auto Text_CurrentExp = 0x298; // UTextBlock*
		constexpr auto Text_CurrentLevel = 0x2a0; // UTextBlock*
		constexpr auto Text_NextLevel = 0x2a8; // UTextBlock*
		constexpr auto Text_NextLevel_Copy = 0x2b0; // UTextBlock*
		constexpr auto Text_TargetExp = 0x2b8; // UTextBlock*
		constexpr auto Minimum = 0x2c0; // float
		constexpr auto Maximum = 0x2c4; // float
		constexpr auto CurrentProgressValue = 0x2c8; // float
		constexpr auto MovingAnimTimer = 0x2d0; // FTimerHandle
		constexpr auto OnFilled = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnChangedValue = 0x2e8; // FMulticastInlineDelegate
		constexpr auto AnimTarget = 0x2f8; // float
		constexpr auto CurrentMovingSpeed_C = 0x2fc; // float
		constexpr auto CurrentMovingSpeed = 0x300; // float
		constexpr auto TargetMovingSpeed = 0x304; // float
		constexpr auto OnFillingFinished = 0x308; // FMulticastInlineDelegate
		constexpr auto HandlerStartFilling = 0x318; // FTimerHandle
		constexpr auto HandlerCallFillingFinished = 0x320; // FTimerHandle
		constexpr auto ProgressSound = 0x328; // FFMODEventInstance
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x458; // UBodySetup*
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_UW_VictoryScreenText_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SizeBox_1 = 0x268; // USizeBox*
		constexpr auto TextBlock_53 = 0x270; // UTextBlock*
		constexpr auto Alpha = 0x278; // float
		constexpr auto Start? = 0x27c; // bool
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x440; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x460; // char : 1
	}

	namespace n_UBP_PC_MenuPlayfab_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto ListServerRes = 0xb8; // UPlayFabJsonObject*
		constexpr auto PollTicket = 0xc0; // bool
		constexpr auto TicketId = 0xc8; // FString
		constexpr auto QueueName = 0xd8; // FString
		constexpr auto MatchId = 0xe8; // FString
		constexpr auto PlayerEntity = 0xf8; // UPlayFabJsonObject*
		constexpr auto LastData = 0x100; // UPlayFabJsonObject*
		constexpr auto Give Up After Seconds = 0x108; // int32_t
		constexpr auto ErrorsInARow = 0x10c; // int32_t
		constexpr auto PollDelay = 0x110; // float
		constexpr auto InitialPollDelay = 0x114; // float
		constexpr auto IsJoinRetry = 0x118; // bool
		constexpr auto JoinTicketID = 0x120; // FString
		constexpr auto AWSWorker = 0x130; // UO_AWS_Worker_C*
		constexpr auto IsCancenRetry = 0x138; // bool
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UW_MiniLobby_Role_C {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto Image_2 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto Image_4 = 0x278; // UImage*
		constexpr auto Image_5 = 0x280; // UImage*
		constexpr auto Image_6 = 0x288; // UImage*
		constexpr auto Image_7 = 0x290; // UImage*
		constexpr auto Image_8 = 0x298; // UImage*
		constexpr auto Image_9 = 0x2a0; // UImage*
		constexpr auto Image_10 = 0x2a8; // UImage*
		constexpr auto Image_11 = 0x2b0; // UImage*
		constexpr auto Image_12 = 0x2b8; // UImage*
		constexpr auto Image_13 = 0x2c0; // UImage*
		constexpr auto Image_14 = 0x2c8; // UImage*
		constexpr auto Image_15 = 0x2d0; // UImage*
		constexpr auto Image_16 = 0x2d8; // UImage*
		constexpr auto Image_17 = 0x2e0; // UImage*
		constexpr auto Image_18 = 0x2e8; // UImage*
		constexpr auto Image_19 = 0x2f0; // UImage*
		constexpr auto Image_20 = 0x2f8; // UImage*
		constexpr auto Image_21 = 0x300; // UImage*
		constexpr auto Image_22 = 0x308; // UImage*
		constexpr auto Image_23 = 0x310; // UImage*
		constexpr auto Image_24 = 0x318; // UImage*
		constexpr auto Image_25 = 0x320; // UImage*
		constexpr auto Image_26 = 0x328; // UImage*
		constexpr auto Image_27 = 0x330; // UImage*
		constexpr auto Image_28 = 0x338; // UImage*
		constexpr auto Image_29 = 0x340; // UImage*
		constexpr auto Image_30 = 0x348; // UImage*
		constexpr auto Image_31 = 0x350; // UImage*
		constexpr auto Image_32 = 0x358; // UImage*
		constexpr auto Image_33 = 0x360; // UImage*
		constexpr auto Image_34 = 0x368; // UImage*
		constexpr auto Image_35 = 0x370; // UImage*
		constexpr auto Image_36 = 0x378; // UImage*
		constexpr auto Image_37 = 0x380; // UImage*
		constexpr auto Image_38 = 0x388; // UImage*
		constexpr auto Image_39 = 0x390; // UImage*
		constexpr auto Image_40 = 0x398; // UImage*
		constexpr auto Image_41 = 0x3a0; // UImage*
		constexpr auto Image_42 = 0x3a8; // UImage*
		constexpr auto Image_43 = 0x3b0; // UImage*
		constexpr auto Image_44 = 0x3b8; // UImage*
		constexpr auto Image_45 = 0x3c0; // UImage*
		constexpr auto Image_46 = 0x3c8; // UImage*
		constexpr auto Image_47 = 0x3d0; // UImage*
		constexpr auto Image_48 = 0x3d8; // UImage*
		constexpr auto Image_49 = 0x3e0; // UImage*
		constexpr auto Image_50 = 0x3e8; // UImage*
		constexpr auto Image_51 = 0x3f0; // UImage*
		constexpr auto Image_52 = 0x3f8; // UImage*
		constexpr auto Image_53 = 0x400; // UImage*
		constexpr auto Image_54 = 0x408; // UImage*
		constexpr auto Image_55 = 0x410; // UImage*
		constexpr auto Image_56 = 0x418; // UImage*
		constexpr auto Image_57 = 0x420; // UImage*
		constexpr auto Image_58 = 0x428; // UImage*
		constexpr auto Image_59 = 0x430; // UImage*
		constexpr auto Image_60 = 0x438; // UImage*
		constexpr auto Image_61 = 0x440; // UImage*
		constexpr auto Image_62 = 0x448; // UImage*
		constexpr auto Image_63 = 0x450; // UImage*
		constexpr auto Image_64 = 0x458; // UImage*
		constexpr auto Image_65 = 0x460; // UImage*
		constexpr auto Image_66 = 0x468; // UImage*
		constexpr auto Image_67 = 0x470; // UImage*
		constexpr auto Image_68 = 0x478; // UImage*
		constexpr auto Image_69 = 0x480; // UImage*
		constexpr auto Image_70 = 0x488; // UImage*
		constexpr auto Image_71 = 0x490; // UImage*
		constexpr auto Image_72 = 0x498; // UImage*
		constexpr auto Image_73 = 0x4a0; // UImage*
		constexpr auto Image_74 = 0x4a8; // UImage*
		constexpr auto Image_75 = 0x4b0; // UImage*
		constexpr auto Image_76 = 0x4b8; // UImage*
		constexpr auto Image_77 = 0x4c0; // UImage*
		constexpr auto Image_78 = 0x4c8; // UImage*
		constexpr auto Image_79 = 0x4d0; // UImage*
		constexpr auto Image_80 = 0x4d8; // UImage*
		constexpr auto Image_81 = 0x4e0; // UImage*
		constexpr auto Image_82 = 0x4e8; // UImage*
		constexpr auto Image_83 = 0x4f0; // UImage*
		constexpr auto Image_84 = 0x4f8; // UImage*
		constexpr auto Image_85 = 0x500; // UImage*
		constexpr auto Image_86 = 0x508; // UImage*
		constexpr auto Image_87 = 0x510; // UImage*
		constexpr auto Image_88 = 0x518; // UImage*
		constexpr auto Image_89 = 0x520; // UImage*
		constexpr auto Image_90 = 0x528; // UImage*
		constexpr auto Image_91 = 0x530; // UImage*
		constexpr auto Image_92 = 0x538; // UImage*
		constexpr auto Image_93 = 0x540; // UImage*
		constexpr auto Image_94 = 0x548; // UImage*
		constexpr auto Image_95 = 0x550; // UImage*
		constexpr auto Image_96 = 0x558; // UImage*
		constexpr auto Image_97 = 0x560; // UImage*
		constexpr auto Image_98 = 0x568; // UImage*
		constexpr auto Image_99 = 0x570; // UImage*
		constexpr auto Image_100 = 0x578; // UImage*
		constexpr auto Image_113 = 0x580; // UImage*
		constexpr auto Image_412 = 0x588; // UImage*
		constexpr auto WidgetSwitcher_BG = 0x590; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Role = 0x598; // UWidgetSwitcher*
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_UWBP_EffectBloodLust_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto CanvasPanel_Main = 0x270; // UCanvasPanel*
		constexpr auto HorizontalBox_403 = 0x278; // UHorizontalBox*
		constexpr auto Image_122 = 0x280; // UImage*
		constexpr auto Image_298 = 0x288; // UImage*
		constexpr auto Image_Blood = 0x290; // UImage*
		constexpr auto Image_Blood_3 = 0x298; // UImage*
		constexpr auto Image_Blood_4 = 0x2a0; // UImage*
		constexpr auto Image_Blood_5 = 0x2a8; // UImage*
		constexpr auto Image_Blood_6 = 0x2b0; // UImage*
		constexpr auto Image_Blood_7 = 0x2b8; // UImage*
		constexpr auto Image_Blood_8 = 0x2c0; // UImage*
		constexpr auto TextBlock = 0x2c8; // UTextBlock*
		constexpr auto TextBlock_132 = 0x2d0; // UTextBlock*
		constexpr auto WidgetSwitcher_BloodRush = 0x2d8; // UWidgetSwitcher*
		constexpr auto Material = 0x2e0; // UMaterial*
		constexpr auto Material INstance = 0x2e8; // UMaterialInstanceDynamic*
		constexpr auto Global_Time = 0x2f0; // float
		constexpr auto Book = 0x2f8; // UObject*
		constexpr auto Pot = 0x300; // UObject*
		constexpr auto Anbrosia = 0x308; // UObject*
		constexpr auto Duration = 0x310; // float
		constexpr auto Chase? = 0x314; // bool
		constexpr auto Level = 0x318; // int32_t
		constexpr auto MOVETOAFK = 0x31c; // bool
		constexpr auto XZ_TIME) = 0x320; // float
		constexpr auto PROGRESS_BAR = 0x324; // float
		constexpr auto LevelBL = 0x328; // float
		constexpr auto SSSR = 0x32c; // bool
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UVampireLobbyAnimBP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x3a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x450; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x480; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool = 0x530; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult = 0x5d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x678; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x758; // FAnimNode_StateMachine
		constexpr auto Reset? = 0x808; // bool
	}

	namespace n_USoundKiller_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto LaughEvent = 0xb8; // UFMODEvent*
		constexpr auto LaughPlay = 0xc0; // UFMODAudioComponent*
	}

	namespace n_UWBP_MVPScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Fade_Anim = 0x268; // UWidgetAnimation*
		constexpr auto Image_50 = 0x270; // UImage*
		constexpr auto Image_60 = 0x278; // UImage*
		constexpr auto W_Banner_Surv1 = 0x280; // UW_Banner_C*
		constexpr auto W_Banner_Surv2 = 0x288; // UW_Banner_C*
		constexpr auto W_Banner_Surv3 = 0x290; // UW_Banner_C*
		constexpr auto W_Banner_Surv4 = 0x298; // UW_Banner_C*
		constexpr auto SurvSlots = 0x2a0; // TMap<FString, UW_Banner_C*>
		constexpr auto UseBanner = 0x2f0; // TArray<UW_Banner_C*>
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x520; // FGuid
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UDodger_C {
		constexpr auto UberGraphFrame = 0xf8; // FPointerToUberGraphFrame
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_UBansheeMaxWalkShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UCrawlShake_C {
		constexpr auto UberGraphFrame = 0x180; // FPointerToUberGraphFrame
		constexpr auto ShakeRot = 0x188; // FROscillator
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_ASurv3_C {
		constexpr auto UberGraphFrame = 0x1830; // FPointerToUberGraphFrame
	}

}