namespace off {
	constexpr auto GNames = 0x21f0620;
	constexpr auto GObjects = 0x21f0668;
	constexpr auto UEngine = 0x2200158;

	namespace n_UBTAction_CatchBall {
		constexpr auto FallTime = 0x1e8; // float
	}

	namespace n_UMtxErrors_TA {
		constexpr auto MicrotransactionFulfillmentRestrictedWallet = 0x80; // ObjectProperty
		constexpr auto MicrotransactionFulfillmentRestrictedDaily = 0x88; // ObjectProperty
	}

	namespace n_UHttpResponseWindows {
		constexpr auto Response = 0x60; // FPointer
		constexpr auto Payload = 0x68; // TArray<char>
	}

	namespace n_UProductSlot_TA {
		constexpr auto Label = 0x60; // FString
		constexpr auto PluralLabel = 0x70; // FString
		constexpr auto Description = 0x80; // FString
		constexpr auto OnlineLabel = 0x90; // FString
		constexpr auto SlotIndex = 0xa0; // int32_t
		constexpr auto DefaultProduct_New = 0xa8; // ObjectProperty
		constexpr auto ProductTemplate = 0xb0; // ObjectProperty
		constexpr auto ProductAssetTemplate = 0xb8; // ObjectProperty
		constexpr auto Icon = 0xc0; // ObjectProperty
		constexpr auto IconLarge = 0xc8; // ObjectProperty
		constexpr auto bReplicated = 0xd0; // uint32_t : 1
		constexpr auto bAlwaysCooked = 0xd0; // uint32_t : 1
		constexpr auto bDedicatedServerRelevant = 0xd0; // uint32_t : 1
		constexpr auto bAlwaysLoaded = 0xd0; // uint32_t : 1
		constexpr auto bDefaultProductAlwaysLoaded = 0xd0; // uint32_t : 1
		constexpr auto bAllowLicensedEquip = 0xd0; // uint32_t : 1
		constexpr auto DropWeight = 0xd4; // float
	}

	namespace n_USeqAct_SetLocation {
		constexpr auto bSetLocation = 0x160; // uint32_t : 1
		constexpr auto bSetRotation = 0x160; // uint32_t : 1
		constexpr auto LocationValue = 0x164; // FVector
		constexpr auto RotationValue = 0x170; // FRotator
		constexpr auto Target = 0x180; // ObjectProperty
	}

	namespace n_USoundCue {
		constexpr auto SoundClass = 0x60; // FName
		constexpr auto SoundClassName = 0x68; // ESoundClassName
		constexpr auto bDebug = 0x6c; // uint32_t : 1
		constexpr auto FirstNode = 0x70; // ObjectProperty
		constexpr auto EditorData = 0x78; // TMap<None, None>
		constexpr auto MaxAudibleDistance = 0xc8; // float
		constexpr auto VolumeMultiplier = 0xcc; // float
		constexpr auto PitchMultiplier = 0xd0; // float
		constexpr auto Duration = 0xd4; // float
		constexpr auto FaceFXAnimSetRef = 0xd8; // ObjectProperty
		constexpr auto FaceFXGroupName = 0xe0; // FString
		constexpr auto FaceFXAnimName = 0xf0; // FString
		constexpr auto MaxConcurrentPlayCount = 0x100; // int32_t
		constexpr auto CurrentPlayCount = 0x104; // int32_t
		constexpr auto SoundGroup = 0x108; // FName
	}

	namespace n_AWorldAttractor {
		constexpr auto bEnabled = 0x268; // uint32_t : 1
		constexpr auto LoopDuration = 0x26c; // float
		constexpr auto CurrentTime = 0x270; // float
		constexpr auto FalloffType = 0x274; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x278; // FMatineeRawDistributionFloat
		constexpr auto Range = 0x2a8; // FMatineeRawDistributionFloat
		constexpr auto Strength = 0x2d8; // FMatineeRawDistributionFloat
		constexpr auto CollisionRadius = 0x308; // float
		constexpr auto DragCoefficient = 0x310; // FMatineeRawDistributionFloat
		constexpr auto DragRadius = 0x340; // FMatineeRawDistributionFloat
	}

	namespace n_ULevel {
		constexpr auto LightmapTotalSize = 0x1f8; // float
		constexpr auto ShadowmapTotalSize = 0x1fc; // float
	}

	namespace n_UGFxData_Clubs_TA {
		constexpr auto LocalClubID = 0x98; // QWordProperty
		constexpr auto bClubOwner = 0xa0; // uint32_t : 1
		constexpr auto bSyncedLocalClub = 0xa0; // uint32_t : 1
		constexpr auto bHasSyncedClubInvites = 0xa0; // uint32_t : 1
		constexpr auto LocalClubSyncError = 0xa8; // FString
		constexpr auto ExecutingClubAction = 0xb8; // FString
		constexpr auto PsyNet = 0xc8; // ObjectProperty
		constexpr auto ClubProvider = 0xd0; // ObjectProperty
		constexpr auto ClubsConfig = 0xd8; // ObjectProperty
		constexpr auto Party = 0xe0; // ObjectProperty
		constexpr auto PersonasData = 0xe8; // ObjectProperty
		constexpr auto ClubManager = 0xf0; // ObjectProperty
		constexpr auto AllClubDetails = 0xf8; // TArray<ObjectProperty>
		constexpr auto CurrentClubAction = 0x108; // ObjectProperty
		constexpr auto TagTooShort = 0x110; // FString
		constexpr auto TagTooLong = 0x120; // FString
		constexpr auto TagHasInvalidCharacters = 0x130; // FString
		constexpr auto NameTooShort = 0x140; // FString
		constexpr auto NameTooLong = 0x150; // FString
		constexpr auto NameHasInvalidCharacters = 0x160; // FString
		constexpr auto __FlashActionHandler__Delegate = 0x170; // DelegateProperty
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0xd0; // ObjectProperty
		constexpr auto DefaultTexture_Black = 0xd8; // ObjectProperty
		constexpr auto DefaultTexture_White = 0xe0; // ObjectProperty
		constexpr auto ConsoleKey = 0xe8; // FName
		constexpr auto TypeKey = 0xf0; // FName
		constexpr auto MaxScrollbackSize = 0xf8; // int32_t
		constexpr auto Scrollback = 0x100; // TArray<FString>
		constexpr auto SBHead = 0x110; // int32_t
		constexpr auto SBPos = 0x114; // int32_t
		constexpr auto HistoryTop = 0x118; // int32_t
		constexpr auto HistoryBot = 0x11c; // int32_t
		constexpr auto HistoryCur = 0x120; // int32_t
		constexpr auto History = 0x128; // FString [0x10]
		constexpr auto bNavigatingHistory = 0x228; // uint32_t : 1
		constexpr auto bCaptureKeyInput = 0x228; // uint32_t : 1
		constexpr auto bCtrl = 0x228; // uint32_t : 1
		constexpr auto bEnableUI = 0x228; // uint32_t : 1
		constexpr auto bAutoCompleteLocked = 0x228; // uint32_t : 1
		constexpr auto bRequireCtrlToNavigateAutoComplete = 0x228; // uint32_t : 1
		constexpr auto bIsRuntimeAutoCompleteUpToDate = 0x228; // uint32_t : 1
		constexpr auto TypedStr = 0x230; // FString
		constexpr auto TypedStrPos = 0x240; // int32_t
		constexpr auto ManualAutoCompleteList = 0x248; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteList = 0x258; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteIndex = 0x268; // int32_t
		constexpr auto AutoCompleteTree = 0x270; // FAutoCompleteNode
		constexpr auto AutoCompleteIndices = 0x298; // TArray<int32_t>
	}

	namespace n_UBanSync_TA {
		constexpr auto BanMessages = 0x60; // TArray<ObjectProperty>
		constexpr auto __EventSyncedBanStatus__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UTourSettings_TA {
		constexpr auto Id = 0x60; // QWordProperty
		constexpr auto ScheduleID = 0x68; // QWordProperty
		constexpr auto Title = 0x70; // FString
		constexpr auto CreatorName = 0x80; // FString
		constexpr auto CreatorPlayerID = 0x90; // FUniqueNetId
		constexpr auto StartTime = 0xd8; // QWordProperty
		constexpr auto GenerateBracketTime = 0xe0; // QWordProperty
		constexpr auto MaxBracketSize = 0xe8; // int32_t
		constexpr auto TeamsRegistered = 0xec; // int32_t
		constexpr auto RankMin = 0xf0; // int32_t
		constexpr auto RankMax = 0xf4; // int32_t
		constexpr auto Region = 0xf8; // FString
		constexpr auto RegionName = 0x108; // FString
		constexpr auto GameTags = 0x118; // FString
		constexpr auto GameMode = 0x128; // char
		constexpr auto TieBreaker = 0x129; // EMatchTieBreaker
		constexpr auto SeedingType = 0x12a; // ETourSeedType
		constexpr auto TeamSize = 0x12c; // int32_t
		constexpr auto DisabledMaps = 0x130; // TArray<FName>
		constexpr auto SeriesRoundLengths = 0x140; // TArray<int32_t>
		constexpr auto SeriesLength = 0x150; // int32_t
		constexpr auto FinalSeriesLength = 0x154; // int32_t
		constexpr auto bPublic = 0x158; // uint32_t : 1
		constexpr auto MinPlayersPerTeam = 0x15c; // int32_t
		constexpr auto MatchExpireTimestamp = 0x160; // QWordProperty
		constexpr auto Platforms = 0x168; // TArray<FString>
	}

	namespace n_UArenaSoundConfig_TA {
		constexpr auto Events = 0x78; // TArray<ObjectProperty>
	}

	namespace n_U__RPCQueue_X__CreateBatchSingleRPC_D558DA184FB02ECCD84DB49B2C5C4725 {
		constexpr auto Batch = 0x60; // ObjectProperty
	}

	namespace n_UUserCloudFileCloudSaveSystemDataBlobStore {
		constexpr auto UserCloudFile = 0x60; // TScriptInterface<Class>
		constexpr auto GetDataBlobCallback = 0x70; // DelegateProperty
		constexpr auto SetDataBlobCallback = 0x88; // DelegateProperty
		constexpr auto DeleteDataBlobCallback = 0xa0; // DelegateProperty
		constexpr auto __GetDataBlobCallbackDelegate__Delegate = 0xb8; // DelegateProperty
		constexpr auto __SetDataBlobCallbackDelegate__Delegate = 0xd0; // DelegateProperty
		constexpr auto __DeleteDataBlobCallbackDelegate__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UMcpUserManager {
		constexpr auto UserStatuses = 0xe8; // TArray<FMcpUserStatus>
		constexpr auto RegisterUserMcpUrl = 0xf8; // FString
		constexpr auto RegisterUserFacebookUrl = 0x108; // FString
		constexpr auto QueryUserUrl = 0x118; // FString
		constexpr auto QueryUsersUrl = 0x128; // FString
		constexpr auto DeleteUserUrl = 0x138; // FString
		constexpr auto FacebookAuthUrl = 0x148; // FString
		constexpr auto McpAuthUrl = 0x158; // FString
		constexpr auto RegisterUserRequests = 0x168; // TArray<ObjectProperty>
		constexpr auto QueryUsersRequests = 0x178; // TArray<ObjectProperty>
		constexpr auto DeleteUserRequests = 0x188; // TArray<FUserRequest>
		constexpr auto AuthUserRequests = 0x198; // TArray<ObjectProperty>
	}

	namespace n_UGFxDataCallback_X {
		constexpr auto Table = 0x90; // FName
		constexpr auto Row = 0x98; // int32_t
		constexpr auto Column = 0x9c; // FName
		constexpr auto Type = 0xa4; // EDataCallbackType
	}

	namespace n_USoundNodeWaveStreaming {
		constexpr auto QueuedAudio = 0x4b8; // TArray<char>
		constexpr auto InactiveDuration = 0x4c8; // float
		constexpr auto MaxGenerateSamples = 0x4cc; // int32_t
	}

	namespace n_U__OnlineClubProvider_X__SyncPlayerClubDetails_77282AD64474A57612078A956635B7FB {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto RPC = 0xa8; // ObjectProperty
	}

	namespace n_UMaterialExpressionTextureObject {
		constexpr auto Texture = 0xc0; // ObjectProperty
	}

	namespace n_U__TourList_TA__GetTournamentResult_494738F94F0538F02A4C9297688FCC02 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_USkeletalMesh {
		constexpr auto Bounds = 0x60; // FBoxSphereBounds
		constexpr auto Materials = 0x80; // TArray<ObjectProperty>
		constexpr auto ClothingAssets = 0x90; // TArray<ObjectProperty>
		constexpr auto ClothingLodMap = 0xa0; // TArray<FApexClothingAssetInfo>
		constexpr auto Origin = 0xb0; // FVector
		constexpr auto RotOrigin = 0xbc; // FRotator
		constexpr auto RefSkeleton = 0xc8; // TArray<int32_t>
		constexpr auto SkeletalDepth = 0xd8; // int32_t
		constexpr auto NameIndexMap = 0xe0; // TMap<None, None>
		constexpr auto LODModels = 0x130; // FIndirectArray_Mirror
		constexpr auto SourceData = 0x140; // FPointer
		constexpr auto RefBasesInvMatrix = 0x148; // TArray<FBoneAtom>
		constexpr auto SkelMirrorTable = 0x158; // TArray<FBoneMirrorInfo>
		constexpr auto SkelMirrorAxis = 0x168; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x169; // EAxis
		constexpr auto Sockets = 0x170; // TArray<ObjectProperty>
		constexpr auto BoneBreakNames = 0x180; // TArray<FString>
		constexpr auto BoneBreakOptions = 0x190; // TArray<BoneBreakOption>
		constexpr auto LODInfo = 0x1a0; // TArray<FSkeletalMeshLODInfo>
		constexpr auto LODDistanceInfo = 0x1b0; // TArray<FSkeletalMeshLODDistanceInfo>
		constexpr auto OptimizationSettings = 0x1c0; // TArray<FSkeletalMeshOptimizationSettings>
		constexpr auto PerPolyCollisionBones = 0x1d0; // TArray<FName>
		constexpr auto AddToParentPerPolyCollisionBone = 0x1e0; // TArray<FName>
		constexpr auto PerPolyBoneKDOPs = 0x1f0; // TArray<int32_t>
		constexpr auto bPerPolyUseSoftWeighting = 0x200; // uint32_t : 1
		constexpr auto bUseSimpleLineCollision = 0x200; // uint32_t : 1
		constexpr auto bUseSimpleBoxCollision = 0x200; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x200; // uint32_t : 1
		constexpr auto bUseFullPrecisionUVs = 0x200; // uint32_t : 1
		constexpr auto bHasBeenSimplified = 0x200; // uint32_t : 1
		constexpr auto FaceFXAsset = 0x208; // ObjectProperty
		constexpr auto BoundsPreviewAsset = 0x210; // ObjectProperty
		constexpr auto PreviewMorphSets = 0x218; // TArray<ObjectProperty>
		constexpr auto LODBiasPC = 0x228; // int32_t
		constexpr auto LODBiasPS3 = 0x22c; // int32_t
		constexpr auto LODBiasXbox360 = 0x230; // int32_t
		constexpr auto LODBiasPS4 = 0x234; // int32_t
		constexpr auto LODBiasNNX = 0x238; // int32_t
		constexpr auto SourceFilePath = 0x240; // FString
		constexpr auto SourceFileTimestamp = 0x250; // FString
		constexpr auto ClothMesh = 0x260; // TArray<FPointer>
		constexpr auto ClothMeshScale = 0x270; // TArray<float>
		constexpr auto ClothToGraphicsVertMap = 0x280; // TArray<int32_t>
		constexpr auto ClothMovementScale = 0x290; // TArray<float>
		constexpr auto ClothMovementScaleGenMode = 0x2a0; // ClothMovementScaleGen
		constexpr auto ClothToAnimMeshMaxDist = 0x2a4; // float
		constexpr auto bLimitClothToAnimMesh = 0x2a8; // uint32_t : 1
		constexpr auto ClothWeldingMap = 0x2b0; // TArray<int32_t>
		constexpr auto ClothWeldingDomain = 0x2c0; // int32_t
		constexpr auto ClothWeldedIndices = 0x2c8; // TArray<int32_t>
		constexpr auto bForceNoWelding = 0x2d8; // uint32_t : 1
		constexpr auto NumFreeClothVerts = 0x2dc; // int32_t
		constexpr auto ClothIndexBuffer = 0x2e0; // TArray<int32_t>
		constexpr auto ClothBones = 0x2f0; // TArray<FName>
		constexpr auto ClothHierarchyLevels = 0x300; // int32_t
		constexpr auto bEnableClothBendConstraints = 0x304; // uint32_t : 1
		constexpr auto bEnableClothDamping = 0x304; // uint32_t : 1
		constexpr auto bUseClothCOMDamping = 0x304; // uint32_t : 1
		constexpr auto ClothStretchStiffness = 0x308; // float
		constexpr auto ClothBendStiffness = 0x30c; // float
		constexpr auto ClothDensity = 0x310; // float
		constexpr auto ClothThickness = 0x314; // float
		constexpr auto ClothDamping = 0x318; // float
		constexpr auto ClothIterations = 0x31c; // int32_t
		constexpr auto ClothHierarchicalIterations = 0x320; // int32_t
		constexpr auto ClothFriction = 0x324; // float
		constexpr auto ClothRelativeGridSpacing = 0x328; // float
		constexpr auto ClothPressure = 0x32c; // float
		constexpr auto ClothCollisionResponseCoefficient = 0x330; // float
		constexpr auto ClothAttachmentResponseCoefficient = 0x334; // float
		constexpr auto ClothAttachmentTearFactor = 0x338; // float
		constexpr auto ClothSleepLinearVelocity = 0x33c; // float
		constexpr auto HardStretchLimitFactor = 0x340; // float
		constexpr auto bHardStretchLimit = 0x344; // uint32_t : 1
		constexpr auto bEnableClothOrthoBendConstraints = 0x344; // uint32_t : 1
		constexpr auto bEnableClothSelfCollision = 0x344; // uint32_t : 1
		constexpr auto bEnableClothPressure = 0x344; // uint32_t : 1
		constexpr auto bEnableClothTwoWayCollision = 0x344; // uint32_t : 1
		constexpr auto ClothSpecialBones = 0x348; // TArray<FClothSpecialBoneInfo>
		constexpr auto bEnableClothLineChecks = 0x358; // uint32_t : 1
		constexpr auto bClothMetal = 0x358; // uint32_t : 1
		constexpr auto ClothMetalImpulseThreshold = 0x35c; // float
		constexpr auto ClothMetalPenetrationDepth = 0x360; // float
		constexpr auto ClothMetalMaxDeformationDistance = 0x364; // float
		constexpr auto bEnableClothTearing = 0x368; // uint32_t : 1
		constexpr auto ClothTearFactor = 0x36c; // float
		constexpr auto ClothTearReserve = 0x370; // int32_t
		constexpr auto bEnableValidBounds = 0x374; // uint32_t : 1
		constexpr auto ValidBoundsMin = 0x378; // FVector
		constexpr auto ValidBoundsMax = 0x384; // FVector
		constexpr auto ClothTornTriMap = 0x390; // FMap_Mirror
		constexpr auto SoftBodySurfaceToGraphicsVertMap = 0x3e0; // TArray<int32_t>
		constexpr auto SoftBodySurfaceIndices = 0x3f0; // TArray<int32_t>
		constexpr auto SoftBodyTetraVertsUnscaled = 0x400; // TArray<FVector>
		constexpr auto SoftBodyTetraIndices = 0x410; // TArray<int32_t>
		constexpr auto SoftBodyTetraLinks = 0x420; // TArray<FSoftBodyTetraLink>
		constexpr auto CachedSoftBodyMeshes = 0x430; // TArray<FPointer>
		constexpr auto CachedSoftBodyMeshScales = 0x440; // TArray<float>
		constexpr auto SoftBodyBones = 0x450; // TArray<FName>
		constexpr auto SoftBodySpecialBones = 0x460; // TArray<FSoftBodySpecialBoneInfo>
		constexpr auto SoftBodyVolumeStiffness = 0x470; // float
		constexpr auto SoftBodyStretchingStiffness = 0x474; // float
		constexpr auto SoftBodyDensity = 0x478; // float
		constexpr auto SoftBodyParticleRadius = 0x47c; // float
		constexpr auto SoftBodyDamping = 0x480; // float
		constexpr auto SoftBodySolverIterations = 0x484; // int32_t
		constexpr auto SoftBodyFriction = 0x488; // float
		constexpr auto SoftBodyRelativeGridSpacing = 0x48c; // float
		constexpr auto SoftBodySleepLinearVelocity = 0x490; // float
		constexpr auto bEnableSoftBodySelfCollision = 0x494; // uint32_t : 1
		constexpr auto SoftBodyAttachmentResponse = 0x498; // float
		constexpr auto SoftBodyCollisionResponse = 0x49c; // float
		constexpr auto SoftBodyDetailLevel = 0x4a0; // float
		constexpr auto SoftBodySubdivisionLevel = 0x4a4; // int32_t
		constexpr auto bSoftBodyIsoSurface = 0x4a8; // uint32_t : 1
		constexpr auto bEnableSoftBodyDamping = 0x4a8; // uint32_t : 1
		constexpr auto bUseSoftBodyCOMDamping = 0x4a8; // uint32_t : 1
		constexpr auto SoftBodyAttachmentThreshold = 0x4ac; // float
		constexpr auto bEnableSoftBodyTwoWayCollision = 0x4b0; // uint32_t : 1
		constexpr auto SoftBodyAttachmentTearFactor = 0x4b4; // float
		constexpr auto bEnableSoftBodyLineChecks = 0x4b8; // uint32_t : 1
		constexpr auto bHasVertexColors = 0x4b8; // uint32_t : 1
		constexpr auto GraphicsIndexIsCloth = 0x4c0; // TArray<char>
		constexpr auto CachedStreamingTextureFactors = 0x4d0; // TArray<float>
		constexpr auto StreamingDistanceMultiplier = 0x4e0; // float
		constexpr auto ReleaseResourcesFence = 0x4e4; // int32_t
		constexpr auto SkelMeshRUID = 0x4e8; // QWordProperty
		constexpr auto bUseClothingAssetMaterial = 0x4f0; // uint32_t : 1
	}

	namespace n_ACollisionTestTrack_TA {
		constexpr auto CollisionTestComponent = 0x268; // ComponentProperty
	}

	namespace n_USaveObject_TA {
		constexpr auto Version = 0x60; // int32_t
		constexpr auto __EventDirtied__Delegate = 0x68; // DelegateProperty
		constexpr auto __EventLoaded__Delegate = 0x80; // DelegateProperty
		constexpr auto __EventUnloaded__Delegate = 0x98; // DelegateProperty
		constexpr auto EventPropertyChange = 0xb0; // DelegateProperty
	}

	namespace n_UClientJitterBuffer_TA {
		constexpr auto JitterSettings = 0x60; // ObjectProperty
		constexpr auto LastPacketTime = 0x68; // float
		constexpr auto PacketTimeMu = 0x6c; // float
		constexpr auto PacketTimeVariance = 0x70; // float
		constexpr auto BufferTime = 0x74; // float
		constexpr auto BufferSize = 0x78; // int32_t
	}

	namespace n_ARB_ForceFieldExcludeVolume {
		constexpr auto ForceFieldChannel = 0x2a8; // int32_t
		constexpr auto SceneIndex = 0x2ac; // int32_t
	}

	namespace n_UEngineAudioProfileREV_TA {
		constexpr auto Controls = 0x70; // FAkRevSimPhysicsControls
		constexpr auto PhysicsSim = 0x90; // ObjectProperty
		constexpr auto RevLimiter = 0x98; // ComponentProperty
	}

	namespace n_UCameraState_MenuCamActor_TA {
		constexpr auto CameraTag = 0x210; // FName
	}

	namespace n_U__SaveData_TA__HandleOnlineProductsReceived_8005369D4284F1BE9F4914816F3B43BF {
		constexpr auto ProductsSave = 0x60; // ObjectProperty
	}

	namespace n_UAnimNodeRandom {
		constexpr auto RandomInfo = 0x170; // TArray<FRandomAnimInfo>
		constexpr auto PlayingSeqNode = 0x180; // ObjectProperty
		constexpr auto PendingChildIndex = 0x188; // int32_t
		constexpr auto bPickedPendingChildIndex = 0x18c; // uint32_t : 1
	}

	namespace n_UAkParamGroup {
		constexpr auto VfTable_IISetParameter = 0xa0; // FPointer
		constexpr auto StoredParameters = 0xa8; // FAkParamSet
		constexpr auto SoundSources = 0x148; // TArray<ComponentProperty>
		constexpr auto ControllerId = 0x158; // int32_t
		constexpr auto SendType = 0x15c; // EReflectionSendType
		constexpr auto AttenuationType = 0x15d; // EAttenuationType
	}

	namespace n_UOnlinePlayerRegionRestrictions_X {
		constexpr auto Restrictions = 0x98; // TArray<ERegionRestriction>
	}

	namespace n_U__EpicLogin_X__TriggerAuthTicketDelegate_C57346524C10772CDC28A793049838B9 {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto NetId = 0x78; // FUniqueNetId
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Period = 0xf8; // float
	}

	namespace n_USeqAct_DelaySwitch {
		constexpr auto LinkCount = 0x178; // int32_t
		constexpr auto CurrentIdx = 0x17c; // int32_t
		constexpr auto SwitchDelay = 0x180; // float
		constexpr auto NextLinkTime = 0x184; // float
	}

	namespace n_UUISceneClient {
		constexpr auto VfTable_FExec = 0x70; // FPointer
		constexpr auto RenderViewport = 0x78; // FPointer
		constexpr auto MousePosition = 0x80; // FIntPoint
		constexpr auto DataStoreManager = 0x88; // ObjectProperty
		constexpr auto CanvasToScreen = 0x90; // FMatrix
		constexpr auto InvCanvasToScreen = 0xd0; // FMatrix
		constexpr auto UIScenePostProcess = 0x110; // ObjectProperty
		constexpr auto bEnablePostProcess = 0x118; // uint32_t : 1
	}

	namespace n_UProductAttribute_Painted_TA {
		constexpr auto PaintID = 0x80; // int32_t
	}

	namespace n_UStatGraphDrawer_TA {
		constexpr auto History = 0x60; // ComponentProperty
		constexpr auto MaxSampleAge = 0x68; // float
		constexpr auto Scale = 0x6c; // float
		constexpr auto PixelsPerSample = 0x70; // float
		constexpr auto ValueStartX = 0x74; // float
		constexpr auto MaxCharHeight = 0x78; // float
		constexpr auto SpaceWidth = 0x7c; // float
		constexpr auto LabelMaxWidth = 0x80; // float
		constexpr auto ValueMaxWidth = 0x84; // float
		constexpr auto GridCellWidth = 0x88; // float
		constexpr auto GridCellHeight = 0x8c; // float
		constexpr auto GraphWidth = 0x90; // float
		constexpr auto GraphHeight = 0x94; // float
		constexpr auto GraphStartX = 0x98; // float
		constexpr auto GraphEndX = 0x9c; // float
		constexpr auto X = 0xa0; // float
		constexpr auto Y = 0xa4; // float
		constexpr auto Canvas = 0xa8; // ObjectProperty
		constexpr auto SummaryLabels = 0xb0; // TArray<FSummaryLabel>
		constexpr auto GridLines = 0xc0; // TArray<FGraphLine>
		constexpr auto SampleLines = 0xd0; // TArray<FGraphLine>
		constexpr auto SampleLineIndex = 0xe0; // int32_t
	}

	namespace n_ACameraSettingsActor_TA {
		constexpr auto UploadCameraDelay = 0x268; // float
		constexpr auto PRI = 0x270; // ObjectProperty
		constexpr auto ProfileSettings = 0x278; // FProfileCameraSettings
		constexpr auto bUsingSecondaryCamera = 0x294; // uint32_t : 1
		constexpr auto bUsingBehindView = 0x294; // uint32_t : 1
		constexpr auto bUsingFreecam = 0x294; // uint32_t : 1
		constexpr auto bUsingSwivel = 0x294; // uint32_t : 1
		constexpr auto bMouseCameraToggleEnabled = 0x294; // uint32_t : 1
		constexpr auto bHoldMouseCamera = 0x294; // uint32_t : 1
		constexpr auto bResetCamera = 0x294; // uint32_t : 1
		constexpr auto bDirtySecondaryCamera = 0x294; // uint32_t : 1
		constexpr auto bDirtyBehindView = 0x294; // uint32_t : 1
		constexpr auto CameraPitch = 0x298; // char
		constexpr auto CameraYaw = 0x299; // char
		constexpr auto LastRotationChangeTime = 0x29c; // float
		constexpr auto LastReplicateRotationTime = 0x2a0; // float
		constexpr auto __EventCameraChanged__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __EventSecondaryCameraChanged__Delegate = 0x2c0; // DelegateProperty
	}

	namespace n_USpecialEditionDatabase_TA {
		constexpr auto SpecialEditions = 0x60; // TArray<ObjectProperty>
		constexpr auto EditionNameToEditionID = 0x70; // FMap_Mirror
		constexpr auto bClickToRebuild = 0xc0; // uint32_t : 1
	}

	namespace n_AVoteActor_TA {
		constexpr auto Subject = 0x268; // EVoteSubject
		constexpr auto TimeRemaining = 0x26c; // int32_t
		constexpr auto bUnanimousVote = 0x270; // uint32_t : 1
		constexpr auto bAllowSplitscreenVoters = 0x270; // uint32_t : 1
		constexpr auto bFilterIdleBannedPlayers = 0x270; // uint32_t : 1
		constexpr auto bFinished = 0x270; // uint32_t : 1
		constexpr auto Voters = 0x278; // TArray<FVoter>
		constexpr auto ReplicatedVoters = 0x288; // FVoter [0x8]
		constexpr auto __EventStarted__Delegate = 0x308; // DelegateProperty
		constexpr auto __EventVotersChanged__Delegate = 0x320; // DelegateProperty
		constexpr auto __EventTimeRemainingChanged__Delegate = 0x338; // DelegateProperty
		constexpr auto __EventFinished__Delegate = 0x350; // DelegateProperty
		constexpr auto __EventDestroyed__Delegate = 0x368; // DelegateProperty
	}

	namespace n_UMusicTracklistBuildStep_RemoveStreamerUnsafeTracks_TA {
		constexpr auto Source = 0x60; // TScriptInterface<Class>
		constexpr auto Config = 0x70; // ObjectProperty
	}

	namespace n_APlayerReplicatedEventInfo_TA {
		constexpr auto OwnerPRI = 0x268; // ObjectProperty
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x70; // FRawDistributionFloat
	}

	namespace n_USeqVar_Object {
		constexpr auto ObjValue = 0xe0; // ObjectProperty
		constexpr auto ActorLocation = 0xe8; // FVector
		constexpr auto SupportedClasses = 0xf8; // TArray<FNone*>
	}

	namespace n_U__GFxData_Controls_TA__SetCurrentBinding_93B33D864420B2CB02C2C3B5872FB8FE {
		constexpr auto Key = 0x60; // FName
		constexpr auto bGamepad = 0x68; // uint32_t : 1
		constexpr auto AxisSign = 0x6c; // EAxisSign
	}

	namespace n_UOnlineSaveRecord_TA {
		constexpr auto Version = 0x60; // int32_t
		constexpr auto TimeStamp = 0x68; // QWordProperty
		constexpr auto SaveTick = 0x70; // int32_t
		constexpr auto SaveObjects = 0x78; // TArray<FOnlineSaveObject>
	}

	namespace n_AGameEvent_Football_TA {
		constexpr auto LastScoredTeamIndex = 0xc78; // int32_t
		constexpr auto GoalPlayerSpawnOffset = 0xc7c; // FVector
		constexpr auto BallKickOffDirection = 0xc88; // FVector
		constexpr auto BallKickOffTorque = 0xc94; // FVector
		constexpr auto BallKickOffScale = 0xca0; // float
		constexpr auto SpawnRadiusCheck = 0xca4; // float
		constexpr auto KickoffDelay = 0xca8; // float
	}

	namespace n_UWebSocketConnection_X {
		constexpr auto PingInterval = 0x140; // float
		constexpr auto ClosedReason = 0x148; // FString
		constexpr auto ClosedCode = 0x158; // int32_t
	}

	namespace n_UGFxData_MenuStack_TA {
		constexpr auto MenuNames = 0x98; // TArray<FName>
		constexpr auto LastButtonTriggered = 0xa8; // FName
		constexpr auto __EventTopMenuChanged__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventMenuButtonTriggered__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UCameraState_CarInverted_TA {
		constexpr auto StartBlendParams = 0x1c0; // FViewTargetTransitionParams
		constexpr auto bAllowBlendTimeOverride = 0x1d0; // uint32_t : 1
		constexpr auto DelayFromSpawn = 0x1d4; // float
	}

	namespace n_UCameraState_DirectorCountdownTailPass_TA {
		constexpr auto DistanceFromCar = 0x1b8; // float
		constexpr auto InitialRotation = 0x1bc; // FRotator
		constexpr auto RotationSpeed = 0x1c8; // FRotator
		constexpr auto FOV = 0x1d4; // float
	}

	namespace n_UProductThumbnailAsset_Blueprint_TA {
		constexpr auto RevealedThumbnail = 0x78; // ObjectProperty
	}

	namespace n_UPsyNetClientServiceCollection_X {
		constexpr auto ServiceArchetypes = 0x60; // TArray<ObjectProperty>
	}

	namespace n_U__FirstTimeExperienceManager_TA__SetupTrigger_7652621846EC505580D261BBE5214CC0 {
		constexpr auto Condition = 0x60; // ObjectProperty
		constexpr auto Group = 0x68; // FFTEGroup
	}

	namespace n_U__TaskGate_X__Add_C095A3AE4B65CA40D0C67196E5E03D06 {
		constexpr auto Task = 0x60; // ObjectProperty
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x78; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x88; // int32_t
		constexpr auto bRandomizeWithoutReplacement = 0x8c; // uint32_t : 1
		constexpr auto HasBeenUsed = 0x90; // TArray<char>
		constexpr auto NumRandomUsed = 0xa0; // int32_t
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x60; // FVector
		constexpr auto ResetRotation = 0x6c; // FRotator
		constexpr auto InitialTM = 0x80; // FMatrix
		constexpr auto InitialQuat = 0xc0; // FQuat
	}

	namespace n_UParticleLightEnvironmentComponent {
		constexpr auto ReferenceCount = 0x170; // int32_t
		constexpr auto NumPooledReuses = 0x174; // int32_t
		constexpr auto SharedInstigator = 0x178; // ObjectProperty
		constexpr auto SharedParticleSystem = 0x180; // ObjectProperty
		constexpr auto bAllowDLESharing = 0x188; // uint32_t : 1
	}

	namespace n_UEngineAudioRevSimBoost_TA {
		constexpr auto InterpTime = 0x70; // float
		constexpr auto InterpScale = 0x74; // float
		constexpr auto InterpExp = 0x78; // float
		constexpr auto ActiveTime = 0x7c; // float
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeGuid = 0x60; // FGuid
		constexpr auto LayerInfoMap = 0x70; // TMap<None, None>
		constexpr auto DataInterface = 0xc0; // FPointer
		constexpr auto XYtoComponentMap = 0xc8; // TMap<None, None>
		constexpr auto XYtoCollisionComponentMap = 0x118; // TMap<None, None>
		constexpr auto LandscapeProxy = 0x168; // ObjectProperty
		constexpr auto XYtoAddCollisionMap = 0x170; // TMap<None, None>
		constexpr auto Proxies = 0x1c0; // FSet_Mirror
		constexpr auto SelectedComponents = 0x210; // FSet_Mirror
		constexpr auto SelectedCollisionComponents = 0x260; // FSet_Mirror
		constexpr auto SelectedRegionComponents = 0x2b0; // FSet_Mirror
		constexpr auto SelectedRegion = 0x300; // TMap<None, None>
		constexpr auto HeightmapFilePath = 0x350; // FString
		constexpr auto bIsValid = 0x360; // uint32_t : 1
	}

	namespace n_UArchetypePool {
		constexpr auto ObjectArchetypeMap = 0x70; // FMultiMap_Mirror
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UPsyNetService_FriendPsyTagUpdated_X {
		constexpr auto PlayerID = 0x90; // FUniqueNetId
		constexpr auto PsyTag = 0xd8; // FPsyTag
	}

	namespace n_UBlogTileCache_TA {
		constexpr auto UnreadTileIDs = 0xc8; // TArray<FString>
		constexpr auto PreviouslyDisplayedTileIDs = 0xd8; // TArray<FString>
	}

	namespace n_UMICParamDispenserComponent_X {
		constexpr auto VfTable_IISetParameter = 0xa8; // FPointer
		constexpr auto MaterialIndex = 0xb0; // int32_t
		constexpr auto AttachedComponentName = 0xb4; // FName
		constexpr auto MeshComp = 0xc0; // ComponentProperty
	}

	namespace n_UOnlineGameInterfaceEOS {
		constexpr auto SessionsHandle = 0x318; // FPointer
		constexpr auto CurrentSearchHandle = 0x320; // FPointer
		constexpr auto PlayerInterfaceEOS = 0x328; // ObjectProperty
		constexpr auto bGameSessionUpdateInProgress = 0x330; // uint32_t : 1
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto R = 0xc0; // float
		constexpr auto G = 0xc4; // float
		constexpr auto B = 0xc8; // float
		constexpr auto A = 0xcc; // float
	}

	namespace n_UMotionBlurEffect {
		constexpr auto MaxVelocity = 0x88; // float
		constexpr auto MotionBlurAmount = 0x8c; // float
		constexpr auto FullMotionBlur = 0x90; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0x94; // float
		constexpr auto CameraTranslationThreshold = 0x98; // float
	}

	namespace n_U__RPC_X__CreateTask_381F4468441FFEAF750836A67AC88576 {
		constexpr auto InCallback = 0x60; // DelegateProperty
	}

	namespace n_AFlockActor_TA {
		constexpr auto AgentMesh = 0x268; // ObjectProperty
		constexpr auto FlockInstancedMesh = 0x270; // ComponentProperty
		constexpr auto FlockSize = 0x278; // int32_t
		constexpr auto SeperationWeight = 0x27c; // float
		constexpr auto FlockRadius = 0x280; // FVector
		constexpr auto AgentSpeed = 0x28c; // float
		constexpr auto SeperationIdealDistance = 0x290; // float
		constexpr auto Spline = 0x298; // ObjectProperty
		constexpr auto SpawnSpreadDistanceAlongSpline = 0x2a0; // float
		constexpr auto bRestartTimerEnabled = 0x2a4; // uint32_t : 1
		constexpr auto UpdateFlockMovement = 0x2a4; // uint32_t : 1
		constexpr auto ResetFlockOnToggleUpdateMovement = 0x2a4; // uint32_t : 1
		constexpr auto WaitTimeInSeconds = 0x2a8; // float
		constexpr auto MinAgentScale = 0x2ac; // float
		constexpr auto MaxAgentScale = 0x2b0; // float
		constexpr auto CurrentRestartTime = 0x2b4; // float
		constexpr auto Agents = 0x2b8; // TArray<FFlockAgent>
		constexpr auto AverageAgentPosition = 0x2c8; // FVector
	}

	namespace n_UPitchTekDrawingComponent_TA {
		constexpr auto PreviousOwnerPosition = 0xa0; // FVector
		constexpr auto DecalType = 0xac; // EPitchTekDecalType
		constexpr auto WheelContacts = 0xb0; // TArray<FWheelContactData>
		constexpr auto CarBodyContactData = 0xc0; // FPitchTekCarBodyContactData
	}

	namespace n_UGFxDataStore_X {
		constexpr auto Tables = 0x70; // TArray<FGFxDataStoreTable>
		constexpr auto DirtyTables = 0x80; // TArray<FGFxDirtyTable>
		constexpr auto ObjectNameToTable = 0x90; // FMap_Mirror
		constexpr auto bDebugGetValue = 0xe0; // uint32_t : 1
	}

	namespace n_UGFxData_Koala_TA {
		constexpr auto KoalaController = 0x98; // ObjectProperty
	}

	namespace n_UCompleteTaskDropGroup_TA {
		constexpr auto Icon = 0xb0; // ObjectProperty
		constexpr auto Title = 0xb8; // FString
		constexpr auto Points = 0xc8; // int32_t
	}

	namespace n_UParticleModuleMaterialByParameter {
		constexpr auto MaterialParameters = 0x70; // TArray<FName>
		constexpr auto DefaultMaterials = 0x80; // TArray<ObjectProperty>
	}

	namespace n_UStatusObserver_XPLevel_TA {
		constexpr auto LastGivenXp = 0xa0; // int32_t
		constexpr auto LastGivenLevel = 0xa4; // int32_t
	}

	namespace n_USeqAct_SetVehicleInput_TA {
		constexpr auto Input = 0x160; // FVehicleInputs
	}

	namespace n_URPC_GetAllShops_TA {
		constexpr auto Shops = 0xe8; // TArray<FShopData>
	}

	namespace n_UCameraState_CarRef_TA {
		constexpr auto Car = 0x98; // ObjectProperty
		constexpr auto CameraSettings = 0xa0; // ObjectProperty
	}

	namespace n_UGFxData_PlayerAvatarBorderPreview_TA {
		constexpr auto AvatarBorderPreviews = 0x98; // TArray<FGFxPlayerAvatarBorderRef>
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x70; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x98; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xe8; // EParticleCollisionComplete
		constexpr auto bApplyPhysics = 0xec; // uint32_t : 1
		constexpr auto bNoClip = 0xec; // uint32_t : 1
		constexpr auto bPawnsDoNotDecrementCount = 0xec; // uint32_t : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0xec; // uint32_t : 1
		constexpr auto bDropDetail = 0xec; // uint32_t : 1
		constexpr auto bCollideOnlyIfVisible = 0xec; // uint32_t : 1
		constexpr auto bCollideWithWorld = 0xec; // uint32_t : 1
		constexpr auto bCollideWithWorldAttractors = 0xec; // uint32_t : 1
		constexpr auto DecalMaterial = 0xf0; // ObjectProperty
		constexpr auto DecalWidth = 0xf8; // float
		constexpr auto DecalHeight = 0xfc; // float
		constexpr auto DecalThickness = 0x100; // float
		constexpr auto DecalLifetime = 0x104; // float
		constexpr auto DecalDepthBias = 0x108; // float
		constexpr auto DecalBlendRange = 0x10c; // FVector2D
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x140; // float
		constexpr auto VerticalFudgeFactor = 0x144; // float
		constexpr auto DelayAmount = 0x148; // FRawDistributionFloat
		constexpr auto MaxCollisionDistance = 0x170; // float
		constexpr auto ParticleAttractorCollisionActions = 0x178; // TArray<FParticleAttractorCollisionAction>
	}

	namespace n_UAnimNodeBlendBoost_TA {
		constexpr auto BlendTime = 0x158; // float
	}

	namespace n_U__TourService_PsyNet_TA__GetMatch_16FDD59C4FAEFF929D8E27AED5C4D60F {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_URPC_AutoTour_GetCompletedResult_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto EndOfTournamentData = 0x138; // FTournamentEndData
	}

	namespace n_UMtxConfig_TA {
		constexpr auto bAllowMicroTransactions = 0x78; // uint32_t : 1
		constexpr auto bAllowCurrencyTrading = 0x78; // uint32_t : 1
		constexpr auto bAllowCurrencyGifting = 0x78; // uint32_t : 1
		constexpr auto bAllowCurrencyForCurrencyTrades = 0x78; // uint32_t : 1
		constexpr auto bEnablePlatformStartPurchase = 0x78; // uint32_t : 1
		constexpr auto MaxCurrencyWalletAmount = 0x7c; // int32_t
		constexpr auto MaxCurrencyDailyAmount = 0x80; // int32_t
		constexpr auto FulfillmentRestrictedWalletMessage = 0x88; // FString
		constexpr auto FulfillmentRestrictedDailyMessage = 0x98; // FString
		constexpr auto FulfillmentRestrictedTitle = 0xa8; // FString
		constexpr auto CurrencyDelimeter = 0xb8; // FString
	}

	namespace n_UDistributionFloatUniformRange {
		constexpr auto MaxHigh = 0x80; // float
		constexpr auto MaxLow = 0x84; // float
		constexpr auto MinHigh = 0x88; // float
		constexpr auto MinLow = 0x8c; // float
		constexpr auto bMirrorMaxMin = 0x90; // uint32_t : 1
	}

	namespace n_AStaticMeshActor_TA {
		constexpr auto StaticMeshComponent = 0x268; // ComponentProperty
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x70; // EParticleEventType
		constexpr auto EventName = 0x74; // FName
	}

	namespace n_U__WebImageCache_X__HandleImageData_5A3CED78446BB35A48D185AC5DE99938 {
		constexpr auto Download = 0x60; // ObjectProperty
	}

	namespace n_UShopsService_Local_TA {
		constexpr auto ServiceDelay = 0x60; // float
	}

	namespace n_U__ConsecutiveMatchTracker_TA__HandleGameEnded_421FC02848C136E159D07582C6796A30 {
		constexpr auto GameEvent = 0x60; // ObjectProperty
	}

	namespace n_UOnlineGameLanReservations_X {
		constexpr auto LanBeacon = 0x98; // ComponentProperty
		constexpr auto Beacon = 0xa0; // ComponentProperty
		constexpr auto ReservationTimeout = 0xa8; // float
		constexpr auto bServerTraveling = 0xac; // uint32_t : 1
		constexpr auto __EventReservationsTimeout__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UPremiumGaragePreviewSet_TA {
		constexpr auto PreviewActorIndices = 0x60; // int32_t [0x2]
		constexpr auto CarPreviewActors = 0x68; // TArray<ObjectProperty>
		constexpr auto OnlineParty = 0x78; // ObjectProperty
		constexpr auto CurrentCar = 0x80; // ObjectProperty
		constexpr auto CurrentCarIdx = 0x88; // int32_t
		constexpr auto bFirstSet = 0x8c; // uint32_t : 1
		constexpr auto QueuedSwapPack = 0x90; // ObjectProperty
		constexpr auto QueuedSwapSubIdx = 0x98; // int32_t
		constexpr auto __EventSwapFinished__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventRevealComplete__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_U__UIConfig_TA__FindXPTier_82EC78A04C7D3273EED6BCA885DE7FB8 {
		constexpr auto XPAmount = 0x60; // int32_t
	}

	namespace n_U__EpicLogin_X__HandleLoginChanged_59DF40B64A498A4DC4188CB1C2BF054B {
		constexpr auto InLocalPlayerNum = 0x60; // char
	}

	namespace n_UProductOverride_StaticMesh_TA {
		constexpr auto Mesh = 0x60; // ObjectProperty
	}

	namespace n_AImageReflectionShadowPlane {
		constexpr auto bEnabled = 0x268; // uint32_t : 1
		constexpr auto ReflectionShadowComponent = 0x270; // ComponentProperty
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_UApexClothingAsset {
		constexpr auto LodMaterialInfo = 0xb0; // TArray<FClothingLodInfo>
		constexpr auto MApexAsset = 0xc0; // FPointer
		constexpr auto Materials = 0xc8; // TArray<ObjectProperty>
		constexpr auto ApexClothingLibrary = 0xd8; // ObjectProperty
		constexpr auto bUseHardwareCloth = 0xe0; // uint32_t : 1
		constexpr auto bFallbackSkinning = 0xe0; // uint32_t : 1
		constexpr auto bSlowStart = 0xe0; // uint32_t : 1
		constexpr auto bRecomputeNormals = 0xe0; // uint32_t : 1
		constexpr auto bAllowAdaptiveTargetFrequency = 0xe0; // uint32_t : 1
		constexpr auto bResetAfterTeleport = 0xe0; // uint32_t : 1
		constexpr auto bUseLocalSpaceSimulation = 0xe0; // uint32_t : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xe0; // uint32_t : 1
		constexpr auto IgnoreInitialTrigger = 0xe0; // uint32_t : 1
		constexpr auto UVChannelForTangentUpdate = 0xe4; // int32_t
		constexpr auto MaxDistanceBlendTime = 0xe8; // float
		constexpr auto ContinuousRotationThreshold = 0xec; // float
		constexpr auto ContinuousDistanceThreshold = 0xf0; // float
		constexpr auto LodWeightsMaxDistance = 0xf4; // float
		constexpr auto LodWeightsDistanceWeight = 0xf8; // float
		constexpr auto LodWeightsBias = 0xfc; // float
		constexpr auto LodWeightsBenefitsBias = 0x100; // float
		constexpr auto LODDecayTime = 0x104; // float
		constexpr auto SoundOnMove = 0x108; // ObjectProperty
		constexpr auto SoundOnRest = 0x110; // ObjectProperty
		constexpr auto SoundWhileMoving = 0x118; // ObjectProperty
		constexpr auto SpeedThresholdOnMove = 0x120; // float
		constexpr auto SpeedThresholdOnRest = 0x124; // float
	}

	namespace n_UEOSEvent_Presence_TA {
		constexpr auto PlayerLocation = 0x68; // FString
	}

	namespace n_ANxRadialForceField {
		constexpr auto RenderComponent = 0x2c0; // ComponentProperty
		constexpr auto ForceStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceFalloff = 0x2d0; // ERadialImpulseFalloff
		constexpr auto LinearKernel = 0x2d8; // FPointer
	}

	namespace n_USeqAct_FeatureTest {
		constexpr auto FreezeAtParameters = 0x188; // FString
		constexpr auto ScreenShotDelay = 0x198; // float
		constexpr auto ScreenShotName = 0x1a0; // FString
		constexpr auto RemainingScreenShotDelay = 0x1b0; // float
	}

	namespace n_UUIDataProvider_OnlinePlayerDataBase {
		constexpr auto PlayerControllerId = 0x70; // int32_t
	}

	namespace n_UPsyNetService_ClubsUpdate_TA {
		constexpr auto ClubDetails = 0x90; // ObjectProperty
	}

	namespace n_UFXTrait_BoostParticle_TA {
		constexpr auto ParticlePreview = 0x60; // ObjectProperty
		constexpr auto DuplicateParticle = 0x68; // ObjectProperty
		constexpr auto DuplicateParticlePreview = 0x70; // ObjectProperty
		constexpr auto SharedParameters = 0x78; // TArray<FParticleSysParam>
		constexpr auto DuplicateParameters = 0x88; // TArray<FParticleSysParam>
		constexpr auto PreviewOverrideParameters = 0x98; // TArray<FParticleSysParam>
		constexpr auto bConvertedDuplicateParametersToSharedParameters = 0xa8; // uint32_t : 1
	}

	namespace n_USeqEvent_StadiumTeamColorsChanged_TA {
		constexpr auto Team = 0x180; // int32_t
		constexpr auto Primary = 0x184; // FVector
		constexpr auto Secondary = 0x190; // FVector
	}

	namespace n_UWebRequest_X {
		constexpr auto bZipRequest = 0x60; // uint32_t : 1
		constexpr auto bZipResponse = 0x60; // uint32_t : 1
		constexpr auto bLogRequest = 0x60; // uint32_t : 1
		constexpr auto bLogResponse = 0x60; // uint32_t : 1
		constexpr auto bConnectionReset = 0x60; // uint32_t : 1
		constexpr auto RequestState = 0x64; // EWebRequestState
		constexpr auto URL = 0x68; // FString
		constexpr auto HTTPRequest = 0x78; // ObjectProperty
		constexpr auto HttpResponse = 0x80; // ObjectProperty
		constexpr auto Content = 0x88; // TArray<char>
		constexpr auto StringContent = 0x98; // FString
		constexpr auto ResponseData = 0xa8; // TArray<char>
		constexpr auto Error = 0xb8; // ObjectProperty
		constexpr auto __EventCompleted__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UBTC_AreaClear {
		constexpr auto Source = 0x1d0; // ObjectProperty
		constexpr auto SourcePredictionTime = 0x1d8; // float
		constexpr auto Radius = 0x1dc; // float
	}

	namespace n_UCameraState_Replay_TA {
		constexpr auto bLocalMovement = 0x98; // uint32_t : 1
		constexpr auto bClipToField = 0x98; // uint32_t : 1
		constexpr auto bUIHighlightFocus = 0x98; // uint32_t : 1
		constexpr auto OldFocusActor = 0xa0; // ObjectProperty
		constexpr auto OldFocusActorLocation = 0xa8; // FVector
	}

	namespace n_U__SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_D2D4A9FF4D0553B70FE878A58DC1747C {
		constexpr auto Mesh = 0x60; // ComponentProperty
		constexpr auto Paint = 0x68; // ObjectProperty
		constexpr auto TeamEdition = 0x70; // ObjectProperty
		constexpr auto TeamID = 0x78; // int32_t
	}

	namespace n_UOnlineStatsWrite {
		constexpr auto StatMappings = 0x70; // TArray<FStringIdToStringMapping>
		constexpr auto Properties = 0x80; // TArray<FSettingsProperty>
		constexpr auto ViewIds = 0x90; // TArray<int32_t>
		constexpr auto ArbitratedViewIds = 0xa0; // TArray<int32_t>
		constexpr auto RatingId = 0xb0; // int32_t
		constexpr auto __OnStatsWriteComplete__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
		constexpr auto MaxEffectorDiff = 0x80; // float
		constexpr auto MinEffectorDiff = 0x84; // float
		constexpr auto EffectorDiffSocket = 0x88; // float
		constexpr auto ParentKeyScale = 0x8c; // float
		constexpr auto bRetarget = 0x90; // uint32_t : 1
		constexpr auto bActuallyFilterLinearKeys = 0x90; // uint32_t : 1
	}

	namespace n_USeqEvent_PlayerSpawned {
		constexpr auto SpawnLocation = 0x180; // FVector
		constexpr auto SpawnRotation = 0x18c; // FRotator
	}

	namespace n_UBTMoveModifier_Boost {
		constexpr auto MinDistanceFromDestination = 0x78; // float
		constexpr auto MaxAngleFromCar = 0x7c; // float
		constexpr auto MaxAngleFromDestination = 0x80; // float
		constexpr auto BoostPickup = 0x88; // ObjectProperty
		constexpr auto LastCheckTime = 0x90; // float
	}

	namespace n_UPremiumSkin_TA {
		constexpr auto MIC = 0x60; // ObjectProperty
		constexpr auto Quality = 0x68; // EProductQuality
		constexpr auto SkinType = 0x69; // ESkinType
		constexpr auto SkinParameters = 0x70; // FMaterialParams
		constexpr auto Thumbnail = 0xa0; // ObjectProperty
		constexpr auto bTeamFinishDisabled = 0xa8; // uint32_t : 1
		constexpr auto bCustomFinishDisabled = 0xa8; // uint32_t : 1
		constexpr auto Attributes = 0xb0; // TArray<ObjectProperty>
		constexpr auto SkinSets = 0xc0; // TArray<ObjectProperty>
		constexpr auto AssetTemplate = 0xd0; // ObjectProperty
		constexpr auto ProductTemplate = 0xd8; // ObjectProperty
	}

	namespace n_U__TourGameUpdateDispatcher_TA__Init_F3EF4E854AF453F66C8D8C9DBA33B30F {
		constexpr auto Settings = 0x60; // FTourServerSettings
	}

	namespace n_UPartyMessage_Kick_X {
		constexpr auto KickPlayer = 0xa8; // FUniqueNetId
		constexpr auto KickReason = 0xf0; // ELobbyKickReason
	}

	namespace n_UGFxData_ProductAttribute_ShopItem_TA {
		constexpr auto BackgroundImage = 0xb0; // ObjectProperty
		constexpr auto ItemLogo = 0xb8; // ObjectProperty
	}

	namespace n_U__GFxData_Friends_TA__DeliverUnblockedEpicFriendInvites_F3E988FC463DF2E58D724A86AD20FD7D {
		constexpr auto BlockedInviteIdx = 0x60; // int32_t
	}

	namespace n_USaveLock_X {
		constexpr auto GFxEngine = 0x60; // ObjectProperty
	}

	namespace n_URPC_TrainingEditor_GetTrainingData_TA {
		constexpr auto Code = 0xe8; // FString
		constexpr auto TrainingData = 0xf8; // ObjectProperty
	}

	namespace n_U__TourRegistration_TA__Register_2A7B13BE447FDEEFC484AB96C82E7180 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_SetPostProcess_TA {
		constexpr auto Chains = 0x160; // TArray<ObjectProperty>
		constexpr auto bReplaceCurrentChain = 0x170; // uint32_t : 1
	}

	namespace n_AGameEvent_TrainingEditor_TA {
		constexpr auto MinRoundTime = 0xce8; // float
		constexpr auto MaxRoundTime = 0xcec; // float
		constexpr auto bNoEditor = 0xcf0; // uint32_t : 1
		constexpr auto bDisplayedRedoPenaltyMessage = 0xcf0; // uint32_t : 1
		constexpr auto bUnsavedChanges = 0xcf0; // uint32_t : 1
		constexpr auto PointsScoredThisRound = 0xcf4; // int32_t
		constexpr auto ResetModal = 0xcf8; // ObjectProperty
		constexpr auto ShotAttempt = 0xd00; // int32_t
		constexpr auto RedoTotal = 0xd04; // int32_t
		constexpr auto GoalieScore = 0xd08; // int32_t
		constexpr auto PlayTestType = 0xd0c; // EPlayTestType
		constexpr auto GoalMeshBlockers = 0xd10; // TArray<ObjectProperty>
		constexpr auto GoalMeshBlockerArchetype = 0xd20; // ObjectProperty
		constexpr auto TrainingData = 0xd28; // ObjectProperty
		constexpr auto PrePlaytestState = 0xd30; // FName
		constexpr auto SaveDelayTime = 0xd38; // float
		constexpr auto SaveCooldown = 0xd3c; // float
		constexpr auto TrainingFileName = 0xd40; // FString
		constexpr auto __EventRoundTimeChanged__Delegate = 0xd50; // DelegateProperty
		constexpr auto __EventRoundChanged__Delegate = 0xd68; // DelegateProperty
		constexpr auto __EventRoundFinished__Delegate = 0xd80; // DelegateProperty
		constexpr auto __EventPlaytestStarted__Delegate = 0xd98; // DelegateProperty
		constexpr auto __EventUnsavedChanges__Delegate = 0xdb0; // DelegateProperty
		constexpr auto __EventSaveResult__Delegate = 0xdc8; // DelegateProperty
	}

	namespace n_UPsyNetService_Reservation_X {
		constexpr auto Reservation = 0x90; // FCheckReservationResponse
	}

	namespace n_UProductAttribute_Licensed_TA {
		constexpr auto ReplacementProduct = 0x80; // ObjectProperty
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x60; // uint32_t : 1
		constexpr auto TrackBoneNames = 0x68; // TArray<FName>
		constexpr auto Sequences = 0x78; // TArray<ObjectProperty>
		constexpr auto SequenceCache = 0x88; // TMap<None, None>
		constexpr auto LinkupCache = 0xd8; // TArray<FAnimSetMeshLinkup>
		constexpr auto SkelMesh2LinkupCache = 0xe8; // TMap<None, None>
		constexpr auto BoneUseAnimTranslation = 0x138; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x148; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x158; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x168; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x178; // FName
		constexpr auto BestRatioSkelMeshName = 0x180; // FName
	}

	namespace n_U__TAsyncResult__array_ClubInvite_X__NotifyOnResult_B48145C84AC791102F353E8E6ED411BC {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__PlayerController_TA__ClientNotifyChallengedToHonorDuel_5345A5534A1B5D09B37A379B8390F646 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_UPsyNetService_AutoTourCompletedResultReceived_TA {
		constexpr auto EndOfTournamentData = 0x90; // FTournamentEndData
	}

	namespace n_UOnlineGameDLC_X {
		constexpr auto SyncInterval = 0x98; // int32_t
		constexpr auto PlayerOwnershipSyncInterval = 0x9c; // float
		constexpr auto PlayerDLCInfos = 0xa0; // TArray<FPlayerDLCInfo>
		constexpr auto SteamWebRequests = 0xb0; // TArray<FSteamWebRequestData>
		constexpr auto __EventValidationReady__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_URPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA {
		constexpr auto Codes = 0xe8; // TArray<FString>
		constexpr auto TrainingData = 0xf8; // TArray<FCodeTimePair>
	}

	namespace n_ABrush {
		constexpr auto CsgOper = 0x268; // ECsgOper
		constexpr auto BrushColor = 0x26c; // FColor
		constexpr auto PolyFlags = 0x270; // int32_t
		constexpr auto bColored = 0x274; // uint32_t : 1
		constexpr auto bSolidWhenSelected = 0x274; // uint32_t : 1
		constexpr auto bPlaceableFromClassBrowser = 0x274; // uint32_t : 1
		constexpr auto Brush = 0x278; // ObjectProperty
		constexpr auto BrushComponent = 0x280; // ComponentProperty
		constexpr auto SavedSelections = 0x288; // TArray<FGeomSelection>
	}

	namespace n_ARB_ConstraintActor {
		constexpr auto ConstraintActor1 = 0x268; // ObjectProperty
		constexpr auto ConstraintActor2 = 0x270; // ObjectProperty
		constexpr auto ConstraintSetup = 0x278; // ObjectProperty
		constexpr auto ConstraintInstance = 0x280; // ObjectProperty
		constexpr auto bDisableCollision = 0x288; // uint32_t : 1
		constexpr auto bUpdateActor1RefFrame = 0x288; // uint32_t : 1
		constexpr auto bUpdateActor2RefFrame = 0x288; // uint32_t : 1
		constexpr auto PulleyPivotActor1 = 0x290; // ObjectProperty
		constexpr auto PulleyPivotActor2 = 0x298; // ObjectProperty
	}

	namespace n_UOvertimeSettings_TA {
		constexpr auto TieBreaker = 0x60; // EMatchTieBreaker
		constexpr auto OvertimeGameTime = 0x64; // int32_t
	}

	namespace n_ACamera_Edit_TA {
		constexpr auto CameraMode = 0x7a8; // FName
		constexpr auto CurrentCameraState = 0x7b0; // ObjectProperty
	}

	namespace n_ASpecialPickup_Demolish_TA {
		constexpr auto DemolishTarget = 0x388; // EDemolishTarget
		constexpr auto DemolishSpeed = 0x389; // EDemolishSpeed
		constexpr auto OldTarget = 0x38a; // EDemolishTarget
		constexpr auto OldSpeed = 0x38b; // EDemolishSpeed
	}

	namespace n_AHeightFog {
		constexpr auto Component = 0x268; // ComponentProperty
		constexpr auto bEnabled = 0x270; // uint32_t : 1
	}

	namespace n_UClientReservationMessage_X {
		constexpr auto Reservation = 0x60; // FServerReservationData
	}

	namespace n_U__OnlineClubCache_X__GetPlayerClubDetails_28394E004666DE8CDDD3A38E1ECCFC0B {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_URPC_ProductsDebugAddRandom_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Count = 0x130; // int32_t
		constexpr auto SeriesID = 0x134; // int32_t
		constexpr auto Drops = 0x138; // TArray<FOnlineProductData>
		constexpr auto Products = 0x148; // TArray<ObjectProperty>
	}

	namespace n_ADynamicAnchor {
		constexpr auto CurrentUser = 0x388; // ObjectProperty
	}

	namespace n_ANavMeshObstacle {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x268; // FPointer
		constexpr auto bEnabled = 0x270; // uint32_t : 1
		constexpr auto bPreserveInternalGeo = 0x270; // uint32_t : 1
	}

	namespace n_USeqAct_CameraLookAt {
		constexpr auto bAffectCamera = 0x160; // uint32_t : 1
		constexpr auto bAlwaysFocus = 0x160; // uint32_t : 1
		constexpr auto bAdjustCamera = 0x160; // uint32_t : 1
		constexpr auto bTurnInPlace = 0x160; // uint32_t : 1
		constexpr auto bIgnoreTrace = 0x160; // uint32_t : 1
		constexpr auto bAffectHead = 0x160; // uint32_t : 1
		constexpr auto bRotatePlayerWithCamera = 0x160; // uint32_t : 1
		constexpr auto bToggleGodMode = 0x160; // uint32_t : 1
		constexpr auto bLeaveCameraRotation = 0x160; // uint32_t : 1
		constexpr auto bDisableInput = 0x160; // uint32_t : 1
		constexpr auto bUsedTimer = 0x160; // uint32_t : 1
		constexpr auto bCheckLineOfSight = 0x160; // uint32_t : 1
		constexpr auto InterpSpeedRange = 0x164; // FVector2D
		constexpr auto InFocusFOV = 0x16c; // FVector2D
		constexpr auto FocusBoneName = 0x174; // FName
		constexpr auto TextDisplay = 0x180; // FString
		constexpr auto TotalTime = 0x190; // float
		constexpr auto CameraFOV = 0x194; // float
		constexpr auto RemainingTime = 0x198; // float
	}

	namespace n_UAimControl_TA {
		constexpr auto LevelCap = 0x60; // int32_t
		constexpr auto GroundBoost = 0x64; // FAimAssistSettings
		constexpr auto BoostSteer = 0x98; // FAimAssistSettings
		constexpr auto Throttle = 0xcc; // FAimAssistSettings
		constexpr auto Steer = 0x100; // FAimAssistSettings
		constexpr auto Jump = 0x134; // FAimAssistSettings
		constexpr auto Dodge = 0x168; // FAimAssistSettings
		constexpr auto AirTilt = 0x19c; // FAimAssistSettings
		constexpr auto Handbrake = 0x1d0; // FAimAssistSettings
		constexpr auto Aerial = 0x204; // FAimAssistSettings
		constexpr auto AerialJump = 0x238; // FAimAssistSettings
		constexpr auto AerialBoost = 0x26c; // FAimAssistSettings
		constexpr auto FlipOver = 0x2a0; // FAimAssistSettings
	}

	namespace n_UCacheTimer_X {
		constexpr auto CacheTimeoutSeconds = 0x70; // float
		constexpr auto CacheExpireTime = 0x74; // float
		constexpr auto bEnabled = 0x78; // uint32_t : 1
		constexpr auto __EventExpired__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UProductAttribute_RequiresOwnedProduct_TA {
		constexpr auto Product = 0x80; // ObjectProperty
	}

	namespace n_UPlayerReportComponent_TA {
		constexpr auto ReportablePlayers = 0xa0; // TArray<FUniqueNetId>
		constexpr auto ReportedPlayers = 0xb0; // TArray<FReportedPlayerInfo>
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x70; // FRawDistributionVector
	}

	namespace n_UPartyClubSync_TA {
		constexpr auto Party = 0x60; // ObjectProperty
		constexpr auto Clubs = 0x68; // ObjectProperty
		constexpr auto PsyNet = 0x70; // ObjectProperty
		constexpr auto PlayerIDs = 0x78; // TArray<FUniqueNetId>
	}

	namespace n_UGFxData_TourMatchmaking_TA {
		constexpr auto TourMatchmaking = 0x98; // ObjectProperty
		constexpr auto GameVersion = 0xa0; // ObjectProperty
	}

	namespace n_UCameraState_DirectorPlayerView_TA {
		constexpr auto BallCameraState = 0x180; // ObjectProperty
		constexpr auto MinimumHit = 0x188; // float
		constexpr auto MinimumHitSeparation = 0x18c; // float
		constexpr auto StaleDistance = 0x190; // float
		constexpr auto MinimumTimeToBall = 0x194; // float
		constexpr auto CarChangeTimePadding = 0x198; // float
		constexpr auto CarChangeBlendParams = 0x19c; // FViewTargetTransitionParams
		constexpr auto CarChangeBlendTimeForDistance = 0x1b0; // FInterpCurveFloat
		constexpr auto MinBlendContinuity = 0x1c8; // float
		constexpr auto MaxBlendDistance = 0x1cc; // float
		constexpr auto MaintainCurrentDistance = 0x1d0; // float
		constexpr auto MaintainCurrentHitBias = 0x1d4; // float
		constexpr auto MaintainBallScorability = 0x1d8; // float
		constexpr auto MaintainBallScorabilityViewRating = 0x1dc; // float
		constexpr auto ContinuityBias = 0x1e0; // FInterpCurveFloat
		constexpr auto MinimumViewRating = 0x1f8; // float
		constexpr auto AttackerBias = 0x1fc; // float
		constexpr auto AttackingGoalDistance = 0x200; // float
		constexpr auto BadFocusDistance = 0x204; // float
		constexpr auto BadFocusViewRating = 0x208; // float
		constexpr auto BadFocusViewRatingDuration = 0x20c; // float
		constexpr auto FocusCar = 0x210; // ObjectProperty
		constexpr auto LastCarChangeTime = 0x218; // float
		constexpr auto bIsRelevant = 0x21c; // uint32_t : 1
		constexpr auto bBlending = 0x21c; // uint32_t : 1
		constexpr auto bExceptionallyBadFocus = 0x21c; // uint32_t : 1
		constexpr auto bBadViewRating = 0x21c; // uint32_t : 1
		constexpr auto BlendTime = 0x220; // float
		constexpr auto SnapshotPOV = 0x224; // FCameraOrientation
		constexpr auto BadViewRatingStart = 0x250; // float
	}

	namespace n_AAISwitchablePylon {
		constexpr auto bOpen = 0x4a8; // uint32_t : 1
	}

	namespace n_URPC_UpdateSkills_X {
		constexpr auto Playlist = 0x170; // int32_t
		constexpr auto NewSkills = 0x178; // TArray<FUpdatedPlayerSkillRating>
		constexpr auto NewRewardLevels = 0x188; // TArray<FPlayerSeasonRewardProgress>
		constexpr auto MatchData = 0x198; // ObjectProperty
	}

	namespace n_UMaterialParamsSet_TA {
		constexpr auto TextureParameters = 0x60; // TArray<FMaterialTextureParam>
		constexpr auto VectorParameters = 0x70; // TArray<FMaterialVectorParam>
		constexpr auto ScalarParameters = 0x80; // TArray<FMaterialScalarParam>
	}

	namespace n_USphereCollisionShape_X {
		constexpr auto StartRadius = 0x80; // float
		constexpr auto EndRadius = 0x84; // float
	}

	namespace n_AGameEvent_Team_TA {
		constexpr auto TeamArchetypes = 0x720; // TArray<ObjectProperty>
		constexpr auto Teams = 0x730; // TArray<ObjectProperty>
		constexpr auto MaxTeamSize = 0x740; // int32_t
		constexpr auto NumBots = 0x744; // int32_t
		constexpr auto bMuteOppositeTeams = 0x748; // uint32_t : 1
		constexpr auto bDisableMutingOtherTeam = 0x748; // uint32_t : 1
		constexpr auto bForfeit = 0x748; // uint32_t : 1
		constexpr auto bUnfairTeams = 0x748; // uint32_t : 1
		constexpr auto bAlwaysAutoSelectTeam = 0x748; // uint32_t : 1
		constexpr auto RematchVoteArchetype = 0x750; // ObjectProperty
		constexpr auto RematchVote = 0x758; // ObjectProperty
		constexpr auto PreloadedBotAssets = 0x760; // TArray<ObjectProperty>
		constexpr auto __EventTeamsCreated__Delegate = 0x770; // DelegateProperty
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_UCrowdActorSettings_TA {
		constexpr auto NoiseRiseRate = 0x60; // float
		constexpr auto NoiseFallRate = 0x64; // float
		constexpr auto IdleNoise = 0x68; // FRandomRange
		constexpr auto IdleNoiseDuration = 0x70; // FRandomRange
		constexpr auto CountdownStartNoise = 0x78; // ObjectProperty
		constexpr auto CountdownEndNoise = 0x80; // ObjectProperty
		constexpr auto OvertimeStartNoise = 0x88; // ObjectProperty
		constexpr auto TimeAlmostOutNoise = 0x90; // ObjectProperty
		constexpr auto StatNoises = 0x98; // TArray<FStatCrowdNoise>
		constexpr auto RandomChantsSound = 0xa8; // ObjectProperty
		constexpr auto RandomChantsDelay = 0xb0; // FRandomRange
		constexpr auto UpdateStatNoises = 0xb8; // uint32_t : 1
		constexpr auto BallGoalDistanceNoiseCurve = 0xc0; // FInterpCurveFloat
		constexpr auto GoalDotDirection = 0xd8; // FVector
		constexpr auto MinGoalDotAngle = 0xe4; // float
		constexpr auto BallHitNoises = 0xe8; // TArray<FBallHitCrowdNoise>
		constexpr auto BallHitNoiseDelay = 0xf8; // float
		constexpr auto CountDownSoundList = 0x100; // TArray<ObjectProperty>
		constexpr auto RoundCountDownSoundList = 0x110; // TArray<ObjectProperty>
		constexpr auto OneMinRemaining = 0x120; // ObjectProperty
		constexpr auto ThirtySecondsRemaining = 0x128; // ObjectProperty
		constexpr auto CrowdStingerWin = 0x130; // ObjectProperty
		constexpr auto CrowdStingerLose = 0x138; // ObjectProperty
		constexpr auto CrowdStingerForfeit = 0x140; // ObjectProperty
		constexpr auto CrowdStartOverTimeSound = 0x148; // ObjectProperty
		constexpr auto MatchEndedEncore = 0x150; // ObjectProperty
		constexpr auto MatchEndedEncoreDelay = 0x158; // float
		constexpr auto DefenseChant = 0x160; // FCrowdDefenseSettings
	}

	namespace n_UCameraTrackPoint_TA {
		constexpr auto frame = 0x60; // int32_t
		constexpr auto Time = 0x64; // float
		constexpr auto Location = 0x68; // FVector
		constexpr auto Rotation = 0x74; // FRotator
		constexpr auto FOV = 0x80; // float
	}

	namespace n_AStatFactory_Breakout_TA {
		constexpr auto BreakoutDamage = 0x458; // ObjectProperty
		constexpr auto BreakoutDamageLarge = 0x460; // ObjectProperty
		constexpr auto BreakoutSaveDamageThreshold = 0x468; // int32_t
		constexpr auto BreakoutDamageLargeThreshold = 0x46c; // int32_t
		constexpr auto ShotGoalTimestep = 0x470; // float
		constexpr auto BreakoutEvent = 0x478; // ObjectProperty
		constexpr auto FieldCenter = 0x480; // FVector
	}

	namespace n_U__GameEvent_Soccar_TA__ReportFps_4FDAB6914ADE9D0617A2A5AC61E56801 {
		constexpr auto TotalFrames = 0x60; // int32_t
	}

	namespace n_UGFxData_ServerPerformanceStats_TA {
		constexpr auto ServerPerformanceStatus = 0x98; // EConnectionQualityState
		constexpr auto bReportedServer = 0x9c; // uint32_t : 1
	}

	namespace n_UDataStoreClient {
		constexpr auto GlobalDataStoreClasses = 0x70; // TArray<FString>
		constexpr auto GlobalDataStores = 0x80; // TArray<ObjectProperty>
		constexpr auto PlayerDataStoreClassNames = 0x90; // TArray<FString>
		constexpr auto PlayerDataStoreClasses = 0xa0; // TArray<FNone*>
		constexpr auto PlayerDataStores = 0xb0; // TArray<FPlayerDataStoreGroup>
	}

	namespace n_AGameEvent_GameEditor_TA {
		constexpr auto SaveDataClass = 0xc78; // FNone*
		constexpr auto SaveData = 0xc80; // ObjectProperty
		constexpr auto ActiveRoundNumber = 0xc88; // int32_t
		constexpr auto SpawnableArchetypes = 0xc90; // TArray<FSpawnArchetypeData>
		constexpr auto CarSpawnPoints = 0xca0; // TArray<ObjectProperty>
		constexpr auto EditorPawnArchetype = 0xcb0; // ObjectProperty
		constexpr auto MaxRounds = 0xcb8; // int32_t
		constexpr auto UndoHistory = 0xcc0; // TArray<FActorHistory>
		constexpr auto HistoryPosition = 0xcd0; // int32_t
		constexpr auto MaxUndoHistory = 0xcd4; // int32_t
		constexpr auto FXActorArchetype = 0xcd8; // ObjectProperty
		constexpr auto FXActor = 0xce0; // ObjectProperty
	}

	namespace n_UTourRewards_TA {
		constexpr auto Results = 0x60; // TArray<FRewardsResult>
		constexpr auto Requests = 0x70; // TArray<FRewardsRequest>
		constexpr auto __OnGetRewards__Delegate = 0x80; // DelegateProperty
	}

	namespace n_USeqAct_SpawnActor_TA {
		constexpr auto ActorArchetype = 0x160; // ObjectProperty
		constexpr auto Transform = 0x168; // ObjectProperty
		constexpr auto SpawnedActor = 0x170; // ObjectProperty
	}

	namespace n_AStayAsPartyVoteYes_TA {
		constexpr auto Voter = 0x268; // ObjectProperty
	}

	namespace n_UBTC_Vehicle {
		constexpr auto bOnBack = 0xe8; // uint32_t : 1
		constexpr auto bNotOnBack = 0xe8; // uint32_t : 1
		constexpr auto bWheelsOnGround = 0xe8; // uint32_t : 1
		constexpr auto bWheelsNotOnGround = 0xe8; // uint32_t : 1
		constexpr auto GroundNormalGreaterThan = 0xec; // float
		constexpr auto GroundNormalLessThan = 0xf0; // float
		constexpr auto ForwardSpeedGreaterThan = 0xf4; // float
		constexpr auto ForwardSpeedLessThan = 0xf8; // float
	}

	namespace n_UTradeErrors_TA {
		constexpr auto AttemptedCurrencyGifting = 0x80; // ObjectProperty
		constexpr auto AttemptedCurrencyExchange = 0x88; // ObjectProperty
		constexpr auto UserTradeBanned = 0x90; // ObjectProperty
		constexpr auto TradeNotAllowed = 0x98; // ObjectProperty
		constexpr auto OtherPlayerTradeNotAllowed = 0xa0; // ObjectProperty
		constexpr auto OtherPlayerBanned = 0xa8; // ObjectProperty
		constexpr auto TradeMinLevelNotReached = 0xb0; // ObjectProperty
		constexpr auto TradeMinPlayTimeNotReached = 0xb8; // ObjectProperty
		constexpr auto TradeDailyLimitReached = 0xc0; // ObjectProperty
		constexpr auto TradeExceedCurrencyLimit = 0xc8; // ObjectProperty
		constexpr auto TradePlayerNotInParty = 0xd0; // ObjectProperty
	}

	namespace n_UPartyMessage_SetPlatformParty_X {
		constexpr auto PlatformPartyID = 0xa8; // FUniqueLobbyId
	}

	namespace n_UIniLocPatcher {
		constexpr auto Files = 0x60; // TArray<FIniLocFileEntry>
		constexpr auto bRequestEmsFileList = 0x70; // uint32_t : 1
		constexpr auto MaxCachedFileAge = 0x74; // int32_t
		constexpr auto TitleFileInterface = 0x78; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x88; // TScriptInterface<Class>
		constexpr auto ReadTitleFileCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnAllTitleFilesCompleted__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_U__BinaryUploader_TA__Upload_A5C269D2412C078A2ABAF982B33595D8 {
		constexpr auto Request = 0x60; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlinePlayerData {
		constexpr auto FriendsProvider = 0xa0; // ObjectProperty
		constexpr auto PlayerControllerId = 0xa8; // int32_t
		constexpr auto PlayerNick = 0xb0; // FString
		constexpr auto ProfileSettingsClassName = 0xc0; // FString
		constexpr auto ProfileSettingsClass = 0xd0; // FNone*
		constexpr auto ProfileProvider = 0xd8; // ObjectProperty
		constexpr auto ProfileProviderClassName = 0xe0; // FString
		constexpr auto ProfileProviderClass = 0xf0; // FNone*
		constexpr auto PlayerStorageClassName = 0xf8; // FString
		constexpr auto PlayerStorageClass = 0x108; // FNone*
		constexpr auto StorageProvider = 0x110; // ObjectProperty
		constexpr auto StorageProviderClassName = 0x118; // FString
		constexpr auto StorageProviderClass = 0x128; // FNone*
		constexpr auto FriendMessagesProvider = 0x130; // ObjectProperty
		constexpr auto AchievementsProvider = 0x138; // ObjectProperty
		constexpr auto FriendsProviderClassName = 0x140; // FString
		constexpr auto FriendsProviderClass = 0x150; // FNone*
		constexpr auto FriendMessagesProviderClassName = 0x158; // FString
		constexpr auto FriendMessagesProviderClass = 0x168; // FNone*
		constexpr auto AchievementsProviderClassName = 0x170; // FString
		constexpr auto AchievementsProviderClass = 0x180; // FNone*
		constexpr auto PartyChatProviderClassName = 0x188; // FString
		constexpr auto PartyChatProviderClass = 0x198; // FNone*
		constexpr auto PartyChatProvider = 0x1a0; // ObjectProperty
	}

	namespace n_USeqAct_AttachToActor {
		constexpr auto bDetach = 0x160; // uint32_t : 1
		constexpr auto bHardAttach = 0x160; // uint32_t : 1
		constexpr auto bUseRelativeOffset = 0x160; // uint32_t : 1
		constexpr auto bUseRelativeRotation = 0x160; // uint32_t : 1
		constexpr auto BoneName = 0x164; // FName
		constexpr auto RelativeOffset = 0x16c; // FVector
		constexpr auto RelativeRotation = 0x178; // FRotator
	}

	namespace n_UOnlineGameLanBrowser_X {
		constexpr auto StartSearchFailString = 0x98; // FString
		constexpr auto SearchingString = 0xa8; // FString
		constexpr auto FoundServerString = 0xb8; // FString
		constexpr auto Filter = 0xc8; // FCustomMatchSettings
		constexpr auto bIsHostQuery = 0x158; // uint32_t : 1
		constexpr auto SearchTimeout = 0x15c; // float
		constexpr auto LanBeacon = 0x160; // ComponentProperty
		constexpr auto __EventSearchNewResponse__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventSearchStatus__Delegate = 0x180; // DelegateProperty
		constexpr auto __EventSearchStateChanged__Delegate = 0x198; // DelegateProperty
		constexpr auto __EventSearchComplete__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __EventSearchError__Delegate = 0x1c8; // DelegateProperty
	}

	namespace n_AProcBuilding {
		constexpr auto Ruleset = 0x2a8; // ObjectProperty
		constexpr auto BuildingMeshCompInfos = 0x2b0; // TArray<FPBMeshCompInfo>
		constexpr auto BuildingFracMeshCompInfos = 0x2c0; // TArray<FPBFracMeshCompInfo>
		constexpr auto SimpleMeshComp = 0x2d0; // ComponentProperty
		constexpr auto bGenerateRoofMesh = 0x2d8; // uint32_t : 1
		constexpr auto bGenerateFloorMesh = 0x2d8; // uint32_t : 1
		constexpr auto bApplyRulesToRoof = 0x2d8; // uint32_t : 1
		constexpr auto bApplyRulesToFloor = 0x2d8; // uint32_t : 1
		constexpr auto bSplitWallsAtRoofLevels = 0x2d8; // uint32_t : 1
		constexpr auto bSplitWallsAtWallEdges = 0x2d8; // uint32_t : 1
		constexpr auto bQuickEdited = 0x2d8; // uint32_t : 1
		constexpr auto bBuildingBrushCollision = 0x2d8; // uint32_t : 1
		constexpr auto bDebugDrawEdgeInfo = 0x2d8; // uint32_t : 1
		constexpr auto bDebugDrawScopes = 0x2d8; // uint32_t : 1
		constexpr auto LODMeshComps = 0x2e0; // TArray<ComponentProperty>
		constexpr auto LODMeshUVInfos = 0x2f0; // TArray<FPBFaceUVInfo>
		constexpr auto TopLevelScopes = 0x300; // TArray<FPBScope2D>
		constexpr auto NumMeshedTopLevelScopes = 0x310; // int32_t
		constexpr auto TopLevelScopeUVInfos = 0x318; // TArray<FPBFaceUVInfo>
		constexpr auto TopLevelScopeInfos = 0x328; // TArray<FPBScopeProcessInfo>
		constexpr auto EdgeInfos = 0x338; // TArray<FPBEdgeInfo>
		constexpr auto MaxFacadeZ = 0x348; // float
		constexpr auto MinFacadeZ = 0x34c; // float
		constexpr auto OverlappingBuildings = 0x350; // TArray<ObjectProperty>
		constexpr auto SimpleMeshMassiveLODDistance = 0x360; // float
		constexpr auto RenderToTexturePullBackAmount = 0x364; // float
		constexpr auto RoofLightmapRes = 0x368; // int32_t
		constexpr auto NonRectWallLightmapRes = 0x36c; // int32_t
		constexpr auto LODRenderToTextureScale = 0x370; // float
		constexpr auto ParamSwatchName = 0x374; // FName
		constexpr auto BuildingMaterialParams = 0x380; // TArray<FPBMaterialParam>
		constexpr auto BuildingMatParamMICs = 0x390; // TArray<ObjectProperty>
		constexpr auto LowLODPersistentActor = 0x3a0; // ObjectProperty
		constexpr auto CurrentSimpleMeshComp = 0x3a8; // ComponentProperty
		constexpr auto CurrentSimpleMeshActor = 0x3b0; // ObjectProperty
		constexpr auto AttachedBuildings = 0x3b8; // TArray<ObjectProperty>
		constexpr auto BuildingInstanceVersion = 0x3c8; // int32_t
	}

	namespace n_U__FXActor_TA__ApplyPaintToAttachment_15BE03FB441BF235E0767E9F2599E0A1 {
		constexpr auto PaintSettings = 0x60; // ObjectProperty
		constexpr auto Paint = 0x68; // ObjectProperty
	}

	namespace n_UProductAttribute_LicenseGroup_TA {
		constexpr auto Group = 0x80; // ELicenseGroup
		constexpr auto bRequireSameLicenseGroupOnBody = 0x84; // uint32_t : 1
	}

	namespace n_UParticleModuleTypeDataTrail {
		constexpr auto RenderGeometry = 0x70; // uint32_t : 1
		constexpr auto RenderLines = 0x70; // uint32_t : 1
		constexpr auto RenderTessellation = 0x70; // uint32_t : 1
		constexpr auto Tapered = 0x70; // uint32_t : 1
		constexpr auto SpawnByDistance = 0x70; // uint32_t : 1
		constexpr auto TessellationFactor = 0x74; // int32_t
		constexpr auto Tension = 0x78; // FRawDistributionFloat
		constexpr auto SpawnDistance = 0xa0; // FVector
	}

	namespace n_U__GameViewportClient_TA__AllowTournamentSplitscreen_7815D83E4098ACE018CD0087D66CF39B {
		constexpr auto PlayerIDCompare = 0x60; // FUniqueNetId
	}

	namespace n_UGFxData_PrivateMatch_TA {
		constexpr auto Regions = 0x118; // TArray<FGFxRegion>
		constexpr auto ServerName = 0x128; // FString
		constexpr auto Password = 0x138; // FString
		constexpr auto SelectedMaxPlayerCount = 0x148; // int32_t
		constexpr auto bPublicMatch = 0x14c; // uint32_t : 1
		constexpr auto MinServerNameLength = 0x150; // int32_t
		constexpr auto AlreadySearchingMessage = 0x158; // FString
		constexpr auto AlreadySearchingForPublicMessage = 0x168; // FString
		constexpr auto ServerNameLengthError = 0x178; // FString
		constexpr auto DuplicateLanServerMessage = 0x188; // FString
		constexpr auto SearchStatusOwner = 0x198; // SearchStatusOwner
		constexpr auto SettingsType = 0x199; // ECustomMatchSettingsType
	}

	namespace n_U__GFxData_Products_TA__SlotContainsNewProducts_EBA6303B45E317D7647630B66AF34751 {
		constexpr auto SlotIndex = 0x60; // int32_t
	}

	namespace n_UPhysicsLODVerticalEmitter {
		constexpr auto ParticlePercentage = 0x60; // int32_t
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x78; // float
		constexpr auto LoopEnd = 0x7c; // float
		constexpr auto DurationAfterLoop = 0x80; // float
		constexpr auto LoopCount = 0x84; // int32_t
		constexpr auto bLoopIndefinitely = 0x88; // uint32_t : 1
		constexpr auto bLoop = 0x88; // uint32_t : 1
		constexpr auto VolumeInterpCurve = 0x90; // ComponentProperty
		constexpr auto PitchInterpCurve = 0x98; // ComponentProperty
	}

	namespace n_UErrors_X {
		constexpr auto UnknownError = 0x80; // ObjectProperty
		constexpr auto RequestError = 0x88; // ObjectProperty
		constexpr auto HTTPError = 0x90; // ObjectProperty
		constexpr auto SessionNotActive = 0x98; // ObjectProperty
		constexpr auto OSCS_NotConnected = 0xa0; // ObjectProperty
		constexpr auto OSCS_Connected = 0xa8; // ObjectProperty
		constexpr auto OSCS_ConnectionDropped = 0xb0; // ObjectProperty
		constexpr auto OSCS_NoNetworkConnection = 0xb8; // ObjectProperty
		constexpr auto OSCS_ServiceUnavailable = 0xc0; // ObjectProperty
		constexpr auto OSCS_UpdateRequired = 0xc8; // ObjectProperty
		constexpr auto OSCS_ServersTooBusy = 0xd0; // ObjectProperty
		constexpr auto OSCS_DuplicateLoginDetected = 0xd8; // ObjectProperty
		constexpr auto OSCS_InvalidUser = 0xe0; // ObjectProperty
		constexpr auto OSCS_InvalidResponse = 0xe8; // ObjectProperty
		constexpr auto OSCS_EpicAccountRequired = 0xf0; // ObjectProperty
		constexpr auto OSCS_EpicAccountLinkingFailed = 0xf8; // ObjectProperty
		constexpr auto ConnectionStatusErrors = 0x100; // ObjectProperty [0xd]
		constexpr auto VersionMismatch = 0x168; // ObjectProperty
		constexpr auto NoServers = 0x170; // ObjectProperty
		constexpr auto FileDoesNotExist = 0x178; // ObjectProperty
		constexpr auto FileLoadFail = 0x180; // ObjectProperty
		constexpr auto FileLoadCorrupt = 0x188; // ObjectProperty
		constexpr auto FileMountCorrupt = 0x190; // ObjectProperty
		constexpr auto FileSaveFail = 0x198; // ObjectProperty
		constexpr auto FileSaveNoSpace = 0x1a0; // ObjectProperty
		constexpr auto FileSaveCorrupt = 0x1a8; // ObjectProperty
		constexpr auto UserAuthBanned = 0x1b0; // ObjectProperty
		constexpr auto NotLoggedInToPsynet = 0x1b8; // ObjectProperty
		constexpr auto FriendsList = 0x1c0; // ObjectProperty
		constexpr auto InviteLimitReached = 0x1c8; // ObjectProperty
		constexpr auto OutOfRetries = 0x1d0; // ObjectProperty
		constexpr auto AuthenticationFailed = 0x1d8; // ObjectProperty
		constexpr auto NoExportCountry = 0x1e0; // ObjectProperty
		constexpr auto UnauthorizedAccess = 0x1e8; // ObjectProperty
		constexpr auto ServiceNotFound = 0x1f0; // ObjectProperty
		constexpr auto FeatureDisabled = 0x1f8; // ObjectProperty
		constexpr auto OtherPlayerFeatureDisabled = 0x200; // ObjectProperty
		constexpr auto MatchmakingDisabled = 0x208; // ObjectProperty
		constexpr auto NoValidPlaylistsSelected = 0x210; // ObjectProperty
		constexpr auto PlaylistNotAvailable = 0x218; // ObjectProperty
		constexpr auto PlayerNameNotSet = 0x220; // ObjectProperty
		constexpr auto PlayerNameAlreadyTaken = 0x228; // ObjectProperty
		constexpr auto PlayerNameTooShort = 0x230; // ObjectProperty
		constexpr auto PlayerNameTooLong = 0x238; // ObjectProperty
		constexpr auto PlayerNameInappropriate = 0x240; // ObjectProperty
		constexpr auto PlayerNameInvalidCharacter = 0x248; // ObjectProperty
		constexpr auto PlayerNameFailed = 0x250; // ObjectProperty
		constexpr auto NotAuthorized = 0x258; // ObjectProperty
		constexpr auto SessionAlreadyActive = 0x260; // ObjectProperty
		constexpr auto GameServerPending = 0x268; // ObjectProperty
		constexpr auto CacheError = 0x270; // ObjectProperty
		constexpr auto WordFilterEvil = 0x278; // ObjectProperty
		constexpr auto WordFilterPlatformError = 0x280; // ObjectProperty
		constexpr auto WordFilterPlatformChatError = 0x288; // ObjectProperty
		constexpr auto InvalidSettings = 0x290; // ObjectProperty
		constexpr auto Maintenance = 0x298; // ObjectProperty
		constexpr auto PlatformAuthError = 0x2a0; // ObjectProperty
		constexpr auto MicrotransactionAuthExpired = 0x2a8; // ObjectProperty
		constexpr auto CannotFriendSelf = 0x2b0; // ObjectProperty
		constexpr auto InvalidPlayer = 0x2b8; // ObjectProperty
		constexpr auto FriendRequestNotFound = 0x2c0; // ObjectProperty
		constexpr auto FriendRequestFailed = 0x2c8; // ObjectProperty
		constexpr auto AlreadyFriends = 0x2d0; // ObjectProperty
		constexpr auto FriendLimitReached = 0x2d8; // ObjectProperty
		constexpr auto LocalFriendLimitReached = 0x2e0; // ObjectProperty
		constexpr auto RemoteFriendLimitReached = 0x2e8; // ObjectProperty
		constexpr auto LocalHostConnectionError = 0x2f0; // ObjectProperty
		constexpr auto UGCRestricted = 0x2f8; // ObjectProperty
		constexpr auto MicrotransactionServiceMaintenance = 0x300; // ObjectProperty
		constexpr auto GenericStorageOutOfSync = 0x308; // ObjectProperty
		constexpr auto GenericStorageSync_RequestNotFound = 0x310; // ObjectProperty
		constexpr auto SignatureMismatch = 0x318; // ObjectProperty
		constexpr auto JsonDeserialization = 0x320; // ObjectProperty
		constexpr auto InvalidPlatform = 0x328; // ObjectProperty
		constexpr auto InvalidPlatformForCodeRedemption = 0x330; // ObjectProperty
		constexpr auto InvalidParameters = 0x338; // ObjectProperty
		constexpr auto NotMatchmaking = 0x340; // ObjectProperty
		constexpr auto AccessDenied = 0x348; // ObjectProperty
		constexpr auto PerConDisconnected = 0x350; // ObjectProperty
		constexpr auto AccountNotFound = 0x358; // ObjectProperty
		constexpr auto ServerNotFound = 0x360; // ObjectProperty
		constexpr auto ExpiredDsConnectToken = 0x368; // ObjectProperty
		constexpr auto MatchmakingNoInternet = 0x370; // ObjectProperty
		constexpr auto PartyRankDisparity = 0x378; // ObjectProperty
	}

	namespace n_ACoverLink {
		constexpr auto GLOBAL_bUseSlotMarkers = 0x388; // uint32_t : 1
		constexpr auto bDisabled = 0x388; // uint32_t : 1
		constexpr auto bClaimAllSlots = 0x388; // uint32_t : 1
		constexpr auto bAutoSort = 0x388; // uint32_t : 1
		constexpr auto bAutoAdjust = 0x388; // uint32_t : 1
		constexpr auto bCircular = 0x388; // uint32_t : 1
		constexpr auto bLooped = 0x388; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x388; // uint32_t : 1
		constexpr auto bDynamicCover = 0x388; // uint32_t : 1
		constexpr auto bFractureOnTouch = 0x388; // uint32_t : 1
		constexpr auto bDebug_FireLinks = 0x388; // uint32_t : 1
		constexpr auto bDebug_ExposedLinks = 0x388; // uint32_t : 1
		constexpr auto bDebug_CoverGen = 0x388; // uint32_t : 1
		constexpr auto bDoAutoSlotDensityFixup = 0x388; // uint32_t : 1
		constexpr auto LeanTraceDist = 0x38c; // float
		constexpr auto Slots = 0x390; // TArray<FCoverSlot>
		constexpr auto DynamicLinkInfos = 0x3a0; // TArray<FDynamicLinkInfo>
		constexpr auto Claims = 0x3b0; // TArray<ObjectProperty>
		constexpr auto InvalidateDistance = 0x3c0; // float
		constexpr auto MaxFireLinkDist = 0x3c4; // float
		constexpr auto CircularOrigin = 0x3c8; // FVector
		constexpr auto CircularRadius = 0x3d4; // float
		constexpr auto AlignDist = 0x3d8; // float
		constexpr auto AutoCoverSlotInterval = 0x3dc; // float
		constexpr auto StandHeight = 0x3e0; // float
		constexpr auto MidHeight = 0x3e4; // float
		constexpr auto StandingLeanOffset = 0x3e8; // FVector
		constexpr auto CrouchLeanOffset = 0x3f4; // FVector
		constexpr auto PopupOffset = 0x400; // FVector
		constexpr auto SlipDist = 0x40c; // float
		constexpr auto TurnDist = 0x410; // float
		constexpr auto DangerScale = 0x414; // float
		constexpr auto NextCoverLink = 0x418; // ObjectProperty
		constexpr auto LocationDescription = 0x420; // ECoverLocationDescription
	}

	namespace n_UNavMeshGoal_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x80; // FVector
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x78; // FRawDistributionFloat
		constexpr auto RateScale = 0xa0; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xc8; // EParticleBurstMethod
		constexpr auto BurstList = 0xd0; // TArray<FParticleBurst>
	}

	namespace n_UDebugDrawer {
		constexpr auto DefaultTextColor = 0x60; // FColor
		constexpr auto bSilent = 0x64; // uint32_t : 1
		constexpr auto bPrintActorsInline = 0x64; // uint32_t : 1
		constexpr auto Indentation = 0x68; // int32_t
		constexpr auto IndentationString = 0x70; // FString
		constexpr auto PrintedObjects = 0x80; // TArray<ObjectProperty>
		constexpr auto QueuedObjects = 0x90; // TArray<ObjectProperty>
		constexpr auto PrintObjectCount = 0xa0; // int32_t
		constexpr auto __LogFunc__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UMorphNodeWeightBase {
		constexpr auto NodeConns = 0xa0; // TArray<FMorphNodeConn>
	}

	namespace n_URPCConfig_X {
		constexpr auto DisabledClasses = 0x78; // TArray<FNone*>
		constexpr auto DisabledServices = 0x88; // TArray<FString>
		constexpr auto MaxRPCsPerBatch = 0x98; // int32_t
	}

	namespace n_UOnlineGameDedicatedServer_X {
		constexpr auto GameServerID = 0x180; // QWordProperty
		constexpr auto GameServerHost = 0x188; // FString
		constexpr auto EnvironmentZone = 0x198; // int32_t
		constexpr auto GameStats = 0x1a0; // ObjectProperty
		constexpr auto Registration = 0x1a8; // ObjectProperty
		constexpr auto Reservations = 0x1b0; // ObjectProperty
		constexpr auto Clanforge = 0x1b8; // ObjectProperty
		constexpr auto Region = 0x1c0; // FString
		constexpr auto CurrentPlaylistId = 0x1d0; // int32_t
		constexpr auto MutatorIndex = 0x1d4; // int32_t
		constexpr auto AverageMMR = 0x1d8; // float
		constexpr auto AverageConservativeMMR = 0x1dc; // float
		constexpr auto MachineId = 0x1e0; // int32_t
		constexpr auto CustomMatch = 0x1e8; // FCustomMatchSettings
		constexpr auto CustomMatchOwner = 0x278; // FUniqueNetId
		constexpr auto CustomMatchClubID = 0x2c0; // QWordProperty
		constexpr auto bQueuedShutdown = 0x2c8; // uint32_t : 1
		constexpr auto bFindingReplacementServer = 0x2c8; // uint32_t : 1
		constexpr auto bHasValidMigrationServer = 0x2c8; // uint32_t : 1
		constexpr auto bDisableMatchmakingBan = 0x2c8; // uint32_t : 1
		constexpr auto bBotTest = 0x2c8; // uint32_t : 1
		constexpr auto bUseNetworkNextDriver = 0x2c8; // uint32_t : 1
		constexpr auto ReplacementServerID = 0x2d0; // QWordProperty
		constexpr auto PlayerTracker = 0x2d8; // ComponentProperty
		constexpr auto MatchRecorderClass = 0x2e0; // FNone*
		constexpr auto MatchRecorder = 0x2e8; // ObjectProperty
		constexpr auto MatchLog = 0x2f0; // ObjectProperty
		constexpr auto Config = 0x2f8; // ObjectProperty
		constexpr auto PsyNetConfig = 0x300; // ObjectProperty
		constexpr auto __EventFoundNewDedicatedServerForPlayers__Delegate = 0x308; // DelegateProperty
		constexpr auto __EventAverageMMRChanged__Delegate = 0x320; // DelegateProperty
		constexpr auto __EventPlaylistSet__Delegate = 0x338; // DelegateProperty
		constexpr auto __EventPrivateMatchSettingsChanged__Delegate = 0x350; // DelegateProperty
		constexpr auto __EventInactive__Delegate = 0x368; // DelegateProperty
		constexpr auto __EventActive__Delegate = 0x380; // DelegateProperty
		constexpr auto __EventMatchGUIDChanged__Delegate = 0x398; // DelegateProperty
	}

	namespace n_UMatchBroadcastLog_TA {
		constexpr auto Log = 0x60; // FPointer
	}

	namespace n_UPSC_Constrained_TA {
		constexpr auto WorldZ = 0x3e0; // float
		constexpr auto bAttachedRotation = 0x3e4; // uint32_t : 1
	}

	namespace n_UCameraState_LiveReplay_TA {
		constexpr auto LocationOffset = 0x90; // FVector
		constexpr auto FocusSpeedOverTime = 0xa0; // FInterpCurveFloat
		constexpr auto CarBallFocusBlendDistance = 0xb8; // float
		constexpr auto Distance = 0xbc; // float
		constexpr auto FOV = 0xc0; // float
		constexpr auto SlomoInterpTime = 0xc4; // float
		constexpr auto SlomoDistance = 0xc8; // float
		constexpr auto SlomoFOV = 0xcc; // float
		constexpr auto VelocityPrediction = 0xd0; // FVector
		constexpr auto InterpToFieldCenterRate = 0xdc; // float
		constexpr auto InterpToFieldCenterOffset = 0xe0; // float
		constexpr auto ExplosionFocusDelay = 0xe4; // float
		constexpr auto ScorerOffsetInterpSpeed = 0xe8; // float
		constexpr auto SoccarGame = 0xf0; // ObjectProperty
		constexpr auto FocusCar = 0xf8; // ObjectProperty
		constexpr auto FocusBall = 0x100; // ObjectProperty
		constexpr auto bHasDoneFirstUpdate = 0x108; // uint32_t : 1
		constexpr auto bCanUpdate = 0x108; // uint32_t : 1
		constexpr auto bSetGoalScorerFocusOffset = 0x108; // uint32_t : 1
		constexpr auto LastFocusChangeTime = 0x10c; // float
		constexpr auto SlomoTime = 0x110; // float
		constexpr auto Goal = 0x118; // ComponentProperty
		constexpr auto GoalScorerFocusOffset = 0x120; // FVector
	}

	namespace n_U__OnlineGameDedicatedServer_TA__InitMatchLogUpload_8B759C964A480E0897D0279F00D6200D {
		constexpr auto Log = 0x60; // ObjectProperty
		constexpr auto RPC = 0x68; // ObjectProperty
	}

	namespace n_UPlaylistSkillDataSave_TA {
		constexpr auto SkillData = 0xc8; // TArray<FPlaylistSkillData>
	}

	namespace n_USeqAct_AttachFX_TA {
		constexpr auto PSC = 0x160; // ComponentProperty
	}

	namespace n_U__ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_CB30F80E444F630613C622B939475D81 {
		constexpr auto MIC = 0x60; // ObjectProperty
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x78; // TArray<float>
	}

	namespace n_UMenuSequencer_TA {
		constexpr auto Sequences = 0xa8; // TArray<ObjectProperty>
		constexpr auto DefaultSequence = 0xb8; // FName
		constexpr auto CurrentSequence = 0xc0; // ObjectProperty
		constexpr auto PendingSequence = 0xc8; // ObjectProperty
		constexpr auto Status = 0xd0; // ESequenceStatus
		constexpr auto PendingSequenceQueue = 0xd8; // TArray<ObjectProperty>
		constexpr auto __EventSequenceChanged__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_U__GFxData_TradeLobby_TA__GetHashIDFromCurrencyID_32BF39F448C8229C946291BADE5C89BB {
		constexpr auto CurrencyID = 0x60; // int32_t
	}

	namespace n_UFogVolumeLinearHalfspaceDensityComponent {
		constexpr auto PlaneDistanceFactor = 0xf0; // float
		constexpr auto HalfspacePlane = 0x100; // FPlane
	}

	namespace n_UOnlinePlayerStorage_X {
		constexpr auto Queue = 0x98; // ObjectProperty
		constexpr auto Sync = 0xa0; // ObjectProperty
		constexpr auto Manifest = 0xa8; // ObjectProperty
	}

	namespace n_UIntroCarTemplates_TA {
		constexpr auto IntroCars = 0x60; // TArray<FEditorIntroCar>
	}

	namespace n_UGFxData_MicroEvent_TA {
		constexpr auto MicroEventConfig = 0x98; // ObjectProperty
		constexpr auto MicroEvent = 0xa0; // ObjectProperty
		constexpr auto bIsActive = 0xa8; // uint32_t : 1
	}

	namespace n_UGameEngine_TA {
		constexpr auto ServerConfig = 0xb48; // ObjectProperty
	}

	namespace n_URPC_TrainingEditor_BrowseTrainingData_TA {
		constexpr auto bFeaturedOnly = 0xe8; // uint32_t : 1
		constexpr auto TrainingData = 0xf0; // TArray<ObjectProperty>
	}

	namespace n_URPC_SchematicResourcesGet_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TotalSchematicResources = 0x130; // int32_t
	}

	namespace n_UHttpRequestInterface {
		constexpr auto __OnProcessRequestComplete__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UParticleModuleTrailTaper {
		constexpr auto TaperMethod = 0x70; // ETrailTaperMethod
		constexpr auto TaperFactor = 0x78; // FRawDistributionFloat
	}

	namespace n_UUIDataStore_Registry {
		constexpr auto RegistryData = 0xa0; // TArray<FRegistryKeyValuePair>
	}

	namespace n_USeqAct_AddFloat {
		constexpr auto ValueA = 0x160; // float
		constexpr auto ValueB = 0x164; // float
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_UWordFilterTypes_X {
		constexpr auto __CommentSanitizedDelegate__Delegate = 0x60; // DelegateProperty
		constexpr auto __CommentErrorDelegate__Delegate = 0x78; // DelegateProperty
	}

	namespace n_URPC_FaceItFindMatchForPlayer2_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_ATerrain {
		constexpr auto Heights = 0x268; // TArray<FTerrainHeight>
		constexpr auto InfoData = 0x278; // TArray<FTerrainInfoData>
		constexpr auto Layers = 0x288; // TArray<FTerrainLayer>
		constexpr auto NormalMapLayer = 0x298; // int32_t
		constexpr auto DecoLayers = 0x2a0; // TArray<FTerrainDecoLayer>
		constexpr auto AlphaMaps = 0x2b0; // TArray<FAlphaMap>
		constexpr auto TerrainComponents = 0x2c0; // TArray<ComponentProperty>
		constexpr auto NumSectionsX = 0x2d0; // int32_t
		constexpr auto NumSectionsY = 0x2d4; // int32_t
		constexpr auto WeightedMaterials = 0x2d8; // TArray<FTerrainWeightedMaterial>
		constexpr auto WeightedTextureMaps = 0x2e8; // TArray<ObjectProperty>
		constexpr auto MaxTesselationLevel = 0x2f8; // int32_t
		constexpr auto MinTessellationLevel = 0x2fc; // int32_t
		constexpr auto TesselationDistanceScale = 0x300; // float
		constexpr auto TessellationCheckDistance = 0x304; // float
		constexpr auto CollisionTesselationLevel = 0x308; // int32_t
		constexpr auto CachedTerrainMaterials = 0x310; // FCachedTerrainMaterialArray [0x2]
		constexpr auto NumVerticesX = 0x330; // int32_t
		constexpr auto NumVerticesY = 0x334; // int32_t
		constexpr auto NumPatchesX = 0x338; // int32_t
		constexpr auto NumPatchesY = 0x33c; // int32_t
		constexpr auto MaxComponentSize = 0x340; // int32_t
		constexpr auto StaticLightingResolution = 0x344; // int32_t
		constexpr auto bIsOverridingLightResolution = 0x348; // uint32_t : 1
		constexpr auto bBilinearFilterLightmapGeneration = 0x348; // uint32_t : 1
		constexpr auto bCastShadow = 0x348; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x348; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x348; // uint32_t : 1
		constexpr auto bEnableSpecular = 0x348; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0x348; // uint32_t : 1
		constexpr auto bAllowRigidBodyUnderneath = 0x348; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x348; // uint32_t : 1
		constexpr auto bMorphingEnabled = 0x348; // uint32_t : 1
		constexpr auto bMorphingGradientsEnabled = 0x348; // uint32_t : 1
		constexpr auto bLocked = 0x348; // uint32_t : 1
		constexpr auto bHeightmapLocked = 0x348; // uint32_t : 1
		constexpr auto bShowingCollision = 0x348; // uint32_t : 1
		constexpr auto bUseWorldOriginTextureUVs = 0x348; // uint32_t : 1
		constexpr auto bShowWireframe = 0x348; // uint32_t : 1
		constexpr auto TerrainPhysMaterialOverride = 0x350; // ObjectProperty
		constexpr auto LightingChannels = 0x358; // FLightingChannelContainer
		constexpr auto LightmassSettings = 0x35c; // FLightmassPrimitiveSettings
		constexpr auto ReleaseResourcesFence = 0x378; // FPointer
		constexpr auto EditorTessellationLevel = 0x380; // int32_t
		constexpr auto SelectedVertices = 0x388; // TArray<FSelectedTerrainVertex>
		constexpr auto WireframeColor = 0x398; // FColor
		constexpr auto LightingGuid = 0x39c; // FGuid
	}

	namespace n_UProductAsset_Attachment_TA {
		constexpr auto Attachments = 0xf8; // TArray<FProductAttachment>
		constexpr auto CustomAnimName = 0x108; // FName
	}

	namespace n_U__GFxData_PartyInvite_TA__HandlePlayerInvitePending_7B962B5A463CCB83D2894EA6E3F82367 {
		constexpr auto Persona = 0x60; // ObjectProperty
	}

	namespace n_USeqAct_SetObject {
		constexpr auto DefaultValue = 0x160; // ObjectProperty
		constexpr auto Value = 0x168; // ObjectProperty
	}

	namespace n_U__WebImageCache_X__SyncUncachedImage_24E1EE9044B4E064F7A5DFAB3C26EB54 {
		constexpr auto Task = 0x60; // ObjectProperty
	}

	namespace n_UChallenge_TA {
		constexpr auto bIsHidden = 0x1d8; // uint32_t : 1
		constexpr auto bRewardsAvailable = 0x1d8; // uint32_t : 1
		constexpr auto bNotifyNewInfo = 0x1d8; // uint32_t : 1
		constexpr auto bComplete = 0x1d8; // uint32_t : 1
		constexpr auto CompleteCount = 0x1dc; // int32_t
		constexpr auto ProgressResetTimeUTC = 0x1e0; // QWordProperty
		constexpr auto RequirementProgress = 0x1e8; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto FloatProp = 0x70; // FPointer
		constexpr auto ResetFloat = 0x78; // float
		constexpr auto DistributionProp = 0x80; // FPointer
	}

	namespace n_UParticleModuleCollisionActor {
		constexpr auto ActorsToCollideWith = 0x188; // TArray<FName>
		constexpr auto bCheckPawnCollisions = 0x198; // uint32_t : 1
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x80; // uint32_t : 1
	}

	namespace n_UAddReservationMessagePrivate_X {
		constexpr auto Settings = 0xd0; // FCustomMatchSettings
	}

	namespace n_UClientConnectionTracker_TA {
		constexpr auto bDisconnectedFromServer = 0xa8; // uint32_t : 1
		constexpr auto bShowConnectionQualityIndicators = 0xa8; // uint32_t : 1
		constexpr auto LatencyStatus = 0xac; // EConnectionQualityState
		constexpr auto JitterStatus = 0xad; // EConnectionQualityState
		constexpr auto PacketStatus = 0xae; // EConnectionQualityState
		constexpr auto LatencyLastUpdateTime = 0xb0; // float
		constexpr auto JitterRollingAverage = 0xb4; // float
		constexpr auto JitterLastUpdateTime = 0xb8; // float
		constexpr auto PacketLastUpdateTime = 0xbc; // float
		constexpr auto NewPacketsRollingAverage = 0xc0; // float
		constexpr auto PacketsLostRollingAverage = 0xc4; // float
		constexpr auto RollingPercentLost = 0xc8; // float
		constexpr auto PriorTotalPacketsInOut = 0xcc; // float
		constexpr auto PriorTotalPacketsLost = 0xd0; // float
		constexpr auto RollingBadPingTime = 0xd4; // float
		constexpr auto RollingBadJitterTime = 0xd8; // float
		constexpr auto RollingBadPacketLossTime = 0xdc; // float
		constexpr auto ConnectionQualityConfig = 0xe0; // ObjectProperty
		constexpr auto TrackedPRI = 0xe8; // ObjectProperty
		constexpr auto ConnectionQualitySave = 0xf0; // ObjectProperty
		constexpr auto __EventNetStatsPolled__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UEffectsMap_X {
		constexpr auto Effects = 0x60; // TArray<FEffectsMapping>
	}

	namespace n_UPsyNetService_NewGame_X {
		constexpr auto Playlist = 0xb0; // int32_t
		constexpr auto IsBotMatch = 0xb4; // uint32_t : 1
		constexpr auto BotNames = 0xb8; // TArray<FString>
		constexpr auto Parties = 0xc8; // TArray<FPsyNetBeaconPartyReservation>
	}

	namespace n_U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_BD09F203446DE281B50761A9BB177F7A {
		constexpr auto InLobbyId = 0x60; // FUniqueLobbyId
		constexpr auto InviterId = 0x70; // FUniqueNetId
	}

	namespace n_UProductAttribute_TeamForcedProduct_TA {
		constexpr auto Teams = 0x80; // ObjectProperty [0x2]
	}

	namespace n_UCarMeshComponentBase_TA {
		constexpr auto BodyAsset = 0x7b8; // ObjectProperty
		constexpr auto SkinAsset = 0x7c0; // ObjectProperty
		constexpr auto WheelAsset = 0x7c8; // ObjectProperty
		constexpr auto TeamColorOverride = 0x7d0; // FLinearColor
		constexpr auto CustomColorOverride = 0x7e0; // FLinearColor
		constexpr auto Team = 0x7f0; // int32_t
		constexpr auto TeamColorID = 0x7f4; // int32_t
		constexpr auto CustomColorID = 0x7f8; // int32_t
		constexpr auto Logo = 0x800; // ObjectProperty
		constexpr auto bSwapLogoColors = 0x808; // uint32_t : 1
		constexpr auto bBoosting = 0x808; // uint32_t : 1
		constexpr auto bLocalPlayer = 0x808; // uint32_t : 1
		constexpr auto TeamFinish = 0x810; // ObjectProperty
		constexpr auto CustomFinish = 0x818; // ObjectProperty
		constexpr auto ClubColors = 0x820; // FClubColorSet
		constexpr auto Antennas = 0x828; // TArray<ComponentProperty>
		constexpr auto WheelMeshes = 0x838; // TArray<ComponentProperty>
		constexpr auto BodyFX = 0x848; // ObjectProperty
		constexpr auto FXActors = 0x850; // TArray<ObjectProperty>
		constexpr auto Behaviors = 0x860; // TArray<ObjectProperty>
		constexpr auto BodyFXActor = 0x870; // ObjectProperty
		constexpr auto ProductAttributes = 0x878; // FClientLoadoutOnlineData
		constexpr auto ProductAttachmentSockets = 0x888; // TArray<FName>
		constexpr auto QueuedTeamFinishID = 0x898; // int32_t
		constexpr auto QueuedCustomFinishID = 0x89c; // int32_t
		constexpr auto ObjectsWithInheritedSettings = 0x8a0; // TArray<FInheritedObjects>
		constexpr auto __EventPaintSettingsUpdated__Delegate = 0x8b0; // DelegateProperty
	}

	namespace n_UGFxData_Replay_TA {
		constexpr auto FriendlyMapName = 0x98; // FString
	}

	namespace n_U__FXActor_TA__ApplyPaint_68391A964D76CB4B190631A6515FDC92 {
		constexpr auto PaintSettings = 0x60; // ObjectProperty
		constexpr auto Paint = 0x68; // ObjectProperty
	}

	namespace n_UAppNotificationsBase {
		constexpr auto AppLaunchNotification = 0x88; // FLaunchNotificationInfo
		constexpr auto __OnReceivedLocalNotification__Delegate = 0xc0; // DelegateProperty
		constexpr auto __OnReceivedRemoteNotification__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UMCPBase {
		constexpr auto VfTable_FTickableObject = 0x78; // FPointer
	}

	namespace n_UPartyMetrics_X {
		constexpr auto PartyData = 0x80; // FPartyMetricsData
	}

	namespace n_UHandlingPreset_TA {
		constexpr auto FrontAxle = 0x60; // FVehicleAxleData
		constexpr auto BackAxle = 0x74; // FVehicleAxleData
		constexpr auto PhysAsset = 0x88; // ObjectProperty
		constexpr auto ChassisSpringDefaults = 0x90; // FSimpleSpringSettings
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto TraceDistance = 0x1c8; // float
		constexpr auto WholeSceneDynamicShadowRadius = 0x1cc; // float
		constexpr auto NumWholeSceneDynamicShadowCascades = 0x1d0; // int32_t
		constexpr auto CascadeDistributionExponent = 0x1d4; // float
		constexpr auto LightmassSettings = 0x1d8; // FLightmassDirectionalLightSettings
	}

	namespace n_UStatCategory_TA {
		constexpr auto Titles = 0x60; // TArray<ObjectProperty>
		constexpr auto Multiplier = 0x70; // float
	}

	namespace n_UOnlineGameMatchmakingBase_X {
		constexpr auto CheckReservation = 0x98; // ObjectProperty
		constexpr auto StartMatchmakingTask = 0xa0; // ObjectProperty
		constexpr auto PingingRegionsString = 0xa8; // FString
		constexpr auto __EventFindGameComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventFindGameStatus__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventFindGameError__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventFindGameStateChanged__Delegate = 0x100; // DelegateProperty
	}

	namespace n_URegionPingCache_TA {
		constexpr auto CachedRegionPings = 0x60; // TArray<FCachedRegionPing>
		constexpr auto OnlineGameRegionsRef = 0x70; // ObjectProperty
	}

	namespace n_URPC_PsyNetSendIndividualChat_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Message = 0x130; // FString
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x70; // FRawDistributionVector
		constexpr auto MultiplyX = 0x98; // uint32_t : 1
		constexpr auto MultiplyY = 0x98; // uint32_t : 1
		constexpr auto MultiplyZ = 0x98; // uint32_t : 1
	}

	namespace n_AGreenScreen_TA {
		constexpr auto HiddenPrimitives = 0x288; // TArray<ComponentProperty>
		constexpr auto bOn = 0x298; // uint32_t : 1
	}

	namespace n_USeqVar_ObjectVolume {
		constexpr auto LastUpdateTime = 0x108; // float
		constexpr auto ContainedObjects = 0x110; // TArray<ObjectProperty>
		constexpr auto ExcludeClassList = 0x120; // TArray<FNone*>
		constexpr auto bCollidingOnly = 0x130; // uint32_t : 1
	}

	namespace n_UProductAssetReference_TA {
		constexpr auto Asset = 0x70; // ObjectProperty
	}

	namespace n_U__StayAsPartySystem_TA__FindHumanTeammatesOfID_E6A6DAF04F7194D380DA719AF2835499 {
		constexpr auto PRIs = 0x60; // TArray<ObjectProperty>
		constexpr auto PlayerIndex = 0x70; // int32_t
	}

	namespace n_UCameraState_BreakoutLiveReplay_TA {
		constexpr auto GoalVerticalOffset = 0x130; // float
	}

	namespace n_USeqEvent_UIStateChange_TA {
		constexpr auto UIState = 0x180; // EUIMenuState
	}

	namespace n_UFeatureSystem {
		constexpr auto Prime = 0x68; // uint32_t : 1
		constexpr auto Matchmaking = 0x68; // uint32_t : 1
		constexpr auto PrivateMatch = 0x68; // uint32_t : 1
		constexpr auto SplitscreenMatch = 0x68; // uint32_t : 1
		constexpr auto SplitscreenJoin = 0x68; // uint32_t : 1
		constexpr auto SeasonMode = 0x68; // uint32_t : 1
		constexpr auto Tutorial = 0x68; // uint32_t : 1
		constexpr auto Garage = 0x68; // uint32_t : 1
		constexpr auto Options = 0x68; // uint32_t : 1
		constexpr auto ReplaySaves = 0x68; // uint32_t : 1
		constexpr auto MainMenu = 0x68; // uint32_t : 1
		constexpr auto MidgameMenu = 0x68; // uint32_t : 1
		constexpr auto Party = 0x68; // uint32_t : 1
		constexpr auto PsyNetParty = 0x68; // uint32_t : 1
		constexpr auto PartyUpVoting = 0x68; // uint32_t : 1
		constexpr auto Achievements = 0x68; // uint32_t : 1
		constexpr auto Stats = 0x68; // uint32_t : 1
		constexpr auto Leaderboards = 0x68; // uint32_t : 1
		constexpr auto XP = 0x68; // uint32_t : 1
		constexpr auto Chat = 0x68; // uint32_t : 1
		constexpr auto LicenseAgreement = 0x68; // uint32_t : 1
		constexpr auto FullCredits = 0x68; // uint32_t : 1
		constexpr auto TrainingDifficulties = 0x68; // uint32_t : 1
		constexpr auto Ads = 0x68; // uint32_t : 1
		constexpr auto Microtransactions = 0x68; // uint32_t : 1
		constexpr auto Spectator = 0x6c; // uint32_t : 1
		constexpr auto CrossPlatformPrivateMatch = 0x6c; // uint32_t : 1
		constexpr auto Lan = 0x6c; // uint32_t : 1
		constexpr auto PlayerReporting = 0x6c; // uint32_t : 1
		constexpr auto PodiumSpotlight = 0x6c; // uint32_t : 1
		constexpr auto CustomTeamNames = 0x6c; // uint32_t : 1
		constexpr auto CustomTeamColors = 0x6c; // uint32_t : 1
		constexpr auto PlayerTrading = 0x6c; // uint32_t : 1
		constexpr auto GaragePresets = 0x6c; // uint32_t : 1
		constexpr auto PartyChat = 0x6c; // uint32_t : 1
		constexpr auto OnlineServices = 0x6c; // uint32_t : 1
		constexpr auto RemoveCrossPlatformProducts = 0x6c; // uint32_t : 1
		constexpr auto Mutators = 0x6c; // uint32_t : 1
		constexpr auto ProductValidation = 0x6c; // uint32_t : 1
		constexpr auto PlayerTitle = 0x6c; // uint32_t : 1
		constexpr auto DynamicThumbnails = 0x6c; // uint32_t : 1
		constexpr auto MapPrefs = 0x6c; // uint32_t : 1
		constexpr auto Workshop = 0x6c; // uint32_t : 1
		constexpr auto Avatars = 0x6c; // uint32_t : 1
		constexpr auto Tournaments = 0x6c; // uint32_t : 1
		constexpr auto PreMatchLobby = 0x6c; // uint32_t : 1
		constexpr auto Challenges = 0x6c; // uint32_t : 1
		constexpr auto AntiAddiction = 0x70; // uint32_t : 1
		constexpr auto Inventory = 0x70; // uint32_t : 1
		constexpr auto TrainingEditor = 0x70; // uint32_t : 1
		constexpr auto RedeemCode = 0x70; // uint32_t : 1
		constexpr auto VoiceChat = 0x70; // uint32_t : 1
		constexpr auto EditBindings = 0x70; // uint32_t : 1
		constexpr auto UIScale = 0x70; // uint32_t : 1
		constexpr auto SplitScreen = 0x70; // uint32_t : 1
		constexpr auto Crossplay = 0x70; // uint32_t : 1
		constexpr auto CompetitiveDivisions = 0x70; // uint32_t : 1
		constexpr auto ControlPresets = 0x70; // uint32_t : 1
		constexpr auto FreePlayMapSelection = 0x70; // uint32_t : 1
		constexpr auto Clubs = 0x70; // uint32_t : 1
		constexpr auto MatchAdmin = 0x70; // uint32_t : 1
		constexpr auto FilterContent = 0x70; // uint32_t : 1
		constexpr auto EncryptContent = 0x70; // uint32_t : 1
		constexpr auto GarageSuperSonicTrail = 0x70; // uint32_t : 1
		constexpr auto GarageBallExplosions = 0x70; // uint32_t : 1
		constexpr auto GarageEngineAudio = 0x70; // uint32_t : 1
		constexpr auto EsportsCamera = 0x70; // uint32_t : 1
		constexpr auto OnlineXP = 0x70; // uint32_t : 1
		constexpr auto PsyNetFriends = 0x70; // uint32_t : 1
		constexpr auto ClanforgeReservation = 0x74; // uint32_t : 1
		constexpr auto UserSettingObserver = 0x74; // uint32_t : 1
		constexpr auto Metrics = 0x74; // uint32_t : 1
		constexpr auto EOSMetrics = 0x74; // uint32_t : 1
		constexpr auto MusicPlaylistSelection = 0x74; // uint32_t : 1
		constexpr auto KeyboardAirPitchSafety = 0x74; // uint32_t : 1
		constexpr auto SpecialEvents = 0x74; // uint32_t : 1
		constexpr auto OnlineShop = 0x74; // uint32_t : 1
		constexpr auto PlayerBannerCustomization = 0x74; // uint32_t : 1
		constexpr auto AvatarBorder = 0x74; // uint32_t : 1
		constexpr auto SecureUDP = 0x74; // uint32_t : 1
		constexpr auto PsyNet = 0x74; // uint32_t : 1
		constexpr auto OnlinePlayerStorage = 0x74; // uint32_t : 1
		constexpr auto LocalSaveData = 0x74; // uint32_t : 1
		constexpr auto CrowdV2 = 0x74; // uint32_t : 1
		constexpr auto ChatBan = 0x74; // uint32_t : 1
		constexpr auto BacktraceCrashDumps = 0x74; // uint32_t : 1
		constexpr auto MusicStingers = 0x74; // uint32_t : 1
		constexpr auto MonsterCarV2 = 0x74; // uint32_t : 1
		constexpr auto SpotifyButton = 0x74; // uint32_t : 1
		constexpr auto RocketPass = 0x74; // uint32_t : 1
		constexpr auto PsyTag = 0x78; // uint32_t : 1
		constexpr auto SeasonRewards = 0x78; // uint32_t : 1
		constexpr auto BotDetection = 0x78; // uint32_t : 1
		constexpr auto CrateRoulette = 0x78; // uint32_t : 1
		constexpr auto FaceIt = 0x78; // uint32_t : 1
		constexpr auto OnlinePlayerTitles = 0x78; // uint32_t : 1
		constexpr auto RestrictByRegion = 0x78; // uint32_t : 1
		constexpr auto FirstTimeExperience = 0x78; // uint32_t : 1
		constexpr auto RLBot = 0x78; // uint32_t : 1
		constexpr auto CarMatinee = 0x78; // uint32_t : 1
		constexpr auto UserBugReport = 0x78; // uint32_t : 1
		constexpr auto SteamInput = 0x78; // uint32_t : 1
		constexpr auto ReplayFXControls = 0x78; // uint32_t : 1
		constexpr auto ESportsShop = 0x78; // uint32_t : 1
		constexpr auto TeamColoredBoostMeter = 0x78; // uint32_t : 1
		constexpr auto GarageArchive = 0x78; // uint32_t : 1
		constexpr auto DynamicRangeAudioSettings = 0x7c; // uint32_t : 1
		constexpr auto AutoTour = 0x7c; // uint32_t : 1
		constexpr auto QuickPlay = 0x7c; // uint32_t : 1
		constexpr auto NewsPanelV2 = 0x7c; // uint32_t : 1
		constexpr auto Blueprints = 0x7c; // uint32_t : 1
		constexpr auto GodBall = 0x7c; // uint32_t : 1
		constexpr auto RocketBucks = 0x7c; // uint32_t : 1
		constexpr auto DiscordRichPresence = 0x7c; // uint32_t : 1
		constexpr auto SupportACreator = 0x7c; // uint32_t : 1
		constexpr auto CinematicIntro = 0x7c; // uint32_t : 1
		constexpr auto TinyCrowd = 0x7c; // uint32_t : 1
		constexpr auto CrumbTrail = 0x7c; // uint32_t : 1
		constexpr auto EpicOnlineServices = 0x7c; // uint32_t : 1
		constexpr auto EpicGameStoreBuild = 0x7c; // uint32_t : 1
		constexpr auto XPGatedPlaylists = 0x7c; // uint32_t : 1
		constexpr auto TradeInV2 = 0x7c; // uint32_t : 1
		constexpr auto Football = 0x7c; // uint32_t : 1
		constexpr auto RumbleSelection = 0x7c; // uint32_t : 1
		constexpr auto UndersizedParty = 0x7c; // uint32_t : 1
		constexpr auto StreamerSafeAudio = 0x7c; // uint32_t : 1
		constexpr auto FreeplayCommands = 0x7c; // uint32_t : 1
		constexpr auto Rumble_BM = 0x7c; // uint32_t : 1
		constexpr auto EpicGameClips = 0x7c; // uint32_t : 1
		constexpr auto Koala = 0x7c; // uint32_t : 1
		constexpr auto PlayerReportingV2 = 0x7c; // uint32_t : 1
		constexpr auto BlogScheduling = 0x7c; // uint32_t : 1
		constexpr auto QuickPostMatchRequeue = 0x80; // uint32_t : 1
	}

	namespace n_AGravityVolume {
		constexpr auto GravityZ = 0x2d8; // float
	}

	namespace n_U__TAsyncResult__PsyNetClientService_X__SetResultWhen_5DB4902A4D5452E22E257F9E53806E90 {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_UActorFactory {
		constexpr auto GameplayActorClass = 0x60; // FNone*
		constexpr auto MenuName = 0x68; // FString
		constexpr auto MenuPriority = 0x78; // int32_t
		constexpr auto AlternateMenuPriority = 0x7c; // int32_t
		constexpr auto NewActorClassName = 0x80; // FString
		constexpr auto NewActorClass = 0x90; // FNone*
		constexpr auto bPlaceable = 0x98; // uint32_t : 1
		constexpr auto bShowInEditorQuickMenu = 0x98; // uint32_t : 1
	}

	namespace n_UGFxData_ShopCatalogue_TA {
		constexpr auto ShopManager = 0x98; // ObjectProperty
		constexpr auto ShopID = 0xa0; // int32_t
		constexpr auto ShopName = 0xa8; // FString
		constexpr auto Type = 0xb8; // FString
		constexpr auto Region = 0xc8; // FString
		constexpr auto StartDate = 0xd8; // QWordProperty
		constexpr auto EndDate = 0xe0; // QWordProperty
		constexpr auto ShopImage = 0xe8; // ObjectProperty
		constexpr auto ShopImageURL = 0xf0; // FString
		constexpr auto bLoaded = 0x100; // uint32_t : 1
		constexpr auto bFailedToLoad = 0x100; // uint32_t : 1
		constexpr auto bShopItemExpired = 0x100; // uint32_t : 1
		constexpr auto bAutoReload = 0x100; // uint32_t : 1
		constexpr auto CachedItems = 0x108; // TArray<FShopItem>
		constexpr auto CacheDuration = 0x118; // float
		constexpr auto LastCacheTime = 0x11c; // float
		constexpr auto LastOwnedCacheTime = 0x120; // float
		constexpr auto ShopTask = 0x128; // ObjectProperty
		constexpr auto CatalogueSet = 0x130; // ComponentProperty
		constexpr auto ExpirationHelper = 0x138; // ObjectProperty
		constexpr auto AutoLoadHelper = 0x140; // ObjectProperty
		constexpr auto ShopsConfig = 0x148; // ObjectProperty
		constexpr auto __bLoaded__ChangeNotify = 0x150; // DelegateProperty
		constexpr auto __bAutoReload__ChangeNotify = 0x168; // DelegateProperty
	}

	namespace n_ULoadoutSequencer_TA {
		constexpr auto SlotSequence = 0x60; // TArray<FSequenceData>
		constexpr auto bDebug = 0x70; // uint32_t : 1
		constexpr auto PreviewActor = 0x78; // ObjectProperty
		constexpr auto FinalLoadout = 0x80; // FLoadoutData
		constexpr auto CurrentLoadout = 0xc0; // FLoadoutData
		constexpr auto __EventSequenceComplete__Delegate = 0x100; // DelegateProperty
	}

	namespace n_UPlayerReportConfig_TA {
		constexpr auto Reasons = 0x78; // TArray<FPlayerReportReason>
	}

	namespace n_UMutator_Audio_TA {
		constexpr auto AudioSoundMode = 0x68; // FName
	}

	namespace n_ABreakOutActor_Platform_TA {
		constexpr auto Sides = 0x268; // int32_t
		constexpr auto bPrimaryPlayerStart = 0x26c; // uint32_t : 1
		constexpr auto TeamIndex = 0x270; // int32_t
		constexpr auto MaxDamage = 0x274; // int32_t
		constexpr auto StaticMeshComponent = 0x278; // ComponentProperty
		constexpr auto LightEnvironment = 0x280; // ComponentProperty
		constexpr auto FXArchetype = 0x288; // ObjectProperty
		constexpr auto NeighborRadius = 0x290; // float
		constexpr auto Neighbors = 0x298; // TArray<ObjectProperty>
		constexpr auto LastHitTime = 0x2a8; // float
		constexpr auto DamageState = 0x2b0; // FBreakoutDamageState
		constexpr auto FXActor = 0x2d0; // ObjectProperty
		constexpr auto PreReplayState = 0x2d8; // FBreakoutDamageState
		constexpr auto __EventDamageStateChanged__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __EventDamaged__Delegate = 0x310; // DelegateProperty
	}

	namespace n_UFacebookWindows {
		constexpr auto VfTable_FTickableObject = 0xe8; // FPointer
		constexpr auto ChildProcHandle = 0xf0; // FPointer
	}

	namespace n_U__GFxData_System_TA__OnShellSet_53C050AD49DE497E86150F966AD91216 {
		constexpr auto EngineShare = 0x60; // ObjectProperty
	}

	namespace n_U__OnlinePlayerStorageSync_X__SyncObjects_BC39D90744C33F34FDD16C93571F2AF7 {
		constexpr auto ResponseTask = 0x60; // ObjectProperty
	}

	namespace n_URPC_TourCreate_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Settings = 0x130; // FTourCreateSettings
		constexpr auto Tournament = 0x168; // ObjectProperty
	}

	namespace n_ULevelStreaming {
		constexpr auto PackageName = 0x60; // FName
		constexpr auto LoadedLevel = 0x68; // ObjectProperty
		constexpr auto Offset = 0x70; // FVector
		constexpr auto LevelTransform = 0x80; // FMatrix
		constexpr auto OldOffset = 0xc0; // FVector
		constexpr auto bIsVisible = 0xcc; // uint32_t : 1
		constexpr auto bHasLoadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bHasUnloadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisibleInEditor = 0xcc; // uint32_t : 1
		constexpr auto bBoundingBoxVisible = 0xcc; // uint32_t : 1
		constexpr auto bLocked = 0xcc; // uint32_t : 1
		constexpr auto bIsFullyStatic = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeLoaded = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisible = 0xcc; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0xcc; // uint32_t : 1
		constexpr auto bDrawOnLevelStatusMap = 0xcc; // uint32_t : 1
		constexpr auto bIsRequestingUnloadAndRemoval = 0xcc; // uint32_t : 1
		constexpr auto DrawColor = 0xd0; // FColor
		constexpr auto EditorStreamingVolumes = 0xd8; // TArray<ObjectProperty>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe8; // float
		constexpr auto LastVolumeUnloadRequestTime = 0xec; // float
		constexpr auto Keywords = 0xf0; // TArray<FString>
		constexpr auto EditorGridVolume = 0x100; // ObjectProperty
		constexpr auto GridPosition = 0x108; // int32_t [0x3]
	}

	namespace n_U__GFxData_Friends_TA__HideBlockedEpicFriendInvites_83C1C809421D9A7EDDEC2686E3B07276 {
		constexpr auto PendingIdx = 0x60; // int32_t
	}

	namespace n_UCameraState_DirectorCountdownRotate_TA {
		constexpr auto FOV = 0x1b8; // float
		constexpr auto Distance = 0x1bc; // float
		constexpr auto InitialRotation = 0x1c0; // FRotator
		constexpr auto RotationSpeed = 0x1cc; // FRotator
	}

	namespace n_UAkAudioDevice {
		constexpr auto MaxNumMemoryPools = 0x78; // int32_t
		constexpr auto DefaultMemoryPoolKB = 0x7c; // int32_t
		constexpr auto DefaultEngineMemoryPoolKB = 0x80; // int32_t
		constexpr auto WwiseBusSendBufferSamples = 0x84; // int32_t
		constexpr auto DebugRecordWwiseBusSends = 0x88; // uint32_t : 1
		constexpr auto LowMemoryThreshold = 0x8c; // float
	}

	namespace n_UNxForceFieldComponent {
		constexpr auto Shape = 0x258; // ObjectProperty
		constexpr auto DrawComponent = 0x260; // ComponentProperty
		constexpr auto ExcludeChannel = 0x268; // int32_t
		constexpr auto bForceActive = 0x26c; // uint32_t : 1
		constexpr auto bDestroyWhenInactive = 0x26c; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x270; // FRBCollisionChannelContainer
		constexpr auto Duration = 0x274; // float
		constexpr auto ForceField = 0x278; // FPointer
		constexpr auto ConvexMeshes = 0x280; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x290; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x2a0; // TArray<FPointer>
		constexpr auto SceneIndex = 0x2b0; // int32_t
		constexpr auto ElapsedTime = 0x2b4; // float
		constexpr auto RenderComponent = 0x2b8; // ComponentProperty
		constexpr auto RBPhysScene = 0x2c0; // FPointer
	}

	namespace n_UShopErrors_TA {
		constexpr auto ShopItemBadData = 0x80; // ObjectProperty
		constexpr auto ShopItemDiscountBadData = 0x88; // ObjectProperty
		constexpr auto ShopSyncedBadData = 0x90; // ObjectProperty
		constexpr auto ShopNotEnoughCurrency = 0x98; // ObjectProperty
	}

	namespace n_UDistributionVector {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_UProductAsset_Logo_TA {
		constexpr auto Texture = 0xf8; // ObjectProperty
		constexpr auto TeamColor = 0x100; // FLinearColor
		constexpr auto CustomColor = 0x110; // FLinearColor
		constexpr auto Bots2 = 0x120; // TArray<ObjectProperty>
	}

	namespace n_URPC_ProductUpgradeLevel_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto DesiredLevel = 0x140; // int32_t
		constexpr auto ReceivedProducts = 0x148; // TArray<FOnlineProductData>
		constexpr auto Products = 0x158; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_InstanceMaterial_TA {
		constexpr auto MaterialInstance = 0x160; // ObjectProperty
		constexpr auto SK = 0x168; // ObjectProperty
		constexpr auto SM = 0x170; // ObjectProperty
		constexpr auto InstancedMaterial = 0x178; // ObjectProperty
		constexpr auto MatIndex = 0x180; // int32_t
	}

	namespace n_ASpecialPickup_BallVelcro_TA {
		constexpr auto BallOffset = 0x388; // FVector
		constexpr auto bUseRealOffset = 0x394; // uint32_t : 1
		constexpr auto bHit = 0x394; // uint32_t : 1
		constexpr auto bBroken = 0x394; // uint32_t : 1
		constexpr auto AfterHitDuration = 0x398; // float
		constexpr auto Mesh = 0x3a0; // ObjectProperty
		constexpr auto MeshScaleCurve = 0x3a8; // FInterpCurveFloat
		constexpr auto HitMeshScaleCurve = 0x3c0; // FInterpCurveFloat
		constexpr auto BrokenScaleCurve = 0x3d8; // FInterpCurveFloat
		constexpr auto PostBreakDuration = 0x3f0; // float
		constexpr auto BallHitSFX = 0x3f8; // ObjectProperty
		constexpr auto MinBreakForce = 0x400; // float
		constexpr auto MinBreakTime = 0x404; // float
		constexpr auto CheckLastTouchRate = 0x408; // float
		constexpr auto SMC = 0x410; // ComponentProperty
		constexpr auto WeldedBall = 0x418; // ObjectProperty
		constexpr auto OldBallMass = 0x420; // float
		constexpr auto AttachTime = 0x424; // float
		constexpr auto LastTouchCheckTime = 0x428; // float
		constexpr auto BreakTime = 0x42c; // float
	}

	namespace n_UChallengeDefaultManager_TA {
		constexpr auto DefaultChallenges = 0x60; // TArray<ObjectProperty>
		constexpr auto Folders = 0x70; // TArray<ObjectProperty>
		constexpr auto ChallengeConfig = 0x80; // ObjectProperty
		constexpr auto NewChallengesNotifications = 0x88; // TArray<ObjectProperty>
		constexpr auto __EventChallengeAdded__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventChallengesSynced__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventChallengesPushed__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_URocketPassBundleContainer_TA {
		constexpr auto RocketPassMenuName = 0x70; // FName
		constexpr auto Premium = 0x78; // TArray<FRocketPassBundleInfo>
		constexpr auto Tier = 0x88; // TArray<FRocketPassBundleInfo>
		constexpr auto RocketPassPackageName = 0x98; // FString
		constexpr auto TierBundleFileNameBase = 0xa8; // FString
	}

	namespace n_UMusicUrlConfig_TA {
		constexpr auto Tracks = 0x78; // TArray<FMusicConfigTrack>
	}

	namespace n_UProcBuildingRuleset {
		constexpr auto RootRule = 0x60; // ObjectProperty
		constexpr auto bBeingEdited = 0x68; // uint32_t : 1
		constexpr auto bEnableInteriorTexture = 0x68; // uint32_t : 1
		constexpr auto bLODOnlyRoof = 0x68; // uint32_t : 1
		constexpr auto bPickRandomSwatch = 0x68; // uint32_t : 1
		constexpr auto DefaultRoofMaterial = 0x70; // ObjectProperty
		constexpr auto DefaultFloorMaterial = 0x78; // ObjectProperty
		constexpr auto DefaultNonRectWallMaterial = 0x80; // ObjectProperty
		constexpr auto RoofZOffset = 0x88; // float
		constexpr auto NotRoofZOffset = 0x8c; // float
		constexpr auto FloorZOffset = 0x90; // float
		constexpr auto NotFloorZOffset = 0x94; // float
		constexpr auto RoofPolyInset = 0x98; // float
		constexpr auto FloorPolyInset = 0x9c; // float
		constexpr auto BuildingLODSpecular = 0xa0; // float
		constexpr auto RoofEdgeScopeRaise = 0xa4; // float
		constexpr auto LODCubemap = 0xa8; // ObjectProperty
		constexpr auto InteriorTexture = 0xb0; // ObjectProperty
		constexpr auto Variations = 0xb8; // TArray<FPBVariationInfo>
		constexpr auto ParamSwatches = 0xc8; // TArray<FPBParamSwatch>
		constexpr auto Comments = 0xd8; // TArray<ObjectProperty>
	}

	namespace n_U__ProfileVersions_TA__CarColors2_341DDCCE440C705F8E2E978833195395 {
		constexpr auto TeamArchetypes = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UAkSoundSource {
		constexpr auto Translation = 0xa0; // FVector
		constexpr auto Rotation = 0xac; // FRotator
		constexpr auto bDetachOnComplete = 0xb8; // uint32_t : 1
		constexpr auto bRegistered = 0xb8; // uint32_t : 1
		constexpr auto bUpdateOrientation = 0xb8; // uint32_t : 1
		constexpr auto CachedParentToWorld = 0xc0; // FMatrix
		constexpr auto WorldLocation = 0x100; // FVector
		constexpr auto WorldRotation = 0x10c; // FRotator
		constexpr auto Params = 0x118; // ComponentProperty
		constexpr auto ActiveSounds = 0x120; // TArray<FActiveSound>
		constexpr auto EnvironmentType = 0x130; // EAkEnvironmentType
		constexpr auto CallbackTypes = 0x138; // TArray<EAkCallbackType>
		constexpr auto SoundSourceId = 0x148; // FPointer
		constexpr auto __EventFinished__Delegate = 0x150; // DelegateProperty
		constexpr auto __EventMarker__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventDuration__Delegate = 0x180; // DelegateProperty
	}

	namespace n_UClubInvite_X {
		constexpr auto ClubID = 0x60; // QWordProperty
		constexpr auto ClubName = 0x68; // FString
		constexpr auto ClubTag = 0x78; // FString
		constexpr auto InvitedBy = 0x88; // FClubMember
	}

	namespace n_UGameUISceneClient {
		constexpr auto LatestDeltaTime = 0x120; // float
		constexpr auto DoubleClickStartTime = 0x128; // FDouble
		constexpr auto DoubleClickStartPosition = 0x130; // FIntPoint
		constexpr auto InitialPressedKeys = 0x138; // FMap_Mirror
		constexpr auto bUpdateInputProcessingStatus = 0x188; // uint32_t : 1
		constexpr auto bUpdateSceneViewportSizes = 0x188; // uint32_t : 1
		constexpr auto bEnableDebugInput = 0x188; // uint32_t : 1
		constexpr auto bRenderDebugInfo = 0x188; // uint32_t : 1
		constexpr auto bCaptureUnprocessedInput = 0x188; // uint32_t : 1
		constexpr auto NavAliases = 0x190; // TArray<FName>
		constexpr auto AxisInputKeys = 0x1a0; // TArray<FName>
	}

	namespace n_UMcpGroupsBase {
		constexpr auto McpGroupsManagerClassName = 0x78; // FString
		constexpr auto GroupLists = 0x88; // TArray<FMcpGroupList>
		constexpr auto __OnCreateGroupComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteGroupComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnQueryGroupsComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersComplete__Delegate = 0xe0; // DelegateProperty
		constexpr auto __OnAddGroupMembersComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnRemoveGroupMembersComplete__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnDeleteAllGroupsComplete__Delegate = 0x128; // DelegateProperty
		constexpr auto __OnQueryGroupInvitesComplete__Delegate = 0x140; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteComplete__Delegate = 0x158; // DelegateProperty
	}

	namespace n_UPlayerVanity_TA {
		constexpr auto MovieReference = 0x70; // FString
		constexpr auto ToPlayer = 0x80; // ObjectProperty
		constexpr auto PaintableLayer = 0x88; // ObjectProperty
		constexpr auto TintableLayer = 0x90; // ObjectProperty
		constexpr auto bColorable = 0x98; // uint32_t : 1
		constexpr auto bIsDirty = 0x98; // uint32_t : 1
		constexpr auto ColorID = 0x9c; // int32_t
		constexpr auto ColorValue = 0xa0; // FColor
		constexpr auto DefaultColorValue = 0xa4; // FColor
		constexpr auto PaintColor = 0xa8; // FColor
		constexpr auto InstanceID = 0xb0; // FString
		constexpr auto ProductID = 0xc0; // int32_t
		constexpr auto HashID = 0xc4; // FProductHashID
		constexpr auto RawDefaultColorValue = 0xc8; // FColor
		constexpr auto Attributes = 0xd0; // TArray<ObjectProperty>
		constexpr auto PlayerName = 0xe0; // FString
		constexpr auto PlayerID = 0xf0; // FUniqueNetId
		constexpr auto Profile = 0x138; // ObjectProperty
		constexpr auto VanitySaveObject = 0x140; // ObjectProperty
		constexpr auto VanityType = 0x148; // EVanityType
		constexpr auto OnLoadCompleteCallback = 0x150; // DelegateProperty
		constexpr auto __EventOnLoadComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventEquipProduct__Delegate = 0x180; // DelegateProperty
	}

	namespace n_U__StayAsPartyVote_TA__RemoveFollower_4F3E38EF41EC852DEF38E6BFAAC0B722 {
		constexpr auto FollowerID = 0x60; // FUniqueNetId
	}

	namespace n_UPsyNetService_AAS_X {
		constexpr auto AdtTime = 0x90; // int32_t
		constexpr auto OnlineHours = 0x94; // int32_t
	}

	namespace n_UPBRuleNodeComment {
		constexpr auto SizeX = 0x98; // int32_t
		constexpr auto SizeY = 0x9c; // int32_t
		constexpr auto BorderWidth = 0xa0; // int32_t
		constexpr auto BorderColor = 0xa4; // FColor
		constexpr auto bFilled = 0xa8; // uint32_t : 1
		constexpr auto FillColor = 0xac; // FColor
	}

	namespace n_URPC_ProductsDebugAddProduct_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ProductID = 0x130; // int32_t
		constexpr auto SeriesID = 0x134; // int32_t
		constexpr auto TradeHoldTimestamp = 0x138; // int32_t
		constexpr auto Attributes = 0x140; // TArray<FAddProductAttribute>
		constexpr auto Product = 0x150; // FOnlineProductData
		constexpr auto OnlineProduct = 0x190; // ObjectProperty
	}

	namespace n_UOnlineGameInvite_X {
		constexpr auto FriendJoinPlayerID = 0x98; // FUniqueNetId
		constexpr auto UnableToFindFriendsGameString = 0xe0; // FString
		constexpr auto AlreadyInSameServerString = 0xf0; // FString
		constexpr auto FriendNotJoinable = 0x100; // FString
		constexpr auto GameInviteBeaconAddress = 0x110; // FString
		constexpr auto GameInviteCredentials = 0x120; // FString
		constexpr auto ActionRequired = 0x130; // FName
		constexpr auto __EventGameInviteAccepted__Delegate = 0x138; // DelegateProperty
		constexpr auto __EventGameInviteComplete__Delegate = 0x150; // DelegateProperty
		constexpr auto __EventConfirmationRequired__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventPasswordRequired__Delegate = 0x180; // DelegateProperty
		constexpr auto __EventPsyNetPartyInviteAccepted__Delegate = 0x198; // DelegateProperty
	}

	namespace n_AWindPointSource {
		constexpr auto Component = 0x268; // ComponentProperty
	}

	namespace n_UDownloadableContentManager {
		constexpr auto DLCConfigCacheChanges = 0x60; // TArray<FPointer>
		constexpr auto InstalledDLC = 0x70; // TArray<FString>
		constexpr auto NonPackageFilePathMap = 0x80; // FMap_Mirror
		constexpr auto ClassesToReload = 0xd0; // TArray<FNone*>
		constexpr auto ObjectsToReload = 0xe0; // TArray<ObjectProperty>
		constexpr auto QueuedFullyLoadPackageInis = 0xf0; // TArray<FString>
		constexpr auto GameEngine = 0x100; // ObjectProperty
		constexpr auto __OnRefreshComplete__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UPrimitiveComponentFactory {
		constexpr auto CollideActors = 0x60; // uint32_t : 1
		constexpr auto BlockActors = 0x60; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x60; // uint32_t : 1
		constexpr auto HiddenGame = 0x60; // uint32_t : 1
		constexpr auto HiddenEditor = 0x60; // uint32_t : 1
		constexpr auto CastShadow = 0x60; // uint32_t : 1
	}

	namespace n_URecentPlayers_TA {
		constexpr auto RecentList = 0x70; // TArray<FPersonaDataId>
		constexpr auto RecentTradingPartners = 0x80; // TArray<FPersonaDataId>
		constexpr auto RecentGameIDs = 0x90; // TArray<FPlayerGameID>
		constexpr auto PersonaSave = 0xa0; // ObjectProperty
		constexpr auto MaxRecentPlayerCount = 0xa8; // int32_t
		constexpr auto __RecentList__ChangeNotify = 0xb0; // DelegateProperty
	}

	namespace n_UPostProcessManager_TA {
		constexpr auto PostProcessAAType = 0xd0; // EPostProcessAAType
		constexpr auto DOF_DistanceLimit = 0xd4; // float
		constexpr auto DOF_InnerRadiusLimit = 0xd8; // float
		constexpr auto DOF_KernelDefault = 0xdc; // float
		constexpr auto DOF_MaxFarDefault = 0xe0; // float
		constexpr auto DOF_DistanceExtent = 0xe4; // float
	}

	namespace n_UPointLightComponent_X {
		constexpr auto BrightnessOverTime = 0x268; // ComponentProperty
		constexpr auto AttachTime = 0x270; // float
	}

	namespace n_U__SpecialEventConfig_TA__SyncImageForIndex_85E15C6542876EBA5104C4AF07027BB9 {
		constexpr auto I = 0x60; // int32_t
	}

	namespace n_UAnimNodeSynch {
		constexpr auto Groups = 0x148; // TArray<FSynchGroup>
	}

	namespace n_UForceFieldShapeBox {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_USeqAct_LevelStreaming {
		constexpr auto Level = 0x180; // ObjectProperty
		constexpr auto LevelName = 0x188; // FName
		constexpr auto bStatusIsOk = 0x190; // uint32_t : 1
	}

	namespace n_UNavMeshGoalFilter_OutSideOfDotProductWedge {
		constexpr auto Location = 0x70; // FVector
		constexpr auto Rotation = 0x7c; // FVector
		constexpr auto Epsilon = 0x88; // float
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x70; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x98; // float
		constexpr auto DistributeThreshold = 0x9c; // float
	}

	namespace n_UPBRuleNodeAlternate {
		constexpr auto RepeatAxis = 0x98; // EProcBuildingAxis
		constexpr auto ASize = 0x9c; // float
		constexpr auto BMaxSize = 0xa0; // float
		constexpr auto bInvertPatternOrder = 0xa4; // uint32_t : 1
		constexpr auto bEqualSizeAB = 0xa4; // uint32_t : 1
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0xc0; // FExpressionInput
		constexpr auto Time = 0xf8; // FExpressionInput
		constexpr auto CenterX = 0x130; // float
		constexpr auto CenterY = 0x134; // float
		constexpr auto Speed = 0x138; // float
	}

	namespace n_UPartyConfig_X {
		constexpr auto bCompressMessages = 0x78; // uint32_t : 1
	}

	namespace n_ULineBatchComponent {
		constexpr auto FPrimitiveDrawInterfaceVfTable = 0x258; // FPointer
		constexpr auto FPrimitiveDrawInterfaceView = 0x260; // FPointer
		constexpr auto BatchedLines = 0x268; // TArray<FPointer>
		constexpr auto BatchedPoints = 0x278; // TArray<FPointer>
		constexpr auto DefaultLifeTime = 0x288; // float
	}

	namespace n_U__CrossplayConfig_X__GetDisabledCrossplayGroup_E353A71548D1801F70BCEDA28962053E {
		constexpr auto PlayerPlatform = 0x60; // OnlinePlatform
	}

	namespace n_UOrbitHitHandler_TA {
		constexpr auto RotationAxis = 0x158; // FVector
		constexpr auto CarDistanceBeforeOrbit = 0x164; // float
		constexpr auto StartAffectedRadius = 0x168; // float
		constexpr auto EndAffectedRadius = 0x16c; // float
		constexpr auto StartOrbitDistance = 0x170; // float
		constexpr auto EndOrbitDistance = 0x174; // float
		constexpr auto StartOrbitSpeed = 0x178; // float
		constexpr auto EndOrbitSpeed = 0x17c; // float
		constexpr auto FarAwayOrbitSpeedMultiplier = 0x180; // float
		constexpr auto MaxDeactivationVelocity = 0x184; // float
		constexpr auto OrbitCenterLocation = 0x188; // EOrbitCenterLocation
		constexpr auto OrbitAxisBehavior = 0x189; // EOrbitAxisBehavior
		constexpr auto AffectedAreaColor = 0x18c; // FColor
		constexpr auto OrbitCenterColor = 0x190; // FColor
		constexpr auto OrbitLocationColor = 0x194; // FColor
		constexpr auto OrbitingCars = 0x198; // TArray<FOrbitCarData>
		constexpr auto OrbitCenter = 0x1a8; // FVector
		constexpr auto NormalizedRotationAxis = 0x1b4; // FVector
		constexpr auto AffectedRadiusSquared = 0x1c0; // float
		constexpr auto OrbitDistance = 0x1c4; // float
	}

	namespace n_UImpactEffectsComponent_TA {
		constexpr auto SoundPriority = 0xa8; // int32_t
		constexpr auto ImpactEffectsMap = 0xb0; // ObjectProperty
		constexpr auto AkImpactSound = 0xb8; // ObjectProperty
		constexpr auto AkSlideSound = 0xc0; // ObjectProperty
		constexpr auto AkSlideSoundDelay = 0xc8; // float
		constexpr auto AkSlideMomentumMin = 0xcc; // float
		constexpr auto AkImpactTypeKey = 0xd0; // FName
		constexpr auto AkImpactIntensityKey = 0xd8; // FName
		constexpr auto MinImpactMomentum = 0xe0; // float
		constexpr auto MinImpactDelay = 0xe4; // float
		constexpr auto ImpactCameraShake = 0xe8; // ObjectProperty
		constexpr auto ImpactForceFeedback = 0xf0; // ObjectProperty
		constexpr auto ShakeScaleCurve = 0xf8; // FInterpCurveFloat
		constexpr auto LastWorldImpactTime = 0x110; // float
		constexpr auto LastActorImpactTime = 0x114; // float
		constexpr auto SlideTime = 0x118; // float
		constexpr auto SlideParticleComponent = 0x120; // ComponentProperty
		constexpr auto SlideAudioComponent = 0x128; // ComponentProperty
		constexpr auto ShakeComponent = 0x130; // ComponentProperty
		constexpr auto LastCollisionEffectData = 0x138; // FCollisionEffectData
		constexpr auto SlideCollisionEffectData = 0x190; // FCollisionEffectData
		constexpr auto SlidePhysMatProp = 0x1e8; // ObjectProperty
		constexpr auto SlapbackManager = 0x1f0; // ObjectProperty
	}

	namespace n_UProductAttribute_BlueprintCost_TA {
		constexpr auto Cost = 0x80; // int32_t
	}

	namespace n_UTourServerInfo_FaceIt_TA {
		constexpr auto ReservationMatchInfo = 0x80; // FFaceItReservationMatchInfo
	}

	namespace n_USeqEvent_Mover {
		constexpr auto StayOpenTime = 0x180; // float
	}

	namespace n_USeqVar_External {
		constexpr auto ExpectedType = 0xe0; // FNone*
		constexpr auto VariableLabel = 0xe8; // FString
	}

	namespace n_UPBRuleNodeMesh {
		constexpr auto BuildingMeshes = 0x98; // TArray<FBuildingMeshInfo>
		constexpr auto PartialOccludedBuildingMesh = 0xa8; // FBuildingMeshInfo
		constexpr auto bDoOcclusionTest = 0xf8; // uint32_t : 1
		constexpr auto bBlockAll = 0xf8; // uint32_t : 1
	}

	namespace n_UAddReservationMessagePublic_X {
		constexpr auto Settings = 0xd0; // FJoinMatchSettings
		constexpr auto MapPrefs = 0xf0; // TArray<FOnlinePlayerMapPrefs>
	}

	namespace n_URPC_ReportCheater_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Reason = 0x130; // FString
	}

	namespace n_UBTLock {
		constexpr auto LockScope = 0x88; // ELockScope
		constexpr auto LockName = 0x8c; // FName
		constexpr auto Time = 0x94; // float
		constexpr auto RandomTime = 0x98; // float
		constexpr auto Locks = 0xa0; // ComponentProperty
		constexpr auto LockTime = 0xa8; // float
	}

	namespace n_UItemDropGroup_TA {
		constexpr auto Currency = 0x60; // TArray<FCurrency>
		constexpr auto Products = 0x70; // TArray<FProductDrop>
		constexpr auto XP = 0x80; // int32_t
		constexpr auto GFxDataClass = 0x88; // FNone*
		constexpr auto DisplayOrder = 0x90; // EDropGroupDisplayOrder
		constexpr auto __EventItemDropGroupHandled__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UOnlineConfigDispatcher_X {
		constexpr auto bDebug = 0x60; // uint32_t : 1
	}

	namespace n_UDrawCylinderComponent {
		constexpr auto CylinderColor = 0x258; // FColor
		constexpr auto CylinderMaterial = 0x260; // ObjectProperty
		constexpr auto CylinderRadius = 0x268; // float
		constexpr auto CylinderTopRadius = 0x26c; // float
		constexpr auto CylinderHeight = 0x270; // float
		constexpr auto CylinderHeightOffset = 0x274; // float
		constexpr auto CylinderSides = 0x278; // int32_t
		constexpr auto bDrawWireCylinder = 0x27c; // uint32_t : 1
		constexpr auto bDrawLitCylinder = 0x27c; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x27c; // uint32_t : 1
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x128; // FParticleRandomSeedInfo
	}

	namespace n_USeqEvent_Input {
		constexpr auto bTrapInput = 0x180; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x184; // int32_t
		constexpr auto InputNames = 0x188; // TArray<FName>
	}

	namespace n_U__MatchRecorder_X__GetPlayerData_B1CA791B45BCD1494AF31B9EB7C8305C {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_URPC_PartyJoin_X {
		constexpr auto JoinID = 0xf8; // FString
		constexpr auto Info = 0x108; // FPsyNetPartyInfo
		constexpr auto Members = 0x178; // TArray<FPsyNetPartyMember>
	}

	namespace n_URPC_RecordMatchStats_TA {
		constexpr auto MatchGUID = 0xe8; // FString
		constexpr auto PlaylistId = 0xf8; // int32_t
		constexpr auto Aggregates = 0x100; // TArray<FPlayerAggregateStats>
	}

	namespace n_UGFxInteraction {
		constexpr auto VfTable_FCallbackEventDevice = 0xd0; // FPointer
		constexpr auto bFakeMobileTouches = 0xd8; // uint32_t : 1
	}

	namespace n_UEpicFriendsPlugin_X {
		constexpr auto ServerURL = 0x60; // FString
		constexpr auto ProductionServerURL = 0x70; // FString
		constexpr auto AddFriendURL = 0x80; // FString
		constexpr auto RemoveFriendURL = 0x90; // FString
		constexpr auto OutgoingFriendRequestsURL = 0xa0; // FString
		constexpr auto IncomingFriendRequestsURL = 0xb0; // FString
		constexpr auto BlockPlayerURL = 0xc0; // FString
		constexpr auto BlockListURL = 0xd0; // FString
		constexpr auto AccountSummaryURL = 0xe0; // FString
		constexpr auto __HTTPRequestCallback__Delegate = 0xf0; // DelegateProperty
		constexpr auto __AddFriendCallback__Delegate = 0x108; // DelegateProperty
		constexpr auto __GetOutgoingFriendsCallback__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UMatchType_AutoTournament_TA {
		constexpr auto AutoTourConfig = 0xd0; // ObjectProperty
	}

	namespace n_UPlaylistSettings_TA {
		constexpr auto XPLevelUnlocked = 0x128; // int32_t
		constexpr auto MapSkillRequirements = 0x130; // TArray<FMapSkillSettings>
		constexpr auto TourServerInfoClass = 0x140; // FNone*
		constexpr auto bAllowHonorDuelChallenges = 0x148; // uint32_t : 1
		constexpr auto TeamColors = 0x150; // TArray<FTeamColor>
		constexpr auto BallSuperSonicColor = 0x160; // FColorOverride
	}

	namespace n_UScriptedTexture {
		constexpr auto bNeedsUpdate = 0x190; // uint32_t : 1
		constexpr auto bSkipNextClear = 0x190; // uint32_t : 1
		constexpr auto __Render__Delegate = 0x198; // DelegateProperty
	}

	namespace n_UMusicTheme_TA {
		constexpr auto Playlists = 0x60; // TArray<ObjectProperty>
		constexpr auto TitleTracks = 0x70; // TArray<FPlaylistTitleTrack>
		constexpr auto NeverPlayInFirstTracklist = 0x80; // ObjectProperty
		constexpr auto Credits = 0x88; // FPlaylistTrack
		constexpr auto KonamiCode = 0x98; // FPlaylistTrack
		constexpr auto DefaultIcon = 0xa8; // ObjectProperty
		constexpr auto AdditionalTracks = 0xb0; // TArray<FPlaylistTrack>
	}

	namespace n_UProductAttribute_LevelSettings_TA {
		constexpr auto Levels = 0x80; // TArray<FProductLevelData>
	}

	namespace n_UPsyNetMessengerHttp_X {
		constexpr auto URL = 0x78; // FString
	}

	namespace n_UGFxData_ProductAttribute_Anthem_TA {
		constexpr auto MusicTitle = 0xb0; // FString
		constexpr auto ArtistTitle = 0xc0; // FString
	}

	namespace n_UActorFactoryRigidBody {
		constexpr auto bStartAwake = 0xc0; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xc0; // uint32_t : 1
		constexpr auto bLocalSpaceInitialVelocity = 0xc0; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0xc0; // uint32_t : 1
		constexpr auto InitialVelocity = 0xc4; // FVector
		constexpr auto AdditionalVelocity = 0xd0; // ComponentProperty
		constexpr auto InitialAngularVelocity = 0xd8; // ComponentProperty
		constexpr auto RBChannel = 0xe0; // ERBCollisionChannel
		constexpr auto StayUprightTorqueFactor = 0xe4; // float
		constexpr auto StayUprightMaxTorque = 0xe8; // float
	}

	namespace n_UArenaSoundManager_TA {
		constexpr auto DefaultInGameMusicCue = 0xa8; // ObjectProperty
		constexpr auto TrainingRoundEndCue = 0xb0; // ObjectProperty
		constexpr auto ArenaMusicReplayStopCue = 0xb8; // ObjectProperty
		constexpr auto Settings = 0xc0; // ObjectProperty
		constexpr auto SoundPlayer = 0xc8; // ObjectProperty
		constexpr auto bMatchBegan = 0xd0; // uint32_t : 1
		constexpr auto SoccarGame = 0xd8; // ObjectProperty
		constexpr auto ReflectionsManager = 0xe0; // ObjectProperty
		constexpr auto GoalScoreStinger = 0xe8; // ObjectProperty
		constexpr auto ActiveStinger = 0xf0; // ObjectProperty
		constexpr auto Config = 0xf8; // ObjectProperty
		constexpr auto StreamerSafeConfig = 0x100; // ObjectProperty
		constexpr auto NextTimedEvent = 0x108; // ObjectProperty
		constexpr auto TimedEventPlayingID = 0x110; // int32_t
		constexpr auto __EventReflectionsManagerSet__Delegate = 0x118; // DelegateProperty
		constexpr auto __EventActiveStingerUpdated__Delegate = 0x130; // DelegateProperty
		constexpr auto __EventAnthemSoundStateUpdated__Delegate = 0x148; // DelegateProperty
	}

	namespace n_USequenceOp {
		constexpr auto bIsActivated = 0xd8; // uint32_t : 1
		constexpr auto bIsCurrentDebuggerOp = 0xd8; // uint32_t : 1
		constexpr auto bActive = 0xd8; // uint32_t : 1
		constexpr auto bLatentExecution = 0xd8; // uint32_t : 1
		constexpr auto bAutoActivateOutputLinks = 0xd8; // uint32_t : 1
		constexpr auto bHaveMovingVarConnector = 0xd8; // uint32_t : 1
		constexpr auto bHaveMovingInputConnector = 0xd8; // uint32_t : 1
		constexpr auto bHaveMovingOutputConnector = 0xd8; // uint32_t : 1
		constexpr auto bPendingVarConnectorRecalc = 0xd8; // uint32_t : 1
		constexpr auto bPendingInputConnectorRecalc = 0xd8; // uint32_t : 1
		constexpr auto bPendingOutputConnectorRecalc = 0xd8; // uint32_t : 1
		constexpr auto bIsBreakpointSet = 0xd8; // uint32_t : 1
		constexpr auto bIsHiddenBreakpointSet = 0xd8; // uint32_t : 1
		constexpr auto PIEActivationTime = 0xdc; // float
		constexpr auto ActivatorSeqOp = 0xe0; // ObjectProperty
		constexpr auto LastActivatedInputLink = 0xe8; // int32_t
		constexpr auto LastActivatedOutputLink = 0xec; // int32_t
		constexpr auto InputLinks = 0xf0; // TArray<FSeqOpInputLink>
		constexpr auto OutputLinks = 0x100; // TArray<FSeqOpOutputLink>
		constexpr auto VariableLinks = 0x110; // TArray<FSeqVarLink>
		constexpr auto EventLinks = 0x120; // TArray<FSeqEventLink>
		constexpr auto PlayerIndex = 0x130; // int32_t
		constexpr auto GamepadID = 0x134; // char
		constexpr auto ActivateCount = 0x138; // int32_t
		constexpr auto SearchTag = 0x13c; // int32_t
	}

	namespace n_USeqAct_AkEnvironment {
		constexpr auto Environment = 0x160; // FAkEnvironment
		constexpr auto Target = 0x180; // EAkEnvironmentTarget
	}

	namespace n_UGFxData_ProductAttribute_Blueprint_TA {
		constexpr auto ProductThumbnail = 0xb0; // ObjectProperty
		constexpr auto BlueprintThumbnail = 0xb8; // ObjectProperty
		constexpr auto Cost = 0xc0; // int32_t
		constexpr auto bRevealed = 0xc4; // uint32_t : 1
		constexpr auto PreviewProductHashID = 0xc8; // FProductHashID
	}

	namespace n_URPC_Challenge_FTECheckpointComplete_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto GroupName = 0x130; // FName
		constexpr auto CheckpointName = 0x138; // FName
	}

	namespace n_UProductAttribute_UserColorable_TA {
		constexpr auto DefaultColor = 0x80; // FLinearColor
	}

	namespace n_UEOSPermissions_TA {
		constexpr auto EpicConfig = 0x60; // ObjectProperty
		constexpr auto RetryConfig = 0x68; // ObjectProperty
		constexpr auto TextChatPermissionLevel = 0x70; // EChatPermissionLevel
		constexpr auto GameplaySettingsSave = 0x78; // ObjectProperty
		constexpr auto DownloadedPermissions = 0x80; // ObjectProperty
		constexpr auto ServiceName = 0x88; // FString
		constexpr auto RetryDelays = 0x98; // TArray<float>
		constexpr auto PermissionRetryAttempts = 0xa8; // int32_t
		constexpr auto ActivePermissionsRequest = 0xb0; // ObjectProperty
		constexpr auto __EventPlayerPermissionsSet__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UDecodeObjectJson_X {
		constexpr auto JsonSerializer = 0x70; // ObjectProperty
		constexpr auto Stream = 0x78; // FString
	}

	namespace n_U__StayAsPartySystem_TA__GFxPlayerJoinedParty_17C3AF70497504AEECDFD18E917A8D16 {
		constexpr auto LeaderChanged = 0x60; // ObjectProperty
	}

	namespace n_UFreeplayCommands_TA {
		constexpr auto SoccarGame = 0x60; // ObjectProperty
		constexpr auto FreeplayConfig = 0x68; // ObjectProperty
		constexpr auto ActivatedCommands = 0x70; // TArray<FFreeplayCommandEvent>
	}

	namespace n_U__TAsyncResult__PrivilegeCheck_X__NotifyOnResult_CD70A38D49C3AF8C81CF4B8B3D4361E6 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UUserBugReportUploadResult_TA {
		constexpr auto ConfirmationCode = 0x60; // FString
	}

	namespace n_UUIDataStore_MenuItems {
		constexpr auto CurrentGameSettingsTag = 0x100; // FName
		constexpr auto OptionProviders = 0x108; // FMultiMap_Mirror
		constexpr auto DynamicProviders = 0x158; // TArray<ObjectProperty>
	}

	namespace n_UDebugHelpMenu_TA {
		constexpr auto CategoryTextScale = 0xd0; // float
		constexpr auto ItemTextScale = 0xd4; // float
		constexpr auto KeyTextScale = 0xd8; // float
		constexpr auto HelpCategories = 0xe0; // TArray<FDebugCategory>
		constexpr auto SelectedCategoryIdx = 0xf0; // int32_t
		constexpr auto SelectedItemIdx = 0xf4; // int32_t
		constexpr auto ItemsWidth = 0xf8; // float
		constexpr auto ItemsHeight = 0xfc; // float
		constexpr auto Fade = 0x100; // float
		constexpr auto bClosing = 0x104; // uint32_t : 1
	}

	namespace n_UGFxData_ProductAttribute_Container_TA {
		constexpr auto bUnlocked = 0xb0; // uint32_t : 1
		constexpr auto bSkipRoulette = 0xb0; // uint32_t : 1
		constexpr auto bGiftbox = 0xb0; // uint32_t : 1
	}

	namespace n_U__OnlineGameParty_X__UpdatePartyInfo_C23118C24288BA0C011DACA7DBB77E2A {
		constexpr auto Lobby = 0x60; // FActiveLobbyInfo
	}

	namespace n_UMatchPlayerData_X {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto PlayerName = 0xa8; // FString
		constexpr auto ConnectTimestamp = 0xb8; // QWordProperty
		constexpr auto JoinTimestamp = 0xc0; // QWordProperty
		constexpr auto LeaveTimestamp = 0xc8; // QWordProperty
		constexpr auto PartyLeaderID = 0xd0; // FUniqueNetId
		constexpr auto bAbandoned = 0x118; // uint32_t : 1
		constexpr auto bMvp = 0x118; // uint32_t : 1
		constexpr auto LastTeam = 0x11c; // int32_t
		constexpr auto SecondsPlayed = 0x120; // float
		constexpr auto Goals = 0x124; // int32_t
		constexpr auto Assists = 0x128; // int32_t
		constexpr auto Saves = 0x12c; // int32_t
		constexpr auto Shots = 0x130; // int32_t
		constexpr auto Demolishes = 0x134; // int32_t
		constexpr auto Score = 0x138; // int32_t
		constexpr auto OwnGoals = 0x13c; // int32_t
		constexpr auto ClubID = 0x140; // int32_t
		constexpr auto Skills = 0x144; // FMatchSkillUpdate
		constexpr auto ActorID = 0x168; // int32_t
	}

	namespace n_UAchievementUnlockedEvent_TA {
		constexpr auto Type = 0x60; // EAchievementType
		constexpr auto LocalId = 0x64; // int32_t
	}

	namespace n_UCarPreviewAnim_TA {
		constexpr auto Slot = 0xa8; // ObjectProperty
		constexpr auto KeyFrames = 0xb0; // TArray<FPreviewAnimKeyframe>
		constexpr auto Delay = 0xc0; // float
		constexpr auto bDelayHidden = 0xc4; // uint32_t : 1
		constexpr auto bLoop = 0xc4; // uint32_t : 1
		constexpr auto bComponentWasAttached = 0xc4; // uint32_t : 1
		constexpr auto SkelControlName = 0xc8; // FName
		constexpr auto PreviewActor = 0xd0; // ObjectProperty
		constexpr auto Component = 0xd8; // ComponentProperty
		constexpr auto FinalKeyframe = 0xe0; // FPreviewAnimKeyframe
		constexpr auto KeyframeTime = 0x118; // float
		constexpr auto KeyframeIndex = 0x11c; // int32_t
		constexpr auto SkelControl = 0x120; // ObjectProperty
	}

	namespace n_UOnlineClubManager_X {
		constexpr auto Connection = 0x60; // ObjectProperty
		constexpr auto __EventClubChanged__Delegate = 0x68; // DelegateProperty
	}

	namespace n_U__SaveData_TA__ValidateLoadoutsWithProduct_C7EBA5A646236A2BE58973881E1977D6 {
		constexpr auto OnlineID = 0x60; // FProductInstanceID
	}

	namespace n_U__TAsyncResult__UserBugReportUploadResult_TA__NotifyOnResultComplete_9D905371461F9FF44BE7028084BF9FB7 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__OnlineGameDedicatedServer_TA__HandleVoiceTokenCacheResponse_C79645CB49A4E0C39357F1BBCC55C3E4 {
		constexpr auto RequestedPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto PlayerID = 0x70; // FUniqueNetId
	}

	namespace n_UReplay_TA {
		constexpr auto ReplayName = 0x60; // FString
		constexpr auto EngineVersion = 0x70; // int32_t
		constexpr auto LicenseeVersion = 0x74; // int32_t
		constexpr auto NetVersion = 0x78; // int32_t
		constexpr auto ReplayVersion = 0x7c; // int32_t
		constexpr auto ReplayLastSaveVersion = 0x80; // int32_t
		constexpr auto GameVersion = 0x84; // int32_t
		constexpr auto BuildID = 0x88; // int32_t
		constexpr auto Changelist = 0x8c; // int32_t
		constexpr auto BuildVersion = 0x90; // FString
		constexpr auto ReserveMegabytes = 0xa0; // int32_t
		constexpr auto RecordFPS = 0xa4; // float
		constexpr auto KeyframeDelay = 0xa8; // float
		constexpr auto MaxChannels = 0xac; // int32_t
		constexpr auto MaxReplaySizeMB = 0xb0; // int32_t
		constexpr auto PlaybackClasses = 0xb8; // TArray<FNone*>
		constexpr auto IgnoreClasses = 0xc8; // TArray<FNone*>
		constexpr auto FilePath = 0xd8; // FString
		constexpr auto Id = 0xe8; // FString
		constexpr auto MapName = 0xf8; // FName
		constexpr auto Date = 0x100; // FString
		constexpr auto NumFrames = 0x110; // int32_t
		constexpr auto MatchType = 0x114; // FName
		constexpr auto PlayerName = 0x120; // FString
		constexpr auto bFileCorrupted = 0x130; // uint32_t : 1
		constexpr auto bForceKeyframe = 0x130; // uint32_t : 1
		constexpr auto bLoadedNetPackages = 0x130; // uint32_t : 1
		constexpr auto bDebug = 0x130; // uint32_t : 1
		constexpr auto Data = 0x138; // TArray<char>
		constexpr auto KeyFrames = 0x148; // TArray<FReplayKeyframe>
		constexpr auto ReplayState = 0x158; // EReplayState
		constexpr auto CurrentFrame = 0x15c; // int32_t
		constexpr auto NextKeyframe = 0x160; // int32_t
		constexpr auto CurrentTime = 0x164; // float
		constexpr auto Channels = 0x168; // TArray<FReplayActorChannel>
		constexpr auto ChannelsMap = 0x178; // FMap_Mirror
		constexpr auto PackageMap = 0x1c8; // ObjectProperty
		constexpr auto Levels = 0x1d0; // TArray<FName>
		constexpr auto FreeChannels = 0x1e0; // TArray<int32_t>
		constexpr auto AccumulatedDeltaTime = 0x1f0; // float
		constexpr auto TimeToSkipTo = 0x1f4; // float
		constexpr auto FrameToSkipTo = 0x1f8; // int32_t
		constexpr auto PlayersOnlyTicks = 0x1fc; // int32_t
		constexpr auto WriterAr = 0x200; // FPointer
		constexpr auto ReaderAr = 0x208; // FPointer
		constexpr auto Logs = 0x210; // TArray<FReplayLogItem>
		constexpr auto TimelineKeyframes = 0x220; // TArray<FTimelineKeyframe>
		constexpr auto CameraTrack = 0x230; // ObjectProperty
		constexpr auto __EventPlaybackStopped__Delegate = 0x238; // DelegateProperty
		constexpr auto __EventSpawned__Delegate = 0x250; // DelegateProperty
		constexpr auto __EventPreTimeSkip__Delegate = 0x268; // DelegateProperty
		constexpr auto __EventPostTimeSkip__Delegate = 0x280; // DelegateProperty
		constexpr auto __EventPlayedFrame__Delegate = 0x298; // DelegateProperty
	}

	namespace n_UWheelAssetGenerator_TA {
		constexpr auto Wheels = 0x70; // TArray<ComponentProperty>
	}

	namespace n_U__GFxData_PlayerAvatarPreview_TA__CreatePlayerAvatarPreview_ACAB8D824DBEB03C6E92109DBEC42516 {
		constexpr auto AvatarPreview = 0x60; // ComponentProperty
		constexpr auto OnlineProduct = 0x68; // ObjectProperty
		constexpr auto InColorID = 0x70; // int32_t
	}

	namespace n_U__ProductOverride_ParticleSystemColorParameter_TA__ApplyToObject_224C66C54BB85ED48CD798A4336A6109 {
		constexpr auto ParamTarget = 0x60; // TScriptInterface<Class>
		constexpr auto PaintSetting = 0x70; // ObjectProperty
	}

	namespace n_UHeightFogComponent {
		constexpr auto bEnabled = 0xa0; // uint32_t : 1
		constexpr auto Height = 0xa4; // float
		constexpr auto Density = 0xa8; // float
		constexpr auto LightBrightness = 0xac; // float
		constexpr auto LightColor = 0xb0; // FColor
		constexpr auto ExtinctionDistance = 0xb4; // float
		constexpr auto StartDistance = 0xb8; // float
	}

	namespace n_URPC_GetPopulation_X {
		constexpr auto Playlists = 0xe8; // TArray<FGetPopulationData>
	}

	namespace n_UApexAsset {
		constexpr auto OriginalApexName = 0x60; // FString
		constexpr auto ApexComponents = 0x70; // TArray<ComponentProperty>
		constexpr auto NamedReferences = 0x80; // TArray<ObjectProperty>
		constexpr auto SourceFilePath = 0x90; // FString
		constexpr auto SourceFileTimestamp = 0xa0; // FString
	}

	namespace n_U__CarMeshComponentBase_TA__CreateWheelMesh_3E96EF5749CB91E8ACE401B99FE7813D {
		constexpr auto Asset = 0x60; // ObjectProperty
		constexpr auto WheelMesh = 0x68; // ComponentProperty
	}

	namespace n_USaveData_TA {
		constexpr auto SaveManager = 0x60; // ObjectProperty
		constexpr auto bFromPreviousSave = 0x68; // uint32_t : 1
		constexpr auto bShowLightShafts = 0x68; // uint32_t : 1
		constexpr auto bTranslucentArenaShaders = 0x68; // uint32_t : 1
		constexpr auto bVsync = 0x68; // uint32_t : 1
		constexpr auto bShowWeatherFX = 0x68; // uint32_t : 1
		constexpr auto bColorBlind = 0x68; // uint32_t : 1
		constexpr auto bEnableOnlineData = 0x68; // uint32_t : 1
		constexpr auto bUnloaded = 0x68; // uint32_t : 1
		constexpr auto MasterVolume = 0x6c; // float
		constexpr auto SoundVolume = 0x70; // float
		constexpr auto MusicVolume = 0x74; // float
		constexpr auto AmbientVolume = 0x78; // float
		constexpr auto VoiceVolume = 0x7c; // float
		constexpr auto OutputType = 0x80; // EAkOutputType
		constexpr auto ControllerSoundMode = 0x81; // EControllerSoundMode
		constexpr auto VoiceFilter = 0x82; // EVoiceFilter
		constexpr auto ChatFilter = 0x83; // EVoiceFilter
		constexpr auto ControllerVolume = 0x84; // float
		constexpr auto UnlockedProducts = 0x88; // TArray<int32_t>
		constexpr auto MatchCompleteCarBodies = 0x98; // TArray<int32_t>
		constexpr auto NewProductIDs = 0xa8; // TArray<QWordProperty>
		constexpr auto UnseenContainerProducts = 0xb8; // TArray<QWordProperty>
		constexpr auto LastUnlockDisplayId = 0xc8; // QWordProperty
		constexpr auto NewProducts = 0xd0; // TArray<int32_t>
		constexpr auto NewOnlineProducts = 0xe0; // TArray<QWordProperty>
		constexpr auto UISavedValues = 0xf0; // TArray<FUISavedKeyValue>
		constexpr auto SkillData = 0x100; // TArray<FPlaylistSkillData>
		constexpr auto Resolution = 0x110; // FString
		constexpr auto WindowMode = 0x120; // int32_t
		constexpr auto VideoOptions = 0x128; // TArray<FOptionsValue>
		constexpr auto MaxFPS = 0x138; // int32_t
		constexpr auto SafeZoneRatio = 0x13c; // float
		constexpr auto UIScale = 0x140; // float
		constexpr auto MusicPlayerSave = 0x148; // ObjectProperty
		constexpr auto AchievementData = 0x150; // ObjectProperty
		constexpr auto BlogTileCache = 0x158; // ObjectProperty
		constexpr auto SelectedFreeplayMap = 0x160; // FName
		constexpr auto RankedReconnectBeacon = 0x168; // FString
		constexpr auto RankedReconnectEpochTime = 0x178; // QWordProperty
		constexpr auto OnlineProducts = 0x180; // TArray<ObjectProperty>
		constexpr auto OnlineProductSet = 0x190; // ComponentProperty
		constexpr auto ProductTransactions = 0x198; // ComponentProperty
		constexpr auto Profiles = 0x1a0; // TArray<ObjectProperty>
		constexpr auto XPGainPercentage = 0x1b0; // TArray<float>
		constexpr auto CurrentLevel = 0x1c0; // int32_t
		constexpr auto SchematicResources = 0x1c4; // int32_t
		constexpr auto SaveDataVersion = 0x1c8; // int32_t
		constexpr auto SaveObjectProvider = 0x1d0; // ComponentProperty
		constexpr auto SaveObjects = 0x1d8; // TArray<ObjectProperty>
		constexpr auto SaveTick = 0x1e8; // int32_t
		constexpr auto SyncOnlineStorageTask = 0x1f0; // ObjectProperty
		constexpr auto StorageSyncManager = 0x1f8; // ObjectProperty
		constexpr auto EOSStorageUploader = 0x200; // ObjectProperty
		constexpr auto ExpirationHelper = 0x208; // ObjectProperty
		constexpr auto CachedUnlockedProducts = 0x210; // ObjectProperty
		constexpr auto OnlineDLCProductCache = 0x218; // ObjectProperty
		constexpr auto NewProductNotificationQueue = 0x220; // TArray<ObjectProperty>
		constexpr auto __EventOnlineXPInitialized__Delegate = 0x230; // DelegateProperty
		constexpr auto __EventNewOnlineProduct__Delegate = 0x248; // DelegateProperty
		constexpr auto __EventRemovedOnlineProduct__Delegate = 0x260; // DelegateProperty
		constexpr auto __EventOnlineProductsSynced__Delegate = 0x278; // DelegateProperty
		constexpr auto __EventOnlineSavedDataSynced__Delegate = 0x290; // DelegateProperty
		constexpr auto __EventSchematicResourcesChanged__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __EventRedeemedOnlineProducts__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __EventReceivedUnseenContainerProduct__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __OnlineProducts__ChangeNotify = 0x2f0; // DelegateProperty
	}

	namespace n_UPartyBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto PartyBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x70; // FPointer
		constexpr auto bIsInTick = 0x78; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x78; // uint32_t : 1
		constexpr auto bShouldTick = 0x78; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x7c; // float
		constexpr auto ElapsedHeartbeatTime = 0x80; // float
		constexpr auto BeaconName = 0x84; // FName
		constexpr auto __OnDestroyComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UClubsConfig_TA {
		constexpr auto TagLengthMin = 0x78; // int32_t
		constexpr auto TagLengthMax = 0x7c; // int32_t
		constexpr auto NameLengthMin = 0x80; // int32_t
		constexpr auto NameLengthMax = 0x84; // int32_t
	}

	namespace n_URPC_TourFindPrivate_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Credentials = 0x130; // FTourPrivateCredentials
		constexpr auto Tournament = 0x150; // ObjectProperty
	}

	namespace n_U__GameEvent_Soccar_TA__InitClubMatch_375BED524B6F99FCCC18B5A01297F3AF {
		constexpr auto Cache = 0x60; // ComponentProperty
	}

	namespace n_UEventsPageConfig_TA {
		constexpr auto bEnabled = 0x78; // uint32_t : 1
		constexpr auto URL = 0x80; // FString
		constexpr auto ButtonTextureURL_Default = 0x90; // FString
		constexpr auto ButtonTextureURL_Hover = 0xa0; // FString
		constexpr auto ButtonTextureURL_Click = 0xb0; // FString
		constexpr auto ButtonTexture_Default = 0xc0; // ObjectProperty
		constexpr auto ButtonTexture_Hover = 0xc8; // ObjectProperty
		constexpr auto ButtonTexture_Click = 0xd0; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto Input = 0xe0; // FExpressionInput
		constexpr auto DefaultR = 0x118; // uint32_t : 1
		constexpr auto DefaultG = 0x118; // uint32_t : 1
		constexpr auto DefaultB = 0x118; // uint32_t : 1
		constexpr auto DefaultA = 0x118; // uint32_t : 1
		constexpr auto InstanceOverride = 0x120; // FPointer
	}

	namespace n_UOnlinePlayerAuthentication_TA {
		constexpr auto FreeToPlayConfig = 0x1d8; // ObjectProperty
		constexpr auto TwoFactorAuthentication = 0x1e0; // ObjectProperty
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x80; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x98; // uint32_t : 1
		constexpr auto bLockAxes2 = 0x98; // uint32_t : 1
		constexpr auto bUseExtremes = 0x98; // uint32_t : 1
		constexpr auto LockedAxes = 0x9c; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x9e; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_U__OnlineDLCProductCache_TA__GetOldGeneratedOnlineProduct_99466AD247864E8449BF1982317B0BC9 {
		constexpr auto InstanceID = 0x60; // FProductInstanceID
	}

	namespace n_UStopwatch {
		constexpr auto StartTime = 0x70; // float
	}

	namespace n_UGFxData_AutoTour_CompletedResults_TA {
		constexpr auto PsyNet = 0x98; // ObjectProperty
		constexpr auto Tournaments = 0xa0; // ObjectProperty
		constexpr auto Config = 0xa8; // ObjectProperty
		constexpr auto AutoTour = 0xb0; // ObjectProperty
		constexpr auto CycleID = 0xb8; // QWordProperty
		constexpr auto WeekIndex = 0xc0; // int32_t
		constexpr auto bEliminatedFirstRound = 0xc4; // uint32_t : 1
		constexpr auto bWeeksResultsChanged = 0xc4; // uint32_t : 1
		constexpr auto bReceivedResults = 0xc4; // uint32_t : 1
		constexpr auto bFailedToRetrieveResults = 0xc4; // uint32_t : 1
		constexpr auto NewTournamentResult = 0xc8; // FTournamentResult
		constexpr auto OldWeeklyResults = 0xd8; // TArray<FTournamentResult>
		constexpr auto NewWeeklyResults = 0xe8; // TArray<FTournamentResult>
		constexpr auto CurrencyRewards = 0xf8; // TArray<FShopCurrencyInfo>
		constexpr auto OldWeeklyCurrencies = 0x108; // TArray<FShopCurrencyInfo>
		constexpr auto WeeklyCurrencies = 0x118; // TArray<FShopCurrencyInfo>
		constexpr auto FinalCurrencies = 0x128; // TArray<FShopCurrencyInfo>
		constexpr auto TournamentID = 0x138; // QWordProperty
		constexpr auto ScheduleID = 0x140; // QWordProperty
		constexpr auto RejoinTournamentTime = 0x148; // QWordProperty
	}

	namespace n_USkeletalMeshComponent_TA {
		constexpr auto FOVOverride = 0x7b0; // float
		constexpr auto bIgnoreScriptAttach = 0x7b4; // uint32_t : 1
	}

	namespace n_UStatusTrigger_Numerical_TA {
		constexpr auto TCNType = 0x80; // TriggerConditionNumericalType
		constexpr auto ConditionalValue = 0x84; // int32_t
	}

	namespace n_UTickComponent_X {
		constexpr auto VfTable_FTickableObject = 0x80; // FPointer
		constexpr auto bTickWhenGamePaused = 0x88; // uint32_t : 1
		constexpr auto bTick = 0x88; // uint32_t : 1
		constexpr auto __TickDelegate__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UGFxData_AutoTour_TA {
		constexpr auto Config = 0x98; // ObjectProperty
		constexpr auto ScheduleRegionLabel = 0xa0; // FString
		constexpr auto NumWeeksInCycle = 0xb0; // int32_t
		constexpr auto CycleScore = 0xb4; // int32_t
		constexpr auto CurrencyID = 0xb8; // int32_t
		constexpr auto bDisplayCompletedTourResults = 0xbc; // uint32_t : 1
		constexpr auto TourCards = 0xc0; // TArray<ObjectProperty>
		constexpr auto Weeks = 0xd0; // TArray<ObjectProperty>
		constexpr auto EndOfTournamentResults = 0xe0; // ObjectProperty
		constexpr auto TournamentBanMessage = 0xe8; // FString
		constexpr auto PartyMembersTournamentBanned = 0xf8; // FString
		constexpr auto PsyNet = 0x108; // ObjectProperty
		constexpr auto Tournaments = 0x110; // ObjectProperty
		constexpr auto AutoTourConfig = 0x118; // ObjectProperty
		constexpr auto AutoTour = 0x120; // ObjectProperty
	}

	namespace n_ASpecialAttachment_TA {
		constexpr auto Offset = 0x7a8; // FVector
		constexpr auto StaticMesh = 0x7b8; // ComponentProperty
		constexpr auto BallHitMultiplier = 0x7c0; // float
		constexpr auto CarHitMultiplier = 0x7c4; // float
		constexpr auto CarHitVerticalMultiplier = 0x7c8; // float
		constexpr auto CarHitTorque = 0x7cc; // float
		constexpr auto bUseCarsBump = 0x7d0; // uint32_t : 1
		constexpr auto bDemolishOnHit = 0x7d0; // uint32_t : 1
		constexpr auto bDemolishTeam = 0x7d0; // uint32_t : 1
		constexpr auto AttachedCar = 0x7d8; // ObjectProperty
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto MatInst = 0x268; // ObjectProperty
	}

	namespace n_UStatTitle_TA {
		constexpr auto PrimaryTitle = 0x60; // FString
		constexpr auto SecondaryTitle = 0x70; // FString
		constexpr auto Points = 0x80; // int32_t
		constexpr auto MinStatValueRequired = 0x84; // int32_t
		constexpr auto MaxStatValueAllowed = 0x88; // int32_t
		constexpr auto Stat = 0x90; // ObjectProperty
		constexpr auto bPerStat = 0x98; // uint32_t : 1
		constexpr auto bInverseStat = 0x98; // uint32_t : 1
		constexpr auto bClampStatToOne = 0x98; // uint32_t : 1
		constexpr auto StatUnitType = 0x9c; // EStatTrackingUnitType
	}

	namespace n_URPC_TourGetMatchServer_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto MatchID = 0x138; // int32_t
		constexpr auto Reservation = 0x140; // FCheckReservationResponse
	}

	namespace n_UPlayerSpawnConfig_TA {
		constexpr auto RespawnDelaySeconds = 0x60; // int32_t
	}

	namespace n_USeqAct_ToggleCinematicMode {
		constexpr auto bDisableMovement = 0x160; // uint32_t : 1
		constexpr auto bDisableTurning = 0x160; // uint32_t : 1
		constexpr auto bHidePlayer = 0x160; // uint32_t : 1
		constexpr auto bDisableInput = 0x160; // uint32_t : 1
		constexpr auto bHideHUD = 0x160; // uint32_t : 1
		constexpr auto bDeadBodies = 0x160; // uint32_t : 1
		constexpr auto bDroppedPickups = 0x160; // uint32_t : 1
	}

	namespace n_URPC_TourGetRewards_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto Rewards = 0x138; // TArray<FTourReward>
	}

	namespace n_UAnimNodeAimOffset {
		constexpr auto Aim = 0x148; // FVector2D
		constexpr auto AngleOffset = 0x150; // FVector2D
		constexpr auto bForceAimDir = 0x158; // uint32_t : 1
		constexpr auto bBakeFromAnimations = 0x158; // uint32_t : 1
		constexpr auto bPassThroughWhenNotRendered = 0x158; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x158; // uint32_t : 1
		constexpr auto PassThroughAtOrAboveLOD = 0x15c; // int32_t
		constexpr auto ForcedAimDir = 0x160; // EAnimAimDir
		constexpr auto RequiredBones = 0x168; // TArray<char>
		constexpr auto AimCpntIndexLUT = 0x178; // TArray<char>
		constexpr auto TemplateNode = 0x188; // ObjectProperty
		constexpr auto Profiles = 0x190; // TArray<FAimOffsetProfile>
		constexpr auto CurrentProfileIndex = 0x1a0; // int32_t
	}

	namespace n_UUIDataStore_OnlinePlaylists {
		constexpr auto ProviderClassName = 0xa0; // FString
		constexpr auto ProviderClass = 0xb0; // FNone*
		constexpr auto RankedDataProviders = 0xb8; // TArray<ObjectProperty>
		constexpr auto UnrankedDataProviders = 0xc8; // TArray<ObjectProperty>
		constexpr auto RecModeDataProviders = 0xd8; // TArray<ObjectProperty>
		constexpr auto PrivateDataProviders = 0xe8; // TArray<ObjectProperty>
		constexpr auto PlaylistMan = 0xf8; // ObjectProperty
	}

	namespace n_U__MenuSequencer_TA__GetSequence_5664C01B4BF2A1BAEFA54BBB8B4B2E81 {
		constexpr auto SequenceName = 0x60; // FName
	}

	namespace n_U__GFxData_SpecialEvents_TA__PurchaseRewardFromStore_F8AFFC384DCFCD577EF122AA27B459E2 {
		constexpr auto SaveData = 0x60; // ObjectProperty
		constexpr auto WalletReference = 0x68; // ObjectProperty
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_ADecalManager {
		constexpr auto DecalTemplate = 0x268; // ComponentProperty
		constexpr auto PoolDecals = 0x270; // TArray<ComponentProperty>
		constexpr auto MaxActiveDecals = 0x280; // int32_t
		constexpr auto DecalLifeSpan = 0x284; // float
		constexpr auto DecalDepthBias = 0x288; // float
		constexpr auto DecalBlendRange = 0x28c; // FVector2D
		constexpr auto ActiveDecals = 0x298; // TArray<FActiveDecalInfo>
	}

	namespace n_URPC_UnblockPlayer_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_USeqCond_SwitchObject {
		constexpr auto SupportedValues = 0x140; // TArray<FSwitchObjectCase>
	}

	namespace n_URPC_FilterContent_X {
		constexpr auto Content = 0xe8; // TArray<FString>
		constexpr auto FilteredContent = 0xf8; // TArray<FString>
		constexpr auto Callbacks = 0x108; // TArray<DelegateProperty>
		constexpr auto PlayerIDs = 0x118; // TArray<FUniqueNetId>
	}

	namespace n_URuntimeParameterBase_X {
		constexpr auto ParameterName = 0x60; // FName
	}

	namespace n_UStaticMesh {
		constexpr auto LODInfo = 0x70; // TArray<FStaticMeshLODInfo>
		constexpr auto LODDistanceRatio = 0x80; // float
		constexpr auto LODMaxRange = 0x84; // float
		constexpr auto LightMapResolution = 0x98; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x9c; // int32_t
		constexpr auto BodySetup = 0xf8; // ObjectProperty
		constexpr auto UseSimpleLineCollision = 0x140; // uint32_t : 1
		constexpr auto UseSimpleBoxCollision = 0x144; // uint32_t : 1
		constexpr auto UseSimpleRigidBodyCollision = 0x148; // uint32_t : 1
		constexpr auto UseFullPrecisionUVs = 0x14c; // uint32_t : 1
		constexpr auto bUsedForInstancing = 0x150; // uint32_t : 1
		constexpr auto ConsolePreallocateInstanceCount = 0x154; // int32_t
		constexpr auto bUseMaximumStreamingTexelRatio = 0x158; // uint32_t : 1
		constexpr auto bPartitionForEdgeGeometry = 0x15c; // uint32_t : 1
		constexpr auto bCanBecomeDynamic = 0x160; // uint32_t : 1
		constexpr auto bStripComplexCollisionForConsole = 0x168; // uint32_t : 1
		constexpr auto bPerLODStaticLightingForInstancing = 0x16c; // uint32_t : 1
		constexpr auto StreamingDistanceMultiplier = 0x170; // float
		constexpr auto FoliageDefaultSettings = 0x1a0; // ObjectProperty
		constexpr auto SourceFilePath = 0x1a8; // FString
		constexpr auto SourceFileTimestamp = 0x1b8; // FString
	}

	namespace n_UEncodeObjectUObject_X {
		constexpr auto ObjectSerializer = 0x78; // ObjectProperty
	}

	namespace n_UBallTrajectoryComponent_Line_TA {
		constexpr auto bTrajectoryPointsNeedUpdated = 0x110; // uint32_t : 1
		constexpr auto LineColor = 0x114; // FColor
	}

	namespace n_U__GameInfo_GFxMenu_TA__Destroyed_BC1AF6B442ECE65877FDB2B0D07B0ED3 {
		constexpr auto GFxEngine = 0x60; // ObjectProperty
	}

	namespace n_UConnectionInfoMessage_X {
		constexpr auto ConnectionInfo = 0x68; // FServerConnectionInfo
	}

	namespace n_AGameEvent_TA {
		constexpr auto RegistryGroup = 0x268; // ComponentProperty
		constexpr auto MatchType = 0x270; // ObjectProperty
		constexpr auto MatchTypeClass = 0x278; // FNone*
		constexpr auto EventType = 0x280; // FName
		constexpr auto AudioSoundMode = 0x288; // FName
		constexpr auto MatchTypeName = 0x290; // FName
		constexpr auto CarArchetype = 0x298; // ObjectProperty
		constexpr auto PREIClass = 0x2a0; // FNone*
		constexpr auto CountdownTime = 0x2a8; // int32_t
		constexpr auto FinishTime = 0x2ac; // int32_t
		constexpr auto bMultiplayer = 0x2b0; // uint32_t : 1
		constexpr auto bCountdownMessagesDisabled = 0x2b0; // uint32_t : 1
		constexpr auto bFillWithAI = 0x2b0; // uint32_t : 1
		constexpr auto bAllowQueueSaveReplay = 0x2b0; // uint32_t : 1
		constexpr auto bAllowReadyUp = 0x2b0; // uint32_t : 1
		constexpr auto bRestartingMatch = 0x2b0; // uint32_t : 1
		constexpr auto bRandomizedBotLoadouts = 0x2b0; // uint32_t : 1
		constexpr auto bHasLeaveMatchPenalty = 0x2b0; // uint32_t : 1
		constexpr auto bCanVoteToForfeit = 0x2b0; // uint32_t : 1
		constexpr auto bDisableAimAssist = 0x2b0; // uint32_t : 1
		constexpr auto bAwardAchievements = 0x2b0; // uint32_t : 1
		constexpr auto bIsBotMatch = 0x2b0; // uint32_t : 1
		constexpr auto MinPlayers = 0x2b4; // int32_t
		constexpr auto MaxPlayers = 0x2b8; // int32_t
		constexpr auto SpawnPoints = 0x2c0; // TArray<ObjectProperty>
		constexpr auto AIManagerArchetype = 0x2d0; // ObjectProperty
		constexpr auto AIManager = 0x2d8; // ObjectProperty
		constexpr auto Pylon = 0x2e0; // ObjectProperty
		constexpr auto BotArchetype = 0x2e8; // ObjectProperty
		constexpr auto BotSkill = 0x2f0; // float
		constexpr auto DefaultMutators = 0x2f8; // TArray<ObjectProperty>
		constexpr auto Mutators = 0x308; // TArray<ObjectProperty>
		constexpr auto MatchTimeDilation = 0x318; // float
		constexpr auto HUDArchetype = 0x320; // ObjectProperty
		constexpr auto Activator = 0x328; // ObjectProperty
		constexpr auto ActivatorCar = 0x330; // ObjectProperty
		constexpr auto Players = 0x338; // TArray<ObjectProperty>
		constexpr auto PRIs = 0x348; // TArray<ObjectProperty>
		constexpr auto Cars = 0x358; // TArray<ObjectProperty>
		constexpr auto LocalPlayers = 0x368; // TArray<ObjectProperty>
		constexpr auto StartPointIndex = 0x378; // int32_t
		constexpr auto ReplicatedStateIndex = 0x37c; // char
		constexpr auto DeprecatedIndexToState = 0x380; // TArray<FName>
		constexpr auto ReplicatedStateName = 0x390; // FName
		constexpr auto GameFullMessage = 0x398; // ObjectProperty
		constexpr auto OtherActiveMessage = 0x3a0; // ObjectProperty
		constexpr auto NotEnoughPlayersMessage = 0x3a8; // ObjectProperty
		constexpr auto TooManyPlayersMessage = 0x3b0; // ObjectProperty
		constexpr auto NotPartyLeaderMessage = 0x3b8; // ObjectProperty
		constexpr auto CountdownMessages = 0x3c0; // TArray<ObjectProperty>
		constexpr auto GoMessage = 0x3d0; // ObjectProperty
		constexpr auto ReplacingBotCountdownMessages = 0x3d8; // TArray<ObjectProperty>
		constexpr auto ReplacingBotGoMessage = 0x3e8; // ObjectProperty
		constexpr auto ChatHistory = 0x3f0; // TArray<FPlayerChatMessage>
		constexpr auto GameStateTimeRemaining = 0x400; // int32_t
		constexpr auto ReplicatedGameStateTimeRemaining = 0x404; // int32_t
		constexpr auto BotConfig = 0x408; // ObjectProperty
		constexpr auto ForfeitInitiatorIDs = 0x410; // TArray<FUniqueNetId>
		constexpr auto BannedPlayers = 0x420; // TArray<FUniqueNetId>
		constexpr auto GameOwner = 0x430; // ObjectProperty
		constexpr auto MatchSettings = 0x438; // FCustomMatchSettings
		constexpr auto RichPresenceString = 0x4c8; // FString
		constexpr auto MatchAdmin = 0x4d8; // ObjectProperty
		constexpr auto ListenServer = 0x4e0; // ObjectProperty
		constexpr auto ReplicatedRoundCountDownNumber = 0x4e8; // int32_t
		constexpr auto MatchRecorder = 0x4f0; // ObjectProperty
		constexpr auto RandomizedBots = 0x4f8; // TArray<ObjectProperty>
		constexpr auto GameStates = 0x508; // TArray<ObjectProperty>
		constexpr auto GameState = 0x518; // ObjectProperty
		constexpr auto PauseInstance = 0x520; // ObjectProperty
		constexpr auto __EventMatchStarted__Delegate = 0x528; // DelegateProperty
		constexpr auto __EventGameStateChanged__Delegate = 0x540; // DelegateProperty
		constexpr auto __EventGameStateTimeUpdated__Delegate = 0x558; // DelegateProperty
		constexpr auto __EventFinished__Delegate = 0x570; // DelegateProperty
		constexpr auto __EventDestroyed__Delegate = 0x588; // DelegateProperty
		constexpr auto __EventPlayerRestarted__Delegate = 0x5a0; // DelegateProperty
		constexpr auto __EventPlayerAdded__Delegate = 0x5b8; // DelegateProperty
		constexpr auto __EventPlayerRemoved__Delegate = 0x5d0; // DelegateProperty
		constexpr auto __EventCarAdded__Delegate = 0x5e8; // DelegateProperty
		constexpr auto __EventCarRemoved__Delegate = 0x600; // DelegateProperty
		constexpr auto __EventReplicatedDemolish__Delegate = 0x618; // DelegateProperty
		constexpr auto __EventPenaltyChanged__Delegate = 0x630; // DelegateProperty
		constexpr auto __EventCanVoteForfeitChanged__Delegate = 0x648; // DelegateProperty
		constexpr auto __EventCountDownTimeUpdated__Delegate = 0x660; // DelegateProperty
		constexpr auto __EventGameOwnerUpdated__Delegate = 0x678; // DelegateProperty
		constexpr auto __EventMatchTypeSet__Delegate = 0x690; // DelegateProperty
		constexpr auto __EventLocalPlayersChanged__Delegate = 0x6a8; // DelegateProperty
		constexpr auto __EventMatchSettingsChanged__Delegate = 0x6c0; // DelegateProperty
		constexpr auto __EventPlayerResetTraining__Delegate = 0x6d8; // DelegateProperty
		constexpr auto __EventGameEventCommand__Delegate = 0x6f0; // DelegateProperty
		constexpr auto __Pylon__ChangeNotify = 0x708; // DelegateProperty
	}

	namespace n_U__GFxData_MultiItemDrops_TA__GetDropsByType_45F174FE4D8EAD57C443279BEC79F984 {
		constexpr auto DropType = 0x60; // FName
	}

	namespace n_USeqAct_SetVelocity {
		constexpr auto VelocityDir = 0x160; // FVector
		constexpr auto VelocityMag = 0x16c; // float
		constexpr auto bVelocityRelativeToActorRotation = 0x170; // uint32_t : 1
	}

	namespace n_UGFxData_TourSubscriptions_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
		constexpr auto Subscriptions = 0xa0; // ObjectProperty
		constexpr auto Created = 0xa8; // TArray<FSubscriptionInfo>
		constexpr auto AdminOf = 0xb8; // TArray<FSubscriptionInfo>
		constexpr auto RegisteredTo = 0xc8; // TArray<FSubscriptionInfo>
	}

	namespace n_U__GameEventProductAssetCache_TA__HandlePlayerAdded_816D868C4C2E5551C83B80BAE1EA72D7 {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_UNavigationHandle_TA {
		constexpr auto OldDriveLocation = 0x1a8; // FVector
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x70; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x98; // uint32_t : 1
	}

	namespace n_ABlockingVolume {
		constexpr auto bBlockCamera = 0x2a8; // uint32_t : 1
	}

	namespace n_AFXActor_TA {
		constexpr auto HideWorldUIState = 0x328; // ObjectProperty
		constexpr auto PreviewState = 0x330; // ObjectProperty
		constexpr auto PaintedState = 0x338; // ObjectProperty
		constexpr auto BoostEndEvent = 0x340; // ObjectProperty
		constexpr auto TeamStates = 0x348; // TArray<ObjectProperty>
		constexpr auto LocalPlayerAudioParamsComponent = 0x358; // ComponentProperty
	}

	namespace n_USeqAct_SetBallMaterial_TA {
		constexpr auto Ball = 0x160; // ObjectProperty
		constexpr auto Material = 0x168; // ObjectProperty
		constexpr auto MaterialID = 0x170; // int32_t
	}

	namespace n_URPC_UploadIntroCars_TA {
		constexpr auto LoadoutTemplates = 0xe8; // TArray<FRPCIntroCar>
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0xe8; // FName
	}

	namespace n_UGameSettingCategory_X {
		constexpr auto SelectedNames = 0x60; // TArray<FName>
		constexpr auto bHidden = 0x70; // uint32_t : 1
		constexpr auto bUseableWhileHidden = 0x70; // uint32_t : 1
		constexpr auto GameSettings = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UMusicThemeConfig_TA {
		constexpr auto Theme = 0x78; // ObjectProperty
	}

	namespace n_U__OnlinePlayerInterfaceEOS__RequestNativePlatformAuthTicket_91AF5DE0482236CAF88DF88FB62EC2D0 {
		constexpr auto LocalUserNum = 0x60; // int32_t
		constexpr auto Callback = 0x68; // DelegateProperty
	}

	namespace n_U__TAsyncResult__array_LanServerRecord_X__SetResultWhen_318D3B404C2D7E35F1FF4997F494F9CF {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_UProductAttribute_UserColor_TA {
		constexpr auto ColorValue = 0x80; // FColor
	}

	namespace n_UStoredChatData_TA {
		constexpr auto ChatChannel = 0x60; // EChatChannel
		constexpr auto SenderId = 0x68; // FUniqueNetId
		constexpr auto LastChatUpdate = 0xb0; // QWordProperty
		constexpr auto Messages = 0xb8; // TArray<FGFxChatMessage>
		constexpr auto bIsActive = 0xc8; // uint32_t : 1
	}

	namespace n_U__ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_3DA2B58345CE277C73A9828030D81D9F {
		constexpr auto Paint = 0x60; // ObjectProperty
		constexpr auto Target = 0x68; // ObjectProperty
	}

	namespace n_UDSR_DSToDSMessage_X {
		constexpr auto MessageType = 0x90; // FString
		constexpr auto MessagePayload = 0xa0; // FString
	}

	namespace n_ULoadingProduct_TA {
		constexpr auto ProductID = 0x60; // int32_t
		constexpr auto HashID = 0x64; // FProductHashID
		constexpr auto ReferencedViews = 0x68; // TArray<int32_t>
		constexpr auto OnlineProduct = 0x78; // ObjectProperty
		constexpr auto ThumbnailSize = 0x80; // EProductThumbnailSize
		constexpr auto ThumbnailAsset = 0x88; // ObjectProperty
		constexpr auto Asset = 0x90; // ObjectProperty
		constexpr auto Thumbnail = 0x98; // ObjectProperty
		constexpr auto bUpdateProductData = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreEquipped = 0xa0; // uint32_t : 1
		constexpr auto AdditionalProductReferences = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_TourPlatforms_TA {
		constexpr auto Groups = 0x98; // TArray<FGFxTourPlatformGroup>
		constexpr auto OnlineSub = 0xa8; // ObjectProperty
		constexpr auto __EventSelectionChange__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UGFxData_ChallengePage_TA {
		constexpr auto ChallengeFilter = 0xf0; // FNone*
	}

	namespace n_URPC_CustomGameServerGet_X {
		constexpr auto ServerName = 0xe8; // FString
		constexpr auto Password = 0xf8; // FString
		constexpr auto Servers = 0x108; // TArray<FFindPrivateServerResult>
		constexpr auto Results = 0x118; // TArray<FServerResult>
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto PropertyUpdateCallback = 0x60; // ObjectProperty
		constexpr auto PropertyOuterObjectInst = 0x68; // ObjectProperty
	}

	namespace n_USeqAct_SetStadiumTeamColors_TA {
		constexpr auto BlueColors = 0x160; // TArray<FLinearColor>
		constexpr auto OrangeColors = 0x170; // TArray<FLinearColor>
	}

	namespace n_UAnimNodeBlendBase {
		constexpr auto Children = 0x130; // TArray<FAnimBlendChild>
		constexpr auto bFixNumChildren = 0x140; // uint32_t : 1
		constexpr auto BlendType = 0x144; // AlphaBlendType
	}

	namespace n_U__PlaylistSkillDataSave_TA__Reconcile_6A19F92749C6C2C63B8317B131A24667 {
		constexpr auto Other = 0x60; // ObjectProperty
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x80; // FVector
		constexpr auto bLockAxes = 0x8c; // uint32_t : 1
		constexpr auto LockedAxes = 0x90; // EDistributionVectorLockFlags
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0xe8; // uint32_t : 1
	}

	namespace n_U__TourSubscriptions_TA__GetTournament_13A37238486C1A3217E92F8FD65EA4AF {
		constexpr auto TourID = 0x60; // QWordProperty
	}

	namespace n_UEngineAudioBaseComponent_TA {
		constexpr auto EngineAudio = 0xa8; // ComponentProperty
		constexpr auto ExhaustAudio = 0xb0; // ComponentProperty
		constexpr auto BlowoffComponent = 0xb8; // ComponentProperty
		constexpr auto WheelSpeed = 0xc0; // ComponentProperty
		constexpr auto ThrottleComponent = 0xc8; // ComponentProperty
		constexpr auto GearChangeSound = 0xd0; // ObjectProperty
		constexpr auto MaxActorsGroup = 0xd8; // ComponentProperty
		constexpr auto Car = 0xe0; // ObjectProperty
		constexpr auto __GetNormalizedRpmDelegate__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UNavMeshGoal_Filter {
		constexpr auto bShowDebug = 0x60; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x64; // int32_t
		constexpr auto NumNodesProcessed = 0x68; // int32_t
	}

	namespace n_USkelControlWheel {
		constexpr auto WheelDisplacement = 0x130; // float
		constexpr auto WheelMaxRenderDisplacement = 0x134; // float
		constexpr auto WheelRoll = 0x138; // float
		constexpr auto WheelRollAxis = 0x13c; // EAxis
		constexpr auto WheelSteeringAxis = 0x13d; // EAxis
		constexpr auto WheelSteering = 0x140; // float
		constexpr auto bInvertWheelRoll = 0x144; // uint32_t : 1
		constexpr auto bInvertWheelSteering = 0x144; // uint32_t : 1
	}

	namespace n_USeqAct_HeadTrackingControl {
		constexpr auto TrackControllerName = 0x160; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x170; // float
		constexpr auto bDisableBeyondLimit = 0x174; // uint32_t : 1
		constexpr auto bLookAtPawns = 0x174; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0x178; // float
		constexpr auto MinLookAtTime = 0x17c; // float
		constexpr auto MaxInterestTime = 0x180; // float
		constexpr auto ActorClassesToLookAt = 0x188; // TArray<FNone*>
		constexpr auto TargetBoneNames = 0x198; // TArray<FName>
		constexpr auto LookAtTargets = 0x1a8; // TArray<ObjectProperty>
		constexpr auto ActorToComponentMap = 0x1b8; // TMap<None, None>
	}

	namespace n_UNavMeshGoalFilter_NotNearOtherAI {
		constexpr auto DistanceToCheck = 0x70; // float
	}

	namespace n_UExplosionComponent_X {
		constexpr auto RBVelocityChange = 0xa8; // float
		constexpr auto StartRadius = 0xac; // float
		constexpr auto EndRadius = 0xb0; // float
		constexpr auto Speed = 0xb4; // float
		constexpr auto Falloff = 0xb8; // float
		constexpr auto bPassThroughWorldGeometry = 0xbc; // uint32_t : 1
		constexpr auto bIgnoreInstigator = 0xbc; // uint32_t : 1
		constexpr auto bDebug = 0xbc; // uint32_t : 1
		constexpr auto MomentumOffset = 0xc0; // FVector
		constexpr auto LifeTime = 0xcc; // float
		constexpr auto DamagedActors = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_APlayerController_X {
		constexpr auto CameraArchetype = 0x7b8; // ObjectProperty
		constexpr auto HUDArchetype = 0x7c0; // ObjectProperty
		constexpr auto OldPawnReference = 0x7c8; // ObjectProperty
		constexpr auto LockedDebugActor = 0x7d0; // ObjectProperty
		constexpr auto bPausedForExternalUI = 0x7d8; // uint32_t : 1
		constexpr auto NetConnection = 0x7e0; // ObjectProperty
		constexpr auto __EventReceivedPRI__Delegate = 0x7e8; // DelegateProperty
		constexpr auto __EventPawnChange__Delegate = 0x800; // DelegateProperty
		constexpr auto __EventReceivedPlayer__Delegate = 0x818; // DelegateProperty
		constexpr auto __EventDestroyed__Delegate = 0x830; // DelegateProperty
		constexpr auto __EventPlayerCameraChange__Delegate = 0x848; // DelegateProperty
	}

	namespace n_URegionConfig_X {
		constexpr auto SuperRegions = 0x78; // TArray<ObjectProperty>
		constexpr auto Regions = 0x88; // TArray<ObjectProperty>
	}

	namespace n_AAIController_TA {
		constexpr auto Car = 0x4a0; // ObjectProperty
		constexpr auto Vehicle = 0x4a8; // ObjectProperty
		constexpr auto BT = 0x4b0; // ComponentProperty
		constexpr auto SelfProxyType = 0x4b8; // ObjectProperty
		constexpr auto NoneProxyType = 0x4c0; // ObjectProperty
		constexpr auto DebugProxyType = 0x4c8; // ObjectProperty
		constexpr auto TeamCarsProxyType = 0x4d0; // ObjectProperty
		constexpr auto EnemyCarsProxyType = 0x4d8; // ObjectProperty
		constexpr auto PlayerControlledCarsProxyType = 0x4e0; // ObjectProperty
		constexpr auto OtherCarsProxyType = 0x4e8; // ObjectProperty
		constexpr auto BoostPillsProxyType = 0x4f0; // ObjectProperty
		constexpr auto SelectedProxyType = 0x4f8; // ObjectProperty
		constexpr auto SelfTarget = 0x500; // ObjectProperty
		constexpr auto NoneTarget = 0x508; // ObjectProperty
		constexpr auto IteratorTarget = 0x510; // ObjectProperty
		constexpr auto TeamCarsTarget = 0x518; // ObjectProperty
		constexpr auto SelectedTarget = 0x520; // ObjectProperty
		constexpr auto ContextTarget = 0x528; // ObjectProperty
		constexpr auto DebugBTNode = 0x530; // ObjectProperty
		constexpr auto Locks = 0x538; // ComponentProperty
		constexpr auto SkillSteerError = 0x540; // FSkillRange
		constexpr auto SkillSteerSpeed = 0x54c; // FSkillRange
		constexpr auto SkillThrottleSpeed = 0x558; // FSkillRange
		constexpr auto GameEvent = 0x568; // ObjectProperty
		constexpr auto AIManager = 0x570; // ObjectProperty
		constexpr auto Input = 0x578; // FVehicleInputs
		constexpr auto ForwardDir = 0x598; // FVector
		constexpr auto ForwardRotation = 0x5a4; // FRotator
		constexpr auto GroundNormal = 0x5b0; // FVector
		constexpr auto CachedProxyDatas = 0x5c0; // TArray<FCachedProxyData>
		constexpr auto CachedTargetDatas = 0x5d0; // TArray<FCachedTargetData>
		constexpr auto TargetFilterMap = 0x5e0; // FMap_Mirror
		constexpr auto CachedTargetFilters = 0x630; // TArray<ObjectProperty>
		constexpr auto DebugDriveDestination = 0x640; // FVector
		constexpr auto CachedObstacles = 0x650; // FCachedObstaclesData
		constexpr auto TeamCars = 0x678; // TArray<ObjectProperty>
		constexpr auto EnemyCars = 0x688; // TArray<ObjectProperty>
		constexpr auto PlayerControlledCars = 0x698; // TArray<ObjectProperty>
		constexpr auto OtherCars = 0x6a8; // TArray<ObjectProperty>
		constexpr auto bForceUpdateConditions = 0x6b8; // uint32_t : 1
		constexpr auto bCanUseBoost = 0x6b8; // uint32_t : 1
		constexpr auto bBeingReplaced = 0x6b8; // uint32_t : 1
		constexpr auto GameShare = 0x6c0; // ObjectProperty
		constexpr auto SelectedActor = 0x6c8; // ObjectProperty
		constexpr auto FieldScalar = 0x6d0; // float
		constexpr auto ForcedTeam = 0x6d4; // char
		constexpr auto __EventNamedEvent__Delegate = 0x6d8; // DelegateProperty
		constexpr auto __EventSkillChanged__Delegate = 0x6f0; // DelegateProperty
	}

	namespace n_AGRI_X {
		constexpr auto ReplicatedGamePlaylist = 0x2d8; // int32_t
		constexpr auto ReplicatedGameMutatorIndex = 0x2dc; // int32_t
		constexpr auto Reservations = 0x2e0; // FReplicatedReservationData [0x8]
		constexpr auto GameServerID = 0x5e0; // QWordProperty
		constexpr auto bGameStarted = 0x5e8; // uint32_t : 1
		constexpr auto bGameEnded = 0x5e8; // uint32_t : 1
		constexpr auto MatchGUID = 0x5f0; // FString
		constexpr auto __EventSpawned__Delegate = 0x600; // DelegateProperty
		constexpr auto __EventGameDataSelected__Delegate = 0x618; // DelegateProperty
		constexpr auto __EventReservationsUpdated__Delegate = 0x630; // DelegateProperty
		constexpr auto __EventServerNameChanged__Delegate = 0x648; // DelegateProperty
		constexpr auto __EventGameStarted__Delegate = 0x660; // DelegateProperty
		constexpr auto __EventMatchGUIDChanged__Delegate = 0x678; // DelegateProperty
	}

	namespace n_U__OnlineGameSkill_X__HandleSyncedPlayerSkill_42CACBB343F5565DC937089ECF0EA238 {
		constexpr auto PlayerSkillRatings = 0x60; // TArray<FPlayerSkillRating>
		constexpr auto PlayerID = 0x70; // FUniqueNetId
	}

	namespace n_ASceneCaptureActor {
		constexpr auto SceneCapture = 0x268; // ComponentProperty
	}

	namespace n_UPlayerAvatar_TA {
		constexpr auto Asset = 0x198; // ObjectProperty
	}

	namespace n_UNavMeshPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x78; // float
		constexpr auto bSoft = 0x7c; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x80; // float
	}

	namespace n_U__PlayerController_TA__InitNetworkSave_FE145733450BE62291E998BA1CF0E2F6 {
		constexpr auto NetworkSave = 0x60; // ObjectProperty
	}

	namespace n_UScriptedTextureComponent_TA {
		constexpr auto Resolution = 0xa8; // FVector
		constexpr auto Height = 0xb4; // float
		constexpr auto bFaceCamera = 0xb8; // uint32_t : 1
		constexpr auto Mesh = 0xc0; // ComponentProperty
		constexpr auto TextureTarget = 0xc8; // ObjectProperty
		constexpr auto Viewer = 0xd0; // ObjectProperty
	}

	namespace n_U__Wallet_TA__GetCurrency_1E190AE5448CCB80554ADB907B05694F {
		constexpr auto InCurrencyID = 0x60; // int32_t
	}

	namespace n_U__TourBracketCache_TA__RequestCached_3C4BD5DE4C1037794488DA95D056A429 {
		constexpr auto BracketIndex = 0x60; // int32_t
		constexpr auto Callback = 0x68; // DelegateProperty
	}

	namespace n_UInterpTrackInstAkEvent {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UPsyNetService_PersonaInfo_X {
		constexpr auto FromPlayer = 0x90; // FOnlinePersonaData
	}

	namespace n_UReservationBeacon_X {
		constexpr auto MessageHandlers = 0x70; // TArray<FBeaconMessageHandler>
		constexpr auto TcpBeacon = 0x80; // ComponentProperty
		constexpr auto PsyNetBeacon = 0x88; // ComponentProperty
		constexpr auto __MessageReceivedDelegate__Delegate = 0x90; // DelegateProperty
		constexpr auto __EventConnected__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UOnlineGameVersion_X {
		constexpr auto bUpdateRequired = 0x98; // uint32_t : 1
	}

	namespace n_UCameraState_IntroMenu_TA {
		constexpr auto FOV = 0x90; // float
		constexpr auto Offset = 0x94; // FVector
		constexpr auto BlendRate = 0xa0; // float
		constexpr auto Focus = 0xa8; // ObjectProperty
		constexpr auto FocusActors = 0xb0; // TArray<ObjectProperty>
		constexpr auto __EventFocusChanged__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_URB_Handle {
		constexpr auto GrabbedComponent = 0xa0; // ComponentProperty
		constexpr auto GrabbedBoneName = 0xa8; // FName
		constexpr auto SceneIndex = 0xb0; // int32_t
		constexpr auto bInHardware = 0xb4; // uint32_t : 1
		constexpr auto bRotationConstrained = 0xb4; // uint32_t : 1
		constexpr auto bInterpolating = 0xb4; // uint32_t : 1
		constexpr auto HandleData = 0xb8; // FPointer
		constexpr auto KinActorData = 0xc0; // FPointer
		constexpr auto LinearDamping = 0xc8; // float
		constexpr auto LinearStiffness = 0xcc; // float
		constexpr auto LinearStiffnessScale3D = 0xd0; // FVector
		constexpr auto LinearDampingScale3D = 0xdc; // FVector
		constexpr auto AngularDamping = 0xe8; // float
		constexpr auto AngularStiffness = 0xec; // float
		constexpr auto Destination = 0xf0; // FVector
		constexpr auto StepSize = 0xfc; // FVector
		constexpr auto Location = 0x108; // FVector
	}

	namespace n_ASpecialPickup_CarGravity_TA {
		constexpr auto GravityScale = 0x388; // float
		constexpr auto AddedForce = 0x38c; // FVector
		constexpr auto OrigGravityScale = 0x398; // float
	}

	namespace n_UMorphNodeWeightByBoneRotation {
		constexpr auto Angle = 0xb0; // float
		constexpr auto NodeWeight = 0xb4; // float
		constexpr auto BoneName = 0xb8; // FName
		constexpr auto BoneAxis = 0xc0; // EAxis
		constexpr auto bInvertBoneAxis = 0xc4; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0xc4; // uint32_t : 1
		constexpr auto WeightArray = 0xc8; // TArray<FBoneAngleMorph>
		constexpr auto MaterialSlotId = 0xd8; // int32_t
		constexpr auto ScalarParameterName = 0xdc; // FName
		constexpr auto MaterialInstanceConstant = 0xe8; // ObjectProperty
	}

	namespace n_USeqAct_MoveActor_TA {
		constexpr auto Actor = 0x178; // ObjectProperty
		constexpr auto MoveTransform = 0x180; // ObjectProperty
		constexpr auto InterpSpeed = 0x188; // float
		constexpr auto bConstantInterpSpeed = 0x18c; // uint32_t : 1
		constexpr auto bMove = 0x18c; // uint32_t : 1
	}

	namespace n_USeqCond_CompareString_TA {
		constexpr auto bIgnoreCase = 0x140; // uint32_t : 1
		constexpr auto StringA = 0x148; // FString
		constexpr auto StringB = 0x158; // FString
	}

	namespace n_URPC_UpdateTwoFactorStatus_TA {
		constexpr auto EpicAuthTicket = 0xe8; // FString
	}

	namespace n_AGameInfo_GFxMenu_TA {
		constexpr auto CarPreviewSet = 0x4d8; // ObjectProperty
		constexpr auto PremiumPreviewSet = 0x4e0; // ObjectProperty
		constexpr auto ExplosionPreviewer = 0x4e8; // ComponentProperty
		constexpr auto MenuSequencer = 0x4f0; // ComponentProperty
		constexpr auto UIStateNames = 0x4f8; // FString [0x2]
		constexpr auto UISoundState_MainMenu = 0x518; // FName
		constexpr auto CinematicSequences = 0x520; // TArray<ObjectProperty>
		constexpr auto __EventIntroCarsInPosition__Delegate = 0x530; // DelegateProperty
		constexpr auto __EventUIStateChanged__Delegate = 0x548; // DelegateProperty
	}

	namespace n_USpeechRecognition {
		constexpr auto Language = 0x60; // FString
		constexpr auto ConfidenceThreshhold = 0x70; // float
		constexpr auto Vocabularies = 0x78; // TArray<FRecogVocabulary>
		constexpr auto VoiceData = 0x88; // TArray<char>
		constexpr auto WorkingVoiceData = 0x98; // TArray<char>
		constexpr auto UserData = 0xa8; // TArray<char>
		constexpr auto InstanceData = 0xb8; // FRecogUserData [0x4]
		constexpr auto bDirty = 0x118; // uint32_t : 1
		constexpr auto bInitialised = 0x118; // uint32_t : 1
		constexpr auto FnxVoiceData = 0x120; // FPointer
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x60; // FSoundClassProperties
		constexpr auto ChildClassNames = 0x80; // TArray<FName>
		constexpr auto bIsChild = 0x90; // uint32_t : 1
		constexpr auto MenuID = 0x94; // int32_t
		constexpr auto EditorData = 0x98; // TMap<None, None>
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x60; // int32_t
		constexpr auto Frames = 0x68; // TArray<FParticleSystemReplayFrame>
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x78; // uint32_t : 1
		constexpr auto bModulatePitch = 0x78; // uint32_t : 1
		constexpr auto AmplitudeMin = 0x7c; // float
		constexpr auto AmplitudeMax = 0x80; // float
		constexpr auto FrequencyMin = 0x84; // float
		constexpr auto FrequencyMax = 0x88; // float
		constexpr auto OffsetMin = 0x8c; // float
		constexpr auto OffsetMax = 0x90; // float
		constexpr auto CenterMin = 0x94; // float
		constexpr auto CenterMax = 0x98; // float
		constexpr auto Amplitude = 0xa0; // FRawDistributionFloat
		constexpr auto Frequency = 0xc8; // FRawDistributionFloat
		constexpr auto Offset = 0xf0; // FRawDistributionFloat
		constexpr auto Center = 0x118; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0xc0; // float
	}

	namespace n_UParticleModuleSizeScaleOverDensity {
		constexpr auto SizeScaleOverDensity = 0x70; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0xc0; // TArray<FString>
	}

	namespace n_UPBRuleNodeSize {
		constexpr auto SizeAxis = 0x98; // EProcBuildingAxis
		constexpr auto DecisionSize = 0x9c; // float
		constexpr auto bUseTopLevelScopeSize = 0xa0; // uint32_t : 1
	}

	namespace n_U__WebCache_X__DownloadData_380C54494951F93BA9C5C0936FE5BDFA {
		constexpr auto WebRequest = 0x60; // ObjectProperty
	}

	namespace n_URPC_UpdateClubColors_X {
		constexpr auto PrimaryColor = 0xf8; // int32_t
		constexpr auto AccentColor = 0xfc; // int32_t
	}

	namespace n_UBTRandomSelector {
		constexpr auto ChildWeights = 0xc8; // TArray<float>
		constexpr auto RemainingChildren = 0xd8; // TArray<int32_t>
	}

	namespace n_UGameplaySettingsSave_TA {
		constexpr auto VoiceFilter = 0xc8; // EVoiceFilter
		constexpr auto ChatFilter = 0xc9; // EVoiceFilter
		constexpr auto EffectIntensity = 0xca; // EEffectsIntensity
		constexpr auto StatEventDisplayLevel = 0xcb; // EStatEventDisplayLevels
		constexpr auto StatGraphLevel = 0xcc; // EStatGraphLevel
		constexpr auto SafeZoneRatio = 0xd0; // float
		constexpr auto UIScale = 0xd4; // float
		constexpr auto bColorBlind = 0xd8; // uint32_t : 1
		constexpr auto bForceDefaultColors = 0xd8; // uint32_t : 1
		constexpr auto bEnableHorizontalSplitscreen = 0xd8; // uint32_t : 1
		constexpr auto bEnableFreeplayUnlimitedBoost = 0xd8; // uint32_t : 1
		constexpr auto bUseSteamInput = 0xd8; // uint32_t : 1
		constexpr auto NameplateScale = 0xdc; // float
		constexpr auto __VoiceFilter__ChangeNotify = 0xe0; // DelegateProperty
		constexpr auto __ChatFilter__ChangeNotify = 0xf8; // DelegateProperty
		constexpr auto __bEnableFreeplayUnlimitedBoost__ChangeNotify = 0x110; // DelegateProperty
		constexpr auto __bUseSteamInput__ChangeNotify = 0x128; // DelegateProperty
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x280; // ObjectProperty
		constexpr auto PS_CameraEffectNonExtremeContent = 0x288; // ObjectProperty
		constexpr auto BaseFOV = 0x290; // float
		constexpr auto DistFromCamera = 0x294; // float
		constexpr auto bAllowMultipleInstances = 0x298; // uint32_t : 1
		constexpr auto EmittersToTreatAsSame = 0x2a0; // TArray<FNone*>
		constexpr auto BaseCamera = 0x2b0; // ObjectProperty
	}

	namespace n_USeqAct_StreamInTextures {
		constexpr auto bLocationBased = 0x178; // uint32_t : 1
		constexpr auto bStreamingActive = 0x178; // uint32_t : 1
		constexpr auto bHasTriggeredAllLoaded = 0x178; // uint32_t : 1
		constexpr auto Seconds = 0x17c; // float
		constexpr auto StreamingDistanceMultiplier = 0x180; // float
		constexpr auto NumWantingResourcesID = 0x184; // int32_t
		constexpr auto StopTimestamp = 0x188; // float
		constexpr auto LocationActors = 0x190; // TArray<ObjectProperty>
		constexpr auto ForceMaterials = 0x1a0; // TArray<ObjectProperty>
		constexpr auto CinematicTextureGroups = 0x1b0; // FTextureGroupContainer
		constexpr auto SelectedCinematicTextureGroups = 0x1b4; // int32_t
	}

	namespace n_UReplayPackageMap_TA {
		constexpr auto Replay = 0x120; // ObjectProperty
		constexpr auto ObjectTable = 0x148; // TArray<ObjectProperty>
	}

	namespace n_UGetUploadUrlsPlayer_TA {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto ActorID = 0xa8; // int32_t
	}

	namespace n_USeqAct_SetParticleSysParam {
		constexpr auto InstanceParameters = 0x160; // TArray<FParticleSysParam>
		constexpr auto bOverrideScalar = 0x170; // uint32_t : 1
		constexpr auto bOverrideVector = 0x170; // uint32_t : 1
		constexpr auto ScalarValue = 0x174; // float
		constexpr auto VectorValue = 0x178; // FVector
	}

	namespace n_ACarComponent_FlipCar_TA {
		constexpr auto FlipCarImpulse = 0x2e0; // float
		constexpr auto FlipCarTorque = 0x2e4; // float
		constexpr auto FlipCarTime = 0x2e8; // float
		constexpr auto bFlipRight = 0x2ec; // uint32_t : 1
	}

	namespace n_UBuildInfo_TA {
		constexpr auto VersionString = 0x60; // FString
		constexpr auto Changelist = 0x70; // int32_t
		constexpr auto Branch = 0x78; // FString
		constexpr auto Label = 0x88; // FString
	}

	namespace n_U__MatchSeries_TA__GetSeriesWinnerFromData_6F0B4806435F51077B6C12BA9EE9D63D {
		constexpr auto HalfMatchGames = 0x60; // int32_t
	}

	namespace n_UAnimNodeSequence {
		constexpr auto AnimSeqName = 0x130; // FName
		constexpr auto Rate = 0x138; // float
		constexpr auto bPlaying = 0x13c; // uint32_t : 1
		constexpr auto bLooping = 0x13c; // uint32_t : 1
		constexpr auto bCauseActorAnimEnd = 0x13c; // uint32_t : 1
		constexpr auto bCauseActorAnimPlay = 0x13c; // uint32_t : 1
		constexpr auto bZeroRootRotation = 0x13c; // uint32_t : 1
		constexpr auto bZeroRootTranslation = 0x13c; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x13c; // uint32_t : 1
		constexpr auto bNoNotifies = 0x13c; // uint32_t : 1
		constexpr auto bForceRefposeWhenNotPlaying = 0x13c; // uint32_t : 1
		constexpr auto bIsIssuingNotifies = 0x13c; // uint32_t : 1
		constexpr auto bForceAlwaysSlave = 0x13c; // uint32_t : 1
		constexpr auto bSynchronize = 0x13c; // uint32_t : 1
		constexpr auto bReverseSync = 0x13c; // uint32_t : 1
		constexpr auto bShowTimeLineSlider = 0x13c; // uint32_t : 1
		constexpr auto bLoopCameraAnim = 0x13c; // uint32_t : 1
		constexpr auto bRandomizeCameraAnimLoopStartTime = 0x13c; // uint32_t : 1
		constexpr auto bEditorOnlyAddRefPoseToAdditiveAnimation = 0x13c; // uint32_t : 1
		constexpr auto bCheckForFinishAnimEarly = 0x13c; // uint32_t : 1
		constexpr auto bBlendingOut = 0x13c; // uint32_t : 1
		constexpr auto CurrentTime = 0x140; // float
		constexpr auto PreviousTime = 0x144; // float
		constexpr auto EndTime = 0x148; // float
		constexpr auto AnimSeq = 0x150; // ObjectProperty
		constexpr auto AnimLinkupIndex = 0x158; // int32_t
		constexpr auto NotifyWeightThreshold = 0x15c; // float
		constexpr auto SynchGroupName = 0x160; // FName
		constexpr auto SynchPosOffset = 0x168; // float
		constexpr auto CameraAnim = 0x170; // ObjectProperty
		constexpr auto ActiveCameraAnimInstance = 0x178; // ObjectProperty
		constexpr auto CameraAnimScale = 0x180; // float
		constexpr auto CameraAnimPlayRate = 0x184; // float
		constexpr auto CameraAnimBlendInTime = 0x188; // float
		constexpr auto CameraAnimBlendOutTime = 0x18c; // float
		constexpr auto RootBoneOption = 0x190; // ERootBoneAxis [0x3]
		constexpr auto RootRotationOption = 0x193; // ERootRotationOption [0x3]
		constexpr auto MetaDataSkelControlList = 0x198; // TArray<ObjectProperty>
	}

	namespace n_URPC_UpdateGameServer_X {
		constexpr auto ServerId = 0xe8; // QWordProperty
		constexpr auto Playlist = 0xf0; // int32_t
		constexpr auto MaxPlayers = 0xf4; // int32_t
		constexpr auto NumPlayersTeam1 = 0xf8; // int32_t
		constexpr auto NumPlayersTeam2 = 0xfc; // int32_t
		constexpr auto ReservationsTeam1 = 0x100; // int32_t
		constexpr auto ReservationsTeam2 = 0x104; // int32_t
		constexpr auto bIsPostGame = 0x108; // uint32_t : 1
		constexpr auto bIsBotMatch = 0x108; // uint32_t : 1
		constexpr auto TimeRemaining = 0x10c; // int32_t
		constexpr auto ExclusivePlatform = 0x110; // FString
		constexpr auto PlayersPlatforms = 0x120; // TArray<FString>
		constexpr auto PlayerIDs = 0x130; // TArray<FUniqueNetId>
		constexpr auto AbandonedPlayerIDs = 0x140; // TArray<FUniqueNetId>
		constexpr auto CustomServerName = 0x150; // FString
		constexpr auto CustomServerPassword = 0x160; // FString
		constexpr auto ScoreTeam1 = 0x170; // int32_t
		constexpr auto ScoreTeam2 = 0x174; // int32_t
		constexpr auto ClubID = 0x178; // int32_t
	}

	namespace n_ACar_TA {
		constexpr auto DefaultCarComponents = 0x8a0; // TArray<ObjectProperty>
		constexpr auto EngineAudio = 0x8b0; // ComponentProperty
		constexpr auto EngineAudioRev = 0x8b8; // ComponentProperty
		constexpr auto ThrottleShake = 0x8c0; // ComponentProperty
		constexpr auto FlipComponent = 0x8c8; // ObjectProperty
		constexpr auto DemolishTarget = 0x8d0; // EDemolishTarget
		constexpr auto DemolishSpeed = 0x8d1; // EDemolishSpeed
		constexpr auto Loadout = 0x8d8; // ComponentProperty
		constexpr auto bLoadoutSet = 0x8e0; // uint32_t : 1
		constexpr auto bDemolishOnOpposingGround = 0x8e0; // uint32_t : 1
		constexpr auto bWasOnOpposingGround = 0x8e0; // uint32_t : 1
		constexpr auto bDemolishOnGoalZone = 0x8e0; // uint32_t : 1
		constexpr auto bWasInGoalZone = 0x8e0; // uint32_t : 1
		constexpr auto bOverrideHandbrakeOn = 0x8e0; // uint32_t : 1
		constexpr auto bTeamBumpsUseCarForceMultiplier = 0x8e0; // uint32_t : 1
		constexpr auto bOverrideBoostOn = 0x8e0; // uint32_t : 1
		constexpr auto bUseDefaultLoadout = 0x8e0; // uint32_t : 1
		constexpr auto ExitFXArchetype = 0x8e8; // ObjectProperty
		constexpr auto DemolishExplosionArchetype = 0x8f0; // ObjectProperty
		constexpr auto DemolishExplosion = 0x8f8; // ObjectProperty
		constexpr auto BallIndicatorArchetype = 0x900; // ComponentProperty
		constexpr auto BallIndicator = 0x908; // ComponentProperty
		constexpr auto MaxTimeForDodge = 0x910; // float
		constexpr auto LastWheelsHitBallTime = 0x914; // float
		constexpr auto TeamPaint = 0x918; // FLoadoutTeamPaint
		constexpr auto ClubColors = 0x928; // FClubColorSet
		constexpr auto ReplicatedCarScale = 0x930; // float
		constexpr auto ReplicatedDemolish = 0x938; // FDemolishData
		constexpr auto ReplicatedDemolish_CustomFX = 0x960; // FDemolishData2
		constexpr auto ReplicatedDemolishGoalExplosion = 0x990; // FDemolishDataGoalExplosion
		constexpr auto BodyFXActor = 0x9c0; // ObjectProperty
		constexpr auto AttackerPRI = 0x9c8; // ObjectProperty
		constexpr auto MouseAccel = 0x9d0; // FVector
		constexpr auto MouseAirAccel = 0x9dc; // FVector
		constexpr auto AttachedPickup = 0x9e8; // ObjectProperty
		constexpr auto RumblePickups = 0x9f0; // ObjectProperty
		constexpr auto ReplayFocusOffset = 0x9f8; // FVector
		constexpr auto AddedBallForceMultiplier = 0xa04; // float
		constexpr auto AddedCarForceMultiplier = 0xa08; // float
		constexpr auto CarTrajectoryComponent = 0xa10; // ComponentProperty
		constexpr auto GameEvent = 0xa18; // ObjectProperty
		constexpr auto NameplateComponentCar = 0xa20; // ComponentProperty
		constexpr auto ExplosionHitHandler = 0xa28; // ComponentProperty
		constexpr auto ReplicatedCarMaxLinearSpeedScale = 0xa30; // float
		constexpr auto __EventVehicleSetup__Delegate = 0xa38; // DelegateProperty
		constexpr auto __EventBumpedCar__Delegate = 0xa50; // DelegateProperty
		constexpr auto __EventDemolished__Delegate = 0xa68; // DelegateProperty
		constexpr auto __EventTeamSet__Delegate = 0xa80; // DelegateProperty
		constexpr auto __EventTeamPaintChanged__Delegate = 0xa98; // DelegateProperty
		constexpr auto __EventHitBall__Delegate = 0xab0; // DelegateProperty
		constexpr auto __EventLanded__Delegate = 0xac8; // DelegateProperty
		constexpr auto __EventSuperSonicChanged__Delegate = 0xae0; // DelegateProperty
		constexpr auto __EventHitWorld__Delegate = 0xaf8; // DelegateProperty
		constexpr auto __RumblePickups__ChangeNotify = 0xb10; // DelegateProperty
	}

	namespace n_UIdleFeature_TA {
		constexpr auto IdleActionTime = 0x60; // float
		constexpr auto IdleWarningTime = 0x64; // float
	}

	namespace n_UGFxData_ESportConfig_TA {
		constexpr auto ESportEvents = 0x98; // ObjectProperty
	}

	namespace n_U__ProductAsset_Attachment_TA__ModifyThumbnailScene_91BD11E94F8240C8CAEB51BCB7D60FB1 {
		constexpr auto AttachSKC = 0x60; // ComponentProperty
	}

	namespace n_U__GFxData_PlayerBanners_TA__CreatePlayerBannerPreview_4AC0023D4F40255EE98F778B29D2509B {
		constexpr auto OnlineProduct = 0x60; // ObjectProperty
		constexpr auto InColorID = 0x68; // int32_t
		constexpr auto HashID = 0x6c; // FProductHashID
	}

	namespace n_UGFxData_MapPrefs_TA {
		constexpr auto PlaylistTypes = 0x98; // TArray<FGFxPlaylistType>
		constexpr auto MapTypes = 0xa8; // TArray<FGFxMapType>
		constexpr auto Playlists = 0xb8; // TArray<FGFxMapPlaylist>
		constexpr auto Maps = 0xc8; // TArray<FGFxMapPreference>
		constexpr auto MapPrefsConfig = 0xd8; // ObjectProperty
		constexpr auto MapPrefsSave = 0xe0; // ObjectProperty
		constexpr auto MapsConfig = 0xe8; // ObjectProperty
	}

	namespace n_URPC_PlatformAuth_TA {
		constexpr auto NintendoAccountID = 0xe8; // FString
	}

	namespace n_UOnlineSubsystem {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto AccountInterface = 0x68; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x78; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x88; // TScriptInterface<Class>
		constexpr auto MarketplaceInterface = 0x98; // TScriptInterface<Class>
		constexpr auto SystemInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameInterface = 0xb8; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0xc8; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0xd8; // TScriptInterface<Class>
		constexpr auto StatsInterface = 0xe8; // TScriptInterface<Class>
		constexpr auto NewsInterface = 0xf8; // TScriptInterface<Class>
		constexpr auto PartyChatInterface = 0x108; // TScriptInterface<Class>
		constexpr auto TitleFileInterface = 0x118; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x128; // TScriptInterface<Class>
		constexpr auto UserCloudInterface = 0x138; // TScriptInterface<Class>
		constexpr auto SharedCloudInterface = 0x148; // TScriptInterface<Class>
		constexpr auto SocialInterface = 0x158; // TScriptInterface<Class>
		constexpr auto AuthInterface = 0x168; // TScriptInterface<Class>
		constexpr auto PersistentAuthInterface = 0x178; // TScriptInterface<Class>
		constexpr auto GameDVRInterface = 0x188; // TScriptInterface<Class>
		constexpr auto CommunityContentInterface = 0x198; // TScriptInterface<Class>
		constexpr auto PurchaseInterface = 0x1a8; // TScriptInterface<Class>
		constexpr auto LobbyInterface = 0x1b8; // TScriptInterface<Class>
		constexpr auto FriendsInterface = 0x1c8; // TScriptInterface<Class>
		constexpr auto SearchClass = 0x1d8; // FNone*
		constexpr auto bSupportsMultiSignin = 0x1e0; // uint32_t : 1
		constexpr auto bSupportsMultiVoice = 0x1e0; // uint32_t : 1
		constexpr auto bShowPrivilegeCheckErrors = 0x1e0; // uint32_t : 1
		constexpr auto AccountSettings = 0x1e8; // TArray<ComponentProperty>
		constexpr auto SteamDLC = 0x1f8; // TArray<FSteamDLCInfo>
		constexpr auto PS4DLC = 0x208; // TArray<FPS4DLCInfo>
		constexpr auto XboxOneDLC = 0x218; // TArray<FXboxOneDLCInfo>
		constexpr auto SwitchDLC = 0x228; // TArray<FSwitchDLCInfo>
		constexpr auto EpicDLC = 0x238; // TArray<FEpicDLCInfo>
		constexpr auto OnlinePlatformType = 0x248; // OnlinePlatform
		constexpr auto CurrentConnectionStatus = 0x249; // EOnlineServerConnectionStatus
		constexpr auto OnlineSubsystemNames = 0x250; // TArray<FString>
		constexpr auto NamedInterfaces = 0x260; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x270; // TArray<FNamedInterfaceDef>
		constexpr auto Sessions = 0x280; // TArray<FNamedSession>
		constexpr auto IniLocPatcherClassName = 0x290; // FString
		constexpr auto Patcher = 0x2a0; // ObjectProperty
		constexpr auto AsyncMinCompletionTime = 0x2a8; // float
		constexpr auto __FeaturePrivilegeLevelUpdated__Delegate = 0x2b0; // DelegateProperty
		constexpr auto __EventPlatformAccountSettingsCreated__Delegate = 0x2c8; // DelegateProperty
		constexpr auto __OnReadOnlineAvatarComplete__Delegate = 0x2e0; // DelegateProperty
		constexpr auto __OnSystemUserControllerPairingChanged__Delegate = 0x2f8; // DelegateProperty
	}

	namespace n_UGFxData_QuickChatBindings_TA {
		constexpr auto AllQuickChats = 0x98; // TArray<FLocalizedQuickChat>
		constexpr auto Bindings = 0xa8; // TArray<FLocalizedQuickChatBinding>
		constexpr auto QuickChats = 0xb8; // TArray<FName>
		constexpr auto PostGameQuickChats = 0xc8; // TArray<FName>
		constexpr auto PreGameQuickChats = 0xd8; // TArray<FName>
		constexpr auto QuickChatSave = 0xe8; // ObjectProperty
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x60; // float
	}

	namespace n_UEpicConfig_X {
		constexpr auto bPollDuringAccountLinking = 0x78; // uint32_t : 1
		constexpr auto SecondsBetweenPolling = 0x7c; // int32_t
		constexpr auto SecondsBeforeRequestsTimeout = 0x80; // int32_t
		constexpr auto SecondsToWaitBeforeRetryingAuth = 0x84; // int32_t
		constexpr auto SecondsToWaitBeforeUpdatingFriendsList = 0x88; // int32_t
		constexpr auto AccountLinkURLOverrides = 0x90; // TArray<ObjectProperty>
		constexpr auto DefaultAccountLinkURL = 0xa0; // FString
		constexpr auto ProductionPermissionServerURL = 0xb0; // FString
		constexpr auto AccountPermissionsURL = 0xc0; // FString
		constexpr auto ChatPermissionPairs = 0xd0; // TArray<FPermissionPair>
		constexpr auto DefaultPermissionLevel = 0xe0; // EChatPermissionLevel
		constexpr auto SandboxId = 0xe8; // FString
		constexpr auto DeploymentId = 0xf8; // FString
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CylinderComponent = 0x288; // ComponentProperty
		constexpr auto TouchingActorEntryPosition = 0x290; // FVector
		constexpr auto FoliageVelocity = 0x29c; // FVector
		constexpr auto FoliageForce = 0x2a8; // FVector
		constexpr auto FoliagePosition = 0x2b4; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x2c0; // float
		constexpr auto FoliageTouchImpulseScale = 0x2c4; // float
		constexpr auto FoliageStiffness = 0x2c8; // float
		constexpr auto FoliageStiffnessQuadratic = 0x2cc; // float
		constexpr auto FoliageDamping = 0x2d0; // float
		constexpr auto MaxDamageImpulse = 0x2d4; // float
		constexpr auto MaxTouchImpulse = 0x2d8; // float
		constexpr auto MaxForce = 0x2dc; // float
		constexpr auto Mass = 0x2e0; // float
	}

	namespace n_UProductAttribute_UnlockForcedProducts_TA {
		constexpr auto bUnlockTeamColor = 0x80; // uint32_t : 1
		constexpr auto bUnlockCustomColor = 0x80; // uint32_t : 1
		constexpr auto SlotsToUnlock = 0x88; // TArray<ObjectProperty>
	}

	namespace n_USave_TA {
		constexpr auto SaveObjectManager = 0x60; // ObjectProperty
		constexpr auto DirectoryPath = 0x68; // FString
		constexpr auto SaveType = 0x78; // FString
		constexpr auto SaveExt = 0x88; // FString
		constexpr auto bExactFileMatch = 0x98; // uint32_t : 1
	}

	namespace n_UUIDataStore_DynamicResource {
		constexpr auto ProfileProvider = 0xa0; // ObjectProperty
		constexpr auto GameResourceDataStore = 0xa8; // ObjectProperty
		constexpr auto ResourceProviderDefinitions = 0xb0; // TArray<FDynamicResourceProviderDefinition>
		constexpr auto ResourceProviders = 0xc0; // FMultiMap_Mirror
	}

	namespace n_UCameraState_TA {
		constexpr auto bShowCarHUD = 0x90; // uint32_t : 1
		constexpr auto bAllowRearCamera = 0x90; // uint32_t : 1
		constexpr auto StateStartTime = 0x94; // float
	}

	namespace n_UMaterialExpressionMusicAnalysisParameter {
		constexpr auto MusicAnalysisShaderParamType = 0xc0; // EMusicAnalysisShaderParameterType
	}

	namespace n_ULensFlare {
		constexpr auto SourceElement = 0x60; // FLensFlareElement
		constexpr auto SourceMesh = 0x228; // ObjectProperty
		constexpr auto SourceDPG = 0x230; // ESceneDepthPriorityGroup
		constexpr auto ReflectionsDPG = 0x231; // ESceneDepthPriorityGroup
		constexpr auto Reflections = 0x238; // TArray<FLensFlareElement>
		constexpr auto OuterCone = 0x248; // float
		constexpr auto InnerCone = 0x24c; // float
		constexpr auto ConeFudgeFactor = 0x250; // float
		constexpr auto Radius = 0x254; // float
		constexpr auto bUseTrueConeCalculation = 0x258; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x258; // uint32_t : 1
		constexpr auto bRenderDebugLines = 0x258; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0x258; // uint32_t : 1
		constexpr auto MinStrength = 0x25c; // float
		constexpr auto ScreenPercentageMap = 0x260; // FRawDistributionFloat
		constexpr auto FixedRelativeBoundingBox = 0x288; // FBox
		constexpr auto CurveEdSetup = 0x2a8; // ObjectProperty
		constexpr auto ReflectionCount = 0x2b0; // int32_t
		constexpr auto ThumbnailAngle = 0x2b4; // FRotator
		constexpr auto ThumbnailDistance = 0x2c0; // float
		constexpr auto ThumbnailImage = 0x2c8; // ObjectProperty
	}

	namespace n_ABall_TA {
		constexpr auto StaticMesh = 0x7a8; // ComponentProperty
		constexpr auto TranslucentStaticMesh = 0x7b0; // ComponentProperty
		constexpr auto MeshTranslucency = 0x7b8; // float
		constexpr auto TranslucentMaterials = 0x7c0; // TArray<ObjectProperty>
		constexpr auto CarInteraction = 0x7d0; // FCarBallInteractionSettings
		constexpr auto EndOfGameFXArchetype = 0x808; // ObjectProperty
		constexpr auto ExplosionArchetype = 0x810; // ObjectProperty
		constexpr auto NoGoalExplosionArchetype = 0x818; // ObjectProperty
		constexpr auto bAllowPlayerExplosionOverride = 0x820; // uint32_t : 1
		constexpr auto bNotifyGroundHit = 0x820; // uint32_t : 1
		constexpr auto bEndOfGameHidden = 0x820; // uint32_t : 1
		constexpr auto bFadeIn = 0x820; // uint32_t : 1
		constexpr auto bFadeOut = 0x820; // uint32_t : 1
		constexpr auto bPredictionOnGround = 0x820; // uint32_t : 1
		constexpr auto bCanBeAttached = 0x820; // uint32_t : 1
		constexpr auto bItemFreeze = 0x820; // uint32_t : 1
		constexpr auto MagnusCoefficient = 0x824; // FVector
		constexpr auto BallCamTarget = 0x830; // ComponentProperty
		constexpr auto Radius = 0x838; // float
		constexpr auto VisualRadius = 0x83c; // float
		constexpr auto Touches = 0x840; // TArray<FBallHitInfo>
		constexpr auto LastCalculateCarHit = 0x850; // float
		constexpr auto InitialLocation = 0x854; // FVector
		constexpr auto InitialRotation = 0x860; // FRotator
		constexpr auto LastHitWorldTime = 0x86c; // float
		constexpr auto ReplicatedBallScale = 0x870; // float
		constexpr auto ReplicatedBallMesh = 0x878; // ObjectProperty
		constexpr auto ReplicatedWorldBounceScale = 0x880; // float
		constexpr auto ReplicatedBallGravityScale = 0x884; // float
		constexpr auto ReplicatedBallMaxLinearSpeedScale = 0x888; // float
		constexpr auto ReplicatedAddedCarBounceScale = 0x88c; // float
		constexpr auto AdditionalCarGroundBounceScaleZ = 0x890; // float
		constexpr auto AdditionalCarGroundBounceScaleXY = 0x894; // float
		constexpr auto ReplicatedPhysMatOverride = 0x898; // ObjectProperty
		constexpr auto HitTeamNum = 0x8a0; // char
		constexpr auto GameEvent = 0x8a8; // ObjectProperty
		constexpr auto ReplicatedExplosionData = 0x8b0; // FExplosionData
		constexpr auto ReplicatedExplosionDataExtended = 0x8c8; // FExplosionDataExtended
		constexpr auto Explosion = 0x8e8; // ObjectProperty
		constexpr auto ExplosionTime = 0x8f0; // float
		constexpr auto OldLocation = 0x8f4; // FVector
		constexpr auto FadeMaterials = 0x900; // TArray<ObjectProperty>
		constexpr auto PredictionTimestep = 0x910; // float
		constexpr auto PredictedPositions = 0x918; // TArray<FPredictedPosition>
		constexpr auto LastPredictionTime = 0x928; // float
		constexpr auto GoalPenetration = 0x930; // FGoalPenetrationData
		constexpr auto GroundForce = 0x958; // float
		constexpr auto CurrentAffector = 0x960; // ObjectProperty
		constexpr auto TrajectoryComponent = 0x968; // ComponentProperty
		constexpr auto PitchTekComponent = 0x970; // ComponentProperty
		constexpr auto GoalExplosionOrientation = 0x978; // ObjectProperty
		constexpr auto __EventCarTouch__Delegate = 0x980; // DelegateProperty
		constexpr auto __EventHitWorld__Delegate = 0x998; // DelegateProperty
		constexpr auto __EventHitGround__Delegate = 0x9b0; // DelegateProperty
		constexpr auto __EventHitGoal__Delegate = 0x9c8; // DelegateProperty
		constexpr auto __EventGameEventSet__Delegate = 0x9e0; // DelegateProperty
		constexpr auto __EventExploded__Delegate = 0x9f8; // DelegateProperty
		constexpr auto __EventHitTeamNumChanged__Delegate = 0xa10; // DelegateProperty
		constexpr auto __EventTrailIntensityChanged__Delegate = 0xa28; // DelegateProperty
	}

	namespace n_AFXActor_BreakoutPlatform_TA {
		constexpr auto PlatformMaterial = 0x360; // ObjectProperty
		constexpr auto RaysMaterial = 0x368; // ObjectProperty
		constexpr auto LocationParam = 0x370; // FName
		constexpr auto DamagedParams = 0x378; // TArray<FPlatformParam>
		constexpr auto BrokenParams = 0x388; // TArray<FPlatformParam>
		constexpr auto DamageSFX = 0x398; // ObjectProperty
		constexpr auto DirectBreakSFX = 0x3a0; // ObjectProperty
		constexpr auto IndirectBreakSFX = 0x3a8; // ObjectProperty
		constexpr auto DamageDistanceSpeed = 0x3b0; // float
		constexpr auto DamagedState = 0x3b8; // ObjectProperty
		constexpr auto BrokenState = 0x3c0; // ObjectProperty
		constexpr auto BreakoutPlatform = 0x3c8; // ObjectProperty
		constexpr auto MIC = 0x3d0; // ObjectProperty
		constexpr auto RaysMIC = 0x3d8; // ObjectProperty
		constexpr auto DamageState = 0x3e0; // char
		constexpr auto DamageTime = 0x3e4; // float
		constexpr auto BrokenTime = 0x3e8; // float
		constexpr auto RemainingTime = 0x3ec; // float
	}

	namespace n_USeqAct_SetReplayFX_TA {
		constexpr auto FocusDistance = 0x160; // float
		constexpr auto FocusBlur = 0x164; // int32_t
		constexpr auto FocusStrength = 0x168; // float
		constexpr auto bUseGreenScreen = 0x16c; // uint32_t : 1
		constexpr auto bUseVignetteOverlay = 0x16c; // uint32_t : 1
		constexpr auto GreenScreenColor = 0x170; // FLinearColor
		constexpr auto ImageFilterIndex = 0x180; // EImageFilterOptions
		constexpr auto ImageFilterIntensity = 0x184; // float
		constexpr auto Vignette = 0x188; // float
	}

	namespace n_UMatchBroadcastComponent_TA {
		constexpr auto MatchLog = 0x70; // ObjectProperty
		constexpr auto OnlineGame = 0x78; // ObjectProperty
	}

	namespace n_UMapDataLoader_TA {
		constexpr auto MapSelectors = 0x60; // TArray<FMapSelectorPair>
		constexpr auto MapImageLoadRequests = 0x70; // TArray<FMapImageLoadRequest>
	}

	namespace n_UPartyMessage_PartyMemberJoinGame_X {
		constexpr auto Server = 0xa8; // FPartyMemberServer
	}

	namespace n_URPC_ProductsTradeAllowed_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto OtherPlayerID = 0x130; // FUniqueNetId
		constexpr auto MaxCurrencyTradeAmount = 0x178; // int32_t
	}

	namespace n_UGFxData_ClubInvite_TA {
		constexpr auto ClubName = 0x128; // FString
		constexpr auto ClubTag = 0x138; // FString
		constexpr auto Invite = 0x148; // ObjectProperty
	}

	namespace n_ARoute {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x268; // FPointer
		constexpr auto RouteType = 0x270; // ERouteType
		constexpr auto RouteList = 0x278; // TArray<FActorReference>
		constexpr auto FudgeFactor = 0x288; // float
		constexpr auto RouteIndexOffset = 0x28c; // int32_t
	}

	namespace n_UCameraState_ReplayAutoCam_TA {
		constexpr auto FOVInterpSpeed = 0xb8; // float
		constexpr auto StartViewFocusTime = 0xbc; // float
		constexpr auto FocusPitchInterpSpeed = 0xc0; // float
		constexpr auto FocusYawInterpSpeed = 0xc4; // float
		constexpr auto AerialFOV = 0xc8; // float
		constexpr auto CountDownFOV = 0xcc; // float
		constexpr auto CountDownPanSpeed = 0xd0; // float
		constexpr auto CountDownRotateSpeed = 0xd4; // float
		constexpr auto CountDownPanBlendAmount = 0xd8; // float
		constexpr auto CountDownFocusActorStartTime = 0xdc; // float
		constexpr auto LocationBlendSpeed = 0xe0; // float
		constexpr auto BallAerialZStartTime = 0xe4; // float
		constexpr auto MinBallAerialZHeight = 0xe8; // float
		constexpr auto MinPlayerAerialZHeight = 0xec; // float
		constexpr auto MinFocusActorViewTime = 0xf0; // float
		constexpr auto BallFloorFocusPercent = 0xf4; // float
		constexpr auto LocationAngleInterpSpeed = 0xf8; // float
		constexpr auto LastLocationAngleUpdateTime = 0xfc; // float
		constexpr auto MinStartRadiusForPlayerAerial = 0x100; // float
		constexpr auto MaxStartRadiusForPlayerAerial = 0x104; // float
		constexpr auto DesiredCameraDistance = 0x108; // float
		constexpr auto ResetToMapDefaultTime = 0x10c; // float
		constexpr auto MaxWaitTimeTillBallHit = 0x110; // float
		constexpr auto FocusActorZViewOffset = 0x114; // float
		constexpr auto FloorTraceDistance = 0x118; // float
		constexpr auto BackAwayFromWallDistance = 0x11c; // float
		constexpr auto NoCarsNearBallDistance = 0x120; // float
		constexpr auto MinPlayerCameraFloorHeight = 0x124; // float
		constexpr auto FocusPointInterpSpeed = 0x128; // float
		constexpr auto MinMaxPitch = 0x12c; // float
		constexpr auto LastDesiredLocationBlendSpeed = 0x130; // float
		constexpr auto AdditionalFocusZ = 0x134; // float
		constexpr auto TimeSinceIgnoredGoalFocusExtent = 0x138; // float
		constexpr auto LastTimeAPlayerWasNearBall = 0x13c; // float
		constexpr auto AdditionalBackAwayFromBallSpeed = 0x140; // float
		constexpr auto GoalScorerFocusDistance = 0x144; // float
		constexpr auto MapResetStartDistance = 0x148; // float
		constexpr auto MapResetStartHeight = 0x14c; // float
		constexpr auto GoalScoredDistance = 0x150; // float
		constexpr auto MaxGoalYZoomOutDistance = 0x154; // float
		constexpr auto MaxGoalXZoomOutDistance = 0x158; // float
		constexpr auto MinCameraDistanceToBall = 0x15c; // float
		constexpr auto bSnapFOV = 0x160; // uint32_t : 1
		constexpr auto bSnapToFocus = 0x160; // uint32_t : 1
		constexpr auto bBallHasBeenHit = 0x160; // uint32_t : 1
		constexpr auto bHasGoalScorerFocus = 0x160; // uint32_t : 1
		constexpr auto bHitWallLastFrame = 0x160; // uint32_t : 1
		constexpr auto BallFloorLocation = 0x164; // FVector
		constexpr auto BallFloorNormal = 0x170; // FVector
		constexpr auto LastCarFocusOffset = 0x17c; // FVector
		constexpr auto CountDownPanDirection = 0x188; // FVector
		constexpr auto CountDownPanStartOffset = 0x194; // FVector
		constexpr auto CountDownRotateOffset = 0x1a0; // FVector
		constexpr auto LastFocusOffset = 0x1ac; // FVector
		constexpr auto LastFocusLocation = 0x1b8; // FVector
		constexpr auto LastDesiredLocation = 0x1c4; // FVector
		constexpr auto LocationAngle = 0x1d0; // FRotator
		constexpr auto DesiredLocationAngle = 0x1dc; // FRotator
		constexpr auto DesiredRotation = 0x1e8; // FRotator
		constexpr auto MapResetStartRotation = 0x1f4; // FRotator
		constexpr auto FocusActor = 0x200; // ObjectProperty
		constexpr auto LastScorer = 0x208; // ObjectProperty
		constexpr auto AerialPRIs = 0x210; // TArray<ObjectProperty>
		constexpr auto CountDownPRIs = 0x220; // TArray<ObjectProperty>
		constexpr auto GoalFocus = 0x230; // ComponentProperty
		constexpr auto CountDownFocusType = 0x238; // ECountDownFocus
		constexpr auto Ball = 0x240; // ObjectProperty
		constexpr auto SoccarGame = 0x248; // ObjectProperty
		constexpr auto ReplayCameraState = 0x250; // ObjectProperty
		constexpr auto CameraDistanceLimits = 0x258; // FProfileSliderLimits
		constexpr auto CameraZLimits = 0x264; // FProfileSliderLimits
		constexpr auto CameraMoveSpeedLimits = 0x270; // FProfileSliderLimits
		constexpr auto CameraMoveSpeedZLimits = 0x27c; // FProfileSliderLimits
		constexpr auto PlayerCameraDistanceLimits = 0x288; // FProfileSliderLimits
		constexpr auto RotateSpeedLimits = 0x294; // FProfileSliderLimits
		constexpr auto PlayerFocusBlendSpeedLimits = 0x2a0; // FProfileSliderLimits
		constexpr auto AerialPredictionLimits = 0x2ac; // FProfileSliderLimits
		constexpr auto CameraSave = 0x2b8; // ObjectProperty
	}

	namespace n_UGFxClubAction_TA {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto ErrorMessage = 0x68; // FString
		constexpr auto __StartTaskDelegate__Delegate = 0x78; // DelegateProperty
		constexpr auto __EventComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_U__TourService_PsyNet_TA__CheckIn_1A41B52542B0AB088538329DE63FB3AC {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto TourSettings = 0x78; // ObjectProperty
		constexpr auto Settings = 0x80; // FCustomMatchTeamSettings
		constexpr auto AllTeamMemberIDs = 0xa0; // TArray<FUniqueNetId>
	}

	namespace n_USupportACreatorErrors_TA {
		constexpr auto InvalidSupportACreatorCode = 0x80; // ObjectProperty
	}

	namespace n_USeqEvent_GarageComplexState_TA {
		constexpr auto GarageState = 0x180; // FString
		constexpr auto PreviousGarageState = 0x190; // FString
	}

	namespace n_ASpecialPickup_GrapplingHook_TA {
		constexpr auto Impulse = 0x3c0; // float
		constexpr auto Force = 0x3c4; // float
		constexpr auto MaxRopeLength = 0x3c8; // float
		constexpr auto PredictionSpeed = 0x3cc; // float
		constexpr auto bDeactivateOnTouch = 0x3d0; // uint32_t : 1
		constexpr auto bInstant = 0x3d0; // uint32_t : 1
		constexpr auto bBlocked = 0x3d0; // uint32_t : 1
		constexpr auto bAttachedToBall = 0x3d0; // uint32_t : 1
		constexpr auto RopeLengthCurve = 0x3d8; // FInterpCurveFloat
		constexpr auto RopeMesh = 0x3f0; // ObjectProperty
		constexpr auto RopeMeshScale = 0x3f8; // FVector
		constexpr auto RopeMeshInitialSize = 0x404; // float
		constexpr auto RopeRotationOffset = 0x408; // FRotator
		constexpr auto RopeMeshSlackParam = 0x414; // FName
		constexpr auto RopeMeshGravityParam = 0x41c; // FName
		constexpr auto HookMesh = 0x428; // ObjectProperty
		constexpr auto HookMeshScale = 0x430; // FVector
		constexpr auto HookMeshOffset = 0x43c; // FVector
		constexpr auto HookRotationOffset = 0x448; // FRotator
		constexpr auto HitDistanceOffset = 0x454; // float
		constexpr auto AfterAttachDuration = 0x458; // float
		constexpr auto HookAnimSet = 0x460; // ObjectProperty
		constexpr auto HookClosedAnim = 0x468; // FName
		constexpr auto HookOpenAnim = 0x470; // FName
		constexpr auto BlockedRequiredMoveDistance = 0x478; // float
		constexpr auto BlockedRequiredMoveTime = 0x47c; // float
		constexpr auto BlockedStartTime = 0x480; // float
		constexpr auto BlockedStartPos = 0x484; // FVector
		constexpr auto RMC = 0x490; // ComponentProperty
		constexpr auto RMI = 0x498; // ObjectProperty
		constexpr auto HMC = 0x4a0; // ComponentProperty
		constexpr auto Ball = 0x4a8; // ObjectProperty
		constexpr auto RopeOrigin = 0x4b0; // FVector
		constexpr auto RopeToTime = 0x4bc; // float
		constexpr auto CurrentRopeLength = 0x4c0; // float
		constexpr auto AttachTime = 0x4c4; // float
	}

	namespace n_UCameraStateSelector_Priority_TA {
		constexpr auto PriorityStates = 0x88; // TArray<FStateParams>
		constexpr auto bSelectFirst = 0x98; // uint32_t : 1
	}

	namespace n_ASpecialPickup_BallCarSpring_TA {
		constexpr auto SpringMeshDistanceParam = 0x568; // FName
	}

	namespace n_UWebApplication {
		constexpr auto WorldInfo = 0x60; // ObjectProperty
		constexpr auto WebServer = 0x68; // ObjectProperty
		constexpr auto Path = 0x70; // FString
	}

	namespace n_ANxForceField {
		constexpr auto ExcludeChannel = 0x268; // int32_t
		constexpr auto bForceActive = 0x26c; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x270; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x274; // ERBCollisionChannel
		constexpr auto ForceField = 0x278; // FPointer
		constexpr auto ConvexMeshes = 0x280; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x290; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x2a0; // TArray<FPointer>
		constexpr auto U2NRotation = 0x2b0; // FPointer
		constexpr auto SceneIndex = 0x2b8; // int32_t
	}

	namespace n_UMultiCueSplineAudioComponent {
		constexpr auto SoundSlots = 0x320; // TArray<FMultiCueSplineSoundSlot>
		constexpr auto CurrentSlotIndex = 0x330; // int32_t
	}

	namespace n_UGameMode_TA {
		constexpr auto GameArchetype = 0x60; // ObjectProperty
		constexpr auto MapSet = 0x68; // ObjectProperty
		constexpr auto FreeplayMapSet = 0x70; // ObjectProperty
		constexpr auto StandardMapSet = 0x78; // ObjectProperty
		constexpr auto DisallowedMutatorCategories = 0x80; // TArray<FName>
		constexpr auto bEnabled = 0x90; // uint32_t : 1
		constexpr auto GameInfoClass = 0x98; // FNone*
		constexpr auto GameArchetypePath = 0xa0; // FString
	}

	namespace n_U__OnlineProductExpirationHelper_TA__HandleNotificationSaveAdded_AB3D01A5487075DE45DBF0B687604BA0 {
		constexpr auto OnlineProduct = 0x60; // ObjectProperty
	}

	namespace n_UBTC_TeamSize {
		constexpr auto MinTeamSize = 0x90; // int32_t
		constexpr auto MaxTeamSize = 0x94; // int32_t
	}

	namespace n_UGFxData_RewardDrop_XP_TA {
		constexpr auto bCanDropOnlineRewards = 0xa0; // uint32_t : 1
	}

	namespace n_USeqAct_DivideInt {
		constexpr auto ValueA = 0x160; // int32_t
		constexpr auto ValueB = 0x164; // int32_t
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_USeqEvent_Console {
		constexpr auto ConsoleEventName = 0x180; // FName
		constexpr auto EventDesc = 0x188; // FString
	}

	namespace n_UBTC_GameScore {
		constexpr auto ScoreDeltaGreaterThan = 0x90; // float
		constexpr auto ScoreDeltaLessThan = 0x94; // float
		constexpr auto ScoreDelta = 0x98; // int32_t
	}

	namespace n_UGFxData_LegacyStatus_TA {
		constexpr auto LegacyStatus = 0x98; // ELegacyBoxStatus
		constexpr auto LegacySetState = 0x99; // ELegacyStatusSetState
	}

	namespace n_AStaticMeshRBActor_TA {
		constexpr auto StaticMesh = 0x7a8; // ComponentProperty
		constexpr auto ApplyCollisionForceFrom = 0x7b0; // EApplyForceTo
		constexpr auto TouchBounceForce = 0x7b4; // float
		constexpr auto SpeedBounchForceMultiplier = 0x7b8; // float
		constexpr auto LinearConstraintsLower = 0x7bc; // FVector
		constexpr auto LinearConstraintsUpper = 0x7c8; // FVector
		constexpr auto AngularConstraintsLower = 0x7d4; // FVector
		constexpr auto AngularConstraintsUpper = 0x7e0; // FVector
	}

	namespace n_U__BotConfig_TA__RefreshIDs_F9A52CA34861048A1451C885D1FFF92D {
		constexpr auto ProductID = 0x60; // int32_t
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_ALiftExit {
		constexpr auto MyLiftCenter = 0x388; // ObjectProperty
		constexpr auto bExitOnly = 0x390; // uint32_t : 1
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x70; // FRawDistributionFloat
	}

	namespace n_UPBRuleNodeRepeat {
		constexpr auto RepeatAxis = 0x98; // EProcBuildingAxis
		constexpr auto RepeatMaxSize = 0x9c; // float
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto BoneName = 0x68; // FName
		constexpr auto RelativeLocation = 0x70; // FVector
		constexpr auto RelativeRotation = 0x7c; // FRotator
		constexpr auto RelativeScale = 0x88; // FVector
		constexpr auto PreviewSkelMesh = 0x98; // ObjectProperty
		constexpr auto PreviewSkelComp = 0xa0; // ComponentProperty
		constexpr auto PreviewStaticMesh = 0xa8; // ObjectProperty
		constexpr auto PreviewParticleSystem = 0xb0; // ObjectProperty
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x60; // TArray<FDelegateArray>
		constexpr auto __PlatformInterfaceDelegate__Delegate = 0x70; // DelegateProperty
	}

	namespace n_USpecialEventConfig_TA {
		constexpr auto StoreConfigs = 0x78; // TArray<FSpecialEventStoreConfigs>
		constexpr auto DebugMicroEventPlaylistIDs = 0x88; // TArray<FDebugMicroEventPlaylistID>
		constexpr auto CurrencyID = 0x98; // int32_t
		constexpr auto ShopID = 0x9c; // int32_t
		constexpr auto Title = 0xa0; // FString
		constexpr auto Subtitle = 0xb0; // FString
		constexpr auto RedemptionTitle = 0xc0; // FString
		constexpr auto Description = 0xd0; // FString
		constexpr auto RedemptionDescription = 0xe0; // FString
		constexpr auto CurrencyName = 0xf0; // FString
		constexpr auto CurrencyImageURL = 0x100; // FString
		constexpr auto CurrencyImageLargeURL = 0x110; // FString
		constexpr auto BackgroundImageURL = 0x120; // FString
		constexpr auto LogoImageURL = 0x130; // FString
		constexpr auto CurrencyColor = 0x140; // int32_t
		constexpr auto BackgroundColor = 0x144; // int32_t
		constexpr auto StartTime = 0x148; // QWordProperty
		constexpr auto StartTimeString = 0x150; // FString
		constexpr auto EndTime = 0x160; // QWordProperty
		constexpr auto EndTimeString = 0x168; // FString
		constexpr auto RedemptionEndTime = 0x178; // QWordProperty
		constexpr auto RedemptionEndTimeString = 0x180; // FString
		constexpr auto BackgroundImage = 0x190; // ObjectProperty
		constexpr auto CurrencyImage = 0x198; // ObjectProperty
		constexpr auto CurrencyImageLarge = 0x1a0; // ObjectProperty
		constexpr auto LogoImage = 0x1a8; // ObjectProperty
		constexpr auto bApplied = 0x1b0; // uint32_t : 1
		constexpr auto __CurrencyID__ChangeNotify = 0x1b8; // DelegateProperty
		constexpr auto __CurrencyImage__ChangeNotify = 0x1d0; // DelegateProperty
		constexpr auto __CurrencyImageLarge__ChangeNotify = 0x1e8; // DelegateProperty
		constexpr auto __bApplied__ChangeNotify = 0x200; // DelegateProperty
	}

	namespace n_U__CrowdActorManager_TA__StopCrowdSound_81DFC77F45DD31C8D65397B5E497A7C1 {
		constexpr auto GetSoundDelegate = 0x60; // DelegateProperty
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto SceneProxy = 0xa0; // FPointer
		constexpr auto Strength = 0xa8; // float
		constexpr auto Phase = 0xac; // float
		constexpr auto Frequency = 0xb0; // float
		constexpr auto Speed = 0xb4; // float
	}

	namespace n_UFakeData_X {
		constexpr auto RandomSeed = 0x60; // int32_t
		constexpr auto Data1 = 0x68; // FFakeData1
		constexpr auto Data2 = 0xa0; // FFakeData2
		constexpr auto Data3 = 0x130; // FFakeData3
		constexpr auto Data4 = 0x260; // FFakeData4
	}

	namespace n_U__AsyncTask__All_0AA348B54A3459915BE4E0ADF77FC3DC {
		constexpr auto DependentsCount = 0x60; // int32_t
		constexpr auto Parent = 0x68; // ObjectProperty
	}

	namespace n_UOnlinePlayerMTX_TA {
		constexpr auto bEntitlementsDirty = 0x60; // uint32_t : 1
		constexpr auto bClaimingEntitlements = 0x60; // uint32_t : 1
		constexpr auto bMtxCodeExpired = 0x60; // uint32_t : 1
		constexpr auto bAllowEntitlements = 0x60; // uint32_t : 1
		constexpr auto __EventClaimedEntitlements__Delegate = 0x68; // DelegateProperty
		constexpr auto __EventEntitlementsError__Delegate = 0x80; // DelegateProperty
	}

	namespace n_AGameEvent_GodBall_TA {
		constexpr auto LastScoredTeamIndex = 0xc78; // int32_t
		constexpr auto GoalBallSpawnOffset = 0xc7c; // FVector
		constexpr auto GoalPlayerSpawnOffset = 0xc88; // FVector
		constexpr auto BallKickOffDirection = 0xc94; // FVector
		constexpr auto BallKickOffScale = 0xca0; // float
		constexpr auto SpawnRadiusCheck = 0xca4; // float
	}

	namespace n_UProductAttribute_TA {
		constexpr auto Typename = 0x60; // FName
		constexpr auto bReplicated = 0x68; // uint32_t : 1
		constexpr auto bRequiresDynamicThumbnail = 0x68; // uint32_t : 1
		constexpr auto Label = 0x70; // FString
	}

	namespace n_UBoostMesh_TA {
		constexpr auto FadeInTime = 0x60; // FRandomRange
		constexpr auto FadeOutTime = 0x68; // FRandomRange
		constexpr auto MaterialParams = 0x70; // TArray<FAnimatedMaterialMesh>
		constexpr auto MaxMaterialTime = 0x80; // float
	}

	namespace n_UMutatorGameSettingPreset_TA {
		constexpr auto Presets = 0x68; // ObjectProperty
	}

	namespace n_AGameInfo_TrainingEditor_TA {
		constexpr auto bCanExportMatinee = 0x550; // uint32_t : 1
	}

	namespace n_USeqAct_GetGameBall_TA {
		constexpr auto Ball = 0x160; // ObjectProperty
	}

	namespace n_URPC_PurchaseItemFromShop_TA {
		constexpr auto ShopItemCostID = 0xe8; // int32_t
		constexpr auto ShopID = 0xec; // int32_t
		constexpr auto ShopDiscountID = 0xf0; // int32_t
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
		constexpr auto Count = 0x140; // int32_t
		constexpr auto ProductData = 0x148; // TArray<FOnlineProductData>
		constexpr auto CurrencyData = 0x158; // TArray<FCurrency>
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0xc0; // FExpressionInput
		constexpr auto Exponent = 0xf8; // FExpressionInput
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0x158; // int32_t
		constexpr auto Format = 0x15c; // EPixelFormat
	}

	namespace n_UAkMusicDevice {
		constexpr auto __EventTrackStart__Delegate = 0x60; // DelegateProperty
		constexpr auto __EventTrackEnd__Delegate = 0x78; // DelegateProperty
	}

	namespace n_U__TAsyncResult__PsyNetMessage_X__Copy_529C42EE40A7358E4202E297AD847CB0 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_UEngineAudioRevSimResistance_TA {
		constexpr auto Clutched = 0x70; // float
		constexpr auto ZScale = 0x74; // float
		constexpr auto SideSpeedCurve = 0x78; // FInterpCurveFloat
		constexpr auto SideFriction = 0x90; // float
		constexpr auto ZFriction = 0x94; // float
		constexpr auto SideAngle = 0x98; // float
	}

	namespace n_UDefaultHitHandler_TA {
		constexpr auto ImpulseVelocityMultiplier = 0x150; // float
	}

	namespace n_UProductAttribute_UnlockMethod_TA {
		constexpr auto UnlockMethod = 0x80; // EUnlockMethod
	}

	namespace n_ARLBot_SessionRecorder_TA {
		constexpr auto MaxRecordSizeMB = 0x268; // int32_t
		constexpr auto Data = 0x270; // TArray<char>
		constexpr auto Archive = 0x280; // FPointer
		constexpr auto PlayerActorIDMap = 0x288; // TArray<FPlayerActorIDPair>
	}

	namespace n_UNameplateComponent_TA {
		constexpr auto PlayerName = 0xa8; // FString
		constexpr auto Team = 0xb8; // int32_t
		constexpr auto bIsLocalPlayer = 0xbc; // uint32_t : 1
		constexpr auto bIsReady = 0xbc; // uint32_t : 1
		constexpr auto bLocalizeName = 0xbc; // uint32_t : 1
		constexpr auto SpectatorShortcut = 0xc0; // int32_t
		constexpr auto __EventPlayerNameSet__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UMutator_TA {
		constexpr auto bRecordMetrics = 0x60; // uint32_t : 1
	}

	namespace n_UFirstTimeExperienceSave_TA {
		constexpr auto CompletedFTEs = 0xc8; // TArray<FCompletedFTEInfo>
		constexpr auto Versioning = 0xd8; // FTEVersioning
		constexpr auto LegacyGroupType = 0xd9; // FTELegacyGroupType
		constexpr auto ActiveGroup = 0xdc; // FName
		constexpr auto ActiveCheckpoint = 0xe4; // FName
		constexpr auto bTentativelyComplete = 0xec; // uint32_t : 1
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x60; // FLightmassPrimitiveSettings
	}

	namespace n_URotateComponent_TA {
		constexpr auto Momentum = 0xa8; // float
		constexpr auto LastMomentum = 0xac; // float
		constexpr auto RotationSpeed = 0xb0; // float
		constexpr auto CurrentRotation = 0xb4; // FRotator
		constexpr auto TurntableDirection = 0xc0; // float
		constexpr auto SFX_Rotating = 0xc8; // ObjectProperty
		constexpr auto SFX_Reversing = 0xd0; // ObjectProperty
		constexpr auto FallOffCurve = 0xd8; // FInterpCurveFloat
		constexpr auto YawSpeedCurveMouse = 0xf0; // FInterpCurveFloat
		constexpr auto YawSpeedCurveGamepad = 0x108; // FInterpCurveFloat
		constexpr auto bGrabbed = 0x120; // uint32_t : 1
		constexpr auto bDeterminedSnapRotation = 0x120; // uint32_t : 1
		constexpr auto bUsingGamepad = 0x120; // uint32_t : 1
		constexpr auto SnapRotation = 0x124; // FRotator
		constexpr auto SnapAngle = 0x130; // float
		constexpr auto TotalSnaps = 0x134; // int32_t
		constexpr auto SnapStartRotation = 0x138; // FRotator
		constexpr auto MinStopMomentum = 0x144; // float
		constexpr auto SnapBlendSpeed = 0x148; // float
		constexpr auto Input = 0x14c; // float
		constexpr auto __EventRotationChanged__Delegate = 0x150; // DelegateProperty
	}

	namespace n_UGFxData_ProductAttribute_Currency_TA {
		constexpr auto CurrencyID = 0xb0; // int32_t
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto VectorProp = 0x70; // FPointer
		constexpr auto ResetVector = 0x78; // FVector
	}

	namespace n_ANxForceFieldCapsule_TA {
		constexpr auto InnerDrawComponent = 0x2c0; // ComponentProperty
		constexpr auto OuterDrawComponent = 0x2c8; // ComponentProperty
		constexpr auto InnerRadius = 0x2d0; // float
		constexpr auto OuterRadius = 0x2d4; // float
		constexpr auto Length = 0x2d8; // float
		constexpr auto InnerStrength = 0x2dc; // float
		constexpr auto OuterStrength = 0x2e0; // float
		constexpr auto InnerMaxSpeed = 0x2e4; // float
		constexpr auto OuterMaxSpeed = 0x2e8; // float
		constexpr auto Kernel = 0x2f0; // FPointer
	}

	namespace n_URPC_PurchaseSpecialEventReward_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto StoreProductID = 0x130; // int32_t
		constexpr auto RocketPassInfo = 0x134; // FRocketPassInfo
		constexpr auto ProductData = 0x140; // TArray<FOnlineProductData>
		constexpr auto RewardDrops = 0x150; // TArray<FOnlineXPReward>
		constexpr auto CurrencyData = 0x160; // TArray<FCurrency>
		constexpr auto WalletCurrencies = 0x170; // TArray<FCurrency>
	}

	namespace n_UCameraState_DirectorMoving_TA {
		constexpr auto StartOffset = 0x180; // FVector
		constexpr auto EndOffset = 0x18c; // FVector
		constexpr auto StartRotation = 0x198; // FRotator
		constexpr auto EndRotation = 0x1a4; // FRotator
		constexpr auto PanBlend = 0x1b0; // FViewTargetTransitionParams
		constexpr auto StartFOV = 0x1c0; // float
		constexpr auto EndFOV = 0x1c4; // float
		constexpr auto LoopType = 0x1c8; // ECameraLoopType
		constexpr auto CachedStart = 0x1cc; // FVector
		constexpr auto CachedEnd = 0x1d8; // FVector
	}

	namespace n_UEOSUserPermissionsError_TA {
		constexpr auto ErrorCode = 0x60; // FString
		constexpr auto Message = 0x70; // FString
	}

	namespace n_UPsyNetUrl_X {
		constexpr auto bUseSubsystemURL = 0x60; // uint32_t : 1
		constexpr auto URL = 0x68; // FString
		constexpr auto URLv2 = 0x78; // FString
	}

	namespace n_URPC_SetPlayerSkill_X {
		constexpr auto Playlist = 0xe8; // int32_t
		constexpr auto Mu = 0xec; // float
		constexpr auto Sigma = 0xf0; // float
		constexpr auto MatchesPlayed = 0xf4; // int32_t
	}

	namespace n_U__CarMeshComponentBase_TA__ApplyPaintToObject_9B4609D14F9DFE53CBFB6AAB6146F081 {
		constexpr auto ProductPaint = 0x60; // ObjectProperty
		constexpr auto PaintSettings = 0x68; // ObjectProperty
		constexpr auto ObjectToPaint = 0x70; // ObjectProperty
		constexpr auto Product = 0x78; // ObjectProperty
	}

	namespace n_U__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_82BDDFEF4EE8CFC2BC230CAEC49DC27F {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__EpicFriendsConverterSystem_TA__SetupEpicFriendsConverter_F781DD8646867CC4F2211FB44982030E {
		constexpr auto Converter = 0x60; // ObjectProperty
	}

	namespace n_UCDN_X {
		constexpr auto URL = 0x60; // FString
		constexpr auto BlogURL = 0x70; // FString
	}

	namespace n_UInteractiveFoliageComponent {
		constexpr auto FoliageSceneProxy = 0x308; // FPointer
	}

	namespace n_AAutoTestManager {
		constexpr auto bAutomatedPerfTesting = 0x268; // uint32_t : 1
		constexpr auto bAutoContinueToNextRound = 0x268; // uint32_t : 1
		constexpr auto bUsingAutomatedTestingMapList = 0x268; // uint32_t : 1
		constexpr auto bAutomatedTestingWithOpen = 0x268; // uint32_t : 1
		constexpr auto bExitOnCyclesComplete = 0x268; // uint32_t : 1
		constexpr auto bCheckingForFragmentation = 0x268; // uint32_t : 1
		constexpr auto bCheckingForMemLeaks = 0x268; // uint32_t : 1
		constexpr auto bDoingASentinelRun = 0x268; // uint32_t : 1
		constexpr auto bSentinelStreamingLevelStillLoading = 0x268; // uint32_t : 1
		constexpr auto AutomatedPerfRemainingTime = 0x26c; // int32_t
		constexpr auto AutomatedTestingMapIndex = 0x270; // int32_t
		constexpr auto AutomatedMapTestingList = 0x278; // TArray<FString>
		constexpr auto NumAutomatedMapTestingCycles = 0x288; // int32_t
		constexpr auto NumberOfMatchesPlayed = 0x28c; // int32_t
		constexpr auto NumMapListCyclesDone = 0x290; // int32_t
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatch = 0x298; // FString
		constexpr auto AutomatedMapTestingTransitionMap = 0x2a8; // FString
		constexpr auto SentinelTaskDescription = 0x2b8; // FString
		constexpr auto SentinelTaskParameter = 0x2c8; // FString
		constexpr auto SentinelTagDesc = 0x2d8; // FString
		constexpr auto SentinelPC = 0x2e8; // ObjectProperty
		constexpr auto SentinelTravelArray = 0x2f0; // TArray<FVector>
		constexpr auto SentinelNavigationIdx = 0x300; // int32_t
		constexpr auto SentinelIdx = 0x304; // int32_t
		constexpr auto NumRotationsIncrement = 0x308; // int32_t
		constexpr auto TravelPointsIncrement = 0x30c; // int32_t
		constexpr auto NumMinutesPerMap = 0x310; // int32_t
		constexpr auto CommandsToRunAtEachTravelTheWorldNode = 0x318; // TArray<FString>
		constexpr auto CommandStringToExec = 0x328; // FString
	}

	namespace n_U__ProductTransactions_TA__GetEquippedProducts_48181BFD464AAC16885B53BDCA1DC7C4 {
		constexpr auto AllEquippedInstanceIDs = 0x60; // TArray<FProductInstanceID>
	}

	namespace n_U__GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_4AC4CE3F4AC1A1CC64563CB1696C3EF3 {
		constexpr auto HashID = 0x60; // FProductHashID
	}

	namespace n_UPsyNetService_PlayerUnfriended_X {
		constexpr auto PlayerID = 0x90; // FUniqueNetId
	}

	namespace n_ULocalPlayer_TA {
		constexpr auto SaveGameManager = 0x4d8; // ObjectProperty
		constexpr auto Profile = 0x4e0; // ObjectProperty
		constexpr auto ProfileObjectProvider = 0x4e8; // ComponentProperty
		constexpr auto SplitScreenPosition = 0x4f0; // ESplitScreenPosition
		constexpr auto SuspendingEventToken = 0x4f8; // QWordProperty
		constexpr auto SignoutStartedEventToken = 0x500; // QWordProperty
		constexpr auto bOpenedStartMenu = 0x508; // uint32_t : 1
		constexpr auto bPendingBroadcastLoadout = 0x508; // uint32_t : 1
		constexpr auto bPendingBroadcastProfile = 0x508; // uint32_t : 1
		constexpr auto ControllerLayouts = 0x510; // ObjectProperty
		constexpr auto __EventProfileSet__Delegate = 0x518; // DelegateProperty
		constexpr auto __EventSplitScreenPositionChanged__Delegate = 0x530; // DelegateProperty
	}

	namespace n_URPC_AutoTour_GetSchedule_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Region = 0x130; // FString
		constexpr auto Schedules = 0x140; // TArray<FScheduledTournament>
	}

	namespace n_UCrossplayConfig_X {
		constexpr auto Groups = 0x78; // TArray<FCrossplayGroup>
		constexpr auto DisabledCrossplayGroups = 0x88; // TArray<FCrossplayGroup>
	}

	namespace n_USeqAct_Log {
		constexpr auto bOutputToScreen = 0x160; // uint32_t : 1
		constexpr auto bIncludeObjComment = 0x160; // uint32_t : 1
		constexpr auto TargetDuration = 0x164; // float
		constexpr auto TargetOffset = 0x168; // FVector
		constexpr auto LogMessage = 0x178; // FString
	}

	namespace n_AGameInfo_Tutorial_TA {
		constexpr auto bAutoEntered = 0x550; // uint32_t : 1
		constexpr auto TutorialTypes = 0x558; // TArray<FString>
	}

	namespace n_UProductAsset_ESportsTeam_TA {
		constexpr auto TeamName = 0xf8; // FName
		constexpr auto TeamLogo = 0x100; // ObjectProperty
	}

	namespace n_UGFxData_FirstTimeExperience_TA {
		constexpr auto CurrentCheckpoint = 0x98; // FName
		constexpr auto CurrentGroup = 0xa0; // FName
		constexpr auto bActive = 0xa8; // uint32_t : 1
		constexpr auto FTEManager = 0xb0; // ObjectProperty
	}

	namespace n_URPC_GetShopCatalogue_TA {
		constexpr auto ShopID = 0xe8; // int32_t
		constexpr auto ShopItems = 0xf0; // TArray<FShopItem>
	}

	namespace n_UVanitySetManager_TA {
		constexpr auto OnlineGame = 0x60; // ObjectProperty
		constexpr auto VanityMap = 0x68; // FMap_Mirror
		constexpr auto VanityQuery = 0xb8; // ComponentProperty
		constexpr auto __VanitiesUpdated__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UTcpBeacon {
		constexpr auto VfTable_FTickableObject = 0x70; // FPointer
		constexpr auto MaxConnections = 0x78; // int32_t
		constexpr auto ConnectionClassName = 0x80; // FString
		constexpr auto ConnectionClass = 0x90; // FNone*
		constexpr auto ListenSocket = 0x98; // FPointer
		constexpr auto Connections = 0xa0; // TArray<ObjectProperty>
		constexpr auto __EventConnected__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UBTC_Boost {
		constexpr auto BoostAmountLessThan = 0xe8; // float
		constexpr auto BoostAmountGreaterThan = 0xec; // float
		constexpr auto bFull = 0xf0; // uint32_t : 1
		constexpr auto bNotFull = 0xf0; // uint32_t : 1
	}

	namespace n_ACamera {
		constexpr auto PCOwner = 0x268; // ObjectProperty
		constexpr auto CameraStyle = 0x270; // FName
		constexpr auto DefaultFOV = 0x278; // float
		constexpr auto bLockedFOV = 0x27c; // uint32_t : 1
		constexpr auto bConstrainAspectRatio = 0x27c; // uint32_t : 1
		constexpr auto bEnableFading = 0x27c; // uint32_t : 1
		constexpr auto bFadeAudio = 0x27c; // uint32_t : 1
		constexpr auto bForceDisableTemporalAA = 0x27c; // uint32_t : 1
		constexpr auto bEnableColorScaling = 0x27c; // uint32_t : 1
		constexpr auto bEnableColorScaleInterp = 0x27c; // uint32_t : 1
		constexpr auto bUseClientSideCameraUpdates = 0x27c; // uint32_t : 1
		constexpr auto bDebugClientSideCamera = 0x27c; // uint32_t : 1
		constexpr auto bShouldSendClientSideCameraUpdate = 0x27c; // uint32_t : 1
		constexpr auto LockedFOV = 0x280; // float
		constexpr auto ConstrainedAspectRatio = 0x284; // float
		constexpr auto DefaultAspectRatio = 0x288; // float
		constexpr auto OffAxisYawAngle = 0x28c; // float
		constexpr auto OffAxisPitchAngle = 0x290; // float
		constexpr auto FadeColor = 0x294; // FColor
		constexpr auto FadeAmount = 0x298; // float
		constexpr auto CamOverridePostProcessAlpha = 0x29c; // float
		constexpr auto CamPostProcessSettings = 0x2a0; // FPostProcessSettings
		constexpr auto RenderingOverrides = 0x408; // FRenderingPerformanceOverrides
		constexpr auto ColorScale = 0x40c; // FVector
		constexpr auto DesiredColorScale = 0x418; // FVector
		constexpr auto OriginalColorScale = 0x424; // FVector
		constexpr auto ColorScaleInterpDuration = 0x430; // float
		constexpr auto ColorScaleInterpStartTime = 0x434; // float
		constexpr auto CameraCache = 0x438; // FTCameraCache
		constexpr auto LastFrameCameraCache = 0x458; // FTCameraCache
		constexpr auto ViewTarget = 0x478; // FTViewTarget
		constexpr auto PendingViewTarget = 0x4b0; // FTViewTarget
		constexpr auto BlendTimeToGo = 0x4e8; // float
		constexpr auto BlendParams = 0x4ec; // FViewTargetTransitionParams
		constexpr auto ModifierList = 0x500; // TArray<ObjectProperty>
		constexpr auto FreeCamDistance = 0x510; // float
		constexpr auto FreeCamOffset = 0x514; // FVector
		constexpr auto FadeAlpha = 0x520; // FVector2D
		constexpr auto FadeTime = 0x528; // float
		constexpr auto FadeTimeRemaining = 0x52c; // float
		constexpr auto CameraLensEffects = 0x530; // TArray<ObjectProperty>
		constexpr auto CameraShakeCamMod = 0x540; // ObjectProperty
		constexpr auto CameraShakeCamModClass = 0x548; // FNone*
		constexpr auto AnimInstPool = 0x550; // ObjectProperty [0x8]
		constexpr auto ActiveAnims = 0x590; // TArray<ObjectProperty>
		constexpr auto FreeAnims = 0x5a0; // TArray<ObjectProperty>
		constexpr auto AnimCameraActor = 0x5b0; // ObjectProperty
	}

	namespace n_U__OnlineProductStore_TA__FindProductsFromHash_3459AAAF48254857B0B9C9A582F1E895 {
		constexpr auto HashID = 0x60; // FProductHashID
	}

	namespace n_UTourMatchInfoMessage_TA {
		constexpr auto TourSettings = 0x68; // FTourServerSettings
		constexpr auto Playlist = 0x150; // int32_t
		constexpr auto ReservationID = 0x158; // FString
		constexpr auto JoinName = 0x168; // FString
		constexpr auto JoinPassword = 0x178; // FString
	}

	namespace n_U__GFxData_ReplayManager_TA__DownloadReplay_C0B8B13048A51F16938FC48988EEDFD7 {
		constexpr auto Request = 0x60; // ObjectProperty
	}

	namespace n_UInterpFilter_Classes {
		constexpr auto ClassToFilterBy = 0x70; // FNone*
		constexpr auto TrackClasses = 0x78; // TArray<FNone*>
	}

	namespace n_UPlayerSpawnTicket_TA {
		constexpr auto Controller = 0x60; // ObjectProperty
		constexpr auto PRI = 0x68; // ObjectProperty
		constexpr auto SecondsRemaining = 0x70; // float
	}

	namespace n_UUserBugReportErrors_TA {
		constexpr auto ReportTooSoon = 0x80; // ObjectProperty
	}

	namespace n_ACarPreviewActor_TA {
		constexpr auto ControllerId = 0x268; // int32_t
		constexpr auto ProductLoader = 0x270; // ComponentProperty
		constexpr auto CarMesh = 0x278; // ComponentProperty
		constexpr auto LightEnvironment = 0x280; // ComponentProperty
		constexpr auto CarMeshSilhouette = 0x288; // ComponentProperty
		constexpr auto AttachmentPreviewAnims = 0x290; // TArray<ComponentProperty>
		constexpr auto WheelAnims = 0x2a0; // TArray<ComponentProperty>
		constexpr auto BodyAnim = 0x2b0; // ComponentProperty
		constexpr auto EngineAudioAnim = 0x2b8; // ComponentProperty
		constexpr auto EngineAudioAnimInstance = 0x2c0; // ComponentProperty
		constexpr auto SupersonicFakeSpeed = 0x2c8; // float
		constexpr auto TurntableActor = 0x2d0; // ObjectProperty
		constexpr auto Loadout = 0x2d8; // FLoadoutData
		constexpr auto OldLoadout = 0x318; // FLoadoutData
		constexpr auto PreviewProducts = 0x358; // TArray<ObjectProperty>
		constexpr auto BoostFX = 0x368; // ObjectProperty
		constexpr auto PreviewSlot = 0x370; // ObjectProperty
		constexpr auto TeamArchetype = 0x378; // ObjectProperty
		constexpr auto PlayerName = 0x380; // FString
		constexpr auto BodyFX = 0x390; // ObjectProperty
		constexpr auto BoostAsset = 0x398; // ObjectProperty
		constexpr auto SupersonicAsset = 0x3a0; // ObjectProperty
		constexpr auto bLockLoadout = 0x3a8; // uint32_t : 1
		constexpr auto bSpinWheelsFromBoost = 0x3a8; // uint32_t : 1
		constexpr auto bAddToCarPreviewList = 0x3a8; // uint32_t : 1
		constexpr auto SupersonicFX = 0x3b0; // TArray<ObjectProperty>
		constexpr auto EngineAudioAsset = 0x3c0; // ObjectProperty
		constexpr auto EngineAudioPreview = 0x3c8; // ObjectProperty
		constexpr auto MusicStingersArchetype = 0x3d0; // ObjectProperty
		constexpr auto MusicStingersPreview = 0x3d8; // ObjectProperty
		constexpr auto PreviewTeam = 0x3e0; // int32_t
		constexpr auto LinkedControllerId = 0x3e4; // int32_t
		constexpr auto RootFXActor = 0x3e8; // ObjectProperty
		constexpr auto Ak = 0x3f0; // ComponentProperty
		constexpr auto __EventInitializeComponents__Delegate = 0x3f8; // DelegateProperty
		constexpr auto __ProductApplicatorDelegate__Delegate = 0x410; // DelegateProperty
		constexpr auto __EventCarSetupFinished__Delegate = 0x428; // DelegateProperty
	}

	namespace n_UMaterialExpression {
		constexpr auto EditorX = 0x60; // int32_t
		constexpr auto EditorY = 0x64; // int32_t
		constexpr auto MaterialExpressionEditorX = 0x68; // int32_t
		constexpr auto MaterialExpressionEditorY = 0x6c; // int32_t
		constexpr auto bRealtimePreview = 0x70; // uint32_t : 1
		constexpr auto bNeedToUpdatePreview = 0x70; // uint32_t : 1
		constexpr auto bIsParameterExpression = 0x70; // uint32_t : 1
		constexpr auto bShowOutputNameOnPin = 0x70; // uint32_t : 1
		constexpr auto bHidePreviewWindow = 0x70; // uint32_t : 1
		constexpr auto bShowInputs = 0x70; // uint32_t : 1
		constexpr auto bShowOutputs = 0x70; // uint32_t : 1
		constexpr auto bUsedByStaticParameterSet = 0x70; // uint32_t : 1
		constexpr auto Material = 0x78; // ObjectProperty
		constexpr auto Function = 0x80; // ObjectProperty
		constexpr auto Desc = 0x88; // FString
		constexpr auto BorderColor = 0x98; // FColor
		constexpr auto MenuCategories = 0xa0; // TArray<FName>
		constexpr auto Outputs = 0xb0; // TArray<FExpressionOutput>
	}

	namespace n_USeqAct_SetMatInstVectorParam {
		constexpr auto MatInst = 0x160; // ObjectProperty
		constexpr auto ParamName = 0x168; // FName
		constexpr auto VectorValue = 0x170; // FLinearColor
	}

	namespace n_USaveGameSummary {
		constexpr auto BaseLevel = 0x60; // FName
		constexpr auto Description = 0x68; // FString
	}

	namespace n_UPartyMessage_InviteToTradeError_X {
		constexpr auto ErrorTypeName = 0xa8; // FName
	}

	namespace n_UInterpTrackBoostToggle_TA {
		constexpr auto OverrideBoost = 0xe0; // ObjectProperty
		constexpr auto AttachedParticleSystems = 0xe8; // TArray<ComponentProperty>
		constexpr auto AttachedSocketNames = 0xf8; // TArray<FName>
		constexpr auto CurrentActor = 0x108; // ObjectProperty
		constexpr auto CurrentBoostFX = 0x110; // ObjectProperty
		constexpr auto bIsBoostActive = 0x118; // uint32_t : 1
	}

	namespace n_U__FXActor_Boost_TA__DuplicateAttachment_351C22B843438AF270BCB6A38C9F9A53 {
		constexpr auto ComponentsToUse = 0x60; // TArray<ComponentProperty>
		constexpr auto AttachmentIdx = 0x70; // int32_t
	}

	namespace n_UHttpRequestWindows {
		constexpr auto Request = 0x78; // FPointer
		constexpr auto RequestVerb = 0x80; // FString
		constexpr auto RequestURL = 0x90; // FPointer
		constexpr auto Payload = 0x98; // TArray<char>
	}

	namespace n_ULanBeacon_X {
		constexpr auto VfTable_FTickableObject = 0x70; // FPointer
		constexpr auto LanBeacon = 0x78; // FPointer
		constexpr auto LanAnnouncePort = 0x80; // int32_t
		constexpr auto QueryNonce = 0x88; // QWordProperty
		constexpr auto BeaconState = 0x90; // ELanBeaconState
		constexpr auto MessageComponent = 0x98; // ComponentProperty
		constexpr auto MaxPacketSize = 0xa0; // int32_t
	}

	namespace n_AGameEditor_Trigger_TA {
		constexpr auto bEnabled = 0x2b0; // uint32_t : 1
		constexpr auto __OnTriggerTouched__Delegate = 0x2b8; // DelegateProperty
	}

	namespace n_URPC_RocketPassGetRewardContent_TA {
		constexpr auto RocketPassID = 0xe8; // int32_t
		constexpr auto TierCap = 0xec; // int32_t
		constexpr auto FreeRewards = 0xf0; // TArray<FRocketPassRewardData>
		constexpr auto PremiumRewards = 0x100; // TArray<FRocketPassRewardData>
	}

	namespace n_U__UserBugReportGeneratedData_TA__Init_6B5BD18D4D62BBDF4160AA9B0734B5E0 {
		constexpr auto CompleteCallback = 0x60; // DelegateProperty
	}

	namespace n_URPC_Challenge_ResetChallengeProgress_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ChallengeID = 0x130; // int32_t
	}

	namespace n_URPC_TourGetPublic_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Search = 0x130; // FTourSearchSettings
		constexpr auto TeamMembers = 0x190; // TArray<FUniqueNetId>
		constexpr auto Tournaments = 0x1a0; // TArray<ObjectProperty>
	}

	namespace n_ABall_Trajectory_TA {
		constexpr auto AccurateTrajectoryPoints = 0xa40; // TArray<FVector>
		constexpr auto AllPoints = 0xa50; // TArray<FVector>
		constexpr auto LastCalculateTime = 0xa60; // float
		constexpr auto FixedDeltaTime = 0xa64; // float
		constexpr auto TotalPathDistance = 0xa68; // float
		constexpr auto FrameCount = 0xa6c; // int32_t
		constexpr auto TotalStepCount = 0xa70; // int32_t
		constexpr auto TotalFrameCount = 0xa74; // int32_t
		constexpr auto CurrentStepCount = 0xa78; // int32_t
		constexpr auto StepToPutAPointAt = 0xa7c; // int32_t
		constexpr auto LastLocation = 0xa80; // FVector
		constexpr auto LastVelocity = 0xa8c; // FVector
		constexpr auto LastAngularVelocity = 0xa98; // FVector
		constexpr auto LastRotation = 0xaa4; // FRotator
		constexpr auto TrajectorySettings = 0xab0; // FTrajectorySetup
		constexpr auto TrajectoryComponentToUpdate = 0xac8; // ComponentProperty
	}

	namespace n_USeqAct_AttachToEvent {
		constexpr auto bPreferController = 0x160; // uint32_t : 1
	}

	namespace n_USeqAct_ApplyCarProducts_TA {
		constexpr auto Assets = 0x160; // TArray<ObjectProperty>
		constexpr auto TeamColor = 0x170; // FLinearColor
		constexpr auto AccentColor = 0x180; // FLinearColor
		constexpr auto TeamFinish = 0x190; // ObjectProperty
		constexpr auto CustomFinish = 0x198; // ObjectProperty
		constexpr auto CarPreviewActor = 0x1a0; // ObjectProperty
	}

	namespace n_U__TourService_PsyNet_TA__CreateTournament_E8AC64BA4C6C0E1EA987DA8D4A3CECB4 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__TaskGate_X__AddWithTimeout_85F27427482C6CB2E9EF52B7CD817320 {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto TimeoutError = 0x68; // ObjectProperty
		constexpr auto ErrorMessage = 0x70; // FString
		constexpr auto TimeoutDelegate = 0x80; // DelegateProperty
	}

	namespace n_UThumbnailScene_TA {
		constexpr auto SceneComponents = 0x60; // TArray<FThumbnailComponent>
		constexpr auto ViewTranslation = 0x70; // FVector
		constexpr auto ViewRotation = 0x7c; // FRotator
		constexpr auto bForceAllUsedMipsResident = 0x88; // uint32_t : 1
		constexpr auto Background = 0x90; // ObjectProperty
		constexpr auto RenderScene = 0x98; // FPointer
		constexpr auto CameraFOV = 0xa0; // float
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x70; // FVector
		constexpr auto EndPoint1 = 0x7c; // FVector
		constexpr auto Range = 0x88; // FRawDistributionFloat
		constexpr auto Strength = 0xb0; // FRawDistributionFloat
	}

	namespace n_U____ConsecutiveMatchTracker_TA__HandleGameEnded_421FC02848C136E159D07582C6796A30____ConsecutiveMatchTracker_TA__HandleGameEnded_421FC02848C136E159D07582C6796A30_549DD4E14EB3D1D763AD018418EBCE69 {
		constexpr auto Player = 0x60; // FMatchData
	}

	namespace n_UGFxRawData {
		constexpr auto RawData = 0x60; // TArray<char>
		constexpr auto ReferencedSwfs = 0x70; // TArray<FString>
		constexpr auto References = 0x80; // TArray<ObjectProperty>
		constexpr auto UserReferences = 0x90; // TArray<ObjectProperty>
	}

	namespace n_UNotification_AchievementProgress_TA {
		constexpr auto Id = 0x110; // int32_t
		constexpr auto Icon = 0x118; // ObjectProperty
		constexpr auto Progress = 0x120; // float
		constexpr auto MaxProgress = 0x124; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x138; // FName
		constexpr auto ExpressionGUID = 0x140; // FGuid
		constexpr auto Group = 0x150; // FName
	}

	namespace n_USeqAct_AndGate {
		constexpr auto bOpen = 0x160; // uint32_t : 1
		constexpr auto LinkedOutputFiredStatus = 0x168; // TArray<char>
		constexpr auto LinkedOutputs = 0x178; // TArray<FPointer>
	}

	namespace n_U__ProductsHashSave_TA__UpdateInstanceIDs_9BC316C54FD415462B0F1A90448AE204 {
		constexpr auto Instances = 0x60; // TArray<FProductInstanceID>
	}

	namespace n_UGFxData_ProductLevelUpgrade_TA {
		constexpr auto ProductLevel = 0x98; // int32_t
		constexpr auto ProductInstanceID = 0xa0; // FProductInstanceID
		constexpr auto Levels = 0xb0; // TArray<FProductLevelData>
		constexpr auto ModalProcessing = 0xc0; // ObjectProperty
	}

	namespace n_UGFxData_TourCheckInError_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
	}

	namespace n_UActorFactoryApexDestructible {
		constexpr auto bStartAwake = 0xa0; // uint32_t : 1
		constexpr auto RBChannel = 0xa4; // ERBCollisionChannel
		constexpr auto CollideWithChannels = 0xa8; // FRBCollisionChannelContainer
		constexpr auto DestructibleAsset = 0xb0; // ObjectProperty
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x98; // FParticleRandomSeedInfo
	}

	namespace n_U__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_1907A4654D3979D7D9273CAB89BB5CB4 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__TAsyncResult__Texture2DDynamic__SetResultWhen_0068CFBD4061690806BEE3B1E2985135 {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_URBHistory_TA {
		constexpr auto FrameSnapshots = 0x70; // TArray<int32_t>
		constexpr auto ServerSnapshots = 0x80; // TArray<char>
		constexpr auto RBPhysicsSnapshots = 0x90; // TArray<FRBPhysicsSnapshot>
	}

	namespace n_UProductOverride_StopAttachmentBehaviors_TA {
		constexpr auto BehaviorsToZeroOut = 0x60; // TArray<FNone*>
	}

	namespace n_URandomStream_X {
		constexpr auto Stream = 0x60; // FRandomStream_Mirror
		constexpr auto CurrentSeed = 0x64; // int32_t
	}

	namespace n_U__OnlineStorageSyncManager_TA__SyncCloudData_06A2C42B4B87B10B3E77F1B3D997885F {
		constexpr auto ProductsPlayerGet = 0x60; // ObjectProperty
	}

	namespace n_UCameraState_Edit_TA {
		constexpr auto bLocalMovement = 0x98; // uint32_t : 1
	}

	namespace n_UInterpTrackInstFaceFX {
		constexpr auto bFirstUpdate = 0x60; // uint32_t : 1
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UGFxData_ReplayManager_TA {
		constexpr auto ReplaySaveID = 0x98; // FString
		constexpr auto ReplaySaveError = 0xa8; // FString
		constexpr auto ReplayData = 0xb8; // TArray<ObjectProperty>
		constexpr auto ModalProcessing = 0xc8; // ObjectProperty
		constexpr auto PendingSaveName = 0xd0; // FString
	}

	namespace n_AGFxHUD_Replay_TA {
		constexpr auto Game = 0x598; // ObjectProperty
		constexpr auto PrevKeyframeBufferTime = 0x5a0; // float
		constexpr auto bUserPaused = 0x5a4; // uint32_t : 1
		constexpr auto bPausedForEndOfReplay = 0x5a4; // uint32_t : 1
		constexpr auto ReferencedProducts = 0x5a8; // TArray<ObjectProperty>
	}

	namespace n_U__GFxData_TourSearch_TA__FindPrivate_C8C087284B073A5343029B8AB59E2FFC {
		constexpr auto Credentials = 0x60; // FTourPrivateCredentials
	}

	namespace n_UReservationsReadyMessage_X {
		constexpr auto ServerAddress = 0x60; // FString
		constexpr auto BeaconAddress = 0x70; // FString
		constexpr auto PingAddress = 0x80; // FString
		constexpr auto ProductIDs = 0x90; // TArray<int32_t>
		constexpr auto Keys = 0xa0; // ObjectProperty
		constexpr auto bUseNetworkNextDriver = 0xa8; // uint32_t : 1
	}

	namespace n_URPC_RocketPassPurchaseTiers_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceIDs = 0x130; // TArray<FProductInstanceID>
		constexpr auto PurchasableID = 0x140; // int32_t
		constexpr auto TierLevel = 0x144; // int32_t
		constexpr auto Unlocks = 0x148; // TArray<FRocketPassUnlock>
		constexpr auto WalletCurrencies = 0x158; // TArray<FCurrency>
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0xe8; // FName
	}

	namespace n_UFirstTimeExperienceManager_TA {
		constexpr auto Versioning = 0x60; // FTEVersioning
		constexpr auto FTEGroups = 0x68; // TArray<FFTEGroup>
		constexpr auto FTELevelInfo = 0x78; // TArray<FFTELevelData>
		constexpr auto FTERedefine = 0x88; // ObjectProperty
		constexpr auto CurrentActiveGroup = 0x90; // FFTEGroup
		constexpr auto CurrentCheckpointIndex = 0xd8; // int32_t
		constexpr auto CurrentCheckpoint = 0xdc; // FName
		constexpr auto FTESave = 0xe8; // ObjectProperty
		constexpr auto LegacySave = 0xf0; // ObjectProperty
		constexpr auto ChallengeCompleteInfo = 0xf8; // TArray<FFTEChallengeInfo>
		constexpr auto ActiveTriggers = 0x108; // TArray<ObjectProperty>
		constexpr auto bEnabled = 0x118; // uint32_t : 1
		constexpr auto __EventFTEChanged__Delegate = 0x120; // DelegateProperty
		constexpr auto __EventFTECheckpointCompleted__Delegate = 0x138; // DelegateProperty
		constexpr auto __EventFTEGroupCompleted__Delegate = 0x150; // DelegateProperty
	}

	namespace n_USeqAct_SetGreenScreen_TA {
		constexpr auto ColorToUse = 0x160; // FLinearColor
	}

	namespace n_UPlaylistSettings_X {
		constexpr auto Title = 0x60; // FString
		constexpr auto Description = 0x70; // FString
		constexpr auto BadgeTitle = 0x80; // FString
		constexpr auto PlaylistId = 0x90; // int32_t
		constexpr auto PlayerCount = 0x94; // int32_t
		constexpr auto bStandard = 0x98; // uint32_t : 1
		constexpr auto bRanked = 0x98; // uint32_t : 1
		constexpr auto bCheckRankedMatchReservationID = 0x98; // uint32_t : 1
		constexpr auto bSolo = 0x98; // uint32_t : 1
		constexpr auto bHidden = 0x98; // uint32_t : 1
		constexpr auto bExtraMode = 0x98; // uint32_t : 1
		constexpr auto bPrivate = 0x98; // uint32_t : 1
		constexpr auto bTournament = 0x98; // uint32_t : 1
		constexpr auto bApplyQuitPenalty = 0x98; // uint32_t : 1
		constexpr auto bAllowForfeit = 0x98; // uint32_t : 1
		constexpr auto bDisableRankedReconnect = 0x98; // uint32_t : 1
		constexpr auto bIgnoreAssignTeams = 0x98; // uint32_t : 1
		constexpr auto bKickOnMigrate = 0x98; // uint32_t : 1
		constexpr auto bAllowBotFills = 0x98; // uint32_t : 1
		constexpr auto bServerBroadcastCancellations = 0x98; // uint32_t : 1
		constexpr auto bSkipGameModeVerification = 0x98; // uint32_t : 1
		constexpr auto bIsMicroEventPlaylist = 0x98; // uint32_t : 1
		constexpr auto bHasVariablePlayerCount = 0x98; // uint32_t : 1
		constexpr auto bNew = 0x98; // uint32_t : 1
		constexpr auto bAllowClubs = 0x98; // uint32_t : 1
		constexpr auto bAllowStayAsParty = 0x98; // uint32_t : 1
		constexpr auto PlaylistImageURL = 0xa0; // FString
		constexpr auto PlaylistImageTexture = 0xb0; // FString
		constexpr auto PlaylistIconActiveURL = 0xc0; // FString
		constexpr auto PlaylistIconInactiveURL = 0xd0; // FString
		constexpr auto PlaylistTimeWindow = 0xe0; // ObjectProperty
		constexpr auto PresetMutators = 0xe8; // TArray<ObjectProperty>
		constexpr auto MapName = 0xf8; // FName
		constexpr auto ServerCommand = 0x100; // FString
		constexpr auto MapSetName = 0x110; // FName
		constexpr auto PopulationBuckets = 0x118; // TArray<int32_t>
	}

	namespace n_U__CarComponent_Boost_TA__SetUnlimitedBoostDelayed_88F323674A29AEC42D2C7AA89BA4F7B2 {
		constexpr auto Enabled = 0x60; // uint32_t : 1
	}

	namespace n_UMutator_GameEvent_TA {
		constexpr auto StatFactoryArchetype = 0x68; // ObjectProperty
		constexpr auto BotArchetype = 0x70; // ObjectProperty
		constexpr auto EndRoundComponentArchetype = 0x78; // ComponentProperty
	}

	namespace n_UGameplayEventsWriterBase {
		constexpr auto Game = 0x210; // ObjectProperty
	}

	namespace n_USubscription {
		constexpr auto __SubscriberCallback__Delegate = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_CameraFade {
		constexpr auto FadeColor = 0x160; // FColor
		constexpr auto FadeAlpha = 0x164; // FVector2D
		constexpr auto FadeOpacity = 0x16c; // float
		constexpr auto FadeTime = 0x170; // float
		constexpr auto bPersistFade = 0x174; // uint32_t : 1
		constexpr auto bFadeAudio = 0x174; // uint32_t : 1
		constexpr auto FadeTimeRemaining = 0x178; // float
		constexpr auto CachedPCs = 0x180; // TArray<ObjectProperty>
	}

	namespace n_UGFxShell_X {
		constexpr auto MoviePlayerArchetype = 0x98; // ObjectProperty
		constexpr auto Player = 0xa0; // ObjectProperty
		constexpr auto bGamePaused = 0xa8; // uint32_t : 1
		constexpr auto bWasFullscreen = 0xa8; // uint32_t : 1
		constexpr auto LeftX = 0xac; // float
		constexpr auto LeftY = 0xb0; // float
		constexpr auto RightX = 0xb4; // float
		constexpr auto RightY = 0xb8; // float
		constexpr auto Movies = 0xc0; // TArray<ObjectProperty>
		constexpr auto DataStore = 0xd0; // ComponentProperty
		constexpr auto InputType = 0xd8; // EInputPlatformType
		constexpr auto OnlinePlatformType = 0xd9; // OnlinePlatform
		constexpr auto OnlineSub = 0xe0; // ObjectProperty
		constexpr auto __EventInputCaptureChanged__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventInputTypeChanged__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventReceivedInput__Delegate = 0x118; // DelegateProperty
	}

	namespace n_USeqAct_SetFloat {
		constexpr auto Target = 0x160; // float
		constexpr auto Value = 0x168; // TArray<float>
	}

	namespace n_UMaterialExpressionParticleMacroUV {
		constexpr auto bUseViewSpace = 0xc0; // uint32_t : 1
	}

	namespace n_U__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_791EAB7D47DD7E6AB8D0CB9B6BA7D1F0 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UClubSettings_X {
		constexpr auto ClubName = 0x60; // FString
		constexpr auto ClubTag = 0x70; // FString
		constexpr auto PrimaryColor = 0x80; // int32_t
		constexpr auto AccentColor = 0x84; // int32_t
	}

	namespace n_UInterpTrackAkRTPC {
		constexpr auto Param = 0xe8; // FString
	}

	namespace n_UOnlinePlayerStorage {
		constexpr auto VersionNumber = 0x60; // int32_t
		constexpr auto VersionSettingsId = 0x64; // int32_t
		constexpr auto SaveCountSettingId = 0x68; // int32_t
		constexpr auto ProfileSettings = 0x70; // TArray<FOnlineProfileSetting>
		constexpr auto ProfileMappings = 0x80; // TArray<FSettingsPropertyPropertyMetaData>
		constexpr auto AsyncState = 0x90; // EOnlinePlayerStorageAsyncState
		constexpr auto DeviceID = 0x94; // int32_t
	}

	namespace n_URPC_GetPlayerSkill_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Skills = 0x130; // TArray<FPlayerSkillRating>
		constexpr auto RewardLevels = 0x140; // FPlayerSeasonRewardProgress
	}

	namespace n_UBTC_TargetBase {
		constexpr auto Target = 0xe8; // ObjectProperty
		constexpr auto TargetPredictionTime = 0xf0; // float
		constexpr auto bFlattenToDrivePlane = 0xf4; // uint32_t : 1
		constexpr auto TargetData = 0xf8; // FAIProxyData
		constexpr auto SelfData3D = 0x140; // FAIProxyData
		constexpr auto TargetData3D = 0x188; // FAIProxyData
	}

	namespace n_UBallIndicator_TA {
		constexpr auto MinTranslationX = 0x310; // float
		constexpr auto MaxTranslationX = 0x314; // float
		constexpr auto MinDistance = 0x318; // float
		constexpr auto MaxDistance = 0x31c; // float
		constexpr auto ZTranslationOffset = 0x320; // float
		constexpr auto Ball = 0x328; // ObjectProperty
	}

	namespace n_UProfileStatsSave_TA {
		constexpr auto StatValues = 0xc8; // TArray<FStatValue>
		constexpr auto ProductStats = 0xd8; // TArray<FProductStat>
		constexpr auto __EventStatValuesChanged__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UGFxData_TeamInfo_TA {
		constexpr auto TeamName = 0x98; // FString
		constexpr auto TeamColor = 0xa8; // FColor
		constexpr auto Score = 0xac; // int32_t
		constexpr auto TeamLogo = 0xb0; // ObjectProperty
		constexpr auto SeriesScore = 0xb8; // int32_t
		constexpr auto Team = 0xc0; // ObjectProperty
		constexpr auto Difficulty = 0xc8; // int32_t
	}

	namespace n_UPartyMessage_TradeCurrencyUpdate_TA {
		constexpr auto TradingMemberId = 0xa8; // FUniqueNetId
		constexpr auto CurrencyData = 0xf0; // FCurrency
	}

	namespace n_USeqEvent_Used {
		constexpr auto bAimToInteract = 0x180; // uint32_t : 1
		constexpr auto InteractDistance = 0x184; // float
		constexpr auto InteractText = 0x188; // FString
		constexpr auto InteractIcon = 0x198; // ObjectProperty
		constexpr auto ClassProximityTypes = 0x1a0; // TArray<FNone*>
		constexpr auto IgnoredClassProximityTypes = 0x1b0; // TArray<FNone*>
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0xc0; // FExpressionInput
		constexpr auto InputName = 0xf8; // FString
		constexpr auto Description = 0x108; // FString
		constexpr auto Id = 0x118; // FGuid
		constexpr auto InputType = 0x128; // EFunctionInputType
		constexpr auto PreviewValue = 0x130; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0x140; // uint32_t : 1
		constexpr auto bCompilingFunctionPreview = 0x140; // uint32_t : 1
		constexpr auto SortPriority = 0x144; // int32_t
	}

	namespace n_U__ESportConfig_TA__GetNextEventTime_013705DC40AFBBFF91AB5091E82BC011 {
		constexpr auto CurrentTime = 0x60; // QWordProperty
	}

	namespace n_U__GFxData_ProductFilter_TA__SetProhibitedAttributeTypeSelected_56667EDE41CCA57DE30EBE9ACE1E6814 {
		constexpr auto Typename = 0x60; // FName
	}

	namespace n_UAkSoundCue {
		constexpr auto RequiredBank = 0x60; // ObjectProperty
		constexpr auto StartEvent = 0x68; // FString
		constexpr auto StopEvent = 0x78; // FString
	}

	namespace n_U__GFxData_ProductFilter_TA__GetProductAttributeFilters_AF00CDBE41657221C5E3D5902190B535 {
		constexpr auto FilterType = 0x60; // EProductFilterType
	}

	namespace n_UGFxData_ProductAttribute_Painted_TA {
		constexpr auto ProductPaintColor = 0xb0; // FColor
		constexpr auto ProductPaintColorName = 0xb8; // FString
		constexpr auto ProductPaintMask = 0xc8; // ObjectProperty
		constexpr auto ProductPaintDiffHue = 0xd0; // float
		constexpr auto ProductPaintDiffSaturation = 0xd4; // float
		constexpr auto ProductPaintDiffLightness = 0xd8; // float
	}

	namespace n_U__GFxData_MTXGarage_TA__HandleUnlockContainersResponse_8AE127A94A5EB239C9C38E81B9249DD2 {
		constexpr auto PCSaveData = 0x60; // ObjectProperty
	}

	namespace n_U__OnlineGameTourServer_TA__GetTeamScore_EB049310499CDA06736BA4844306BA88 {
		constexpr auto TeamIndex = 0x60; // int32_t
	}

	namespace n_UGFxData_RewardDrop_TA {
		constexpr auto RewardDrops = 0x98; // ComponentProperty
	}

	namespace n_UShopAutoLoadHelper_TA {
		constexpr auto SyncRequestRange = 0x60; // int32_t
		constexpr auto AutoLoadDelayer = 0x68; // ComponentProperty
		constexpr auto AutoLoadAsyncTask = 0x70; // ObjectProperty
		constexpr auto AutoLoadedItems = 0x78; // TArray<FShopItem>
		constexpr auto AutoLoadExpirationHelper = 0x88; // ObjectProperty
		constexpr auto MinEndDateOffset = 0x90; // QWordProperty
		constexpr auto MaxEndDateOffset = 0x98; // QWordProperty
		constexpr auto RandomEndDateOffset = 0xa0; // QWordProperty
	}

	namespace n_UTournamentCompletedEvent_TA {
		constexpr auto TourID = 0x60; // QWordProperty
		constexpr auto ScheduleID = 0x68; // QWordProperty
		constexpr auto bEliminatedFirstRound = 0x70; // uint32_t : 1
	}

	namespace n_UGFxData_AdHoc_TA {
		constexpr auto AdHocDesiredState = 0x98; // EAdHocState
		constexpr auto AdHocState = 0x99; // EAdHocState
	}

	namespace n_URPC_BanSelf_TA {
		constexpr auto DurationSeconds = 0xe8; // int32_t
		constexpr auto ReasonID = 0xf0; // FString
		constexpr auto BanType = 0x100; // FString
	}

	namespace n_USeqAct_MultiLevelStreaming {
		constexpr auto Levels = 0x180; // TArray<FLevelStreamingNameCombo>
		constexpr auto bUnloadAllOtherLevels = 0x190; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x190; // uint32_t : 1
	}

	namespace n_UWebImageCache_X {
		constexpr auto Decoder = 0x60; // ObjectProperty
		constexpr auto Downloads = 0x68; // ComponentProperty
		constexpr auto __ImageSyncCallback__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UGFxData_LoadoutSets_TA {
		constexpr auto LoadoutSets = 0x98; // TArray<FGFxLoadoutSet>
		constexpr auto Profile = 0xa8; // ObjectProperty
		constexpr auto RandomLoadouts = 0xb0; // FLoadoutData [0x2]
		constexpr auto RandomLoadoutLoader = 0x130; // ComponentProperty
		constexpr auto PreviousLoadoutSetLoader = 0x138; // ComponentProperty
		constexpr auto NextLoadoutSetLoader = 0x140; // ComponentProperty
		constexpr auto LoadoutSequencer = 0x148; // ObjectProperty
		constexpr auto SavedSlot = 0x150; // ObjectProperty
		constexpr auto PreviousBodyProductID = 0x158; // int32_t
		constexpr auto LoadoutSave = 0x160; // ObjectProperty
	}

	namespace n_USeqAct_SetBreakoutBallCharge_TA {
		constexpr auto BallObj = 0x160; // ObjectProperty
		constexpr auto Charge = 0x168; // int32_t
		constexpr auto Team = 0x16c; // int32_t
	}

	namespace n_UGFxData_SpecialEventStore_TA {
		constexpr auto EventID = 0x98; // int32_t
		constexpr auto Rewards = 0xa0; // TArray<FGFxSpecialEventReward>
		constexpr auto SpecialEventsSet = 0xb0; // ComponentProperty
	}

	namespace n_URPC_Challenge_ClearNewInfo_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ChallengeIDs = 0x130; // TArray<int32_t>
	}

	namespace n_UOnlinePersistentAuthInterfaceEOS {
		constexpr auto PlayerInterfaceEOS = 0xb8; // ObjectProperty
	}

	namespace n_UBTAction_Target {
		constexpr auto Target = 0xc0; // ObjectProperty
		constexpr auto TargetPredictionTime = 0xc8; // float
		constexpr auto SelfData = 0xd0; // FAIProxyData
		constexpr auto TargetData = 0x118; // FAIProxyData
	}

	namespace n_URPC_TourGetBracket_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto Bracket = 0x138; // FTourBracket
	}

	namespace n_UProductsArchiveSave_TA {
		constexpr auto ArchivedHashIDs = 0x110; // TArray<FProductHashID>
		constexpr auto __EventProductArchived__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UPartyMessage_PlayerTradeComplete_X {
		constexpr auto TradingMemberId = 0xa8; // FUniqueNetId
	}

	namespace n_UFaceIt_TA {
		constexpr auto MatchInfo = 0x60; // FFaceItMatchInfo
		constexpr auto ReservationData = 0xe0; // FServerReservationData
		constexpr auto JoinTask = 0x160; // ObjectProperty
		constexpr auto Config = 0x168; // ObjectProperty
		constexpr auto OnlineGame = 0x170; // ObjectProperty
		constexpr auto OnlineGameParty = 0x178; // ObjectProperty
		constexpr auto PendingFindMatchTask = 0x180; // ObjectProperty
		constexpr auto __EventJoiningReservation__Delegate = 0x188; // DelegateProperty
		constexpr auto __EventAddReservation__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __EventError__Delegate = 0x1b8; // DelegateProperty
	}

	namespace n_UProductAsset_PaintFinish_TA {
		constexpr auto LightCurveType = 0xf8; // ObjectProperty
		constexpr auto DetailNormal = 0x100; // ObjectProperty
		constexpr auto SpecularTint = 0x108; // float
		constexpr auto RimLightTint = 0x10c; // float
		constexpr auto DiffuseDetailNormalStrength = 0x110; // float
		constexpr auto SpecularDetailNormalStrength = 0x114; // float
		constexpr auto SpecularStrength = 0x118; // float
		constexpr auto EnvironmentStrength = 0x11c; // float
		constexpr auto SparkleStrength = 0x120; // float
		constexpr auto PearlescentStrength = 0x124; // float
		constexpr auto TextureParameterValues = 0x128; // TArray<FTextureParameterValue>
		constexpr auto ScalarParameterValues = 0x138; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x148; // TArray<FVectorParameterValue>
	}

	namespace n_USeqAct_SetLoadout_TA {
		constexpr auto Products = 0x160; // TArray<ObjectProperty>
		constexpr auto ProductsWithPaint = 0x170; // TArray<FProductWithSettings>
		constexpr auto TeamFinish = 0x180; // ObjectProperty
		constexpr auto AccentFinish = 0x188; // ObjectProperty
		constexpr auto bUseInGameColors = 0x190; // uint32_t : 1
		constexpr auto bOverwriteCurrent = 0x190; // uint32_t : 1
		constexpr auto bUseDefaultLoadout = 0x190; // uint32_t : 1
		constexpr auto bApplyToAllCars = 0x190; // uint32_t : 1
		constexpr auto TeamColor = 0x194; // FLinearColor
		constexpr auto AccentColor = 0x1a4; // FLinearColor
		constexpr auto ForcedTeamOverride = 0x1b4; // EForcedTeamOverride
		constexpr auto BodyPaint = 0x1b8; // ObjectProperty
		constexpr auto SkinPaint = 0x1c0; // ObjectProperty
		constexpr auto WheelPaint = 0x1c8; // ObjectProperty
		constexpr auto BoostPaint = 0x1d0; // ObjectProperty
		constexpr auto SSTrailPaint = 0x1d8; // ObjectProperty
		constexpr auto AntennaPaint = 0x1e0; // ObjectProperty
		constexpr auto HatPaint = 0x1e8; // ObjectProperty
		constexpr auto GoalExplosionPaint = 0x1f0; // ObjectProperty
		constexpr auto ParentCar = 0x1f8; // ObjectProperty
	}

	namespace n_UFractureMaterial {
		constexpr auto FractureEffect = 0x60; // ObjectProperty
		constexpr auto FractureSound = 0x68; // ObjectProperty
	}

	namespace n_U__EpicAccountSave_TA__GetLastConvertPlatformFriendsPromptTime_AC4F58324184745134D068AEAAC709E9 {
		constexpr auto OSS = 0x60; // ObjectProperty
	}

	namespace n_ACameraActor {
		constexpr auto bConstrainAspectRatio = 0x268; // uint32_t : 1
		constexpr auto bCamOverridePostProcess = 0x268; // uint32_t : 1
		constexpr auto AspectRatio = 0x26c; // float
		constexpr auto FOVAngle = 0x270; // float
		constexpr auto CamOverridePostProcessAlpha = 0x274; // float
		constexpr auto CamOverridePostProcess = 0x278; // FPostProcessSettings
		constexpr auto CameraShakeCamMod = 0x3e0; // ObjectProperty
		constexpr auto DrawFrustum = 0x3e8; // ComponentProperty
		constexpr auto MeshComp = 0x3f0; // ComponentProperty
	}

	namespace n_U__Eula_TA__RequiresAcceptance_2E46658348FD4C7EA79B149E75CC9054 {
		constexpr auto PlayerPlatform = 0x60; // OnlinePlatform
	}

	namespace n_UInputBufferGraph_TA {
		constexpr auto Buffer = 0x90; // ComponentProperty
		constexpr auto BufferTarget = 0x98; // ComponentProperty
		constexpr auto OverUnderFrames = 0xa0; // ComponentProperty
		constexpr auto PhysicsRate = 0xa8; // ComponentProperty
		constexpr auto MaxPhysicsRate = 0xb0; // float
		constexpr auto MinPhysicsRate = 0xb4; // float
	}

	namespace n_U____OnlineGameParty_X__UpdatePartyInfo_C23118C24288BA0C011DACA7DBB77E2A____OnlineGameParty_X__UpdatePartyInfo_C23118C24288BA0C011DACA7DBB77E2A_DC26386843623A559A260EA6A70BD2D1 {
		constexpr auto PM = 0x60; // FPartyMember
	}

	namespace n_UMaterialExpressionConstantClamp {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Min = 0xf8; // float
		constexpr auto Max = 0xfc; // float
	}

	namespace n_UMutator_RespawnTime_TA {
		constexpr auto RespawnTime = 0x68; // int32_t
		constexpr auto bDisableGoalDelay = 0x6c; // uint32_t : 1
		constexpr auto BallRespawnTime = 0x70; // float
	}

	namespace n_ATraceableSpawnPoint_TA {
		constexpr auto CylinderComp = 0x268; // ComponentProperty
	}

	namespace n_UStaticMeshComponent_TA {
		constexpr auto bIgnoreScriptAttach = 0x308; // uint32_t : 1
	}

	namespace n_UPhysicalMaterialProperty_TA {
		constexpr auto AkSwitchValue = 0x60; // FName
		constexpr auto bStickyWheels = 0x68; // uint32_t : 1
		constexpr auto bConsiderForGround = 0x68; // uint32_t : 1
		constexpr auto GroundToleranceZ = 0x6c; // float
	}

	namespace n_U__GFxData_Friends_TA__CreateEpicFriendInviteNotification_70A077554BD6EAD5B9AD219C8CA00652 {
		constexpr auto InPersona = 0x60; // ObjectProperty
		constexpr auto bSuppressPopup = 0x68; // uint32_t : 1
	}

	namespace n_U__ShopsService_Local_TA__GetAllShops_A764326E41C3D4038ADCB29DF5BFD1C7 {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto Shops = 0x78; // TArray<FShopData>
	}

	namespace n_U__MapSet_TA__GetMap_8847BDF242AF9B8D6F88D19B626D5850 {
		constexpr auto MapName = 0x60; // FName
	}

	namespace n_UGarageArchiveSlot_TA {
		constexpr auto ArchiveSave = 0x60; // ObjectProperty
	}

	namespace n_UMaterialFunction {
		constexpr auto StateId = 0x60; // FGuid
		constexpr auto ParentFunction = 0x70; // ObjectProperty
		constexpr auto Description = 0x78; // FString
		constexpr auto bExposeToLibrary = 0x88; // uint32_t : 1
		constexpr auto bReentrantFlag = 0x88; // uint32_t : 1
		constexpr auto LibraryCategories = 0x90; // TArray<FString>
		constexpr auto FunctionExpressions = 0xa0; // TArray<ObjectProperty>
		constexpr auto FunctionEditorComments = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_UTAsyncResult__PsyTagCheckResult_X {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_URPC_AddPlayerToRole_X {
		constexpr auto RoleID = 0xe8; // int32_t
	}

	namespace n_U__SaveData_TA__GetOnlineProductQuantity_3BCF2D9041011E91F5EBF49F41428453 {
		constexpr auto EquippedOnlineProducts = 0x60; // TArray<FProductInstanceID>
		constexpr auto EquippedProfileProducts = 0x70; // TArray<FProfileProduct>
	}

	namespace n_UPsyNetWordFilter_X {
		constexpr auto Config = 0x70; // ObjectProperty
		constexpr auto PendingFilterRPC = 0x78; // ObjectProperty
	}

	namespace n_UAnimNodeSeries_X {
		constexpr auto bActive = 0x190; // uint32_t : 1
		constexpr auto bInitialized = 0x190; // uint32_t : 1
		constexpr auto IntroAnim = 0x198; // ObjectProperty
		constexpr auto OutroAnim = 0x1a0; // ObjectProperty
	}

	namespace n_UMaterialInterface {
		constexpr auto ParentRefFence = 0x60; // FRenderCommandFence_Mirror
		constexpr auto LightmassSettings = 0x64; // FLightmassMaterialInterfaceSettings
		constexpr auto PreviewMesh = 0x80; // FString
		constexpr auto LightingGuid = 0x90; // FGuid
		constexpr auto bHasQualitySwitch = 0xa0; // uint32_t : 1
		constexpr auto bHasHandheldQualityConnection = 0xa0; // uint32_t : 1
		constexpr auto bStoredHandheldQuality = 0xa0; // uint32_t : 1
		constexpr auto bAutoFlattenMobile = 0xa0; // uint32_t : 1
		constexpr auto bAutoFlattenMobileNormalTexture = 0xa0; // uint32_t : 1
		constexpr auto bMobileAllowFog = 0xa0; // uint32_t : 1
		constexpr auto bGenerateSubUV = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileSpecular = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileVertexSpecular = 0xa0; // uint32_t : 1
		constexpr auto bUseMobilePixelSpecular = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileBumpOffset = 0xa0; // uint32_t : 1
		constexpr auto bLockColorBlending = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileUniformColorMultiply = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileVertexColorMultiply = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileDetailNormal = 0xa0; // uint32_t : 1
		constexpr auto bBaseTextureTransformed = 0xa0; // uint32_t : 1
		constexpr auto bEmissiveTextureTransformed = 0xa0; // uint32_t : 1
		constexpr auto bNormalTextureTransformed = 0xa0; // uint32_t : 1
		constexpr auto bMaskTextureTransformed = 0xa0; // uint32_t : 1
		constexpr auto bDetailTextureTransformed = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileWaveVertexMovement = 0xa0; // uint32_t : 1
		constexpr auto bMobileEnableBounceLight = 0xa0; // uint32_t : 1
		constexpr auto bUseMobileLandscapeMonochromeLayerBlending = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableDiffuse = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableDiffusePower = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableEmissive = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableSpecular = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableSpecualrPower = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableOpacity = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableOpacityMasks = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableDistortion = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableTransmissionMask = 0xa0; // uint32_t : 1
		constexpr auto bHandheldDisableTransmissionColor = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableNormal = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableCustomLighting = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableAnisotropicDirection = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableWorldPositionOffset = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableWorldDisplacement = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableTessellationMultiplier = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableSubsurfaceInscatteringColor = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableSubsurfaceAbsorptionColor = 0xa4; // uint32_t : 1
		constexpr auto bHandheldDisableSubsurfaceScatteringRadius = 0xa4; // uint32_t : 1
		constexpr auto FlattenBackgroundColor = 0xa8; // FColor
		constexpr auto MobileBaseTexture = 0xb0; // ObjectProperty
		constexpr auto FlattenedTexture = 0xb8; // ObjectProperty
		constexpr auto MobileBaseTextureTexCoordsSource = 0xc0; // EMobileTexCoordsSource
		constexpr auto MobileAmbientOcclusionSource = 0xc1; // EMobileAmbientOcclusionSource
		constexpr auto MobileSpecularMask = 0xc2; // EMobileSpecularMask
		constexpr auto MobileEmissiveColorSource = 0xc3; // EMobileEmissiveColorSource
		constexpr auto MobileEmissiveMaskSource = 0xc4; // EMobileValueSource
		constexpr auto MobileEnvironmentMaskSource = 0xc5; // EMobileValueSource
		constexpr auto MobileEnvironmentBlendMode = 0xc6; // EMobileEnvironmentBlendMode
		constexpr auto MobileRimLightingMaskSource = 0xc7; // EMobileValueSource
		constexpr auto MobileMaskTextureTexCoordsSource = 0xc8; // EMobileTexCoordsSource
		constexpr auto MobileAlphaValueSource = 0xc9; // EMobileAlphaValueSource
		constexpr auto MobileDetailTextureTexCoordsSource = 0xca; // EMobileTexCoordsSource
		constexpr auto MobileTextureBlendFactorSource = 0xcb; // EMobileTextureBlendFactorSource
		constexpr auto MobileColorMultiplySource = 0xcc; // EMobileColorMultiplySource
		constexpr auto MobileNormalTexture = 0xd0; // ObjectProperty
		constexpr auto SubUVFrameRate = 0xd8; // float
		constexpr auto SubUVFrameCountAlongAxes = 0xdc; // int32_t
		constexpr auto SubUVFrameSize = 0xe0; // float
		constexpr auto MobileSpecularColor = 0xe4; // FLinearColor
		constexpr auto MobileSpecularPower = 0xf4; // float
		constexpr auto MobileEmissiveTexture = 0xf8; // ObjectProperty
		constexpr auto MobileEmissiveColor = 0x100; // FLinearColor
		constexpr auto MobileEnvironmentTexture = 0x110; // ObjectProperty
		constexpr auto MobileEnvironmentAmount = 0x118; // float
		constexpr auto MobileEnvironmentColor = 0x11c; // FLinearColor
		constexpr auto MobileEnvironmentFresnelAmount = 0x12c; // float
		constexpr auto MobileEnvironmentFresnelExponent = 0x130; // float
		constexpr auto MobileRimLightingStrength = 0x134; // float
		constexpr auto MobileRimLightingExponent = 0x138; // float
		constexpr auto MobileRimLightingColor = 0x13c; // FLinearColor
		constexpr auto MobileBumpOffsetReferencePlane = 0x14c; // float
		constexpr auto MobileBumpOffsetHeightRatio = 0x150; // float
		constexpr auto MobileMaskTexture = 0x158; // ObjectProperty
		constexpr auto MobileOpacityMultiplier = 0x160; // float
		constexpr auto MobileDetailTexture = 0x168; // ObjectProperty
		constexpr auto MobileDetailTexture2 = 0x170; // ObjectProperty
		constexpr auto MobileDetailTexture3 = 0x178; // ObjectProperty
		constexpr auto DefaultUniformColor = 0x180; // FLinearColor
		constexpr auto MobileDefaultUniformColor = 0x190; // FLinearColor
		constexpr auto TransformCenterX = 0x1a0; // float
		constexpr auto MobileTransformCenterX = 0x1a4; // float
		constexpr auto TransformCenterY = 0x1a8; // float
		constexpr auto MobileTransformCenterY = 0x1ac; // float
		constexpr auto PannerSpeedX = 0x1b0; // float
		constexpr auto MobilePannerSpeedX = 0x1b4; // float
		constexpr auto PannerSpeedY = 0x1b8; // float
		constexpr auto MobilePannerSpeedY = 0x1bc; // float
		constexpr auto RotateSpeed = 0x1c0; // float
		constexpr auto MobileRotateSpeed = 0x1c4; // float
		constexpr auto FixedScaleX = 0x1c8; // float
		constexpr auto MobileFixedScaleX = 0x1cc; // float
		constexpr auto FixedScaleY = 0x1d0; // float
		constexpr auto MobileFixedScaleY = 0x1d4; // float
		constexpr auto SineScaleX = 0x1d8; // float
		constexpr auto MobileSineScaleX = 0x1dc; // float
		constexpr auto SineScaleY = 0x1e0; // float
		constexpr auto MobileSineScaleY = 0x1e4; // float
		constexpr auto SineScaleFrequencyMultipler = 0x1e8; // float
		constexpr auto MobileSineScaleFrequencyMultipler = 0x1ec; // float
		constexpr auto FixedOffsetX = 0x1f0; // float
		constexpr auto MobileFixedOffsetX = 0x1f4; // float
		constexpr auto FixedOffsetY = 0x1f8; // float
		constexpr auto MobileFixedOffsetY = 0x1fc; // float
		constexpr auto MobileTangentVertexFrequencyMultiplier = 0x200; // float
		constexpr auto MobileVerticalFrequencyMultiplier = 0x204; // float
		constexpr auto MobileMaxVertexMovementAmplitude = 0x208; // float
		constexpr auto MobileSwayFrequencyMultiplier = 0x20c; // float
		constexpr auto MobileSwayMaxAngle = 0x210; // float
		constexpr auto MobileDirectionalLightDirection = 0x214; // FVector
		constexpr auto MobileDirectionalLightBrightness = 0x220; // float
		constexpr auto MobileDirectionalLightColor = 0x224; // FColor
		constexpr auto MobileBounceLightDirection = 0x228; // FVector
		constexpr auto MobileBounceLightBrightness = 0x234; // float
		constexpr auto MobileBounceLightColor = 0x238; // FColor
		constexpr auto MobileSkyLightBrightness = 0x23c; // float
		constexpr auto MobileSkyLightColor = 0x240; // FColor
		constexpr auto MobileLandscapeLayerNames = 0x244; // FName [0x4]
		constexpr auto MobileLandscapeMonochomeLayerColors = 0x264; // FColor [0x4]
	}

	namespace n_ANxGenericForceFieldBrush {
		constexpr auto ExcludeChannel = 0x2a8; // int32_t
		constexpr auto CollideWithChannels = 0x2ac; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x2b0; // ERBCollisionChannel
		constexpr auto Coordinates = 0x2b1; // FFB_ForceFieldCoordinates
		constexpr auto Constant = 0x2b4; // FVector
		constexpr auto PositionMultiplierX = 0x2c0; // FVector
		constexpr auto PositionMultiplierY = 0x2cc; // FVector
		constexpr auto PositionMultiplierZ = 0x2d8; // FVector
		constexpr auto PositionTarget = 0x2e4; // FVector
		constexpr auto VelocityMultiplierX = 0x2f0; // FVector
		constexpr auto VelocityMultiplierY = 0x2fc; // FVector
		constexpr auto VelocityMultiplierZ = 0x308; // FVector
		constexpr auto VelocityTarget = 0x314; // FVector
		constexpr auto Noise = 0x320; // FVector
		constexpr auto FalloffLinear = 0x32c; // FVector
		constexpr auto FalloffQuadratic = 0x338; // FVector
		constexpr auto TorusRadius = 0x344; // float
		constexpr auto ForceField = 0x348; // FPointer
		constexpr auto ConvexMeshes = 0x350; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x360; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x370; // TArray<FPointer>
		constexpr auto LinearKernel = 0x380; // FPointer
	}

	namespace n_UPsyNetStaticData_X {
		constexpr auto PsyConfigTemplateURL = 0x70; // FString
		constexpr auto LocalCacheTimeoutSeconds = 0x80; // float
		constexpr auto SyncDataTimeoutSeconds = 0x84; // float
		constexpr auto PsyNet = 0x88; // ObjectProperty
		constexpr auto OnlineSub = 0x90; // ObjectProperty
		constexpr auto WebConfig = 0x98; // ObjectProperty
		constexpr auto bDebug = 0xa0; // uint32_t : 1
		constexpr auto bLoaded = 0xa0; // uint32_t : 1
		constexpr auto bBlockingSync = 0xa0; // uint32_t : 1
		constexpr auto CacheTimer = 0xa8; // ComponentProperty
		constexpr auto WebData = 0xb0; // ComponentProperty
		constexpr auto DefaultObjects = 0xb8; // TArray<ObjectProperty>
		constexpr auto DownloadedObjects = 0xc8; // TArray<ObjectProperty>
		constexpr auto RegisteredObjects = 0xd8; // TArray<ObjectProperty>
		constexpr auto SyncDataStopwatch = 0xe8; // ComponentProperty
		constexpr auto PsyConfigQueryParams = 0xf0; // FString
		constexpr auto PsyConfigSecret = 0x100; // FString
		constexpr auto PsyConfigAltEnv = 0x110; // FString
		constexpr auto __EventLoaded__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UWordFilterConfig_X {
		constexpr auto bSanitizeEntirePhrase = 0x78; // uint32_t : 1
		constexpr auto PsyNetFilterEnabled = 0x78; // uint32_t : 1
		constexpr auto NameHistoryCacheLength = 0x7c; // int32_t
		constexpr auto IgnoreFilterList = 0x80; // TArray<EWordFilterUsage>
		constexpr auto PlatformFilterList = 0x90; // TArray<EWordFilterUsage>
		constexpr auto PsyNetWordFilterBatchDelay = 0xa0; // float
		constexpr auto PsyNetWordFilterBatchMaxSize = 0xa4; // int32_t
	}

	namespace n_ADynamicPylon {
		constexpr auto bMoving = 0x4a8; // uint32_t : 1
	}

	namespace n_UFracturedStaticMesh {
		constexpr auto SourceCoreMesh = 0x200; // ObjectProperty
		constexpr auto CoreMeshScale = 0x208; // float
		constexpr auto bSliceUsingCoreCollision = 0x23c; // uint32_t : 1
		constexpr auto FragmentDestroyEffect = 0x240; // ObjectProperty
		constexpr auto FragmentDestroyEffects = 0x248; // TArray<ObjectProperty>
		constexpr auto FragmentDestroyEffectScale = 0x258; // float
		constexpr auto FragmentHealthScale = 0x25c; // float
		constexpr auto FragmentMinHealth = 0x260; // float
		constexpr auto FragmentMaxHealth = 0x264; // float
		constexpr auto bUniformFragmentHealth = 0x268; // uint32_t : 1
		constexpr auto ChunkLinVel = 0x26c; // float
		constexpr auto ChunkAngVel = 0x270; // float
		constexpr auto ChunkLinHorizontalScale = 0x274; // float
		constexpr auto ExplosionVelScale = 0x278; // float
		constexpr auto bCompositeChunksExplodeOnImpact = 0x27c; // uint32_t : 1
		constexpr auto bFixIsolatedChunks = 0x280; // uint32_t : 1
		constexpr auto bAlwaysBreakOffIsolatedIslands = 0x284; // uint32_t : 1
		constexpr auto bSpawnPhysicsChunks = 0x288; // uint32_t : 1
		constexpr auto ChanceOfPhysicsChunk = 0x28c; // float
		constexpr auto ExplosionChanceOfPhysicsChunk = 0x290; // float
		constexpr auto NormalPhysicsChunkScaleMin = 0x294; // float
		constexpr auto NormalPhysicsChunkScaleMax = 0x298; // float
		constexpr auto ExplosionPhysicsChunkScaleMin = 0x29c; // float
		constexpr auto ExplosionPhysicsChunkScaleMax = 0x2a0; // float
		constexpr auto MinConnectionSupportArea = 0x2a4; // float
		constexpr auto DynamicOutsideMaterial = 0x2a8; // ObjectProperty
		constexpr auto LoseChunkOutsideMaterial = 0x2b0; // ObjectProperty
		constexpr auto OutsideMaterialIndex = 0x2b8; // int32_t
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x70; // ETrail2SourceMethod
		constexpr auto SelectionMethod = 0x71; // EParticleSourceSelectionMethod
		constexpr auto SourceName = 0x74; // FName
		constexpr auto SourceStrength = 0x80; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0xa8; // uint32_t : 1
		constexpr auto bInheritRotation = 0xa8; // uint32_t : 1
		constexpr auto SourceOffsetCount = 0xac; // int32_t
		constexpr auto SourceOffsetDefaults = 0xb0; // TArray<FVector>
	}

	namespace n_USoundNodeWave {
		constexpr auto CompressionQuality = 0x78; // int32_t
		constexpr auto bForceRealTimeDecompression = 0x7c; // uint32_t : 1
		constexpr auto bLoopingSound = 0x7c; // uint32_t : 1
		constexpr auto bDynamicResource = 0x7c; // uint32_t : 1
		constexpr auto bUseTTS = 0x7c; // uint32_t : 1
		constexpr auto bProcedural = 0x7c; // uint32_t : 1
		constexpr auto bMature = 0x7c; // uint32_t : 1
		constexpr auto bManualWordWrap = 0x7c; // uint32_t : 1
		constexpr auto bSingleLine = 0x7c; // uint32_t : 1
		constexpr auto TTSSpeaker = 0x80; // ETTSSpeaker
		constexpr auto DecompressionType = 0x81; // EDecompressionType
		constexpr auto MobileDetailMode = 0x82; // EDetailMode
		constexpr auto SpokenText = 0x88; // FString
		constexpr auto Volume = 0x98; // float
		constexpr auto Pitch = 0x9c; // float
		constexpr auto Duration = 0xa0; // float
		constexpr auto NumChannels = 0xa4; // int32_t
		constexpr auto SampleRate = 0xa8; // int32_t
		constexpr auto ChannelOffsets = 0xb0; // TArray<int32_t>
		constexpr auto ChannelSizes = 0xc0; // TArray<int32_t>
		constexpr auto RawData = 0xd0; // FUntypedBulkData_Mirror
		constexpr auto VorbisDecompressor = 0x128; // FPointer
		constexpr auto RawPCMData = 0x130; // FPointer
		constexpr auto RawPCMDataSize = 0x138; // int32_t
		constexpr auto CompressedPCData = 0x140; // FUntypedBulkData_Mirror
		constexpr auto CompressedXbox360Data = 0x198; // FUntypedBulkData_Mirror
		constexpr auto CompressedDingoData = 0x1f0; // FUntypedBulkData_Mirror
		constexpr auto CompressedPS3Data = 0x248; // FUntypedBulkData_Mirror
		constexpr auto CompressedWiiUData = 0x2a0; // FUntypedBulkData_Mirror
		constexpr auto CompressedIPhoneData = 0x2f8; // FUntypedBulkData_Mirror
		constexpr auto CompressedFlashData = 0x350; // FUntypedBulkData_Mirror
		constexpr auto CompressedPS4Data = 0x3a8; // FUntypedBulkData_Mirror
		constexpr auto CompressedNNXData = 0x400; // FUntypedBulkData_Mirror
		constexpr auto ResourceID = 0x458; // int32_t
		constexpr auto ResourceSize = 0x45c; // int32_t
		constexpr auto ResourceData = 0x460; // FPointer
		constexpr auto Subtitles = 0x468; // TArray<FSubtitleCue>
		constexpr auto Comment = 0x478; // FString
		constexpr auto LocalizedSubtitles = 0x488; // TArray<FLocalizedSubtitle>
		constexpr auto SourceFilePath = 0x498; // FString
		constexpr auto SourceFileTimestamp = 0x4a8; // FString
	}

	namespace n_UGFxData_PlayerVanity_TA {
		constexpr auto VanityMgr = 0x98; // ObjectProperty
		constexpr auto GFxPlayerAvatarBorder = 0xa0; // ObjectProperty
		constexpr auto GFxPlayerBanner = 0xa8; // ObjectProperty
	}

	namespace n_UGameSettingPlaylist_X {
		constexpr auto Title = 0x68; // FString
		constexpr auto Description = 0x78; // FString
		constexpr auto BadgeTitle = 0x88; // FString
		constexpr auto PlayerCount = 0x98; // int32_t
		constexpr auto bStandard = 0x9c; // uint32_t : 1
		constexpr auto bRanked = 0x9c; // uint32_t : 1
		constexpr auto bSolo = 0x9c; // uint32_t : 1
		constexpr auto bExtraMode = 0x9c; // uint32_t : 1
		constexpr auto bPrivate = 0x9c; // uint32_t : 1
		constexpr auto bTournament = 0x9c; // uint32_t : 1
		constexpr auto bApplyQuitPenalty = 0x9c; // uint32_t : 1
		constexpr auto bAllowForfeit = 0x9c; // uint32_t : 1
		constexpr auto bDisableRankedReconnect = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreAssignTeams = 0x9c; // uint32_t : 1
		constexpr auto bAllowBotFills = 0x9c; // uint32_t : 1
		constexpr auto bKickOnMigrate = 0x9c; // uint32_t : 1
		constexpr auto bCheckRankedMatchReservationID = 0x9c; // uint32_t : 1
		constexpr auto bServerBroadcastCancellations = 0x9c; // uint32_t : 1
		constexpr auto bSkipGameModeVerification = 0x9c; // uint32_t : 1
		constexpr auto bIsMicroEventPlaylist = 0x9c; // uint32_t : 1
		constexpr auto bHasVariablePlayerCount = 0x9c; // uint32_t : 1
		constexpr auto bNew = 0x9c; // uint32_t : 1
		constexpr auto bAllowClubs = 0x9c; // uint32_t : 1
		constexpr auto bAllowStayAsParty = 0x9c; // uint32_t : 1
		constexpr auto PlaylistImageURL = 0xa0; // FString
		constexpr auto PlaylistImageTexture = 0xb0; // FString
		constexpr auto PlaylistIconActiveURL = 0xc0; // FString
		constexpr auto PlaylistIconInactiveURL = 0xd0; // FString
		constexpr auto PlaylistId = 0xe0; // int32_t
		constexpr auto PlaylistTimeWindow = 0xe8; // ObjectProperty
		constexpr auto PresetMutators = 0xf0; // TArray<ObjectProperty>
		constexpr auto MapName = 0x100; // FName
		constexpr auto ServerCommand = 0x108; // FString
		constexpr auto MapSetName = 0x118; // FName
		constexpr auto PopulationBuckets = 0x120; // TArray<int32_t>
	}

	namespace n_UChallengeManager_TA {
		constexpr auto Challenges = 0x60; // TArray<ObjectProperty>
		constexpr auto ChallengeProgressSyncIDs = 0x70; // TArray<int32_t>
		constexpr auto ClearNewInfoChallengeIDQueue = 0x80; // TArray<int32_t>
		constexpr auto RemovedChallenges = 0x90; // TArray<ObjectProperty>
		constexpr auto PendingNewChallengeIDs = 0xa0; // TArray<int32_t>
		constexpr auto PendingRemovedChallengeIDs = 0xb0; // TArray<int32_t>
		constexpr auto NewChallengesTitle = 0xc0; // FString
		constexpr auto NewChallengesDesc = 0xd0; // FString
		constexpr auto ExpiredChallengesTitle = 0xe0; // FString
		constexpr auto ExpiredChallengesDesc = 0xf0; // FString
		constexpr auto MixedChallengesDesc = 0x100; // FString
		constexpr auto __EventChallengeAdded__Delegate = 0x110; // DelegateProperty
		constexpr auto __EventChallengeCompleted__Delegate = 0x128; // DelegateProperty
		constexpr auto __EventChallengeRewardCollected__Delegate = 0x140; // DelegateProperty
		constexpr auto __EventChallengeProgressChanged__Delegate = 0x158; // DelegateProperty
	}

	namespace n_UEventRecorderConfig_X {
		constexpr auto bEnabled = 0x78; // uint32_t : 1
		constexpr auto bSeparatePlayerIDs = 0x78; // uint32_t : 1
		constexpr auto bExcludePlayerIDs = 0x78; // uint32_t : 1
		constexpr auto DisabledEvents = 0x80; // TArray<FName>
		constexpr auto EventRecorderClass = 0x90; // FNone*
		constexpr auto PlayerNetMetricsPeriod = 0x98; // float
		constexpr auto MaxUnstableConnections = 0x9c; // int32_t
		constexpr auto UnstableConnectionsTimePeriodSeconds = 0xa0; // int32_t
	}

	namespace n_USkyLightVolumeComponent_TA {
		constexpr auto BlendDistance = 0x1d0; // float
		constexpr auto LightToOverride = 0x1d8; // ObjectProperty
		constexpr auto BrushComponent = 0x1e0; // ComponentProperty
		constexpr auto CachedParentToWorld = 0x1f0; // FMatrix
	}

	namespace n_UGFxData_Stats_TA {
		constexpr auto Events = 0x98; // TArray<FGFxStatData>
		constexpr auto StatEvents = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_U__EpicFriendsPlugin_X__RemoveFriend_A356D65E46619E4AF702EC991E84E824 {
		constexpr auto FriendId = 0x60; // FUniqueNetId
	}

	namespace n_UAntiAddiction_TA {
		constexpr auto Hours = 0x60; // int32_t
	}

	namespace n_UExclusiveInteraction_TA {
		constexpr auto ControllersWithExclusiveInputEnabled = 0xd0; // TArray<int32_t>
	}

	namespace n_UDSR_DSMessage_X {
		constexpr auto PlayerID = 0x90; // FString
		constexpr auto ReservationID = 0xa0; // FString
		constexpr auto MessageType = 0xb0; // FString
		constexpr auto MessagePayload = 0xc0; // FString
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x70; // FName
		constexpr auto SelectionMethod = 0x78; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x7c; // uint32_t : 1
		constexpr auto bInheritSourceRotation = 0x7c; // uint32_t : 1
		constexpr auto InheritSourceVelocityScale = 0x80; // float
		constexpr auto InheritSourceRotationScale = 0x84; // float
	}

	namespace n_UGFxAction_SetVariable {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto Variable = 0x168; // FString
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_ULightComponent {
		constexpr auto SceneInfo = 0xa0; // FPointer
		constexpr auto WorldToLight = 0xb0; // FMatrix
		constexpr auto LightToWorld = 0xf0; // FMatrix
		constexpr auto LightGuid = 0x130; // FGuid
		constexpr auto LightmapGuid = 0x140; // FGuid
		constexpr auto Brightness = 0x150; // float
		constexpr auto LightColor = 0x154; // FColor
		constexpr auto Function = 0x158; // ObjectProperty
		constexpr auto bEnabled = 0x160; // uint32_t : 1
		constexpr auto CastShadows = 0x160; // uint32_t : 1
		constexpr auto CastStaticShadows = 0x160; // uint32_t : 1
		constexpr auto CastDynamicShadows = 0x160; // uint32_t : 1
		constexpr auto bCastCompositeShadow = 0x160; // uint32_t : 1
		constexpr auto bAffectCompositeShadowDirection = 0x160; // uint32_t : 1
		constexpr auto bNonModulatedSelfShadowing = 0x160; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x160; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0x160; // uint32_t : 1
		constexpr auto bForceDynamicLight = 0x160; // uint32_t : 1
		constexpr auto UseDirectLightMap = 0x160; // uint32_t : 1
		constexpr auto bHasLightEverBeenBuiltIntoLightMap = 0x160; // uint32_t : 1
		constexpr auto bCanAffectDynamicPrimitivesOutsideDynamicChannel = 0x160; // uint32_t : 1
		constexpr auto bRenderLightShafts = 0x160; // uint32_t : 1
		constexpr auto bUseImageReflectionSpecular = 0x160; // uint32_t : 1
		constexpr auto bPrecomputedLightingIsValid = 0x160; // uint32_t : 1
		constexpr auto bExplicitlyAssignedLight = 0x160; // uint32_t : 1
		constexpr auto bAllowCompositingIntoDLE = 0x160; // uint32_t : 1
		constexpr auto LightEnvironment = 0x168; // ComponentProperty
		constexpr auto LightingChannels = 0x170; // FLightingChannelContainer
		constexpr auto LightAffectsClassification = 0x174; // ELightAffectsClassification
		constexpr auto LightShadowMode = 0x175; // ELightShadowMode
		constexpr auto ModShadowColor = 0x178; // FLinearColor
		constexpr auto ModShadowFadeoutTime = 0x188; // float
		constexpr auto ModShadowFadeoutExponent = 0x18c; // float
		constexpr auto LightListIndex = 0x190; // int32_t
		constexpr auto ShadowProjectionTechnique = 0x194; // EShadowProjectionTechnique
		constexpr auto ShadowFilterQuality = 0x195; // EShadowFilterQuality
		constexpr auto MinShadowResolution = 0x198; // int32_t
		constexpr auto MaxShadowResolution = 0x19c; // int32_t
		constexpr auto ShadowFadeResolution = 0x1a0; // int32_t
		constexpr auto OcclusionDepthRange = 0x1a4; // float
		constexpr auto BloomScale = 0x1a8; // float
		constexpr auto BloomThreshold = 0x1ac; // float
		constexpr auto BloomScreenBlendThreshold = 0x1b0; // float
		constexpr auto BloomTint = 0x1b4; // FColor
		constexpr auto RadialBlurPercent = 0x1b8; // float
		constexpr auto OcclusionMaskDarkness = 0x1bc; // float
		constexpr auto ReflectionSpecularBrightness = 0x1c0; // float
	}

	namespace n_UParticleModuleUberRainSplashB {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto ColorOverLife = 0xd0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0xf8; // FRawDistributionFloat
		constexpr auto LifeMultiplier = 0x120; // FRawDistributionVector
		constexpr auto MultiplyX = 0x148; // uint32_t : 1
		constexpr auto MultiplyY = 0x148; // uint32_t : 1
		constexpr auto MultiplyZ = 0x148; // uint32_t : 1
		constexpr auto StartRotationRate = 0x150; // FRawDistributionFloat
	}

	namespace n_U__GFxData_TourPlatforms_TA__InitPlatformGroups_AF61504245EF7F3B368A7081D50C29B5 {
		constexpr auto PlayerPlatform = 0x60; // OnlinePlatform
	}

	namespace n_USeqAct_ForceFeedback {
		constexpr auto FFWaveform = 0x160; // ObjectProperty
		constexpr auto PredefinedWaveForm = 0x168; // FNone*
	}

	namespace n_UDataAsset_ESportsTeam_TA {
		constexpr auto TeamID = 0x60; // int32_t
		constexpr auto ESportsTeamReference = 0x68; // ObjectProperty
	}

	namespace n_UProductAttribute_Indestructible_TA {
		constexpr auto bIndestructible = 0x80; // uint32_t : 1
	}

	namespace n_UFaceItErrors_TA {
		constexpr auto MatchHasBeenCancelled = 0x80; // ObjectProperty
		constexpr auto CannotJoinCrossPlatformMatch = 0x88; // ObjectProperty
		constexpr auto CannotJoinWhileInParty = 0x90; // ObjectProperty
		constexpr auto CannotJoinWhilePlayingSplitscreen = 0x98; // ObjectProperty
		constexpr auto CannotJoinWhileOnline = 0xa0; // ObjectProperty
		constexpr auto ReturnToMainMenuToJoin = 0xa8; // ObjectProperty
		constexpr auto JoinGameFailed = 0xb0; // ObjectProperty
		constexpr auto NoFaceItMatchFound = 0xb8; // ObjectProperty
		constexpr auto FaceItGameServerPending = 0xc0; // ObjectProperty
		constexpr auto ExternalMatchServerNotFound = 0xc8; // ObjectProperty
		constexpr auto ReservationSentToIncorrectPlayer = 0xd0; // ObjectProperty
	}

	namespace n_UOnlineRecentPlayersList {
		constexpr auto RecentPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto RecentPlayerKeys = 0x70; // TArray<FFriendHistoryKey>
		constexpr auto RecentParties = 0x80; // TArray<FRecentParty>
		constexpr auto LastParty = 0x90; // FRecentParty
		constexpr auto MaxRecentPlayers = 0xe8; // int32_t
		constexpr auto MaxRecentParties = 0xec; // int32_t
		constexpr auto RecentPlayersAddIndex = 0xf0; // int32_t
		constexpr auto RecentPartiesAddIndex = 0xf4; // int32_t
		constexpr auto CurrentPlayers = 0xf8; // TArray<FCurrentPlayerMet>
	}

	namespace n_U__ShopsService_Local_TA__GetCrateShop_6DCE6FE24570168A20D7AAB1186B9E27 {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto Items = 0x78; // TArray<FShopItem>
	}

	namespace n_UOnlineNewsInterfaceMcp {
		constexpr auto NewsItems = 0x80; // TArray<FNewsCacheEntry>
		constexpr auto ReadNewsDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto bNeedsTicking = 0xa0; // uint32_t : 1
		constexpr auto __OnReadNewsCompleted__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UPsyNetConnection_X {
		constexpr auto PsyNet = 0x60; // ObjectProperty
		constexpr auto OnlineSub = 0x68; // ObjectProperty
		constexpr auto Config = 0x70; // ObjectProperty
		constexpr auto RetryConfig = 0x78; // ObjectProperty
		constexpr auto URL = 0x80; // ObjectProperty
		constexpr auto Headers = 0x88; // ComponentProperty
		constexpr auto RequestQue = 0x90; // ObjectProperty
		constexpr auto RPCQueue = 0x98; // ComponentProperty
		constexpr auto ServiceProvider = 0xa0; // ObjectProperty
		constexpr auto HttpMessenger = 0xa8; // ObjectProperty
		constexpr auto PerConMessenger = 0xb0; // ObjectProperty
		constexpr auto PerCon = 0xb8; // ObjectProperty
		constexpr auto PerConMetrics = 0xc0; // ComponentProperty
		constexpr auto bAuthorized = 0xc8; // uint32_t : 1
		constexpr auto bConnected = 0xc8; // uint32_t : 1
		constexpr auto bFreshConnection = 0xc8; // uint32_t : 1
		constexpr auto bPerConConnected = 0xc8; // uint32_t : 1
		constexpr auto ConnectedChangeTime = 0xcc; // float
		constexpr auto DisabledError = 0xd0; // ObjectProperty
		constexpr auto DisabledErrorStack = 0xd8; // TArray<ObjectProperty>
		constexpr auto MaintenanceError = 0xe8; // ObjectProperty
		constexpr auto DuplicateLoginError = 0xf0; // ObjectProperty
		constexpr auto NoInternetError = 0xf8; // ObjectProperty
		constexpr auto NoUrlError = 0x100; // ObjectProperty
		constexpr auto AuthDisabledError = 0x108; // ObjectProperty
		constexpr auto AuthRetryDelays = 0x110; // TArray<float>
		constexpr auto ConsecutiveAuthFailures = 0x120; // int32_t
		constexpr auto __EventConnected__Delegate = 0x128; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0x140; // DelegateProperty
		constexpr auto __EventConnectFailed__Delegate = 0x158; // DelegateProperty
		constexpr auto __EventPerConConnected__Delegate = 0x170; // DelegateProperty
		constexpr auto __EventPerConDisconnected__Delegate = 0x188; // DelegateProperty
		constexpr auto __EventEnabled__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __EventDisabled__Delegate = 0x1b8; // DelegateProperty
	}

	namespace n_UProductAttribute_Quality_TA {
		constexpr auto Quality = 0x80; // EProductQuality
	}

	namespace n_URPC_MicroTransactions_GetCatalog_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Category = 0x130; // FName
		constexpr auto MTXProducts = 0x138; // TArray<FMTCatalogInfo>
		constexpr auto Currency = 0x148; // FString
	}

	namespace n_USeqAct_SetString {
		constexpr auto Target = 0x160; // FString
		constexpr auto Value = 0x170; // FString
	}

	namespace n_U__AdHocInterface_X__EnableAdHoc_9BD138A7426F4D25669E2DB8EA4B7FE1 {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto InitDelegate = 0x68; // DelegateProperty
	}

	namespace n_UGFxData_PersonaGroup_TA {
		constexpr auto GroupTitle = 0x98; // FString
		constexpr auto GroupId = 0xa8; // int32_t
		constexpr auto bPsyNetGroup = 0xac; // uint32_t : 1
		constexpr auto GroupOrigin = 0xb0; // EPersonaInfoOrigin
	}

	namespace n_UNavMeshGoal_Random {
		constexpr auto MinDist = 0x80; // int32_t
		constexpr auto BestRating = 0x84; // float
		constexpr auto PartialGoal = 0x88; // FPointer
	}

	namespace n_UGFxData_RedeemCodes_TA {
		constexpr auto RedeemTask = 0x98; // ObjectProperty
		constexpr auto RedeemingTitleString = 0xa0; // FString
		constexpr auto RedeemingBodyString = 0xb0; // FString
	}

	namespace n_U__ShopsService_Local_TA__GetShopCatalogue_44A4BEE8481B339340E0E0ACA506ADFB {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto Items = 0x78; // TArray<FShopItem>
	}

	namespace n_UShopMetrics_TA {
		constexpr auto CurrentShopTabMetrics = 0x80; // TArray<FShopTabData>
		constexpr auto CurrentBrowseSourceID = 0x90; // int32_t
	}

	namespace n_U__StayAsPartySystem_TA__HandlePartyChanged_AADC73F343AFA00AEAC842A54D74238C {
		constexpr auto PartyEvent = 0x60; // ObjectProperty
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0xb1a8; // TArray<ObjectProperty>
		constexpr auto bUseSessionUID = 0xb1d4; // uint32_t : 1
		constexpr auto BadConnectionPingThreshold = 0xb1e0; // float
		constexpr auto BadConnectionReceiveTimeThreshold = 0xb1e4; // float
	}

	namespace n_UActorFactoryArchetype {
		constexpr auto ArchetypeActor = 0xa0; // ObjectProperty
	}

	namespace n_UAnimNode {
		constexpr auto bRelevant = 0x90; // uint32_t : 1
		constexpr auto bJustBecameRelevant = 0x90; // uint32_t : 1
		constexpr auto bTickDuringPausedAnims = 0x90; // uint32_t : 1
		constexpr auto bEditorOnly = 0x90; // uint32_t : 1
		constexpr auto bDisableCaching = 0x90; // uint32_t : 1
		constexpr auto bCallScriptEventOnInit = 0x90; // uint32_t : 1
		constexpr auto bCallScriptEventOnBecomeRelevant = 0x90; // uint32_t : 1
		constexpr auto bCallScriptEventOnCeaseRelevant = 0x90; // uint32_t : 1
		constexpr auto NodeTickTag = 0x94; // int32_t
		constexpr auto NodeInitTag = 0x98; // int32_t
		constexpr auto NodeEndEventTick = 0x9c; // int32_t
		constexpr auto TickArrayIndex = 0xa0; // int32_t
		constexpr auto NodeCachedAtomsTag = 0xa4; // int32_t
		constexpr auto NodeTotalWeight = 0xa8; // float
		constexpr auto ParentNodes = 0xb0; // TArray<ObjectProperty>
		constexpr auto NodeName = 0xc0; // FName
		constexpr auto CachedBoneAtoms = 0xc8; // TArray<FBoneAtom>
		constexpr auto CachedNumDesiredBones = 0xd8; // char
		constexpr auto CachedRootMotionDelta = 0xe0; // FBoneAtom
		constexpr auto bCachedHasRootMotion = 0x100; // int32_t
		constexpr auto CachedCurveKeys = 0x108; // TArray<FCurveKey>
		constexpr auto SearchTag = 0x118; // int32_t
		constexpr auto LastUpdatedAnimMorphKeys = 0x120; // TArray<FCurveKey>
	}

	namespace n_UPath_TowardPoint {
		constexpr auto GoalPoint = 0x70; // FVector
	}

	namespace n_UObjectProvider {
		constexpr auto VfTable_FObjectDestructionSubscriber = 0x70; // FPointer
		constexpr auto MyObjects = 0x78; // TArray<ObjectProperty>
		constexpr auto ObjectRefs = 0x88; // FMap_Mirror
		constexpr auto TreeObjects = 0xd8; // TArray<ObjectProperty>
		constexpr auto SubscribedToAdds = 0xe8; // TArray<FObjectProviderSubscription>
		constexpr auto SubscribedToRemoves = 0xf8; // TArray<FObjectProviderSubscription>
		constexpr auto SubscribedToLists = 0x108; // TArray<FObjectProviderSubscription>
		constexpr auto Injections = 0x118; // FArray_Mirror
		constexpr auto InterfaceInjections = 0x128; // FArray_Mirror
		constexpr auto PendingInjectionClasses = 0x138; // TArray<FNone*>
		constexpr auto PendingCallbacks = 0x148; // TArray<FObjectProviderPendingCallback>
		constexpr auto bTriggeringCallbacks = 0x158; // char
		constexpr auto Parent = 0x160; // ComponentProperty
		constexpr auto Children = 0x168; // TArray<ComponentProperty>
		constexpr auto Proxies = 0x178; // TArray<ComponentProperty>
		constexpr auto PendingInjectionCallbacks = 0x188; // TArray<FObjectProviderPendingCallback>
		constexpr auto __ObjectSubscriptionCallback__Delegate = 0x198; // DelegateProperty
		constexpr auto __ObjectListSubscriptionCallback__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __ObjectChangeCallback__Delegate = 0x1c8; // DelegateProperty
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x78; // TArray<float>
	}

	namespace n_UTAsyncResult__array_LanServerRecord_X {
		constexpr auto Result = 0xd0; // TArray<ObjectProperty>
		constexpr auto __EventResult__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x110; // DelegateProperty
	}

	namespace n_URimSpinner_TA {
		constexpr auto AccelRate = 0x78; // float
		constexpr auto DecelRate = 0x7c; // float
		constexpr auto MaxSpeed = 0x80; // float
		constexpr auto BoneControlName = 0x84; // FName
		constexpr auto SpinScale = 0x8c; // float
		constexpr auto WheelIndex = 0x90; // int32_t
		constexpr auto CurrentSpeed = 0x94; // float
		constexpr auto CurrentRotation = 0x98; // int32_t
		constexpr auto SkelMeshComponent = 0xa0; // ComponentProperty
		constexpr auto SpinBoneController = 0xa8; // ObjectProperty
		constexpr auto WheelBoneController = 0xb0; // ObjectProperty
		constexpr auto Wheel = 0xb8; // ComponentProperty
		constexpr auto bIsMainMenu = 0xc0; // uint32_t : 1
	}

	namespace n_UTerrainMaterial {
		constexpr auto LocalToMapping = 0x60; // FMatrix
		constexpr auto MappingType = 0xa0; // ETerrainMappingType
		constexpr auto MappingScale = 0xa4; // float
		constexpr auto MappingRotation = 0xa8; // float
		constexpr auto MappingPanU = 0xac; // float
		constexpr auto MappingPanV = 0xb0; // float
		constexpr auto Material = 0xb8; // ObjectProperty
		constexpr auto DisplacementMap = 0xc0; // ObjectProperty
		constexpr auto DisplacementScale = 0xc8; // float
	}

	namespace n_UStatEvent_TA {
		constexpr auto Points = 0x60; // int32_t
		constexpr auto CooldownSeconds = 0x64; // float
		constexpr auto bAddToScore = 0x68; // uint32_t : 1
		constexpr auto bIsLeaderboardStat = 0x68; // uint32_t : 1
		constexpr auto bNotifyTicker = 0x68; // uint32_t : 1
		constexpr auto bShowOnHUD = 0x68; // uint32_t : 1
		constexpr auto bPrimaryStat = 0x68; // uint32_t : 1
		constexpr auto bSkipReplication = 0x68; // uint32_t : 1
		constexpr auto bCanMute = 0x68; // uint32_t : 1
		constexpr auto bCountMultiplied = 0x68; // uint32_t : 1
		constexpr auto Group = 0x70; // ObjectProperty
		constexpr auto Texture = 0x78; // ObjectProperty
		constexpr auto UISound = 0x80; // FName
		constexpr auto DisplayProductStatClass = 0x88; // FNone*
		constexpr auto Label = 0x90; // FString
		constexpr auto PluralLabel = 0xa0; // FString
		constexpr auto Description = 0xb0; // FString
	}

	namespace n_UGFxData_Mutators_TA {
		constexpr auto SelectedMapName = 0x98; // FName
		constexpr auto SelectedGameMode = 0xa0; // int32_t
		constexpr auto SelectedBotDifficulty = 0xa4; // int32_t
		constexpr auto GameModes = 0xa8; // TArray<FGameModeData>
		constexpr auto CustomGameSettings = 0xb8; // TArray<FCustomGameSetting>
		constexpr auto GameSettingCategories = 0xc8; // TArray<ObjectProperty>
		constexpr auto PresetCategoryIndex = 0xd8; // int32_t
		constexpr auto ModeMaps = 0xe0; // TArray<FModeMapPair>
		constexpr auto SettingsType = 0xf0; // ECustomMatchSettingsType
		constexpr auto Profile = 0xf8; // ObjectProperty
		constexpr auto GameModeObj = 0x100; // ObjectProperty
		constexpr auto GameTags = 0x108; // ObjectProperty
	}

	namespace n_URegionPingMessage_X {
		constexpr auto bIsResponse = 0x60; // uint32_t : 1
	}

	namespace n_USeqAct_SetMesh {
		constexpr auto NewSkeletalMesh = 0x160; // ObjectProperty
		constexpr auto NewStaticMesh = 0x168; // ObjectProperty
		constexpr auto MeshType = 0x170; // EMeshType
		constexpr auto bIsAllowedToMove = 0x174; // uint32_t : 1
		constexpr auto bAllowDecalsToReattach = 0x174; // uint32_t : 1
	}

	namespace n_UGFxData_TourCheckIn_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
		constexpr auto TeamName = 0xa0; // FString
		constexpr auto TeamSettings = 0xb0; // FCustomMatchTeamSettings
		constexpr auto SaveData = 0xd0; // ObjectProperty
		constexpr auto TournamentJoinTitle = 0xd8; // FString
		constexpr auto MatchmakingCancelledOnCheckIn = 0xe8; // FString
	}

	namespace n_URPC_TestPlayerID_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ResponsePlayerID = 0x130; // FUniqueNetId
	}

	namespace n_UInterpTrackHeadTracking {
		constexpr auto HeadTrackingTrack = 0xc8; // TArray<FHeadTrackingKey>
		constexpr auto TrackControllerName = 0xd8; // TArray<FName>
		constexpr auto LookAtActorRadius = 0xe8; // float
		constexpr auto bDisableBeyondLimit = 0xec; // uint32_t : 1
		constexpr auto bLookAtPawns = 0xec; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xf0; // float
		constexpr auto MinLookAtTime = 0xf4; // float
		constexpr auto MaxInterestTime = 0xf8; // float
		constexpr auto ActorClassesToLookAt = 0x100; // TArray<FNone*>
		constexpr auto TargetBoneNames = 0x110; // TArray<FName>
	}

	namespace n_UOSSConfig_X {
		constexpr auto bEnablePresence = 0x78; // uint32_t : 1
	}

	namespace n_ULanMessage_HostQuery_X {
		constexpr auto Filter = 0x68; // FCustomMatchSettings
		constexpr auto BuildID = 0xf8; // int32_t
		constexpr auto bHost = 0xfc; // uint32_t : 1
	}

	namespace n_UOnlinePlayerStorageQueue_X {
		constexpr auto Config = 0x60; // ObjectProperty
		constexpr auto QueuedObjects = 0x68; // TArray<FPendingStorage>
		constexpr auto PendingObjects = 0x78; // TArray<FPendingStorage>
		constexpr auto DefaultStorageMaxSizeBytes = 0x88; // float
		constexpr auto StorageMaxSizes = 0x90; // TArray<FStorageMaxSize>
		constexpr auto __EventStorageSuccess__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventOutOfSync__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventStorageError__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_UDistributionVectorUniformRange {
		constexpr auto MaxHigh = 0x80; // FVector
		constexpr auto MaxLow = 0x8c; // FVector
		constexpr auto MinHigh = 0x98; // FVector
		constexpr auto MinLow = 0xa4; // FVector
	}

	namespace n_UStatusTrigger_X {
		constexpr auto bTriggered = 0x60; // uint32_t : 1
		constexpr auto EventPropertyChange = 0x68; // DelegateProperty
	}

	namespace n_U__OnlineProduct_TA__RemoveAttributes_F59789804B4D646A4749D7998FA68F2E {
		constexpr auto AttributeClass = 0x60; // FNone*
	}

	namespace n_USeqAct_ReinitPhys_TA {
		constexpr auto RBObj = 0x160; // ObjectProperty
	}

	namespace n_ULevelStreamingAlwaysLoaded {
		constexpr auto bIsProceduralBuildingLODLevel = 0x118; // uint32_t : 1
	}

	namespace n_URPC_RecordMatchResults_X {
		constexpr auto MatchGUID = 0xe8; // FString
		constexpr auto Match = 0xf8; // FSkillMatchData
		constexpr auto MatchName = 0x118; // FString
		constexpr auto Winners = 0x128; // TArray<FSkillMatchPlayer>
		constexpr auto Losers = 0x138; // TArray<FSkillMatchPlayer>
		constexpr auto AppSessionID = 0x148; // FGuid
		constexpr auto LevelSessionID = 0x158; // FGuid
		constexpr auto bIsBotMatch = 0x168; // uint32_t : 1
	}

	namespace n_U__CarMeshComponentBase_TA__CreateWheelAttachment_AB96541F483D0D5F64FB2AAEF3F8E940 {
		constexpr auto Asset = 0x60; // ObjectProperty
		constexpr auto PrimComp = 0x68; // ComponentProperty
	}

	namespace n_U__OnlineGameParty_TA__IsProductValidAfterVerify_CC7F162743F333DEE8191C882E0CAD87 {
		constexpr auto OPD = 0x60; // FOnlineProductData
	}

	namespace n_UCodecMovie {
		constexpr auto PlaybackDuration = 0x60; // float
	}

	namespace n_UPBRuleNodeTransform {
		constexpr auto Translation = 0x98; // ComponentProperty
		constexpr auto Rotation = 0xa0; // ComponentProperty
		constexpr auto Scale = 0xa8; // ComponentProperty
	}

	namespace n_UClientXPSave_TA {
		constexpr auto TotalXP = 0xc8; // int32_t
		constexpr auto Level = 0xcc; // int32_t
		constexpr auto CurrentLevelXPThreshold = 0xd0; // int32_t
		constexpr auto NextLevelXPThreshold = 0xd4; // int32_t
		constexpr auto __EventXPUpdated__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventLevelUpdated__Delegate = 0xf0; // DelegateProperty
	}

	namespace n_UEngineAudioRevSimGearManager_TA {
		constexpr auto RealGear = 0x70; // int32_t
		constexpr auto FakeGear = 0x74; // int32_t
		constexpr auto bPendingSilentDownShift = 0x78; // uint32_t : 1
		constexpr auto TimeRemaining = 0x7c; // float
		constexpr auto SilentDownShiftDelay = 0x80; // float
	}

	namespace n_UGFxData_TourSubscription_TA {
		constexpr auto TourSettings = 0x98; // ObjectProperty
		constexpr auto TourList = 0xa0; // ComponentProperty
		constexpr auto Difficulty = 0xa8; // int32_t
		constexpr auto Placement = 0xac; // int32_t
	}

	namespace n_UPsyNetService_FaceItMatchComplete_TA {
		constexpr auto MatchID = 0x90; // int32_t
	}

	namespace n_UContentSave_TA {
		constexpr auto Config = 0xc8; // ObjectProperty
		constexpr auto ContentMap2 = 0xd0; // TArray<FContentPair>
	}

	namespace n_UBeamTraceComponent_TA {
		constexpr auto BeamSystems = 0xa8; // TArray<ComponentProperty>
		constexpr auto TraceDistance = 0xb8; // float
		constexpr auto MinRetraceRate = 0xbc; // float
		constexpr auto MaxRetraceRate = 0xc0; // float
		constexpr auto Beams = 0xc8; // TArray<FBeamTraceProps>
		constexpr auto FXOwner = 0xd8; // ObjectProperty
	}

	namespace n_USeqAct_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x160; // ObjectProperty
		constexpr auto FaceFXGroupName = 0x168; // FString
		constexpr auto FaceFXAnimName = 0x178; // FString
		constexpr auto SoundCueToPlay = 0x188; // ObjectProperty
		constexpr auto AkEventToPlay = 0x190; // ObjectProperty
	}

	namespace n_AAmbientSound {
		constexpr auto bAutoPlay = 0x270; // uint32_t : 1
		constexpr auto bIsPlaying = 0x270; // uint32_t : 1
		constexpr auto AudioComponent = 0x278; // ComponentProperty
	}

	namespace n_AGameInfo_X {
		constexpr auto GameReplicationInfoArchetype = 0x470; // ObjectProperty
		constexpr auto PlayerControllerArchetype = 0x478; // ObjectProperty
		constexpr auto PawnArchetype = 0x480; // ObjectProperty
		constexpr auto PCPausers = 0x488; // TArray<FPauserData>
		constexpr auto __EventSpawned__Delegate = 0x498; // DelegateProperty
		constexpr auto __EventInit__Delegate = 0x4b0; // DelegateProperty
	}

	namespace n_UOnlineClubServerList_X {
		constexpr auto Servers = 0x60; // TArray<ObjectProperty>
		constexpr auto RPC = 0x70; // ObjectProperty
		constexpr auto Error = 0x78; // ObjectProperty
	}

	namespace n_UBallTrajectoryComponent_Mesh_TA {
		constexpr auto InterpMeshes = 0x110; // TArray<FMeshInfo>
		constexpr auto MIC = 0x120; // ObjectProperty
		constexpr auto StaticMesh = 0x128; // ObjectProperty
		constexpr auto BeamColor_Max = 0x130; // FColor
		constexpr auto BeamColor_Mid = 0x134; // FColor
		constexpr auto BeamColor_Min = 0x138; // FColor
		constexpr auto MinInterpSpeed = 0x13c; // float
		constexpr auto MeshScale = 0x140; // float
		constexpr auto MeshMoveSpeed = 0x144; // float
		constexpr auto MeshRotateSpeed = 0x148; // float
		constexpr auto TrajectoryPlayTestScale = 0x14c; // float
	}

	namespace n_U__CarPreviewActor_TA__UpdateTranslations_5CE1B6FC493B033868BCFA9BE417A53E {
		constexpr auto BodyAsset = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_Playlist_TA {
		constexpr auto Playlist = 0x98; // ObjectProperty
		constexpr auto Id = 0xa0; // int32_t
		constexpr auto KeyName = 0xa8; // FString
		constexpr auto FriendlyName = 0xb8; // FString
		constexpr auto Description = 0xc8; // FString
		constexpr auto BadgeTitle = 0xd8; // FString
		constexpr auto TeamSize = 0xe8; // int32_t
		constexpr auto bStandardMatch = 0xec; // uint32_t : 1
		constexpr auto bRanked = 0xec; // uint32_t : 1
		constexpr auto bSolo = 0xec; // uint32_t : 1
		constexpr auto bSelected = 0xec; // uint32_t : 1
		constexpr auto bEnabled = 0xec; // uint32_t : 1
		constexpr auto bRestricted = 0xec; // uint32_t : 1
		constexpr auto bNew = 0xec; // uint32_t : 1
		constexpr auto bIsMicroEventPlaylist = 0xec; // uint32_t : 1
		constexpr auto bTournament = 0xec; // uint32_t : 1
		constexpr auto bCompletedPlacementMatches = 0xec; // uint32_t : 1
		constexpr auto bPlaylistAllowsStayAsParty = 0xec; // uint32_t : 1
		constexpr auto bUndersizedPartyWithRankDisparity = 0xec; // uint32_t : 1
		constexpr auto bIsTimeRestricted = 0xec; // uint32_t : 1
		constexpr auto PlaylistBackgroundTexture = 0xf0; // ObjectProperty
		constexpr auto PlaylistIconActiveTexture = 0xf8; // ObjectProperty
		constexpr auto PlaylistIconInactiveTexture = 0x100; // ObjectProperty
		constexpr auto PlayerCountBucket = 0x108; // EPlaylistPopulationBucket
		constexpr auto SkillTier = 0x10c; // int32_t
		constexpr auto SkillDivision = 0x110; // int32_t
		constexpr auto SkillMatchesPlayed = 0x114; // int32_t
		constexpr auto SkillPlacementMatchesPlayed = 0x118; // int32_t
		constexpr auto SkillMMR = 0x11c; // float
		constexpr auto PrevSkillTier = 0x120; // int32_t
		constexpr auto PrevSkillDivision = 0x124; // int32_t
		constexpr auto XPLevelUnlocked = 0x128; // int32_t
		constexpr auto MaximumRankDisparity = 0x12c; // int32_t
		constexpr auto StartTime = 0x130; // QWordProperty
		constexpr auto EndTime = 0x138; // QWordProperty
		constexpr auto MicroEventConfig = 0x140; // ObjectProperty
	}

	namespace n_UPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x70; // float
		constexpr auto bSoft = 0x74; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x78; // float
	}

	namespace n_UBlogTile_X {
		constexpr auto Title = 0x60; // FString
		constexpr auto DescriptionHeader = 0x70; // FString
		constexpr auto Description = 0x80; // FString
		constexpr auto WebURL = 0x90; // FString
		constexpr auto CarName = 0xa0; // FString
		constexpr auto ImageURL = 0xb0; // FString
		constexpr auto StartTime = 0xc0; // FString
		constexpr auto StartTimeEpoch = 0xd0; // QWordProperty
		constexpr auto EndTime = 0xd8; // FString
		constexpr auto EndTimeEpoch = 0xe8; // QWordProperty
		constexpr auto LinkType = 0xf0; // ELinkType
		constexpr auto ShopID = 0xf4; // int32_t
		constexpr auto ShopItemID = 0xf8; // int32_t
		constexpr auto ProductID = 0xfc; // int32_t
		constexpr auto CategoryID = 0x100; // int32_t
		constexpr auto PlaylistId = 0x104; // int32_t
		constexpr auto InfoURL = 0x108; // FString
	}

	namespace n_USwfMovie {
		constexpr auto bUsesFontlib = 0xa0; // uint32_t : 1
		constexpr auto bSetSRGBOnImportedTextures = 0xa0; // uint32_t : 1
		constexpr auto bPackTextures = 0xa0; // uint32_t : 1
		constexpr auto bForceSquarePacking = 0xa0; // uint32_t : 1
		constexpr auto SourceFile = 0xa8; // FString
		constexpr auto PackTextureSize = 0xb8; // int32_t
		constexpr auto TextureRescale = 0xbc; // FlashTextureRescale
		constexpr auto TextureFormat = 0xc0; // FString
		constexpr auto SourceFileTimestamp = 0xd0; // FString
		constexpr auto SourceFileCRC = 0xe0; // int32_t
		constexpr auto Editions = 0xe8; // TArray<EEdition>
		constexpr auto Features = 0xf8; // TArray<FName>
		constexpr auto RTTextures = 0x108; // int32_t
		constexpr auto RTVideoTextures = 0x10c; // int32_t
		constexpr auto ImportTimeStamp = 0x110; // QWordProperty
	}

	namespace n_UClubErrors_X {
		constexpr auto ClubNotFound = 0x80; // ObjectProperty
		constexpr auto PlayerAlreadyInClub = 0x88; // ObjectProperty
		constexpr auto PlayerInSameClub = 0x90; // ObjectProperty
		constexpr auto PlayerInDifferentClub = 0x98; // ObjectProperty
		constexpr auto NotClubOwner = 0xa0; // ObjectProperty
		constexpr auto ClubNameChangeNotAllowed = 0xa8; // ObjectProperty
		constexpr auto ClubFull = 0xb0; // ObjectProperty
		constexpr auto ClubMemberNotFound = 0xb8; // ObjectProperty
		constexpr auto ClubInviteNotFound = 0xc0; // ObjectProperty
		constexpr auto ClubInvalidParameters = 0xc8; // ObjectProperty
		constexpr auto ClubNameInvalid = 0xd0; // ObjectProperty
		constexpr auto ClubTagInvalid = 0xd8; // ObjectProperty
		constexpr auto ClubTagPlusNameInvalid = 0xe0; // ObjectProperty
		constexpr auto ClubMotdInvalid = 0xe8; // ObjectProperty
		constexpr auto ClubNameTaken = 0xf0; // ObjectProperty
		constexpr auto ClubOwnerCannotLeaveUnlessEmpty = 0xf8; // ObjectProperty
		constexpr auto CrossPlatformClubsDisabled = 0x100; // ObjectProperty
		constexpr auto ClubInviteCrossPlatformClubsDisabled = 0x108; // ObjectProperty
		constexpr auto ClubBanned = 0x110; // ObjectProperty
	}

	namespace n_UGameSettingPlaylist_TA {
		constexpr auto XPLevelUnlocked = 0x130; // int32_t
		constexpr auto MapSkillRequirements = 0x138; // TArray<FMapSkillSettings>
		constexpr auto TourServerInfoClass = 0x148; // FNone*
		constexpr auto bAllowHonorDuelChallenges = 0x150; // uint32_t : 1
		constexpr auto TeamColors = 0x158; // TArray<FTeamColor>
		constexpr auto BallSuperSonicColor = 0x168; // FColorOverride
	}

	namespace n_ULoadoutRenderer_TA {
		constexpr auto ThumbnailRenderer = 0x60; // ObjectProperty
		constexpr auto Loader = 0x68; // ComponentProperty
		constexpr auto TeamArchetype = 0x70; // ObjectProperty
		constexpr auto __EventLoadoutRendered__Delegate = 0x78; // DelegateProperty
	}

	namespace n_URPC_BuildBlueprint_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto ExpectedPrice = 0x140; // int32_t
		constexpr auto ProductData = 0x148; // FOnlineProductData
		constexpr auto WalletCurrencies = 0x188; // TArray<FCurrency>
	}

	namespace n_USeqAct_SetMotionBlurParams {
		constexpr auto MotionBlurAmount = 0x178; // float
		constexpr auto InterpolateSeconds = 0x17c; // float
		constexpr auto InterpolateElapsed = 0x180; // float
		constexpr auto OldMotionBlurAmount = 0x184; // float
	}

	namespace n_ANxCylindricalForceField {
		constexpr auto RadialStrength = 0x2c0; // float
		constexpr auto RotationalStrength = 0x2c4; // float
		constexpr auto LiftStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceTopRadius = 0x2d0; // float
		constexpr auto LiftFalloffHeight = 0x2d4; // float
		constexpr auto EscapeVelocity = 0x2d8; // float
		constexpr auto ForceHeight = 0x2dc; // float
		constexpr auto HeightOffset = 0x2e0; // float
		constexpr auto UseSpecialRadialForce = 0x2e4; // uint32_t : 1
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_UActorComponent {
		constexpr auto LocalViewers = 0x70; // TArray<ObjectProperty>
		constexpr auto BulletSceneGroup = 0x80; // char
		constexpr auto Scene = 0x88; // FPointer
		constexpr auto Owner = 0x90; // ObjectProperty
		constexpr auto bAttached = 0x98; // uint32_t : 1
		constexpr auto bTickInEditor = 0x98; // uint32_t : 1
		constexpr auto bNeedsReattach = 0x98; // uint32_t : 1
		constexpr auto bNeedsUpdateTransform = 0x98; // uint32_t : 1
		constexpr auto TickGroup = 0x9c; // ETickingGroup
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x70; // uint32_t : 1
	}

	namespace n_USeqAct_GetDistance {
		constexpr auto Distance = 0x160; // float
	}

	namespace n_UTerrainLayerSetup {
		constexpr auto Materials = 0x60; // TArray<FTerrainFilteredMaterial>
	}

	namespace n_UOnlinePlaylistManager {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Playlists = 0x68; // TArray<FPlaylist>
		constexpr auto PlaylistFileNames = 0x78; // TArray<FString>
		constexpr auto DatastoresToRefresh = 0x88; // TArray<FName>
		constexpr auto DownloadCount = 0x98; // int32_t
		constexpr auto SuccessfulCount = 0x9c; // int32_t
		constexpr auto VersionNumber = 0xa0; // int32_t
		constexpr auto PopulationData = 0xa8; // TArray<FPlaylistPopulation>
		constexpr auto WorldwideTotalPlayers = 0xb8; // int32_t
		constexpr auto RegionTotalPlayers = 0xbc; // int32_t
		constexpr auto TitleFileInterface = 0xc0; // TScriptInterface<Class>
		constexpr auto PopulationFileName = 0xd0; // FString
		constexpr auto NextPlaylistPopulationUpdateTime = 0xe0; // float
		constexpr auto PlaylistPopulationUpdateInterval = 0xe4; // float
		constexpr auto MinPlaylistIdToReport = 0xe8; // int32_t
		constexpr auto CurrentPlaylistId = 0xec; // int32_t
		constexpr auto EventsInterfaceName = 0xf0; // FName
		constexpr auto DataCenterId = 0xf8; // int32_t
		constexpr auto DataCenterFileName = 0x100; // FString
		constexpr auto LastPlaylistDownloadTime = 0x110; // float
		constexpr auto PlaylistRefreshInterval = 0x114; // float
		constexpr auto __OnReadPlaylistComplete__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnPlaylistPopulationDataUpdated__Delegate = 0x130; // DelegateProperty
	}

	namespace n_UExplosionHitHandler_X {
		constexpr auto StartTime = 0xa8; // float
		constexpr auto EndTime = 0xac; // float
		constexpr auto CollisionInformation = 0xb0; // ComponentProperty
		constexpr auto bIgnoreInstigator = 0xb8; // uint32_t : 1
		constexpr auto bPassThroughWorldGeometry = 0xb8; // uint32_t : 1
		constexpr auto bOnlyApplyImpulseOnce = 0xb8; // uint32_t : 1
		constexpr auto bDebug = 0xb8; // uint32_t : 1
		constexpr auto bPullTowardHitLocation = 0xb8; // uint32_t : 1
		constexpr auto Falloff = 0xbc; // float
		constexpr auto RBVelocityChange = 0xc0; // float
		constexpr auto Speed = 0xc4; // float
		constexpr auto MomentumOffset = 0xc8; // FVector
		constexpr auto GoalWorldBox = 0xd4; // FBox
		constexpr auto LifeTime = 0xf0; // float
	}

	namespace n_UTAsyncResult__array_ClubInvite_X {
		constexpr auto Result = 0xd0; // TArray<ObjectProperty>
		constexpr auto __EventResult__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x110; // DelegateProperty
	}

	namespace n_UMcpUserInventoryBase {
		constexpr auto McpUserInventoryClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDeleteSaveSlotComplete__Delegate = 0xa0; // DelegateProperty
		constexpr auto __OnQuerySaveSlotListComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnQueryInventoryItemsComplete__Delegate = 0xd0; // DelegateProperty
		constexpr auto __OnPurchaseItemComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnSellItemComplete__Delegate = 0x100; // DelegateProperty
		constexpr auto __OnEarnItemComplete__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnConsumeItemComplete__Delegate = 0x130; // DelegateProperty
		constexpr auto __OnDeleteItemComplete__Delegate = 0x148; // DelegateProperty
		constexpr auto __OnRecordIapComplete__Delegate = 0x160; // DelegateProperty
	}

	namespace n_UArenaReflectionsManager_TA {
		constexpr auto SoccarGame = 0x60; // ObjectProperty
		constexpr auto SlapbackSetups = 0x68; // TArray<FSlapbackActorSetup>
		constexpr auto ArenaReverbSetups = 0x78; // TArray<FSlapbackActorSetup>
		constexpr auto SlapBackActors = 0x88; // TArray<ObjectProperty>
		constexpr auto ArenaReverbEmitters = 0x98; // TArray<ObjectProperty>
		constexpr auto ImpactIntensityKey = 0xa8; // FName
		constexpr auto SlapbackDistanceKey = 0xb0; // FName
		constexpr auto ReverbBalanceKey = 0xb8; // FName
		constexpr auto BallListenerOffset = 0xc0; // float
	}

	namespace n_UDataAssetDatabase_TA {
		constexpr auto DataAssetClass = 0x60; // FNone*
		constexpr auto DataAssets = 0x68; // TArray<ObjectProperty>
		constexpr auto NameToId = 0x78; // FMap_Mirror
		constexpr auto bClickToRebuild = 0xc8; // uint32_t : 1
	}

	namespace n_UPlayerTitleConfig_X {
		constexpr auto Categories = 0x78; // TArray<FPlayerTitleCategory>
		constexpr auto Titles = 0x88; // TArray<FPlayerTitleData>
		constexpr auto DefaultColorHexCode = 0x98; // FString
	}

	namespace n_UProfile_TA {
		constexpr auto LocalId = 0x60; // int32_t
		constexpr auto ProfileName = 0x68; // FString
		constexpr auto SaveData = 0x78; // ObjectProperty
		constexpr auto ControllerId = 0x80; // int32_t
		constexpr auto bMetric = 0x84; // uint32_t : 1
		constexpr auto bMuteStatEvents = 0x84; // uint32_t : 1
		constexpr auto bDisableDivisions = 0x84; // uint32_t : 1
		constexpr auto bAlternateNameplates = 0x84; // uint32_t : 1
		constexpr auto bAlwaysShowNameplates = 0x84; // uint32_t : 1
		constexpr auto bPushToTalk = 0x84; // uint32_t : 1
		constexpr auto bUseBallIndicator = 0x84; // uint32_t : 1
		constexpr auto bUseBallCamIndicator = 0x84; // uint32_t : 1
		constexpr auto bInvertSwivelPitch = 0x84; // uint32_t : 1
		constexpr auto bInvertSpectatorPitch = 0x84; // uint32_t : 1
		constexpr auto bPrefersSecondaryCamera = 0x84; // uint32_t : 1
		constexpr auto bToggleSecondaryCamera = 0x84; // uint32_t : 1
		constexpr auto bToggleRearCamera = 0x84; // uint32_t : 1
		constexpr auto bFreecam = 0x84; // uint32_t : 1
		constexpr auto bLockSpecatorBallCam = 0x84; // uint32_t : 1
		constexpr auto bEnableCameraShake = 0x84; // uint32_t : 1
		constexpr auto bEnableHorizontalSplitscreen = 0x84; // uint32_t : 1
		constexpr auto bDisableCrossPlay = 0x84; // uint32_t : 1
		constexpr auto bAimAssistEnabled = 0x84; // uint32_t : 1
		constexpr auto bBallTrajectoryEnabled = 0x84; // uint32_t : 1
		constexpr auto bShouldRandomizeLoadoutEachGame = 0x84; // uint32_t : 1
		constexpr auto UISavedValues = 0x88; // TArray<FUISavedKeyValue>
		constexpr auto MapPrefs = 0x98; // TArray<FPlaylistMapPrefs>
		constexpr auto Tutorial = 0xa8; // ObjectProperty
		constexpr auto ForceFeedbackType = 0xb0; // EForceFeedbackType
		constexpr auto MatchmakingViewTab = 0xb1; // EMatchmakingViewTab
		constexpr auto CameraSettingsPreset = 0xb2; // ECameraSettingsPreset
		constexpr auto ControlsPresetName = 0xb4; // FName
		constexpr auto PCBindings = 0xc0; // TArray<FPlayerBinding>
		constexpr auto MouseSensitivity = 0xd0; // float
		constexpr auto MouseXDeadZone = 0xd4; // float
		constexpr auto MouseYDeadZone = 0xd8; // float
		constexpr auto MouseXDeadZoneAir = 0xdc; // float
		constexpr auto MouseYDeadZoneAir = 0xe0; // float
		constexpr auto KeyboardAxisBlendTime = 0xe4; // float
		constexpr auto QuickMatchPlaylists = 0xe8; // TArray<FName>
		constexpr auto QuickMatchRegions = 0xf8; // TArray<FString>
		constexpr auto Camera = 0x108; // FProfileCameraSettings
		constexpr auto AutoCam = 0x124; // FProfileAutoCamSettings
		constexpr auto QuickChatBindings = 0x150; // TArray<FName>
		constexpr auto TotalXP = 0x160; // int32_t
		constexpr auto PlayerTitle = 0x164; // FName
		constexpr auto PreviewTeamIndex = 0x16c; // int32_t
		constexpr auto LoadoutSets = 0x170; // TArray<ObjectProperty>
		constexpr auto EquippedLoadoutSet = 0x180; // ObjectProperty
		constexpr auto TourSearchSettings = 0x188; // FTourSearchSettings
		constexpr auto TourCreateSettings = 0x1e8; // FTourCreateSettings
		constexpr auto Seasons = 0x220; // TArray<ObjectProperty>
		constexpr auto GamepadBindings = 0x230; // TArray<FPlayerBinding>
		constexpr auto ControllerDeadzone = 0x240; // float
		constexpr auto DodgeInputThreshold = 0x244; // float
		constexpr auto SteeringSensitivity = 0x248; // float
		constexpr auto AirControlSensitivity = 0x24c; // float
		constexpr auto PlayerBannerData = 0x250; // ObjectProperty
		constexpr auto Loadout = 0x258; // ObjectProperty
		constexpr auto PrivateMatchSettings = 0x260; // FCustomMatchSettings
		constexpr auto SplitscreenMatchSettings = 0x2f0; // FCustomMatchSettings
		constexpr auto ServerBrowserSettings = 0x380; // FCustomMatchSettings
		constexpr auto CustomMatchSettings = 0x410; // FCustomMatchSettings
		constexpr auto CustomMatchGameTags = 0x4a0; // TArray<FKeyValuePair>
		constexpr auto CustomMatchRegion = 0x4b0; // FString
		constexpr auto GameTags = 0x4c0; // TArray<ObjectProperty>
		constexpr auto StatValues = 0x4d0; // TArray<FStatValue>
		constexpr auto ProductStats = 0x4e0; // TArray<FProductStat>
		constexpr auto AimAssistLevelOverride = 0x4f0; // int32_t
		constexpr auto MaxAimAssistLevelOverride = 0x4f4; // int32_t
		constexpr auto BugReportEmail = 0x4f8; // FString
		constexpr auto ProfileVersion = 0x508; // int32_t
		constexpr auto EditLoadoutSetIndex = 0x50c; // int32_t
		constexpr auto SaveObjectProvider = 0x510; // ComponentProperty
		constexpr auto SaveObjects = 0x518; // TArray<ObjectProperty>
		constexpr auto LoadoutSave = 0x528; // ObjectProperty
		constexpr auto __EventPreEquipProductToLoadouts__Delegate = 0x530; // DelegateProperty
		constexpr auto __EventActiveBindingsChanged__Delegate = 0x548; // DelegateProperty
		constexpr auto __EventProfileProductChanged__Delegate = 0x560; // DelegateProperty
	}

	namespace n_AGameEvent_Lobby_TA {
		constexpr auto BallArchetype = 0x720; // ObjectProperty
		constexpr auto Ball = 0x728; // ObjectProperty
	}

	namespace n_UOnlineDLCProductCache_TA {
		constexpr auto GeneratedProducts = 0x60; // TArray<ObjectProperty>
		constexpr auto AllowedAttributes = 0x70; // TArray<FNone*>
		constexpr auto PreviousGeneratedProducts = 0x80; // TArray<ObjectProperty>
		constexpr auto __EventDLCChange__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UOnlineGameLanServer_TA {
		constexpr auto AllRelevantProducts = 0x260; // TArray<ObjectProperty>
	}

	namespace n_UGFxShell_TA {
		constexpr auto BugReportDelay = 0x130; // float
		constexpr auto ChampionshipTrophyArchetype = 0x138; // ObjectProperty
		constexpr auto TAPlayer = 0x140; // ObjectProperty
		constexpr auto SystemData = 0x148; // ObjectProperty
		constexpr auto LocalPlayerData = 0x150; // ObjectProperty
		constexpr auto BugReportEmail = 0x158; // FString
		constexpr auto bEnableFocusDebugger = 0x168; // uint32_t : 1
		constexpr auto bDisableStartupMovies = 0x168; // uint32_t : 1
		constexpr auto bAllowOnlineStorageResyncModal = 0x168; // uint32_t : 1
		constexpr auto CurrentBugReport = 0x170; // ObjectProperty
		constexpr auto EOSReconnectMessage = 0x178; // FString
		constexpr auto EOSNotConnectedMessage = 0x188; // FString
		constexpr auto SaveReplayMessage = 0x198; // FString
		constexpr auto BugReportWaitMessage = 0x1a8; // FString
		constexpr auto DefaultDisconnectionTitle = 0x1b8; // FString
		constexpr auto PsyNetReconnectMessage = 0x1c8; // FString
		constexpr auto PSPlusTipTitle = 0x1d8; // FString
		constexpr auto PSPlusTipMessage = 0x1e8; // FString
		constexpr auto RankedReconnectTitle = 0x1f8; // FString
		constexpr auto RankedReconnectBody = 0x208; // FString
		constexpr auto BannedTimeRemainingMessage = 0x218; // FString
		constexpr auto PermaBannedMessage = 0x228; // FString
		constexpr auto ActiveModals = 0x238; // TArray<ObjectProperty>
		constexpr auto PendingMessageType = 0x248; // EProgressMessageType
		constexpr auto PendingErrorTitle = 0x250; // FString
		constexpr auto PendingErrorMessage = 0x260; // FString
		constexpr auto LastPsyNetReconnectTime = 0x270; // float
		constexpr auto ModalKick = 0x278; // ObjectProperty
		constexpr auto BuildEdition = 0x280; // FString
		constexpr auto __EventBanButtonClicked__Delegate = 0x290; // DelegateProperty
	}

	namespace n_URPC_RemoveQuitter_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto PlaylistId = 0x130; // int32_t
	}

	namespace n_UVideoSettingsSaveConsole_TA {
		constexpr auto VideoQualityMode = 0xe0; // EConsoleQualityMode
	}

	namespace n_UGoal_TA {
		constexpr auto GoalOrientation = 0xa8; // ObjectProperty
		constexpr auto ReplayOrientation = 0xb0; // ObjectProperty
		constexpr auto OverrideGoalIndicatorOrientations = 0xb8; // TArray<ObjectProperty>
		constexpr auto SaveCheckDirectionOffset = 0xc8; // FVector
		constexpr auto EpicSaveMinSpeed = 0xd4; // float
		constexpr auto EpicSaveArriveTime = 0xd8; // float
		constexpr auto TeamNum = 0xdc; // char
		constexpr auto ScoreFX = 0xe0; // ObjectProperty
		constexpr auto GoalIndicatorArchetype = 0xe8; // FString
		constexpr auto bNoGoalIndicator = 0xf8; // uint32_t : 1
		constexpr auto bOnlyGoalsFromDirection = 0xf8; // uint32_t : 1
		constexpr auto bAllowPostMatchLobbyReset = 0xf8; // uint32_t : 1
		constexpr auto bEnabled = 0xf8; // uint32_t : 1
		constexpr auto bShowFocusExtent = 0xf8; // uint32_t : 1
		constexpr auto GoalDirection = 0x100; // ObjectProperty
		constexpr auto PointsToAward = 0x108; // int32_t
		constexpr auto AutoCamFocusExtent = 0x10c; // FVector
		constexpr auto GoalFocusLocationOffset = 0x118; // FVector
		constexpr auto MaxGoalScorerAttachRadius = 0x124; // float
		constexpr auto GoalScoredDotDirection = 0x128; // FVector
		constexpr auto MinAttachGoalToScorerDot = 0x134; // float
		constexpr auto Location = 0x138; // FVector
		constexpr auto Direction = 0x144; // FVector
		constexpr auto Right = 0x150; // FVector
		constexpr auto Up = 0x15c; // FVector
		constexpr auto Rotation = 0x168; // FRotator
		constexpr auto LocalExtent = 0x174; // FVector
		constexpr auto WorldCenter = 0x180; // FVector
		constexpr auto WorldExtent = 0x18c; // FVector
		constexpr auto WorldFrontCenter = 0x198; // FVector
		constexpr auto WorldBox = 0x1a4; // FBox
	}

	namespace n_USeqAct_DrawText {
		constexpr auto DisplayTimeSeconds = 0x160; // float
		constexpr auto bDisplayOnObject = 0x164; // uint32_t : 1
		constexpr auto DrawTextInfo = 0x168; // FKismetDrawTextInfo
	}

	namespace n_UWebConfig_X {
		constexpr auto bCacheWebImages = 0x78; // uint32_t : 1
		constexpr auto bZipPsyNetStaticData = 0x78; // uint32_t : 1
		constexpr auto PsyNetStaticDataCacheMinutes = 0x7c; // float
	}

	namespace n_U__GFxData_MusicPlayer_TA__MergePlaylists_508302224D9360438483F1898882DFAB {
		constexpr auto NewPlaylists = 0x60; // TArray<FGFxMusicPlaylist>
	}

	namespace n_URPC_SetRichPresence_X {
		constexpr auto PresenceInfo = 0xe8; // FString
		constexpr auto PresenceState = 0xf8; // FString
	}

	namespace n_UObject {
		constexpr auto VfTableObject = 0x0; // FPointer
		constexpr auto HashNext = 0x8; // FPointer
		constexpr auto ObjectFlags = 0x10; // QWordProperty
		constexpr auto HashOuterNext = 0x18; // FPointer
		constexpr auto StateFrame = 0x20; // FPointer
		constexpr auto Linker = 0x28; // ObjectProperty
		constexpr auto LinkerIndex = 0x30; // FPointer
		constexpr auto ObjectInternalInteger = 0x38; // int32_t
		constexpr auto NetIndex = 0x3c; // int32_t
		constexpr auto Outer = 0x40; // ObjectProperty
		constexpr auto Name = 0x48; // FName
		constexpr auto Class = 0x50; // FNone*
		constexpr auto ObjectArchetype = 0x58; // ObjectProperty
	}

	namespace n_UProductExpirationNotification_TA {
		constexpr auto HashID = 0x110; // FProductHashID
		constexpr auto ExpiredTitle = 0x118; // FString
		constexpr auto ExpiredBody = 0x128; // FString
		constexpr auto OnlineProduct = 0x138; // ObjectProperty
	}

	namespace n_ANetworkInputBuffer_STS_TA {
		constexpr auto JitterBuffer = 0x2c8; // ObjectProperty
		constexpr auto ExtraSimTimeRemaining = 0x2d0; // float
		constexpr auto Debug = 0x2d4; // FSimTimeAdjustDebugData
		constexpr auto TimeLastSimTimeAdjustment = 0x2dc; // float
		constexpr auto TimeClientAckdAdjustSimTime = 0x2e0; // float
		constexpr auto ReplicatedInputBufferSize = 0x2e4; // char
		constexpr auto bAdjustingSimTime = 0x2e8; // uint32_t : 1
		constexpr auto BufferSizeLowWatermark = 0x2ec; // int32_t
		constexpr auto TimeLastMissedInput = 0x2f0; // float
		constexpr auto TimeLastTightenUpBufferCheck = 0x2f4; // float
	}

	namespace n_UGFxData_AutoTour_TourCard_TA {
		constexpr auto OnlineGameTournaments = 0x98; // ObjectProperty
		constexpr auto Settings = 0xa0; // TArray<ObjectProperty>
		constexpr auto StartTime = 0xb0; // QWordProperty
		constexpr auto LastTournamentTime = 0xb8; // QWordProperty
		constexpr auto Title = 0xc0; // FString
		constexpr auto Description = 0xd0; // FString
		constexpr auto ScheduleID = 0xe0; // QWordProperty
		constexpr auto TeamSize = 0xe8; // int32_t
		constexpr auto GameMode = 0xec; // char
		constexpr auto bIsIneligible = 0xf0; // uint32_t : 1
		constexpr auto bCanCheckIn = 0xf0; // uint32_t : 1
		constexpr auto bRegistered = 0xf0; // uint32_t : 1
		constexpr auto bUpdateSkill = 0xf0; // uint32_t : 1
		constexpr auto bIsInitialized = 0xf0; // uint32_t : 1
	}

	namespace n_UMaterialExpressionTerrainLayerWeight {
		constexpr auto InstanceOverride = 0xc0; // FPointer
		constexpr auto Base = 0xc8; // FExpressionInput
		constexpr auto Layer = 0x100; // FExpressionInput
		constexpr auto ParameterName = 0x138; // FName
		constexpr auto PreviewWeight = 0x140; // float
		constexpr auto ExpressionGUID = 0x144; // FGuid
	}

	namespace n_UPartyMessage_JoinGame_X {
		constexpr auto Settings = 0xa8; // FPartyJoinMatchSettings
	}

	namespace n_UParticleModuleColorByParameter {
		constexpr auto ColorParam = 0x70; // FName
		constexpr auto DefaultColor = 0x78; // FColor
	}

	namespace n_URPC_InviteToClub_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_UCameraState_ReplayFollow_TA {
		constexpr auto FollowDistance = 0xb8; // float
		constexpr auto MinFollowDistance = 0xbc; // float
		constexpr auto MaxFollowDistance = 0xc0; // float
		constexpr auto FollowRotationRateCurve = 0xc8; // FInterpCurveFloat
		constexpr auto bFirstExecution = 0xe0; // uint32_t : 1
	}

	namespace n_UProductAsset_Skin_TA {
		constexpr auto Skin = 0xf8; // ObjectProperty
		constexpr auto BodySettings = 0x100; // TArray<FSkinBodySettings>
		constexpr auto BodyChassisOverrides = 0x110; // TArray<FBodyChassisOverride>
		constexpr auto SkinType = 0x120; // ESkinType
		constexpr auto ThumbnailTeamColor = 0x124; // FLinearColor
		constexpr auto ThumbnailCustomColor = 0x134; // FLinearColor
		constexpr auto bTeamFinishDisabled = 0x144; // uint32_t : 1
		constexpr auto bCustomFinishDisabled = 0x144; // uint32_t : 1
		constexpr auto TeamFinishToApply = 0x148; // FParameterInformation
		constexpr auto CustomFinishToApply = 0x180; // FParameterInformation
		constexpr auto ForcedTeamColors = 0x1b8; // FLinearColor [0x2]
		constexpr auto ForcedCustomColor = 0x1d8; // FLinearColor [0x2]
	}

	namespace n_USeqAct_SetBool {
		constexpr auto DefaultValue = 0x160; // uint32_t : 1
	}

	namespace n_UCarPreviewMeshComponent_TA {
		constexpr auto BoostAsset = 0x8c8; // ObjectProperty
		constexpr auto BoostFX = 0x8d0; // ObjectProperty
		constexpr auto AntennaAsset = 0x8d8; // ObjectProperty
		constexpr auto HatAsset = 0x8e0; // ObjectProperty
	}

	namespace n_USpawnPointCluster_TA {
		constexpr auto SpawnTeams = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UFriendRequestNotification_TA {
		constexpr auto PlayerID = 0x110; // FUniqueNetId
	}

	namespace n_ACarComponent_AirControl_Robin_TA {
		constexpr auto RandomPitch = 0x300; // FWaveParams
		constexpr auto RandomYaw = 0x308; // FWaveParams
		constexpr auto RandomRoll = 0x310; // FWaveParams
	}

	namespace n_UCameraStateSelector_TA {
		constexpr auto States = 0x70; // TArray<ObjectProperty>
		constexpr auto Camera = 0x80; // ObjectProperty
	}

	namespace n_UFaceItConfig_TA {
		constexpr auto bEnabled = 0x78; // uint32_t : 1
		constexpr auto PartnerNames = 0x80; // TArray<FPartnerMapping>
		constexpr auto DefaultPartnerName = 0x90; // FString
	}

	namespace n_U__GFxData_NotificationManager_TA__HandleNotificationRemoved_6A78923A45515E496DFA9D942EF29303 {
		constexpr auto Notification = 0x60; // ObjectProperty
	}

	namespace n_UGFxAction_OpenMovie {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto MoviePlayerClass = 0x168; // FNone*
		constexpr auto MoviePlayer = 0x170; // ObjectProperty
		constexpr auto bTakeFocus = 0x178; // uint32_t : 1
		constexpr auto bCaptureInput = 0x178; // uint32_t : 1
		constexpr auto bStartPaused = 0x178; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x178; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x178; // uint32_t : 1
		constexpr auto RenderTextureMode = 0x17c; // GFxRenderTextureMode
		constexpr auto RenderTexture = 0x180; // ObjectProperty
		constexpr auto CaptureKeys = 0x188; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x198; // TArray<FName>
	}

	namespace n_UGFxData_TourEvent_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
		constexpr auto TourMatchmaking = 0xa0; // ObjectProperty
		constexpr auto TourConfig = 0xa8; // ObjectProperty
		constexpr auto Title = 0xb0; // FString
		constexpr auto Id = 0xc0; // QWordProperty
		constexpr auto ScheduleID = 0xc8; // QWordProperty
		constexpr auto SecondsRemaining = 0xd0; // int32_t
		constexpr auto GenerateBracketTime = 0xd8; // QWordProperty
		constexpr auto Status = 0xe0; // ETourEventStatus
		constexpr auto LocalTeamID = 0xe8; // QWordProperty
		constexpr auto Round = 0xf0; // int32_t
		constexpr auto TotalRounds = 0xf4; // int32_t
		constexpr auto NextOpponent = 0xf8; // FString
		constexpr auto EndGameWarningEpochTime = 0x108; // QWordProperty
		constexpr auto EndGameEpochTime = 0x110; // QWordProperty
		constexpr auto bTroubleJoining = 0x118; // uint32_t : 1
		constexpr auto ActiveTournament = 0x120; // ObjectProperty
		constexpr auto MatchID = 0x128; // int32_t
	}

	namespace n_UReplayManager_TA {
		constexpr auto ReplaysPath = 0x60; // FString
		constexpr auto ExportTasks = 0x70; // TArray<FPointer>
		constexpr auto ClassTasks = 0x80; // TArray<FPointer>
		constexpr auto ImportTasks = 0x90; // TArray<FPointer>
		constexpr auto HeadersCountTask = 0xa0; // FPointer
		constexpr auto HeaderLoadTasks = 0xa8; // TArray<FPointer>
		constexpr auto ExportCallbacks = 0xb8; // TArray<FReplayExportCallbackData>
		constexpr auto ImportCallbacks = 0xc8; // TArray<FReplayImportCallbackData>
		constexpr auto __EventPreLoadReplay__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventExportFinished__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventImportFinished__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventHeadersLoaded__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UOnlinePersistentAuthInterfaceImpl {
		constexpr auto VfTable_IOnlinePersistentAuthInterface = 0x60; // FPointer
		constexpr auto RequestPinGrantCodeDelegates = 0x68; // TArray<DelegateProperty>
		constexpr auto UnderageUserDetectedDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto __OnReceievedPinGrantCode__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnUnderageUserDetected__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UTourErrors_TA {
		constexpr auto TournamentFull = 0x80; // ObjectProperty
		constexpr auto TournamentPaused = 0x88; // ObjectProperty
		constexpr auto TournamentsDisabled = 0x90; // ObjectProperty
		constexpr auto InActiveTournament = 0x98; // ObjectProperty
		constexpr auto SplitScreenIsInActiveTournament = 0xa0; // ObjectProperty
		constexpr auto NoMatchFound = 0xa8; // ObjectProperty
		constexpr auto TeamEliminated = 0xb0; // ObjectProperty
		constexpr auto AlreadyRegistered = 0xb8; // ObjectProperty
		constexpr auto NotAdmin = 0xc0; // ObjectProperty
		constexpr auto NotEligible = 0xc8; // ObjectProperty
		constexpr auto AlreadyStarted = 0xd0; // ObjectProperty
		constexpr auto InvalidTournamentState = 0xd8; // ObjectProperty
		constexpr auto InvalidCredentials = 0xe0; // ObjectProperty
		constexpr auto TournamentNotFound = 0xe8; // ObjectProperty
		constexpr auto TournamentHasConcluded = 0xf0; // ObjectProperty
		constexpr auto CheckInRankIneligible = 0xf8; // ObjectProperty
		constexpr auto CheckInNotOpen = 0x100; // ObjectProperty
		constexpr auto CheckInRequiresPartyLeader = 0x108; // ObjectProperty
		constexpr auto TooManyPlayersCheckingIn = 0x110; // ObjectProperty
		constexpr auto CannotMatchmakeIfRegistered = 0x118; // ObjectProperty
		constexpr auto CannotCheckInWhileOnline = 0x120; // ObjectProperty
		constexpr auto CannotCancelAfterRegistration = 0x128; // ObjectProperty
		constexpr auto TournamentHasBeenCancelled = 0x130; // ObjectProperty
		constexpr auto TeamSizeTooLarge = 0x138; // ObjectProperty
		constexpr auto TeamSizeTooSmall = 0x140; // ObjectProperty
		constexpr auto PlayerNotRegistered = 0x148; // ObjectProperty
		constexpr auto TeamNameNotAllowed = 0x150; // ObjectProperty
		constexpr auto TournamentNameNotAllowed = 0x158; // ObjectProperty
		constexpr auto TournamentCreateLimitReached = 0x160; // ObjectProperty
		constexpr auto AutoTournamentNoTeamFound = 0x168; // ObjectProperty
		constexpr auto AutoTournamentRequiresCrossplatform = 0x170; // ObjectProperty
		constexpr auto AutoTourmamentRequiresCrossplatformNotLeader = 0x178; // ObjectProperty
		constexpr auto AutoTournamentBanned = 0x180; // ObjectProperty
		constexpr auto AutoTournamentResultsRevoked = 0x188; // ObjectProperty
		constexpr auto IneligibleForLateTournament = 0x190; // ObjectProperty
		constexpr auto PlayerNotInTourTeam = 0x198; // ObjectProperty
		constexpr auto PartyMembersNotInTourTeam = 0x1a0; // ObjectProperty
		constexpr auto KickedNotInPartyTour = 0x1a8; // ObjectProperty
		constexpr auto KickedPartyIsCheckingIn = 0x1b0; // ObjectProperty
		constexpr auto NoSplitscreenDuringCheckin = 0x1b8; // ObjectProperty
		constexpr auto NoInvitesWhileCheckingIn = 0x1c0; // ObjectProperty
		constexpr auto NoJoiningWhileCheckingIn = 0x1c8; // ObjectProperty
		constexpr auto SkillRequirementsNotMet = 0x1d0; // ObjectProperty
		constexpr auto PartySkillRequirementsNotMet = 0x1d8; // ObjectProperty
		constexpr auto ScheduleRegionIsLocked = 0x1e0; // ObjectProperty
		constexpr auto ScheduleRegionIsInvalid = 0x1e8; // ObjectProperty
		constexpr auto ScheduleRegionNotSet = 0x1f0; // ObjectProperty
		constexpr auto TourCreateCrossplatformDisabled = 0x1f8; // ObjectProperty
		constexpr auto CustomTourmamentRequiresCrossplatform = 0x200; // ObjectProperty
		constexpr auto CannotSpectateWhileInParty = 0x208; // ObjectProperty
		constexpr auto TourRankDisparity = 0x210; // ObjectProperty
		constexpr auto TourTroubleConnectingToServer = 0x218; // ObjectProperty
	}

	namespace n_UAkMusicAnalysis {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto BPM = 0x68; // int32_t
		constexpr auto MusicInfo = 0x70; // FMusicAnalysisInfo
		constexpr auto MusicInfoSmoothed = 0x90; // FMusicAnalysisInfo
		constexpr auto AttackSpeed = 0xb0; // float
		constexpr auto ReleaseSpeed = 0xb4; // float
		constexpr auto bDebugPrintMusicAnalysisValues = 0xb8; // uint32_t : 1
		constexpr auto MusicAnalysisSilentLoop = 0xc0; // ObjectProperty
		constexpr auto __EventNewMusicTrack__Delegate = 0xc8; // DelegateProperty
		constexpr auto __EventMusicBeat__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventMusicBar__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_ULegalText_TA {
		constexpr auto LegalHash = 0x60; // int32_t
		constexpr auto __EventLegalTextUpdated__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto High = 0xc0; // FExpressionInput
		constexpr auto Low = 0xf8; // FExpressionInput
		constexpr auto HandheldQuality = 0x130; // FExpressionInput
	}

	namespace n_UMutator_Attachment_TA {
		constexpr auto AttachmentArchetype = 0x68; // ObjectProperty
		constexpr auto Team1AttachmentArchetype = 0x70; // ObjectProperty
	}

	namespace n_U__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_6CFB22B94B04498042E93AAF245F960F {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_GameURLHasOption_TA {
		constexpr auto Option = 0x160; // FString
	}

	namespace n_ASpecialPickup_CarFreeze_TA {
		constexpr auto OtherCarFXArchetype = 0x3c0; // ObjectProperty
		constexpr auto TireFrictionScale = 0x3c8; // float
		constexpr auto AddAngularVelocity = 0x3cc; // float
		constexpr auto OtherCarFX = 0x3d0; // ObjectProperty
		constexpr auto OtherCar = 0x3d8; // ObjectProperty
	}

	namespace n_UStatusObserver_X {
		constexpr auto TriggerTypes = 0x60; // TArray<ObjectProperty>
		constexpr auto AcceptedTypes = 0x70; // TArray<FNone*>
		constexpr auto bInitComplete = 0x80; // uint32_t : 1
		constexpr auto __bInitComplete__ChangeNotify = 0x88; // DelegateProperty
	}

	namespace n_UCameraStateSelector_Sequence_TA {
		constexpr auto bResetIndexOnActive = 0x88; // uint32_t : 1
		constexpr auto StateIdx = 0x8c; // int32_t
	}

	namespace n_AVehiclePickup_Item_TA {
		constexpr auto ItemArchetypes = 0x2f0; // TArray<ObjectProperty>
		constexpr auto ReplicatedFXActorArchetype = 0x300; // ObjectProperty
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x2a8; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x2b8; // uint32_t : 1
	}

	namespace n_UAudioParamsSuperSonicReplayComponent_TA {
		constexpr auto ReplayFocus = 0xa8; // ObjectProperty
	}

	namespace n_UPartyBeaconHost {
		constexpr auto Clients = 0xa8; // TArray<FClientBeaconConnection>
		constexpr auto NumTeams = 0xb8; // int32_t
		constexpr auto NumPlayersPerTeam = 0xbc; // int32_t
		constexpr auto NumReservations = 0xc0; // int32_t
		constexpr auto NumConsumedReservations = 0xc4; // int32_t
		constexpr auto Reservations = 0xc8; // TArray<FPartyReservation>
		constexpr auto OnlineSessionName = 0xd8; // FName
		constexpr auto ConnectionBacklog = 0xe0; // int32_t
		constexpr auto ForceTeamNum = 0xe4; // int32_t
		constexpr auto ReservedHostTeamNum = 0xe8; // int32_t
		constexpr auto bBestFitTeamAssignment = 0xec; // uint32_t : 1
		constexpr auto BeaconState = 0xf0; // EPartyBeaconHostState
		constexpr auto __OnReservationChange__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnReservationsFull__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnClientCancellationReceived__Delegate = 0x128; // DelegateProperty
	}

	namespace n_USeqAct_SetMatInstVectorParam_TA {
		constexpr auto MatInst = 0x160; // ObjectProperty
		constexpr auto ParamName = 0x168; // FName
		constexpr auto VectorValue = 0x170; // FVector
	}

	namespace n_UOnlineStatsInterfaceEOS {
		constexpr auto StatsHandle = 0x60; // FPointer
		constexpr auto PlayerInterfaceEOS = 0x68; // ObjectProperty
		constexpr auto ReadStatsDelegates = 0x70; // TArray<DelegateProperty>
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x80; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_ALandscapeProxy {
		constexpr auto LandscapeGuid = 0x268; // FGuid
		constexpr auto MaxLODLevel = 0x278; // int32_t
		constexpr auto DefaultPhysMaterial = 0x280; // ObjectProperty
		constexpr auto StreamingDistanceMultiplier = 0x288; // float
		constexpr auto LandscapeMaterial = 0x290; // ObjectProperty
		constexpr auto LODDistanceFactor = 0x298; // float
		constexpr auto LandscapeComponents = 0x2a0; // TArray<ComponentProperty>
		constexpr auto CollisionComponents = 0x2b0; // TArray<ComponentProperty>
		constexpr auto MaterialInstanceConstantMap = 0x2c0; // TMap<None, None>
		constexpr auto WeightmapUsageMap = 0x310; // TMap<None, None>
		constexpr auto StaticLightingResolution = 0x360; // float
		constexpr auto LandscapeActor = 0x368; // ObjectProperty
		constexpr auto bIsProxy = 0x370; // uint32_t : 1
		constexpr auto bIsSetup = 0x370; // uint32_t : 1
		constexpr auto bResetup = 0x370; // uint32_t : 1
		constexpr auto bIsMovingToLevel = 0x370; // uint32_t : 1
		constexpr auto LightmassSettings = 0x374; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x390; // int32_t
		constexpr auto MobileLODBias = 0x394; // int32_t
		constexpr auto LayerInfoObjs = 0x398; // TArray<FLandscapeLayerStruct>
		constexpr auto ComponentSizeQuads = 0x3a8; // int32_t
		constexpr auto SubsectionSizeQuads = 0x3ac; // int32_t
		constexpr auto NumSubsections = 0x3b0; // int32_t
	}

	namespace n_UWebRequest {
		constexpr auto RemoteAddr = 0x60; // FString
		constexpr auto URI = 0x70; // FString
		constexpr auto Username = 0x80; // FString
		constexpr auto Password = 0x90; // FString
		constexpr auto ContentLength = 0xa0; // int32_t
		constexpr auto ContentType = 0xa8; // FString
		constexpr auto RequestType = 0xb8; // ERequestType
		constexpr auto HeaderMap = 0xc0; // FMap_Mirror
		constexpr auto VariableMap = 0x110; // FMap_Mirror
	}

	namespace n_UCrowdNoiseModifier_TA {
		constexpr auto ValueMin = 0x60; // float
		constexpr auto ValueMax = 0x64; // float
		constexpr auto DurationMin = 0x68; // float
		constexpr auto DurationMax = 0x6c; // float
		constexpr auto OneShotSound = 0x70; // ObjectProperty
	}

	namespace n_UPartyMessage_CrossPlayTextChat_X {
		constexpr auto CrossChatState = 0xa8; // ECrossPlatformChatState
	}

	namespace n_UDrawConeComponent {
		constexpr auto ConeColor = 0x258; // FColor
		constexpr auto ConeRadius = 0x25c; // float
		constexpr auto ConeAngle = 0x260; // float
		constexpr auto ConeSides = 0x264; // int32_t
	}

	namespace n_UBTCondition {
		constexpr auto UpdateDelay = 0x80; // float
		constexpr auto bFlipResult = 0x84; // uint32_t : 1
		constexpr auto bDirty = 0x84; // uint32_t : 1
		constexpr auto CachedResult = 0x84; // uint32_t : 1
		constexpr auto NextUpdateTime = 0x88; // float
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0xc0; // uint32_t : 1
	}

	namespace n_UGFxEngine_TA {
		constexpr auto UISoundStates = 0x190; // TArray<FSoundStateItem>
		constexpr auto bViewingOnlineScene = 0x1a0; // uint32_t : 1
		constexpr auto LoadingScreen = 0x1a8; // ObjectProperty
		constexpr auto OnlineSubsystem = 0x1b0; // ObjectProperty
	}

	namespace n_URPC_GetBanStatus_TA {
		constexpr auto Players = 0xe8; // TArray<FUniqueNetId>
		constexpr auto BanMessages = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_ProductAttribute_Title_TA {
		constexpr auto TitleId = 0xb0; // FName
	}

	namespace n_UMutator_Robin_TA {
		constexpr auto StickyForce = 0x60; // FStickyForceData
		constexpr auto AutoFlip = 0x68; // FAutoFlipData
		constexpr auto VehicleSim = 0x70; // ComponentProperty
		constexpr auto OverrideCarComponents = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x70; // FRawDistributionVector
		constexpr auto Range = 0x98; // FRawDistributionFloat
		constexpr auto Strength = 0xc0; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xe8; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0xe8; // uint32_t : 1
		constexpr auto bOverrideVelocity = 0xe8; // uint32_t : 1
		constexpr auto bUseWorldSpacePosition = 0xe8; // uint32_t : 1
	}

	namespace n_UExplosionHitHandler_TA {
		constexpr auto bApplyToAllCars = 0xf8; // uint32_t : 1
		constexpr auto bIsActive = 0xf8; // uint32_t : 1
		constexpr auto VehicleToContactInfo = 0x100; // FMap_Mirror
	}

	namespace n_USkyLightComponent {
		constexpr auto LowerBrightness = 0x1c8; // float
		constexpr auto LowerColor = 0x1cc; // FColor
	}

	namespace n_UMatchCompleteMetrics_TA {
		constexpr auto History = 0x80; // TArray<FMatchCompleteHistory>
	}

	namespace n_UStringMap {
		constexpr auto Map = 0x70; // FMap_Mirror
		constexpr auto __PairCallback__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xf0; // FParticleRandomSeedInfo
	}

	namespace n_UGFxData_Privileges_TA {
		constexpr auto bCheckingPrivileges = 0x98; // uint32_t : 1
		constexpr auto OnlineGame = 0xa0; // ObjectProperty
	}

	namespace n_AAIController_Breakout_TA {
		constexpr auto ClosestEnemyGoalLocation = 0x7c0; // FVector
		constexpr auto DefaultSoccarSize = 0x7cc; // int32_t
	}

	namespace n_UTexture2D {
		constexpr auto Mips = 0x150; // FIndirectArray_Mirror
		constexpr auto CachedPVRTCMips = 0x160; // FIndirectArray_Mirror
		constexpr auto CachedATITCMips = 0x170; // FIndirectArray_Mirror
		constexpr auto CachedETCMips = 0x180; // FIndirectArray_Mirror
		constexpr auto CachedFlashMipsMaxResolution = 0x190; // int32_t
		constexpr auto CachedFlashMips = 0x198; // FUntypedBulkData_Mirror
		constexpr auto SizeX = 0x1f0; // int32_t
		constexpr auto SizeY = 0x1f4; // int32_t
		constexpr auto OriginalSizeX = 0x1f8; // int32_t
		constexpr auto OriginalSizeY = 0x1fc; // int32_t
		constexpr auto Format = 0x200; // EPixelFormat
		constexpr auto AddressX = 0x201; // TextureAddress
		constexpr auto AddressY = 0x202; // TextureAddress
		constexpr auto bIsEditorOnly = 0x204; // uint32_t : 1
		constexpr auto bIsStreamable = 0x204; // uint32_t : 1
		constexpr auto bHasCancelationPending = 0x204; // uint32_t : 1
		constexpr auto bHasBeenLoadedFromPersistentArchive = 0x204; // uint32_t : 1
		constexpr auto bForceMiplevelsToBeResident = 0x204; // uint32_t : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x204; // uint32_t : 1
		constexpr auto bIsCompositingSource = 0x204; // uint32_t : 1
		constexpr auto bHasBeenPaintedInEditor = 0x204; // uint32_t : 1
		constexpr auto bUseAlphaInThumbnail = 0x204; // uint32_t : 1
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x208; // float
		constexpr auto TextureFileCacheName = 0x20c; // FName
		constexpr auto TextureFileCacheGuid = 0x214; // FGuid
		constexpr auto RequestedMips = 0x224; // int32_t
		constexpr auto ResidentMips = 0x228; // int32_t
		constexpr auto MipsToRemoveOnCompress = 0x22c; // int32_t
		constexpr auto PendingMipChangeRequestStatus = 0x230; // FThreadSafeCounter
		constexpr auto SystemMemoryData = 0x238; // TArray<char>
		constexpr auto RenderTarget2DRef = 0x248; // ObjectProperty
		constexpr auto StreamableTexturesLink = 0x250; // FTextureLinkedListMirror
		constexpr auto StreamingIndex = 0x268; // int32_t
		constexpr auto MipTailBaseIdx = 0x26c; // int32_t
		constexpr auto ResourceMem = 0x270; // FPointer
		constexpr auto FirstResourceMemMip = 0x278; // int32_t
		constexpr auto Timer = 0x27c; // float
	}

	namespace n_UPsyNetService_FaceItSearchStarted_TA {
		constexpr auto PartnerID = 0x90; // int32_t
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x80; // float
	}

	namespace n_UTourEventMatch_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Config = 0x68; // ObjectProperty
		constexpr auto TourMatchmaking = 0x70; // ObjectProperty
		constexpr auto PsyNet = 0x78; // ObjectProperty
		constexpr auto PlayerID = 0x80; // FUniqueNetId
		constexpr auto TournamentID = 0xc8; // QWordProperty
		constexpr auto TeamID = 0xd0; // QWordProperty
		constexpr auto DependentMatch = 0xd8; // FTourMatch
		constexpr auto NextMatch = 0x108; // FTourMatch
		constexpr auto PrevMatchID = 0x138; // int32_t
		constexpr auto Error = 0x140; // ObjectProperty
		constexpr auto GetMatchTask = 0x148; // ObjectProperty
		constexpr auto ReceivedByeTitle = 0x150; // FString
		constexpr auto ReceivedByeBody = 0x160; // FString
		constexpr auto __EventDependentMatchUpdated__Delegate = 0x170; // DelegateProperty
		constexpr auto __EventNextMatchReady__Delegate = 0x188; // DelegateProperty
		constexpr auto __EventError__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __EventCurrentMatchUpdated__Delegate = 0x1b8; // DelegateProperty
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0xc0; // FString
		constexpr auto OutputType = 0xd0; // ECustomMaterialOutputType
		constexpr auto Description = 0xd8; // FString
		constexpr auto Inputs = 0xe8; // TArray<FCustomInput>
	}

	namespace n_USystemSettingsManager_TA {
		constexpr auto NumPlayers = 0x60; // int32_t
	}

	namespace n_UBallLocationComponent_TA {
		constexpr auto MaterialToApplyBallLocationTo = 0xa0; // ObjectProperty
	}

	namespace n_UGFxData_TourDetails_TA {
		constexpr auto Settings = 0x98; // ObjectProperty
		constexpr auto OnlineProductSet = 0xa0; // ComponentProperty
		constexpr auto DetailsSync = 0xa8; // ObjectProperty
		constexpr auto TourSettings = 0xb0; // ObjectProperty
		constexpr auto Tournaments = 0xb8; // ObjectProperty
		constexpr auto Rewards = 0xc0; // TArray<FGFxTournamentReward>
		constexpr auto CreatorAvatar = 0xd0; // ObjectProperty
		constexpr auto CreatorPlatform = 0xd8; // FString
		constexpr auto bRegistered = 0xe8; // uint32_t : 1
		constexpr auto bAdmin = 0xe8; // uint32_t : 1
		constexpr auto bCanCheckIn = 0xe8; // uint32_t : 1
	}

	namespace n_USpriteComponent {
		constexpr auto Sprite = 0x258; // ObjectProperty
		constexpr auto bIsScreenSizeScaled = 0x260; // uint32_t : 1
		constexpr auto ScreenSize = 0x264; // float
		constexpr auto U = 0x268; // float
		constexpr auto UL = 0x26c; // float
		constexpr auto V = 0x270; // float
		constexpr auto VL = 0x274; // float
		constexpr auto SpriteCategoryName = 0x278; // FName
	}

	namespace n_URPC_Challenge_SetProgress_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ChallengeID = 0x130; // int32_t
		constexpr auto Count = 0x134; // int32_t
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x70; // FRawDistributionVector
	}

	namespace n_UParticleModuleTypeDataApex {
		constexpr auto ApexIOFX = 0x70; // ObjectProperty
		constexpr auto ApexEmitter = 0x78; // ObjectProperty
	}

	namespace n_USequenceFrame {
		constexpr auto SizeX = 0xd8; // int32_t
		constexpr auto SizeY = 0xdc; // int32_t
		constexpr auto BorderWidth = 0xe0; // int32_t
		constexpr auto bDrawBox = 0xe4; // uint32_t : 1
		constexpr auto bFilled = 0xe4; // uint32_t : 1
		constexpr auto bTileFill = 0xe4; // uint32_t : 1
		constexpr auto BorderColor = 0xe8; // FColor
		constexpr auto FillColor = 0xec; // FColor
		constexpr auto FillTexture = 0xf0; // ObjectProperty
		constexpr auto FillMaterial = 0xf8; // ObjectProperty
	}

	namespace n_URPC_GetClubDetails_X {
		constexpr auto ClubID = 0xf8; // int32_t
	}

	namespace n_UProductAttribute_Tiered_TA {
		constexpr auto TierIndex = 0x80; // int32_t
	}

	namespace n_UAkRTPCDecayComponent {
		constexpr auto RTPC = 0xa0; // FName
		constexpr auto GrowValue = 0xa8; // float
		constexpr auto MaxValue = 0xac; // float
		constexpr auto DecayPerSecond = 0xb0; // FInterpCurveFloat
		constexpr auto SoundSource = 0xc8; // ComponentProperty
		constexpr auto CurrentValue = 0xd0; // float
		constexpr auto LastAttachTime = 0xd4; // float
		constexpr auto bWasAttached = 0xd8; // uint32_t : 1
	}

	namespace n_UGFxData_Vote_TA {
		constexpr auto Subject = 0x98; // EVoteSubject
		constexpr auto VoteStatus = 0x99; // EVoteStatus
		constexpr auto LocalVoteStatus = 0x9a; // EVoteStatus
		constexpr auto YesVotes = 0x9c; // int32_t
		constexpr auto NoVotes = 0xa0; // int32_t
		constexpr auto RequiredVotes = 0xa4; // int32_t
		constexpr auto TimeRemaining = 0xa8; // int32_t
		constexpr auto VoteActor = 0xb0; // ObjectProperty
	}

	namespace n_U__GFxData_Products_TA__HandleProductThumbnailRendered_7719E5054B6E9F6A1FC08CA528058D12 {
		constexpr auto LoadingProduct = 0x60; // ObjectProperty
	}

	namespace n_URPC_TourCancelCreated_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
	}

	namespace n_U__ShopsService_PsyNet_TA__GetCrateShop_17FBCC66491E6084CA6BFE9C538217CC {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto FailedCallback = 0x78; // DelegateProperty
	}

	namespace n_UEventRecorder_X {
		constexpr auto VfTable_FTickableObject = 0x70; // FPointer
		constexpr auto Config = 0x78; // ObjectProperty
		constexpr auto MaxQueuedEvents = 0x80; // int32_t
		constexpr auto MaxQueuedMinutes = 0x84; // int32_t
		constexpr auto bPaused = 0x88; // uint32_t : 1
		constexpr auto QueuedEvents = 0x90; // TArray<FMetricsEvent>
		constexpr auto AppSessionID = 0xa0; // FGuid
		constexpr auto LevelSessionID = 0xb0; // FGuid
		constexpr auto NextSendTime = 0xc0; // float
		constexpr auto FloodPreventionTimeSeconds = 0xc4; // float
		constexpr auto LastFullSendTime = 0xc8; // float
		constexpr auto AppEventCount = 0xcc; // int32_t
	}

	namespace n_UPartyMessage_DisableCrossPlay_X {
		constexpr auto bDisableCrossPlay = 0xa8; // uint32_t : 1
	}

	namespace n_UMatchmakingViewFilter_RankedSports_TA {
		constexpr auto Playlists = 0x60; // TScriptInterface<Class>
	}

	namespace n_USeqAct_RandomSwitch {
		constexpr auto AutoDisabledIndices = 0x180; // TArray<int32_t>
	}

	namespace n_UParticleModuleTypeDataTrail2 {
		constexpr auto TessellationFactor = 0x70; // int32_t
		constexpr auto TessellationFactorDistance = 0x74; // float
		constexpr auto TessellationStrength = 0x78; // float
		constexpr auto TextureTile = 0x7c; // int32_t
		constexpr auto Sheets = 0x80; // int32_t
		constexpr auto MaxTrailCount = 0x84; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x88; // int32_t
		constexpr auto bClipSourceSegement = 0x8c; // uint32_t : 1
		constexpr auto bClearTangents = 0x8c; // uint32_t : 1
		constexpr auto RenderGeometry = 0x8c; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x8c; // uint32_t : 1
		constexpr auto RenderLines = 0x8c; // uint32_t : 1
		constexpr auto RenderTessellation = 0x8c; // uint32_t : 1
	}

	namespace n_UCameraState_Countdown_TA {
		constexpr auto MaxCarsShown = 0x180; // int32_t
		constexpr auto TimePerCar = 0x184; // float
		constexpr auto bSwitchTeamsEveryCar = 0x188; // uint32_t : 1
		constexpr auto ShownCars = 0x190; // TArray<ObjectProperty>
		constexpr auto CurrentCar = 0x1a0; // ObjectProperty
		constexpr auto NextCar = 0x1a8; // ObjectProperty
		constexpr auto LastTeam = 0x1b0; // int32_t
		constexpr auto LastChangeCarTime = 0x1b4; // float
	}

	namespace n_UGetPlayerStorageResult_X {
		constexpr auto Items = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_LocalPlayer_TA {
		constexpr auto bOpenedStartMenu = 0x98; // uint32_t : 1
		constexpr auto bCheckedStartupEvents = 0x98; // uint32_t : 1
		constexpr auto bSaveDataLoaded = 0x98; // uint32_t : 1
		constexpr auto bBallcam = 0x98; // uint32_t : 1
		constexpr auto bUseHoldBallCam = 0x98; // uint32_t : 1
		constexpr auto bUseBallCamIndicator = 0x98; // uint32_t : 1
		constexpr auto bAlternateNameplates = 0x98; // uint32_t : 1
		constexpr auto bMetric = 0x98; // uint32_t : 1
		constexpr auto bTeamColoredBoostMeter = 0x98; // uint32_t : 1
		constexpr auto bPrimaryPlayer = 0x98; // uint32_t : 1
		constexpr auto bPartyLeader = 0x98; // uint32_t : 1
		constexpr auto bIsInParty = 0x98; // uint32_t : 1
		constexpr auto bIsPlayerTrading = 0x98; // uint32_t : 1
		constexpr auto bDemoBuild = 0x98; // uint32_t : 1
		constexpr auto bForceSplitScreenUI = 0x98; // uint32_t : 1
		constexpr auto bPrivateMatchGameOwner = 0x98; // uint32_t : 1
		constexpr auto bAgeRestricted = 0x98; // uint32_t : 1
		constexpr auto bPendingIdleKick = 0x98; // uint32_t : 1
		constexpr auto bStartVoteToForfeitDisabled = 0x98; // uint32_t : 1
		constexpr auto bDisableCrossPlay = 0x98; // uint32_t : 1
		constexpr auto bReplacingBot = 0x98; // uint32_t : 1
		constexpr auto bDisableDivisions = 0x98; // uint32_t : 1
		constexpr auto bDisableDivisionsSports = 0x98; // uint32_t : 1
		constexpr auto bCheckedBootMessage = 0x98; // uint32_t : 1
		constexpr auto bUseSteamInput = 0x98; // uint32_t : 1
		constexpr auto SaveDataError = 0xa0; // FString
		constexpr auto OnlineError = 0xb0; // FString
		constexpr auto PlayerName = 0xc0; // FString
		constexpr auto PlayerAvatarTexture = 0xd0; // ObjectProperty
		constexpr auto XpLevel = 0xd8; // int32_t
		constexpr auto XPTitle = 0xe0; // FString
		constexpr auto XPTotal = 0xf0; // int32_t
		constexpr auto XPProgressInCurrentLevel = 0xf4; // int32_t
		constexpr auto XPRequiredForNextLevel = 0xf8; // int32_t
		constexpr auto Team = 0xfc; // int32_t
		constexpr auto CameraYaw = 0x100; // float
		constexpr auto SplitScreenPosition = 0x104; // int32_t
		constexpr auto ControllerId = 0x108; // int32_t
		constexpr auto LocalPlayerIndex = 0x10c; // int32_t
		constexpr auto LastMatchType = 0x110; // FName
		constexpr auto IdleKickSeconds = 0x118; // float
		constexpr auto ContainerToOpenId = 0x11c; // FProductHashID
		constexpr auto OrphanedControllerId = 0x120; // char
		constexpr auto PersonaSave = 0x128; // ObjectProperty
		constexpr auto PlayerID = 0x130; // FUniqueNetId
		constexpr auto Player = 0x178; // ObjectProperty
		constexpr auto ModalOrphaned = 0x180; // ObjectProperty
	}

	namespace n_UGFxData_ProductSlot_TA {
		constexpr auto bEnabled = 0x98; // uint32_t : 1
		constexpr auto bCanUnequip = 0x98; // uint32_t : 1
		constexpr auto SlotName = 0x9c; // FName
		constexpr auto Label = 0xa8; // FString
		constexpr auto PluralLabel = 0xb8; // FString
		constexpr auto Icon = 0xc8; // ObjectProperty
		constexpr auto SlotIndex = 0xd0; // int32_t
		constexpr auto EquippedHashID0 = 0xd4; // FProductHashID
		constexpr auto EquippedHashID1 = 0xd8; // FProductHashID
		constexpr auto EquippedPack = 0xdc; // FProductHashID
		constexpr auto DefaultProductID = 0xe0; // int32_t
		constexpr auto MatchesNeededToUnlock = 0xe4; // int32_t
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceData = 0x308; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto PerInstanceSMData = 0x318; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumPendingLightmaps = 0x328; // int32_t
		constexpr auto ComponentJoinKey = 0x32c; // int32_t
		constexpr auto CachedMappings = 0x330; // TArray<FInstancedStaticMeshMappingInfo>
		constexpr auto InstancingRandomSeed = 0x340; // int32_t
		constexpr auto InstanceStartCullDistance = 0x344; // int32_t
		constexpr auto InstanceEndCullDistance = 0x348; // int32_t
		constexpr auto SelectedInstances = 0x350; // FBitArray_Mirror
		constexpr auto bDontResolveInstancedLightmaps = 0x370; // uint32_t : 1
	}

	namespace n_USettings {
		constexpr auto LocalizedSettings = 0x60; // TArray<FLocalizedStringSetting>
		constexpr auto Properties = 0x70; // TArray<FSettingsProperty>
		constexpr auto LocalizedSettingsMappings = 0x80; // TArray<FLocalizedStringSettingMetaData>
		constexpr auto PropertyMappings = 0x90; // TArray<FSettingsPropertyPropertyMetaData>
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x70; // FRawDistributionVector
		constexpr auto StartAlpha = 0x98; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xc0; // uint32_t : 1
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x70; // FRawDistributionVector
		constexpr auto EnableX = 0x98; // uint32_t : 1
		constexpr auto EnableY = 0x98; // uint32_t : 1
		constexpr auto EnableZ = 0x98; // uint32_t : 1
	}

	namespace n_ULevelStreamingDistance {
		constexpr auto Origin = 0x118; // FVector
		constexpr auto MaxDistance = 0x124; // float
	}

	namespace n_UProductAsset_Boost_TA {
		constexpr auto FXActor = 0xf8; // ObjectProperty
		constexpr auto PaintedFXActor = 0x100; // ObjectProperty
		constexpr auto PreviewFrontWheelSpinSpeed = 0x108; // float
		constexpr auto PreviewBackWheelSpinSpeed = 0x10c; // float
	}

	namespace n_ANetworkInputBuffer_TA {
		constexpr auto PhysicsConfig = 0x268; // ObjectProperty
		constexpr auto JitterSettings = 0x270; // ObjectProperty
		constexpr auto EngineShare = 0x278; // ObjectProperty
		constexpr auto PrimaryClient = 0x280; // ObjectProperty
		constexpr auto Clients = 0x288; // TArray<ObjectProperty>
		constexpr auto TimeSinceLastMovePacket = 0x298; // float
		constexpr auto MaxInputFramesPerPacket = 0x29c; // int32_t
		constexpr auto PingTimestamps = 0x2a0; // TArray<float>
		constexpr auto LastTickTime = 0x2b0; // float
		constexpr auto Stats = 0x2b4; // FInputBufferStats
		constexpr auto PingEvent = 0x2c0; // ObjectProperty
	}

	namespace n_UTeamColorPreferences_TA {
		constexpr auto bColorBlind = 0x60; // uint32_t : 1
		constexpr auto bForceDefaultColors = 0x60; // uint32_t : 1
		constexpr auto EventPropertyChange = 0x68; // DelegateProperty
	}

	namespace n_U__OnlineGameDLC_TA__GetDlcIdFromName_F389331D44C49087E754C5A451A01F21 {
		constexpr auto DLCName = 0x60; // FName
	}

	namespace n_AHauntedBallTrapTrigger_TA {
		constexpr auto LensFlare = 0x270; // ObjectProperty
		constexpr auto TeamIndex = 0x278; // int32_t
		constexpr auto GoalVolume = 0x280; // ObjectProperty
		constexpr auto TrapResetTime = 0x288; // float
		constexpr auto MinLensFlareColorValue = 0x28c; // float
		constexpr auto MICParamName = 0x290; // FName
		constexpr auto MIC_TrapVolumeMat = 0x298; // ObjectProperty
		constexpr auto MIC_TrapOutlineMat = 0x2a0; // ObjectProperty
		constexpr auto bIsActive = 0x2a8; // uint32_t : 1
		constexpr auto HauntedBall = 0x2b0; // ObjectProperty
		constexpr auto SoccarEvent = 0x2b8; // ObjectProperty
		constexpr auto BeamPSC = 0x2c0; // ComponentProperty
		constexpr auto BeamPSArchetype = 0x2c8; // ObjectProperty
		constexpr auto BeamPSParam = 0x2d0; // FName
	}

	namespace n_UGFxData_UserBugReport_TA {
		constexpr auto Config = 0x98; // ObjectProperty
		constexpr auto bEnabled = 0xa0; // uint32_t : 1
		constexpr auto Categories = 0xa8; // TArray<FGFxUserBugReportCategory>
		constexpr auto SelectedCategories = 0xb8; // TArray<FGFxUserBugReportCategory>
		constexpr auto UserMessage = 0xc8; // FString
		constexpr auto Status = 0xd8; // EUserBugReportSubmitStatus
		constexpr auto SubmitError = 0xe0; // FString
		constexpr auto ConfirmationCode = 0xf0; // FString
		constexpr auto PendingData = 0x100; // ObjectProperty
		constexpr auto UploadTask = 0x108; // ObjectProperty
	}

	namespace n_U__GFxData_MusicPlayer_TA__GetTitleTrackBuilder_0F51B9DD43FEEB6B7694CBA4FCBEBA60 {
		constexpr auto PreviousBuilder = 0x60; // TScriptInterface<Class>
	}

	namespace n_UFaceFXAsset {
		constexpr auto DefaultSkelMesh = 0x60; // ObjectProperty
		constexpr auto FaceFXActor = 0x68; // FPointer
		constexpr auto RawFaceFXActorBytes = 0x70; // TArray<char>
		constexpr auto RawFaceFXSessionBytes = 0x80; // TArray<char>
		constexpr auto PreviewMorphSets = 0x90; // TArray<ObjectProperty>
		constexpr auto MountedFaceFXAnimSets = 0xa0; // TArray<ObjectProperty>
		constexpr auto ReferencedSoundCues = 0xb0; // TArray<ObjectProperty>
		constexpr auto ReferencedAkEvents = 0xc0; // TArray<ObjectProperty>
		constexpr auto NumLoadErrors = 0xd0; // int32_t
	}

	namespace n_UClubServerResult_X {
		constexpr auto Host = 0x60; // FString
		constexpr auto Port = 0x70; // int32_t
		constexpr auto ServerName = 0x78; // FString
		constexpr auto CustomServerName = 0x88; // FString
		constexpr auto CustomServerPassword = 0x98; // FString
	}

	namespace n_ABallRadiusVolume_TA {
		constexpr auto Radius = 0x268; // float
		constexpr auto PreviewRadius = 0x270; // ComponentProperty
		constexpr auto InRadius = 0x278; // TArray<ObjectProperty>
	}

	namespace n_ADynamicBlockingVolume {
		constexpr auto bEnabled = 0x2b0; // uint32_t : 1
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto Curve = 0xa0; // FInterpCurveVector
	}

	namespace n_URPC_CreateGameServer_X {
		constexpr auto ServerName = 0xe8; // FString
		constexpr auto MachineId = 0xf8; // int32_t
		constexpr auto IP = 0x100; // FString
		constexpr auto Region = 0x110; // FString
		constexpr auto BuildID = 0x120; // int32_t
		constexpr auto ServerType = 0x128; // FString
		constexpr auto ServerId = 0x138; // QWordProperty
		constexpr auto Host = 0x140; // FString
		constexpr auto Zone = 0x150; // int32_t
		constexpr auto UseWebSocket = 0x154; // uint32_t : 1
		constexpr auto PerConURL = 0x158; // FString
		constexpr auto PerConURLv2 = 0x168; // FString
		constexpr auto PsyToken = 0x178; // FString
	}

	namespace n_UBTConditionalNode {
		constexpr auto PreConditions = 0x80; // TArray<ObjectProperty>
		constexpr auto Conditions = 0x90; // TArray<ObjectProperty>
		constexpr auto SuccessConditions = 0xa0; // TArray<ObjectProperty>
	}

	namespace n_UAvatarDownload {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto URL = 0xa8; // FString
		constexpr auto AvatarSize = 0xb8; // AvatarSize
		constexpr auto Texture = 0xc0; // ObjectProperty
		constexpr auto Callbacks = 0xc8; // DelegateProperty
	}

	namespace n_UProductAttribute_SpecialEditionSettings_TA {
		constexpr auto Editions = 0x80; // TArray<FSpecialEditionConfig>
		constexpr auto SupportedEditions = 0x90; // TArray<ObjectProperty>
	}

	namespace n_UAnimationCompressionAlgorithm {
		constexpr auto Description = 0x60; // FString
		constexpr auto bNeedsSkeleton = 0x70; // uint32_t : 1
		constexpr auto TranslationCompressionFormat = 0x74; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x75; // AnimationCompressionFormat
	}

	namespace n_UEpicErrors_X {
		constexpr auto EpicAccountNotFound = 0x80; // ObjectProperty
		constexpr auto EpicAccountLinkingFailed = 0x88; // ObjectProperty
		constexpr auto EOSFailedToConnect = 0x90; // ObjectProperty
		constexpr auto EOSFailedToConnectSplitscreen = 0x98; // ObjectProperty
		constexpr auto NotLoggedInToEOS = 0xa0; // ObjectProperty
		constexpr auto EOSUpdateRequired = 0xa8; // ObjectProperty
		constexpr auto PinGrantCodeExpired = 0xb0; // ObjectProperty
		constexpr auto PrimaryAccountNotSet = 0xb8; // ObjectProperty
		constexpr auto EpicInvalidPlayer = 0xc0; // ObjectProperty
		constexpr auto EpicRemoteFriendLimitReached = 0xc8; // ObjectProperty
		constexpr auto EpicMaxOutgoingInvitesReached = 0xd0; // ObjectProperty
		constexpr auto EpicLocalFriendLimitReached = 0xd8; // ObjectProperty
		constexpr auto EpicAccountLookupFailed = 0xe0; // ObjectProperty
		constexpr auto EpicAccountCreationFailed = 0xe8; // ObjectProperty
		constexpr auto EpicAccountRestricted = 0xf0; // ObjectProperty
		constexpr auto EpicPartyInviteFailed = 0xf8; // ObjectProperty
		constexpr auto IncorrectSaveLoaded = 0x100; // ObjectProperty
		constexpr auto EpicSocialBanned = 0x108; // ObjectProperty
		constexpr auto MaxPendingFriendInvitesReached = 0x110; // ObjectProperty
	}

	namespace n_UProductsConfig_TA {
		constexpr auto ProhibitedProducts = 0x78; // TArray<FReplacementProduct>
		constexpr auto TradeInFilters = 0x88; // TArray<FProductTradeInFilter>
		constexpr auto ItemSeries_AllowTradeIn = 0x98; // TArray<FSeriesGroup>
		constexpr auto ItemSeries_PreventP2PTrade = 0xa8; // TArray<FSeriesGroup>
		constexpr auto ProductTradeHoldOverrides = 0xb8; // TArray<FProductTradeHoldOverride>
	}

	namespace n_UGFxData_LanMatch_TA {
		constexpr auto ServerName = 0x98; // FString
		constexpr auto Password = 0xa8; // FString
		constexpr auto SelectedMaxPlayerCount = 0xb8; // int32_t
		constexpr auto SettingsType = 0xbc; // ECustomMatchSettingsType
	}

	namespace n_URPC_GetGameServerPingList_X {
		constexpr auto Regions = 0xe8; // TArray<FRegionSecret>
		constexpr auto Servers = 0xf8; // TArray<FGetGameServerPingListData>
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0xe8; // FName
	}

	namespace n_UClubInviteNotification_TA {
		constexpr auto PlayerID = 0x110; // FUniqueNetId
		constexpr auto ClubID = 0x158; // QWordProperty
		constexpr auto ClubName = 0x160; // FString
		constexpr auto ClubTag = 0x170; // FString
	}

	namespace n_USeqAct_SetSkelMATLoadout_TA {
		constexpr auto ActorMAT = 0x160; // ObjectProperty
		constexpr auto ControllerOrPawn = 0x168; // ObjectProperty
		constexpr auto LoadoutIndex = 0x170; // int32_t
	}

	namespace n_ASpecialPickup_CarSpeed_TA {
		constexpr auto SpeedMultiplier = 0x388; // float
		constexpr auto MaxLinearSpeedMultiplier = 0x38c; // float
		constexpr auto DriveTorqueCurve = 0x390; // FInterpCurveFloat
		constexpr auto OriginalTorque = 0x3a8; // float
		constexpr auto OriginalMaxLinearSpeed = 0x3ac; // float
		constexpr auto OriginalDriveTorqueCurve = 0x3b0; // FInterpCurveFloat
	}

	namespace n_UUIGameInfoSummary {
		constexpr auto ClassName = 0xa0; // FString
		constexpr auto GameAcronym = 0xb0; // FString
		constexpr auto MapPrefix = 0xc0; // FString
		constexpr auto bIsTeamGame = 0xd0; // uint32_t : 1
		constexpr auto bIsDisabled = 0xd0; // uint32_t : 1
		constexpr auto GameSettingsClassName = 0xd8; // FString
		constexpr auto GameName = 0xe8; // FString
		constexpr auto Description = 0xf8; // FString
	}

	namespace n_AAkBusActor {
		constexpr auto SoundSource = 0x268; // ComponentProperty
		constexpr auto TargetBusName = 0x270; // FName
		constexpr auto PinnedAxis = 0x278; // EPinnedAxisType
	}

	namespace n_ASpecialPickup_Football_TA {
		constexpr auto BallHitSFX = 0x388; // ObjectProperty
		constexpr auto DeactivateSFX = 0x390; // ObjectProperty
		constexpr auto AttachTime = 0x398; // float
		constexpr auto DetachTime = 0x39c; // float
		constexpr auto ThrowSettings = 0x3a0; // TArray<FThrowSetting>
		constexpr auto AttachOffset = 0x3b0; // FVector
		constexpr auto CarFumbleForce = 0x3bc; // float
		constexpr auto DoubleJumpUpForce = 0x3c0; // float
		constexpr auto DemolishUpForce = 0x3c4; // float
		constexpr auto MinBreakTime = 0x3c8; // float
		constexpr auto MinAttachTime = 0x3cc; // float
		constexpr auto CheckLastTouchRate = 0x3d0; // float
		constexpr auto OutOfBoundsZ = 0x3d4; // float
		constexpr auto WeldedBall = 0x3d8; // ObjectProperty
		constexpr auto LastTouchCheckTime = 0x3e0; // float
		constexpr auto PendingBall = 0x3e8; // ObjectProperty
		constexpr auto PendingBallDodge = 0x3f0; // FVector
	}

	namespace n_UActorFactoryApexClothing {
		constexpr auto ClothingAssets = 0xb8; // TArray<ObjectProperty>
		constexpr auto ClothingRBChannel = 0xc8; // ERBCollisionChannel
		constexpr auto ClothingRBCollideWithChannels = 0xcc; // FRBCollisionChannelContainer
	}

	namespace n_URPCQueue_X {
		constexpr auto VfTable_FTickableObject = 0x70; // FPointer
		constexpr auto AuthTimeoutSeconds = 0x78; // float
		constexpr auto RPCConfig = 0x80; // ObjectProperty
		constexpr auto RetryConfig = 0x88; // ObjectProperty
		constexpr auto PsyNetUrl = 0x90; // ObjectProperty
		constexpr auto PendingRPCs = 0x98; // TArray<FPendingRPC>
		constexpr auto PendingBatches = 0xa8; // TArray<ObjectProperty>
		constexpr auto ServiceFailureDelayTimes = 0xb8; // FMap_Mirror
		constexpr auto bAuthorized = 0x108; // uint32_t : 1
		constexpr auto __EventRPCSuccess__Delegate = 0x110; // DelegateProperty
		constexpr auto __EventRPCError__Delegate = 0x128; // DelegateProperty
		constexpr auto __EventBatchError__Delegate = 0x140; // DelegateProperty
		constexpr auto __SendRequestDelegate__Delegate = 0x158; // DelegateProperty
	}

	namespace n_UTAsyncResult__UserBugReportUploadResult_TA {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_USeqAct_SetInt {
		constexpr auto Target = 0x160; // int32_t
		constexpr auto Value = 0x168; // TArray<int32_t>
	}

	namespace n_UGenericParamListStatEntry {
		constexpr auto StatEvent = 0x60; // FPointer
		constexpr auto Writer = 0x68; // ObjectProperty
	}

	namespace n_AExplosion_X {
		constexpr auto ExplosionComponent = 0x268; // ComponentProperty
		constexpr auto FXActorArchetype = 0x270; // ObjectProperty
		constexpr auto FXActor = 0x278; // ObjectProperty
	}

	namespace n_U__GFxData_Friends_TA__IsFriendInParty_D091D9BC4218F03AF9A6C8A1CF4BEC80 {
		constexpr auto UniqueId = 0x60; // FUniqueNetId
	}

	namespace n_ACamera_GameEditor_TA {
		constexpr auto CameraMode = 0x7a8; // FName
		constexpr auto CurrentCameraState = 0x7b0; // ObjectProperty
	}

	namespace n_UApexDestructibleDamageParameters {
		constexpr auto DamageMap = 0x60; // TArray<FDamagePair>
	}

	namespace n_UEpicFriendsConverterConfig_TA {
		constexpr auto DaysBetweenPrompts = 0x78; // float
		constexpr auto SecondsBetweenInvites = 0x7c; // float
		constexpr auto MaxNumberOfAttemptsPerUser = 0x80; // int32_t
	}

	namespace n_USeqAct_SpawnArchetype_X {
		constexpr auto ActorArchetype = 0x160; // ObjectProperty
		constexpr auto Velocity = 0x168; // FVector
		constexpr auto Speed = 0x174; // float
		constexpr auto SpawnOwners = 0x178; // TArray<ObjectProperty>
		constexpr auto SpawnPoints = 0x188; // TArray<ObjectProperty>
		constexpr auto Spawned = 0x198; // ObjectProperty
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxisAndAngle = 0xc0; // FExpressionInput
		constexpr auto PositionOnAxis = 0xf8; // FExpressionInput
		constexpr auto Position = 0x130; // FExpressionInput
	}

	namespace n_APlayerReplicationInfo {
		constexpr auto ObjectProvider = 0x268; // ComponentProperty
		constexpr auto RegistryGroup = 0x270; // ComponentProperty
		constexpr auto Score = 0x278; // int32_t
		constexpr auto Deaths = 0x27c; // int32_t
		constexpr auto Ping = 0x280; // char
		constexpr auto TTSSpeaker = 0x281; // ETTSSpeaker
		constexpr auto NumLives = 0x284; // int32_t
		constexpr auto PlayerName = 0x288; // FString
		constexpr auto OldName = 0x298; // FString
		constexpr auto PlayerID = 0x2a8; // int32_t
		constexpr auto Team = 0x2b0; // ObjectProperty
		constexpr auto bAdmin = 0x2b8; // uint32_t : 1
		constexpr auto bIsSpectator = 0x2b8; // uint32_t : 1
		constexpr auto bOnlySpectator = 0x2b8; // uint32_t : 1
		constexpr auto bWaitingPlayer = 0x2b8; // uint32_t : 1
		constexpr auto bReadyToPlay = 0x2b8; // uint32_t : 1
		constexpr auto bOutOfLives = 0x2b8; // uint32_t : 1
		constexpr auto bBot = 0x2b8; // uint32_t : 1
		constexpr auto bIsInactive = 0x2b8; // uint32_t : 1
		constexpr auto bFromPreviousLevel = 0x2b8; // uint32_t : 1
		constexpr auto bTimedOut = 0x2b8; // uint32_t : 1
		constexpr auto bUnregistered = 0x2b8; // uint32_t : 1
		constexpr auto StartTime = 0x2bc; // int32_t
		constexpr auto StringSpectating = 0x2c0; // FString
		constexpr auto StringUnknown = 0x2d0; // FString
		constexpr auto Kills = 0x2e0; // int32_t
		constexpr auto ExactPing = 0x2e4; // float
		constexpr auto SavedNetworkAddress = 0x2e8; // FString
		constexpr auto UniqueId = 0x2f8; // FUniqueNetId
		constexpr auto SessionName = 0x340; // FName
		constexpr auto AutomatedTestingData = 0x348; // FAutomatedTestingDatum
		constexpr auto Avatar = 0x350; // ObjectProperty
		constexpr auto PacketStats = 0x358; // FNetPacketStats
		constexpr auto PrevPacketStats = 0x374; // FNetPacketStats
		constexpr auto NetStats = 0x390; // FClientConnectionStats
		constexpr auto RemoteUserData = 0x3e8; // FPRIRemoteUserData
		constexpr auto __EventTeamChanged__Delegate = 0x3f8; // DelegateProperty
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0xc8; // FInterpCurveFloat
		constexpr auto CurveTension = 0xe0; // float
	}

	namespace n_UCameraState_PremiumGarage_TA {
		constexpr auto BetweenPremiumCameraBlend = 0x100; // FViewTargetTransitionParams
		constexpr auto FadeInFromBlackTime = 0x110; // float
		constexpr auto FadeToBlackTime = 0x114; // float
		constexpr auto PitchDeadzone = 0x118; // float
		constexpr auto PitchSensitivity = 0x11c; // float
		constexpr auto PitchAutocorrectCurve = 0x120; // FInterpCurveFloat
		constexpr auto PitchMaxSpeed = 0x138; // float
		constexpr auto PitchBlendbackModifier = 0x13c; // float
		constexpr auto PitchBlendbackMin = 0x140; // float
		constexpr auto CameraReturnBlendCurve = 0x148; // FInterpCurveFloat
		constexpr auto LastAdjustTime = 0x160; // float
		constexpr auto TurntableActor = 0x168; // ObjectProperty
		constexpr auto Shell = 0x170; // ObjectProperty
	}

	namespace n_URPC_MicroTransactions_ClaimEntitlements_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto AuthCode = 0x130; // FString
		constexpr auto Products = 0x140; // TArray<FOnlineProductData>
		constexpr auto Currencies = 0x150; // TArray<FCurrency>
		constexpr auto WalletCurrencies = 0x160; // TArray<FCurrency>
	}

	namespace n_USkelControlHandlebars {
		constexpr auto WheelRollAxis = 0x130; // EAxis
		constexpr auto HandlebarRotateAxis = 0x131; // EAxis
		constexpr auto WheelBoneName = 0x134; // FName
		constexpr auto bInvertRotation = 0x13c; // uint32_t : 1
		constexpr auto SteerWheelBoneIndex = 0x140; // int32_t
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x98; // FParticleRandomSeedInfo
	}

	namespace n_U__ShopsService_Local_TA__Purchase_8F20EAE344CF202E96956D8535F63BAE {
		constexpr auto SuccessCallback = 0x60; // DelegateProperty
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UBTAction {
		constexpr auto FinishTime = 0xb0; // float
		constexpr auto AbortTime = 0xb4; // float
		constexpr auto StartTime = 0xb8; // float
	}

	namespace n_UPBRuleNodeCycle {
		constexpr auto RepeatAxis = 0x98; // EProcBuildingAxis
		constexpr auto RepeatSize = 0x9c; // float
		constexpr auto CycleSize = 0xa0; // int32_t
		constexpr auto bFixRepeatSize = 0xa4; // uint32_t : 1
	}

	namespace n_U__Car_TA__QueueDemolish_CB62EE9F47C73A498639CB95C005542B {
		constexpr auto Data = 0x60; // FDemolishData
		constexpr auto GoalExplosionDemoFxArchetype = 0x88; // ObjectProperty
	}

	namespace n_UEula_TA {
		constexpr auto EulaConfig = 0x80; // ObjectProperty
	}

	namespace n_UStayAsPartyLeader_TA {
		constexpr auto LeaderID = 0x60; // FUniqueNetId
	}

	namespace n_UGFxData_ClientPerformanceStats_TA {
		constexpr auto bIsGameRecordingEnabled = 0x98; // uint32_t : 1
	}

	namespace n_URPC_MicroTransactions_FinalizePurchase_TA {
		constexpr auto OrderId = 0xe8; // QWordProperty
		constexpr auto Authorized = 0xf0; // uint32_t : 1
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
		constexpr auto Products = 0x140; // TArray<FOnlineProductData>
		constexpr auto Currencies = 0x150; // TArray<FCurrency>
		constexpr auto WalletCurrencies = 0x160; // TArray<FCurrency>
	}

	namespace n_UGFxData_TourBracketMatchTeamDetails_TA {
		constexpr auto TeamID = 0x98; // QWordProperty
		constexpr auto GameStats = 0xa0; // TArray<FTeamGameStats>
		constexpr auto PlayerStats = 0xb0; // TArray<FTourMatchPlayerStats>
	}

	namespace n_USeqAct_MatchCountdown_TA {
		constexpr auto CountdownTime = 0x160; // int32_t
	}

	namespace n_U__OnlineGameParty_TA__IsPrimaryMemberForPlayer_B1B39FF64091BDE5DE8133A6248B264B {
		constexpr auto UserId = 0x60; // FUniqueNetId
	}

	namespace n_UPBRuleNodeLODQuad {
		constexpr auto MassiveLODDistanceScale = 0x98; // float
	}

	namespace n_UAdManager_TA {
		constexpr auto CacheDuration = 0x60; // QWordProperty
		constexpr auto CachedAdImages = 0x68; // TArray<FCachedAdImageData>
		constexpr auto BillboardZoneMapping = 0x78; // TArray<FBillboardData>
		constexpr auto BillboardMeshUpdateRequests = 0x88; // TArray<FBillboardUpdateRequestData>
		constexpr auto ImageDownloader = 0x98; // ObjectProperty
		constexpr auto CurrentAdIndex = 0xa0; // int32_t
		constexpr auto CurrentRPC = 0xa8; // ObjectProperty
	}

	namespace n_U__StayAsPartySystem_TA__CreateVoteStartEvent_F843CB8A4B6A0D53DF67338E8E345B64 {
		constexpr auto StartEvent = 0x60; // ObjectProperty
		constexpr auto Team = 0x68; // ObjectProperty
	}

	namespace n_UFloppyBits_TA {
		constexpr auto PhysAsset = 0x78; // ObjectProperty
		constexpr auto CollisionChannels = 0x80; // FRBCollisionChannelContainer
		constexpr auto SkelMesh = 0x88; // ComponentProperty
	}

	namespace n_UAnimNodeSlot {
		constexpr auto bIsPlayingCustomAnim = 0x148; // uint32_t : 1
		constexpr auto bEarlyAnimEndNotify = 0x148; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x148; // uint32_t : 1
		constexpr auto bAdditiveAnimationsOverrideSource = 0x148; // uint32_t : 1
		constexpr auto bIsBeingUsedByInterpGroup = 0x148; // uint32_t : 1
		constexpr auto bDontAddToAlwaysTickArray = 0x148; // uint32_t : 1
		constexpr auto PendingBlendOutTime = 0x14c; // float
		constexpr auto CustomChildIndex = 0x150; // int32_t
		constexpr auto TargetChildIndex = 0x154; // int32_t
		constexpr auto TargetWeight = 0x158; // TArray<float>
		constexpr auto BlendTimeToGo = 0x168; // float
	}

	namespace n_UGFxEngine {
		constexpr auto GCReferences = 0x60; // TArray<FGCReference>
		constexpr auto RefCount = 0x70; // int32_t
		constexpr auto LoadingScreenInfo = 0x78; // FLoadingMovieMapInfo
	}

	namespace n_UAddReservationMessage_X {
		constexpr auto Players = 0x60; // TArray<FReservationPlayerData>
		constexpr auto PartyLeaderID = 0x70; // FUniqueNetId
		constexpr auto ReservationID = 0xb8; // FString
		constexpr auto bDisableCrossPlay = 0xc8; // uint32_t : 1
		constexpr auto bMarkSplitscreenAsRemote = 0xc8; // uint32_t : 1
	}

	namespace n_UPsyNetService_TourKicked_TA {
		constexpr auto TournamentID = 0x90; // QWordProperty
		constexpr auto Reason = 0x98; // ObjectProperty
	}

	namespace n_USeqAct_SetMaterial {
		constexpr auto NewMaterial = 0x160; // ObjectProperty
		constexpr auto MaterialIndex = 0x168; // int32_t
	}

	namespace n_ULanMessage_X {
		constexpr auto Nonce = 0x60; // QWordProperty
	}

	namespace n_UCameraState_Car_TA {
		constexpr auto InterpToAirRate = 0xa8; // float
		constexpr auto InterpToGroundRate = 0xac; // float
		constexpr auto FocusInterp = 0xb0; // FInterpVector
		constexpr auto FocusOffsetInterp = 0xd8; // FInterpVector
		constexpr auto DistanceInterp = 0x100; // FInterpVector
		constexpr auto GroundRotationInterpRate = 0x128; // float
		constexpr auto GroundRotationInterpRateWall = 0x12c; // float
		constexpr auto AirVelocityInfluence = 0x130; // float
		constexpr auto AirVelocityInfluenceMaxSpeed = 0x134; // float
		constexpr auto DistanceSpeedScale = 0x138; // float
		constexpr auto DistanceOffsetMin = 0x13c; // float
		constexpr auto MaxSpeedFOV = 0x140; // float
		constexpr auto FOVInterpSpeed = 0x144; // float
		constexpr auto SupersonicFOV = 0x148; // float
		constexpr auto SupersonicFOVInterpSpeed = 0x14c; // float
		constexpr auto BouncyChassisScale = 0x150; // float
		constexpr auto RollScale = 0x154; // float
		constexpr auto GroundNormalInterpRate = 0x158; // float
		constexpr auto AirGroundBlend = 0x15c; // float
		constexpr auto ViewOffset = 0x160; // FCameraOrientation
		constexpr auto bFirstExecution = 0x18c; // uint32_t : 1
		constexpr auto bFullRotationJustChanged = 0x18c; // uint32_t : 1
		constexpr auto bFullRotationActive = 0x18c; // uint32_t : 1
		constexpr auto bOnGround = 0x18c; // uint32_t : 1
		constexpr auto bLastHoldMouseCamera = 0x18c; // uint32_t : 1
		constexpr auto GroundNormal = 0x190; // FVector
		constexpr auto MouseCameraDeadzone = 0x19c; // float
		constexpr auto MouseCameraLockWindowInDegrees = 0x1a0; // float
		constexpr auto PitchMin = 0x1a4; // int32_t
		constexpr auto PitchMax = 0x1a8; // int32_t
		constexpr auto MouseCameraLockTimeWindow = 0x1ac; // float
		constexpr auto TimeOfLastCameraInput = 0x1b0; // float
		constexpr auto Config = 0x1b8; // ObjectProperty
	}

	namespace n_UListenServer_TA {
		constexpr auto GRI = 0x60; // ObjectProperty
		constexpr auto AdHocBeacon = 0x68; // ObjectProperty
		constexpr auto GameEvent = 0x70; // ObjectProperty
		constexpr auto LoadingPlayers = 0x78; // TArray<FLoadingPlayer>
		constexpr auto bRegistered = 0x88; // uint32_t : 1
	}

	namespace n_ATrigger_LOS {
		constexpr auto PCsWithLOS = 0x278; // TArray<ObjectProperty>
	}

	namespace n_UShopsManager_TA {
		constexpr auto ServiceArchetype = 0x60; // ObjectProperty
		constexpr auto Service = 0x68; // ObjectProperty
		constexpr auto ActiveShopID = 0x70; // int32_t
		constexpr auto __EventShopItemTextureLoaded__Delegate = 0x78; // DelegateProperty
		constexpr auto __OnGetAllShopsResult__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnGetCatalogueResult__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnGetCrateShopResult__Delegate = 0xc0; // DelegateProperty
		constexpr auto __OnPurchaseResultSuccess__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnFailed__Delegate = 0xf0; // DelegateProperty
	}

	namespace n_USavedMove {
		constexpr auto NextMove = 0x60; // ObjectProperty
		constexpr auto TimeStamp = 0x68; // float
		constexpr auto delta = 0x6c; // float
		constexpr auto bRun = 0x70; // uint32_t : 1
		constexpr auto bDuck = 0x70; // uint32_t : 1
		constexpr auto bPressedJump = 0x70; // uint32_t : 1
		constexpr auto bDoubleJump = 0x70; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x70; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x70; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x70; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x70; // uint32_t : 1
		constexpr auto DoubleClickMove = 0x74; // EDoubleClickDir
		constexpr auto SavedPhysics = 0x75; // EPhysics
		constexpr auto RootMotionMode = 0x76; // ERootMotionMode
		constexpr auto StartLocation = 0x78; // FVector
		constexpr auto StartRelativeLocation = 0x84; // FVector
		constexpr auto StartVelocity = 0x90; // FVector
		constexpr auto StartFloor = 0x9c; // FVector
		constexpr auto SavedLocation = 0xa8; // FVector
		constexpr auto SavedVelocity = 0xb4; // FVector
		constexpr auto SavedRelativeLocation = 0xc0; // FVector
		constexpr auto RMVelocity = 0xcc; // FVector
		constexpr auto Acceleration = 0xd8; // FVector
		constexpr auto Rotation = 0xe4; // FRotator
		constexpr auto StartBase = 0xf0; // ObjectProperty
		constexpr auto EndBase = 0xf8; // ObjectProperty
		constexpr auto CustomTimeDilation = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto RootMotionInterpCurrentTime = 0x108; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x10c; // FVector
	}

	namespace n_U__TourCheckIn_TA__CheckIn_AC4EB0004B74E0BE758D768B25D537B8 {
		constexpr auto LocalTeamMemberIDs = 0x60; // TArray<FUniqueNetId>
		constexpr auto Party = 0x70; // ObjectProperty
		constexpr auto Settings = 0x78; // ObjectProperty
		constexpr auto PlayerID = 0x80; // FUniqueNetId
		constexpr auto AllTeamMemberIDs = 0xc8; // TArray<FUniqueNetId>
	}

	namespace n_UPsyNetService_TourMatchFound_TA {
		constexpr auto Match = 0x90; // FTourMatch
	}

	namespace n_USeqAct_TermPhys_TA {
		constexpr auto RBObj = 0x160; // ObjectProperty
	}

	namespace n_UMusicTracklist_TA {
		constexpr auto Tracks = 0x60; // TArray<ObjectProperty>
	}

	namespace n_URPC_Challenge_AvailableReceived_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Id = 0x130; // int32_t
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0xc0; // ObjectProperty
		constexpr auto FunctionInputs = 0xc8; // TArray<FFunctionExpressionInput>
		constexpr auto FunctionOutputs = 0xd8; // TArray<FFunctionExpressionOutput>
	}

	namespace n_UAkDevice {
		constexpr auto DynamicRangeSetting_Low_Master = 0x60; // FName
		constexpr auto DynamicRangeSetting_Medium_Master = 0x68; // FName
		constexpr auto DynamicRangeSetting_High_Master = 0x70; // FName
		constexpr auto DynamicRangeSetting_Low_Gameplay = 0x78; // FName
		constexpr auto DynamicRangeSetting_Medium_Gameplay = 0x80; // FName
		constexpr auto DynamicRangeSetting_High_Gameplay = 0x88; // FName
		constexpr auto MasterAudioBusName = 0x90; // FName
		constexpr auto GameplayAudioBusName = 0x98; // FName
		constexpr auto __EventInitialized__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UAkBank {
		constexpr auto AutoLoad = 0x60; // uint32_t : 1
		constexpr auto GenerateDefinition = 0x60; // uint32_t : 1
		constexpr auto LoadState = 0x64; // FBankLoadState
	}

	namespace n_USeqVar_Bool {
		constexpr auto bValue = 0xe0; // int32_t
	}

	namespace n_U__ServerPlayerTracker_X__AddPlayer_CA47728A46A8D61F977C6E922BFED42C {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_USeqVar_Character {
		constexpr auto PawnClass = 0x108; // FNone*
	}

	namespace n_UPlayerInput {
		constexpr auto bUsingGamepad = 0x1b0; // uint32_t : 1
		constexpr auto bInvertMouse = 0x1b0; // uint32_t : 1
		constexpr auto bInvertTurn = 0x1b0; // uint32_t : 1
		constexpr auto bWasForward = 0x1b0; // uint32_t : 1
		constexpr auto bWasBack = 0x1b0; // uint32_t : 1
		constexpr auto bWasLeft = 0x1b0; // uint32_t : 1
		constexpr auto bWasRight = 0x1b0; // uint32_t : 1
		constexpr auto bEdgeForward = 0x1b0; // uint32_t : 1
		constexpr auto bEdgeBack = 0x1b0; // uint32_t : 1
		constexpr auto bEdgeLeft = 0x1b0; // uint32_t : 1
		constexpr auto bEdgeRight = 0x1b0; // uint32_t : 1
		constexpr auto bEnableMouseSmoothing = 0x1b0; // uint32_t : 1
		constexpr auto bEnableFOVScaling = 0x1b0; // uint32_t : 1
		constexpr auto bLockTurnUntilRelease = 0x1b0; // uint32_t : 1
		constexpr auto LastAxisKeyName = 0x1b4; // FName
		constexpr auto DoubleClickTimer = 0x1bc; // float
		constexpr auto DoubleClickTime = 0x1c0; // float
		constexpr auto MouseSensitivity = 0x1c4; // float
		constexpr auto aBaseX = 0x1c8; // float
		constexpr auto aBaseY = 0x1cc; // float
		constexpr auto aBaseZ = 0x1d0; // float
		constexpr auto aMouseX = 0x1d4; // float
		constexpr auto aMouseY = 0x1d8; // float
		constexpr auto aForward = 0x1dc; // float
		constexpr auto aTurn = 0x1e0; // float
		constexpr auto aStrafe = 0x1e4; // float
		constexpr auto aUp = 0x1e8; // float
		constexpr auto aLookUp = 0x1ec; // float
		constexpr auto aRightAnalogTrigger = 0x1f0; // float
		constexpr auto aLeftAnalogTrigger = 0x1f4; // float
		constexpr auto aPS3AccelX = 0x1f8; // float
		constexpr auto aPS3AccelY = 0x1fc; // float
		constexpr auto aPS3AccelZ = 0x200; // float
		constexpr auto aPS3Gyro = 0x204; // float
		constexpr auto aWiiUPointerX = 0x208; // float
		constexpr auto aWiiUPointerY = 0x20c; // float
		constexpr auto aTilt = 0x210; // FVector
		constexpr auto aRotationRate = 0x21c; // FVector
		constexpr auto aGravity = 0x228; // FVector
		constexpr auto aAcceleration = 0x234; // FVector
		constexpr auto aTouch = 0x240; // FVector [0x5]
		constexpr auto aBackTouch = 0x27c; // FVector [0x5]
		constexpr auto RawJoyUp = 0x2b8; // float
		constexpr auto RawJoyRight = 0x2bc; // float
		constexpr auto RawJoyLookRight = 0x2c0; // float
		constexpr auto RawJoyLookUp = 0x2c4; // float
		constexpr auto MoveForwardSpeed = 0x2c8; // float
		constexpr auto MoveStrafeSpeed = 0x2cc; // float
		constexpr auto LookRightScale = 0x2d0; // float
		constexpr auto LookUpScale = 0x2d4; // float
		constexpr auto bStrafe = 0x2d8; // char
		constexpr auto bXAxis = 0x2d9; // char
		constexpr auto bYAxis = 0x2da; // char
		constexpr auto ZeroTime = 0x2dc; // float [0x2]
		constexpr auto SmoothedMouse = 0x2e4; // float [0x2]
		constexpr auto MouseSamples = 0x2ec; // int32_t
		constexpr auto MouseSamplingTotal = 0x2f0; // float
		constexpr auto AutoUnlockTurnTime = 0x2f4; // float
	}

	namespace n_U__GameShare_TA__NotifyCarPreviewActorAdded_4E5304244182ABE25852C4948AA84FA6 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UHttpFactory {
		constexpr auto HttpRequestClassName = 0x60; // FString
	}

	namespace n_UAssetAttribute_TeamEdition_TA {
		constexpr auto Template = 0x60; // TArray<ObjectProperty>
		constexpr auto TeamEditions = 0x70; // TArray<FTeamEditionOverrides>
		constexpr auto bAddAllAvailableTeams = 0x80; // uint32_t : 1
	}

	namespace n_UMatchInfoMessage_X {
		constexpr auto Playlist = 0x68; // int32_t
		constexpr auto bIsBotMatch = 0x6c; // uint32_t : 1
		constexpr auto BotNames = 0x70; // TArray<FString>
		constexpr auto ReservationID = 0x80; // FString
		constexpr auto JoinName = 0x90; // FString
		constexpr auto JoinPassword = 0xa0; // FString
	}

	namespace n_UGFxData_Workshop_TA {
		constexpr auto Items = 0x98; // TArray<FDownloadedWorkshopData>
		constexpr auto RetrievedNetIds = 0xa8; // TArray<FUniqueNetId>
		constexpr auto ItemRemoved = 0xb8; // FString
	}

	namespace n_UBlogTileConfig_X {
		constexpr auto LocalImage = 0x60; // ObjectProperty
		constexpr auto Title = 0x68; // FString
		constexpr auto DescriptionHeader = 0x78; // FString
		constexpr auto Description = 0x88; // FString
	}

	namespace n_UPartyPlatformSession_X {
		constexpr auto PartyID = 0x60; // FUniqueLobbyId
		constexpr auto __EventPartyIdChanged__Delegate = 0x70; // DelegateProperty
	}

	namespace n_USeqEvent_Spawned_X {
		constexpr auto Spawned = 0x180; // ObjectProperty
	}

	namespace n_UParticleModuleUberRainImpacts {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto StartRotation = 0xd0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xf8; // uint32_t : 1
		constexpr auto MultiplyX = 0xf8; // uint32_t : 1
		constexpr auto MultiplyY = 0xf8; // uint32_t : 1
		constexpr auto MultiplyZ = 0xf8; // uint32_t : 1
		constexpr auto bIsUsingCylinder = 0xf8; // uint32_t : 1
		constexpr auto bPositive_X = 0xf8; // uint32_t : 1
		constexpr auto bPositive_Y = 0xf8; // uint32_t : 1
		constexpr auto bPositive_Z = 0xf8; // uint32_t : 1
		constexpr auto bNegative_X = 0xf8; // uint32_t : 1
		constexpr auto bNegative_Y = 0xf8; // uint32_t : 1
		constexpr auto bNegative_Z = 0xf8; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xf8; // uint32_t : 1
		constexpr auto bVelocity = 0xf8; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xf8; // uint32_t : 1
		constexpr auto LifeMultiplier = 0x100; // FRawDistributionVector
		constexpr auto PC_VelocityScale = 0x128; // FRawDistributionFloat
		constexpr auto PC_StartLocation = 0x150; // FRawDistributionVector
		constexpr auto PC_StartRadius = 0x178; // FRawDistributionFloat
		constexpr auto PC_StartHeight = 0x1a0; // FRawDistributionFloat
		constexpr auto PC_HeightAxis = 0x1c8; // CylinderHeightAxis
		constexpr auto ColorOverLife = 0x1d0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x1f8; // FRawDistributionFloat
	}

	namespace n_AAkAmbientSound {
		constexpr auto bAutoPlay = 0x270; // uint32_t : 1
		constexpr auto StopWhenOwnerIsDestroyed = 0x270; // uint32_t : 1
		constexpr auto bIsPlaying = 0x270; // uint32_t : 1
		constexpr auto PlayEvent = 0x278; // ObjectProperty
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x60; // FVector
		constexpr auto Rotation = 0x6c; // FRotator
		constexpr auto HiddenLevels = 0x78; // TArray<FString>
	}

	namespace n_UOnlinePlayerInterfaceEOS {
		constexpr auto AuthHandle = 0x60; // FPointer
		constexpr auto FriendsHandle = 0x68; // FPointer
		constexpr auto UserInfoHandle = 0x70; // FPointer
		constexpr auto PresenceHandle = 0x78; // FPointer
		constexpr auto ConnectHandle = 0x80; // FPointer
		constexpr auto PDSHandle = 0x88; // FPointer
		constexpr auto EcomHandle = 0x90; // FPointer
		constexpr auto OwningSubsystem = 0x98; // ObjectProperty
		constexpr auto GameInterfaceEOS = 0xa0; // ObjectProperty
		constexpr auto PersistentAuthInterfaceEOS = 0xa8; // ObjectProperty
		constexpr auto VoiceInterfaceEOS = 0xb0; // ObjectProperty
		constexpr auto DefaultLocalUser = 0xb8; // int32_t
		constexpr auto ProfileDataDirectory = 0xc0; // FString
		constexpr auto ProfileDataExtension = 0xd0; // FString
		constexpr auto ReadProfileSettingsDelegates = 0xe0; // TArray<DelegateProperty>
		constexpr auto WriteProfileSettingsDelegates = 0xf0; // TArray<DelegateProperty>
		constexpr auto CachedProfile = 0x100; // ObjectProperty
		constexpr auto LastProfileSettings = 0x108; // TArray<FOnlineProfileSetting>
		constexpr auto ReadFriendsDelegates = 0x118; // TArray<DelegateProperty>
		constexpr auto FriendsReadState = 0x128; // EOnlineEnumerationReadState
		constexpr auto FriendsChangeDelegates = 0x130; // TArray<DelegateProperty>
		constexpr auto LoginFailedDelegates = 0x140; // TArray<DelegateProperty>
		constexpr auto LoginCancelledDelegates = 0x150; // TArray<DelegateProperty>
		constexpr auto LogoutCompletedDelegates = 0x160; // TArray<DelegateProperty>
		constexpr auto MutingChangeDelegates = 0x170; // TArray<DelegateProperty>
		constexpr auto StatusMappings = 0x180; // TArray<FOnlineStatusMappingEOS>
		constexpr auto DefaultStatus = 0x190; // FString
		constexpr auto ReceivedGameInviteDelegates = 0x1a0; // TArray<DelegateProperty>
		constexpr auto CachedFriendMessages = 0x1b0; // TArray<FOnlineFriendMessage>
		constexpr auto JoinFriendGameCompleteDelegates = 0x1c0; // TArray<DelegateProperty>
		constexpr auto AchievementDelegates = 0x1d0; // TArray<DelegateProperty>
		constexpr auto AchievementReadDelegates = 0x1e0; // TArray<DelegateProperty>
		constexpr auto AchievementsHandle = 0x1f0; // FPointer
		constexpr auto LoginChangeDelegates = 0x1f8; // TArray<DelegateProperty>
		constexpr auto ReceivedPinGrantDelegates = 0x208; // TArray<DelegateProperty>
		constexpr auto BlockListUpdatedDelegates = 0x218; // TArray<DelegateProperty>
		constexpr auto __OnLoginChange__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnLoginCancelled__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnMutingChange__Delegate = 0x258; // DelegateProperty
		constexpr auto __OnFriendsChange__Delegate = 0x270; // DelegateProperty
		constexpr auto __OnBlockListUpdated__Delegate = 0x288; // DelegateProperty
		constexpr auto __OnLoginFailed__Delegate = 0x2a0; // DelegateProperty
		constexpr auto __OnReceievedPinGrantCode__Delegate = 0x2b8; // DelegateProperty
		constexpr auto __OnLogoutCompleted__Delegate = 0x2d0; // DelegateProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x2e8; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x300; // DelegateProperty
		constexpr auto __OnReadFriendsComplete__Delegate = 0x318; // DelegateProperty
		constexpr auto __OnKeyboardInputComplete__Delegate = 0x330; // DelegateProperty
		constexpr auto __OnAddFriendComplete__Delegate = 0x348; // DelegateProperty
		constexpr auto __OnQueryUserByDisplayName__Delegate = 0x360; // DelegateProperty
		constexpr auto __OnAddFriendByNameComplete__Delegate = 0x378; // DelegateProperty
		constexpr auto __OnAcceptFriendInviteComplete__Delegate = 0x390; // DelegateProperty
		constexpr auto __OnDenyFriendInviteComplete__Delegate = 0x3a8; // DelegateProperty
		constexpr auto __OnRemoveFriendComplete__Delegate = 0x3c0; // DelegateProperty
		constexpr auto __OnFriendInviteReceived__Delegate = 0x3d8; // DelegateProperty
		constexpr auto __OnFriendInviteCanceled__Delegate = 0x3f0; // DelegateProperty
		constexpr auto __OnReceivedGameInvite__Delegate = 0x408; // DelegateProperty
		constexpr auto __OnJoinFriendGameComplete__Delegate = 0x420; // DelegateProperty
		constexpr auto __OnFriendMessageReceived__Delegate = 0x438; // DelegateProperty
		constexpr auto __OnRequestNativePlatformAuthTicketComplete__Delegate = 0x450; // DelegateProperty
		constexpr auto __OnReadPlayerStorageComplete__Delegate = 0x468; // DelegateProperty
		constexpr auto __OnReadPlayerStorageForNetIdComplete__Delegate = 0x480; // DelegateProperty
		constexpr auto __OnWritePlayerStorageComplete__Delegate = 0x498; // DelegateProperty
		constexpr auto __OnReadCrossTitleProfileSettingsComplete__Delegate = 0x4b0; // DelegateProperty
		constexpr auto __OnUserSignInComplete__Delegate = 0x4c8; // DelegateProperty
		constexpr auto __CanPlayOnlineChanged__Delegate = 0x4e0; // DelegateProperty
		constexpr auto __OnSaveDataNoSpaceDialogComplete__Delegate = 0x4f8; // DelegateProperty
		constexpr auto __OnRegisteredController__Delegate = 0x510; // DelegateProperty
		constexpr auto __OnUnregisteredController__Delegate = 0x528; // DelegateProperty
		constexpr auto __OnInputAPIChanged__Delegate = 0x540; // DelegateProperty
		constexpr auto __OnLoginStatusChange__Delegate = 0x558; // DelegateProperty
		constexpr auto __OnUserSwitchComplete__Delegate = 0x570; // DelegateProperty
		constexpr auto __OnDeviceSelectionComplete__Delegate = 0x588; // DelegateProperty
		constexpr auto __OnProfileDataChanged__Delegate = 0x5a0; // DelegateProperty
		constexpr auto __OnUnlockAchievementComplete__Delegate = 0x5b8; // DelegateProperty
		constexpr auto __OnReadAchievementsComplete__Delegate = 0x5d0; // DelegateProperty
		constexpr auto __OnAvatarChange__Delegate = 0x5e8; // DelegateProperty
		constexpr auto __FriendPresenceChange__Delegate = 0x600; // DelegateProperty
		constexpr auto __OnPlayerCountryRetrieved__Delegate = 0x618; // DelegateProperty
		constexpr auto __OnSanitizeStringComplete__Delegate = 0x630; // DelegateProperty
		constexpr auto __EpicIDToPlatformIDCallback__Delegate = 0x648; // DelegateProperty
	}

	namespace n_URetryPolicy_X {
		constexpr auto Errors = 0x60; // TArray<FName>
		constexpr auto RetryDelay = 0x70; // FName
		constexpr auto Services = 0x78; // TArray<FString>
	}

	namespace n_UCoverSlipReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FFloatMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_UForceFieldShapeSphere {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UGameModeList_TA {
		constexpr auto GameModes = 0x60; // TArray<ObjectProperty>
	}

	namespace n_ULoadoutSet_TA {
		constexpr auto LoadoutSetName = 0x60; // FString
		constexpr auto Loadouts = 0x70; // ObjectProperty [0x2]
		constexpr auto __EventChanged__Delegate = 0x80; // DelegateProperty
		constexpr auto __EventProductEquipped__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventOnlineProductEquipped__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_URPC_TrainingEditor_AddTrainingData_TA {
		constexpr auto TrainingData = 0xe8; // ObjectProperty
		constexpr auto Code = 0xf0; // FString
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_UOnlineGameVoice_X {
		constexpr auto __EventPlayerTalking__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UGFxData_PlayerAvatar_TA {
		constexpr auto PlayerAvatar = 0x98; // ComponentProperty
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_UOnlineGameParty_TA {
		constexpr auto PartyLoadouts = 0x560; // TArray<FPartyMemberLoadout>
		constexpr auto MaxPartyMessages = 0x570; // int32_t
		constexpr auto PlayerJoinPartyString = 0x578; // FString
		constexpr auto PlayerLeavePartyString = 0x588; // FString
		constexpr auto LocalPlayerLeavePartyString = 0x598; // FString
		constexpr auto PlayerNewLeaderPartyString = 0x5a8; // FString
		constexpr auto AssetCache = 0x5b8; // ComponentProperty
		constexpr auto PendingLocalProductOffers = 0x5c0; // TArray<FProductInstanceID>
		constexpr auto PendingArchivedProductOffers = 0x5d0; // TArray<FProductHashID>
		constexpr auto PendingFavoritedProductOffers = 0x5e0; // TArray<FProductHashID>
		constexpr auto ProductsToVerify = 0x5f0; // TArray<FProductInstanceID>
		constexpr auto VerifyProductsDelay = 0x600; // float
		constexpr auto RemovedProductsDuringVerify = 0x608; // TArray<FProductInstanceID>
		constexpr auto bIsVerifyingProducts = 0x618; // uint32_t : 1
		constexpr auto PendingTradeId = 0x61c; // FGuid
		constexpr auto __EventPartyMemberLoadoutChange__Delegate = 0x630; // DelegateProperty
		constexpr auto __EventPartyMemberProfileChanged__Delegate = 0x648; // DelegateProperty
		constexpr auto __EventPartyMemberLoadoutRemoved__Delegate = 0x660; // DelegateProperty
		constexpr auto __EventTradeProductUpdate__Delegate = 0x678; // DelegateProperty
		constexpr auto __EventTradeCurrencyUpdate__Delegate = 0x690; // DelegateProperty
		constexpr auto __EventTradeVerify__Delegate = 0x6a8; // DelegateProperty
		constexpr auto __EventTradeVerifyTimeOut__Delegate = 0x6c0; // DelegateProperty
		constexpr auto __EventTradePlayerError__Delegate = 0x6d8; // DelegateProperty
		constexpr auto __EventTradePlayerStart__Delegate = 0x6f0; // DelegateProperty
		constexpr auto __EventTradePlayerComplete__Delegate = 0x708; // DelegateProperty
		constexpr auto __EventPartyMemberLeftMatch__Delegate = 0x720; // DelegateProperty
	}

	namespace n_UIdenticalProductCache_TA {
		constexpr auto Products = 0x70; // FMap_Mirror
	}

	namespace n_UGFxData_TourConfig_TA {
		constexpr auto Config = 0x98; // ObjectProperty
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto AnimSets = 0xe8; // TArray<ObjectProperty>
		constexpr auto SlotName = 0xf8; // FName
		constexpr auto AnimSeqs = 0x100; // TArray<FAnimControlTrackKey>
		constexpr auto bEnableRootMotion = 0x110; // uint32_t : 1
		constexpr auto bSkipAnimNotifiers = 0x110; // uint32_t : 1
	}

	namespace n_U__MapsConfig_TA__GetMapFrequencyForSet_69E6DFFF46EDEE4F65773D8635A39017 {
		constexpr auto MapName = 0x60; // FName
	}

	namespace n_UAttachmentAnim_TA {
		constexpr auto AnimSet = 0x78; // ObjectProperty
		constexpr auto AnimName = 0x80; // FName
	}

	namespace n_U__GFxData_TourCheckIn_TA__Register_979C93154FA7EA5A13BE6F85387042C7 {
		constexpr auto Settings = 0x60; // ObjectProperty
		constexpr auto Credentials = 0x68; // FTourPrivateCredentials
	}

	namespace n_UBTC_GameInfoType {
		constexpr auto ValidGameInfoClasses = 0x90; // TArray<FNone*>
		constexpr auto CurrentGameInfo = 0xa0; // ObjectProperty
	}

	namespace n_UGFxData_Training_TA {
		constexpr auto TrainingType = 0x98; // FName
		constexpr auto CurrentScore = 0xa0; // int32_t
		constexpr auto CurrentRound = 0xa4; // int32_t
		constexpr auto TotalRounds = 0xa8; // int32_t
		constexpr auto Difficulty = 0xb0; // FString
		constexpr auto SelectedFreeplayMap = 0xc0; // FName
		constexpr auto bPerfectRound = 0xc8; // uint32_t : 1
		constexpr auto bShowBoostMeter = 0xc8; // uint32_t : 1
		constexpr auto UseActions = 0xd0; // TArray<FUseAction>
		constexpr auto TutorialTip = 0xe0; // FString
	}

	namespace n_U__GFxData_Party_TA__OnPlayerInvited_3F9C5E9A42C7A6DF828A9C8C87ED8324 {
		constexpr auto Party = 0x60; // ObjectProperty
		constexpr auto PartyID = 0x68; // FUniqueLobbyId
		constexpr auto InviterId = 0x78; // FUniqueNetId
		constexpr auto JoinPartyCallback = 0xc0; // DelegateProperty
	}

	namespace n_UCameraState_ReplaySoftAttach_TA {
		constexpr auto AttachRotation = 0xb8; // FRotator
		constexpr auto AttachOffset = 0xc4; // FVector
		constexpr auto MaxDistance = 0xd0; // float
	}

	namespace n_ABall_Haunted_TA {
		constexpr auto SeekPositionRangeLength = 0xa40; // FVector2D
		constexpr auto SeekPositionRangeWidth = 0xa48; // FVector2D
		constexpr auto SeekPositionRangeHeight = 0xa50; // FVector2D
		constexpr auto NextSeekTimeRange = 0xa58; // FVector2D
		constexpr auto TrappedHoverHeight = 0xa60; // float
		constexpr auto HorizontalSpeed = 0xa64; // float
		constexpr auto VerticalSpeed = 0xa68; // float
		constexpr auto ArrivalDistance = 0xa6c; // float
		constexpr auto TrappedHorizontalSpeed = 0xa70; // float
		constexpr auto TrappedVerticalSpeed = 0xa74; // float
		constexpr auto TrappedCaptureTime = 0xa78; // float
		constexpr auto HitPhysicsDuration = 0xa7c; // float
		constexpr auto ReplicatedBeamBrokenValue = 0xa80; // char
		constexpr auto LastTeamTouch = 0xa81; // char
		constexpr auto DeactivatedGoalIndex = 0xa82; // char
		constexpr auto TotalActiveBeams = 0xa83; // char
		constexpr auto SeekTarget = 0xa84; // FVector
		constexpr auto NextNeutralTime = 0xa90; // float
		constexpr auto bHitPhysicsActive = 0xa94; // uint32_t : 1
		constexpr auto bIsBallBeamed = 0xa94; // uint32_t : 1
		constexpr auto bIsTrapped = 0xa94; // uint32_t : 1
		constexpr auto CurrentCaptureTime = 0xa98; // float
		constexpr auto CaptureTimePercentage = 0xa9c; // float
		constexpr auto CaptureTimeAtExit = 0xaa0; // float
		constexpr auto ActiveGoal = 0xaa8; // ComponentProperty
		constexpr auto NumActiveBeamsByTeam = 0xab0; // int32_t [0x2]
		constexpr auto __EventLastTeamTouchChanged__Delegate = 0xab8; // DelegateProperty
		constexpr auto __EventIsTrapped__Delegate = 0xad0; // DelegateProperty
		constexpr auto __EventBeamIsBroken__Delegate = 0xae8; // DelegateProperty
		constexpr auto __ReplicatedBeamBrokenValue__ChangeNotify = 0xb00; // DelegateProperty
		constexpr auto __LastTeamTouch__ChangeNotify = 0xb18; // DelegateProperty
		constexpr auto __DeactivatedGoalIndex__ChangeNotify = 0xb30; // DelegateProperty
	}

	namespace n_UGFxData_Garage_TA {
		constexpr auto LoadoutSlots = 0x98; // TArray<ObjectProperty>
		constexpr auto PreviewActor = 0xa8; // ObjectProperty
		constexpr auto GarageProductSlots = 0xb0; // TArray<ObjectProperty>
		constexpr auto Teams = 0xc0; // TArray<FGarageTeam>
		constexpr auto PaintFinishSlotIndex = 0xd0; // int32_t
		constexpr auto PreviewTeam = 0xd4; // int32_t
		constexpr auto CustomColors = 0xd8; // TArray<FGFxTeamColor>
		constexpr auto Team0Colors = 0xe8; // TArray<FGFxTeamColor>
		constexpr auto Team1Colors = 0xf8; // TArray<FGFxTeamColor>
		constexpr auto bTeam0FinishDisabled = 0x108; // uint32_t : 1
		constexpr auto bTeam1FinishDisabled = 0x108; // uint32_t : 1
		constexpr auto bCustom0FinishDisabled = 0x108; // uint32_t : 1
		constexpr auto bCustom1FinishDisabled = 0x108; // uint32_t : 1
		constexpr auto bTeam0ColorForced = 0x108; // uint32_t : 1
		constexpr auto bTeam1ColorForced = 0x108; // uint32_t : 1
		constexpr auto bCustom0ColorForced = 0x108; // uint32_t : 1
		constexpr auto bCustom1ColorForced = 0x108; // uint32_t : 1
		constexpr auto ForcedTeam0FinishName = 0x110; // FString
		constexpr auto ForcedTeam1FinishName = 0x120; // FString
		constexpr auto ForcedTeam0Color = 0x130; // int32_t
		constexpr auto ForcedTeam1Color = 0x134; // int32_t
		constexpr auto ForcedCustom0Color = 0x138; // int32_t
		constexpr auto ForcedCustom1Color = 0x13c; // int32_t
		constexpr auto Profile = 0x140; // ObjectProperty
		constexpr auto Loadouts = 0x148; // FLoadoutData [0x2]
		constexpr auto LastNonLicensedLoadout = 0x1c8; // FLoadoutData [0x2]
		constexpr auto LoadoutSet = 0x248; // ObjectProperty
		constexpr auto CarPreviewSet = 0x250; // ObjectProperty
		constexpr auto ExplosionPreview = 0x258; // ComponentProperty
		constexpr auto GoalExplosionSeqName = 0x260; // FName
		constexpr auto __PreviewTeamAction__Delegate = 0x268; // DelegateProperty
	}

	namespace n_UGFxData_TradeInFilter_TA {
		constexpr auto Id = 0x98; // int32_t
		constexpr auto Label = 0xa0; // FString
		constexpr auto PossibleTradeIns = 0xb0; // TArray<ObjectProperty>
		constexpr auto TradeInFilter = 0xc0; // FProductTradeInFilter
		constexpr auto SaveData = 0x100; // ObjectProperty
	}

	namespace n_AVehicle_TA {
		constexpr auto CarMesh = 0x7a8; // ComponentProperty
		constexpr auto VehicleSim = 0x7b0; // ComponentProperty
		constexpr auto StickyForce = 0x7b8; // FStickyForceData
		constexpr auto AutoFlip = 0x7c0; // FAutoFlipData
		constexpr auto bDriving = 0x7c8; // uint32_t : 1
		constexpr auto bReplicatedHandbrake = 0x7c8; // uint32_t : 1
		constexpr auto bJumped = 0x7c8; // uint32_t : 1
		constexpr auto bDoubleJumped = 0x7c8; // uint32_t : 1
		constexpr auto bOnGround = 0x7c8; // uint32_t : 1
		constexpr auto bSuperSonic = 0x7c8; // uint32_t : 1
		constexpr auto bPodiumMode = 0x7c8; // uint32_t : 1
		constexpr auto Input = 0x7cc; // FVehicleInputs
		constexpr auto ReplicatedThrottle = 0x7ec; // char
		constexpr auto ReplicatedSteer = 0x7ed; // char
		constexpr auto AIController = 0x7f0; // ObjectProperty
		constexpr auto PlayerController = 0x7f8; // ObjectProperty
		constexpr auto PRI = 0x800; // ObjectProperty
		constexpr auto VehicleUpdateTag = 0x808; // int32_t
		constexpr auto CarInteraction = 0x810; // FCarInteractionData
		constexpr auto LocalCollisionOffset = 0x820; // FVector
		constexpr auto LocalCollisionExtent = 0x82c; // FVector
		constexpr auto LastBallTouchFrame = 0x838; // int32_t
		constexpr auto LastBallImpactFrame = 0x83c; // int32_t
		constexpr auto BoostComponent = 0x840; // ObjectProperty
		constexpr auto DodgeComponent = 0x848; // ObjectProperty
		constexpr auto AirControlComponent = 0x850; // ObjectProperty
		constexpr auto JumpComponent = 0x858; // ObjectProperty
		constexpr auto DoubleJumpComponent = 0x860; // ObjectProperty
		constexpr auto PitchTekComponent = 0x868; // ComponentProperty
		constexpr auto LocalPlayerAudioParamsComponent = 0x870; // ComponentProperty
		constexpr auto TimeBelowSupersonicSpeed = 0x878; // float
		constexpr auto NetworkConfig = 0x880; // ObjectProperty
		constexpr auto __EventPRIChanged__Delegate = 0x888; // DelegateProperty
	}

	namespace n_UTrainingEditorData_TA {
		constexpr auto TM_Guid = 0x60; // FGuid
		constexpr auto Code = 0x70; // FString
		constexpr auto TM_Name = 0x80; // FString
		constexpr auto Type = 0x90; // ETrainingType
		constexpr auto Difficulty = 0x91; // EDifficulty
		constexpr auto CreatorName = 0x98; // FString
		constexpr auto Description = 0xa8; // FString
		constexpr auto Tags = 0xb8; // TArray<int32_t>
		constexpr auto MapName = 0xc8; // FName
		constexpr auto NumRounds = 0xd0; // int32_t
		constexpr auto CreatedAt = 0xd8; // QWordProperty
		constexpr auto UpdatedAt = 0xe0; // QWordProperty
		constexpr auto CreatorPlayerID = 0xe8; // FUniqueNetId
		constexpr auto Rounds = 0x130; // TArray<FEditorRoundData>
	}

	namespace n_USeqEvent_ScoreChanged_TA {
		constexpr auto BlueScore = 0x180; // int32_t
		constexpr auto RedScore = 0x184; // int32_t
	}

	namespace n_UMcpGroupsManager {
		constexpr auto CreateGroupUrl = 0x170; // FString
		constexpr auto DeleteGroupUrl = 0x180; // FString
		constexpr auto QueryGroupsUrl = 0x190; // FString
		constexpr auto QueryGroupMembersUrl = 0x1a0; // FString
		constexpr auto AddGroupMembersUrl = 0x1b0; // FString
		constexpr auto RemoveGroupMembersUrl = 0x1c0; // FString
		constexpr auto DeleteAllGroupsUrl = 0x1d0; // FString
		constexpr auto AcceptGroupInviteUrl = 0x1e0; // FString
		constexpr auto RejectGroupInviteUrl = 0x1f0; // FString
		constexpr auto __OnQueryGroupsRequestComplete__Delegate = 0x200; // DelegateProperty
		constexpr auto __OnQueryGroupMembersRequestComplete__Delegate = 0x218; // DelegateProperty
		constexpr auto __OnAddGroupMembersRequestComplete__Delegate = 0x230; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteRequestComplete__Delegate = 0x248; // DelegateProperty
	}

	namespace n_USuperRegion_X {
		constexpr auto Id = 0x60; // FString
		constexpr auto Label = 0x70; // FString
	}

	namespace n_U__EpicAccountSave_TA__GetConvertPlatformFriends_CF454FDF44EA21D88F252C9FC94BB239 {
		constexpr auto OSS = 0x60; // ObjectProperty
	}

	namespace n_UPsyNetService_FaceItMatchCancelled_TA {
		constexpr auto MatchID = 0x90; // int32_t
	}

	namespace n_U__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_1EF2F4EF4CC3D9E987B0248BD3548A66 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UOnlinePlayer_TA {
		constexpr auto AchievementManagerArchetype = 0x258; // ObjectProperty
		constexpr auto AchievementManager = 0x260; // ObjectProperty
		constexpr auto NotificationManager = 0x268; // ObjectProperty
		constexpr auto PlayerProgressionManager = 0x270; // ObjectProperty
		constexpr auto PlayerProgressionManagerArchetype = 0x278; // ObjectProperty
		constexpr auto FirstTimeManagerArchetype = 0x280; // ObjectProperty
		constexpr auto FTEManager = 0x288; // ObjectProperty
		constexpr auto TriggerManager = 0x290; // ObjectProperty
		constexpr auto EOSMetricHeartbeat = 0x298; // ObjectProperty
		constexpr auto CrumbTrailArchetype = 0x2a0; // ObjectProperty
		constexpr auto CrumbsMgr = 0x2a8; // ObjectProperty
		constexpr auto ChallengeManager = 0x2b0; // ObjectProperty
		constexpr auto WalletArchetype = 0x2b8; // ObjectProperty
		constexpr auto WalletCNArchetype = 0x2c0; // ObjectProperty
		constexpr auto Wallet = 0x2c8; // ObjectProperty
		constexpr auto ShopsManagerArchetype = 0x2d0; // ObjectProperty
		constexpr auto ShopsManager = 0x2d8; // ObjectProperty
		constexpr auto ChatHistory = 0x2e0; // ObjectProperty
		constexpr auto MTX = 0x2e8; // ObjectProperty
		constexpr auto RewardDrops = 0x2f0; // ComponentProperty
		constexpr auto AccountSettings = 0x2f8; // ComponentProperty
		constexpr auto StayAsPartyLeaderID = 0x300; // FUniqueNetId
		constexpr auto EOSPermissions = 0x348; // ObjectProperty
	}

	namespace n_UPartyMessage_TradeProductUpdate_TA {
		constexpr auto TradingMemberId = 0xa8; // FUniqueNetId
		constexpr auto ProductData = 0xf0; // FOnlineProductData
		constexpr auto bAddProduct = 0x130; // uint32_t : 1
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x158; // float
		constexpr auto Channel = 0x15c; // ETextureColorChannel
	}

	namespace n_U__GameEventProductAssetCache_TA__HandlePlayerRemoved_122F9DF34B3FCDF56067568BA5FB545B {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_U__OnlineGameParty_X__CreatePartyInternal_42615F2E4CC53F163A79BB827669D183 {
		constexpr auto LobbyInterface = 0x60; // TScriptInterface<Class>
		constexpr auto LocalPlayerNum = 0x70; // int32_t
		constexpr auto Handler = 0x78; // DelegateProperty
	}

	namespace n_UOnlineAuthInterfaceEOS {
		constexpr auto PlayerInterfaceEOS = 0x3c8; // ObjectProperty
	}

	namespace n_UPsyNetBeaconConnection_X {
		constexpr auto VfTable_IIReservationConnection_X = 0x60; // FPointer
		constexpr auto ReservationID = 0x68; // FString
		constexpr auto ConnectionID = 0x78; // FString
		constexpr auto TimeoutTime = 0x88; // float
	}

	namespace n_U__GameInfo_Soccar_TA__QueueShutdown_9A685E61426EBD2C24181DAFF6B45092 {
		constexpr auto DedicatedServer = 0x60; // ObjectProperty
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x70; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UMeshComponentFactory {
		constexpr auto Materials = 0x68; // TArray<ObjectProperty>
	}

	namespace n_USeqEvent_AnalogInput {
		constexpr auto bTrapInput = 0x180; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x184; // int32_t
		constexpr auto InputNames = 0x188; // TArray<FName>
	}

	namespace n_UGFxData_ProductAttribute_TA {
		constexpr auto AttributeClass = 0x98; // FNone*
		constexpr auto AttributeProvider = 0xa0; // TScriptInterface<Class>
	}

	namespace n_U__GFxData_Clubs_TA__SetClubInvites_D52CE9E9435908906EF7E591EF2CE653 {
		constexpr auto ClubInvite = 0x60; // ObjectProperty
	}

	namespace n_U__ShopsService_PsyNet_TA__GetShopCatalogue_ABBC79514300B39B84A138A1829F312F {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto FailedCallback = 0x78; // DelegateProperty
	}

	namespace n_UProductOverride_ParticleSystemVectorParameter_TA {
		constexpr auto VectorParameter = 0x60; // FVectorParamPair
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0xc0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xc0; // uint32_t : 1
		constexpr auto A = 0xc8; // FExpressionInput
		constexpr auto B = 0x100; // FExpressionInput
		constexpr auto Value = 0x138; // FExpressionInput
	}

	namespace n_UPath_TowardGoal {
		constexpr auto GoalActor = 0x70; // ObjectProperty
	}

	namespace n_U__OnlineGameSkill_X__ClearPartyMembersSkill_ADB235C94D7C3D7AE28FCABC936BB22A {
		constexpr auto PrimaryPlayerId = 0x60; // FUniqueNetId
	}

	namespace n_UPsyTagComponent_X {
		constexpr auto PsyTag = 0x70; // FPsyTag
	}

	namespace n_UBTDeco_RandomSteer {
		constexpr auto MinDuration = 0x88; // float
		constexpr auto MaxDuration = 0x8c; // float
		constexpr auto TimeRemaining = 0x90; // float
		constexpr auto ExtraSteer = 0x94; // float
	}

	namespace n_AKActorSpawnable {
		constexpr auto bRecycleScaleToZero = 0x3b8; // uint32_t : 1
		constexpr auto bScalingToZero = 0x3b8; // uint32_t : 1
	}

	namespace n_USwatTurnReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UPerConMetrics_X {
		constexpr auto StartConnectFailCount = 0x80; // int32_t
		constexpr auto ConnectFailCount = 0x84; // int32_t
		constexpr auto DisconnectCount = 0x88; // int32_t
		constexpr auto RPCErrorCount = 0x8c; // int32_t
		constexpr auto InvalidMessageCount = 0x90; // int32_t
		constexpr auto bConnected = 0x94; // uint32_t : 1
		constexpr auto StartTime = 0x98; // float
	}

	namespace n_USeqAct_AkPlaySound {
		constexpr auto SoundCue = 0x160; // ObjectProperty
		constexpr auto bBGMusic = 0x168; // uint32_t : 1
	}

	namespace n_USceneCaptureComponent {
		constexpr auto MaxCaptureTime = 0xa0; // float
		constexpr auto CaptureTimeRemaining = 0xa4; // float
		constexpr auto bEnabled = 0xa8; // uint32_t : 1
		constexpr auto bEnablePostProcess = 0xa8; // uint32_t : 1
		constexpr auto bEnableFog = 0xa8; // uint32_t : 1
		constexpr auto bUseMainScenePostProcessSettings = 0xa8; // uint32_t : 1
		constexpr auto bSkipUpdateIfTextureUsersOccluded = 0xa8; // uint32_t : 1
		constexpr auto bSkipUpdateIfOwnerOccluded = 0xa8; // uint32_t : 1
		constexpr auto bSkipRenderingDepthPrepass = 0xa8; // uint32_t : 1
		constexpr auto ClearColor = 0xac; // FColor
		constexpr auto ViewMode = 0xb0; // ESceneCaptureViewMode
		constexpr auto PostMethod = 0xb1; // ESceneCapturePostMethod
		constexpr auto SceneLOD = 0xb4; // int32_t
		constexpr auto CubemapDesaturationAmount = 0xb8; // int32_t
		constexpr auto FrameRate = 0xbc; // float
		constexpr auto PostProcess = 0xc0; // ObjectProperty
		constexpr auto MaxUpdateDist = 0xc8; // float
		constexpr auto MaxViewDistanceOverride = 0xcc; // float
		constexpr auto MaxStreamingUpdateDist = 0xd0; // float
		constexpr auto CaptureInfo = 0xd8; // FPointer
		constexpr auto ViewState = 0xe0; // FPointer
		constexpr auto PostProcessProxies = 0xe8; // TArray<FPointer>
	}

	namespace n_UAnimNodeCrossfader {
		constexpr auto DefaultAnimSeqName = 0x158; // FName
		constexpr auto bDontBlendOutOneShot = 0x160; // uint32_t : 1
		constexpr auto PendingBlendOutTimeOneShot = 0x164; // float
	}

	namespace n_UCertifiedStatDatabase_TA {
		constexpr auto Stats = 0x60; // TArray<ObjectProperty>
		constexpr auto StatNameToStatID = 0x70; // FMap_Mirror
		constexpr auto bClickToRebuild = 0xc0; // uint32_t : 1
	}

	namespace n_UNameplateMeshComponent_TA {
		constexpr auto DistanceScaleCurve = 0x310; // FInterpCurveFloat
		constexpr auto FOVScaleCurve = 0x328; // FInterpCurveFloat
		constexpr auto PlayerOptionsScale = 0x340; // float
	}

	namespace n_U__ChallengeManager_TA__BroadcastChallengeChanges_3D9E15814E9E28EF2E5AB9A3313C04BE {
		constexpr auto NotificationTitle = 0x60; // FString
		constexpr auto NotificationBody = 0x70; // FString
	}

	namespace n_UEncodeObject_X {
		constexpr auto Encoding = 0x60; // EObjectEncoding
		constexpr auto Checksum = 0x64; // int32_t
		constexpr auto Encoded = 0x68; // FString
	}

	namespace n_U__GFxProductAttributeMap_TA__MapAttribute_8839992044911B095F8CED86E4506218 {
		constexpr auto AttributeClass = 0x60; // FNone*
	}

	namespace n_UProductThumbnailQueue_TA {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto ThumbnailSizes = 0x68; // TArray<int32_t>
		constexpr auto RenderDelay = 0x78; // float
		constexpr auto RenderCountMax = 0x7c; // int32_t
		constexpr auto bDebug = 0x80; // uint32_t : 1
		constexpr auto bCreatedThumbnailScene = 0x80; // uint32_t : 1
		constexpr auto SceneQue = 0x88; // TArray<FRenderThumbnailScene>
		constexpr auto Requests = 0x98; // TArray<FRenderThumbnailRequest>
		constexpr auto ThumbnailsCreatedSinceLastPurge = 0xa8; // int32_t
	}

	namespace n_UChallengeRequirement_TA {
		constexpr auto DisplayName = 0x80; // FString
		constexpr auto RequiredCount = 0x90; // int32_t
		constexpr auto ProgressCount = 0x94; // int32_t
		constexpr auto ProgressChange = 0x98; // int32_t
	}

	namespace n_UGFxData_ProductAttribute_Level_TA {
		constexpr auto bProductUpgradable = 0xb0; // uint32_t : 1
	}

	namespace n_U__GFxData_Clubs_TA__RemoveFromClub_A619C379448C4DB4F0D2FC837E785F0A {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0xa0; // ObjectProperty
		constexpr auto Target = 0xa8; // FCameraPreviewInfo
		constexpr auto CompressTolerance = 0xe8; // float
	}

	namespace n_USlotToSlotReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_URPC_Challenge_TrainingComplete_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TrainingType = 0x130; // FString
		constexpr auto Difficulty = 0x140; // FString
		constexpr auto Score = 0x150; // int32_t
		constexpr auto TotalRounds = 0x154; // int32_t
	}

	namespace n_UMatchType_Custom_TA {
		constexpr auto bOnePlayerSelectedTeam = 0xa0; // uint32_t : 1
		constexpr auto LargestMaxTeamSize = 0xa4; // int32_t
	}

	namespace n_APawn_X {
		constexpr auto GravityScale = 0x518; // float
		constexpr auto PreviousController = 0x520; // ObjectProperty
		constexpr auto __EventDestroyed__Delegate = 0x528; // DelegateProperty
		constexpr auto __EventAnimEnd__Delegate = 0x540; // DelegateProperty
	}

	namespace n_ASceneCaptureReflectActor {
		constexpr auto StaticMesh = 0x270; // ComponentProperty
		constexpr auto ReflectMaterialInst = 0x278; // ObjectProperty
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bDamageAppliesImpulse = 0x268; // uint32_t : 1
		constexpr auto bShouldDoAnimNotifies = 0x268; // uint32_t : 1
		constexpr auto bForceSaveInCheckpoint = 0x268; // uint32_t : 1
		constexpr auto bCollideActors_OldValue = 0x268; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x268; // uint32_t : 1
		constexpr auto SkeletalMeshComponent = 0x270; // ComponentProperty
		constexpr auto LightEnvironment = 0x278; // ComponentProperty
		constexpr auto FacialAudioComp = 0x280; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x288; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x290; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x298; // ObjectProperty
		constexpr auto ControlTargets = 0x2a0; // TArray<FSkelMeshActorControlTarget>
		constexpr auto InterpGroupList = 0x2b0; // TArray<ObjectProperty>
		constexpr auto SavedAnimSeqName = 0x2c0; // FName
		constexpr auto SavedCurrentTime = 0x2c8; // float
	}

	namespace n_UGFxData_PsyTag_TA {
		constexpr auto PsyTagName = 0x98; // FString
		constexpr auto PsyTagCode = 0xa8; // int32_t
		constexpr auto SearchRPC = 0xb0; // ObjectProperty
		constexpr auto bSearching = 0xb8; // uint32_t : 1
		constexpr auto bShowPsyTags = 0xb8; // uint32_t : 1
		constexpr auto SearchPage = 0xbc; // int32_t
		constexpr auto SearchName = 0xc0; // FString
		constexpr auto SearchCode = 0xd0; // int32_t
		constexpr auto PlayerAuth = 0xd8; // ObjectProperty
		constexpr auto SearchResults = 0xe0; // TArray<FGFxPsyTagSearchResult>
	}

	namespace n_URPC_GetPlayerPermissions_X {
		constexpr auto PlayerIDs = 0xe8; // TArray<FUniqueNetId>
		constexpr auto PlayerPermissions = 0xf8; // TArray<FPlayerPermissionsReponse>
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x70; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x98; // uint32_t : 1
		constexpr auto UpdateMethod = 0x9c; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_USkelControlLookAt {
		constexpr auto TargetLocation = 0x100; // FVector
		constexpr auto TargetLocationSpace = 0x10c; // EBoneControlSpace
		constexpr auto LookAtAxis = 0x10d; // EAxis
		constexpr auto UpAxis = 0x10e; // EAxis
		constexpr auto AllowRotationSpace = 0x10f; // EBoneControlSpace
		constexpr auto TargetSpaceBoneName = 0x110; // FName
		constexpr auto bInvertLookAtAxis = 0x118; // uint32_t : 1
		constexpr auto bDefineUpAxis = 0x118; // uint32_t : 1
		constexpr auto bInvertUpAxis = 0x118; // uint32_t : 1
		constexpr auto bEnableLimit = 0x118; // uint32_t : 1
		constexpr auto bLimitBasedOnRefPose = 0x118; // uint32_t : 1
		constexpr auto bDisableBeyondLimit = 0x118; // uint32_t : 1
		constexpr auto bNotifyBeyondLimit = 0x118; // uint32_t : 1
		constexpr auto bShowLimit = 0x118; // uint32_t : 1
		constexpr auto bAllowRotationX = 0x118; // uint32_t : 1
		constexpr auto bAllowRotationY = 0x118; // uint32_t : 1
		constexpr auto bAllowRotationZ = 0x118; // uint32_t : 1
		constexpr auto TargetLocationInterpSpeed = 0x11c; // float
		constexpr auto DesiredTargetLocation = 0x120; // FVector
		constexpr auto ActorSpaceLookAtTarget = 0x12c; // FVector
		constexpr auto MaxAngle = 0x138; // float
		constexpr auto OuterMaxAngle = 0x13c; // float
		constexpr auto DeadZoneAngle = 0x140; // float
		constexpr auto RotationAngleRangeX = 0x144; // FVector2D
		constexpr auto RotationAngleRangeY = 0x14c; // FVector2D
		constexpr auto RotationAngleRangeZ = 0x154; // FVector2D
		constexpr auto AllowRotationOtherBoneName = 0x15c; // FName
		constexpr auto LookAtAlpha = 0x164; // float
		constexpr auto LookAtAlphaTarget = 0x168; // float
		constexpr auto LookAtAlphaBlendTimeToGo = 0x16c; // float
		constexpr auto LimitLookDir = 0x170; // FVector
		constexpr auto BaseLookDir = 0x17c; // FVector
		constexpr auto BaseBonePos = 0x188; // FVector
		constexpr auto LastCalcTime = 0x194; // float
		constexpr auto ControlBoneIndex = 0x198; // int32_t
	}

	namespace n_UClanforgeReservation_X {
		constexpr auto ReserveURLs = 0x60; // FString [0x3]
		constexpr auto ReserveState = 0x90; // EReserveState
		constexpr auto RetryDelays = 0x98; // TArray<float>
		constexpr auto SendFailures = 0xa8; // int32_t
		constexpr auto QueuedRequests = 0xb0; // TArray<ObjectProperty>
		constexpr auto PendingRequest = 0xc0; // ObjectProperty
	}

	namespace n_APortalVolume {
		constexpr auto Portals = 0x2a8; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto Materials = 0xe8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xf8; // ObjectProperty
		constexpr auto ParamName = 0x100; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0x108; // uint32_t : 1
	}

	namespace n_UBugMetrics_X {
		constexpr auto ReportedIDs = 0x80; // TArray<FName>
	}

	namespace n_UMaterialExpressionGameObjectParameter {
		constexpr auto GameObjectShaderParamType = 0xc0; // EGameObjectShaderParameterType
	}

	namespace n_UPBRuleNodeBase {
		constexpr auto NextRules = 0x60; // TArray<FPBRuleLink>
		constexpr auto Comment = 0x70; // FString
		constexpr auto RulePosX = 0x80; // int32_t
		constexpr auto RulePosY = 0x84; // int32_t
		constexpr auto InDrawY = 0x88; // int32_t
		constexpr auto DrawWidth = 0x8c; // int32_t
		constexpr auto DrawHeight = 0x90; // int32_t
	}

	namespace n_UMaterialExpressionTerrainLayerCoords {
		constexpr auto MappingType = 0xc0; // ETerrainCoordMappingType
		constexpr auto MappingScale = 0xc4; // float
		constexpr auto MappingRotation = 0xc8; // float
		constexpr auto MappingPanU = 0xcc; // float
		constexpr auto MappingPanV = 0xd0; // float
	}

	namespace n_UMatchmakingMetrics_X {
		constexpr auto StartTime = 0x80; // float
		constexpr auto MMGuid = 0x84; // FGuid
	}

	namespace n_UAudioPriorityComponent_TA {
		constexpr auto CarDistanceCurve = 0xa8; // FInterpCurveFloat
		constexpr auto BallDistanceCurve = 0xc0; // FInterpCurveFloat
		constexpr auto DrivingAtListenerDotThreshold = 0xd8; // float
		constexpr auto DrivingAtPlayerBonus = 0xdc; // int32_t
		constexpr auto BoostingAtPlayerBonus = 0xe0; // int32_t
		constexpr auto DebugColors = 0xe8; // TArray<FColor>
		constexpr auto PriorityArray = 0xf8; // TArray<FPriorityCandidate>
		constexpr auto Ball = 0x108; // ObjectProperty
	}

	namespace n_UCarDistanceTracker_TA {
		constexpr auto LastCarLocation = 0x90; // FVector
		constexpr auto TotalDriveDistanceKM = 0x9c; // float
		constexpr auto CurrentDriveDistanceKM = 0xa0; // float
	}

	namespace n_USeqAct_SetBallCamTarget_TA {
		constexpr auto Target = 0x160; // ObjectProperty
		constexpr auto Instigator = 0x168; // ObjectProperty
		constexpr auto bForceBallCamTarget = 0x170; // uint32_t : 1
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0xc8; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xd8; // uint32_t : 1
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0xc0; // FString
		constexpr auto Description = 0xd0; // FString
		constexpr auto SortPriority = 0xe0; // int32_t
		constexpr auto A = 0xe8; // FExpressionInput
		constexpr auto bLastPreviewed = 0x120; // uint32_t : 1
		constexpr auto Id = 0x124; // FGuid
	}

	namespace n_ASpeedTreeActor {
		constexpr auto SpeedTreeComponent = 0x268; // ComponentProperty
	}

	namespace n_UNxForceFieldTornadoComponent {
		constexpr auto RadialStrength = 0x2c8; // float
		constexpr auto RotationalStrength = 0x2cc; // float
		constexpr auto LiftStrength = 0x2d0; // float
		constexpr auto ForceRadius = 0x2d4; // float
		constexpr auto ForceTopRadius = 0x2d8; // float
		constexpr auto LiftFalloffHeight = 0x2dc; // float
		constexpr auto EscapeVelocity = 0x2e0; // float
		constexpr auto ForceHeight = 0x2e4; // float
		constexpr auto HeightOffset = 0x2e8; // float
		constexpr auto BSpecialRadialForceMode = 0x2ec; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2f0; // float
		constexpr auto Kernel = 0x2f8; // FPointer
	}

	namespace n_UUdpLanBrowser_X {
		constexpr auto SearchTimeout = 0x60; // float
		constexpr auto LanBeacon = 0x68; // ComponentProperty
		constexpr auto SearchTask = 0x70; // ObjectProperty
		constexpr auto SearchResults = 0x78; // TArray<ObjectProperty>
		constexpr auto LocalServer = 0x88; // ObjectProperty
	}

	namespace n_UCameraTrack_TA {
		constexpr auto Points = 0x60; // TArray<ObjectProperty>
		constexpr auto LocationCurve = 0x70; // FInterpCurveVector
		constexpr auto RotationCurve = 0x88; // FInterpCurveVector
		constexpr auto FOVCurve = 0xa0; // FInterpCurveFloat
	}

	namespace n_URPC_TourUnsubscribe_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto bUnsubscribeAnyRegisteredTournament = 0x138; // uint32_t : 1
		constexpr auto TeamMembers = 0x140; // TArray<FUniqueNetId>
	}

	namespace n_UStaticMeshComponentFactory {
		constexpr auto StaticMesh = 0x78; // ObjectProperty
	}

	namespace n_UAppConfig_X {
		constexpr auto bSpinSleep = 0x78; // uint32_t : 1
	}

	namespace n_UAnimTree {
		constexpr auto AnimTreeTemplate = 0x148; // ObjectProperty
		constexpr auto bEnablePooling = 0x150; // uint32_t : 1
		constexpr auto bUseSavedPose = 0x150; // uint32_t : 1
		constexpr auto bBeingEdited = 0x150; // uint32_t : 1
		constexpr auto bParentNodeArrayBuilt = 0x150; // uint32_t : 1
		constexpr auto bRebuildAnimTickArray = 0x150; // uint32_t : 1
		constexpr auto AnimGroups = 0x158; // TArray<FAnimGroup>
		constexpr auto PrioritizedSkelBranches = 0x168; // TArray<FName>
		constexpr auto ComposePrePassBoneNames = 0x178; // TArray<FName>
		constexpr auto ComposePostPassBoneNames = 0x188; // TArray<FName>
		constexpr auto RootMorphNodes = 0x198; // TArray<ObjectProperty>
		constexpr auto SkelControlLists = 0x1a8; // TArray<FSkelControlListHead>
		constexpr auto SavedPose = 0x1b8; // TArray<FBoneAtom>
		constexpr auto MorphConnDrawY = 0x1c8; // int32_t
		constexpr auto PreviewPlayRate = 0x1cc; // float
		constexpr auto PreviewSkelMesh = 0x1d0; // ObjectProperty
		constexpr auto SocketSkelMesh = 0x1d8; // ObjectProperty
		constexpr auto SocketStaticMesh = 0x1e0; // ObjectProperty
		constexpr auto SocketName = 0x1e8; // FName
		constexpr auto PreviewAnimSets = 0x1f0; // TArray<ObjectProperty>
		constexpr auto PreviewMorphSets = 0x200; // TArray<ObjectProperty>
		constexpr auto PreviewMeshList = 0x210; // TArray<FPreviewSkelMeshStruct>
		constexpr auto PreviewMeshIndex = 0x220; // int32_t
		constexpr auto PreviewSocketList = 0x228; // TArray<FPreviewSocketStruct>
		constexpr auto PreviewSocketIndex = 0x238; // int32_t
		constexpr auto PreviewAnimSetList = 0x240; // TArray<FPreviewAnimSetsStruct>
		constexpr auto PreviewAnimSetListIndex = 0x250; // int32_t
		constexpr auto PreviewAnimSetIndex = 0x254; // int32_t
		constexpr auto PreviewCamPos = 0x258; // FVector
		constexpr auto PreviewCamRot = 0x264; // FRotator
		constexpr auto PreviewFloorPos = 0x270; // FVector
		constexpr auto PreviewFloorYaw = 0x27c; // int32_t
		constexpr auto AnimNodeFrames = 0x280; // TArray<ObjectProperty>
		constexpr auto AnimTickArray = 0x290; // TArray<ObjectProperty>
	}

	namespace n_UPlayerRemovedEvent_TA {
		constexpr auto Player = 0x60; // ObjectProperty
	}

	namespace n_UPartyMessage_Chat_TA {
		constexpr auto Text = 0xa8; // FString
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0xe0; // FLinearColor
		constexpr auto bRanged = 0xf0; // uint32_t : 1
		constexpr auto MinParameterValue = 0xf4; // FLinearColor
		constexpr auto MaxParameterValue = 0x104; // FLinearColor
	}

	namespace n_UJiggleHitHandler_TA {
		constexpr auto JiggleDistance = 0x150; // float
		constexpr auto JiggleSpeed = 0x154; // float
		constexpr auto JiggleSlowDownSpeed = 0x158; // float
		constexpr auto BounceOffParticleSystem = 0x160; // ObjectProperty
		constexpr auto JigglingCars = 0x168; // TArray<FJiggleCarData>
		constexpr auto SpawnedParticleActors = 0x178; // TArray<ObjectProperty>
	}

	namespace n_UEOS_ManageFriendsListResponse {
		constexpr auto Status = 0x60; // FString
	}

	namespace n_ASkeletalMeshActorMAT_Products_TA {
		constexpr auto BodyAsset = 0x2e0; // ObjectProperty
		constexpr auto SkinAsset = 0x2e8; // ObjectProperty
		constexpr auto TeamFinishAsset = 0x2f0; // ObjectProperty
		constexpr auto CustomFinishAsset = 0x2f8; // ObjectProperty
		constexpr auto WheelAsset = 0x300; // ObjectProperty
		constexpr auto BoostAsset = 0x308; // ObjectProperty
		constexpr auto AntennaAsset = 0x310; // ObjectProperty
		constexpr auto HatAsset = 0x318; // ObjectProperty
		constexpr auto bInitBoostFX = 0x320; // uint32_t : 1
		constexpr auto bUseInGameColors = 0x320; // uint32_t : 1
		constexpr auto TeamColor = 0x324; // FLinearColor
		constexpr auto CustomColor = 0x334; // FLinearColor
		constexpr auto FakeBoostVelocity = 0x344; // float
		constexpr auto DeactivateBoostVelocity = 0x348; // float
		constexpr auto CarMeshComp = 0x350; // ComponentProperty
		constexpr auto FLWheelSKComponent = 0x358; // ComponentProperty
		constexpr auto FRWheelSKComponent = 0x360; // ComponentProperty
		constexpr auto BLWheelSKComponent = 0x368; // ComponentProperty
		constexpr auto BRWheelSKComponent = 0x370; // ComponentProperty
		constexpr auto FLWheelSMComponent = 0x378; // ComponentProperty
		constexpr auto FRWheelSMComponent = 0x380; // ComponentProperty
		constexpr auto BLWheelSMComponent = 0x388; // ComponentProperty
		constexpr auto BRWheelSMComponent = 0x390; // ComponentProperty
		constexpr auto WheelMeshComponents = 0x398; // TArray<ComponentProperty>
		constexpr auto PreviewMesh = 0x3a8; // ComponentProperty
		constexpr auto AdditionalWheels = 0x3b0; // TArray<FBothWheelAssets>
		constexpr auto NameplateComponent = 0x3c0; // ComponentProperty
		constexpr auto ProductLoader = 0x3c8; // ComponentProperty
	}

	namespace n_UGetUploadUrlsMatch_TA {
		constexpr auto MatchGUID = 0x60; // FString
		constexpr auto RecordStartTimestamp = 0x70; // QWordProperty
		constexpr auto Playlist = 0x78; // int32_t
		constexpr auto Mutators = 0x80; // TArray<FName>
		constexpr auto bIsBotMatch = 0x90; // uint32_t : 1
		constexpr auto Players = 0x98; // TArray<ObjectProperty>
	}

	namespace n_UProductAsset_Body_TA {
		constexpr auto Mesh = 0xf8; // ObjectProperty
		constexpr auto AnimTreeTemplate = 0x100; // ObjectProperty
		constexpr auto AnimSets = 0x108; // TArray<ObjectProperty>
		constexpr auto PhysicsAsset = 0x118; // ObjectProperty
		constexpr auto HandlingPreset = 0x120; // ObjectProperty
		constexpr auto HandlingPresetZOffset = 0x128; // float
		constexpr auto FrontAxle = 0x12c; // FVehicleAxleSettings
		constexpr auto BackAxle = 0x154; // FVehicleAxleSettings
		constexpr auto AdditionalAxles = 0x180; // TArray<FVehicleAxleSettings>
		constexpr auto SteerScale = 0x190; // float
		constexpr auto ChassisSpring = 0x194; // FSimpleSpringSettings
		constexpr auto ChassisRotationScale = 0x1e4; // float
		constexpr auto ChassisTranslationScale = 0x1e8; // float
		constexpr auto SuspensionTravelMax = 0x1ec; // float
		constexpr auto SuspensionTravelMin = 0x1f0; // float
		constexpr auto bUseLegacySuspensionOffsets = 0x1f4; // uint32_t : 1
		constexpr auto bOverrideBoostFlapsAngle = 0x1f4; // uint32_t : 1
		constexpr auto EngineSound = 0x1f8; // ObjectProperty
		constexpr auto ExhaustSound = 0x200; // ObjectProperty
		constexpr auto BlowoffSound = 0x208; // ObjectProperty
		constexpr auto EngineAudioProfile = 0x210; // ObjectProperty
		constexpr auto EngineAudioAsset = 0x218; // ObjectProperty
		constexpr auto EngineAudioAssets = 0x220; // TArray<ObjectProperty>
		constexpr auto EngineAudioProductID = 0x230; // int32_t
		constexpr auto EngineAudioReference = 0x238; // ObjectProperty
		constexpr auto FXActor = 0x240; // ObjectProperty
		constexpr auto SkinMaterialIndex = 0x248; // int32_t
		constexpr auto BrakelightMaterialIndex = 0x24c; // int32_t
		constexpr auto ChassisMaterialIndex = 0x250; // int32_t
		constexpr auto BoostEmitterSockets = 0x258; // TArray<FName>
		constexpr auto BoostFlapsAngle = 0x268; // float
		constexpr auto ForcedTeamColors = 0x26c; // FLinearColor [0x2]
		constexpr auto ForcedCustomColor = 0x28c; // FLinearColor
		constexpr auto SupersonicTrailOffset = 0x29c; // FVector
		constexpr auto AdditionalUnlocks2 = 0x2a8; // TArray<ObjectProperty>
		constexpr auto EquipProfile = 0x2b8; // ObjectProperty
		constexpr auto Attachments = 0x2c0; // TArray<FProductAttachment>
		constexpr auto BoostParticleParameters = 0x2d0; // TArray<FParticleSysParam>
		constexpr auto SupersonicWheelTemplate = 0x2e0; // ObjectProperty
		constexpr auto DemolishFX = 0x2e8; // ObjectProperty
		constexpr auto SpawnFX = 0x2f0; // ObjectProperty
		constexpr auto ExitFX = 0x2f8; // ObjectProperty
		constexpr auto WheelPreviewAnimTranslateScale = 0x300; // float
		constexpr auto BoostAttachmentsToModify = 0x308; // TArray<FBoostAttachmentToggle>
		constexpr auto SkinParameters = 0x318; // FMaterialParams
		constexpr auto ThumbnailWheelAsset = 0x348; // ObjectProperty
		constexpr auto LODDistanceInfo = 0x350; // TArray<FSkeletalMeshLODDistanceInfo>
		constexpr auto MutatorArchetypes = 0x360; // TArray<ObjectProperty>
	}

	namespace n_U__GFxData_Mutators_TA__InitMutatorCustomGameSettings_0F0C42D84585FD77479D6A83B20A7EE8 {
		constexpr auto DisabledCategories = 0x60; // TArray<FName>
	}

	namespace n_UTwoFactorAuthentication_TA {
		constexpr auto Error = 0x60; // ObjectProperty
		constexpr auto ReauthenticationRetryDelay = 0x68; // QWordProperty
		constexpr auto ReauthenticationRetryTimestamp = 0x70; // QWordProperty
		constexpr auto TwoFactorAuthenticationRequired_EGS = 0x78; // FString
		constexpr auto __EventReauthenticationComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_AGameEvent_FTE_TA {
		constexpr auto MaxTimeToShowInstructions = 0xc78; // int32_t
		constexpr auto InvalidTeamNum = 0xc7c; // int32_t
	}

	namespace n_U__GFxData_Friends_TA__HandlePartiesChanged_10986DB948CC478EB7CB79A95E31F743 {
		constexpr auto PrimaryPlayerId = 0x60; // FUniqueNetId
	}

	namespace n_UPresetMutators_X {
		constexpr auto PresetTags = 0x60; // TArray<FCategorySettingPair>
		constexpr auto RequiresMaps = 0x70; // TArray<FName>
		constexpr auto bLockSettings = 0x80; // uint32_t : 1
		constexpr auto bHideSettings = 0x80; // uint32_t : 1
		constexpr auto OverrideName = 0x88; // FString
	}

	namespace n_ANavigationPoint {
		constexpr auto bEndPoint = 0x268; // uint32_t : 1
		constexpr auto bTransientEndPoint = 0x268; // uint32_t : 1
		constexpr auto bHideEditorPaths = 0x268; // uint32_t : 1
		constexpr auto bCanReach = 0x268; // uint32_t : 1
		constexpr auto bBlocked = 0x268; // uint32_t : 1
		constexpr auto bOneWayPath = 0x268; // uint32_t : 1
		constexpr auto bNeverUseStrafing = 0x268; // uint32_t : 1
		constexpr auto bAlwaysUseStrafing = 0x268; // uint32_t : 1
		constexpr auto bForceNoStrafing = 0x268; // uint32_t : 1
		constexpr auto bAutoBuilt = 0x268; // uint32_t : 1
		constexpr auto bSpecialMove = 0x268; // uint32_t : 1
		constexpr auto bNoAutoConnect = 0x268; // uint32_t : 1
		constexpr auto bNotBased = 0x268; // uint32_t : 1
		constexpr auto bPathsChanged = 0x268; // uint32_t : 1
		constexpr auto bDestinationOnly = 0x268; // uint32_t : 1
		constexpr auto bSourceOnly = 0x268; // uint32_t : 1
		constexpr auto bSpecialForced = 0x268; // uint32_t : 1
		constexpr auto bMustBeReachable = 0x268; // uint32_t : 1
		constexpr auto bBlockable = 0x268; // uint32_t : 1
		constexpr auto bFlyingPreferred = 0x268; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x268; // uint32_t : 1
		constexpr auto bMakeSourceOnly = 0x268; // uint32_t : 1
		constexpr auto bMustTouchToReach = 0x268; // uint32_t : 1
		constexpr auto bCanWalkOnToReach = 0x268; // uint32_t : 1
		constexpr auto bBuildLongPaths = 0x268; // uint32_t : 1
		constexpr auto bHasCrossLevelPaths = 0x268; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x268; // uint32_t : 1
		constexpr auto NavOctreeObject = 0x270; // FNavigationOctreeObject
		constexpr auto PathList = 0x2b0; // TArray<ObjectProperty>
		constexpr auto EditorProscribedPaths = 0x2c0; // TArray<FActorReference>
		constexpr auto EditorForcedPaths = 0x2d0; // TArray<FActorReference>
		constexpr auto Volumes = 0x2e0; // TArray<FActorReference>
		constexpr auto visitedWeight = 0x2f0; // int32_t
		constexpr auto bestPathWeight = 0x2f4; // int32_t
		constexpr auto nextNavigationPoint = 0x2f8; // ObjectProperty
		constexpr auto nextOrdered = 0x300; // ObjectProperty
		constexpr auto prevOrdered = 0x308; // ObjectProperty
		constexpr auto previousPath = 0x310; // ObjectProperty
		constexpr auto Cost = 0x318; // int32_t
		constexpr auto ExtraCost = 0x31c; // int32_t
		constexpr auto TransientCost = 0x320; // int32_t
		constexpr auto FearCost = 0x324; // int32_t
		constexpr auto CostArray = 0x328; // TArray<FDebugNavCost>
		constexpr auto LastDetourWeight = 0x338; // float
		constexpr auto CylinderComponent = 0x340; // ComponentProperty
		constexpr auto MaxPathSize = 0x348; // FCylinder
		constexpr auto NavGuid = 0x350; // FGuid
		constexpr auto GoodSprite = 0x360; // ComponentProperty
		constexpr auto BadSprite = 0x368; // ComponentProperty
		constexpr auto NetworkID = 0x370; // int32_t
		constexpr auto AnchoredPawn = 0x378; // ObjectProperty
		constexpr auto LastAnchoredPawnTime = 0x380; // float
	}

	namespace n_UOnlineConfig_X {
		constexpr auto bAllowOnServer = 0x60; // uint32_t : 1
		constexpr auto AllSubscriptions = 0x68; // TArray<FModifierSubscription>
	}

	namespace n_UOnlineGamePrivateMatch_X {
		constexpr auto PreferredRegion = 0x118; // FString
		constexpr auto SearchingString = 0x128; // FString
		constexpr auto StartSearchFailString = 0x138; // FString
		constexpr auto FoundServerString = 0x148; // FString
		constexpr auto AlreadyJoiningGameString = 0x158; // FString
		constexpr auto TimeoutString = 0x168; // FString
		constexpr auto WrongRegionString = 0x178; // FString
		constexpr auto Settings = 0x188; // FCustomMatchSettings
		constexpr auto SearchTimeout = 0x218; // float
		constexpr auto __EventPrivateMatchError__Delegate = 0x220; // DelegateProperty
	}

	namespace n_ANxTornadoAngularForceFieldCapsule {
		constexpr auto RenderComponent = 0x2f8; // ComponentProperty
	}

	namespace n_URPC_PlayerSearchPrivateMatch_X {
		constexpr auto Region = 0xe8; // FString
	}

	namespace n_AFileWriter {
		constexpr auto ArchivePtr = 0x268; // FPointer
		constexpr auto Filename = 0x270; // FString
		constexpr auto FileType = 0x280; // FWFileType
		constexpr auto bFlushEachWrite = 0x284; // uint32_t : 1
		constexpr auto bWantsAsyncWrites = 0x284; // uint32_t : 1
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Texture = 0xc0; // ObjectProperty
		constexpr auto Coordinates = 0xc8; // FExpressionInput
		constexpr auto TextureObject = 0x100; // FExpressionInput
	}

	namespace n_ASpecialPickup_BallGravity_TA {
		constexpr auto BallGravity = 0x388; // float
		constexpr auto Range = 0x38c; // float
		constexpr auto Offset = 0x390; // FVector
		constexpr auto bDeactivateOnTouch = 0x39c; // uint32_t : 1
		constexpr auto BeamPSArchetype = 0x3a0; // ObjectProperty
		constexpr auto BeamPSParam = 0x3a8; // FName
		constexpr auto RecordBallHitRate = 0x3b0; // float
		constexpr auto BallMIC = 0x3b8; // ObjectProperty
		constexpr auto BallMICParam = 0x3c0; // FName
		constexpr auto BallFXArchetype = 0x3c8; // ObjectProperty
		constexpr auto BallMICCurve = 0x3d0; // FInterpCurveFloat
		constexpr auto BallSFX = 0x3e8; // ObjectProperty
		constexpr auto LastRecordedBallHitTime = 0x3f0; // float
		constexpr auto BeamPSC = 0x3f8; // ComponentProperty
		constexpr auto BallFX = 0x400; // ObjectProperty
		constexpr auto CopiedBallMesh = 0x408; // ComponentProperty
		constexpr auto BMIC = 0x410; // ObjectProperty
		constexpr auto PrevBall = 0x418; // ObjectProperty
	}

	namespace n_UOnlineGameSettings {
		constexpr auto NumPublicConnections = 0xa0; // int32_t
		constexpr auto NumPrivateConnections = 0xa4; // int32_t
		constexpr auto NumOpenPublicConnections = 0xa8; // int32_t
		constexpr auto NumOpenPrivateConnections = 0xac; // int32_t
		constexpr auto ServerNonce = 0xb0; // QWordProperty
		constexpr auto bShouldAdvertise = 0xb8; // uint32_t : 1
		constexpr auto bIsLanMatch = 0xb8; // uint32_t : 1
		constexpr auto bUsesStats = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinInProgress = 0xb8; // uint32_t : 1
		constexpr auto bAllowInvites = 0xb8; // uint32_t : 1
		constexpr auto bUsesPresence = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinViaPresence = 0xb8; // uint32_t : 1
		constexpr auto bAllowJoinViaPresenceFriendsOnly = 0xb8; // uint32_t : 1
		constexpr auto bUsesArbitration = 0xb8; // uint32_t : 1
		constexpr auto bAntiCheatProtected = 0xb8; // uint32_t : 1
		constexpr auto bWasFromInvite = 0xb8; // uint32_t : 1
		constexpr auto bIsDedicated = 0xb8; // uint32_t : 1
		constexpr auto bHasSkillUpdateInProgress = 0xb8; // uint32_t : 1
		constexpr auto bShouldShrinkArbitratedSessions = 0xb8; // uint32_t : 1
		constexpr auto OwningPlayerName = 0xc0; // FString
		constexpr auto OwningPlayerId = 0xd0; // FUniqueNetId
		constexpr auto PingInMs = 0x118; // int32_t
		constexpr auto MatchQuality = 0x11c; // float
		constexpr auto GameState = 0x120; // EOnlineGameState
		constexpr auto BuildUniqueId = 0x124; // int32_t
		constexpr auto DataboundPropertiesToAdvertise = 0x128; // TArray<FName>
		constexpr auto Payload = 0x138; // FString
	}

	namespace n_UPsyNetService_PartyUserKicked_X {
		constexpr auto PartyID = 0x90; // FString
		constexpr auto NotificationType = 0xa0; // FString
		constexpr auto Content = 0xb0; // FUniqueNetId
		constexpr auto FromUserId = 0xf8; // FUniqueNetId
		constexpr auto CreatedAt = 0x140; // int32_t
		constexpr auto ForUserId = 0x148; // FUniqueNetId
		constexpr auto KickReason = 0x190; // ELobbyKickReason
	}

	namespace n_URPC_GetPlayerTitles_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Titles = 0x130; // TArray<FString>
	}

	namespace n_UProductLoader_TA {
		constexpr auto RemainingProducts = 0x70; // TArray<ObjectProperty>
		constexpr auto Assets = 0x80; // TArray<ObjectProperty>
		constexpr auto __EventAssetLoaded__Delegate = 0x90; // DelegateProperty
		constexpr auto __EventAllAssetsLoaded__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x278; // ObjectProperty
		constexpr auto Parent = 0x280; // ObjectProperty
		constexpr auto PhysMaterialMask = 0x288; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x290; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x298; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x2a0; // ObjectProperty
		constexpr auto bHasStaticPermutationResource = 0x2a8; // uint32_t : 1
		constexpr auto bStaticPermutationDirty = 0x2a8; // uint32_t : 1
		constexpr auto ReentrantFlag = 0x2a8; // uint32_t : 1
		constexpr auto bNeedsMaterialFlattening = 0x2a8; // uint32_t : 1
		constexpr auto StaticParameters = 0x2b0; // FPointer [0x2]
		constexpr auto StaticPermutationResources = 0x2c0; // FPointer [0x2]
		constexpr auto Resources = 0x2d0; // FPointer [0x3]
		constexpr auto ReferencedTextures = 0x2e8; // TArray<ObjectProperty>
		constexpr auto ReferencedTextureGuids = 0x2f8; // TArray<FGuid>
		constexpr auto ParentLightingGuid = 0x308; // FGuid
	}

	namespace n_UMutatorGameSetting_TA {
		constexpr auto RequiresMutators = 0x68; // TArray<FString>
		constexpr auto DisallowedWithMutators = 0x78; // TArray<FString>
		constexpr auto MutatorPackage = 0x88; // FString
	}

	namespace n_UBTC_SoccarState {
		constexpr auto bKickoff = 0x98; // uint32_t : 1
		constexpr auto SoccarGame = 0xa0; // ObjectProperty
	}

	namespace n_UMusicPlaylist_TA {
		constexpr auto Tracks = 0x60; // TArray<FPlaylistTrack>
		constexpr auto Icon = 0x70; // ObjectProperty
		constexpr auto bDefaultSelected = 0x78; // uint32_t : 1
	}

	namespace n_U__GFxData_Clubs_TA__SetMotD_5013DA074C3197E926A4BFB03BE213DA {
		constexpr auto Text = 0x60; // FString
	}

	namespace n_UMeshBeaconClient {
		constexpr auto HostPendingRequest = 0xa8; // FOnlineGameSearchResult
		constexpr auto ClientPendingRequest = 0xb8; // FClientConnectionRequest
		constexpr auto CurrentBandwidthTest = 0x128; // FClientBandwidthTestData
		constexpr auto ClientBeaconState = 0x13c; // EMeshBeaconClientState
		constexpr auto ClientBeaconRequestType = 0x13d; // EMeshBeaconPacketType
		constexpr auto ConnectionRequestTimeout = 0x140; // float
		constexpr auto ConnectionRequestElapsedTime = 0x144; // float
		constexpr auto ResolverClassName = 0x148; // FString
		constexpr auto ResolverClass = 0x158; // FNone*
		constexpr auto Resolver = 0x160; // ObjectProperty
		constexpr auto bUsingRegisteredAddr = 0x168; // uint32_t : 1
		constexpr auto __OnConnectionRequestResult__Delegate = 0x170; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestRequest__Delegate = 0x188; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestResults__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnCreateNewSessionRequestReceived__Delegate = 0x1d0; // DelegateProperty
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x78; // FRawDistributionVector
		constexpr auto MaxAddedVelocity = 0xa0; // float
	}

	namespace n_UTourPartyLeaderLeave_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Party = 0x68; // ObjectProperty
	}

	namespace n_U__GFxData_TourBracket_TA__InitTeams_695E5B6347AA4E53752D94830DAF3739 {
		constexpr auto Team = 0x60; // FTourTeam
	}

	namespace n_UDelegateTracker {
		constexpr auto AsyncDelegates = 0x60; // TArray<FAsyncDelegateInfo>
		constexpr auto __PlaceholderDelegate__Delegate = 0x70; // DelegateProperty
	}

	namespace n_URPC_TourGetMatchDetails_TA {
		constexpr auto TournamentID = 0xe8; // QWordProperty
		constexpr auto MatchID = 0xf0; // int32_t
		constexpr auto TeamStats = 0xf8; // TArray<FTourMatchTeamDetails>
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x80; // FInterpCurveFloat
	}

	namespace n_UForceFieldShapeCapsule {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_U__MatchType_Public_TA__CanSkipPreMatchLobby_F0C5ACEE40F90998BA0B9BA1E1EC0D89 {
		constexpr auto MaxTeamSize = 0x60; // int32_t
	}

	namespace n_U__TwoFactorAuthentication_TA__Reauthenticate_0E18DDC64D8BB6CD4B2FA2B03941D7CA {
		constexpr auto OnSuccess = 0x60; // DelegateProperty
		constexpr auto OnFail = 0x78; // DelegateProperty
	}

	namespace n_UGFxData_PlatformAuth_TA {
		constexpr auto SuccessTitle = 0x98; // FString
		constexpr auto SuccessBody = 0xa8; // FString
	}

	namespace n_ACamera_TA {
		constexpr auto SwivelExtentSlow = 0x6c8; // FSwivelExtent
		constexpr auto SwivelExtentFast = 0x6d4; // FSwivelExtent
		constexpr auto SwivelFastSpeed = 0x6e0; // float
		constexpr auto SwivelDieRate = 0x6e4; // float
		constexpr auto FOVLimits = 0x6e8; // FProfileSliderLimits
		constexpr auto HeightLimits = 0x6f4; // FProfileSliderLimits
		constexpr auto AngleLimits = 0x700; // FProfileSliderLimits
		constexpr auto DistanceLimits = 0x70c; // FProfileSliderLimits
		constexpr auto StiffnessLimits = 0x718; // FProfileSliderLimits
		constexpr auto SwivelSpeedLimits = 0x724; // FProfileSliderLimits
		constexpr auto TransitionSpeedLimits = 0x730; // FProfileSliderLimits
		constexpr auto CameraPresetSettings = 0x740; // TArray<FProfileCameraSettings>
		constexpr auto HorizontalSplitscreenHeightOffset = 0x750; // float
		constexpr auto HorizontalSplitscreenFOVOffset = 0x754; // float
		constexpr auto VerticalSplitscreenFOVOffset = 0x758; // float
		constexpr auto ClipRate = 0x75c; // float
		constexpr auto CurrentSwivel = 0x760; // FRotator
		constexpr auto Demolisher = 0x770; // ObjectProperty
		constexpr auto bDemolished = 0x778; // uint32_t : 1
		constexpr auto bGroundClampTrace = 0x778; // uint32_t : 1
		constexpr auto CameraSettings = 0x780; // ObjectProperty
		constexpr auto GroundClampZOffset = 0x788; // float
		constexpr auto __EventCameraTargetChanged__Delegate = 0x790; // DelegateProperty
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto bIsLayerThumbnail = 0x360; // uint32_t : 1
		constexpr auto DataWeightmapIndex = 0x364; // int32_t
		constexpr auto DataWeightmapSize = 0x368; // int32_t
	}

	namespace n_UUIDataStore_OnlineGameSearch {
		constexpr auto SearchResultsName = 0xa0; // FName
		constexpr auto OnlineSub = 0xa8; // ObjectProperty
		constexpr auto GameInterface = 0xb0; // TScriptInterface<Class>
		constexpr auto GameSearchCfgList = 0xc0; // TArray<FGameSearchCfg>
		constexpr auto SelectedIndex = 0xd0; // int32_t
		constexpr auto ActiveSearchIndex = 0xd4; // int32_t
	}

	namespace n_USeqAct_AkPlayMusicWithCues {
		constexpr auto SoundCue = 0x178; // ObjectProperty
		constexpr auto MusicSyncEvents = 0x180; // TArray<FMusicSyncEvent>
	}

	namespace n_UEngineAudioPreview_TA {
		constexpr auto Profile = 0x88; // ObjectProperty
		constexpr auto NativeState = 0x90; // FPointer
		constexpr auto GearToWheelSpeedAccel = 0x98; // FInterpCurveFloat
		constexpr auto PreviewSpeed = 0xb0; // float
		constexpr auto MaxPreviewSpeed = 0xb4; // float
		constexpr auto WheelSpeedToPreviewSpeed = 0xb8; // float
		constexpr auto BrakeFactor = 0xbc; // float
		constexpr auto IsLocalRTPC = 0xc0; // FName
	}

	namespace n_UPreMatchLobby_TA {
		constexpr auto SelectedFocus = 0x60; // ObjectProperty
		constexpr auto HighlightedFocus = 0x68; // ObjectProperty
		constexpr auto LastHighlightLocation = 0x70; // FVector
		constexpr auto __EventSelectedFocusChanged__Delegate = 0x80; // DelegateProperty
	}

	namespace n_AControllerEventInfo_TA {
		constexpr auto PC = 0x268; // ObjectProperty
		constexpr auto GameEvent = 0x270; // ObjectProperty
	}

	namespace n_UProductOverride_WheelAttachment_TA {
		constexpr auto AttachmentsToOverride = 0x60; // TArray<FWheelAttachment>
	}

	namespace n_UGameViewportClient {
		constexpr auto VfTable_FExec = 0x68; // FPointer
		constexpr auto Viewport = 0x70; // FPointer
		constexpr auto ViewportFrame = 0x78; // FPointer
		constexpr auto GlobalInteractions = 0x80; // TArray<ObjectProperty>
		constexpr auto UIControllerClass = 0x90; // FNone*
		constexpr auto UIController = 0x98; // ObjectProperty
		constexpr auto ViewportConsole = 0xa0; // ObjectProperty
		constexpr auto ShowFlags = 0xa8; // FExportShowFlags_Mirror
		constexpr auto LoadingMessage = 0xb8; // FString
		constexpr auto SavingMessage = 0xc8; // FString
		constexpr auto ConnectingMessage = 0xd8; // FString
		constexpr auto PausedMessage = 0xe8; // FString
		constexpr auto PrecachingMessage = 0xf8; // FString
		constexpr auto bShowTitleSafeZone = 0x108; // uint32_t : 1
		constexpr auto bDisplayHardwareMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bOverrideDiffuseAndSpecular = 0x108; // uint32_t : 1
		constexpr auto bIsPlayInEditorViewport = 0x108; // uint32_t : 1
		constexpr auto bShowSystemMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x108; // uint32_t : 1
		constexpr auto bCapturedWorldRendering = 0x108; // uint32_t : 1
		constexpr auto bDebugNoGFxUI = 0x108; // uint32_t : 1
		constexpr auto TitleSafeZone = 0x10c; // FTitleSafeZoneArea
		constexpr auto GamepadInputAPI = 0x11c; // EInputAPI
		constexpr auto DesiredSplitscreenType = 0x11d; // ESplitScreenType
		constexpr auto ActiveSplitscreenType = 0x11e; // ESplitScreenType
		constexpr auto Default2PSplitType = 0x11f; // ESplitScreenType
		constexpr auto Default3PSplitType = 0x120; // ESplitScreenType
		constexpr auto Gamepads = 0x128; // TArray<FGamepadInfo>
		constexpr auto SplitscreenInfo = 0x138; // TArray<FSplitscreenData>
		constexpr auto ProgressMessage = 0x148; // FString [0x2]
		constexpr auto ProgressTimeOut = 0x168; // float
		constexpr auto ProgressFadeTime = 0x16c; // float
		constexpr auto DebugProperties = 0x170; // TArray<FDebugDisplayProperty>
		constexpr auto ScaleformInteraction = 0x180; // FPointer
		constexpr auto __HandleInputKey__Delegate = 0x188; // DelegateProperty
		constexpr auto __HandleInputAxis__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __HandleInputChar__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __EventScaleformEnabledChanged__Delegate = 0x1d0; // DelegateProperty
		constexpr auto __EventGamepadInputAPIChanged__Delegate = 0x1e8; // DelegateProperty
		constexpr auto __EventGamepadConnectionStatusChanged__Delegate = 0x200; // DelegateProperty
		constexpr auto __EventGampadConnected__Delegate = 0x218; // DelegateProperty
		constexpr auto __EventGampadDisconnected__Delegate = 0x230; // DelegateProperty
	}

	namespace n_UOnlineGame_X {
		constexpr auto Account = 0x178; // ObjectProperty
		constexpr auto Matchmaking = 0x180; // ObjectProperty
		constexpr auto PrivateMatch = 0x188; // ObjectProperty
		constexpr auto ServerBrowser = 0x190; // ObjectProperty
		constexpr auto LanBrowser = 0x198; // ObjectProperty
		constexpr auto Leaderboards = 0x1a0; // ObjectProperty
		constexpr auto Population = 0x1a8; // ObjectProperty
		constexpr auto Voice = 0x1b0; // ObjectProperty
		constexpr auto Party = 0x1b8; // ObjectProperty
		constexpr auto GameInvite = 0x1c0; // ObjectProperty
		constexpr auto JoinGame = 0x1c8; // ObjectProperty
		constexpr auto Regions = 0x1d0; // ObjectProperty
		constexpr auto Privileges = 0x1d8; // ObjectProperty
		constexpr auto WordFilterProcessor = 0x1e0; // ObjectProperty
		constexpr auto GameVersion = 0x1e8; // ObjectProperty
		constexpr auto EOSGameClipsInterface = 0x1f0; // ObjectProperty
		constexpr auto PlayerArchetype = 0x1f8; // ObjectProperty
		constexpr auto OnlinePlayers = 0x200; // TArray<ObjectProperty>
		constexpr auto Eula = 0x210; // ComponentProperty
		constexpr auto PrivacyPolicy = 0x218; // ComponentProperty
		constexpr auto ToS = 0x220; // ComponentProperty
		constexpr auto SCT = 0x228; // ComponentProperty
		constexpr auto PaymentServices = 0x230; // ComponentProperty
		constexpr auto bRequestPublicIP = 0x238; // uint32_t : 1
		constexpr auto PublicIP = 0x240; // FString
		constexpr auto __EventConnectionError__Delegate = 0x250; // DelegateProperty
		constexpr auto __EventPlayerPsyNetLogin__Delegate = 0x268; // DelegateProperty
		constexpr auto __EventPlayerPsyNetLogout__Delegate = 0x280; // DelegateProperty
	}

	namespace n_UProductOverride_ParticleSystemColorParameter_TA {
		constexpr auto ParameterOverrides = 0x60; // TArray<FPaintColorParameterOverride>
		constexpr auto bUseParentEmissiveMultiplier = 0x70; // uint32_t : 1
		constexpr auto PaintEmissiveMultiplier = 0x74; // float
	}

	namespace n_UMcpServerTimeBase {
		constexpr auto McpServerTimeClassName = 0x78; // FString
		constexpr auto __OnQueryServerTimeComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_URPC_RelayToClient_X {
		constexpr auto PlayerIDs = 0xe8; // TArray<FString>
		constexpr auto ReservationID = 0xf8; // FString
		constexpr auto MessageType = 0x108; // FString
		constexpr auto MessagePayload = 0x118; // FString
		constexpr auto AllowPartialSuccess = 0x128; // uint32_t : 1
		constexpr auto QueueOffline = 0x128; // uint32_t : 1
		constexpr auto OfflineTTLSeconds = 0x12c; // int32_t
	}

	namespace n_U__TAsyncResult__array_ClubInvite_X__SetResultWhen_82CA4C45408B5F7A5A16939818E93A84 {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_ACrowdActor_TA {
		constexpr auto CrowdSound = 0x268; // ObjectProperty
		constexpr auto Settings = 0x270; // ObjectProperty
		constexpr auto GameEvent = 0x278; // ObjectProperty
		constexpr auto TargetIdleNoise = 0x280; // float
		constexpr auto TargetIdleNoiseRate = 0x284; // float
		constexpr auto CurrentIdleNoise = 0x288; // float
		constexpr auto ModifiedNoise = 0x28c; // float
		constexpr auto CurrentNoise = 0x290; // float
		constexpr auto NoiseModifiers = 0x298; // TArray<FCrowdNoiseModifierInstance>
		constexpr auto TimeAlmostOutNoiseInstance = 0x2a8; // FCrowdNoiseModifierInstance
		constexpr auto CurrentBallGoalDistanceNoise = 0x2b0; // float
		constexpr auto ReplicatedOneShotSound = 0x2b8; // ObjectProperty
		constexpr auto ReplicatedCountDownNumber = 0x2c0; // int32_t
		constexpr auto ReplicatedRoundCountDownNumber = 0x2c4; // int32_t
		constexpr auto LastBallHitNoiseTime = 0x2c8; // float
		constexpr auto LastBallHitNoiseLevel = 0x2cc; // int32_t
		constexpr auto Sounds = 0x2d0; // ObjectProperty
	}

	namespace n_UProductAttribute_QualityProductDBOverride_TA {
		constexpr auto QualityOverride = 0x80; // EProductQuality
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x70; // FRawDistributionFloat
		constexpr auto Scale = 0x98; // uint32_t : 1
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x80; // FVector
		constexpr auto Min = 0x8c; // FVector
		constexpr auto bLockAxes = 0x98; // uint32_t : 1
		constexpr auto bUseExtremes = 0x98; // uint32_t : 1
		constexpr auto LockedAxes = 0x9c; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x9d; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_USeqAct_AkPostTrigger {
		constexpr auto Trigger = 0x160; // FString
	}

	namespace n_URPC_GetPublicIP_X {
		constexpr auto IP = 0xe8; // FString
	}

	namespace n_URPC_GetPlayerClubDetails_X {
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
	}

	namespace n_UEOS_AccountSummaryResponse {
		constexpr auto Friends = 0x70; // TArray<FEOSAccountInfo>
		constexpr auto Incoming = 0x80; // TArray<FEOSAccountInfo>
		constexpr auto Outgoing = 0x90; // TArray<FEOSAccountInfo>
		constexpr auto BlockList = 0xa0; // TArray<FEOSAccountInfo>
		constexpr auto Settings = 0xb0; // FAccountSettings
	}

	namespace n_ACarComponent_Jump_TA {
		constexpr auto MinJumpTime = 0x2e0; // float
		constexpr auto JumpImpulse = 0x2e4; // float
		constexpr auto JumpForce = 0x2e8; // float
		constexpr auto JumpForceTime = 0x2ec; // float
		constexpr auto PodiumJumpForceTime = 0x2f0; // float
		constexpr auto JumpImpulseSpeed = 0x2f4; // float
		constexpr auto JumpAccel = 0x2f8; // float
		constexpr auto MaxJumpHeight = 0x2fc; // float
		constexpr auto MaxJumpHeightTime = 0x300; // float
		constexpr auto bDeactivate = 0x304; // uint32_t : 1
	}

	namespace n_UMessage_TA {
		constexpr auto Type = 0x60; // FName
		constexpr auto Sound = 0x68; // ObjectProperty
		constexpr auto PrimaryPlayerSound = 0x70; // ObjectProperty
		constexpr auto Key = 0x78; // FString
		constexpr auto Section = 0x88; // FString
		constexpr auto MessageLevel = 0x98; // EHUDMessageLevel
		constexpr auto LocalizedMessage = 0xa0; // FString
		constexpr auto ParamNames = 0xb0; // TArray<FName>
		constexpr auto ParamTokens = 0xc0; // TArray<FString>
		constexpr auto Packet = 0xd0; // FMessagePacket
		constexpr auto DefaultPacket = 0xe8; // FMessagePacket
	}

	namespace n_UPartyErrors_X {
		constexpr auto CreatePartyFailed = 0x80; // ObjectProperty
		constexpr auto CreatePartyFailedTeamFull = 0x88; // ObjectProperty
		constexpr auto CreatePlayerFailedPartyFull = 0x90; // ObjectProperty
		constexpr auto InvitePlayerToPartyFailedPartyFull = 0x98; // ObjectProperty
		constexpr auto JoinPartyFailedPartyFull = 0xa0; // ObjectProperty
		constexpr auto JoinPartyFailedPartyMatchmaking = 0xa8; // ObjectProperty
		constexpr auto JoinPartyFailedPartyInGame = 0xb0; // ObjectProperty
		constexpr auto KickedFromParty = 0xb8; // ObjectProperty
		constexpr auto PartyDestroyedConnectionError = 0xc0; // ObjectProperty
		constexpr auto PartyDestroyedSignedOut = 0xc8; // ObjectProperty
		constexpr auto JoinPartyFailed = 0xd0; // ObjectProperty
		constexpr auto JoinPartyFailedNotAllowed = 0xd8; // ObjectProperty
		constexpr auto JoinPartyFailedNotJoinable = 0xe0; // ObjectProperty
		constexpr auto PartyBuildID = 0xe8; // ObjectProperty
		constexpr auto PartyNotFound = 0xf0; // ObjectProperty
		constexpr auto UserNotOwner = 0xf8; // ObjectProperty
		constexpr auto PartyIsFull = 0x100; // ObjectProperty
		constexpr auto CannotAddToParty = 0x108; // ObjectProperty
		constexpr auto UserListInvalid = 0x110; // ObjectProperty
		constexpr auto InvalidOwner = 0x118; // ObjectProperty
		constexpr auto ChatDisabled = 0x120; // ObjectProperty
		constexpr auto MissingOrExpiredInvite = 0x128; // ObjectProperty
		constexpr auto MemberNotFound = 0x130; // ObjectProperty
		constexpr auto PartyIdConflict = 0x138; // ObjectProperty
		constexpr auto CannotKickSelf = 0x140; // ObjectProperty
		constexpr auto RegionRestrictedTrade = 0x148; // ObjectProperty
		constexpr auto CannotCrossPlatformTrade = 0x150; // ObjectProperty
		constexpr auto CannotCrossPlayInvite = 0x158; // ObjectProperty
		constexpr auto RestrictedPlatformInvite = 0x160; // ObjectProperty
		constexpr auto PlatformNotSupported = 0x168; // ObjectProperty
		constexpr auto KickedCrossplayDisabled = 0x170; // ObjectProperty
		constexpr auto KickedLeaderPartyUp = 0x178; // ObjectProperty
		constexpr auto VoterDisconnected = 0x180; // ObjectProperty
		constexpr auto VoteEnded = 0x188; // ObjectProperty
		constexpr auto UsePlatformPartySystem = 0x190; // ObjectProperty
		constexpr auto InvitationRejected = 0x198; // ObjectProperty
		constexpr auto SplitScreenNotAllowedInLan = 0x1a0; // ObjectProperty
	}

	namespace n_UNotificationManager_TA {
		constexpr auto Notifications = 0x60; // TArray<ObjectProperty>
		constexpr auto CurrentNotificationID = 0x70; // int32_t
		constexpr auto __EventNotificationAdded__Delegate = 0x78; // DelegateProperty
		constexpr auto __EventNotificationRemoved__Delegate = 0x90; // DelegateProperty
		constexpr auto __HasExistingNotificationDelegate__Delegate = 0xa8; // DelegateProperty
		constexpr auto __NotificationFilterFunction__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_U__GFxData_Party_TA__ActivatePartyUp_D2F4FE55418B8A26BB3C85AD0635E9D2 {
		constexpr auto PartyVoter = 0x60; // ObjectProperty
	}

	namespace n_URPC_KeysBase_X {
		constexpr auto ServerHost = 0xe8; // FString
		constexpr auto ServerPort = 0xf8; // int32_t
		constexpr auto Key = 0x100; // TArray<char>
		constexpr auto IV = 0x110; // TArray<char>
		constexpr auto HMACKey = 0x120; // TArray<char>
		constexpr auto SessionId = 0x130; // TArray<char>
		constexpr auto bPrimaryPlayer = 0x140; // uint32_t : 1
	}

	namespace n_UMapPrefsConfig_X {
		constexpr auto PreferenceWeight = 0x78; // float
		constexpr auto MaxLikes = 0x7c; // int32_t
		constexpr auto MaxDislikes = 0x80; // int32_t
	}

	namespace n_UGFxData_PlayerRecord_TA {
		constexpr auto PlayerIDString = 0x98; // FString
		constexpr auto bReported = 0xa8; // uint32_t : 1
		constexpr auto SanitizedPlayerName = 0xb0; // FString
		constexpr auto PlayerName = 0xc0; // FString
		constexpr auto PRI = 0xd0; // ObjectProperty
		constexpr auto PlayerID = 0xd8; // FUniqueNetId
	}

	namespace n_UPartyMessage_ReadyToLockTrade_X {
		constexpr auto TradingMemberId = 0xa8; // FUniqueNetId
		constexpr auto bReady = 0xf0; // uint32_t : 1
	}

	namespace n_UProductOverride_ParticleSystemNameParameter_TA {
		constexpr auto NameParameter = 0x60; // FNameParamPair
	}

	namespace n_UProductAsset_PlayerVanity_TA {
		constexpr auto MovieReference = 0xf8; // ObjectProperty
		constexpr auto ToPlayer = 0x100; // ObjectProperty
		constexpr auto PaintableLayer = 0x108; // ObjectProperty
		constexpr auto TintableLayer = 0x110; // ObjectProperty
		constexpr auto DefaultPaintColor = 0x118; // FLinearColor
	}

	namespace n_UBTC_Between {
		constexpr auto Start = 0xe8; // ObjectProperty
		constexpr auto End = 0xf0; // ObjectProperty
		constexpr auto AngleLessThan = 0xf8; // float
		constexpr auto AngleGreaterThan = 0xfc; // float
	}

	namespace n_USpecialEventErrors_TA {
		constexpr auto EventNotFound = 0x80; // ObjectProperty
		constexpr auto EventStoreCurrencyExpired = 0x88; // ObjectProperty
		constexpr auto EventStorePurchaseError = 0x90; // ObjectProperty
		constexpr auto EventStoreNotEnoughCurrency = 0x98; // ObjectProperty
		constexpr auto EventStoreLimitReached = 0xa0; // ObjectProperty
		constexpr auto EventStoreDisabled = 0xa8; // ObjectProperty
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x70; // int32_t
		constexpr auto SheetsPerTrail = 0x74; // int32_t
		constexpr auto MaxTrailCount = 0x78; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x7c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x80; // uint32_t : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x80; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x80; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x80; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x80; // uint32_t : 1
		constexpr auto bSpawnInitialParticle = 0x80; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x80; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x80; // uint32_t : 1
		constexpr auto bRenderTangents = 0x80; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x80; // uint32_t : 1
		constexpr auto bEnableTangentDiffInterpScale = 0x80; // uint32_t : 1
		constexpr auto RenderAxis = 0x84; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x88; // float
		constexpr auto TilingDistance = 0x8c; // float
		constexpr auto DistanceTessellationStepSize = 0x90; // float
		constexpr auto TangentTessellationScalar = 0x94; // float
	}

	namespace n_ARB_RadialImpulseActor {
		constexpr auto RenderComponent = 0x268; // ComponentProperty
		constexpr auto ImpulseComponent = 0x270; // ComponentProperty
		constexpr auto ImpulseCount = 0x278; // char
	}

	namespace n_USeqAct_DisplayMessage_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto Title = 0x168; // FString
		constexpr auto Body = 0x178; // FString
		constexpr auto bShowButtonOne = 0x188; // uint32_t : 1
		constexpr auto bShowButtonTwo = 0x188; // uint32_t : 1
		constexpr auto ButtonOneTitle = 0x190; // FString
		constexpr auto ButtonTwoTitle = 0x1a0; // FString
	}

	namespace n_URPC_ProductsDebugSetPainted_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto PaintID = 0x140; // int32_t
		constexpr auto Product = 0x148; // FOnlineProductData
		constexpr auto OnlineProduct = 0x188; // ObjectProperty
		constexpr auto __EventPaintedComplete__Delegate = 0x190; // DelegateProperty
	}

	namespace n_APylonSeed {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x268; // FPointer
	}

	namespace n_URPC_ProductsPlayerClear_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_U__GFxData_ProductFilter_TA__FilterProducts_D18AB61A430FAB34ED72EC9AEA326D14 {
		constexpr auto SaveData = 0x60; // ObjectProperty
		constexpr auto AllEquippedProducts = 0x68; // TArray<int32_t>
		constexpr auto AllEquippedOnlineProducts = 0x78; // TArray<FProductInstanceID>
	}

	namespace n_USeqAct_LoadMap_TA {
		constexpr auto Map = 0x160; // FString
	}

	namespace n_UAnimNotify {
		constexpr auto NotifyColor = 0x60; // FColor
	}

	namespace n_UOnlineGameDedicatedServerRegistration_X {
		constexpr auto MyConfig = 0x98; // ObjectProperty
		constexpr auto HeartbeatTimer = 0xa0; // ComponentProperty
		constexpr auto GameTimeTimer = 0xa8; // int32_t
		constexpr auto GameTimeSeconds = 0xac; // int32_t
		constexpr auto CreateGameServerRPC = 0xb0; // ObjectProperty
		constexpr auto UpdateGameServerRPC = 0xb8; // ObjectProperty
		constexpr auto PsyNetDisconnectShutdownTime = 0xc0; // float
	}

	namespace n_ULanMessage_HostResponse_X {
		constexpr auto Result = 0x68; // FServerResult
		constexpr auto ServerId = 0x118; // FString
		constexpr auto MetaData = 0x128; // FString
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x70; // uint32_t : 1
		constexpr auto bProcessBurstList = 0x70; // uint32_t : 1
	}

	namespace n_UGFxObject {
		constexpr auto Value = 0x60; // int32_t [0xc]
		constexpr auto SubWidgetBindings = 0x90; // TArray<FGFxWidgetBinding>
	}

	namespace n_U__GFxData_TourCreate_TA__GetDefaultDisabledMaps_66B71EDA4DAEE527FCF458827A1632B5 {
		constexpr auto DefaultMapNames = 0x60; // TArray<FName>
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x60; // float
		constexpr auto InitPosition = 0x64; // FVector
		constexpr auto InitRotation = 0x70; // FRotator
	}

	namespace n_URPC_TourGetSubscriptions_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Tournaments = 0x130; // TArray<ObjectProperty>
		constexpr auto CreatorOf = 0x140; // TArray<QWordProperty>
		constexpr auto AdminOf = 0x150; // TArray<QWordProperty>
		constexpr auto Registered = 0x160; // TArray<QWordProperty>
		constexpr auto ActiveTournamentID = 0x170; // QWordProperty
		constexpr auto ActiveTeam = 0x178; // FTourTeam
		constexpr auto Results = 0x1c0; // TArray<FTourResult>
	}

	namespace n_UMaterialExpressionDepthBiasedAlpha {
		constexpr auto bNormalize = 0xc0; // uint32_t : 1
		constexpr auto BiasScale = 0xc4; // float
		constexpr auto Alpha = 0xc8; // FExpressionInput
		constexpr auto Bias = 0x100; // FExpressionInput
	}

	namespace n_UCurrencyProductSet_TA {
		constexpr auto PlayerWallet = 0x60; // ObjectProperty
		constexpr auto CurrencyProducts = 0x68; // TArray<FCurrencyProduct>
	}

	namespace n_UTAsyncResult__PsyNetClientService_X {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x60; // FName
		constexpr auto SubUVDataOffset = 0x68; // int32_t
		constexpr auto EmitterRenderMode = 0x6c; // EEmitterRenderMode
		constexpr auto EmitterEditorColor = 0x70; // FColor
		constexpr auto LODLevels = 0x78; // TArray<ObjectProperty>
		constexpr auto ConvertedModules = 0x88; // uint32_t : 1
		constexpr auto bCollapsed = 0x88; // uint32_t : 1
		constexpr auto bIsSoloing = 0x88; // uint32_t : 1
		constexpr auto bCookedOut = 0x88; // uint32_t : 1
		constexpr auto bDisableForLowIntensity = 0x88; // uint32_t : 1
		constexpr auto PeakActiveParticles = 0x8c; // int32_t
		constexpr auto InitialAllocationCount = 0x90; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x94; // float
	}

	namespace n_AEmitterSpawnable {
		constexpr auto ParticleTemplate = 0x280; // ObjectProperty
	}

	namespace n_U__OnlineGameParty_X__HandleConfirmJoinGame_857E7C154BEF77D687EAC3B10272297F {
		constexpr auto InSettings = 0x60; // FPartyJoinMatchSettings
	}

	namespace n_URPC_RemovePlayerFromRole_X {
		constexpr auto RoleID = 0xe8; // int32_t
	}

	namespace n_URPC_JoinMatch_X {
		constexpr auto JoinType = 0xe8; // FName
		constexpr auto ServerName = 0xf0; // FString
		constexpr auto Password = 0x100; // FString
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto bEnabled = 0xa0; // uint32_t : 1
		constexpr auto FogHeight = 0xa4; // float
		constexpr auto FogDensity = 0xa8; // float
		constexpr auto FogHeightFalloff = 0xac; // float
		constexpr auto FogMaxOpacity = 0xb0; // float
		constexpr auto StartDistance = 0xb4; // float
		constexpr auto LightTerminatorAngle = 0xb8; // float
		constexpr auto OppositeLightBrightness = 0xbc; // float
		constexpr auto OppositeLightColor = 0xc0; // FColor
		constexpr auto LightInscatteringBrightness = 0xc4; // float
		constexpr auto LightInscatteringColor = 0xc8; // FColor
	}

	namespace n_USkelControlLimb {
		constexpr auto EffectorLocation = 0x100; // FVector
		constexpr auto EffectorLocationSpace = 0x10c; // EBoneControlSpace
		constexpr auto JointTargetLocationSpace = 0x10d; // EBoneControlSpace
		constexpr auto JointOffsetSpace = 0x10e; // EBoneControlSpace
		constexpr auto BoneAxis = 0x10f; // EAxis
		constexpr auto JointAxis = 0x110; // EAxis
		constexpr auto EffectorSpaceBoneName = 0x114; // FName
		constexpr auto JointTargetLocation = 0x11c; // FVector
		constexpr auto JointTargetSpaceBoneName = 0x128; // FName
		constexpr auto JointOffset = 0x130; // FVector
		constexpr auto JointOffsetBoneName = 0x13c; // FName
		constexpr auto bInvertBoneAxis = 0x144; // uint32_t : 1
		constexpr auto bInvertJointAxis = 0x144; // uint32_t : 1
		constexpr auto bRotateJoint = 0x144; // uint32_t : 1
		constexpr auto bMaintainEffectorRelRot = 0x144; // uint32_t : 1
		constexpr auto bTakeRotationFromEffectorSpace = 0x144; // uint32_t : 1
		constexpr auto bAllowStretching = 0x144; // uint32_t : 1
		constexpr auto StretchLimits = 0x148; // FVector2D
		constexpr auto StretchRollBoneName = 0x150; // FName
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto bAttenuate = 0x78; // uint32_t : 1
		constexpr auto bSpatialize = 0x78; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x78; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x7c; // float
		constexpr auto OmniRadius = 0x80; // float
		constexpr auto DistanceAlgorithm = 0x84; // SoundDistanceModel
		constexpr auto DistanceType = 0x85; // ESoundDistanceCalc
		constexpr auto RadiusMin = 0x88; // float
		constexpr auto RadiusMax = 0x8c; // float
		constexpr auto LPFRadiusMin = 0x90; // float
		constexpr auto LPFRadiusMax = 0x94; // float
	}

	namespace n_U__GameEvent_TA__GetGeneratedBotName_5F03F5664AD86E6FF7B303B20CB4F4D4 {
		constexpr auto BotName = 0x60; // FString
	}

	namespace n_ANetworkInputBuffer_CSTS_TA {
		constexpr auto Config = 0x2c8; // ObjectProperty
		constexpr auto LastPacketReceiveTime = 0x2d0; // float
		constexpr auto CurrentTimeDilation = 0x2d4; // float
		constexpr auto SequentialMissedInputs = 0x2d8; // int32_t
		constexpr auto BufferLowWatermark = 0x2dc; // int32_t
		constexpr auto BufferLowHistory = 0x2e0; // TArray<int32_t>
		constexpr auto BufferLowHistoryIndex = 0x2f0; // int32_t
		constexpr auto ExtraBuffer = 0x2f4; // int32_t
	}

	namespace n_UActorFactorySkeletalMesh {
		constexpr auto SkeletalMesh = 0xa0; // ObjectProperty
		constexpr auto AnimSet = 0xa8; // ObjectProperty
		constexpr auto AnimSequenceName = 0xb0; // FName
	}

	namespace n_APlayerController_Menu_TA {
		constexpr auto InputSequences = 0x968; // TArray<ObjectProperty>
		constexpr auto bExecutedKonamiCode = 0x978; // uint32_t : 1
		constexpr auto __EventKonamiCode__Delegate = 0x980; // DelegateProperty
		constexpr auto __EventBecomePrimaryPlayer__Delegate = 0x998; // DelegateProperty
	}

	namespace n_UOnlineMessageComponent_X {
		constexpr auto Serializer = 0x70; // ObjectProperty
		constexpr auto Compressor = 0x78; // ObjectProperty
		constexpr auto MessageHandlers = 0x80; // TArray<FOnlineMessageHandler>
		constexpr auto __MessageReceivedDelegate__Delegate = 0x90; // DelegateProperty
	}

	namespace n_U__GFxData_Controls_TA__ClearBinding_AF02F1A94044E4B390F9B9846A62F5D7 {
		constexpr auto Action = 0x60; // FName
	}

	namespace n_ASkyLightVolume_TA {
		constexpr auto SkyLight = 0x2a8; // ComponentProperty
		constexpr auto UpperPaintTeam = 0x2b0; // EPaintTeam
		constexpr auto LowerPaintTeam = 0x2b1; // EPaintTeam
	}

	namespace n_UGFxData_PartyMemberProfile_TA {
		constexpr auto PlayerID = 0x98; // FUniqueNetId
		constexpr auto Title = 0xe0; // FName
		constexpr auto TitleText = 0xe8; // FString
		constexpr auto TitleColor = 0xf8; // FColor
		constexpr auto TitleGlowColor = 0xfc; // FColor
		constexpr auto PlayerBorder = 0x100; // ComponentProperty
		constexpr auto GFxPlayerBorder = 0x108; // ObjectProperty
		constexpr auto PlayerBanner = 0x110; // ComponentProperty
		constexpr auto GFxPlayerBanner = 0x118; // ObjectProperty
		constexpr auto OnlineGameParty = 0x120; // ObjectProperty
	}

	namespace n_UPsyNetServiceProvider_X {
		constexpr auto ServiceCollection = 0x60; // ObjectProperty
		constexpr auto Subscriptions = 0x68; // ComponentProperty
		constexpr auto Channels = 0x70; // TArray<ObjectProperty>
		constexpr auto __EventServiceExecuted__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UGFxData_TourBracketTeam_TA {
		constexpr auto TeamID = 0x98; // QWordProperty
		constexpr auto TeamName = 0xa0; // FString
		constexpr auto TeamColorID = 0xb0; // int32_t
		constexpr auto CustomColorID = 0xb4; // int32_t
	}

	namespace n_UMusicStingersPreview_TA {
		constexpr auto ProductAsset = 0x60; // ObjectProperty
		constexpr auto StingerPreviewFadeCue = 0x68; // ObjectProperty
		constexpr auto PlayPreviewDelay = 0x70; // float
		constexpr auto bStreamerSafe = 0x74; // uint32_t : 1
		constexpr auto StreamerSafeConfig = 0x78; // ObjectProperty
	}

	namespace n_USoundNodeAttenuationAndGain {
		constexpr auto bAttenuate = 0x78; // uint32_t : 1
		constexpr auto bSpatialize = 0x78; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x78; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x7c; // float
		constexpr auto OmniRadius = 0x80; // float
		constexpr auto GainDistanceAlgorithm = 0x84; // SoundDistanceModel
		constexpr auto AttenuateDistanceAlgorithm = 0x85; // SoundDistanceModel
		constexpr auto DistanceType = 0x86; // ESoundDistanceCalc
		constexpr auto MinimalVolume = 0x88; // float
		constexpr auto RadiusMin = 0x8c; // float
		constexpr auto RadiusPeak = 0x90; // float
		constexpr auto RadiusMax = 0x94; // float
		constexpr auto LPFMinimal = 0x98; // float
		constexpr auto LPFRadiusMin = 0x9c; // float
		constexpr auto LPFRadiusPeak = 0xa0; // float
		constexpr auto LPFRadiusMax = 0xa4; // float
	}

	namespace n_UPsyTagSearchResult_X {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto PlayerName = 0xa8; // FString
		constexpr auto PsyTag = 0xb8; // FPsyTag
		constexpr auto PsyTagLastUpdatedTime = 0xd0; // QWordProperty
		constexpr auto PresenceState = 0xd8; // FString
		constexpr auto LastLoginTime = 0xe8; // QWordProperty
		constexpr auto NumFriendsInCommon = 0xf0; // int32_t
	}

	namespace n_UGameState_TA {
		constexpr auto Components = 0x60; // TArray<FComponentTemplate>
	}

	namespace n_U__TAsyncResult__UserBugReportUploadResult_TA__NotifyOnResult_D9673CBE4B4C57999FC0DEADD46816B1 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USkelControlSingleBone {
		constexpr auto bApplyTranslation = 0x100; // uint32_t : 1
		constexpr auto bApplyRotation = 0x100; // uint32_t : 1
		constexpr auto bAddTranslation = 0x100; // uint32_t : 1
		constexpr auto bAddRotation = 0x100; // uint32_t : 1
		constexpr auto bRemoveMeshRotation = 0x100; // uint32_t : 1
		constexpr auto BoneTranslation = 0x104; // FVector
		constexpr auto BoneTranslationSpace = 0x110; // EBoneControlSpace
		constexpr auto BoneRotationSpace = 0x111; // EBoneControlSpace
		constexpr auto TranslationSpaceBoneName = 0x114; // FName
		constexpr auto BoneRotation = 0x11c; // FRotator
		constexpr auto RotationSpaceBoneName = 0x128; // FName
	}

	namespace n_UInterpTrackSkelControlRotation_TA {
		constexpr auto SkelControlName = 0xe8; // FName
		constexpr auto RotAxis = 0xf0; // ERotationAxis
	}

	namespace n_UFogVolumeConstantDensityComponent {
		constexpr auto Density = 0xf0; // float
	}

	namespace n_U__AchievementManager_TA__HasItemQualityEquipped_D5277E844F84BF6C8D90CC9A95526FEC {
		constexpr auto Quality = 0x60; // EProductQuality
	}

	namespace n_UReservationsMaxPlayersMessage_X {
		constexpr auto MaxPlayerCount = 0x60; // int32_t
	}

	namespace n_USeqCond_Increment {
		constexpr auto IncrementAmount = 0x140; // int32_t
		constexpr auto ValueA = 0x144; // int32_t
		constexpr auto ValueB = 0x148; // int32_t
	}

	namespace n_USeqAct_EndTutorial_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
	}

	namespace n_UWheelAssetGenerator_4Wheels_TA {
		constexpr auto FrontLeft = 0x80; // ComponentProperty
		constexpr auto FrontRight = 0x88; // ComponentProperty
		constexpr auto BackLeft = 0x90; // ComponentProperty
		constexpr auto BackRight = 0x98; // ComponentProperty
	}

	namespace n_APostProcessVolume {
		constexpr auto Priority = 0x2a8; // float
		constexpr auto bOverrideWorldPostProcessChain = 0x2ac; // uint32_t : 1
		constexpr auto bEnabled = 0x2ac; // uint32_t : 1
		constexpr auto Settings = 0x2b0; // FPostProcessSettings
		constexpr auto NextLowerPriorityVolume = 0x418; // ObjectProperty
	}

	namespace n_UFeaturePrivilegeErrors {
		constexpr auto FPE_AgeRestriction = 0x80; // ObjectProperty
		constexpr auto FPE_ParentalLock = 0x88; // ObjectProperty
		constexpr auto FPE_OnlineAccount = 0x90; // ObjectProperty
		constexpr auto FPE_PremiumService = 0x98; // ObjectProperty
		constexpr auto FPE_TooManyLocalUsers = 0xa0; // ObjectProperty
		constexpr auto FPE_Unknown = 0xa8; // ObjectProperty
	}

	namespace n_USpeedTreeComponent {
		constexpr auto SpeedTree = 0x258; // ObjectProperty
		constexpr auto bUseLeafCards = 0x260; // uint32_t : 1
		constexpr auto bUseLeafMeshes = 0x260; // uint32_t : 1
		constexpr auto bUseBranches = 0x260; // uint32_t : 1
		constexpr auto bUseFronds = 0x260; // uint32_t : 1
		constexpr auto bUseBillboards = 0x260; // uint32_t : 1
		constexpr auto Lod3DStart = 0x264; // float
		constexpr auto Lod3DEnd = 0x268; // float
		constexpr auto LodBillboardStart = 0x26c; // float
		constexpr auto LodBillboardEnd = 0x270; // float
		constexpr auto LodLevelOverride = 0x274; // float
		constexpr auto Branch1Material = 0x278; // ObjectProperty
		constexpr auto Branch2Material = 0x280; // ObjectProperty
		constexpr auto FrondMaterial = 0x288; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x290; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x298; // ObjectProperty
		constexpr auto BillboardMaterial = 0x2a0; // ObjectProperty
		constexpr auto SpeedTreeIcon = 0x2a8; // ObjectProperty
		constexpr auto StaticLights = 0x2b0; // TArray<FSpeedTreeStaticLight>
		constexpr auto BranchLightMap = 0x2c0; // FLightMapRef
		constexpr auto FrondLightMap = 0x2c8; // FLightMapRef
		constexpr auto LeafMeshLightMap = 0x2d0; // FLightMapRef
		constexpr auto LeafCardLightMap = 0x2d8; // FLightMapRef
		constexpr auto BillboardLightMap = 0x2e0; // FLightMapRef
		constexpr auto RotationOnlyMatrix = 0x2f0; // FMatrix
		constexpr auto LightmassSettings = 0x330; // FLightmassPrimitiveSettings
	}

	namespace n_UPrivacyPolicySave_TA {
		constexpr auto AcceptedPrivatePolicies = 0xc8; // TArray<FLegalTextVersion>
	}

	namespace n_UPBRuleNodeWindowWall {
		constexpr auto CellMaxSizeX = 0x98; // float
		constexpr auto CellMaxSizeZ = 0x9c; // float
		constexpr auto WindowSizeX = 0xa0; // float
		constexpr auto WindowSizeZ = 0xa4; // float
		constexpr auto WindowPosX = 0xa8; // float
		constexpr auto WindowPosZ = 0xac; // float
		constexpr auto bScaleWindowWithCell = 0xb0; // uint32_t : 1
		constexpr auto YOffset = 0xb4; // float
		constexpr auto Material = 0xb8; // ObjectProperty
	}

	namespace n_UPartyMessageQueue_X {
		constexpr auto Pending = 0x70; // TArray<FPendingMessage>
		constexpr auto CurrentBatch = 0x80; // TArray<ObjectProperty>
		constexpr auto bPaused = 0x90; // uint32_t : 1
		constexpr auto BatchDelayTime = 0x94; // float
		constexpr auto __SendMessageServiceDelegate__Delegate = 0x98; // DelegateProperty
	}

	namespace n_USpeedTree {
		constexpr auto bLegacySpeedTree = 0x60; // uint32_t : 1
		constexpr auto SRH = 0x68; // FPointer
		constexpr auto LeafStaticShadowOpacity = 0x70; // float
		constexpr auto Branch1Material = 0x78; // ObjectProperty
		constexpr auto Branch2Material = 0x80; // ObjectProperty
		constexpr auto FrondMaterial = 0x88; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x90; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x98; // ObjectProperty
		constexpr auto BillboardMaterial = 0xa0; // ObjectProperty
		constexpr auto WindStrength = 0xa8; // float
		constexpr auto WindDirection = 0xac; // FVector
		constexpr auto LightingGuid = 0xb8; // FGuid
	}

	namespace n_URPC_ChatLog_TA {
		constexpr auto Messages = 0xe8; // TArray<FPlayerChatMessage>
		constexpr auto GameID = 0xf8; // FString
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
	}

	namespace n_UMaterialInstanceTimeVarying {
		constexpr auto bAutoActivateAll = 0x318; // uint32_t : 1
		constexpr auto Duration = 0x31c; // float
		constexpr auto FontParameterValues = 0x320; // TArray<FFontParameterValueOverTime>
		constexpr auto ScalarParameterValues = 0x330; // TArray<FScalarParameterValueOverTime>
		constexpr auto TextureParameterValues = 0x340; // TArray<FTextureParameterValueOverTime>
		constexpr auto VectorParameterValues = 0x350; // TArray<FVectorParameterValueOverTime>
		constexpr auto LinearColorParameterValues = 0x360; // TArray<FLinearColorParameterValueOverTime>
	}

	namespace n_UProductAsset_TA {
		constexpr auto Product = 0x60; // ObjectProperty
		constexpr auto Thumbnail = 0x68; // ObjectProperty
		constexpr auto ThumbnailRenderer = 0x70; // ObjectProperty
		constexpr auto ThumbnailMaterial = 0x78; // ObjectProperty
		constexpr auto ThumbnailKeyLightBrightnessScale = 0x80; // float
		constexpr auto ThumbnailCameraTranslationOffset = 0x84; // FVector
		constexpr auto ThumbnailCameraRotationOffset = 0x90; // FRotator
		constexpr auto ThumbnailCameraFOV = 0x9c; // float
		constexpr auto ThumbnailProductRotation = 0xa0; // FRotator
		constexpr auto ThumbnailProductTranslationOffset = 0xac; // FVector
		constexpr auto ThumbnailProductDrawScale3D = 0xb8; // FVector
		constexpr auto ParticleWarmupTime = 0xc4; // float
		constexpr auto AnimationWarmupTime = 0xc8; // float
		constexpr auto ParticleFakeVelocity = 0xcc; // FVector
		constexpr auto SkeletalMeshAnimationOffset = 0xd8; // FVector
		constexpr auto bForceRebuildThumbnail = 0xe4; // uint32_t : 1
		constexpr auto bPreviewDynamicThumbnail = 0xe4; // uint32_t : 1
		constexpr auto bServerSideOnlyWasSetInitially = 0xe4; // uint32_t : 1
		constexpr auto Attributes = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_Nameplate_TA {
		constexpr auto HideFullNameplateDistance = 0x98; // float
		constexpr auto PlayerName = 0xa0; // FString
		constexpr auto Team = 0xb0; // int32_t
		constexpr auto bHideFullNameplate = 0xb4; // uint32_t : 1
		constexpr auto bIsDistracted = 0xb4; // uint32_t : 1
		constexpr auto bLocalPlayer = 0xb4; // uint32_t : 1
		constexpr auto bShowShortcut = 0xb4; // uint32_t : 1
		constexpr auto NameplateComponent = 0xb8; // ComponentProperty
		constexpr auto GameplaySettings = 0xc0; // ObjectProperty
		constexpr auto Persona = 0xc8; // ObjectProperty
	}

	namespace n_UPBRuleNodeEdgeMesh {
		constexpr auto FlatThreshold = 0x98; // float
		constexpr auto MainXPullIn = 0x9c; // float
	}

	namespace n_U__StatusTriggerManager_TA__Init_21A7E9D14FB2ED320042C5BB1E0F4FFA {
		constexpr auto LP = 0x60; // ObjectProperty
		constexpr auto TriggerCondition = 0x68; // ObjectProperty
	}

	namespace n_ULensFlareComponent {
		constexpr auto Template = 0x258; // ObjectProperty
		constexpr auto PreviewInnerCone = 0x260; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x268; // ComponentProperty
		constexpr auto PreviewRadius = 0x270; // ComponentProperty
		constexpr auto bAutoActivate = 0x278; // uint32_t : 1
		constexpr auto bIsActive = 0x278; // uint32_t : 1
		constexpr auto bHasTranslucency = 0x278; // uint32_t : 1
		constexpr auto bHasUnlitTranslucency = 0x278; // uint32_t : 1
		constexpr auto bHasUnlitDistortion = 0x278; // uint32_t : 1
		constexpr auto bUsesSceneColor = 0x278; // uint32_t : 1
		constexpr auto bHasSeparateTranslucency = 0x278; // uint32_t : 1
		constexpr auto bUseTrueConeCalculation = 0x278; // uint32_t : 1
		constexpr auto bVisibleForMobile = 0x278; // uint32_t : 1
		constexpr auto OuterCone = 0x27c; // float
		constexpr auto InnerCone = 0x280; // float
		constexpr auto ConeFudgeFactor = 0x284; // float
		constexpr auto Radius = 0x288; // float
		constexpr auto MinStrength = 0x28c; // float
		constexpr auto SourceColor = 0x290; // FLinearColor
		constexpr auto Materials = 0x2a0; // TArray<FLensFlareElementMaterials>
		constexpr auto ReleaseResourcesFence = 0x2b0; // FPointer
		constexpr auto NextTraceTime = 0x2b8; // float
	}

	namespace n_USeqVar_String {
		constexpr auto StrValue = 0xe0; // FString
	}

	namespace n_URPC_PartySendInvite_X {
		constexpr auto InviteeID = 0xf8; // FUniqueNetId
	}

	namespace n_UGFxData_ChallengeTab_TA {
		constexpr auto ChallengeManager = 0xf0; // ObjectProperty
		constexpr auto TotalNormalChallenges = 0xf8; // int32_t
		constexpr auto CompletedNormalChallenges = 0xfc; // int32_t
		constexpr auto TotalPremiumChallenges = 0x100; // int32_t
		constexpr auto CompletedPremiumChallenges = 0x104; // int32_t
		constexpr auto bHasVisibleChallenges = 0x108; // uint32_t : 1
	}

	namespace n_USkelControlBlendTargetComponent_X {
		constexpr auto SkelControlName = 0xa8; // FName
	}

	namespace n_ASpecialPickup_BallFreeze_TA {
		constexpr auto FreezeBreakFXArchetype = 0x3c0; // ObjectProperty
		constexpr auto FreezeFXArchetype = 0x3c8; // ObjectProperty
		constexpr auto FreezeMIC = 0x3d0; // ObjectProperty
		constexpr auto FreezeMaterialParam = 0x3d8; // FName
		constexpr auto FreezeInterpTime = 0x3e0; // FInterpCurveFloat
		constexpr auto bMaintainMomentum = 0x3f8; // uint32_t : 1
		constexpr auto bTouched = 0x3f8; // uint32_t : 1
		constexpr auto TimeToStop = 0x3fc; // float
		constexpr auto StopMomentumPercentage = 0x400; // float
		constexpr auto FreezeSFX = 0x408; // ObjectProperty
		constexpr auto BreakSFX = 0x410; // ObjectProperty
		constexpr auto CopiedBallMesh = 0x418; // ComponentProperty
		constexpr auto Ball = 0x420; // ObjectProperty
		constexpr auto OrigLinearVelocity = 0x428; // FVector
		constexpr auto OrigAngularVelocity = 0x434; // FVector
		constexpr auto OrigSpeed = 0x440; // float
		constexpr auto RepOrigSpeed = 0x444; // float
		constexpr auto FreezeMat = 0x448; // ObjectProperty
		constexpr auto FreezeFX = 0x450; // ObjectProperty
	}

	namespace n_USeqAct_HighlightReelFinished_TA {
		constexpr auto __EventHighlightReelFinished__Delegate = 0x160; // DelegateProperty
	}

	namespace n_UProfileGameplaySave_TA {
		constexpr auto bMetric = 0xc8; // uint32_t : 1
		constexpr auto bTeamColoredBoostMeter = 0xc8; // uint32_t : 1
		constexpr auto bDisableDivisions = 0xc8; // uint32_t : 1
		constexpr auto bDisableDivisionsSports = 0xc8; // uint32_t : 1
		constexpr auto HUDMessageThreshold = 0xcc; // EHUDMessageLevel
		constexpr auto NameplateMode = 0xcd; // ENameplateMode
	}

	namespace n_UCameraState_StadiumSide_TA {
		constexpr auto TrackOffset = 0x180; // FVector
		constexpr auto TrackSize = 0x18c; // FVector
		constexpr auto TrackProximityOffsetSide = 0x198; // FInterpCurveFloat
		constexpr auto TrackProximityOffsetLerp = 0x1b0; // float
		constexpr auto FocusLerp = 0x1b8; // FInterpCurveFloat
		constexpr auto TrackLerpSide = 0x1d0; // FInterpCurveFloat
		constexpr auto TrackLerpForward = 0x1e8; // FInterpCurveFloat
		constexpr auto CarDistWeight = 0x200; // FInterpCurveFloat
		constexpr auto GoalDistWeight = 0x218; // FInterpCurveFloat
		constexpr auto BallPredictionTime = 0x230; // float
		constexpr auto MinFOV = 0x234; // float
		constexpr auto MaxFOV = 0x238; // float
		constexpr auto SmoothFOVLerp = 0x23c; // float
		constexpr auto TrackCenter = 0x240; // FVector
		constexpr auto TrackRight = 0x24c; // FVector
		constexpr auto TrackForward = 0x258; // FVector
		constexpr auto TrackStart = 0x264; // FVector
		constexpr auto TrackEnd = 0x270; // FVector
		constexpr auto FieldStart = 0x27c; // FVector
		constexpr auto FieldEnd = 0x288; // FVector
		constexpr auto SmoothedFocus = 0x294; // FVector
		constexpr auto SmoothedFieldPct = 0x2a0; // FVector
		constexpr auto SmoothedFOV = 0x2ac; // float
		constexpr auto SmoothedProximityOffsetSide = 0x2b0; // float
		constexpr auto bCut = 0x2b4; // uint32_t : 1
	}

	namespace n_UProductEquipProfileSlot_Custom_TA {
		constexpr auto SlotCustomization = 0x60; // EEnableSlotCustomization
		constexpr auto WhitelistProducts = 0x68; // TArray<ObjectProperty>
		constexpr auto BlacklistProducts = 0x78; // TArray<ObjectProperty>
		constexpr auto bUseWhitelistAsDefault = 0x88; // uint32_t : 1
	}

	namespace n_UUserBugReportMetaData_TA {
		constexpr auto AppSessionID = 0x60; // FGuid
		constexpr auto LevelSessionID = 0x70; // FGuid
		constexpr auto MatchGUID = 0x80; // FString
		constexpr auto MatchSeconds = 0x90; // int32_t
	}

	namespace n_UParticleModuleSizeMultiplyVelocity {
		constexpr auto VelocityMultiplier = 0x70; // FRawDistributionVector
		constexpr auto MultiplyX = 0x98; // uint32_t : 1
		constexpr auto MultiplyY = 0x98; // uint32_t : 1
		constexpr auto MultiplyZ = 0x98; // uint32_t : 1
		constexpr auto CapMaxSize = 0x9c; // FVector
		constexpr auto CapMinSize = 0xa8; // FVector
	}

	namespace n_UMcpClashMobBase {
		constexpr auto McpClashMobClassName = 0x78; // FString
		constexpr auto __OnQueryChallengeListComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDownloadChallengeFileComplete__Delegate = 0xa0; // DelegateProperty
		constexpr auto __OnAcceptChallengeComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnQueryChallengeUserStatusComplete__Delegate = 0xd0; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserProgressComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserRewardComplete__Delegate = 0x100; // DelegateProperty
	}

	namespace n_UDrawBoxComponent {
		constexpr auto BoxColor = 0x258; // FColor
		constexpr auto BoxMaterial = 0x260; // ObjectProperty
		constexpr auto BoxExtent = 0x268; // FVector
		constexpr auto bDrawWireBox = 0x274; // uint32_t : 1
		constexpr auto bDrawLitBox = 0x274; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x274; // uint32_t : 1
	}

	namespace n_UPlayerInput_X {
		constexpr auto GamepadDeadzone = 0x2f8; // float
		constexpr auto GamepadDeadzones = 0x300; // TArray<FGamepadDeadzoneSettings>
		constexpr auto KeyboardAxisBlendTime = 0x310; // float
		constexpr auto KeyboardAxisBlendTimes = 0x318; // TArray<FKeyboardAxisBlendSettings>
		constexpr auto CurrentKey = 0x328; // FName
		constexpr auto ActiveDPadButton = 0x330; // FName
		constexpr auto LastDoubleTapKey = 0x338; // FName
		constexpr auto DisabledActions = 0x340; // TArray<FName>
		constexpr auto DisabledActionsUntilNextUse = 0x350; // TArray<FName>
		constexpr auto Actions = 0x360; // TArray<FBindingAction>
		constexpr auto ControlPreset = 0x370; // ObjectProperty
		constexpr auto PCBindings = 0x378; // TArray<FPlayerBinding>
		constexpr auto GamepadBindings = 0x388; // TArray<FPlayerBinding>
		constexpr auto SteamInputBindings = 0x398; // TArray<FPlayerBinding>
		constexpr auto TapTime = 0x3a8; // float
		constexpr auto DoubleTapTime = 0x3ac; // float
		constexpr auto HeldBindings = 0x3b0; // TArray<FPointer>
		constexpr auto bDebugInput = 0x3c0; // uint32_t : 1
		constexpr auto bAbsorbCurrentKeyPress = 0x3c0; // uint32_t : 1
		constexpr auto RawAxisValues = 0x3c8; // TMap<None, None>
		constexpr auto __EventActionToggled__Delegate = 0x418; // DelegateProperty
		constexpr auto __EventBindingsChanged__Delegate = 0x430; // DelegateProperty
		constexpr auto __EventSetBindingsToUserBindings__Delegate = 0x448; // DelegateProperty
		constexpr auto __EventInitialized__Delegate = 0x460; // DelegateProperty
	}

	namespace n_U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_CB295B51485448C25950BEBC364D5BCD {
		constexpr auto InLobbyId = 0x60; // FUniqueLobbyId
		constexpr auto InviterId = 0x70; // FUniqueNetId
	}

	namespace n_UProductStat_TA {
		constexpr auto Label = 0x60; // FString
		constexpr auto Description = 0x70; // FString
		constexpr auto PRI = 0x80; // ObjectProperty
		constexpr auto ProductID = 0x88; // int32_t
		constexpr auto Car = 0x90; // ObjectProperty
		constexpr auto GameEvent = 0x98; // ObjectProperty
		constexpr auto SoccarGame = 0xa0; // ObjectProperty
		constexpr auto Value = 0xa8; // int32_t
		constexpr auto bOnlyMinorUnitsInMetricDistanceStrings = 0xac; // uint32_t : 1
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x60; // FString
		constexpr auto ResponseCode = 0x70; // int32_t
		constexpr auto Tag = 0x74; // int32_t
		constexpr auto Headers = 0x78; // FMap_Mirror
		constexpr auto StringResponse = 0xc8; // FString
		constexpr auto BinaryResponse = 0xd8; // TArray<char>
	}

	namespace n_UMergePartyEvent_TA {
		constexpr auto LeaderID = 0x60; // FUniqueNetId
		constexpr auto InviteeIDs = 0xa8; // TArray<FUniqueNetId>
		constexpr auto ConfirmedInvitees = 0xb8; // TArray<FUniqueNetId>
	}

	namespace n_USeqAct_Destroy {
		constexpr auto bDestroyBasedActors = 0x160; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x168; // TArray<FNone*>
	}

	namespace n_UOnlineLegalText_X {
		constexpr auto Folder = 0x70; // FString
		constexpr auto CachedData = 0x80; // ObjectProperty
		constexpr auto AppendedPath = 0x88; // FString
		constexpr auto __EventNewText__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UUIDataStore_StringAliasMap {
		constexpr auto MenuInputMapArray = 0xa0; // TArray<FUIMenuInputMap>
		constexpr auto MenuInputSets = 0xb0; // FMap_Mirror
		constexpr auto PlayerIndex = 0x100; // int32_t
	}

	namespace n_ACarComponent_AirActivate_TA {
		constexpr auto AirActivateCount = 0x2e0; // int32_t
		constexpr auto MaxAirActivateCount = 0x2e4; // int32_t
	}

	namespace n_ULightBarComponent_TA {
		constexpr auto Team = 0xa0; // ObjectProperty
		constexpr auto bStrobeActive = 0xa8; // uint32_t : 1
		constexpr auto bRandStrobeColor = 0xa8; // uint32_t : 1
		constexpr auto StrobeCount = 0xac; // int32_t
		constexpr auto MaxStrobeCount = 0xb0; // int32_t
		constexpr auto StrobeTime = 0xb4; // float
		constexpr auto StrobeColorList = 0xb8; // TArray<FColor>
		constexpr auto StrobeColorIndex = 0xc8; // int32_t
	}

	namespace n_UProfileLoadoutSave_TA {
		constexpr auto LoadoutSets = 0xc8; // TArray<ObjectProperty>
		constexpr auto EquippedLoadoutSet = 0xd8; // ObjectProperty
		constexpr auto PlayerTitle = 0xe0; // FName
		constexpr auto PreviewTeamIndex = 0xe8; // int32_t
		constexpr auto MusicStingerInstanceID = 0xf0; // FProductInstanceID
		constexpr auto __EventEquippedLoadoutChanged__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventProductEquipped__Delegate = 0x118; // DelegateProperty
		constexpr auto __EventOnlineProductEquipped__Delegate = 0x130; // DelegateProperty
		constexpr auto __EventPreviewTeamChanged__Delegate = 0x148; // DelegateProperty
		constexpr auto __PlayerTitle__ChangeNotify = 0x160; // DelegateProperty
		constexpr auto __MusicStingerInstanceID__ChangeNotify = 0x178; // DelegateProperty
	}

	namespace n_UGFxData_Persona_TA {
		constexpr auto Persona = 0x98; // ObjectProperty
		constexpr auto PlayerAvatar = 0xa0; // ObjectProperty
	}

	namespace n_ASkeletalMeshActorMAT_IntroCar_TA {
		constexpr auto ViewIndex = 0x3d0; // int32_t
		constexpr auto AngleOffset = 0x3d4; // FRotator
		constexpr auto IntroCarsTemplates = 0x3e0; // ObjectProperty
	}

	namespace n_UEOSMetricEvent_X {
		constexpr auto EventName = 0x60; // FName
	}

	namespace n_AReverbVolume {
		constexpr auto Priority = 0x2a8; // float
		constexpr auto bEnabled = 0x2ac; // uint32_t : 1
		constexpr auto Settings = 0x2b0; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x2c0; // FInteriorSettings
		constexpr auto NextLowerPriorityVolume = 0x2e8; // ObjectProperty
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x70; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x98; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // uint32_t : 1
		constexpr auto bKillInside = 0xc0; // uint32_t : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // uint32_t : 1
	}

	namespace n_UOnlineAuthInterfaceImpl {
		constexpr auto VfTable_IOnlineAuthInterface = 0x60; // FPointer
		constexpr auto AuthCodeRequests = 0x68; // TArray<FAuthCodeRequest>
		constexpr auto NextAuthCodeID = 0x78; // int32_t
		constexpr auto OwningSubsystem = 0x80; // ObjectProperty
		constexpr auto bAuthReady = 0x88; // uint32_t : 1
		constexpr auto ClientAuthSessions = 0x90; // FSparseArray_Mirror
		constexpr auto ServerAuthSessions = 0xc8; // FSparseArray_Mirror
		constexpr auto PeerAuthSessions = 0x100; // FSparseArray_Mirror
		constexpr auto LocalClientAuthSessions = 0x138; // FSparseArray_Mirror
		constexpr auto LocalServerAuthSessions = 0x170; // FSparseArray_Mirror
		constexpr auto LocalPeerAuthSessions = 0x1a8; // FSparseArray_Mirror
		constexpr auto AuthReadyDelegates = 0x1e0; // TArray<DelegateProperty>
		constexpr auto ClientAuthRequestDelegates = 0x1f0; // TArray<DelegateProperty>
		constexpr auto ServerAuthRequestDelegates = 0x200; // TArray<DelegateProperty>
		constexpr auto ClientAuthResponseDelegates = 0x210; // TArray<DelegateProperty>
		constexpr auto ServerAuthResponseDelegates = 0x220; // TArray<DelegateProperty>
		constexpr auto ClientAuthCompleteDelegates = 0x230; // TArray<DelegateProperty>
		constexpr auto ServerAuthCompleteDelegates = 0x240; // TArray<DelegateProperty>
		constexpr auto ClientAuthEndSessionRequestDelegates = 0x250; // TArray<DelegateProperty>
		constexpr auto ServerAuthRetryRequestDelegates = 0x260; // TArray<DelegateProperty>
		constexpr auto ClientConnectionCloseDelegates = 0x270; // TArray<DelegateProperty>
		constexpr auto ServerConnectionCloseDelegates = 0x280; // TArray<DelegateProperty>
		constexpr auto __OnAuthReady__Delegate = 0x290; // DelegateProperty
		constexpr auto __OnClientAuthRequest__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __OnServerAuthRequest__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __OnClientAuthResponse__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __OnServerAuthResponse__Delegate = 0x2f0; // DelegateProperty
		constexpr auto __OnClientAuthComplete__Delegate = 0x308; // DelegateProperty
		constexpr auto __OnServerAuthComplete__Delegate = 0x320; // DelegateProperty
		constexpr auto __OnClientAuthEndSessionRequest__Delegate = 0x338; // DelegateProperty
		constexpr auto __OnServerAuthRetryRequest__Delegate = 0x350; // DelegateProperty
		constexpr auto __OnClientConnectionClose__Delegate = 0x368; // DelegateProperty
		constexpr auto __OnServerConnectionClose__Delegate = 0x380; // DelegateProperty
		constexpr auto __OnReceivedAuthCode__Delegate = 0x398; // DelegateProperty
		constexpr auto __OnAccountAuthorization__Delegate = 0x3b0; // DelegateProperty
	}

	namespace n_UCrowdSounds_TA {
		constexpr auto Sound = 0x60; // ObjectProperty
		constexpr auto GoalScored = 0x68; // FCrowdExcitementSounds
		constexpr auto ShotAttempt = 0x90; // FCrowdExcitementSounds
		constexpr auto OpenGoal = 0xb8; // FCrowdExcitementSounds
		constexpr auto Save = 0xe0; // FCrowdExcitementSounds
		constexpr auto Aerial = 0x108; // FCrowdExcitementSounds
		constexpr auto LongTimeNearGoal = 0x130; // FCrowdExcitementSounds
		constexpr auto FastBreak = 0x158; // FCrowdExcitementSounds
		constexpr auto Hit0Second = 0x180; // FCrowdExcitementSounds
		constexpr auto AnyDemolition = 0x1a8; // FCrowdExcitementSounds
		constexpr auto RelevantDemolition = 0x1d0; // FCrowdExcitementSounds
		constexpr auto GameStart = 0x1f8; // FCrowdExcitementSounds
		constexpr auto RoundStart = 0x220; // FCrowdExcitementSounds
		constexpr auto KickoffTouch = 0x248; // FCrowdExcitementSounds
		constexpr auto TenseClear = 0x270; // FCrowdExcitementSounds
		constexpr auto MatchEndCountDown = 0x298; // TArray<FCrowdExcitementSounds>
		constexpr auto LowEnergyChant = 0x2a8; // ObjectProperty
		constexpr auto OvertimeStart = 0x2b0; // ObjectProperty
		constexpr auto Win = 0x2b8; // ObjectProperty
		constexpr auto Lose = 0x2c0; // ObjectProperty
		constexpr auto Forfeit = 0x2c8; // ObjectProperty
		constexpr auto MatchEndedEncore = 0x2d0; // ObjectProperty
		constexpr auto MatchEndedEncoreDelay = 0x2d8; // float
	}

	namespace n_USeqCond_CompareFloat {
		constexpr auto ValueA = 0x140; // float
		constexpr auto ValueB = 0x144; // float
	}

	namespace n_UConnectionQualityConfig_TA {
		constexpr auto ClientPollRate = 0x78; // float
		constexpr auto ClientDelayBeforePolling = 0x7c; // float
		constexpr auto ClientUpdateDelay = 0x80; // float
		constexpr auto MediocrePing = 0x84; // float
		constexpr auto BadPing = 0x88; // float
		constexpr auto RecentBadPingFlagPercent = 0x8c; // float
		constexpr auto BadAckTime = 0x90; // float
		constexpr auto BadReceiveTime = 0x94; // float
		constexpr auto MediocreJitter = 0x98; // float
		constexpr auto BadJitter = 0x9c; // float
		constexpr auto JitterRollingAverageTimespan = 0xa0; // float
		constexpr auto RecentBadJitterFlagPercent = 0xa4; // float
		constexpr auto MediocrePacketLossPercent = 0xa8; // float
		constexpr auto BadPacketLossPercent = 0xac; // float
		constexpr auto PacketLossRollingAverageTimespan = 0xb0; // float
		constexpr auto RecentBadPacketLossFlagPercent = 0xb4; // float
		constexpr auto RecentPoorConnectionRollingTimespan = 0xb8; // float
		constexpr auto NotificationDelayInDays = 0xbc; // float
		constexpr auto bShouldProvidePoorConnectionHelp = 0xc0; // uint32_t : 1
		constexpr auto PoorConnectionHelpNotificationURL = 0xc8; // FString
	}

	namespace n_URPC_PsyNetGetVanities_TA {
		constexpr auto VanityTypes = 0xe8; // TArray<int32_t>
		constexpr auto PlayerIDs = 0xf8; // TArray<FUniqueNetId>
		constexpr auto VanityLoadouts = 0x108; // TArray<FVanityProductInfo>
		constexpr auto VanityProducts = 0x118; // TArray<FVanityProductData>
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x70; // FName
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0xa0; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0xa0; // uint32_t : 1
		constexpr auto bRenewSource = 0xa0; // uint32_t : 1
		constexpr auto bInheritSourceVel = 0xa0; // uint32_t : 1
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto SelectionMethod = 0xd0; // EAttractorParticleSelectionMethod
		constexpr auto LastSelIndex = 0xd4; // int32_t
	}

	namespace n_UUdpPingBeaconClient_X {
		constexpr auto __EventPong__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventLost__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_U__OnlineClubProvider_X__HandleClubSynced_B9380B9245FBEAFB11A209AB7FD69184 {
		constexpr auto RPC = 0x60; // ObjectProperty
	}

	namespace n_UParticleModuleAttractorSkelVertSurface {
		constexpr auto FalloffType = 0x70; // EVertSurfaceAttractorFalloffType
		constexpr auto DestinationType = 0x71; // EAttractorSkelVertSurfaceDestination
		constexpr auto bParticleLifeRelative = 0x74; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x74; // uint32_t : 1
		constexpr auto FalloffExponent = 0x78; // FRawDistributionFloat
		constexpr auto Range = 0xa0; // FRawDistributionFloat
		constexpr auto Strength = 0xc8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xf0; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x118; // FRawDistributionFloat
		constexpr auto DragRadius = 0x140; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x168; // FVector
		constexpr auto SkelMeshActorParamName = 0x174; // FName
		constexpr auto EditorSkelMesh = 0x180; // ObjectProperty
		constexpr auto ValidAssociatedBones = 0x188; // TArray<FName>
		constexpr auto NormalToCompare = 0x198; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x1a4; // float
		constexpr auto NormalCheckTolerance = 0x1a8; // float
		constexpr auto ValidMaterialIndices = 0x1b0; // TArray<int32_t>
	}

	namespace n_UErrorType {
		constexpr auto LocalizationKey = 0x60; // FString
	}

	namespace n_U_TourTypes_TA {
		constexpr auto DisabledMutatorCategories = 0x60; // TArray<FName>
		constexpr auto DisabledMutatorSettings = 0x70; // TArray<FName>
	}

	namespace n_UTourDetailsSync_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto PollIntervalSeconds = 0x68; // float
		constexpr auto PlayerID = 0x70; // FUniqueNetId
		constexpr auto Settings = 0xb8; // ObjectProperty
		constexpr auto GetBracketTask = 0xc0; // ObjectProperty
	}

	namespace n_UEngine {
		constexpr auto GameShareClassName = 0x68; // FString
		constexpr auto GameShareClass = 0x78; // FNone*
		constexpr auto EngineShareClassName = 0x80; // FString
		constexpr auto EngineShare = 0x90; // ObjectProperty
		constexpr auto BuildID = 0x98; // int32_t
		constexpr auto NetDriverSecurity = 0xa0; // ObjectProperty
		constexpr auto TinyFont = 0xa8; // ObjectProperty
		constexpr auto TinyFontName = 0xb0; // FString
		constexpr auto SmallFont = 0xc0; // ObjectProperty
		constexpr auto SmallFontName = 0xc8; // FString
		constexpr auto MediumFont = 0xd8; // ObjectProperty
		constexpr auto MediumFontName = 0xe0; // FString
		constexpr auto LargeFont = 0xf0; // ObjectProperty
		constexpr auto LargeFontName = 0xf8; // FString
		constexpr auto SubtitleFont = 0x108; // ObjectProperty
		constexpr auto SubtitleFontName = 0x110; // FString
		constexpr auto ScalableFont = 0x120; // ObjectProperty
		constexpr auto ScalableFontName = 0x128; // FString
		constexpr auto AdditionalFonts = 0x138; // TArray<ObjectProperty>
		constexpr auto AdditionalFontNames = 0x148; // TArray<FString>
		constexpr auto ConsoleClass = 0x158; // FNone*
		constexpr auto ConsoleClassName = 0x160; // FString
		constexpr auto GameViewportClientClass = 0x170; // FNone*
		constexpr auto GameViewportClientClassName = 0x178; // FString
		constexpr auto DataStoreClientClass = 0x188; // FNone*
		constexpr auto DataStoreClientClassName = 0x190; // FString
		constexpr auto LocalPlayerClass = 0x1a0; // FNone*
		constexpr auto LocalPlayerClassName = 0x1a8; // FString
		constexpr auto DefaultMaterial = 0x1b8; // ObjectProperty
		constexpr auto DefaultMaterialName = 0x1c0; // FString
		constexpr auto DefaultDecalMaterial = 0x1d0; // ObjectProperty
		constexpr auto DefaultDecalMaterialName = 0x1d8; // FString
		constexpr auto DefaultTexture = 0x1e8; // ObjectProperty
		constexpr auto DefaultTextureName = 0x1f0; // FString
		constexpr auto WireframeMaterial = 0x200; // ObjectProperty
		constexpr auto WireframeMaterialName = 0x208; // FString
		constexpr auto EmissiveTexturedMaterial = 0x218; // ObjectProperty
		constexpr auto EmissiveTexturedMaterialName = 0x220; // FString
		constexpr auto GeomMaterial = 0x230; // ObjectProperty
		constexpr auto GeomMaterialName = 0x238; // FString
		constexpr auto DefaultFogVolumeMaterial = 0x248; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterialName = 0x250; // FString
		constexpr auto TickMaterial = 0x260; // ObjectProperty
		constexpr auto TickMaterialName = 0x268; // FString
		constexpr auto CrossMaterial = 0x278; // ObjectProperty
		constexpr auto CrossMaterialName = 0x280; // FString
		constexpr auto LevelColorationLitMaterial = 0x290; // ObjectProperty
		constexpr auto LevelColorationLitMaterialName = 0x298; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x2a8; // ObjectProperty
		constexpr auto LevelColorationUnlitMaterialName = 0x2b0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x2c0; // ObjectProperty
		constexpr auto LightingTexelDensityName = 0x2c8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x2d8; // ObjectProperty
		constexpr auto ShadedLevelColorationLitMaterialName = 0x2e0; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x2f0; // ObjectProperty
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x2f8; // FString
		constexpr auto RemoveSurfaceMaterial = 0x308; // ObjectProperty
		constexpr auto RemoveSurfaceMaterialName = 0x310; // FString
		constexpr auto VertexColorMaterial = 0x320; // ObjectProperty
		constexpr auto VertexColorMaterialName = 0x328; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x338; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x340; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x350; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x358; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x368; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x370; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x380; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x388; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x398; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x3a0; // FString
		constexpr auto HeatmapMaterial = 0x3b0; // ObjectProperty
		constexpr auto HeatmapMaterialName = 0x3b8; // FString
		constexpr auto BoneWeightMaterial = 0x3c8; // ObjectProperty
		constexpr auto BoneWeightMaterialName = 0x3d0; // FString
		constexpr auto TangentColorMaterial = 0x3e0; // ObjectProperty
		constexpr auto TangentColorMaterialName = 0x3e8; // FString
		constexpr auto MobileEmulationMasterMaterial = 0x3f8; // ObjectProperty
		constexpr auto MobileEmulationMasterMaterialName = 0x400; // FString
		constexpr auto ProcBuildingSimpleMaterial = 0x410; // ObjectProperty
		constexpr auto ProcBuildingSimpleMaterialName = 0x418; // FString
		constexpr auto BuildingQuadStaticMesh = 0x428; // ObjectProperty
		constexpr auto BuildingQuadStaticMeshName = 0x430; // FString
		constexpr auto ProcBuildingLODColorTexelsPerWorldUnit = 0x440; // float
		constexpr auto ProcBuildingLODLightingTexelsPerWorldUnit = 0x444; // float
		constexpr auto MaxProcBuildingLODColorTextureSize = 0x448; // int32_t
		constexpr auto MaxProcBuildingLODLightingTextureSize = 0x44c; // int32_t
		constexpr auto UseProcBuildingLODTextureCropping = 0x450; // uint32_t : 1
		constexpr auto ForcePowerOfTwoProcBuildingLODTextures = 0x450; // uint32_t : 1
		constexpr auto bCombineSimilarMappings = 0x450; // uint32_t : 1
		constexpr auto bRenderLightMapDensityGrayscale = 0x450; // uint32_t : 1
		constexpr auto bScreenshotRequested = 0x450; // uint32_t : 1
		constexpr auto bUseSound = 0x450; // uint32_t : 1
		constexpr auto bUseBackgroundLevelStreaming = 0x450; // uint32_t : 1
		constexpr auto bSubtitlesEnabled = 0x450; // uint32_t : 1
		constexpr auto bSubtitlesForcedOff = 0x450; // uint32_t : 1
		constexpr auto bSmoothFrameRate = 0x450; // uint32_t : 1
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x450; // uint32_t : 1
		constexpr auto bShouldGenerateSimpleLightmaps = 0x450; // uint32_t : 1
		constexpr auto bForceStaticTerrain = 0x450; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x450; // uint32_t : 1
		constexpr auto bUsePostProcessEffects = 0x450; // uint32_t : 1
		constexpr auto bOnScreenKismetWarnings = 0x450; // uint32_t : 1
		constexpr auto bEnableKismetLogging = 0x450; // uint32_t : 1
		constexpr auto bAllowMatureLanguage = 0x450; // uint32_t : 1
		constexpr auto bDisablePhysXHardwareSupport = 0x450; // uint32_t : 1
		constexpr auto bEnablePhysX = 0x450; // uint32_t : 1
		constexpr auto bPauseOnLossOfFocus = 0x450; // uint32_t : 1
		constexpr auto bCheckParticleRenderSize = 0x450; // uint32_t : 1
		constexpr auto bEnableColorClear = 0x450; // uint32_t : 1
		constexpr auto bEnableSwitchRenderMode = 0x450; // uint32_t : 1
		constexpr auto bShowAllHiddenObjects = 0x450; // uint32_t : 1
		constexpr auto bAreConstraintsDirty = 0x450; // uint32_t : 1
		constexpr auto bHasPendingGlobalReattach = 0x450; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessages = 0x450; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x450; // uint32_t : 1
		constexpr auto bSuppressMapWarnings = 0x450; // uint32_t : 1
		constexpr auto bCookSeparateSharedMPGameContent = 0x450; // uint32_t : 1
		constexpr auto bUseRecastNavMesh = 0x450; // uint32_t : 1
		constexpr auto bDisableAILogging = 0x454; // uint32_t : 1
		constexpr auto bUseNormalMapsForSimpleLightMaps = 0x454; // uint32_t : 1
		constexpr auto bStartWithMatineeCapture = 0x454; // uint32_t : 1
		constexpr auto bCompressMatineeCapture = 0x454; // uint32_t : 1
		constexpr auto bLockReadOnlyLevels = 0x454; // uint32_t : 1
		constexpr auto MaxRMSDForCombiningMappings = 0x458; // float
		constexpr auto ImageReflectionTextureSize = 0x45c; // int32_t
		constexpr auto LightingOnlyBrightness = 0x460; // FLinearColor
		constexpr auto LightComplexityColors = 0x470; // TArray<FColor>
		constexpr auto ShaderComplexityColors = 0x480; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x490; // float
		constexpr auto MinTextureDensity = 0x494; // float
		constexpr auto IdealTextureDensity = 0x498; // float
		constexpr auto MaxTextureDensity = 0x49c; // float
		constexpr auto MinLightMapDensity = 0x4a0; // float
		constexpr auto IdealLightMapDensity = 0x4a4; // float
		constexpr auto MaxLightMapDensity = 0x4a8; // float
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x4ac; // float
		constexpr auto RenderLightMapDensityColorScale = 0x4b0; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x4b4; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x4c4; // FLinearColor
		constexpr auto StatColorMappings = 0x4d8; // TArray<FStatColorMapping>
		constexpr auto EditorBrushMaterial = 0x4e8; // ObjectProperty
		constexpr auto EditorBrushMaterialName = 0x4f0; // FString
		constexpr auto DefaultPhysMaterial = 0x500; // ObjectProperty
		constexpr auto DefaultPhysMaterialName = 0x508; // FString
		constexpr auto LandscapeHolePhysMaterial = 0x518; // ObjectProperty
		constexpr auto LandscapeHolePhysMaterialName = 0x520; // FString
		constexpr auto ApexDamageParams = 0x530; // ObjectProperty
		constexpr auto ApexDamageParamsName = 0x538; // FString
		constexpr auto TerrainErrorMaterial = 0x548; // ObjectProperty
		constexpr auto TerrainErrorMaterialName = 0x550; // FString
		constexpr auto TerrainMaterialMaxTextureCount = 0x560; // int32_t
		constexpr auto TerrainTessellationCheckCount = 0x564; // int32_t
		constexpr auto TerrainTessellationCheckDistance = 0x568; // float
		constexpr auto OnlineSubsystemClass = 0x570; // FNone*
		constexpr auto DefaultOnlineSubsystemName = 0x578; // FString
		constexpr auto DefaultPostProcess = 0x588; // ObjectProperty
		constexpr auto DefaultPostProcessName = 0x590; // FString
		constexpr auto ThumbnailSkeletalMeshPostProcess = 0x5a0; // ObjectProperty
		constexpr auto ThumbnailSkeletalMeshPostProcessName = 0x5a8; // FString
		constexpr auto ThumbnailParticleSystemPostProcess = 0x5b8; // ObjectProperty
		constexpr auto ThumbnailParticleSystemPostProcessName = 0x5c0; // FString
		constexpr auto ThumbnailMaterialPostProcess = 0x5d0; // ObjectProperty
		constexpr auto ThumbnailMaterialPostProcessName = 0x5d8; // FString
		constexpr auto DefaultUIScenePostProcess = 0x5e8; // ObjectProperty
		constexpr auto DefaultUIScenePostProcessName = 0x5f0; // FString
		constexpr auto DefaultUICaretMaterial = 0x600; // ObjectProperty
		constexpr auto DefaultUICaretMaterialName = 0x608; // FString
		constexpr auto SceneCaptureReflectActorMaterial = 0x618; // ObjectProperty
		constexpr auto SceneCaptureReflectActorMaterialName = 0x620; // FString
		constexpr auto SceneCaptureCubeActorMaterial = 0x630; // ObjectProperty
		constexpr auto SceneCaptureCubeActorMaterialName = 0x638; // FString
		constexpr auto ScreenDoorNoiseTexture = 0x648; // ObjectProperty
		constexpr auto ScreenDoorNoiseTextureName = 0x650; // FString
		constexpr auto ImageGrainNoiseTexture = 0x660; // ObjectProperty
		constexpr auto ImageGrainNoiseTextureName = 0x668; // FString
		constexpr auto RandomAngleTexture = 0x678; // ObjectProperty
		constexpr auto RandomAngleTextureName = 0x680; // FString
		constexpr auto RandomNormalTexture = 0x690; // ObjectProperty
		constexpr auto RandomNormalTextureName = 0x698; // FString
		constexpr auto RandomMirrorDiscTexture = 0x6a8; // ObjectProperty
		constexpr auto RandomMirrorDiscTextureName = 0x6b0; // FString
		constexpr auto WeightMapPlaceholderTexture = 0x6c0; // ObjectProperty
		constexpr auto WeightMapPlaceholderTextureName = 0x6c8; // FString
		constexpr auto LightMapDensityTexture = 0x6d8; // ObjectProperty
		constexpr auto LightMapDensityTextureName = 0x6e0; // FString
		constexpr auto SMAAAreaTexture = 0x6f0; // ObjectProperty
		constexpr auto SMAAAreaTextureName = 0x6f8; // FString
		constexpr auto SMAASearchTexture = 0x708; // ObjectProperty
		constexpr auto SMAASearchTextureName = 0x710; // FString
		constexpr auto LightMapDensityNormal = 0x720; // ObjectProperty
		constexpr auto LightMapDensityNormalName = 0x728; // FString
		constexpr auto DefaultSound = 0x738; // ObjectProperty
		constexpr auto DefaultSoundName = 0x740; // FString
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x750; // float
		constexpr auto Client = 0x758; // ObjectProperty
		constexpr auto GamePlayers = 0x760; // TArray<ObjectProperty>
		constexpr auto GameViewport = 0x770; // ObjectProperty
		constexpr auto DeferredCommands = 0x778; // TArray<FString>
		constexpr auto TickCycles = 0x788; // int32_t
		constexpr auto GameCycles = 0x78c; // int32_t
		constexpr auto ClientCycles = 0x790; // int32_t
		constexpr auto MaxSmoothedFrameRate = 0x794; // float
		constexpr auto MinSmoothedFrameRate = 0x798; // float
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x79c; // int32_t
		constexpr auto RemoteControlExec = 0x7a0; // FPointer
		constexpr auto MobileMaterialEmulator = 0x7a8; // FPointer
		constexpr auto C_WorldBox = 0x7b0; // FColor
		constexpr auto C_BrushWire = 0x7b4; // FColor
		constexpr auto C_AddWire = 0x7b8; // FColor
		constexpr auto C_SubtractWire = 0x7bc; // FColor
		constexpr auto C_SemiSolidWire = 0x7c0; // FColor
		constexpr auto C_NonSolidWire = 0x7c4; // FColor
		constexpr auto C_WireBackground = 0x7c8; // FColor
		constexpr auto C_ScaleBoxHi = 0x7cc; // FColor
		constexpr auto C_VolumeCollision = 0x7d0; // FColor
		constexpr auto C_BSPCollision = 0x7d4; // FColor
		constexpr auto C_OrthoBackground = 0x7d8; // FColor
		constexpr auto C_Volume = 0x7dc; // FColor
		constexpr auto C_BrushShape = 0x7e0; // FColor
		constexpr auto StreamingDistanceFactor = 0x7e4; // float
		constexpr auto ScoutClassName = 0x7e8; // FString
		constexpr auto TransitionType = 0x7f8; // ETransitionType
		constexpr auto TransitionDescription = 0x800; // FString
		constexpr auto TransitionGameType = 0x810; // FString
		constexpr auto MeshLODRange = 0x820; // float
		constexpr auto CameraRotationThreshold = 0x824; // float
		constexpr auto CameraTranslationThreshold = 0x828; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x82c; // float
		constexpr auto PercentUnoccludedRequeries = 0x830; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x834; // float
		constexpr auto MaxFluidNumVerts = 0x838; // int32_t
		constexpr auto FluidSimulationTimeLimit = 0x83c; // float
		constexpr auto MaxParticleResize = 0x840; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x844; // int32_t
		constexpr auto MaxParticleVertexMemory = 0x848; // int32_t
		constexpr auto MaxParticleSpriteCount = 0x84c; // int32_t
		constexpr auto MaxParticleSubUVCount = 0x850; // int32_t
		constexpr auto BeginUPTryCount = 0x854; // int32_t
		constexpr auto PendingDroppedNotes = 0x858; // TArray<FDropNoteInfo>
		constexpr auto DynamicCoverMeshComponentName = 0x868; // FString
		constexpr auto NetClientTicksPerSecond = 0x878; // float
		constexpr auto MaxTrackedOcclusionIncrement = 0x87c; // float
		constexpr auto TrackedOcclusionStepSize = 0x880; // float
		constexpr auto DefaultSelectedMaterialColor = 0x884; // FLinearColor
		constexpr auto DefaultHoveredMaterialColor = 0x894; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x8a4; // FLinearColor
		constexpr auto UnselectedMaterialColor = 0x8b4; // FLinearColor
		constexpr auto IgnoreSimulatedFuncWarnings = 0x8c8; // TArray<FName>
		constexpr auto ScreenSaverInhibitorSemaphore = 0x8d8; // int32_t
		constexpr auto ScreenSaverInhibitor = 0x8e0; // FPointer
		constexpr auto GlobalTranslationContext = 0x8e8; // ObjectProperty
		constexpr auto LoadingMovieStartTime = 0x8f0; // FDouble
		constexpr auto MatineeCaptureName = 0x8f8; // FString
		constexpr auto MatineePackageCaptureName = 0x908; // FString
		constexpr auto VisibleLevelsForMatineeCapture = 0x918; // FString
		constexpr auto MatineeCaptureFPS = 0x928; // int32_t
		constexpr auto MatineeCaptureType = 0x92c; // int32_t
		constexpr auto MapLoadTimePC = 0x930; // float
		constexpr auto MapLoadTimePS4 = 0x934; // float
		constexpr auto MapLoadTimeXboxOne = 0x938; // float
		constexpr auto MapLoadTimeSwitch = 0x93c; // float
		constexpr auto __EventPreLaunchURL__Delegate = 0x940; // DelegateProperty
	}

	namespace n_UMatchAdminComponent_TA {
		constexpr auto GameEvent = 0x60; // ObjectProperty
		constexpr auto PlayerPermissions = 0x68; // ObjectProperty
	}

	namespace n_U__ProductsConfig_TA__IsTradeInAllowed_44BC565C444774E8E07145A71DC577FF {
		constexpr auto SeriesID = 0x60; // int32_t
	}

	namespace n_UNNXErrors_X {
		constexpr auto SwitchServiceMaintenance = 0x80; // ObjectProperty
	}

	namespace n_USeqAct_TriggerFXActor_X {
		constexpr auto Event = 0x160; // ObjectProperty
		constexpr auto AttachTo = 0x168; // ObjectProperty
	}

	namespace n_UParticleModuleUberRainSplashA {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto StartRotation = 0xd0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xf8; // uint32_t : 1
		constexpr auto MultiplyX = 0xf8; // uint32_t : 1
		constexpr auto MultiplyY = 0xf8; // uint32_t : 1
		constexpr auto MultiplyZ = 0xf8; // uint32_t : 1
		constexpr auto LifeMultiplier = 0x100; // FRawDistributionVector
		constexpr auto ColorOverLife = 0x128; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x150; // FRawDistributionFloat
	}

	namespace n_UParticleModuleUberLTISIVCL {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto StartVelocity = 0xd0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xf8; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x120; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x148; // FRawDistributionFloat
	}

	namespace n_UGameplayMusicPlayer_TA {
		constexpr auto MusicSave = 0x60; // ObjectProperty
		constexpr auto CurrentGameEvent = 0x68; // ObjectProperty
		constexpr auto bMuted = 0x70; // uint32_t : 1
		constexpr auto LoadingScreenState = 0x74; // FName
		constexpr auto CurrentPlaylist = 0x7c; // FName
		constexpr auto MusicPlayerState = 0x84; // EMusicPlayerState
		constexpr auto LoadingScreenStateGroup = 0x88; // FName
		constexpr auto LoadingScreenState_MusicEnabled = 0x90; // FName
		constexpr auto LoadingScreenState_MusicDisabled = 0x98; // FName
		constexpr auto LoadingScreenState_None = 0xa0; // FName
		constexpr auto GameplayMusicStateGroup = 0xa8; // FName
		constexpr auto GameplayMusicState_Enabled = 0xb0; // FName
		constexpr auto GameplayMusicState_Disabled = 0xb8; // FName
		constexpr auto GameplayMusicState_None = 0xc0; // FName
		constexpr auto __EventStateChanged__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UParticleModuleSizeScaleByTime {
		constexpr auto SizeScaleByTime = 0x70; // FRawDistributionVector
		constexpr auto bEnableX = 0x98; // uint32_t : 1
		constexpr auto bEnableY = 0x98; // uint32_t : 1
		constexpr auto bEnableZ = 0x98; // uint32_t : 1
	}

	namespace n_UAnimNode_MultiBlendPerBone {
		constexpr auto PawnOwner = 0x148; // ObjectProperty
		constexpr auto MaskList = 0x150; // TArray<FPerBoneMaskInfo>
		constexpr auto RotationBlendType = 0x160; // EBlendType
	}

	namespace n_UJSONSerializer_X {
		constexpr auto bDebug = 0x60; // uint32_t : 1
	}

	namespace n_UGFxData_Products_TA {
		constexpr auto LoadingProducts = 0x98; // TArray<ObjectProperty>
		constexpr auto Stats = 0xa8; // TArray<FProductStatInfo>
		constexpr auto ProductLabel = 0xb8; // FString
		constexpr auto ProductLongLabel = 0xc8; // FString
		constexpr auto ProductIcon = 0xd8; // ObjectProperty
		constexpr auto ProductDescription = 0xe0; // FString
		constexpr auto ProductID = 0xf0; // FProductInstanceID
		constexpr auto BaseProductID = 0x100; // int32_t
		constexpr auto HashID = 0x104; // FProductHashID
		constexpr auto ProductPackHashID = 0x108; // FProductHashID
		constexpr auto SchematicPointerID = 0x10c; // int32_t
		constexpr auto ProductSlot = 0x110; // int32_t
		constexpr auto ProductSlotLabel = 0x118; // FString
		constexpr auto ProductSlotLongLabel = 0x128; // FString
		constexpr auto bProductEquipped_1 = 0x138; // uint32_t : 1
		constexpr auto bProductEquipped_2 = 0x138; // uint32_t : 1
		constexpr auto bProductUnlocked = 0x138; // uint32_t : 1
		constexpr auto bProductIsPack = 0x138; // uint32_t : 1
		constexpr auto bProductIsNew = 0x138; // uint32_t : 1
		constexpr auto bProductHasNewSkin = 0x138; // uint32_t : 1
		constexpr auto bProductCanBeTradedIn = 0x138; // uint32_t : 1
		constexpr auto bProductCanBePlayerTraded = 0x138; // uint32_t : 1
		constexpr auto bProductIsContainer = 0x138; // uint32_t : 1
		constexpr auto bProductIsContainerKey = 0x138; // uint32_t : 1
		constexpr auto bProductIsSchematic = 0x138; // uint32_t : 1
		constexpr auto bProductUpgradable = 0x138; // uint32_t : 1
		constexpr auto bIsFavorited = 0x138; // uint32_t : 1
		constexpr auto bIsArchived = 0x138; // uint32_t : 1
		constexpr auto bCanArchive = 0x138; // uint32_t : 1
		constexpr auto bDebugLoadingProducts = 0x138; // uint32_t : 1
		constexpr auto ProductPaintColor = 0x13c; // FColor
		constexpr auto ProductPaintColorName = 0x140; // FString
		constexpr auto ProductQuality = 0x150; // EProductQuality
		constexpr auto ProductQuantity = 0x154; // int32_t
		constexpr auto TradeHold = 0x158; // int32_t
		constexpr auto SeriesID = 0x15c; // int32_t
		constexpr auto SeriesDescription = 0x160; // FString
		constexpr auto SchematicResources = 0x170; // int32_t
		constexpr auto AttributeMap = 0x178; // ObjectProperty
		constexpr auto AttributeTables = 0x180; // FString
		constexpr auto NewProducts = 0x190; // TArray<ObjectProperty>
		constexpr auto FavoriteSave = 0x1a0; // ObjectProperty
		constexpr auto ArchiveSave = 0x1a8; // ObjectProperty
		constexpr auto LoadoutSave = 0x1b0; // ObjectProperty
		constexpr auto DynamicThumbnailsIgnorableOnlinePaintedProducts = 0x1b8; // TArray<FNone*>
		constexpr auto MtxConfig = 0x1c8; // ObjectProperty
		constexpr auto ProductsConfig = 0x1d0; // ObjectProperty
	}

	namespace n_UFXTrait_PreviewParticle_TA {
		constexpr auto ParticlePreview = 0x60; // ObjectProperty
		constexpr auto OldParticle = 0x68; // ObjectProperty
	}

	namespace n_UOnlineFriendsInterfaceEOS {
		constexpr auto PlayerInterfaceEOS = 0x80; // ObjectProperty
	}

	namespace n_URetryDelayer_X {
		constexpr auto RetryDelays = 0x70; // TArray<float>
		constexpr auto RepeatBackoff = 0x80; // float
		constexpr auto RepeatCycleCount = 0x84; // int32_t
		constexpr auto bRepeatUntilSuccess = 0x88; // uint32_t : 1
		constexpr auto FailedAttempts = 0x8c; // int32_t
		constexpr auto FailedCycles = 0x90; // int32_t
		constexpr auto __RepeatedDelegate__Delegate = 0x98; // DelegateProperty
		constexpr auto __NotifyAbandondedDelegate__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UDecalComponent_Constrained_TA {
		constexpr auto WorldZ = 0x3e0; // float
		constexpr auto bAttachedRotation = 0x3e4; // uint32_t : 1
	}

	namespace n_USeqAct_AddGameBall_TA {
		constexpr auto SpawnedBall = 0x160; // ObjectProperty
		constexpr auto Instigator = 0x168; // ObjectProperty
		constexpr auto SpawnTransform = 0x170; // ObjectProperty
		constexpr auto PlacedBall = 0x178; // ObjectProperty
		constexpr auto bWake = 0x180; // uint32_t : 1
		constexpr auto BallArchetype = 0x188; // FString
	}

	namespace n_UClubDetails_X {
		constexpr auto ClubID = 0x88; // QWordProperty
		constexpr auto OwnerPlayerID = 0x90; // FUniqueNetId
		constexpr auto MotD = 0xd8; // FString
		constexpr auto bVerified = 0xe8; // uint32_t : 1
		constexpr auto LastUpdatedTime = 0xf0; // QWordProperty
		constexpr auto Members = 0xf8; // TArray<FClubMember>
	}

	namespace n_UOnlinePlaylistProvider {
		constexpr auto PlaylistId = 0xa0; // int32_t
		constexpr auto PlaylistGameTypeNames = 0xa8; // TArray<FName>
		constexpr auto DisplayName = 0xb8; // FString
		constexpr auto Priority = 0xc8; // int32_t
	}

	namespace n_U__PsyNetRequestQue_X__SendRequest_7872868F426AC5BE2FDED9A6E98F68D7 {
		constexpr auto RequestID = 0x60; // FName
	}

	namespace n_UAnimNodeBlend {
		constexpr auto Child2Weight = 0x148; // float
		constexpr auto Child2WeightTarget = 0x14c; // float
		constexpr auto BlendTimeToGo = 0x150; // float
		constexpr auto bSkipBlendWhenNotRendered = 0x154; // uint32_t : 1
	}

	namespace n_UGFxData_MapSelection_TA {
		constexpr auto Selections = 0x98; // TArray<FGFxMapSelectionData>
		constexpr auto __EventMapListChange__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventSelectionChange__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UProductOverride_ParticleSystemComponent_TA {
		constexpr auto ParticleSystem = 0x60; // ObjectProperty
	}

	namespace n_UProductAttribute_Expiration_TA {
		constexpr auto ExpirationTime = 0x80; // QWordProperty
	}

	namespace n_UChampionshipTrophy_TA {
		constexpr auto ChampionshipTrophyArchetype = 0x60; // ObjectProperty
		constexpr auto ChampionshipTrophySound = 0x68; // ObjectProperty
	}

	namespace n_UPath_AvoidInEscapableNodes {
		constexpr auto Radius = 0x70; // int32_t
		constexpr auto Height = 0x74; // int32_t
		constexpr auto MaxFallSpeed = 0x78; // int32_t
		constexpr auto MoveFlags = 0x7c; // int32_t
	}

	namespace n_USeqAct_CastToInt {
		constexpr auto bTruncate = 0x160; // uint32_t : 1
		constexpr auto Value = 0x164; // float
		constexpr auto IntResult = 0x168; // int32_t
	}

	namespace n_UUIDataStore_OnlineStats {
		constexpr auto StatsReadClasses = 0xa0; // TArray<FNone*>
		constexpr auto StatsReadName = 0xb0; // FName
		constexpr auto PlayerNickData = 0xb8; // FPlayerNickMetaData
		constexpr auto RankNameMetaData = 0xd0; // FRankMetaData
		constexpr auto TotalRowsName = 0xe8; // FName
		constexpr auto StatsReadObjects = 0xf0; // TArray<ObjectProperty>
		constexpr auto StatsRead = 0x100; // ObjectProperty
		constexpr auto CurrentReadType = 0x108; // EStatsFetchType
		constexpr auto StatsInterface = 0x110; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x120; // TScriptInterface<Class>
	}

	namespace n_UAnimNodeBlendBySpeed {
		constexpr auto Speed = 0x170; // float
		constexpr auto LastChannel = 0x174; // int32_t
		constexpr auto BlendUpTime = 0x178; // float
		constexpr auto BlendDownTime = 0x17c; // float
		constexpr auto BlendDownPerc = 0x180; // float
		constexpr auto Constraints = 0x188; // TArray<float>
		constexpr auto bUseAcceleration = 0x198; // uint32_t : 1
		constexpr auto BlendUpDelay = 0x19c; // float
		constexpr auto BlendDownDelay = 0x1a0; // float
		constexpr auto BlendDelayRemaining = 0x1a4; // float
	}

	namespace n_ARadialBlurActor {
		constexpr auto RadialBlur = 0x268; // ComponentProperty
	}

	namespace n_UCanvasTexture_X {
		constexpr auto __Draw__Delegate = 0x190; // DelegateProperty
	}

	namespace n_U____OnlinePlayerStorageQueue_X__HandleStorageSuccess_871127A3496BBAE5CFACBABC86A9784C____OnlinePlayerStorageQueue_X__HandleStorageSuccess_FE792F2E4EDB1A5F5F43548833FAF80B_DBE62FEF49954D25BCB79C8BD600959F {
		constexpr auto R = 0x60; // FSetPlayerStorageResultItem
	}

	namespace n_U__LocalClubData_X__GetClubByID_2D5401A94DC0DD6DE4831D84FF47CE83 {
		constexpr auto Id = 0x60; // QWordProperty
	}

	namespace n_USimpleSpringComponent_TA {
		constexpr auto Spring = 0x70; // FSimpleSpringSettings
		constexpr auto bEnabled = 0xc0; // uint32_t : 1
		constexpr auto bInitialized = 0xc0; // uint32_t : 1
		constexpr auto Displacement = 0xc4; // FVector
		constexpr auto MassLocation = 0xd0; // FVector
		constexpr auto MassVelocity = 0xdc; // FVector
	}

	namespace n_AAIManager_TA {
		constexpr auto bFlushAILogEachLine = 0x268; // uint32_t : 1
		constexpr auto bOutputLogToWindow = 0x268; // uint32_t : 1
		constexpr auto bPauseForDirtyTrees = 0x268; // uint32_t : 1
		constexpr auto Locks = 0x270; // ComponentProperty
		constexpr auto GameEvent = 0x278; // ObjectProperty
		constexpr auto Bots = 0x280; // TArray<ObjectProperty>
		constexpr auto CachedNavMeshLocations = 0x290; // TArray<FCachedNavMeshLocation>
		constexpr auto AILogFile = 0x2a0; // ObjectProperty
	}

	namespace n_UGFxData_ErrorModals_TA {
		constexpr auto GameEvent = 0x98; // ObjectProperty
		constexpr auto PendingErrors = 0xa0; // TArray<FPendingError>
		constexpr auto __OnErrorModalCreated__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UBugReport_X {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto BugReportClassName = 0x68; // FString
		constexpr auto URL = 0x78; // FString
		constexpr auto MaxFileSizeMegabytes = 0x88; // int32_t
		constexpr auto BugID = 0x90; // FString
		constexpr auto SubmitterData = 0xa0; // FBugReportSubmitterData
		constexpr auto SystemData = 0xd0; // FBugReportSystemData
		constexpr auto PathData = 0x108; // FBugReportPathData
		constexpr auto DescriptionData = 0x148; // FBugReportDescriptionData
		constexpr auto LogFile = 0x198; // FPointer
		constexpr auto FileUploads = 0x1a0; // TArray<FFileUploadData>
		constexpr auto bUploadNextFile = 0x1b0; // uint32_t : 1
		constexpr auto bSubmitted = 0x1b0; // uint32_t : 1
	}

	namespace n_U__GFxData_MTXGarage_TA__HandleGetCatalogResponse_CA13212C4646D25BED5A62950946F724 {
		constexpr auto BundleInfo = 0x60; // FMTXPurchaseInfo
	}

	namespace n_ASpecialPickup_Rugby_TA {
		constexpr auto Mesh = 0x388; // ObjectProperty
		constexpr auto BallHitSFX = 0x390; // ObjectProperty
		constexpr auto DeactivateSFX = 0x398; // ObjectProperty
		constexpr auto AttachTime = 0x3a0; // float
		constexpr auto MinDetachTime = 0x3a4; // float
		constexpr auto MinBreakTime = 0x3a8; // float
		constexpr auto MinBreakForce = 0x3ac; // float
		constexpr auto CheckLastTouchRate = 0x3b0; // float
		constexpr auto KickOffActivationDelay = 0x3b4; // float
		constexpr auto SMC = 0x3b8; // ComponentProperty
		constexpr auto WeldedBall = 0x3c0; // ObjectProperty
		constexpr auto LastTouchCheckTime = 0x3c8; // float
		constexpr auto bBallWelded = 0x3cc; // uint32_t : 1
		constexpr auto __bBallWelded__ChangeNotify = 0x3d0; // DelegateProperty
	}

	namespace n_UClientNetMetrics_X {
		constexpr auto RecordPeriod = 0x60; // float
		constexpr auto LastRecordTime = 0x64; // float
		constexpr auto OldStats = 0x68; // FNetPacketStats
		constexpr auto GamePings = 0x88; // TArray<float>
		constexpr auto Pinger = 0x98; // ComponentProperty
		constexpr auto PsyPings = 0xa0; // TArray<float>
		constexpr auto PsyPacketsLost = 0xb0; // int32_t
	}

	namespace n_UPlayerVanitySave_TA {
		constexpr auto InstanceID = 0xc8; // FProductInstanceID
		constexpr auto ProductID = 0xd8; // int32_t
		constexpr auto SelectedColorValue = 0xdc; // int32_t
		constexpr auto __EventVanityChanged__Delegate = 0xe0; // DelegateProperty
		constexpr auto __SelectedColorValue__ChangeNotify = 0xf8; // DelegateProperty
	}

	namespace n_U__GFxData_ClubDetails_TA__UpdateClubMembers_ADB1A5BC4FCE1EA493E069B3DC352970 {
		constexpr auto Member = 0x60; // FClubMember
	}

	namespace n_USkelControlTether_TA {
		constexpr auto AnchorBoneName = 0x100; // FName
		constexpr auto DistanceMin = 0x108; // float
		constexpr auto DistanceMax = 0x10c; // float
	}

	namespace n_UPsyNetBeacon_X {
		constexpr auto ConnectionTimeoutSeconds = 0x70; // float
		constexpr auto PsyNetConnection = 0x78; // ObjectProperty
		constexpr auto Connections = 0x80; // TArray<ObjectProperty>
		constexpr auto PendingMessages = 0x90; // TArray<ObjectProperty>
		constexpr auto PsyNetConfig = 0xa0; // ObjectProperty
		constexpr auto __EventConnected__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventMessageReceived__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UFaceItFindServerTask_TA {
		constexpr auto SearchTimeout = 0xd0; // float
		constexpr auto RPC = 0xd8; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xe0; // DelegateProperty
	}

	namespace n_UPsyNetService_TourReceivedBye_TA {
		constexpr auto TournamentID = 0x90; // QWordProperty
	}

	namespace n_AFluidSurfaceActor {
		constexpr auto FluidComponent = 0x268; // ComponentProperty
		constexpr auto ProjectileEntryEffect = 0x270; // ObjectProperty
	}

	namespace n_U__GFxData_Clubs_TA__UpdateClubName_B30BAA4348279A96CA25D78F7214F530 {
		constexpr auto ClubName = 0x60; // FString
		constexpr auto ClubTag = 0x70; // FString
	}

	namespace n_UEngineAudioPreviewRev_TA {
		constexpr auto Profile = 0x88; // ObjectProperty
		constexpr auto PhysicsSim = 0x90; // ObjectProperty
		constexpr auto SimFrame = 0x98; // FAkRevSimFrame
	}

	namespace n_UDrawSphereComponent {
		constexpr auto SphereColor = 0x258; // FColor
		constexpr auto SphereMaterial = 0x260; // ObjectProperty
		constexpr auto SphereRadius = 0x268; // float
		constexpr auto SphereSides = 0x26c; // int32_t
		constexpr auto bDrawWireSphere = 0x270; // uint32_t : 1
		constexpr auto bDrawLitSphere = 0x270; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x270; // uint32_t : 1
	}

	namespace n_UParameterDispenser_X {
		constexpr auto VfTable_IISetParameter = 0x70; // FPointer
		constexpr auto NameParams = 0x78; // TArray<FNameParamPair>
		constexpr auto FloatParams = 0x88; // TArray<FFloatParamPair>
		constexpr auto VectorParams = 0x98; // TArray<FVectorParamPair>
		constexpr auto ColorParams = 0xa8; // TArray<FColorParamPair>
		constexpr auto ActorParams = 0xb8; // TArray<FActorParamPair>
		constexpr auto AllComponents = 0xc8; // TArray<TScriptInterface<Class>>
	}

	namespace n_USkelControlSpline {
		constexpr auto SplineLength = 0x100; // int32_t
		constexpr auto SplineBoneAxis = 0x104; // EAxis
		constexpr auto BoneRotMode = 0x105; // ESplineControlRotMode
		constexpr auto bInvertSplineBoneAxis = 0x108; // uint32_t : 1
		constexpr auto EndSplineTension = 0x10c; // float
		constexpr auto StartSplineTension = 0x110; // float
	}

	namespace n_UNetMetrics_X {
		constexpr auto Config = 0x80; // ObjectProperty
		constexpr auto UnstableConnectionsQueue = 0x88; // TArray<FString>
	}

	namespace n_URegionPinger_X {
		constexpr auto MaxPing = 0x70; // float
		constexpr auto PingsPerRegion = 0x74; // int32_t
		constexpr auto DelayBetweenPings = 0x78; // float
		constexpr auto ActivePings = 0x80; // TArray<ObjectProperty>
		constexpr auto PingBeacon = 0x90; // ComponentProperty
		constexpr auto TickIndex = 0x98; // int32_t
		constexpr auto PingResults = 0xa0; // TArray<ObjectProperty>
		constexpr auto __EventRegionsPinged__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_U__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_D08B04B740A2823E93E9FDA14AA4E9C5 {
		constexpr auto Category = 0x60; // FName
	}

	namespace n_UBTC_Target {
		constexpr auto DistanceGreaterThan = 0x1d0; // float
		constexpr auto DistanceLessThan = 0x1d4; // float
		constexpr auto HeightGreaterThan = 0x1d8; // float
		constexpr auto HeightLessThan = 0x1dc; // float
		constexpr auto SpeedGreaterThan = 0x1e0; // float
		constexpr auto SpeedLessThan = 0x1e4; // float
		constexpr auto SpeedTowardsGreaterThan = 0x1e8; // float
		constexpr auto SpeedTowardsLessThan = 0x1ec; // float
		constexpr auto SideSpeedGreaterThan = 0x1f0; // float
		constexpr auto SideSpeedLessThan = 0x1f4; // float
		constexpr auto RelativeSpeedGreaterThan = 0x1f8; // float
		constexpr auto RelativeSpeedLessThan = 0x1fc; // float
		constexpr auto RelativeSpeedTowardsGreaterThan = 0x200; // float
		constexpr auto RelativeSpeedTowardsLessThan = 0x204; // float
		constexpr auto RelativeSideSpeedGreaterThan = 0x208; // float
		constexpr auto RelativeSideSpeedLessThan = 0x20c; // float
		constexpr auto AngleGreaterThan = 0x210; // float
		constexpr auto AngleLessThan = 0x214; // float
	}

	namespace n_ASpecialPickup_BallLasso_TA {
		constexpr auto SpringMeshSlackParam = 0x568; // FName
	}

	namespace n_U__GFxData_Party_TA__InvitePlayerToTrade_14EFE6724F0B04465DED898C6A49DE89 {
		constexpr auto Index = 0x60; // int32_t
	}

	namespace n_UTourCheckInWindowWatcher_TA {
		constexpr auto Config = 0x60; // ObjectProperty
		constexpr auto NextTournament = 0x68; // ObjectProperty
		constexpr auto CheckInWindowSeconds = 0x70; // QWordProperty
		constexpr auto ActivityWindowSeconds = 0x78; // QWordProperty
		constexpr auto __EventWindowChange__Delegate = 0x80; // DelegateProperty
	}

	namespace n_USeqEvent_AkMusicCue {
		constexpr auto CueName = 0x180; // FString
	}

	namespace n_APortalTeleporter {
		constexpr auto SisterPortal = 0x280; // ObjectProperty
		constexpr auto TextureResolutionX = 0x288; // int32_t
		constexpr auto TextureResolutionY = 0x28c; // int32_t
		constexpr auto MyMarker = 0x290; // ObjectProperty
		constexpr auto bMovablePortal = 0x298; // uint32_t : 1
		constexpr auto bAlwaysTeleportNonPawns = 0x298; // uint32_t : 1
		constexpr auto bCanTeleportVehicles = 0x298; // uint32_t : 1
	}

	namespace n_UShopsConfig_TA {
		constexpr auto DebugShopID = 0x78; // int32_t
		constexpr auto bEnableShopMetrics = 0x7c; // uint32_t : 1
		constexpr auto bHideMainMenuButton = 0x7c; // uint32_t : 1
		constexpr auto ShopTypesForOwnedTracking = 0x80; // TArray<FString>
	}

	namespace n_URB_Spring {
		constexpr auto Component1 = 0xa0; // ComponentProperty
		constexpr auto BoneName1 = 0xa8; // FName
		constexpr auto Component2 = 0xb0; // ComponentProperty
		constexpr auto BoneName2 = 0xb8; // FName
		constexpr auto SceneIndex = 0xc0; // int32_t
		constexpr auto bInHardware = 0xc4; // uint32_t : 1
		constexpr auto bEnableForceMassRatio = 0xc4; // uint32_t : 1
		constexpr auto SpringData = 0xc8; // FPointer
		constexpr auto TimeSinceActivation = 0xd0; // float
		constexpr auto MinBodyMass = 0xd4; // float
		constexpr auto SpringSaturateDist = 0xd8; // float
		constexpr auto SpringMaxForce = 0xdc; // float
		constexpr auto MaxForceMassRatio = 0xe0; // float
		constexpr auto SpringMaxForceTimeScale = 0xe8; // FInterpCurveFloat
		constexpr auto DampSaturateVel = 0x100; // float
		constexpr auto DampMaxForce = 0x104; // float
	}

	namespace n_UAnimNodeBlend_TA {
		constexpr auto BlendSpeed = 0x148; // float
		constexpr auto Position = 0x14c; // float
		constexpr auto DesiredPosition = 0x150; // float
	}

	namespace n_UBTC_SegmentDistance {
		constexpr auto Start = 0xe8; // ObjectProperty
		constexpr auto End = 0xf0; // ObjectProperty
		constexpr auto StartGreaterThan = 0xf8; // float
		constexpr auto StartLessThan = 0xfc; // float
		constexpr auto EndGreaterThan = 0x100; // float
		constexpr auto EndLessThan = 0x104; // float
		constexpr auto AbsSideGreaterThan = 0x108; // float
		constexpr auto AbsSideLessThan = 0x10c; // float
	}

	namespace n_U__GFxData_MultiItemDrops_TA__IsSlotInGroup_47B2320B4DD8FD554FB671B20CCAFF1B {
		constexpr auto SlotIndex = 0x60; // int32_t
	}

	namespace n_UStasisExplosionHandler_TA {
		constexpr auto VelocityToApply = 0x150; // FVector
		constexpr auto SlowDownTime = 0x15c; // float
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_USeqAct_AkPostEvent {
		constexpr auto PlayingIDs = 0x178; // TArray<int32_t>
		constexpr auto SoundCue = 0x188; // ObjectProperty
		constexpr auto bHasSubtitles = 0x190; // uint32_t : 1
	}

	namespace n_U__OnlineGame_X__GetOnlinePlayerFromEpicId_F5EB3AEA4DDE21F8CCB22686A8C89E08 {
		constexpr auto EpicAccountId = 0x60; // FString
	}

	namespace n_U__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0D3D1849496E6EE721E125A8B9D61808 {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto FriendId = 0x78; // FUniqueNetId
	}

	namespace n_USeqAct_ToggleConstraintDrive {
		constexpr auto bEnableAngularPositionDrive = 0x160; // uint32_t : 1
		constexpr auto bEnableAngularVelocityDrive = 0x160; // uint32_t : 1
		constexpr auto bEnableLinearPositionDrive = 0x160; // uint32_t : 1
		constexpr auto bEnableLinearvelocityDrive = 0x160; // uint32_t : 1
	}

	namespace n_U__TAsyncResult__PrivilegeCheck_X__Copy_9B9FDAFD457C34C18E1CC8ACC476958F {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_UCameraState_CameraTrack_TA {
		constexpr auto Replay = 0xb8; // ObjectProperty
		constexpr auto FlyType = 0xc0; // ECameraTrackFlyType
		constexpr auto bFlying = 0xc4; // uint32_t : 1
		constexpr auto LastReplayTime = 0xc8; // float
		constexpr auto AccumulatedLook = 0xcc; // FRotator
		constexpr auto AccumulatedMove = 0xd8; // FVector
		constexpr auto LastFOV = 0xe4; // float
	}

	namespace n_ASpecialPickup_HitForce_TA {
		constexpr auto bBallForce = 0x388; // uint32_t : 1
		constexpr auto bCarForce = 0x388; // uint32_t : 1
		constexpr auto bDemolishCars = 0x388; // uint32_t : 1
		constexpr auto BallHitForce = 0x38c; // float
		constexpr auto CarHitForce = 0x390; // float
		constexpr auto BallHitFXArchetype = 0x398; // ObjectProperty
		constexpr auto CarHitFXArchetype = 0x3a0; // ObjectProperty
		constexpr auto HitSFX = 0x3a8; // ObjectProperty
		constexpr auto MinFXTime = 0x3b0; // float
		constexpr auto OrigBallHitForce = 0x3b4; // float
		constexpr auto OrigCarHitForce = 0x3b8; // float
		constexpr auto LastFXTime = 0x3bc; // float
	}

	namespace n_UGFxModal_FriendJoin_TA {
		constexpr auto ConnectingTitleString = 0xc8; // FString
		constexpr auto ConnectingBodyString = 0xd8; // FString
		constexpr auto JoiningGameFailedString = 0xe8; // FString
	}

	namespace n_ARB_CylindricalForceActor {
		constexpr auto RenderComponent = 0x268; // ComponentProperty
		constexpr auto RadialStrength = 0x270; // float
		constexpr auto RotationalStrength = 0x274; // float
		constexpr auto LiftStrength = 0x278; // float
		constexpr auto LiftFalloffHeight = 0x27c; // float
		constexpr auto EscapeVelocity = 0x280; // float
		constexpr auto ForceRadius = 0x284; // float
		constexpr auto ForceTopRadius = 0x288; // float
		constexpr auto ForceHeight = 0x28c; // float
		constexpr auto HeightOffset = 0x290; // float
		constexpr auto bForceActive = 0x294; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x294; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x294; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x294; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x294; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x298; // FRBCollisionChannelContainer
	}

	namespace n_USeqAct_SetCarTransform_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto Transform = 0x168; // ObjectProperty
	}

	namespace n_UPartyMessage_X {
		constexpr auto Sender = 0x60; // FUniqueNetId
	}

	namespace n_UGFxData_PlayerTitles_TA {
		constexpr auto SelectedTitle = 0x98; // int32_t
		constexpr auto PlayerTitles = 0xa0; // TArray<FPlayerTitleData>
		constexpr auto LoadoutSave = 0xb0; // ObjectProperty
		constexpr auto TitleConfig = 0xb8; // ObjectProperty
	}

	namespace n_UAnimNotify_Kismet {
		constexpr auto NotifyName = 0x68; // FName
	}

	namespace n_UExporter {
		constexpr auto FormatExtension = 0x68; // TArray<FString>
		constexpr auto FormatDescription = 0x78; // TArray<FString>
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0xc0; // FExpressionInput
		constexpr auto Height = 0xf8; // FExpressionInput
		constexpr auto HeightRatioInput = 0x130; // FExpressionInput
		constexpr auto HeightRatio = 0x168; // float
		constexpr auto ReferencePlane = 0x16c; // float
	}

	namespace n_USeqAct_IsInObjectList {
		constexpr auto bCheckForAllObjects = 0x160; // uint32_t : 1
		constexpr auto bObjectFound = 0x160; // uint32_t : 1
	}

	namespace n_UMcpIdMappingManager {
		constexpr auto AccountMappings = 0xb8; // TArray<FMcpIdMapping>
		constexpr auto AddMappingUrl = 0xc8; // FString
		constexpr auto QueryMappingUrl = 0xd8; // FString
		constexpr auto AddMappingRequests = 0xe8; // TArray<FAddMappingRequest>
		constexpr auto QueryMappingRequests = 0xf8; // TArray<FQueryMappingRequest>
	}

	namespace n_URPC_GetClubInvites_X {
		constexpr auto ClubInvites = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_AMaterialInstanceTimeVaryingActor {
		constexpr auto MatInst = 0x268; // ObjectProperty
	}

	namespace n_UTourBracketSync_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto PollIntervalSeconds = 0x68; // float
		constexpr auto PlayerID = 0x70; // FUniqueNetId
		constexpr auto Settings = 0xb8; // ObjectProperty
		constexpr auto GetBracketTask = 0xc0; // ObjectProperty
	}

	namespace n_AGoalIndicator_TA {
		constexpr auto Goal = 0x268; // ComponentProperty
		constexpr auto PCOwner = 0x270; // ObjectProperty
		constexpr auto PRI = 0x278; // ObjectProperty
		constexpr auto LensFlareComponent = 0x280; // ComponentProperty
		constexpr auto StaticMeshComponent = 0x288; // ComponentProperty
		constexpr auto DefenseMesh = 0x290; // ObjectProperty
		constexpr auto OffenseMesh = 0x298; // ObjectProperty
		constexpr auto MaterialGoalDefense = 0x2a0; // ObjectProperty
		constexpr auto MaterialGoalOffense = 0x2a8; // ObjectProperty
		constexpr auto LensFlareTeamList = 0x2b0; // TArray<ObjectProperty>
	}

	namespace n_APylon {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x388; // FPointer
		constexpr auto VfTable_IInterface_NavigationHandle = 0x390; // FPointer
		constexpr auto NavMeshPtr = 0x398; // FPointer
		constexpr auto ObstacleMesh = 0x3a0; // FPointer
		constexpr auto DynamicObstacleMesh = 0x3a8; // FPointer
		constexpr auto WorkingSetPtr = 0x3b0; // FPointer
		constexpr auto PathObjectsThatAffectThisPylon = 0x3b8; // FPointer
		constexpr auto NextPassSeedList = 0x3c0; // TArray<FVector>
		constexpr auto OctreeId = 0x3d0; // FOctreeElementId
		constexpr auto OctreeIWasAddedTo = 0x3e0; // FPointer
		constexpr auto NextPylon = 0x3e8; // ObjectProperty
		constexpr auto ExpansionVolumes = 0x3f0; // TArray<ObjectProperty>
		constexpr auto ExpansionRadius = 0x400; // float
		constexpr auto MaxExpansionRadius = 0x404; // float
		constexpr auto PylonRadiusPreview = 0x408; // ComponentProperty
		constexpr auto bImportedMesh = 0x410; // uint32_t : 1
		constexpr auto bUseExpansionSphereOverride = 0x410; // uint32_t : 1
		constexpr auto bNeedsCostCheck = 0x410; // uint32_t : 1
		constexpr auto bPylonInHighLevelPath = 0x410; // uint32_t : 1
		constexpr auto bUseRecast = 0x410; // uint32_t : 1
		constexpr auto bAllowRecastGenerator = 0x410; // uint32_t : 1
		constexpr auto bDrawEdgePolys = 0x410; // uint32_t : 1
		constexpr auto bDrawPolyBounds = 0x410; // uint32_t : 1
		constexpr auto bRenderInShowPaths = 0x410; // uint32_t : 1
		constexpr auto bDrawWalkableSurface = 0x410; // uint32_t : 1
		constexpr auto bDrawObstacleSurface = 0x410; // uint32_t : 1
		constexpr auto bSolidObstaclesInGame = 0x410; // uint32_t : 1
		constexpr auto bBuildThisPylon = 0x410; // uint32_t : 1
		constexpr auto bDisabled = 0x410; // uint32_t : 1
		constexpr auto bForceObstacleMeshCollision = 0x410; // uint32_t : 1
		constexpr auto ExpansionSphereCenter = 0x414; // FVector
		constexpr auto RenderingComp = 0x420; // ComponentProperty
		constexpr auto BrokenSprite = 0x428; // ComponentProperty
		constexpr auto ImposterPylons = 0x430; // TArray<ObjectProperty>
		constexpr auto OnBuild_DisableCollisionForThese = 0x440; // TArray<ObjectProperty>
		constexpr auto OnBuild_EnableCollisionForThese = 0x450; // TArray<ObjectProperty>
		constexpr auto MaxPolyHeight_Optional = 0x460; // float
		constexpr auto NavMeshGenerator = 0x464; // char
		constexpr auto VoxelFilterBounds = 0x468; // TArray<FKAggregateGeom>
		constexpr auto VoxelFilterTM = 0x478; // TArray<FMatrix>
		constexpr auto DebugEdgeCount = 0x488; // int32_t
		constexpr auto DebugPathExtent = 0x48c; // FVector
		constexpr auto DebugPathStartLocation = 0x498; // FVector
	}

	namespace n_U__GFxData_StartMenu_TA__HandleSyncOnlinePlayerStorageStarted_DBCCEF3B4096DF6EAE5779872904DFFB {
		constexpr auto OnlineStorageSyncManager = 0x60; // ObjectProperty
	}

	namespace n_U__ClubPersonas_TA__QueueRefresh_566B2AF14A86AA71F2A465A6AD88BB4F {
		constexpr auto Persona = 0x60; // ObjectProperty
	}

	namespace n_USeqAct_SetDOFParams {
		constexpr auto FalloffExponent = 0x178; // float
		constexpr auto BlurKernelSize = 0x17c; // float
		constexpr auto MaxNearBlurAmount = 0x180; // float
		constexpr auto MinBlurAmount = 0x184; // float
		constexpr auto MaxFarBlurAmount = 0x188; // float
		constexpr auto FocusInnerRadius = 0x18c; // float
		constexpr auto FocusDistance = 0x190; // float
		constexpr auto FocusPosition = 0x194; // FVector
		constexpr auto InterpolateSeconds = 0x1a0; // float
		constexpr auto InterpolateElapsed = 0x1a4; // float
		constexpr auto OldFalloffExponent = 0x1a8; // float
		constexpr auto OldBlurKernelSize = 0x1ac; // float
		constexpr auto OldMaxNearBlurAmount = 0x1b0; // float
		constexpr auto OldMinBlurAmount = 0x1b4; // float
		constexpr auto OldMaxFarBlurAmount = 0x1b8; // float
		constexpr auto OldFocusInnerRadius = 0x1bc; // float
		constexpr auto OldFocusDistance = 0x1c0; // float
		constexpr auto OldFocusPosition = 0x1c4; // FVector
	}

	namespace n_UNotificationSave_TA {
		constexpr auto Notifications = 0xc8; // TArray<ObjectProperty>
		constexpr auto bShowInGameNotifications = 0xd8; // uint32_t : 1
		constexpr auto __bShowInGameNotifications__ChangeNotify = 0xe0; // DelegateProperty
	}

	namespace n_USequenceVariable {
		constexpr auto VarName = 0xd8; // FName
	}

	namespace n_ACarComponent_Dodge_TA {
		constexpr auto DodgeInputThreshold = 0x2e8; // float
		constexpr auto SideDodgeImpulse = 0x2ec; // float
		constexpr auto SideDodgeImpulseMaxSpeedScale = 0x2f0; // float
		constexpr auto ForwardDodgeImpulse = 0x2f4; // float
		constexpr auto ForwardDodgeImpulseMaxSpeedScale = 0x2f8; // float
		constexpr auto BackwardDodgeImpulse = 0x2fc; // float
		constexpr auto BackwardDodgeImpulseMaxSpeedScale = 0x300; // float
		constexpr auto SideDodgeTorque = 0x304; // float
		constexpr auto ForwardDodgeTorque = 0x308; // float
		constexpr auto DodgeTorqueTime = 0x30c; // float
		constexpr auto MinDodgeTorqueTime = 0x310; // float
		constexpr auto DodgeZDamping = 0x314; // float
		constexpr auto DodgeZDampingDelay = 0x318; // float
		constexpr auto DodgeZDampingUpTime = 0x31c; // float
		constexpr auto DodgeImpulseScale = 0x320; // float
		constexpr auto DodgeTorqueScale = 0x324; // float
		constexpr auto JumpEvent = 0x328; // ObjectProperty
		constexpr auto DoubleJumpEvent = 0x330; // ObjectProperty
		constexpr auto DodgeEvent = 0x338; // ObjectProperty
		constexpr auto DodgeTorque = 0x340; // FVector
		constexpr auto DodgeDirection = 0x34c; // FVector
		constexpr auto DodgeImpulse = 0x358; // FVector
		constexpr auto __EventActivateDodge__Delegate = 0x368; // DelegateProperty
	}

	namespace n_UGameplayEvents {
		constexpr auto Archive = 0x60; // FPointer
		constexpr auto StatsFileName = 0x68; // FString
		constexpr auto Header = 0x78; // FGameplayEventsHeader
		constexpr auto CurrentSessionInfo = 0xb0; // FGameSessionInformation
		constexpr auto PlayerList = 0x180; // TArray<FPlayerInformation>
		constexpr auto TeamList = 0x190; // TArray<FTeamInformation>
		constexpr auto SupportedEvents = 0x1a0; // TArray<FGameplayEventMetaData>
		constexpr auto WeaponClassArray = 0x1b0; // TArray<FWeaponClassEventData>
		constexpr auto DamageClassArray = 0x1c0; // TArray<FDamageClassEventData>
		constexpr auto ProjectileClassArray = 0x1d0; // TArray<FProjectileClassEventData>
		constexpr auto PawnClassArray = 0x1e0; // TArray<FPawnClassEventData>
		constexpr auto ActorArray = 0x1f0; // TArray<FString>
		constexpr auto SoundCueArray = 0x200; // TArray<FString>
	}

	namespace n_UBTMoveModifier {
		constexpr auto bEnabled = 0x70; // uint32_t : 1
	}

	namespace n_UBallTrajectoryComponent_Spline_TA {
		constexpr auto TrajectoryFXs = 0x118; // TArray<FTrajectorySplineFX>
		constexpr auto SplineArchetype = 0x128; // ObjectProperty
		constexpr auto TangentMultiplier = 0x130; // float
		constexpr auto PulseMultiplier = 0x134; // float
		constexpr auto MinInterpSpeed = 0x138; // float
	}

	namespace n_UPsyNetMessenger_X {
		constexpr auto __EventMessageReceived__Delegate = 0x60; // DelegateProperty
	}

	namespace n_U__GFxData_Party_TA__HandleInviteToTrade_8DADE383497AD1A48D961F817CAA3C25 {
		constexpr auto Inviter = 0x60; // FUniqueNetId
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x60; // ObjectProperty
		constexpr auto InterpGroupInst = 0x68; // ObjectProperty
		constexpr auto CurTime = 0x70; // float
		constexpr auto bLooping = 0x74; // uint32_t : 1
		constexpr auto bFinished = 0x74; // uint32_t : 1
		constexpr auto bAutoReleaseWhenFinished = 0x74; // uint32_t : 1
		constexpr auto bBlendingIn = 0x74; // uint32_t : 1
		constexpr auto bBlendingOut = 0x74; // uint32_t : 1
		constexpr auto BlendInTime = 0x78; // float
		constexpr auto BlendOutTime = 0x7c; // float
		constexpr auto CurBlendInTime = 0x80; // float
		constexpr auto CurBlendOutTime = 0x84; // float
		constexpr auto PlayRate = 0x88; // float
		constexpr auto BasePlayScale = 0x8c; // float
		constexpr auto TransientScaleModifier = 0x90; // float
		constexpr auto CurrentBlendWeight = 0x94; // float
		constexpr auto RemainingTime = 0x98; // float
		constexpr auto MoveTrack = 0xa0; // ObjectProperty
		constexpr auto MoveInst = 0xa8; // ObjectProperty
		constexpr auto SourceAnimNode = 0xb0; // ObjectProperty
		constexpr auto PlaySpace = 0xb8; // ECameraAnimPlaySpace
		constexpr auto UserPlaySpaceMatrix = 0xc0; // FMatrix
		constexpr auto LastPPSettings = 0x100; // FPostProcessSettings
		constexpr auto LastPPSettingsAlpha = 0x268; // float
		constexpr auto LastCameraLoc = 0x26c; // FVector
	}

	namespace n_ASpecialPickup_BoostMod_TA {
		constexpr auto bUnlimitedBoost = 0x388; // uint32_t : 1
		constexpr auto BoostStrength = 0x38c; // float
		constexpr auto OldBoostStrength = 0x390; // float
	}

	namespace n_AStaticMeshCollectionActor {
		constexpr auto StaticMeshComponents = 0x268; // TArray<ComponentProperty>
		constexpr auto MaxStaticMeshComponents = 0x278; // int32_t
	}

	namespace n_UGFxData_ProductTradeIn_TA {
		constexpr auto TradeIns = 0x98; // TArray<FTradeIn>
		constexpr auto ProductTransactions = 0xa8; // ComponentProperty
		constexpr auto ModalProcessing = 0xb0; // ObjectProperty
		constexpr auto InvalidProductString = 0xb8; // FString
		constexpr auto NotEnoughProductsSelected = 0xc8; // FString
		constexpr auto NumProductsRequiredForTradeIn = 0xd8; // int32_t
		constexpr auto ProductsConfig = 0xe0; // ObjectProperty
		constexpr auto __EventTradeInComplete__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0xa0; // FParticleRandomSeedInfo
	}

	namespace n_U__EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_321CA1884720261C6E2EACB4CAAE4B00 {
		constexpr auto UnlockedBodies = 0x60; // TArray<ObjectProperty>
	}

	namespace n_ASpecialPickup_Tornado_TA {
		constexpr auto Height = 0x388; // float
		constexpr auto Radius = 0x38c; // float
		constexpr auto Offset = 0x390; // FVector
		constexpr auto VerticalForceCurve = 0x3a0; // FInterpCurveFloat
		constexpr auto RotationalForce = 0x3b8; // float
		constexpr auto CentripetalForceCurve = 0x3c0; // FInterpCurveFloat
		constexpr auto CarDirectionForceCurve = 0x3d8; // FInterpCurveFloat
		constexpr auto Torque = 0x3f0; // float
		constexpr auto FXScale = 0x3f4; // FVector
		constexpr auto FXOffset = 0x400; // FVector
		constexpr auto TornadoMesh = 0x410; // ObjectProperty
		constexpr auto MeshOffset = 0x418; // FVector
		constexpr auto MeshScale = 0x424; // FVector
		constexpr auto TornadoMIC0 = 0x430; // ObjectProperty
		constexpr auto TornadoMIC1 = 0x438; // ObjectProperty
		constexpr auto TornadoMIC2 = 0x440; // ObjectProperty
		constexpr auto TornadoMIC3 = 0x448; // ObjectProperty
		constexpr auto TornadoMIC4 = 0x450; // ObjectProperty
		constexpr auto TornadoMIC5 = 0x458; // ObjectProperty
		constexpr auto OpacityCurve = 0x460; // FInterpCurveFloat
		constexpr auto MaxVelocityOffset = 0x478; // float
		constexpr auto BallMultiplier = 0x47c; // float
		constexpr auto bDebugVis = 0x480; // uint32_t : 1
		constexpr auto VelocityEase = 0x484; // float
		constexpr auto BallSFX = 0x488; // ObjectProperty
		constexpr auto CarSFX = 0x490; // ObjectProperty
		constexpr auto SMC = 0x498; // ComponentProperty
		constexpr auto MIC0 = 0x4a0; // ObjectProperty
		constexpr auto MIC1 = 0x4a8; // ObjectProperty
		constexpr auto MIC2 = 0x4b0; // ObjectProperty
		constexpr auto MIC3 = 0x4b8; // ObjectProperty
		constexpr auto MIC4 = 0x4c0; // ObjectProperty
		constexpr auto MIC5 = 0x4c8; // ObjectProperty
		constexpr auto Vel = 0x4d0; // FVector
		constexpr auto Affecting = 0x4e0; // TArray<ObjectProperty>
	}

	namespace n_ACamera_MainMenu_TA {
		constexpr auto HandheldCamFrequency = 0x6c8; // FVector
		constexpr auto HandheldCamAmplitude = 0x6d4; // FVector
		constexpr auto CurrentState = 0x6e0; // ObjectProperty
	}

	namespace n_UGFxData_WebBrowser_TA {
		constexpr auto ActiveURL = 0x98; // FString
		constexpr auto ActivePageTitle = 0xa8; // FString
		constexpr auto UrlConfig = 0xb8; // ObjectProperty
	}

	namespace n_URPC_SupportACreator_Get_TA {
		constexpr auto CreatorCode = 0xe8; // FString
		constexpr auto ExpirationTime = 0xf8; // QWordProperty
		constexpr auto SupportType = 0x100; // FString
	}

	namespace n_UGFxMoviePlayer_X {
		constexpr auto Shell = 0x218; // ObjectProperty
		constexpr auto DataStore = 0x220; // ComponentProperty
		constexpr auto DataCallbacks = 0x228; // TArray<ObjectProperty>
		constexpr auto ActionScriptClasses = 0x238; // TArray<ObjectProperty>
		constexpr auto ActionScriptClassMap = 0x248; // FMap_Mirror
		constexpr auto CursorScenes = 0x298; // TArray<FString>
		constexpr auto InputScenes = 0x2a8; // TArray<FString>
		constexpr auto CaptureScenes = 0x2b8; // TArray<FString>
		constexpr auto DebugTableCallback = 0x2c8; // FName
		constexpr auto DebugColumnCallback = 0x2d0; // FName
		constexpr auto ShellHooksClass = 0x2d8; // ObjectProperty
		constexpr auto LoadedSoundPacks = 0x2e0; // TArray<ObjectProperty>
		constexpr auto __EventStarted__Delegate = 0x2f0; // DelegateProperty
		constexpr auto __EventClosed__Delegate = 0x308; // DelegateProperty
		constexpr auto __EventInputCaptureChanged__Delegate = 0x320; // DelegateProperty
	}

	namespace n_U__StayAsPartyVote_TA__AddFollowerToLeader_EA190CAD487E489EBB2F3293BC84847A {
		constexpr auto LeaderID = 0x60; // FUniqueNetId
	}

	namespace n_USeqAct_Trace {
		constexpr auto bTraceActors = 0x160; // uint32_t : 1
		constexpr auto bTraceWorld = 0x160; // uint32_t : 1
		constexpr auto TraceExtent = 0x164; // FVector
		constexpr auto StartOffset = 0x170; // FVector
		constexpr auto EndOffset = 0x17c; // FVector
		constexpr auto HitObject = 0x188; // ObjectProperty
		constexpr auto Distance = 0x190; // float
		constexpr auto HitLocation = 0x194; // FVector
	}

	namespace n_UCrowdSoundSettings_TA {
		constexpr auto Tension = 0x60; // ObjectProperty
		constexpr auto Excitement = 0x68; // ObjectProperty
		constexpr auto Upset = 0x70; // ObjectProperty
		constexpr auto Anticipation = 0x78; // ObjectProperty
		constexpr auto TensionScorability = 0x80; // ObjectProperty
		constexpr auto TensionOpenGoal = 0x88; // ObjectProperty
		constexpr auto TensionSpeedTowardsGoal = 0x90; // ObjectProperty
		constexpr auto TensionCloseToGoal = 0x98; // ObjectProperty
		constexpr auto TensionDistanceFromGoal = 0xa0; // ObjectProperty
		constexpr auto TensionAerial = 0xa8; // ObjectProperty
		constexpr auto TensionFastBreak = 0xb0; // ObjectProperty
		constexpr auto TensionTimeSinceLastGoal = 0xb8; // ObjectProperty
		constexpr auto TensionScoreSeparation = 0xc0; // ObjectProperty
		constexpr auto TensionTimeNearGoal = 0xc8; // ObjectProperty
		constexpr auto TensionLeadChanges = 0xd0; // ObjectProperty
		constexpr auto TensionGoalScored = 0xd8; // ObjectProperty
		constexpr auto ExcitementGameStart = 0xe0; // ObjectProperty
		constexpr auto ExcitementRoundStart = 0xe8; // ObjectProperty
		constexpr auto ExcitementKickoffTouch = 0xf0; // ObjectProperty
		constexpr auto ExcitementOvertimeStart = 0xf8; // ObjectProperty
		constexpr auto ExcitementScorability = 0x100; // ObjectProperty
		constexpr auto ExcitementFastBreak = 0x108; // ObjectProperty
		constexpr auto ExcitementGoal = 0x110; // ObjectProperty
		constexpr auto ExcitementAerial = 0x118; // ObjectProperty
		constexpr auto ExcitementTenseClear = 0x120; // ObjectProperty
		constexpr auto ExcitementTimeRemaining = 0x128; // ObjectProperty
		constexpr auto ExcitementLeadChanges = 0x130; // ObjectProperty
		constexpr auto ExcitementScoreSeparation = 0x138; // ObjectProperty
		constexpr auto ExcitementTimeSinceLastGoal = 0x140; // ObjectProperty
		constexpr auto Excitement0Seconds = 0x148; // ObjectProperty
		constexpr auto UpsetAnyDemo = 0x150; // ObjectProperty
		constexpr auto UpsetRelevantDemo = 0x158; // ObjectProperty
		constexpr auto UpsetGoal = 0x160; // ObjectProperty
		constexpr auto AnticipationScorability = 0x168; // ObjectProperty
		constexpr auto Anticipation0Seconds = 0x170; // ObjectProperty
		constexpr auto AnticipationFastBreak = 0x178; // ObjectProperty
		constexpr auto AnticipationOpenGoal = 0x180; // ObjectProperty
		constexpr auto AnticipationExcitementMultiplier = 0x188; // ObjectProperty
		constexpr auto DefenseChantSettings = 0x190; // FCrowdDefense
		constexpr auto OpenGoalMinDuration = 0x19c; // float
		constexpr auto OpenGoalMaxDistance = 0x1a0; // float
		constexpr auto OpenGoalMaxDefense = 0x1a4; // float
		constexpr auto LongTimeNearGoalDuration = 0x1a8; // float
		constexpr auto LongTimeNearGoalMaxDistance = 0x1ac; // float
		constexpr auto ShotMaxDistanceToGoal = 0x1b0; // float
		constexpr auto ShotScorability = 0x1b4; // float
		constexpr auto ShotSpeedTowardsGoal = 0x1b8; // float
		constexpr auto SaveScorability = 0x1bc; // float
		constexpr auto SaveDistanceToGoal = 0x1c0; // float
		constexpr auto SaveHitMaxTime = 0x1c4; // float
		constexpr auto SaveShotMaxTime = 0x1c8; // float
		constexpr auto FastBreakMinDistanceToGoal = 0x1cc; // float
		constexpr auto FastBreakMaxDistanceToGoal = 0x1d0; // float
		constexpr auto FastBreakSpeedTowardsGoal = 0x1d4; // float
		constexpr auto FastBreakDuration = 0x1d8; // float
		constexpr auto MissedShotMinScorability = 0x1dc; // float
		constexpr auto MissedShotMinTension = 0x1e0; // float
		constexpr auto MissedShotMinLastHitTime = 0x1e4; // float
		constexpr auto RelevantDemoMaxDistanceToBall = 0x1e8; // float
		constexpr auto RelevantDemoMaxBallDistanceToGoal = 0x1ec; // float
		constexpr auto AerialMinValue = 0x1f0; // float
		constexpr auto AerialMinDuration = 0x1f4; // float
		constexpr auto AerialMinCarInAirDuration = 0x1f8; // float
		constexpr auto AerialCooldown = 0x1fc; // float
		constexpr auto LowEnergyMaxExcitement = 0x200; // float
		constexpr auto LowEnergyMaxTension = 0x204; // float
		constexpr auto ChantLowEnergyDuration = 0x208; // float
		constexpr auto ChantLowEnergyRandomDuration = 0x20c; // float
		constexpr auto KickoffTimeRemaining = 0x210; // float
		constexpr auto KickoffScoreSeparation = 0x214; // int32_t
		constexpr auto TenseNearGoalMinTension = 0x218; // float
		constexpr auto TenseNearGoalDuration = 0x21c; // float
		constexpr auto TenseNearGoalDistance = 0x220; // float
		constexpr auto TenseClearDistance = 0x224; // float
		constexpr auto PostGameExcitement = 0x228; // float
		constexpr auto ExcitementStates = 0x230; // TArray<FCrowdValueState>
		constexpr auto TensionStates = 0x240; // TArray<FCrowdValueState>
		constexpr auto ScoreStates = 0x250; // TArray<FCrowdScoreState>
	}

	namespace n_AWebServer {
		constexpr auto ServerName = 0x2d8; // FString
		constexpr auto Applications = 0x2e8; // FString [0xa]
		constexpr auto ApplicationPaths = 0x388; // FString [0xa]
		constexpr auto bEnabled = 0x428; // uint32_t : 1
		constexpr auto ListenPort = 0x42c; // int32_t
		constexpr auto MaxConnections = 0x430; // int32_t
		constexpr auto DefaultApplication = 0x434; // int32_t
		constexpr auto ExpirationSeconds = 0x438; // int32_t
		constexpr auto ServerURL = 0x440; // FString
		constexpr auto ApplicationObjects = 0x450; // ObjectProperty [0xa]
		constexpr auto ConnectionCount = 0x4a0; // int32_t
		constexpr auto ConnID = 0x4a4; // int32_t
	}

	namespace n_UPlaylistSkillCache_X {
		constexpr auto Players = 0x60; // TArray<FUpdatedPlayerSkillRating>
		constexpr auto RankedConfig = 0x70; // ObjectProperty
		constexpr auto __EventPlaylistSkillChanged__Delegate = 0x78; // DelegateProperty
	}

	namespace n_U__ScriptGroup_ORS__CreateObjects_DEC15535491BD5132AE5418F1F6E816C {
		constexpr auto ObjOuter = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_NotificationManager_TA {
		constexpr auto Notifications = 0x98; // TArray<FGFXNotificationInfo>
		constexpr auto bShowInGameNotifications = 0xa8; // uint32_t : 1
		constexpr auto NotificationSave = 0xb0; // ObjectProperty
		constexpr auto PendingNotifications = 0xb8; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleTypeDataBeam {
		constexpr auto BeamMethod = 0x70; // EBeamMethod
		constexpr auto EndPointMethod = 0x71; // EBeamEndPointMethod
		constexpr auto Distance = 0x78; // FRawDistributionFloat
		constexpr auto EndPoint = 0xa0; // FRawDistributionVector
		constexpr auto TessellationFactor = 0xc8; // int32_t
		constexpr auto EmitterStrength = 0xd0; // FRawDistributionFloat
		constexpr auto TargetStrength = 0xf8; // FRawDistributionFloat
		constexpr auto EndPointDirection = 0x120; // FRawDistributionVector
		constexpr auto TextureTile = 0x148; // int32_t
		constexpr auto RenderGeometry = 0x14c; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x14c; // uint32_t : 1
		constexpr auto RenderLines = 0x14c; // uint32_t : 1
		constexpr auto RenderTessellation = 0x14c; // uint32_t : 1
	}

	namespace n_AMatineeActor {
		constexpr auto InterpAction = 0x268; // ObjectProperty
		constexpr auto bIsPlaying = 0x270; // uint32_t : 1
		constexpr auto bReversePlayback = 0x270; // uint32_t : 1
		constexpr auto bPaused = 0x270; // uint32_t : 1
		constexpr auto AllAIGroupsInitialized = 0x270; // uint32_t : 1
		constexpr auto PlayRate = 0x274; // float
		constexpr auto Position = 0x278; // float
		constexpr auto AIGroupNames = 0x27c; // FName [0xa]
		constexpr auto AIGroupPawns = 0x2d0; // ObjectProperty [0xa]
		constexpr auto AIGroupInitStage = 0x320; // int32_t [0xa]
		constexpr auto ClientSidePositionErrorTolerance = 0x348; // float
	}

	namespace n_UOnlineStatsRead {
		constexpr auto ViewId = 0x70; // int32_t
		constexpr auto SortColumnId = 0x74; // int32_t
		constexpr auto ColumnIds = 0x78; // TArray<int32_t>
		constexpr auto TotalRowsInView = 0x88; // int32_t
		constexpr auto Rows = 0x90; // TArray<FOnlineStatsRow>
		constexpr auto ColumnMappings = 0xa0; // TArray<FColumnMetaData>
		constexpr auto ViewName = 0xb0; // FString
		constexpr auto TitleId = 0xc0; // int32_t
		constexpr auto LeaderboardName = 0xc8; // FString
	}

	namespace n_UTAsyncResult__Texture2DDynamic {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_USeqVar_Named {
		constexpr auto ExpectedType = 0xe0; // FNone*
		constexpr auto FindVarName = 0xe8; // FName
		constexpr auto bStatusIsOk = 0xf0; // uint32_t : 1
	}

	namespace n_AGameReplicationInfo {
		constexpr auto RegistryGroup = 0x268; // ComponentProperty
		constexpr auto GameClass = 0x270; // FNone*
		constexpr auto bStopCountDown = 0x278; // uint32_t : 1
		constexpr auto bMatchHasBegun = 0x278; // uint32_t : 1
		constexpr auto bMatchIsOver = 0x278; // uint32_t : 1
		constexpr auto RemainingTime = 0x27c; // int32_t
		constexpr auto ElapsedTime = 0x280; // int32_t
		constexpr auto RemainingMinute = 0x284; // int32_t
		constexpr auto GoalScore = 0x288; // int32_t
		constexpr auto TimeLimit = 0x28c; // int32_t
		constexpr auto Teams = 0x290; // TArray<ObjectProperty>
		constexpr auto ServerName = 0x2a0; // FString
		constexpr auto Winner = 0x2b0; // ObjectProperty
		constexpr auto PRIArray = 0x2b8; // TArray<ObjectProperty>
		constexpr auto InactivePRIArray = 0x2c8; // TArray<ObjectProperty>
	}

	namespace n_UFriendsListBuilder_TA {
		constexpr auto PlatformFriends = 0x60; // TArray<FPersonaDataId>
		constexpr auto EpicFriends = 0x70; // TArray<FPersonaDataId>
		constexpr auto AllFriends = 0x80; // TArray<FPersonaDataId>
	}

	namespace n_UMorphNodeBase {
		constexpr auto NodeName = 0x90; // FName
		constexpr auto bDrawSlider = 0x98; // uint32_t : 1
	}

	namespace n_U__TAsyncResult__UserBugReportUploadResult_TA__SetResultWhen_145D9BB346AEC7B33D4CC79BE789DBD9 {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_U__PlayerController_TA__ClientNotifyHonorDuelWithPlayers_D4E257C8470142C591227A95977AE01D {
		constexpr auto Challenger = 0x60; // FUniqueNetId
		constexpr auto Defender = 0xa8; // FUniqueNetId
	}

	namespace n_USeqVar_Vector {
		constexpr auto VectValue = 0xe0; // FVector
	}

	namespace n_UGFxData_ChallengeBase_TA {
		constexpr auto GFxReward = 0x98; // ObjectProperty
		constexpr auto GFxCurrency = 0xa0; // TArray<ObjectProperty>
		constexpr auto GFxRequirement = 0xb0; // TArray<ObjectProperty>
		constexpr auto ModalProcessing = 0xc0; // ObjectProperty
	}

	namespace n_UPath_AlongLine {
		constexpr auto Direction = 0x70; // FVector
	}

	namespace n_UHttpRequestCurl {
		constexpr auto Request = 0x78; // FPointer
		constexpr auto RequestVerb = 0x80; // FString
		constexpr auto RequestURL = 0x90; // FString
		constexpr auto Payload = 0xa0; // TArray<char>
	}

	namespace n_URPC_GetLeaderboardBase_X {
		constexpr auto bDisableCrossPlay = 0xe8; // uint32_t : 1
		constexpr auto LeaderboardId = 0xf0; // FString
		constexpr auto Platforms = 0x100; // TArray<FGetLeaderboardPlatformBaseData>
	}

	namespace n_AMutator {
		constexpr auto NextMutator = 0x268; // ObjectProperty
		constexpr auto GroupNames = 0x270; // TArray<FString>
		constexpr auto bUserAdded = 0x280; // uint32_t : 1
	}

	namespace n_UGFxEngine_X {
		constexpr auto ShellArchetype = 0x118; // ObjectProperty
		constexpr auto Shells = 0x120; // TArray<ObjectProperty>
		constexpr auto DirtyObjects = 0x130; // TArray<FDirtyObject>
		constexpr auto bAnyShellHasInput = 0x140; // uint32_t : 1
		constexpr auto AvailableGamepadType = 0x144; // EInputPlatformType
		constexpr auto __EventShellCreated__Delegate = 0x148; // DelegateProperty
		constexpr auto __EventAvailableGamepadTypeChanged__Delegate = 0x160; // DelegateProperty
		constexpr auto __EventGameSessionEnded__Delegate = 0x178; // DelegateProperty
	}

	namespace n_USubsystem {
		constexpr auto VfTable_FExec = 0x60; // FPointer
	}

	namespace n_UCylinderComponent {
		constexpr auto CollisionHeight = 0x258; // float
		constexpr auto CollisionRadius = 0x25c; // float
		constexpr auto CylinderColor = 0x260; // FColor
		constexpr auto bDrawBoundingBox = 0x264; // uint32_t : 1
		constexpr auto bDrawNonColliding = 0x264; // uint32_t : 1
		constexpr auto bAlwaysRenderIfSelected = 0x264; // uint32_t : 1
	}

	namespace n_URPC_UpdateClubName_X {
		constexpr auto ClubName = 0xf8; // FString
		constexpr auto ClubTag = 0x108; // FString
	}

	namespace n_UPsyTagErrors_X {
		constexpr auto PsyTagProfane = 0x80; // ObjectProperty
		constexpr auto PsyTagUnavailable = 0x88; // ObjectProperty
		constexpr auto PsyTagInvalidCharacters = 0x90; // ObjectProperty
		constexpr auto PsyTagInvalidWhitespace = 0x98; // ObjectProperty
		constexpr auto PsyTagInvalidParameters = 0xa0; // ObjectProperty
		constexpr auto PsyTagCrossPlatformDisabled = 0xa8; // ObjectProperty
	}

	namespace n_U__ProductLoader_TA__GetAssetByID_D7A35C394283996B3C85679A5CB9DCCF {
		constexpr auto ProductID = 0x60; // int32_t
	}

	namespace n_UBTC_ProxyBase {
		constexpr auto Self = 0x90; // ObjectProperty
		constexpr auto SelfPredictionTime = 0x98; // float
		constexpr auto SelfData = 0xa0; // FAIProxyData
	}

	namespace n_UBlurEffect {
		constexpr auto BlurKernelSize = 0x88; // int32_t
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0xc8; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0xd8; // uint32_t : 1
		constexpr auto bActivateWithJustAttachedFlag = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenForwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xd8; // uint32_t : 1
	}

	namespace n_AFractureManager {
		constexpr auto FSMPartPoolSize = 0x268; // int32_t
		constexpr auto bEnableAntiVibration = 0x26c; // uint32_t : 1
		constexpr auto bEnableSpawnChunkEffectForRadialDamage = 0x26c; // uint32_t : 1
		constexpr auto DestroyVibrationLevel = 0x270; // float
		constexpr auto DestroyMinAngVel = 0x274; // float
		constexpr auto ExplosionVelScale = 0x278; // float
		constexpr auto PartPool = 0x280; // TArray<ObjectProperty>
		constexpr auto FreeParts = 0x290; // TArray<int32_t>
		constexpr auto ActorsWithDeferredPartsToSpawn = 0x2a0; // TArray<ObjectProperty>
	}

	namespace n_UCameraState_Demolished_TA {
		constexpr auto RotationInterpRate = 0x98; // float
		constexpr auto DemolishedPawn = 0xa0; // ObjectProperty
		constexpr auto StateTime = 0xa8; // float
		constexpr auto InitialFOV = 0xac; // float
		constexpr auto FOVBlendTime = 0xb0; // float
		constexpr auto bInterp = 0xb4; // uint32_t : 1
		constexpr auto bTrackDemolisher = 0xb4; // uint32_t : 1
		constexpr auto MaxZoomInFOV = 0xb8; // float
		constexpr auto MaxFOVBlendDistance = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
	}

	namespace n_UBTC_NotAny {
		constexpr auto Targets = 0x90; // ObjectProperty
	}

	namespace n_UCachedUnlockedProducts_TA {
		constexpr auto Products = 0x60; // TArray<int32_t>
		constexpr auto __Products__ChangeNotify = 0x70; // DelegateProperty
	}

	namespace n_U__AchievementManager_TA__HandleTradeInComplete_AADB2EA440737B67069D259FD30F1B91 {
		constexpr auto PrevQuality = 0x60; // EProductQuality
	}

	namespace n_UFacebookIntegration {
		constexpr auto AppID = 0x88; // FString
		constexpr auto Permissions = 0x98; // TArray<FString>
		constexpr auto Username = 0xa8; // FString
		constexpr auto UserId = 0xb8; // FString
		constexpr auto AccessToken = 0xc8; // FString
		constexpr auto FriendsList = 0xd8; // TArray<FFacebookFriend>
	}

	namespace n_UTriggerInfo {
		constexpr auto AcceptedType = 0x60; // FNone*
		constexpr auto Triggers = 0x68; // TArray<ObjectProperty>
		constexpr auto Callback = 0x78; // DelegateProperty
		constexpr auto __UpdateTrigger__Delegate = 0x90; // DelegateProperty
	}

	namespace n_URPC_GetLeaderboardRankForUsersBase_X {
		constexpr auto PlayerIDs = 0xe8; // TArray<FUniqueNetId>
		constexpr auto LeaderboardId = 0xf8; // FString
		constexpr auto Players = 0x108; // TArray<FGetLeaderboardRankForUserData>
	}

	namespace n_USoundSettingsManager_TA {
		constexpr auto SoundSave = 0x60; // ObjectProperty
		constexpr auto SoundSaveController = 0x68; // ObjectProperty
		constexpr auto PrimaryPlayer = 0x70; // ObjectProperty
	}

	namespace n_UGFxData_UserSetting_TA {
		constexpr auto Type = 0x98; // EUserSettingType
		constexpr auto Group = 0x9c; // FName
		constexpr auto Id = 0xa4; // FName
		constexpr auto Label = 0xb0; // FString
		constexpr auto Description = 0xc0; // FString
		constexpr auto Values = 0xd0; // FString
		constexpr auto ValuesArray = 0xe0; // TArray<FString>
		constexpr auto Labels = 0xf0; // FString
		constexpr auto Value = 0x100; // FString
		constexpr auto bUserSetting = 0x110; // uint32_t : 1
		constexpr auto bEnabled = 0x110; // uint32_t : 1
		constexpr auto DefaultValue = 0x118; // FString
		constexpr auto Limits = 0x128; // FProfileSliderLimits
		constexpr auto __OnListValueGet__Delegate = 0x138; // DelegateProperty
		constexpr auto __OnListValueSet__Delegate = 0x150; // DelegateProperty
		constexpr auto __OnBooleanValueGet__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnBooleanValueSet__Delegate = 0x180; // DelegateProperty
		constexpr auto __OnScalarValueGet__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnScalarValueSet__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __GetDefaultValue__Delegate = 0x1c8; // DelegateProperty
	}

	namespace n_UEncodeObjectFactory_X {
		constexpr auto JsonSerializer = 0x60; // ObjectProperty
		constexpr auto ObjectSerializer = 0x68; // ObjectProperty
	}

	namespace n_UMatchmakingViewFilters_TA {
		constexpr auto Filters = 0x60; // TScriptInterface<Class> [0x7]
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulation = 0x78; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0xa0; // FRawDistributionFloat
	}

	namespace n_UBTC_ClosestTo {
		constexpr auto Targets = 0x1d0; // ObjectProperty
		constexpr auto ExtraDistance = 0x1d8; // float
	}

	namespace n_UTourRegistration_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Subscriptions = 0x68; // ObjectProperty
		constexpr auto RegistrationTask = 0x70; // ObjectProperty
		constexpr auto __OnRegistered__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UBotDetectionConfig_TA {
		constexpr auto IdleLeadTime = 0x78; // float
	}

	namespace n_UPartyMessage_ClubChanged_TA {
		constexpr auto ClubID = 0xa8; // QWordProperty
	}

	namespace n_UUserBugReportSubmissionData_TA {
		constexpr auto Categories = 0x60; // TArray<FName>
		constexpr auto UserMessage = 0x70; // FString
	}

	namespace n_U__Mutator_Freeplay_TA__HandleGameplaySettingsSave_7BFEA799494E5BADF117C98B768BE085 {
		constexpr auto Car = 0x60; // ObjectProperty
		constexpr auto Settings = 0x68; // ObjectProperty
	}

	namespace n_UTutorial_TA {
		constexpr auto KNode_Owner = 0x90; // ObjectProperty
		constexpr auto PC = 0x98; // ObjectProperty
		constexpr auto GameEvent = 0xa0; // ObjectProperty
		constexpr auto ModalSectionName = 0xa8; // FString
		constexpr auto MessageModal = 0xb8; // ObjectProperty
		constexpr auto Messages = 0xc0; // TArray<FMessageInfo>
		constexpr auto MessageIndex = 0xd0; // int32_t
		constexpr auto DisplayMessageStartTime = 0xd4; // float
		constexpr auto bEndTutorialOnFinalMessage = 0xd8; // uint32_t : 1
		constexpr auto bCompleteTutorialOnFinalMessage = 0xd8; // uint32_t : 1
		constexpr auto bInitialMessagesFinished = 0xd8; // uint32_t : 1
		constexpr auto bFadeAudio = 0xd8; // uint32_t : 1
		constexpr auto bSkipFadeIn = 0xd8; // uint32_t : 1
		constexpr auto bFadeTransitionComplete = 0xd8; // uint32_t : 1
		constexpr auto bTutorialStarted = 0xd8; // uint32_t : 1
		constexpr auto bActionNameToDetectPressed = 0xd8; // uint32_t : 1
		constexpr auto bCarTouched = 0xd8; // uint32_t : 1
		constexpr auto bCompleteOnBallTouch = 0xd8; // uint32_t : 1
		constexpr auto bFailTutorialOnOtherCarHitBall = 0xd8; // uint32_t : 1
		constexpr auto bDestroyBallsOnFadeIn = 0xd8; // uint32_t : 1
		constexpr auto bDestroyBotsOnFadeIn = 0xd8; // uint32_t : 1
		constexpr auto bHasBot = 0xd8; // uint32_t : 1
		constexpr auto bFoundBot = 0xd8; // uint32_t : 1
		constexpr auto bStartWithSecondaryCamActive = 0xd8; // uint32_t : 1
		constexpr auto bStartWithBoostMeterDisabled = 0xd8; // uint32_t : 1
		constexpr auto bBotCanPlay = 0xd8; // uint32_t : 1
		constexpr auto bStartBotOnAllMessagesDisplayed = 0xd8; // uint32_t : 1
		constexpr auto bBallCanHitPlayersGoal = 0xd8; // uint32_t : 1
		constexpr auto bCompleteOnLastBallTouched = 0xd8; // uint32_t : 1
		constexpr auto bCompleteOnHitGoal = 0xd8; // uint32_t : 1
		constexpr auto bFailOnHitGoal = 0xd8; // uint32_t : 1
		constexpr auto bFreezeCarOnSpawn = 0xd8; // uint32_t : 1
		constexpr auto bCanEverDodge = 0xd8; // uint32_t : 1
		constexpr auto bCanEverDoubleJump = 0xd8; // uint32_t : 1
		constexpr auto bTutorialFinished = 0xd8; // uint32_t : 1
		constexpr auto bPauseDuringMessages = 0xd8; // uint32_t : 1
		constexpr auto bCanResetTutorial = 0xd8; // uint32_t : 1
		constexpr auto bCanSkipTutorial = 0xd8; // uint32_t : 1
		constexpr auto bShowGameFinishMessage = 0xd8; // uint32_t : 1
		constexpr auto bSkipped = 0xd8; // uint32_t : 1
		constexpr auto bQuit = 0xdc; // uint32_t : 1
		constexpr auto bReset = 0xdc; // uint32_t : 1
		constexpr auto bTLog = 0xdc; // uint32_t : 1
		constexpr auto CorrectAnswer = 0xe0; // FMessageInfo
		constexpr auto IncorrectAnswer = 0x120; // FMessageInfo
		constexpr auto StartFadeDisplayTime = 0x160; // float
		constexpr auto FadeColor = 0x164; // FColor
		constexpr auto FadeTime = 0x168; // float
		constexpr auto Shell = 0x170; // ObjectProperty
		constexpr auto ActionNameToDetect = 0x178; // FName
		constexpr auto FailTimeAfterBallTouch = 0x180; // float
		constexpr auto CountdownTime = 0x184; // float
		constexpr auto BotTeam = 0x188; // int32_t
		constexpr auto TutorialFailTime = 0x18c; // float
		constexpr auto TutorialCompleteTime = 0x190; // float
		constexpr auto BallDestroyTimeOnTouch = 0x194; // float
		constexpr auto AllMessagesDisplayedTime = 0x198; // float
		constexpr auto WaitTimeBeforeCheckCompleteAction = 0x19c; // float
		constexpr auto TutorialStatus = 0x1a0; // ETutorialStatus
		constexpr auto StartTime = 0x1a4; // float
		constexpr auto StartTimeString = 0x1a8; // FString
		constexpr auto UseActions = 0x1b8; // TArray<FString>
		constexpr auto IgnoreActionPressList = 0x1c8; // TArray<FName>
		constexpr auto FailedActionPressList = 0x1d8; // TArray<FName>
		constexpr auto StartActionPressList = 0x1e8; // TArray<FName>
		constexpr auto CompleteActionPressList = 0x1f8; // TArray<FName>
		constexpr auto CompleteActionIgnorePressList = 0x208; // TArray<FName>
		constexpr auto __EventTutorialEnded__Delegate = 0x218; // DelegateProperty
		constexpr auto __EventTutorialCompleted__Delegate = 0x230; // DelegateProperty
	}

	namespace n_ACarComponent_DoubleJump_TA {
		constexpr auto JumpImpulse = 0x2e8; // float
		constexpr auto ImpulseScale = 0x2ec; // float
		constexpr auto DoubleJumpImpulse = 0x2f0; // FVector
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_UPsyNetService_PartyOwnerChanged_X {
		constexpr auto PartyID = 0x90; // FString
		constexpr auto NotificationType = 0xa0; // FString
		constexpr auto Content = 0xb0; // FUniqueNetId
		constexpr auto FromUserId = 0xf8; // FUniqueNetId
		constexpr auto CreatedAt = 0x140; // int32_t
		constexpr auto ForUserId = 0x148; // FUniqueNetId
	}

	namespace n_UApexDynamicComponent {
		constexpr auto ComponentDynamicResources = 0x2a8; // FPointer
	}

	namespace n_UOnlineProduct_TA {
		constexpr auto ProductID = 0x60; // int32_t
		constexpr auto InstanceID = 0x68; // FProductInstanceID
		constexpr auto Attributes = 0x78; // TArray<ObjectProperty>
		constexpr auto SeriesID = 0x88; // int32_t
		constexpr auto TradeHold = 0x8c; // int32_t
		constexpr auto AddedTimestamp = 0x90; // QWordProperty
		constexpr auto CachedSortLabel = 0x98; // FString
		constexpr auto CachedShortSortLabel = 0xa8; // FString
		constexpr auto CachedHash = 0xb8; // FProductHashID
		constexpr auto CachedLocalizedSeries = 0xc0; // FString
	}

	namespace n_URPC_AddQuitter_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Reason = 0x130; // FString
		constexpr auto PlaylistId = 0x140; // int32_t
	}

	namespace n_U__OnlineGameSkill_X__OnSkillSynced_6B59D519434D25B16B797AB8F73082A6 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_UBTC_Lock {
		constexpr auto LockName = 0x90; // FName
		constexpr auto NumLocks = 0x98; // int32_t
	}

	namespace n_UClientJitterBuffer_STS_TA {
		constexpr auto PrevBufferTime = 0x80; // float
	}

	namespace n_UPartyInviteNotification_TA {
		constexpr auto LobbyId = 0x110; // FUniqueLobbyId
		constexpr auto PlayerID = 0x120; // FUniqueNetId
	}

	namespace n_U__GFxData_TourRegistration_TA__Register_3FCE87D240087B399F2D5AB3BE6DF178 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_UQuickChatTracker_TA {
		constexpr auto GroupMessages = 0xa0; // FMap_Mirror
	}

	namespace n_UPostProcessChain {
		constexpr auto Effects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_URPC_GetLegacyStatus_TA {
		constexpr auto LegacyStatus = 0xe8; // int32_t
		constexpr auto Products = 0xf0; // TArray<FOnlineProductData>
		constexpr auto ProcessedLegacyStatus = 0x100; // ELegacyBoxStatus
	}

	namespace n_URPC_MicroTransactions_StartPurchase_TA {
		constexpr auto Language = 0xe8; // FString
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
		constexpr auto CartItems = 0x140; // TArray<FMTCartItem>
	}

	namespace n_AReplicatedRespawnTicket_TA {
		constexpr auto SecondsRemaining = 0x268; // float
		constexpr auto DisplaySeconds = 0x26c; // int32_t
	}

	namespace n_UProductAttribute_SortingLabel_TA {
		constexpr auto LocalizationKey = 0x80; // FString
		constexpr auto ReplacementKey = 0x90; // FString
		constexpr auto ReplacementValue = 0xa0; // FString
		constexpr auto SortingLabel = 0xb0; // FString
		constexpr auto MaxReplacementSize = 0xc0; // int32_t
	}

	namespace n_UCheatManager {
		constexpr auto ViewingFrom = 0x60; // FString
		constexpr auto OwnCamera = 0x70; // FString
	}

	namespace n_ASpecialPickup_Swapper_TA {
		constexpr auto OwnCarFX = 0x3c0; // ObjectProperty
		constexpr auto OtherCarFX = 0x3c8; // ObjectProperty
		constexpr auto AddVelocityZ = 0x3d0; // float
		constexpr auto OtherFX = 0x3d8; // ObjectProperty
		constexpr auto OtherCar = 0x3e0; // ObjectProperty
	}

	namespace n_UOnlineGameJoinGame_TA {
		constexpr auto AssetCache = 0x470; // ComponentProperty
	}

	namespace n_UPlayerBanner_TA {
		constexpr auto Asset = 0x198; // ObjectProperty
	}

	namespace n_USeqAct_SetMatInstParam_Vector {
		constexpr auto ParamName = 0x160; // FName
		constexpr auto MatInstActor = 0x168; // ObjectProperty
		constexpr auto VectorValue = 0x170; // FVector
	}

	namespace n_APylon_Soccar_TA {
		constexpr auto FieldOrientation = 0x4a8; // FRotator
		constexpr auto FieldSize = 0x4b4; // FVector
		constexpr auto FieldExtent = 0x4c0; // FVector
		constexpr auto FieldCenter = 0x4cc; // FVector
		constexpr auto Goals = 0x4d8; // TArray<ComponentProperty>
		constexpr auto SpawnPoints = 0x4e8; // TArray<ObjectProperty>
		constexpr auto GroundZ = 0x4f8; // float
	}

	namespace n_U__TourGameUpdateDispatcher_TA__HandleUpdateGameSuccess_947C841044CDBAD0975D84ACBD6B8F3E {
		constexpr auto TourServer = 0x60; // ObjectProperty
	}

	namespace n_ATeamInfo {
		constexpr auto TeamName = 0x268; // FString
		constexpr auto Size = 0x278; // int32_t
		constexpr auto Score = 0x27c; // int32_t
		constexpr auto TeamIndex = 0x280; // int32_t
		constexpr auto TeamColor = 0x284; // FColor
		constexpr auto RegistryGroup = 0x288; // ComponentProperty
	}

	namespace n_UGFxData_UIConfig_TA {
		constexpr auto MaxCurrencyTradeAmount = 0x98; // int32_t
		constexpr auto bAprilFoolsRankedIcons = 0x9c; // uint32_t : 1
		constexpr auto bAprilFoolsPlaylistImages = 0x9c; // uint32_t : 1
	}

	namespace n_UProductOverride_WheelOverrides_TA {
		constexpr auto WheelsToChange = 0x60; // TArray<EWheelPosition>
		constexpr auto OverridesToApply = 0x70; // TArray<ObjectProperty>
	}

	namespace n_UApexDestructibleAsset {
		constexpr auto MApexAsset = 0xb0; // FPointer
		constexpr auto Materials = 0xb8; // TArray<ObjectProperty>
		constexpr auto FractureMaterials = 0xc8; // TArray<ObjectProperty>
		constexpr auto bPlaySingleFractureMaterialEffect = 0xd8; // uint32_t : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xd8; // uint32_t : 1
		constexpr auto bDynamic = 0xd8; // uint32_t : 1
		constexpr auto DefaultPhysMaterial = 0xe0; // ObjectProperty
		constexpr auto MDestructibleThumbnailComponent = 0xe8; // FPointer
		constexpr auto CrumbleEmitterName = 0xf0; // FString
		constexpr auto DustEmitterName = 0x100; // FString
		constexpr auto DestructibleParameters = 0x110; // FNxDestructibleParameters
	}

	namespace n_UParticleModuleWorldAttractor {
		constexpr auto bParticleLifeRelative = 0x70; // uint32_t : 1
		constexpr auto AttractorInfluence = 0x78; // FRawDistributionFloat
	}

	namespace n_U__PsyNetBeacon_X__SendMessageToServer_8826E9C146F83F213345B5BC92EAA450 {
		constexpr auto RPC = 0x60; // ObjectProperty
		constexpr auto Connection = 0x68; // ObjectProperty
	}

	namespace n_URPC_GetSkillLeaderboardValueForUser_X {
		constexpr auto Playlist = 0x150; // int32_t
	}

	namespace n_U__TourList_TA__AddUnique_FB7BF71A4A758FBCBEC0A19BB2B0F8DB {
		constexpr auto Tournament = 0x60; // ObjectProperty
	}

	namespace n_UMatchmakingViewFilter_Unranked_TA {
		constexpr auto MicroEventConfig = 0x60; // TScriptInterface<Class>
		constexpr auto Playlists = 0x70; // TScriptInterface<Class>
	}

	namespace n_U__GFxData_MultiItemDrops_TA__HandleAchievementRewardsReceived_F23357B74DF2150BE0F78DA316731E72 {
		constexpr auto Currency = 0x60; // TArray<FCurrency>
	}

	namespace n_UParticleSystem {
		constexpr auto SystemUpdateMode = 0x60; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0x61; // ParticleSystemLODMethod
		constexpr auto OcclusionBoundsMethod = 0x62; // EParticleSystemOcclusionBoundsMethod
		constexpr auto UpdateTime_FPS = 0x64; // float
		constexpr auto UpdateTime_Delta = 0x68; // float
		constexpr auto WarmupTime = 0x6c; // float
		constexpr auto WarmupTickRate = 0x70; // float
		constexpr auto Emitters = 0x78; // TArray<ObjectProperty>
		constexpr auto PreviewComponent = 0x88; // ComponentProperty
		constexpr auto ThumbnailAngle = 0x90; // FRotator
		constexpr auto ThumbnailDistance = 0x9c; // float
		constexpr auto ThumbnailWarmup = 0xa0; // float
		constexpr auto bLit = 0xa4; // uint32_t : 1
		constexpr auto bOrientZAxisTowardCamera = 0xa4; // uint32_t : 1
		constexpr auto bRegenerateLODDuplicate = 0xa4; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xa4; // uint32_t : 1
		constexpr auto bShouldResetPeakCounts = 0xa4; // uint32_t : 1
		constexpr auto bHasPhysics = 0xa4; // uint32_t : 1
		constexpr auto bUseRealtimeThumbnail = 0xa4; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0xa4; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0xa4; // uint32_t : 1
		constexpr auto bUseDelayRange = 0xa4; // uint32_t : 1
		constexpr auto CurveEdSetup = 0xa8; // ObjectProperty
		constexpr auto LODDistanceCheckTime = 0xb0; // float
		constexpr auto LODDistances = 0xb8; // TArray<float>
		constexpr auto EditorLODSetting = 0xc8; // int32_t
		constexpr auto LODSettings = 0xd0; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0xe0; // FBox
		constexpr auto SecondsBeforeInactive = 0xfc; // float
		constexpr auto FloorMesh = 0x100; // FString
		constexpr auto FloorPosition = 0x110; // FVector
		constexpr auto FloorRotation = 0x11c; // FRotator
		constexpr auto FloorScale = 0x128; // float
		constexpr auto FloorScale3D = 0x12c; // FVector
		constexpr auto BackgroundColor = 0x138; // FColor
		constexpr auto ThumbnailImage = 0x140; // ObjectProperty
		constexpr auto Delay = 0x148; // float
		constexpr auto DelayLow = 0x14c; // float
		constexpr auto MacroUVPosition = 0x150; // FVector
		constexpr auto MacroUVRadius = 0x15c; // float
		constexpr auto CustomOcclusionBounds = 0x160; // FBox
		constexpr auto SoloTracking = 0x180; // TArray<FLODSoloTrack>
	}

	namespace n_UPsyNetRequestQue_X {
		constexpr auto RequestTimeout = 0x60; // float
		constexpr auto Requests = 0x68; // TArray<FPsyNetRequest>
		constexpr auto __SendMessageDelegate__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x78; // float
		constexpr auto SpawnPerUnit = 0x80; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongX = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongY = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongZ = 0xa8; // uint32_t : 1
		constexpr auto MovementTolerance = 0xac; // float
		constexpr auto MaxFrameDistance = 0xb0; // float
		constexpr auto MinFrameDistance = 0xb4; // float
	}

	namespace n_UApexComponentBase {
		constexpr auto ComponentBaseResources = 0x288; // FPointer
		constexpr auto ReleaseResourcesFence = 0x290; // FRenderCommandFence_Mirror
		constexpr auto Asset = 0x298; // ObjectProperty
		constexpr auto WireframeColor = 0x2a0; // FColor
		constexpr auto bAssetChanged = 0x2a4; // uint32_t : 1
	}

	namespace n_USeqAct_PrepareMapChange {
		constexpr auto MainLevelName = 0x178; // FName
		constexpr auto InitiallyLoadedSecondaryLevelNames = 0x180; // TArray<FName>
		constexpr auto bIsHighPriority = 0x190; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x190; // uint32_t : 1
	}

	namespace n_UGFxData_Friends_TA {
		constexpr auto Friends = 0x98; // TArray<FPersonaDataId>
		constexpr auto PlatformFriends = 0xa8; // TArray<FPersonaDataId>
		constexpr auto EpicFriends = 0xb8; // TArray<FPersonaDataId>
		constexpr auto bLocked = 0xc8; // TArray<FPersonaDataId>
		constexpr auto RecentPlayers = 0xd8; // ComponentProperty
		constexpr auto RecentPlayersToBeAdded = 0xe0; // TArray<ObjectProperty>
		constexpr auto Recent = 0xf0; // TArray<FPersonaDataId>
		constexpr auto Pending = 0x100; // TArray<FPersonaDataId>
		constexpr auto BlockedFriendInvites = 0x110; // TArray<FPersonaDataId>
		constexpr auto NumOnlineFriendsPlatform = 0x120; // int32_t
		constexpr auto NumInGameFriendsPlatform = 0x124; // int32_t
		constexpr auto NumOnlineFriendsEpic = 0x128; // int32_t
		constexpr auto NumInGameFriendsEpic = 0x12c; // int32_t
		constexpr auto bPlatformFriendsDownloadFailed = 0x130; // uint32_t : 1
		constexpr auto bEpicFriendsDownloadFailed = 0x130; // uint32_t : 1
		constexpr auto bUsePresenceGroups = 0x130; // uint32_t : 1
		constexpr auto bCrossplayEnabled = 0x130; // uint32_t : 1
		constexpr auto PersonasData = 0x138; // ObjectProperty
		constexpr auto OnlineGame = 0x140; // ObjectProperty
		constexpr auto AccountSettings = 0x148; // ComponentProperty
		constexpr auto DefaultPlatformFriendGroups = 0x150; // TArray<EPresenceGroup>
		constexpr auto DefaultEpicFriendGroups = 0x160; // TArray<EPresenceGroup>
		constexpr auto Party = 0x170; // ObjectProperty
		constexpr auto PartyMemberPersonas = 0x178; // TArray<ObjectProperty>
		constexpr auto PlatformPartyPresenceGroup = 0x188; // ObjectProperty
		constexpr auto EpicPartyPresenceGroup = 0x190; // ObjectProperty
	}

	namespace n_UGFxAction_CloseMovie {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto bUnload = 0x168; // uint32_t : 1
	}

	namespace n_UEngineAudioRevSimVelocitySync_TA {
		constexpr auto NoThrottleTime = 0x70; // float
		constexpr auto NoThrottleTimeElapsed = 0x74; // float
		constexpr auto RealToSimScale = 0x78; // float
		constexpr auto InterpSpeed = 0x7c; // float
		constexpr auto InterpTime = 0x80; // float
		constexpr auto InterpTimeLeft = 0x84; // float
		constexpr auto FirstGearThrottleThreshold = 0x88; // float
	}

	namespace n_U__StayAsPartySystem_TA__ProcessVote_538AB32F4269592D3F1D03A52B94C351 {
		constexpr auto VoterItr = 0x60; // ObjectProperty
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x70; // FRawDistributionFloat
	}

	namespace n_UGFxData_Wallet_TA {
		constexpr auto Wallet = 0x98; // ObjectProperty
		constexpr auto Currencies = 0xa0; // TArray<ObjectProperty>
	}

	namespace n_URPC_PartyChangeOwner_X {
		constexpr auto NewOwnerId = 0xf8; // FUniqueNetId
		constexpr auto Info = 0x140; // FPsyNetPartyInfo
		constexpr auto Members = 0x1b0; // TArray<FPsyNetPartyMember>
	}

	namespace n_UOnlineGamePlaylists_X {
		constexpr auto PlaylistClass = 0x98; // FNone*
		constexpr auto DownloadedPlaylists = 0xa0; // TArray<ObjectProperty>
		constexpr auto RankedConfig = 0xb0; // ObjectProperty
		constexpr auto CompetitiveCategory = 0xb8; // FString
		constexpr auto CasualCategory = 0xc8; // FString
		constexpr auto ExtraModeCategory = 0xd8; // FString
		constexpr auto __EventPlaylistsChanged__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_AFXActor_BallBreakout_TA {
		constexpr auto MaxChargeSFX = 0x3c0; // ObjectProperty
		constexpr auto SwitchTeamSFX = 0x3c8; // ObjectProperty
		constexpr auto IdleSFX = 0x3d0; // ObjectProperty
		constexpr auto ResetSFX = 0x3d8; // ObjectProperty
		constexpr auto ChargeSFX = 0x3e0; // TArray<ObjectProperty>
		constexpr auto DamageSFX = 0x3f0; // TArray<ObjectProperty>
		constexpr auto DamageEvents = 0x400; // TArray<ObjectProperty>
		constexpr auto BallBreakout = 0x410; // ObjectProperty
		constexpr auto LastDamage = 0x418; // int32_t
		constexpr auto LastNoDamageHit = 0x41c; // float
	}

	namespace n_UProductAttribute_TeamOverride_TA {
		constexpr auto Team = 0x80; // EPaintTeam
		constexpr auto Materials = 0x88; // TArray<ObjectProperty>
		constexpr auto AssetName = 0x98; // FName
		constexpr auto Thumbnail = 0xa0; // ObjectProperty
	}

	namespace n_UAnimationCompressionAlgorithm_Automatic {
		constexpr auto MaxEndEffectorError = 0x78; // float
		constexpr auto bTryFixedBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryPerTrackBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryLinearKeyRemovalCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryIntervalKeyRemoval = 0x7c; // uint32_t : 1
		constexpr auto bRunCurrentDefaultCompressor = 0x7c; // uint32_t : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x7c; // uint32_t : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x7c; // uint32_t : 1
	}

	namespace n_URPC_CheckReplacementDedicatedServer_X {
		constexpr auto ServerId = 0xe8; // QWordProperty
		constexpr auto bFoundReplacement = 0xf0; // uint32_t : 1
		constexpr auto Server = 0xf8; // FCheckReplacementDedicatedServerData
	}

	namespace n_UMantleReachSpec {
		constexpr auto bClimbUp = 0xc8; // uint32_t : 1
	}

	namespace n_URPC_SetClubMotD_X {
		constexpr auto Text = 0x120; // FString
	}

	namespace n_UPlayerInputSequence_TA {
		constexpr auto Sequence = 0xd0; // TArray<FName>
		constexpr auto ConsoleCommand = 0xe0; // FString
		constexpr auto Timeout = 0xf0; // float
		constexpr auto bOrderMatters = 0xf4; // uint32_t : 1
		constexpr auto bCheat = 0xf4; // uint32_t : 1
		constexpr auto bRemoveOnComplete = 0xf4; // uint32_t : 1
		constexpr auto bRemoveAfterSplashScreen = 0xf4; // uint32_t : 1
		constexpr auto bCaptureInput = 0xf4; // uint32_t : 1
		constexpr auto bConfirm = 0xf4; // uint32_t : 1
		constexpr auto bPrimaryPlayerOnly = 0xf4; // uint32_t : 1
		constexpr auto Message = 0xf8; // FString
		constexpr auto CurrentSequence = 0x108; // TArray<FName>
	}

	namespace n_UGFxData_WorldSelection_TA {
		constexpr auto Player = 0x98; // ObjectProperty
	}

	namespace n_UCarPreviewSet_TA {
		constexpr auto CarPreviewActors = 0x60; // TArray<ObjectProperty>
		constexpr auto OnlineParty = 0x70; // ObjectProperty
		constexpr auto bRemotePlayersHidden = 0x78; // uint32_t : 1
		constexpr auto MaxCars = 0x7c; // int32_t
		constexpr auto __EventPreviewActorsChanged__Delegate = 0x80; // DelegateProperty
		constexpr auto __EventPreviewActorSetProfile__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventSwapFinished__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_URPC_ProductsPlayerGet_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ProductData = 0x130; // TArray<FOnlineProductData>
		constexpr auto ExpiredProducts = 0x140; // TArray<FOnlineProductData>
		constexpr auto Products = 0x150; // TArray<ObjectProperty>
		constexpr auto ExpiredOnlineProducts = 0x160; // TArray<ObjectProperty>
	}

	namespace n_UMusicTracklistFactory_TA {
		constexpr auto TracklistNull = 0x60; // ObjectProperty
		constexpr auto TracklistBuilder = 0x68; // TScriptInterface<Class>
		constexpr auto LastTrackAction = 0x78; // DelegateProperty
	}

	namespace n_U__MatchType_Tournament_TA__CanSkipPreMatchLobby_6E23F1774F308AF6E68DFCA630C8A8EA {
		constexpr auto MaxTeamSize = 0x60; // int32_t
	}

	namespace n_UKismetBookMark {
		constexpr auto BookMarkSequencePathName = 0x70; // FString
	}

	namespace n_U__RecentPlayers_TA__AddMatchMate_35872E024307E12D6E7B7387563E3007 {
		constexpr auto Persona = 0x60; // ObjectProperty
	}

	namespace n_UProfileGamepadSave_TA {
		constexpr auto GamepadBindings = 0xc8; // TArray<FPlayerBinding>
		constexpr auto ControllerDeadzone = 0xd8; // float
		constexpr auto DodgeInputThreshold = 0xdc; // float
		constexpr auto SteeringSensitivity = 0xe0; // float
		constexpr auto AirControlSensitivity = 0xe4; // float
	}

	namespace n_U__OnlineProduct_TA__SortOnlineProductsByQuality_A3417053431EDB4D6E61C8B2C1174A13 {
		constexpr auto I = 0x60; // int32_t
	}

	namespace n_UDownloadedPlaylistsData_X {
		constexpr auto Playlists = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UPsyNetService_FriendChatReceived_X {
		constexpr auto FromPlayerID = 0x90; // FUniqueNetId
		constexpr auto Message = 0xd8; // FString
		constexpr auto IsLocalMessage = 0xe8; // uint32_t : 1
		constexpr auto TimeStamp = 0xf0; // QWordProperty
	}

	namespace n_U__VanitySetManager_TA__RequestAvatars_535F1D2442F3015A5A634594A1980789 {
		constexpr auto EmptyID = 0x60; // FUniqueNetId
	}

	namespace n_UAkComponent {
		constexpr auto BoneName = 0xa0; // FName
		constexpr auto AutoPlayEvent = 0xa8; // ObjectProperty
		constexpr auto bStopWhenOwnerDestroyed = 0xb0; // uint32_t : 1
	}

	namespace n_UUIDataStore_GameResource {
		constexpr auto ElementProviderTypes = 0xa0; // TArray<FGameResourceDataProvider>
		constexpr auto ListElementProviders = 0xb0; // FMultiMap_Mirror
	}

	namespace n_AInstancedFoliageActor {
		constexpr auto FoliageMeshes = 0x268; // FMap_Mirror
		constexpr auto SelectedMesh = 0x2b8; // ObjectProperty
		constexpr auto InstancedStaticMeshComponents = 0x2c0; // TArray<ComponentProperty>
	}

	namespace n_UItemPoolCycle_TA {
		constexpr auto RemainingItems = 0x70; // TArray<ObjectProperty>
		constexpr auto LastDispensedItem = 0x80; // ObjectProperty
		constexpr auto DemolishedItem = 0x88; // ObjectProperty
	}

	namespace n_U__ProductTransactions_TA__GetUnequippedProducts_BA57010F4D29AE716B75A89C9ADF0753 {
		constexpr auto AllEquippedInstanceIDs = 0x60; // TArray<FProductInstanceID>
	}

	namespace n_ANxGenericForceFieldBox {
		constexpr auto RenderComponent = 0x360; // ComponentProperty
		constexpr auto BoxExtent = 0x368; // FVector
	}

	namespace n_U__GFxData_Clubs_TA__SyncClubDetails_3985FDB04A0F0FA37E760399C9EB504F {
		constexpr auto ClubID = 0x60; // QWordProperty
	}

	namespace n_U__GFxData_MultiItemDrops_TA__DropRewardGroup_7A8B6FF9417A73250B212A9244180EE9 {
		constexpr auto DropGroup = 0x60; // ObjectProperty
	}

	namespace n_UPBRuleNodeEdgeAngle {
		constexpr auto Edge = 0x98; // EProcBuildingEdge
		constexpr auto Angles = 0xa0; // TArray<FRBEdgeAngleInfo>
	}

	namespace n_UHeadTrackingComponent {
		constexpr auto TrackControllerName = 0xa0; // TArray<FName>
		constexpr auto LookAtActorRadius = 0xb0; // float
		constexpr auto bDisableBeyondLimit = 0xb4; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xb8; // float
		constexpr auto MinLookAtTime = 0xbc; // float
		constexpr auto MaxInterestTime = 0xc0; // float
		constexpr auto ActorClassesToLookAt = 0xc8; // TArray<FNone*>
		constexpr auto TargetBoneNames = 0xd8; // TArray<FName>
		constexpr auto CurrentActorMap = 0xe8; // TMap<None, None>
		constexpr auto SkeletalMeshComp = 0x138; // ComponentProperty
		constexpr auto TrackControls = 0x140; // TArray<ObjectProperty>
		constexpr auto RootMeshLocation = 0x150; // FVector
		constexpr auto RootMeshRotation = 0x15c; // FRotator
	}

	namespace n_APRI_X {
		constexpr auto __EventPlayerNameChanged__Delegate = 0x410; // DelegateProperty
		constexpr auto __EventUniqueIdChanged__Delegate = 0x428; // DelegateProperty
		constexpr auto __EventDestroyed__Delegate = 0x440; // DelegateProperty
	}

	namespace n_URPC_RocketPassGetPlayerPrestigeRewards_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto RocketPassID = 0x130; // int32_t
		constexpr auto PrestigeRewards = 0x138; // TArray<FRocketPassRewardData>
	}

	namespace n_UGFxData_RocketPass_TA {
		constexpr auto FreeRewards = 0x98; // TArray<FRocketPassProduct>
		constexpr auto PremiumRewards = 0xa8; // TArray<FRocketPassProduct>
		constexpr auto PrestigeRewards = 0xb8; // TArray<FRocketPassProduct>
		constexpr auto PremiumXPRewards = 0xc8; // TArray<FRocketPassXPReward>
		constexpr auto PremiumCurrencyRewards = 0xd8; // TArray<FRocketPassCurrencyReward>
		constexpr auto StartTime = 0xe8; // QWordProperty
		constexpr auto EndTime = 0xf0; // QWordProperty
		constexpr auto RocketPassSet = 0xf8; // ComponentProperty
		constexpr auto PendingMasterTask = 0x100; // ObjectProperty
		constexpr auto RegionRestrictedPurchaseTiers = 0x108; // FString
		constexpr auto MainMenuName = 0x118; // FName
		constexpr auto RocketPassMenuName = 0x120; // FName
		constexpr auto bHideMainMenuButton = 0x128; // uint32_t : 1
		constexpr auto RocketPass = 0x130; // ObjectProperty
		constexpr auto RocketPassConfig = 0x138; // ObjectProperty
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x60; // FString
		constexpr auto HelpUsage = 0x70; // FString
		constexpr auto HelpWebLink = 0x80; // FString
		constexpr auto HelpParamNames = 0x90; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0xa0; // TArray<FString>
		constexpr auto IsServer = 0xb0; // uint32_t : 1
		constexpr auto IsClient = 0xb0; // uint32_t : 1
		constexpr auto IsEditor = 0xb0; // uint32_t : 1
		constexpr auto LogToConsole = 0xb0; // uint32_t : 1
		constexpr auto ShowErrorCount = 0xb0; // uint32_t : 1
	}

	namespace n_ANote {
		constexpr auto Text = 0x268; // FString
	}

	namespace n_U__CrumbTrails_TA__SetupActivationCondition_B708C9F441A228882C97F8ABEA3CB325 {
		constexpr auto Index = 0x60; // int32_t
	}

	namespace n_UGFxData_PlayerBanners_TA {
		constexpr auto Banners = 0x98; // TArray<FGFxPlayerBannerRef>
		constexpr auto LastPreviewBanner = 0xa8; // ComponentProperty
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x78; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xa0; // FRawDistributionFloat
	}

	namespace n_UEOSOnlineStorageUploader_TA {
		constexpr auto Config = 0x60; // ObjectProperty
		constexpr auto bSaveDataDirty = 0x68; // uint32_t : 1
		constexpr auto bUploadInFlight = 0x68; // uint32_t : 1
		constexpr auto LastSuccessfulUploadTime = 0x70; // QWordProperty
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x70; // Beam2SourceTargetMethod
		constexpr auto SourceTangentMethod = 0x71; // Beam2SourceTargetTangentMethod
		constexpr auto SourceName = 0x74; // FName
		constexpr auto bSourceAbsolute = 0x7c; // uint32_t : 1
		constexpr auto bLockSource = 0x7c; // uint32_t : 1
		constexpr auto bLockSourceTangent = 0x7c; // uint32_t : 1
		constexpr auto bLockSourceStength = 0x7c; // uint32_t : 1
		constexpr auto Source = 0x80; // FRawDistributionVector
		constexpr auto SourceTangent = 0xa8; // FRawDistributionVector
		constexpr auto SourceStrength = 0xd0; // FRawDistributionFloat
	}

	namespace n_USeqAct_ToggleHidden {
		constexpr auto bToggleBasedActors = 0x160; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x168; // TArray<FNone*>
	}

	namespace n_USeqAct_SetTutorialTip_TA {
		constexpr auto Tip = 0x160; // FString
		constexpr auto ActionNames = 0x170; // TArray<FName>
	}

	namespace n_UBallTrajectoryComponent_TA {
		constexpr auto bEnabled = 0xa8; // uint32_t : 1
		constexpr auto bCalculatePoints = 0xa8; // uint32_t : 1
		constexpr auto TrajectoryPoints = 0xb0; // TArray<FVector>
		constexpr auto TrajectorySettings = 0xc0; // FTrajectorySetup
		constexpr auto TotalPathDistance = 0xd4; // float
		constexpr auto StartLocation = 0xd8; // FVector
		constexpr auto StartVelocity = 0xe4; // FVector
		constexpr auto TrajectoryUpdateTime = 0xf0; // float
		constexpr auto __EventTrajectoryEnabledChanged__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UFaceItMatchNotification_TA {
		constexpr auto ReservationData = 0x110; // FServerReservationData
		constexpr auto MatchInfo = 0x190; // FFaceItMatchInfo
	}

	namespace n_UTcpConnection {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto VfTable_IIReservationConnection_X = 0x68; // FPointer
		constexpr auto InitialConnectionTimeout = 0x70; // float
		constexpr auto ConnectionTimeout = 0x74; // float
		constexpr auto Socket = 0x78; // FPointer
		constexpr auto ConnectionState = 0x80; // ETcpConnectionState
		constexpr auto WebSocketState = 0x81; // EWebSocketState
		constexpr auto LastReceiveTime = 0x84; // float
		constexpr auto InBytes = 0x88; // TArray<char>
		constexpr auto OutBytes = 0x98; // TArray<char>
		constexpr auto OutMessageLengths = 0xa8; // TArray<int32_t>
		constexpr auto QueuedWebSocketBytes = 0xb8; // TArray<char>
		constexpr auto QueuedWebSocketMessageLengths = 0xc8; // TArray<int32_t>
		constexpr auto InBytesDecoded = 0xd8; // TArray<char>
		constexpr auto BunchBytes = 0xe8; // TArray<char>
		constexpr auto __EventConnected__Delegate = 0xf8; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0x110; // DelegateProperty
		constexpr auto __EventReceivedBunch__Delegate = 0x128; // DelegateProperty
	}

	namespace n_URPC_GetLeaderboardValueForUser_X {
		constexpr auto Stat = 0x150; // FString
	}

	namespace n_USeqAct_CameraShake {
		constexpr auto Shake = 0x160; // ObjectProperty
		constexpr auto ShakeScale = 0x168; // float
		constexpr auto bDoControllerVibration = 0x16c; // uint32_t : 1
		constexpr auto bRadialShake = 0x16c; // uint32_t : 1
		constexpr auto bOrientTowardRadialEpicenter = 0x16c; // uint32_t : 1
		constexpr auto RadialShake_InnerRadius = 0x170; // float
		constexpr auto RadialShake_OuterRadius = 0x174; // float
		constexpr auto RadialShake_Falloff = 0x178; // float
		constexpr auto PlaySpace = 0x17c; // ECameraAnimPlaySpace
		constexpr auto LocationActor = 0x180; // ObjectProperty
	}

	namespace n_UGFxData_ProductAttribute_Indestructible_TA {
		constexpr auto bIndestructible = 0xb0; // uint32_t : 1
	}

	namespace n_UGFxData_FaceIt_TA {
		constexpr auto bEnabled = 0x98; // uint32_t : 1
		constexpr auto FaceIt = 0xa0; // ObjectProperty
		constexpr auto Config = 0xa8; // ObjectProperty
		constexpr auto PsyNet = 0xb0; // ObjectProperty
		constexpr auto LastSpectatorPopupTime = 0xb8; // QWordProperty
		constexpr auto SpectatorPopupDelaySeconds = 0xc0; // QWordProperty
	}

	namespace n_U__TAsyncResult__Texture2DDynamic__Copy_F4F494BE4851255A61602DBB68B60CD8 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_UProductDatabase_TA {
		constexpr auto Products_New = 0x60; // TArray<ObjectProperty>
		constexpr auto Products_Pristine = 0x70; // TArray<ObjectProperty>
		constexpr auto DLCPacks = 0x80; // TArray<ObjectProperty>
		constexpr auto DLCPacks_Pristine = 0x90; // TArray<ObjectProperty>
		constexpr auto AlwaysLoadedAssets = 0xa0; // TArray<ObjectProperty>
		constexpr auto BodyToEngineAudioMap = 0xb0; // TArray<FBodyToEngineAudioPair>
		constexpr auto BodyToEngineAudioMap_Pristine = 0xc0; // TArray<FBodyToEngineAudioPair>
		constexpr auto GarageFolderInfo = 0xd0; // FGarageFolderData
		constexpr auto ProductNameToProductID = 0x130; // FMap_Mirror
		constexpr auto ProductNameToProductID_Pristine = 0x180; // FMap_Mirror
		constexpr auto DuplicateToAssetSourceMap = 0x1d0; // FMap_Mirror
		constexpr auto TemporaryProducts = 0x220; // TArray<FTemporaryProduct>
		constexpr auto bUseQualityToCheckForOnlineProduct = 0x230; // uint32_t : 1
	}

	namespace n_AGameEvent_Training_Goalie_TA {
		constexpr auto Score = 0xed0; // int32_t
	}

	namespace n_UParticleModuleTypeDataMeshPhysX {
		constexpr auto PhysXParSys = 0x98; // ObjectProperty
		constexpr auto PhysXRotationMethod = 0xa0; // EPhysXMeshRotationMethod
		constexpr auto FluidRotationCoefficient = 0xa4; // float
		constexpr auto VerticalLod = 0xa8; // FPhysXEmitterVerticalLodProperties
		constexpr auto ZOffset = 0xb8; // float
	}

	namespace n_UGFxData_SaveData_TA {
		constexpr auto SavedValues = 0x98; // ObjectProperty
	}

	namespace n_U__MapsConfig_TA__GetMapSetByName_13BDFD3D461AECAD8C16B7B936151B46 {
		constexpr auto SetName = 0x60; // FName
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x88; // uint32_t : 1
	}

	namespace n_UPsyNetServiceSubscriptions_X {
		constexpr auto Subscriptions = 0x70; // TArray<FServiceSubscription>
	}

	namespace n_USeqCond_CompareBool {
		constexpr auto bResult = 0x140; // uint32_t : 1
	}

	namespace n_UGFxData_OnlineMatchStatus_TA {
		constexpr auto bSearching = 0x98; // uint32_t : 1
		constexpr auto SearchState = 0x9c; // FName
		constexpr auto SavedSearchingString = 0xa8; // FString
		constexpr auto StatusOwner = 0xb8; // SearchStatusOwner
		constexpr auto OnlineParty = 0xc0; // ObjectProperty
		constexpr auto PartyLeaderSearchingMessage = 0xc8; // FString
	}

	namespace n_UCameraState_Director_TA {
		constexpr auto GameEvent = 0xb8; // ObjectProperty
		constexpr auto IdleSelector = 0xc0; // ComponentProperty
		constexpr auto CountdownSelector = 0xc8; // ComponentProperty
		constexpr auto KickoffSelector = 0xd0; // ComponentProperty
		constexpr auto DefaultSelector = 0xd8; // ComponentProperty
		constexpr auto MinTransitionTimeLimits = 0xe0; // FProfileSliderLimits
		constexpr auto CurrentSelector = 0xf0; // ComponentProperty
		constexpr auto CurrentState = 0xf8; // ObjectProperty
		constexpr auto bInitialized = 0x100; // uint32_t : 1
	}

	namespace n_U__RecentPlayers_TA__FilterFriends_B3B8333E4910D5711DA38E8DF2712926 {
		constexpr auto PersonasData = 0x60; // ObjectProperty
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FColor
	}

	namespace n_URPC_GetLeaderboardRankForUsers_X {
		constexpr auto Stat = 0x118; // FString
	}

	namespace n_USkelControl_CCD_IK {
		constexpr auto EffectorLocation = 0x100; // FVector
		constexpr auto EffectorLocationSpace = 0x10c; // EBoneControlSpace
		constexpr auto EffectorSpaceBoneName = 0x110; // FName
		constexpr auto EffectorTranslationFromBone = 0x118; // FVector
		constexpr auto NumBones = 0x124; // int32_t
		constexpr auto MaxPerBoneIterations = 0x128; // int32_t
		constexpr auto IterationsCount = 0x12c; // int32_t
		constexpr auto Precision = 0x130; // float
		constexpr auto bStartFromTail = 0x134; // uint32_t : 1
		constexpr auto bNoTurnOptimization = 0x134; // uint32_t : 1
		constexpr auto AngleConstraint = 0x138; // TArray<float>
		constexpr auto MaxAngleSteps = 0x148; // float
	}

	namespace n_UCameraConfig_TA {
		constexpr auto bFramerateIndependentInterp = 0x78; // uint32_t : 1
		constexpr auto bReplayFocusOnCarAfterGoal = 0x78; // uint32_t : 1
	}

	namespace n_U__StatusTriggerManager_TA__RegisterTriggers_130B0CAE4BC7D278B5531EB0652C6861 {
		constexpr auto InCondition = 0x60; // ObjectProperty
		constexpr auto InTriggers = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UProfileControlsSave_TA {
		constexpr auto WaveformScalar = 0xc8; // float
		constexpr auto ForceFeedbackType = 0xcc; // EForceFeedbackType
		constexpr auto ForceFeedbackMode = 0xcd; // EForceFeedbackMode
		constexpr auto LegacyForceFeedbackScales = 0xd0; // float [0x6]
		constexpr auto ForceFeedbackScale = 0xe8; // float
		constexpr auto bPushToTalk = 0xec; // uint32_t : 1
		constexpr auto ControlPresetName = 0xf0; // FName
		constexpr auto __ControlPresetName__ChangeNotify = 0xf8; // DelegateProperty
	}

	namespace n_URPC_Challenge_RequestReward_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Id = 0x130; // int32_t
	}

	namespace n_UPartySequence_JoinParty_X {
		constexpr auto __EventJoinedParty__Delegate = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_AkSetState {
		constexpr auto StateGroup = 0x160; // FString
		constexpr auto State = 0x170; // FString
	}

	namespace n_U__GFxData_Wallet_TA__GetCurrencyRow_359E49724666815D3860008CE2E3C8E9 {
		constexpr auto InCurrencyID = 0x60; // int32_t
	}

	namespace n_UMicroEventConfig_TA {
		constexpr auto MicroEvents = 0x78; // TArray<ObjectProperty>
		constexpr auto Time = 0x88; // TScriptInterface<Class>
	}

	namespace n_UMatchmakingViewFilter_UnrankedSports_TA {
		constexpr auto Playlists = 0x60; // TScriptInterface<Class>
	}

	namespace n_UMutator_Car_TA {
		constexpr auto CarScale = 0x68; // float
		constexpr auto JumpScale = 0x6c; // float
		constexpr auto CarMaxLinearSpeedScale = 0x70; // float
	}

	namespace n_APhysicsVolume {
		constexpr auto ZoneVelocity = 0x2a8; // FVector
		constexpr auto bVelocityAffectsWalking = 0x2b4; // uint32_t : 1
		constexpr auto bDestructive = 0x2b4; // uint32_t : 1
		constexpr auto bMoveProjectiles = 0x2b4; // uint32_t : 1
		constexpr auto bBounceVelocity = 0x2b4; // uint32_t : 1
		constexpr auto bCrowdAgentsPlayDeathAnim = 0x2b4; // uint32_t : 1
		constexpr auto bPhysicsOnContact = 0x2b4; // uint32_t : 1
		constexpr auto GroundFriction = 0x2b8; // float
		constexpr auto TerminalVelocity = 0x2bc; // float
		constexpr auto Priority = 0x2c0; // int32_t
		constexpr auto FluidFriction = 0x2c4; // float
		constexpr auto RigidBodyDamping = 0x2c8; // float
		constexpr auto MaxDampingForce = 0x2cc; // float
		constexpr auto NextPhysicsVolume = 0x2d0; // ObjectProperty
	}

	namespace n_USeqAct_SetSkelControlTarget {
		constexpr auto SkelControlName = 0x160; // FName
		constexpr auto TargetActors = 0x168; // TArray<ObjectProperty>
	}

	namespace n_ADynamicSMActor {
		constexpr auto StaticMeshComponent = 0x268; // ComponentProperty
		constexpr auto LightEnvironment = 0x270; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x278; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x280; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x288; // ObjectProperty
		constexpr auto ReplicatedMaterial2 = 0x290; // ObjectProperty
		constexpr auto ReplicatedMaterial3 = 0x298; // ObjectProperty
		constexpr auto bForceStaticDecals = 0x2a0; // uint32_t : 1
		constexpr auto bPawnCanBaseOn = 0x2a0; // uint32_t : 1
		constexpr auto bSafeBaseIfAsleep = 0x2a0; // uint32_t : 1
		constexpr auto ReplicatedMeshTranslation = 0x2a4; // FVector
		constexpr auto ReplicatedMeshRotation = 0x2b0; // FRotator
		constexpr auto ReplicatedMeshScale3D = 0x2bc; // FVector
	}

	namespace n_UAnimateParametersComponent_X {
		constexpr auto FloatParameters = 0xa0; // TArray<FAnimatedFloatParam>
		constexpr auto VectorParameters = 0xb0; // TArray<FAnimatedVectorParam>
		constexpr auto ColorParameters = 0xc0; // TArray<FAnimatedLinearColorParam>
		constexpr auto bResetMaterialsOnComplete = 0xd0; // uint32_t : 1
		constexpr auto AnimTime = 0xd4; // float
		constexpr auto EndTime = 0xd8; // float
	}

	namespace n_UCodecMovieFallback {
		constexpr auto CurrentTime = 0x68; // float
	}

	namespace n_UParticleModuleSubUVDirect {
		constexpr auto SubUVPosition = 0x70; // FRawDistributionVector
		constexpr auto SubUVSize = 0x98; // FRawDistributionVector
	}

	namespace n_UCameraAttachmentComponent_X {
		constexpr auto Attachments = 0xa0; // TArray<ComponentProperty>
		constexpr auto bDirtyTransform = 0xb0; // uint32_t : 1
	}

	namespace n_UOnlinePlayerStorageManifest_X {
		constexpr auto MetaData = 0x60; // TArray<FStorageMetadata>
	}

	namespace n_URPC_GetPersonaInfo_TA {
		constexpr auto PlayerIDs = 0xe8; // TArray<FUniqueNetId>
		constexpr auto PlayerData = 0xf8; // TArray<FPsyNetPersonaData>
		constexpr auto FriendsData = 0x108; // TArray<FOnlineFriend>
	}

	namespace n_URLBot_Util_TA {
		constexpr auto ControllerURL = 0x60; // FString
		constexpr auto OutputFilePath = 0x70; // FString
		constexpr auto PacketSendRate = 0x80; // float
		constexpr auto bRecordInput = 0x84; // uint32_t : 1
	}

	namespace n_UTaskGate_X {
		constexpr auto bOpen = 0x60; // uint32_t : 1
		constexpr auto Tasks = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UDynamicLightEnvironmentComponent {
		constexpr auto State = 0xc0; // FPointer
		constexpr auto InvisibleUpdateTime = 0xc8; // float
		constexpr auto MinTimeBetweenFullUpdates = 0xcc; // float
		constexpr auto VelocityUpdateTimeScale = 0xd0; // float
		constexpr auto ShadowInterpolationSpeed = 0xd4; // float
		constexpr auto NumVolumeVisibilitySamples = 0xd8; // int32_t
		constexpr auto LightingBoundsScale = 0xdc; // float
		constexpr auto AmbientShadowColor = 0xe0; // FLinearColor
		constexpr auto AmbientShadowSourceDirection = 0xf0; // FVector
		constexpr auto AmbientGlow = 0xfc; // FLinearColor
		constexpr auto LightDistance = 0x10c; // float
		constexpr auto ShadowDistance = 0x110; // float
		constexpr auto bCastShadows = 0x114; // uint32_t : 1
		constexpr auto bCompositeShadowsFromDynamicLights = 0x114; // uint32_t : 1
		constexpr auto bForceCompositeAllLights = 0x114; // uint32_t : 1
		constexpr auto bAffectedBySmallDynamicLights = 0x114; // uint32_t : 1
		constexpr auto bUseBooleanEnvironmentShadowing = 0x114; // uint32_t : 1
		constexpr auto bShadowFromEnvironment = 0x114; // uint32_t : 1
		constexpr auto bDynamic = 0x114; // uint32_t : 1
		constexpr auto bSynthesizeDirectionalLight = 0x114; // uint32_t : 1
		constexpr auto bSynthesizeSHLight = 0x114; // uint32_t : 1
		constexpr auto bRequiresNonLatentUpdates = 0x114; // uint32_t : 1
		constexpr auto bTraceFromClosestBoundsPoint = 0x114; // uint32_t : 1
		constexpr auto bIsCharacterLightEnvironment = 0x114; // uint32_t : 1
		constexpr auto bOverrideOwnerLightingChannels = 0x114; // uint32_t : 1
		constexpr auto bAlwaysInfluencedByDominantDirectionalLight = 0x114; // uint32_t : 1
		constexpr auto ModShadowFadeoutTime = 0x118; // float
		constexpr auto ModShadowFadeoutExponent = 0x11c; // float
		constexpr auto MaxModulatedShadowColor = 0x120; // FLinearColor
		constexpr auto DominantShadowTransitionStartDistance = 0x130; // float
		constexpr auto DominantShadowTransitionEndDistance = 0x134; // float
		constexpr auto MinShadowAngle = 0x138; // float
		constexpr auto BoundsMethod = 0x13c; // EDynamicLightEnvironmentBoundsMethod
		constexpr auto OverriddenBounds = 0x140; // FBoxSphereBounds
		constexpr auto OverriddenLightingChannels = 0x15c; // FLightingChannelContainer
		constexpr auto OverriddenLightComponents = 0x160; // TArray<ComponentProperty>
	}

	namespace n_UInterpTrackNotify {
		constexpr auto Node = 0xc8; // ObjectProperty
		constexpr auto ParentNodeName = 0xd0; // FName
		constexpr auto OuterSequence = 0xd8; // ObjectProperty
		constexpr auto OuterSet = 0xe0; // ObjectProperty
		constexpr auto NotifyTrack = 0xe8; // TArray<FNotifyTrackKey>
	}

	namespace n_UBTC_Any {
		constexpr auto Targets = 0x90; // ObjectProperty
	}

	namespace n_UMultiFont {
		constexpr auto ResolutionTestTable = 0x1c0; // TArray<float>
	}

	namespace n_UBTWeight {
		constexpr auto Weight = 0x88; // float
	}

	namespace n_UEngineAudioProfileBase_TA {
		constexpr auto BlowoffThrottleTime = 0x60; // float
		constexpr auto WheelForwardSpeedInterpRate = 0x64; // float
		constexpr auto WheelSideSpeedInterpRate = 0x68; // float
		constexpr auto MaxWheelSpeed = 0x6c; // float
	}

	namespace n_UClubPersonas_TA {
		constexpr auto ClubCache = 0x60; // ComponentProperty
		constexpr auto WordFilter = 0x68; // ObjectProperty
		constexpr auto PersonaClubs = 0x70; // TArray<ObjectProperty>
		constexpr auto ActionQueue = 0x80; // ComponentProperty
	}

	namespace n_UProductAttribute_Certified_TA {
		constexpr auto ValueKeyName = 0x80; // FName
		constexpr auto CertifiedStat = 0x88; // ObjectProperty
		constexpr auto StatId = 0x90; // int32_t
		constexpr auto StatValue = 0x94; // int32_t
		constexpr auto __EventRankedUp__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0xc0; // FExpressionInput
	}

	namespace n_USpawnPointGroup_TA {
		constexpr auto SpawnOffset = 0x60; // TArray<FVector>
		constexpr auto SpawnFacing = 0x70; // TArray<FRotator>
		constexpr auto SpawnPoints = 0x80; // TArray<ObjectProperty>
		constexpr auto SpotPRI = 0x90; // TArray<ObjectProperty>
		constexpr auto MaxSpots = 0xa0; // int32_t
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x78; // FRawDistributionVector
	}

	namespace n_USeqAct_AssignController {
		constexpr auto ControllerClass = 0x160; // FNone*
	}

	namespace n_AGameInfo {
		constexpr auto RegistryGroup = 0x268; // ComponentProperty
		constexpr auto BulletScenesCount = 0x270; // int32_t
		constexpr auto bRestartLevel = 0x274; // uint32_t : 1
		constexpr auto bPauseable = 0x274; // uint32_t : 1
		constexpr auto bTeamGame = 0x274; // uint32_t : 1
		constexpr auto bGameEnded = 0x274; // uint32_t : 1
		constexpr auto bOverTime = 0x274; // uint32_t : 1
		constexpr auto bDelayedStart = 0x274; // uint32_t : 1
		constexpr auto bWaitingToStartMatch = 0x274; // uint32_t : 1
		constexpr auto bChangeLevels = 0x274; // uint32_t : 1
		constexpr auto bAlreadyChanged = 0x274; // uint32_t : 1
		constexpr auto bGameRestarted = 0x274; // uint32_t : 1
		constexpr auto bLevelChange = 0x274; // uint32_t : 1
		constexpr auto bKickLiveIdlers = 0x274; // uint32_t : 1
		constexpr auto bFixedPlayerStart = 0x274; // uint32_t : 1
		constexpr auto bDoFearCostFallOff = 0x274; // uint32_t : 1
		constexpr auto bUseSeamlessTravel = 0x274; // uint32_t : 1
		constexpr auto bHasNetworkError = 0x274; // uint32_t : 1
		constexpr auto bRequiresPushToTalk = 0x274; // uint32_t : 1
		constexpr auto bIsStandbyCheckingEnabled = 0x274; // uint32_t : 1
		constexpr auto bIsStandbyCheckingOn = 0x274; // uint32_t : 1
		constexpr auto bHasStandbyCheatTriggered = 0x274; // uint32_t : 1
		constexpr auto bKeepingLoadingMovieOpen = 0x274; // uint32_t : 1
		constexpr auto CauseEventCommand = 0x278; // FString
		constexpr auto BugLocString = 0x288; // FString
		constexpr auto BugRotString = 0x298; // FString
		constexpr auto GameDifficulty = 0x2a8; // float
		constexpr auto GameSpeed = 0x2ac; // float
		constexpr auto DefaultPawnClass = 0x2b0; // FNone*
		constexpr auto HUDType = 0x2b8; // FNone*
		constexpr auto SecondaryHUDType = 0x2c0; // FNone*
		constexpr auto MaxSpectators = 0x2c8; // int32_t
		constexpr auto MaxSpectatorsAllowed = 0x2cc; // int32_t
		constexpr auto NumSpectators = 0x2d0; // int32_t
		constexpr auto MaxPlayers = 0x2d4; // int32_t
		constexpr auto MaxPlayersAllowed = 0x2d8; // int32_t
		constexpr auto NumPlayers = 0x2dc; // int32_t
		constexpr auto NumBots = 0x2e0; // int32_t
		constexpr auto NumTravellingPlayers = 0x2e4; // int32_t
		constexpr auto CurrentID = 0x2e8; // int32_t
		constexpr auto DefaultPlayerName = 0x2f0; // FString
		constexpr auto GameName = 0x300; // FString
		constexpr auto FearCostFallOff = 0x310; // float
		constexpr auto GoalScore = 0x314; // int32_t
		constexpr auto MaxLives = 0x318; // int32_t
		constexpr auto TimeLimit = 0x31c; // int32_t
		constexpr auto BaseMutator = 0x320; // ObjectProperty
		constexpr auto AutoTestManagerClass = 0x328; // FNone*
		constexpr auto MyAutoTestManager = 0x330; // ObjectProperty
		constexpr auto PlayerControllerClass = 0x338; // FNone*
		constexpr auto PlayerReplicationInfoClass = 0x340; // FNone*
		constexpr auto GameReplicationInfoClass = 0x348; // FNone*
		constexpr auto GameReplicationInfo = 0x350; // ObjectProperty
		constexpr auto PopulationManager = 0x358; // ObjectProperty
		constexpr auto PopulationManagerClass = 0x360; // FNone*
		constexpr auto MaxIdleTime = 0x368; // float
		constexpr auto MaxTimeMargin = 0x36c; // float
		constexpr auto TimeMarginSlack = 0x370; // float
		constexpr auto MinTimeMargin = 0x374; // float
		constexpr auto InactivePRIArray = 0x378; // TArray<ObjectProperty>
		constexpr auto Pausers = 0x388; // TArray<DelegateProperty>
		constexpr auto OnlineSub = 0x398; // ObjectProperty
		constexpr auto GameInterface = 0x3a0; // TScriptInterface<Class>
		constexpr auto OnlineStatsWriteClass = 0x3b0; // FNone*
		constexpr auto CoverReplicatorBase = 0x3b8; // ObjectProperty
		constexpr auto OnlineGameSettingsClass = 0x3c0; // FNone*
		constexpr auto ServerOptions = 0x3c8; // FString
		constexpr auto AdjustedNetSpeed = 0x3d8; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x3dc; // float
		constexpr auto TotalNetBandwidth = 0x3e0; // int32_t
		constexpr auto MinDynamicBandwidth = 0x3e4; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x3e8; // int32_t
		constexpr auto StandbyRxCheatTime = 0x3ec; // float
		constexpr auto StandbyTxCheatTime = 0x3f0; // float
		constexpr auto BadPingThreshold = 0x3f4; // int32_t
		constexpr auto PercentMissingForRxStandby = 0x3f8; // float
		constexpr auto PercentMissingForTxStandby = 0x3fc; // float
		constexpr auto PercentForBadPing = 0x400; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x404; // float
		constexpr auto StreamingPauseIcon = 0x408; // ObjectProperty
		constexpr auto GameInfoClassAliases = 0x410; // TArray<FGameClassShortName>
		constexpr auto DefaultGameType = 0x420; // FString
		constexpr auto DefaultMapPrefixes = 0x430; // TArray<FGameTypePrefix>
		constexpr auto CustomMapPrefixes = 0x440; // TArray<FGameTypePrefix>
		constexpr auto AnimTreePoolSize = 0x450; // int32_t
		constexpr auto __CanUnpause__Delegate = 0x458; // DelegateProperty
	}

	namespace n_UCheatManager_X {
		constexpr auto __EventDelegateTest__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UMigrationStartedMessage_X {
		constexpr auto bRematch = 0x68; // uint32_t : 1
		constexpr auto PrivateMatchSettings = 0x70; // FCustomMatchSettings
		constexpr auto PrivateMatchCreator = 0x100; // FUniqueNetId
		constexpr auto MigratingPlayers = 0x148; // TArray<FMigrationReservationData>
	}

	namespace n_UGFxData_Party_TA {
		constexpr auto Members = 0x98; // TArray<FGFxPartyMember>
		constexpr auto MaxPartySize = 0xa8; // int32_t
		constexpr auto Processing = 0xac; // FName
		constexpr auto OnlineParty = 0xb8; // ObjectProperty
		constexpr auto PersonasData = 0xc0; // ObjectProperty
		constexpr auto Clubs = 0xc8; // ComponentProperty
		constexpr auto VanityManager = 0xd0; // ObjectProperty
		constexpr auto PsyNetPartyStatus = 0xd8; // EPsyNetPartyStatus
		constexpr auto RegionRestrictedPlayerTrade = 0xe0; // FString
		constexpr auto PendingTradeInviteModal = 0xf0; // ObjectProperty
		constexpr auto PartyErrorModal = 0xf8; // ObjectProperty
		constexpr auto bPendingAllowTrade = 0x100; // uint32_t : 1
		constexpr auto CrossplayConfig = 0x108; // ObjectProperty
		constexpr auto __EventTradeNotAllowed__Delegate = 0x110; // DelegateProperty
		constexpr auto __AllowTradeRPCComplete__Delegate = 0x128; // DelegateProperty
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0xc0; // float
		constexpr auto G = 0xc4; // float
	}

	namespace n_USeqAct_StartTutorial_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto TutorialName = 0x168; // FString
	}

	namespace n_UTourCheckInError_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Party = 0x68; // ObjectProperty
		constexpr auto PlayerID = 0x70; // FUniqueNetId
		constexpr auto MemberPreCheckInError = 0xb8; // FString
		constexpr auto Settings = 0xc8; // ObjectProperty
		constexpr auto PartyError = 0xd0; // FString
		constexpr auto PartyErrorType = 0xe0; // ObjectProperty
		constexpr auto Error = 0xe8; // FString
		constexpr auto ErrorType = 0xf8; // ObjectProperty
		constexpr auto CrossPlatformNotEnabled = 0x100; // FString
		constexpr auto TournamentRequirementTitle = 0x110; // FString
		constexpr auto __EventTourCheckInError__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto SubImageIndex = 0x70; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x98; // uint32_t : 1
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x70; // BeamModifierType
		constexpr auto PositionOptions = 0x74; // FBeamModifierOptions
		constexpr auto Position = 0x78; // FRawDistributionVector
		constexpr auto TangentOptions = 0xa0; // FBeamModifierOptions
		constexpr auto Tangent = 0xa8; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // uint32_t : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_USeqAct_SetVectorComponents {
		constexpr auto OutVector = 0x160; // FVector
		constexpr auto X = 0x16c; // float
		constexpr auto Y = 0x170; // float
		constexpr auto Z = 0x174; // float
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FLinearColor
	}

	namespace n_URPC_Challenge_CompleteReceived_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Id = 0x130; // int32_t
	}

	namespace n_ULocalPlayerSkillSync_TA {
		constexpr auto OnlineGame = 0x60; // ObjectProperty
		constexpr auto OnlineSkill = 0x68; // ObjectProperty
		constexpr auto PsyNet = 0x70; // ObjectProperty
	}

	namespace n_UTriggerClump_TA {
		constexpr auto Triggers = 0x60; // TArray<ObjectProperty>
	}

	namespace n_U__StatusObserver_Products_TA__UpdateTriggersBySlot_876B74E6449F1895996DFDB617F1C448 {
		constexpr auto InSlotIndex = 0x60; // int32_t
	}

	namespace n_URPC_SetServerNotJoinable_X {
		constexpr auto ServerId = 0xe8; // QWordProperty
	}

	namespace n_AGameEvent_Tutorial_Basic_TA {
		constexpr auto CurrentScore = 0xeb8; // int32_t
		constexpr auto TotalRounds = 0xebc; // int32_t
		constexpr auto CurrentRounds = 0xec0; // int32_t
	}

	namespace n_URPC_BlockPlayer_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_UMapData_TA {
		constexpr auto Thumbnail = 0x60; // ObjectProperty
		constexpr auto VariantOf = 0x68; // ObjectProperty
		constexpr auto WeatherVariant = 0x70; // EWeatherVariant
		constexpr auto RandomWeight = 0x74; // float
	}

	namespace n_UChatConfig_TA {
		constexpr auto MaxMessagesPerChannel = 0x78; // TArray<int32_t>
	}

	namespace n_U_Types_TA {
		constexpr auto __AssetLoadedDelegate__Delegate = 0x60; // DelegateProperty
		constexpr auto __ProductThumbnailRenderedDelegate__Delegate = 0x78; // DelegateProperty
		constexpr auto __MapImageLoadedDelegate__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UNetworkEncryptionKey {
		constexpr auto Key = 0x60; // TArray<char>
		constexpr auto IV = 0x70; // TArray<char>
		constexpr auto HMACKey = 0x80; // TArray<char>
		constexpr auto SessionId = 0x90; // TArray<char>
	}

	namespace n_UMcpUserInventoryManager {
		constexpr auto CreateSaveSlotUrl = 0x178; // FString
		constexpr auto DeleteSaveSlotUrl = 0x188; // FString
		constexpr auto ListSaveSlotUrl = 0x198; // FString
		constexpr auto ListItemsUrl = 0x1a8; // FString
		constexpr auto PurchaseItemUrl = 0x1b8; // FString
		constexpr auto SellItemUrl = 0x1c8; // FString
		constexpr auto EarnItemUrl = 0x1d8; // FString
		constexpr auto ConsumeItemUrl = 0x1e8; // FString
		constexpr auto DeleteItemUrl = 0x1f8; // FString
		constexpr auto IapRecordUrl = 0x208; // FString
		constexpr auto SaveSlots = 0x218; // TArray<FMcpInventorySaveSlot>
		constexpr auto SaveSlotRequests = 0x228; // TArray<FSaveSlotRequestState>
		constexpr auto ListSaveSlotRequests = 0x238; // TArray<FSaveSlotRequestState>
		constexpr auto ListItemsRequests = 0x248; // TArray<FSaveSlotRequestState>
		constexpr auto ItemRequests = 0x258; // TArray<FInventoryItemRequestState>
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x80; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0xa8; // uint32_t : 1
		constexpr auto bUsePSysLocation = 0xa8; // uint32_t : 1
		constexpr auto bInheritVelocity = 0xa8; // uint32_t : 1
		constexpr auto InheritVelocityScale = 0xb0; // FRawDistributionVector
	}

	namespace n_UPlayerInput_Menu_TA {
		constexpr auto AllowedActions = 0x4c8; // TArray<FName>
	}

	namespace n_UTourCredentials_TA {
		constexpr auto CredentialsMap = 0x60; // TArray<FCredentialItem>
	}

	namespace n_UOnlineGameTournaments_TA {
		constexpr auto Config = 0x98; // ObjectProperty
		constexpr auto TourEventArchetype = 0xa0; // ObjectProperty
		constexpr auto ServiceArchetype = 0xa8; // ObjectProperty
		constexpr auto Service = 0xb0; // ObjectProperty
		constexpr auto Subscriptions = 0xb8; // ObjectProperty
		constexpr auto Registration = 0xc0; // ObjectProperty
		constexpr auto CheckIn = 0xc8; // ObjectProperty
		constexpr auto CheckInError = 0xd0; // ObjectProperty
		constexpr auto PartyCheckIn = 0xd8; // ObjectProperty
		constexpr auto PartyLeaderLeave = 0xe0; // ObjectProperty
		constexpr auto WindowWatcher = 0xe8; // ObjectProperty
		constexpr auto Rewards = 0xf0; // ObjectProperty
		constexpr auto Brackets = 0xf8; // ObjectProperty
		constexpr auto Credentials = 0x100; // ObjectProperty
		constexpr auto Cache = 0x108; // ObjectProperty
		constexpr auto MatchServerBrowser = 0x110; // ObjectProperty
		constexpr auto Status = 0x118; // ObjectProperty
		constexpr auto AutoTour = 0x120; // ObjectProperty
		constexpr auto TourEvent = 0x128; // ObjectProperty
		constexpr auto __EventTourActivated__Delegate = 0x130; // DelegateProperty
	}

	namespace n_USimpleSplineNonLoopAudioComponent {
		constexpr auto DelayMin = 0x358; // float
		constexpr auto DelayMax = 0x35c; // float
		constexpr auto PitchMin = 0x360; // float
		constexpr auto PitchMax = 0x364; // float
		constexpr auto VolumeMin = 0x368; // float
		constexpr auto VolumeMax = 0x36c; // float
		constexpr auto CurrentSlotIndex = 0x370; // int32_t
		constexpr auto UsedVolumeModulation = 0x374; // float
		constexpr auto UsedPitchModulation = 0x378; // float
		constexpr auto NextSoundTime = 0x37c; // float
	}

	namespace n_U__GFxData_Settings_TA__CrossplayPartyValidation_A2D7FDB84B06C020EC717DA814F164B1 {
		constexpr auto UserSetting = 0x60; // ObjectProperty
	}

	namespace n_UMatchmakingViewFilter_Ranked_TA {
		constexpr auto Playlists = 0x60; // TScriptInterface<Class>
	}

	namespace n_URPC_AchievementDataUpload_TA {
		constexpr auto Achievements = 0xe8; // TArray<FAchievementUpload>
		constexpr auto SettingsArchetype = 0xf8; // FString
	}

	namespace n_UAnimNodeBlendByProperty {
		constexpr auto PropertyName = 0x170; // FName
		constexpr auto bUseOwnersBase = 0x178; // uint32_t : 1
		constexpr auto bForceUpdate = 0x178; // uint32_t : 1
		constexpr auto bUseSpecificBlendTimes = 0x178; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x178; // uint32_t : 1
		constexpr auto CachedPropertyName = 0x17c; // FName
		constexpr auto CachedFloatProperty = 0x188; // FPointer
		constexpr auto CachedBoolProperty = 0x190; // FPointer
		constexpr auto CachedByteProperty = 0x198; // FPointer
		constexpr auto CachedOwner = 0x1a0; // ObjectProperty
		constexpr auto BlendTime = 0x1a8; // float
		constexpr auto FloatPropMin = 0x1ac; // float
		constexpr auto FloatPropMax = 0x1b0; // float
		constexpr auto BlendToChild1Time = 0x1b4; // float
		constexpr auto BlendToChild2Time = 0x1b8; // float
	}

	namespace n_USeqEvent_UserSettingChanged_TA {
		constexpr auto SettingName = 0x180; // FName
	}

	namespace n_UProductAttribute_PlatformExclusive_TA {
		constexpr auto InclusiveConsoles = 0x80; // TArray<EConsoleType>
		constexpr auto ReplacementProduct = 0x90; // ObjectProperty
	}

	namespace n_UProductsHashSave_TA {
		constexpr auto HashIDs = 0xc8; // TArray<FProductHashID>
		constexpr auto InstanceIDs = 0xd8; // TArray<QWordProperty>
		constexpr auto InstanceIDs128 = 0xe8; // TArray<FProductInstanceID>
		constexpr auto __HashIDs__ChangeNotify = 0xf8; // DelegateProperty
	}

	namespace n_UOnlineStorageConfig_TA {
		constexpr auto DisabledClasses = 0x78; // TArray<FNone*>
		constexpr auto OnlineStorageFileName = 0x88; // FString
		constexpr auto MinSecondsBetweenCloudUploads = 0x98; // QWordProperty
	}

	namespace n_USoundNodeAmbientNonLoop {
		constexpr auto DelayMin = 0xb8; // float
		constexpr auto DelayMax = 0xbc; // float
		constexpr auto DelayTime = 0xc0; // FRawDistributionFloat
	}

	namespace n_UGFxData_Settings_TA {
		constexpr auto CrossNetworkTask = 0x98; // ObjectProperty
		constexpr auto MouseSensitivityLimits = 0xa0; // FProfileSliderLimits
		constexpr auto ControllerDeadzoneLimits = 0xac; // FProfileSliderLimits
		constexpr auto MouseDeadZoneLimits = 0xb8; // FProfileSliderLimits
		constexpr auto KeyboardAxisBlendLimits = 0xc4; // FProfileSliderLimits
		constexpr auto SteeringSensitivityLimits = 0xd0; // FProfileSliderLimits
		constexpr auto AirControlSensitivityLimits = 0xdc; // FProfileSliderLimits
		constexpr auto DodgeInputThresholdLimits = 0xe8; // FProfileSliderLimits
		constexpr auto SafeZoneLimits = 0xf4; // FProfileSliderLimits
		constexpr auto UIScaleLimits = 0x100; // FProfileSliderLimits
		constexpr auto NameplateScaleLimits = 0x10c; // FProfileSliderLimits
		constexpr auto HDRBrightnessScaleLimits = 0x118; // FProfileSliderLimits
		constexpr auto HDRPaperWhiteScaleLimits = 0x124; // FProfileSliderLimits
		constexpr auto HDRGammaScaleLimits = 0x130; // FProfileSliderLimits
		constexpr auto ForceFeedbackScaleLimits = 0x13c; // FProfileSliderLimits
		constexpr auto LoadingString = 0x148; // FString
		constexpr auto ShowBindingsModal_ErrorMessage = 0x158; // FString
		constexpr auto CrossplaySetting = 0x168; // ObjectProperty
		constexpr auto UserSettings = 0x170; // TArray<ObjectProperty>
		constexpr auto OldResolution = 0x180; // FString
		constexpr auto OldWindowMode = 0x190; // FString
		constexpr auto OldVSync = 0x1a0; // uint32_t : 1
		constexpr auto bSettingRenderDetail = 0x1a0; // uint32_t : 1
		constexpr auto bSettingCameraPreset = 0x1a0; // uint32_t : 1
		constexpr auto Profile = 0x1a8; // ObjectProperty
		constexpr auto SaveData = 0x1b0; // ObjectProperty
		constexpr auto Viewport = 0x1b8; // ObjectProperty
		constexpr auto SettingObserver = 0x1c0; // ComponentProperty
		constexpr auto SoundSave = 0x1c8; // ObjectProperty
		constexpr auto SoundSaveController = 0x1d0; // ObjectProperty
		constexpr auto GameplaySave = 0x1d8; // ObjectProperty
		constexpr auto ProfileGameplaySave = 0x1e0; // ObjectProperty
		constexpr auto NetworkSave = 0x1e8; // ObjectProperty
		constexpr auto ConnectionQualitySave = 0x1f0; // ObjectProperty
		constexpr auto ProfileCameraSave = 0x1f8; // ObjectProperty
		constexpr auto GamepadSave = 0x200; // ObjectProperty
		constexpr auto VideoSave = 0x208; // ObjectProperty
		constexpr auto MusicSave = 0x210; // ObjectProperty
		constexpr auto ProfileControlsSave = 0x218; // ObjectProperty
		constexpr auto NotificationSave = 0x220; // ObjectProperty
		constexpr auto EpicAccountSave = 0x228; // ObjectProperty
		constexpr auto SteamInputSettings = 0x230; // ObjectProperty
		constexpr auto ControllerCount = 0x238; // int32_t
		constexpr auto WarnCrossPlatformTournament = 0x240; // FString
		constexpr auto WarnCrossPlatformTournamentAndParty = 0x250; // FString
		constexpr auto DisableAndLeave = 0x260; // FString
		constexpr auto WarnChangingScheduleRegion = 0x270; // FString
	}

	namespace n_URocketPassErrors_TA {
		constexpr auto InvalidRocketPass = 0x80; // ObjectProperty
		constexpr auto RocketPassNotActive = 0x88; // ObjectProperty
		constexpr auto InvalidKey = 0x90; // ObjectProperty
		constexpr auto PlayerAlreadyPremium = 0x98; // ObjectProperty
		constexpr auto DoesNotOwnPremium = 0xa0; // ObjectProperty
		constexpr auto PurchasableNotFound = 0xa8; // ObjectProperty
	}

	namespace n_UDSR_ClientMessage_X {
		constexpr auto ReservationID = 0x90; // FString
		constexpr auto MessageType = 0xa0; // FString
		constexpr auto MessagePayload = 0xb0; // FString
	}

	namespace n_UMaterialExpressionScreenPosition {
		constexpr auto ScreenAlign = 0xc0; // uint32_t : 1
	}

	namespace n_UPsyNetService_Party_X {
		constexpr auto PartyID = 0x90; // FString
		constexpr auto NotificationType = 0xa0; // FString
		constexpr auto Content = 0xb0; // FString
		constexpr auto FromUserId = 0xc0; // FUniqueNetId
		constexpr auto FromUserName = 0x108; // FString
		constexpr auto CreatedAt = 0x118; // int32_t
		constexpr auto ForUserId = 0x120; // FUniqueNetId
	}

	namespace n_USeqAct_DisableForceInFXActor_TA {
		constexpr auto InFXActor = 0x160; // ObjectProperty
	}

	namespace n_UNetworkPingEvent_X {
		constexpr auto DeltaSeconds = 0x60; // float
	}

	namespace n_UOnlinePlayer_X {
		constexpr auto Friends = 0x98; // ObjectProperty
		constexpr auto Authentication = 0xa0; // ObjectProperty
		constexpr auto PsyNetConnection = 0xa8; // ObjectProperty
		constexpr auto Storage = 0xb0; // ObjectProperty
		constexpr auto RegionRestrictions = 0xb8; // ObjectProperty
		constexpr auto PlayerName = 0xc0; // FString
		constexpr auto PlayerID = 0xd0; // FUniqueNetId
		constexpr auto CleanPlayerID = 0x118; // FUniqueNetId
		constexpr auto LoginStatus = 0x160; // ELoginStatus
		constexpr auto LocalPlayerNum = 0x164; // int32_t
		constexpr auto bLoggingIn = 0x168; // uint32_t : 1
		constexpr auto bLoggingOut = 0x168; // uint32_t : 1
		constexpr auto LoginError = 0x170; // ObjectProperty
		constexpr auto CachedEpicID = 0x178; // FString
		constexpr auto LoginStatusError = 0x188; // ObjectProperty
		constexpr auto BannedError = 0x190; // ObjectProperty
		constexpr auto __EventLoginComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __EventLogoutComplete__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __EventLoginStatusChanged__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __EventCountryUpdated__Delegate = 0x1e0; // DelegateProperty
		constexpr auto __EventCanPlayOnlineChanged__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __EventShowKeyboardComplete__Delegate = 0x210; // DelegateProperty
		constexpr auto __EventOnlineNameChanged__Delegate = 0x228; // DelegateProperty
		constexpr auto __EventRemoved__Delegate = 0x240; // DelegateProperty
	}

	namespace n_U__TAsyncResult__PsyNetMessage_X__SetResultWhen_FDAF197F49095E1120F91F86C22BB27C {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_UAdHocBeacon_X {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto pAdHoc = 0x68; // FPointer
	}

	namespace n_U__PartyMessageQueue_X__SendMessage_34CAD6464A5E395BB4157ABDF3E8A9E9 {
		constexpr auto Task = 0x60; // ObjectProperty
	}

	namespace n_UGreenScreenEffectHandler_TA {
		constexpr auto ColorToApply = 0x150; // FColor
		constexpr auto FadeInDuration = 0x154; // float
		constexpr auto FadeOutDuration = 0x158; // float
		constexpr auto bUseSystemSettings = 0x15c; // uint32_t : 1
		constexpr auto GreenScreenActor = 0x160; // ObjectProperty
	}

	namespace n_URPC_ProductsTradeIn_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ProductInstances = 0x130; // TArray<FProductInstanceID>
		constexpr auto Drops = 0x140; // TArray<FOnlineProductData>
		constexpr auto Products = 0x150; // TArray<ObjectProperty>
	}

	namespace n_UDateTime {
		constexpr auto EpochTime = 0x60; // QWordProperty
		constexpr auto Year = 0x68; // int32_t
		constexpr auto Month = 0x6c; // int32_t
		constexpr auto Day = 0x70; // int32_t
		constexpr auto WeekDay = 0x74; // int32_t
		constexpr auto Hour = 0x78; // int32_t
		constexpr auto Minute = 0x7c; // int32_t
		constexpr auto Second = 0x80; // int32_t
		constexpr auto TimeZone = 0x84; // ETimeZone
	}

	namespace n_UProfileAimAssistSave_TA {
		constexpr auto bAimAssistEnabled = 0xc8; // uint32_t : 1
		constexpr auto bBallTrajectoryEnabled = 0xc8; // uint32_t : 1
		constexpr auto TipSetting = 0xcc; // ETernarySetting
		constexpr auto AimAssistLevelOverride = 0xd0; // int32_t
		constexpr auto MaxAimAssistLevelOverride = 0xd4; // int32_t
		constexpr auto __EventBallTrajectoryChanged__Delegate = 0xd8; // DelegateProperty
		constexpr auto __bAimAssistEnabled__ChangeNotify = 0xf0; // DelegateProperty
		constexpr auto __bBallTrajectoryEnabled__ChangeNotify = 0x108; // DelegateProperty
		constexpr auto __TipSetting__ChangeNotify = 0x120; // DelegateProperty
	}

	namespace n_URPC_FaceItPlayerFailedJoin_TA {
		constexpr auto MatchID = 0xe8; // int32_t
		constexpr auto FailedJoinServerID = 0xec; // int32_t
		constexpr auto FailReason = 0xf0; // FString
		constexpr auto ReservationData = 0x100; // FServerReservationData
		constexpr auto MatchInfo = 0x180; // FFaceItMatchInfo
		constexpr auto Expiration = 0x200; // QWordProperty
	}

	namespace n_U__GFxData_Products_TA__UpdateProductData_8D26674D4CF5FBAA38A164B83568060A {
		constexpr auto ProductData = 0x60; // ObjectProperty
		constexpr auto Product = 0x68; // ObjectProperty
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x258; // ObjectProperty
		constexpr auto BrushAggGeom = 0x260; // FKAggregateGeom
		constexpr auto BrushPhysDesc = 0x2b0; // FPointer
		constexpr auto CachedPhysBrushData = 0x2b8; // FKCachedConvexData_Mirror
		constexpr auto CachedPhysBrushDataVersion = 0x2c8; // int32_t
		constexpr auto bBlockComplexCollisionTrace = 0x2cc; // uint32_t : 1
	}

	namespace n_AFracturedStaticMeshActor {
		constexpr auto MaxPartsToSpawnAtOnce = 0x268; // int32_t
		constexpr auto FracturedStaticMeshComponent = 0x270; // ComponentProperty
		constexpr auto SkinnedComponent = 0x278; // ComponentProperty
		constexpr auto ChunkHealth = 0x280; // TArray<int32_t>
		constexpr auto bHasShownMissingSoundWarning = 0x290; // uint32_t : 1
		constexpr auto bBreakChunksOnActorTouch = 0x290; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x290; // uint32_t : 1
		constexpr auto ChunkHealthScale = 0x294; // float
		constexpr auto OverrideFragmentDestroyEffects = 0x298; // TArray<ObjectProperty>
		constexpr auto FractureCullMinDistance = 0x2a8; // float
		constexpr auto FractureCullMaxDistance = 0x2ac; // float
		constexpr auto DeferredPartsToSpawn = 0x2b0; // TArray<FDeferredPartToSpawn>
		constexpr auto PartImpactEffect = 0x2c0; // FPhysEffectInfo
		constexpr auto ExplosionFractureSound = 0x2d8; // ObjectProperty
		constexpr auto SingleChunkFractureSound = 0x2e0; // ObjectProperty
		constexpr auto MI_LoseChunkPreviousMaterial = 0x2e8; // ObjectProperty
	}

	namespace n_UParticleModuleUberLTISIVCLIL {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto StartVelocity = 0xd0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xf8; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x120; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x148; // FRawDistributionFloat
		constexpr auto StartLocation = 0x170; // FRawDistributionVector
	}

	namespace n_UMaterialEffect_X {
		constexpr auto TimeParamName = 0x90; // FName
		constexpr auto FadeInTime = 0x98; // float
		constexpr auto FadeInFalloff = 0x9c; // float
		constexpr auto FadeOutTime = 0xa0; // float
		constexpr auto FadeOutFalloff = 0xa4; // float
		constexpr auto ActiveTime = 0xa8; // float
		constexpr auto ValueMin = 0xac; // float
		constexpr auto ValueMax = 0xb0; // float
		constexpr auto MatInst = 0xb8; // ObjectProperty
		constexpr auto Stage = 0xc0; // EMaterialEffectStage
		constexpr auto StageTime = 0xc4; // float
	}

	namespace n_USyncedSkillData_X {
		constexpr auto OnlineGameSkill = 0x60; // ObjectProperty
	}

	namespace n_UProductAttribute_Level_TA {
		constexpr auto Level = 0x80; // int32_t
	}

	namespace n_UGFxModal_X {
		constexpr auto ActionScriptModalName = 0x60; // FString
		constexpr auto GFxPopup = 0x70; // ObjectProperty
		constexpr auto Callbacks = 0x78; // TArray<DelegateProperty>
		constexpr auto ConfirmString = 0x88; // FString
		constexpr auto __ClickDelegate__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventClosed__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UBlogConfig_X {
		constexpr auto Entries = 0x78; // TArray<ObjectProperty>
		constexpr auto MotD = 0x88; // FString
	}

	namespace n_UUIDataStore {
		constexpr auto Tag = 0x70; // FName
		constexpr auto RefreshSubscriberNotifies = 0x78; // TArray<DelegateProperty>
		constexpr auto __OnDataStoreValueUpdated__Delegate = 0x88; // DelegateProperty
	}

	namespace n_APlayerControllerBase_TA {
		constexpr auto SpectatorCameraAccel = 0x860; // float
		constexpr auto SpectatorVelXY = 0x864; // FVector
		constexpr auto SpectatorVelZ = 0x870; // float
		constexpr auto PostProcessManagerArchetype = 0x878; // ObjectProperty
		constexpr auto PostProcessManager = 0x880; // ObjectProperty
		constexpr auto SpectatorPitchDir = 0x888; // int32_t
		constexpr auto SwivelPitchDir = 0x88c; // int32_t
		constexpr auto SpectatorVolume = 0x890; // ObjectProperty
		constexpr auto FullRotationScalar = 0x898; // float
		constexpr auto FullRotationMax = 0x89c; // float
		constexpr auto VanityMgr = 0x8a0; // ObjectProperty
		constexpr auto bVanityInitialized = 0x8a8; // uint32_t : 1
		constexpr auto PlayerBanner = 0x8b0; // ComponentProperty
		constexpr auto PlayerAvatar = 0x8b8; // ComponentProperty
		constexpr auto PlayerBorder = 0x8c0; // ComponentProperty
		constexpr auto AudioSpectatorMixComponent = 0x8c8; // ComponentProperty
		constexpr auto AudioFieldSideComponent = 0x8d0; // ComponentProperty
		constexpr auto __EventLoadingUnfairMatch__Delegate = 0x8d8; // DelegateProperty
		constexpr auto __EventRemoveSSPlayer__Delegate = 0x8f0; // DelegateProperty
		constexpr auto __EventReceivedCurrencyDrop__Delegate = 0x908; // DelegateProperty
		constexpr auto __EventPlayerInputSet__Delegate = 0x920; // DelegateProperty
		constexpr auto __PlayerBanner__ChangeNotify = 0x938; // DelegateProperty
		constexpr auto __PlayerBorder__ChangeNotify = 0x950; // DelegateProperty
	}

	namespace n_UPostProcessEffect {
		constexpr auto bShowInEditor = 0x60; // uint32_t : 1
		constexpr auto bShowInGame = 0x60; // uint32_t : 1
		constexpr auto bUseWorldSettings = 0x60; // uint32_t : 1
		constexpr auto bAffectsLightingOnly = 0x60; // uint32_t : 1
		constexpr auto EffectName = 0x64; // FName
		constexpr auto NodePosY = 0x6c; // int32_t
		constexpr auto NodePosX = 0x70; // int32_t
		constexpr auto DrawWidth = 0x74; // int32_t
		constexpr auto DrawHeight = 0x78; // int32_t
		constexpr auto OutDrawY = 0x7c; // int32_t
		constexpr auto InDrawY = 0x80; // int32_t
		constexpr auto SceneDPG = 0x84; // ESceneDepthPriorityGroup
	}

	namespace n_AWorldInfo {
		constexpr auto DefaultPostProcessSettings = 0x278; // FPostProcessSettings
		constexpr auto WorldPostProcessChain = 0x3e0; // ObjectProperty
		constexpr auto bPersistPostProcessToNextLevel = 0x3e8; // uint32_t : 1
		constexpr auto bFogEnabled = 0x3e8; // uint32_t : 1
		constexpr auto bBumpOffsetEnabled = 0x3e8; // uint32_t : 1
		constexpr auto bUseGammaCorrection = 0x3e8; // uint32_t : 1
		constexpr auto bMapNeedsLightingFullyRebuilt = 0x3e8; // uint32_t : 1
		constexpr auto bMapHasMultipleDominantLightsAffectingOnePrimitive = 0x3e8; // uint32_t : 1
		constexpr auto bMapHasPathingErrors = 0x3e8; // uint32_t : 1
		constexpr auto bRequestedBlockOnAsyncLoading = 0x3e8; // uint32_t : 1
		constexpr auto bBegunPlay = 0x3e8; // uint32_t : 1
		constexpr auto bPlayersOnly = 0x3e8; // uint32_t : 1
		constexpr auto bPlayersOnlyPending = 0x3e8; // uint32_t : 1
		constexpr auto bSuspendAI = 0x3e8; // uint32_t : 1
		constexpr auto bDropDetail = 0x3e8; // uint32_t : 1
		constexpr auto bAggressiveLOD = 0x3e8; // uint32_t : 1
		constexpr auto bStartup = 0x3e8; // uint32_t : 1
		constexpr auto bPathsRebuilt = 0x3e8; // uint32_t : 1
		constexpr auto bHasPathNodes = 0x3e8; // uint32_t : 1
		constexpr auto bIsMenuLevel = 0x3e8; // uint32_t : 1
		constexpr auto bDebugPauseExecution = 0x3e8; // uint32_t : 1
		constexpr auto bDebugStepExecution = 0x3e8; // uint32_t : 1
		constexpr auto bUseConsoleInput = 0x3e8; // uint32_t : 1
		constexpr auto bDisableGlobalGravityZ = 0x3e8; // uint32_t : 1
		constexpr auto bMinimizeBSPSections = 0x3e8; // uint32_t : 1
		constexpr auto bNoPathWarnings = 0x3e8; // uint32_t : 1
		constexpr auto bNoMobileMapWarnings = 0x3e8; // uint32_t : 1
		constexpr auto bHighPriorityLoading = 0x3e8; // uint32_t : 1
		constexpr auto bHighPriorityLoadingLocal = 0x3e8; // uint32_t : 1
		constexpr auto bUseProcBuildingRulesetOverride = 0x3e8; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x3e8; // uint32_t : 1
		constexpr auto bForceInteractiveMode = 0x3e8; // uint32_t : 1
		constexpr auto bSupportDoubleBufferedPhysics = 0x3e8; // uint32_t : 1
		constexpr auto bPhysicsIgnoreDeltaTime = 0x3e8; // uint32_t : 1
		constexpr auto bEnableChanceOfPhysicsChunkOverride = 0x3ec; // uint32_t : 1
		constexpr auto bLimitExplosionChunkSize = 0x3ec; // uint32_t : 1
		constexpr auto bLimitDamageChunkSize = 0x3ec; // uint32_t : 1
		constexpr auto bPrecomputeVisibility = 0x3ec; // uint32_t : 1
		constexpr auto bPlaceCellsOnSurfaces = 0x3ec; // uint32_t : 1
		constexpr auto bAffectIndirectCompositeShadowDirection = 0x3ec; // uint32_t : 1
		constexpr auto bAllowTemporalAA = 0x3ec; // uint32_t : 1
		constexpr auto bUseGlobalIllumination = 0x3ec; // uint32_t : 1
		constexpr auto bForceNoPrecomputedLighting = 0x3ec; // uint32_t : 1
		constexpr auto bHaveActiveCrowd = 0x3ec; // uint32_t : 1
		constexpr auto bAllowHostMigration = 0x3ec; // uint32_t : 1
		constexpr auto bGameplayFramePause = 0x3ec; // uint32_t : 1
		constexpr auto SquintModeKernelSize = 0x3f0; // float
		constexpr auto HighestPriorityPostProcessVolume = 0x3f8; // ObjectProperty
		constexpr auto DefaultReverbSettings = 0x400; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x410; // FInteriorSettings
		constexpr auto FogStart = 0x434; // float
		constexpr auto FogEnd = 0x438; // float
		constexpr auto FogColor = 0x43c; // FColor
		constexpr auto BumpEnd = 0x440; // float
		constexpr auto HighestPriorityReverbVolume = 0x448; // ObjectProperty
		constexpr auto MassiveLODOverrideVolumes = 0x450; // TArray<ObjectProperty>
		constexpr auto PortalVolumes = 0x460; // TArray<ObjectProperty>
		constexpr auto EnvironmentVolumes = 0x470; // TArray<ObjectProperty>
		constexpr auto StreamingLevels = 0x480; // TArray<ObjectProperty>
		constexpr auto LastTimeUnbuiltLightingWasEncountered = 0x490; // FDouble
		constexpr auto BookMarks = 0x498; // ObjectProperty [0xa]
		constexpr auto KismetBookMarks = 0x4e8; // ObjectProperty [0xa]
		constexpr auto ClipPadEntries = 0x538; // TArray<ObjectProperty>
		constexpr auto TimeDilation = 0x548; // float
		constexpr auto DemoPlayTimeDilation = 0x54c; // float
		constexpr auto TimeSeconds = 0x550; // float
		constexpr auto RealTimeSeconds = 0x554; // float
		constexpr auto RealDeltaSeconds = 0x558; // float
		constexpr auto AudioTimeSeconds = 0x55c; // float
		constexpr auto DeltaSeconds = 0x560; // float
		constexpr auto PauseDelay = 0x564; // float
		constexpr auto RealTimeToUnPause = 0x568; // float
		constexpr auto Pauser = 0x570; // ObjectProperty
		constexpr auto VisibleGroups = 0x578; // FString
		constexpr auto VisibleLayers = 0x588; // FString
		constexpr auto DefaultTexture = 0x598; // ObjectProperty
		constexpr auto WireframeTexture = 0x5a0; // ObjectProperty
		constexpr auto WhiteSquareTexture = 0x5a8; // ObjectProperty
		constexpr auto LargeVertex = 0x5b0; // ObjectProperty
		constexpr auto BSPVertex = 0x5b8; // ObjectProperty
		constexpr auto DeferredExecs = 0x5c0; // TArray<FString>
		constexpr auto GRI = 0x5d0; // ObjectProperty
		constexpr auto NetMode = 0x5d8; // ENetMode
		constexpr auto NextTravelType = 0x5d9; // ETravelType
		constexpr auto VisibilityAggressiveness = 0x5da; // EVisibilityAggressiveness
		constexpr auto PreferredLightmapType = 0x5db; // EPreferredLightmapType
		constexpr auto LevelLightingQuality = 0x5dc; // ELightingBuildQuality
		constexpr auto ComputerName = 0x5e0; // FString
		constexpr auto EngineVersion = 0x5f0; // FString
		constexpr auto MinNetVersion = 0x600; // FString
		constexpr auto Game = 0x610; // ObjectProperty
		constexpr auto StallZ = 0x618; // float
		constexpr auto WorldGravityZ = 0x61c; // float
		constexpr auto DefaultGravityZ = 0x620; // float
		constexpr auto GlobalGravityZ = 0x624; // float
		constexpr auto RBPhysicsGravityScaling = 0x628; // float
		constexpr auto GlobalGravityDirection = 0x62c; // FVector
		constexpr auto NavigationPointList = 0x638; // ObjectProperty
		constexpr auto ControllerList = 0x640; // ObjectProperty
		constexpr auto PawnList = 0x648; // ObjectProperty
		constexpr auto CoverList = 0x650; // ObjectProperty
		constexpr auto PylonList = 0x658; // ObjectProperty
		constexpr auto MoveRepSize = 0x660; // float
		constexpr auto ReplicationViewers = 0x668; // TArray<FNetViewer>
		constexpr auto NextURL = 0x678; // FString
		constexpr auto NextSwitchCountdown = 0x688; // float
		constexpr auto PackedLightAndShadowMapTextureSize = 0x68c; // int32_t
		constexpr auto DefaultColorScale = 0x690; // FVector
		constexpr auto DefaultGameType = 0x6a0; // FNone*
		constexpr auto GameTypesSupportedOnThisMap = 0x6a8; // TArray<FNone*>
		constexpr auto GameTypeForPIE = 0x6b8; // FNone*
		constexpr auto ClientDestroyedActorContent = 0x6c0; // TArray<ObjectProperty>
		constexpr auto PreparingLevelNames = 0x6d0; // TArray<FName>
		constexpr auto CommittedPersistentLevelName = 0x6e0; // FName
		constexpr auto PersistentMapForcedObjects = 0x6e8; // ObjectProperty
		constexpr auto MusicComp = 0x6f0; // ComponentProperty
		constexpr auto CurrentMusicTrack = 0x6f8; // FMusicTrackStruct
		constexpr auto ReplicatedMusicTrack = 0x728; // FMusicTrackStruct
		constexpr auto Title = 0x758; // FString
		constexpr auto Author = 0x768; // FString
		constexpr auto MyMapInfo = 0x778; // ObjectProperty
		constexpr auto EmitterPoolClassPath = 0x780; // FString
		constexpr auto MyEmitterPool = 0x790; // ObjectProperty
		constexpr auto DecalManagerClassPath = 0x798; // FString
		constexpr auto MyDecalManager = 0x7a8; // ObjectProperty
		constexpr auto FractureManagerClassPath = 0x7b0; // FString
		constexpr auto MyFractureManager = 0x7c0; // ObjectProperty
		constexpr auto ParticleEventManagerClassPath = 0x7c8; // FString
		constexpr auto MyParticleEventManager = 0x7d8; // ObjectProperty
		constexpr auto ProcBuildingRulesetOverride = 0x7e0; // ObjectProperty
		constexpr auto SkelMeshCompTickTagCount = 0x7e8; // int32_t
		constexpr auto MaxPhysicsDeltaTime = 0x7ec; // float
		constexpr auto MaxPhysicsSubsteps = 0x7f0; // int32_t
		constexpr auto PhysicsProperties = 0x7f4; // FPhysXSceneProperties
		constexpr auto CompartmentRunFrames = 0x830; // TArray<FCompartmentRunList>
		constexpr auto DefaultSkinWidth = 0x840; // float
		constexpr auto ApexLODResourceBudget = 0x844; // float
		constexpr auto ApexDestructionLODResourceValue = 0x848; // float
		constexpr auto ApexClothingLODResourceValue = 0x84c; // float
		constexpr auto DestructibleSettings = 0x850; // FApexModuleDestructibleSettings
		constexpr auto EmitterVertical = 0x868; // ObjectProperty
		constexpr auto VerticalProperties = 0x870; // FPhysXVerticalProperties
		constexpr auto WorldAttractors = 0x888; // TArray<FPointer>
		constexpr auto ChanceOfPhysicsChunkOverride = 0x898; // float
		constexpr auto MaxExplosionChunkSize = 0x89c; // float
		constexpr auto MaxDamageChunkSize = 0x8a0; // float
		constexpr auto FractureExplosionVelScale = 0x8a4; // float
		constexpr auto MaxNumFacturedChunksToSpawnInAFrame = 0x8a8; // int32_t
		constexpr auto NumFacturedChunksSpawnedThisFrame = 0x8ac; // int32_t
		constexpr auto FracturedMeshWeaponDamage = 0x8b0; // float
		constexpr auto VisibilityCellSize = 0x8b4; // int32_t
		constexpr auto CharacterLitIndirectBrightness = 0x8b8; // float
		constexpr auto CharacterLitIndirectContrastFactor = 0x8bc; // float
		constexpr auto CharacterShadowedIndirectBrightness = 0x8c0; // float
		constexpr auto CharacterShadowedIndirectContrastFactor = 0x8c4; // float
		constexpr auto CharacterLightingContrastFactor = 0x8c8; // float
		constexpr auto ImageReflectionEnvironmentTexture = 0x8d0; // ObjectProperty
		constexpr auto ImageReflectionEnvironmentColor = 0x8d8; // FLinearColor
		constexpr auto ImageReflectionEnvironmentRotation = 0x8e8; // float
		constexpr auto ScreenMessages = 0x8f0; // FMap_Mirror
		constexpr auto PriorityScreenMessages = 0x940; // TArray<FScreenMessageString>
		constexpr auto MaxTrianglesPerLeaf = 0x950; // int32_t
		constexpr auto LMLevelSettings = 0x958; // ObjectProperty
		constexpr auto LandscapeInfoMap = 0x960; // TMap<None, None>
		constexpr auto LightmassSettings = 0x9b0; // FLightmassWorldInfoSettings
		constexpr auto PitchTek = 0xa08; // ObjectProperty
		constexpr auto NavMeshPathConstraintCache = 0xa10; // TMap<None, None>
		constexpr auto NavMeshPathGoalEvaluatorCache = 0xa60; // TMap<None, None>
		constexpr auto PopulationManager = 0xab0; // ObjectProperty
		constexpr auto PeerHostMigration = 0xab8; // FHostMigrationState
		constexpr auto HostMigrationTimeout = 0xae0; // float
		constexpr auto FirstPhysicsVolume = 0xae8; // ObjectProperty
		constexpr auto GameShare = 0xaf0; // ObjectProperty
		constexpr auto __EventPauseChanged__Delegate = 0xaf8; // DelegateProperty
		constexpr auto __EventTimeDilationChanged__Delegate = 0xb10; // DelegateProperty
		constexpr auto __DemoPlayTimeDilation__ChangeNotify = 0xb28; // DelegateProperty
	}

	namespace n_UTimers_X {
		constexpr auto TickComponent = 0x60; // ComponentProperty
		constexpr auto __TickDelegate__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UGFxData_LegalText_TA {
		constexpr auto LegacyLegalPlatforms = 0x98; // TArray<OnlinePlatform>
	}

	namespace n_UMutator_Ball_TA {
		constexpr auto SoccarGame = 0x68; // ObjectProperty
		constexpr auto BallScale = 0x70; // float
		constexpr auto BallBounciness = 0x74; // float
		constexpr auto BallCarBounciness = 0x78; // float
		constexpr auto TotalGameBalls = 0x7c; // int32_t
		constexpr auto BallArchetype = 0x80; // ObjectProperty
		constexpr auto BallGravityScale = 0x88; // float
		constexpr auto BallSloMoDuration = 0x8c; // float
		constexpr auto BallSloMoDilation = 0x90; // float
		constexpr auto BallSloMoCooldown = 0x94; // float
		constexpr auto BallSloMoRadius = 0x98; // float
		constexpr auto BallSloMoDiffSpeed = 0x9c; // float
		constexpr auto BallMaxLinearSpeedScale = 0xa0; // float
		constexpr auto BallMaxAngularSpeed = 0xa4; // float
		constexpr auto BallMagnusCoefficient = 0xa8; // FVector
		constexpr auto PhysMatOverride = 0xb8; // ObjectProperty
		constexpr auto BallLiftImpulse = 0xc0; // float
		constexpr auto BallLiftDelay = 0xc4; // float
	}

	namespace n_ANxGenericForceFieldCapsule {
		constexpr auto RenderComponent = 0x360; // ComponentProperty
		constexpr auto CapsuleHeight = 0x368; // float
		constexpr auto CapsuleRadius = 0x36c; // float
	}

	namespace n_USeqAct_Interp {
		constexpr auto SavedActorTransforms = 0x178; // TMap<None, None>
		constexpr auto SavedActorVisibilities = 0x1c8; // TMap<None, None>
		constexpr auto PlayRate = 0x218; // float
		constexpr auto Position = 0x21c; // float
		constexpr auto ForceStartPosition = 0x220; // float
		constexpr auto bIsPlaying = 0x224; // uint32_t : 1
		constexpr auto bPaused = 0x224; // uint32_t : 1
		constexpr auto bIsBeingEdited = 0x224; // uint32_t : 1
		constexpr auto bLooping = 0x224; // uint32_t : 1
		constexpr auto bRewindOnPlay = 0x224; // uint32_t : 1
		constexpr auto bNoResetOnRewind = 0x224; // uint32_t : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x224; // uint32_t : 1
		constexpr auto bReversePlayback = 0x224; // uint32_t : 1
		constexpr auto bInterpForPathBuilding = 0x224; // uint32_t : 1
		constexpr auto bForceStartPos = 0x224; // uint32_t : 1
		constexpr auto bDisableRadioFilter = 0x224; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x224; // uint32_t : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x224; // uint32_t : 1
		constexpr auto bIsSkippable = 0x224; // uint32_t : 1
		constexpr auto bShouldShowGore = 0x224; // uint32_t : 1
		constexpr auto LinkedCover = 0x228; // TArray<ObjectProperty>
		constexpr auto InterpData = 0x238; // ObjectProperty
		constexpr auto GroupInst = 0x240; // TArray<ObjectProperty>
		constexpr auto ReplicatedActorClass = 0x250; // FNone*
		constexpr auto ReplicatedActor = 0x258; // ObjectProperty
		constexpr auto PreferredSplitScreenNum = 0x260; // int32_t
		constexpr auto CameraCuts = 0x268; // TArray<FCameraCutInfo>
		constexpr auto TerminationTime = 0x278; // float
		constexpr auto RenderingOverrides = 0x27c; // FRenderingPerformanceOverrides
		constexpr auto ConstantCameraAnim = 0x280; // char
		constexpr auto ConstantCameraAnimRate = 0x284; // float
	}

	namespace n_UOnlineGameParty_X {
		constexpr auto PartyMembers = 0x98; // TArray<FPartyMember>
		constexpr auto PartyID = 0xa8; // FUniqueLobbyId
		constexpr auto PartyLeader = 0xb8; // FUniqueNetId
		constexpr auto MaxPartySize = 0x100; // int32_t
		constexpr auto MessageComponent = 0x108; // ComponentProperty
		constexpr auto PendingSearchStatus = 0x110; // ObjectProperty
		constexpr auto NullSearchStatus = 0x118; // ObjectProperty
		constexpr auto PartyTimeout = 0x120; // int32_t
		constexpr auto CurrentPartySize = 0x124; // int32_t
		constexpr auto LastbSearchingStatus = 0x128; // uint32_t : 1
		constexpr auto LastLockStatus = 0x128; // uint32_t : 1
		constexpr auto bPendingIncomingTradeInvite = 0x128; // uint32_t : 1
		constexpr auto bTradeLocked = 0x128; // uint32_t : 1
		constexpr auto LastSearchState = 0x12c; // FName
		constexpr auto MatchSettings = 0x138; // FPartyJoinMatchSettings
		constexpr auto PendingTradeInvite = 0x1a0; // FUniqueNetId
		constexpr auto ProcessingStatus = 0x1e8; // PartyProcessingStatus
		constexpr auto NotInSameOnlineGameError = 0x1f0; // FString
		constexpr auto MissingLicenseAgreementError = 0x200; // FString
		constexpr auto SequenceInvitedToPlatformParty = 0x210; // ObjectProperty
		constexpr auto SequencePsyNetPartyUpgrade = 0x218; // ObjectProperty
		constexpr auto SequenceInvitedToPsyNetParty = 0x220; // ObjectProperty
		constexpr auto PartyConfig = 0x228; // ObjectProperty
		constexpr auto Config = 0x230; // ObjectProperty
		constexpr auto PlatformLobbyInterface = 0x238; // TScriptInterface<Class>
		constexpr auto PsyNetLobbyInterface = 0x248; // ObjectProperty
		constexpr auto CreatePartyLocalPlayerNum = 0x250; // int32_t
		constexpr auto CrossplayConfig = 0x258; // ObjectProperty
		constexpr auto FindServerTask = 0x260; // ObjectProperty
		constexpr auto JoinLobbyError = 0x268; // FString
		constexpr auto __EventPartyCreated__Delegate = 0x278; // DelegateProperty
		constexpr auto __OnPartyInviteAccepted__Delegate = 0x290; // DelegateProperty
		constexpr auto __EventPlayerInvited__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __EventPlayerInvitedSilent__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __EventPartyChanged__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __EventPartySizeChanged__Delegate = 0x2f0; // DelegateProperty
		constexpr auto __EventPartyLeaderChanged__Delegate = 0x308; // DelegateProperty
		constexpr auto __EventSearchStatusChanged__Delegate = 0x320; // DelegateProperty
		constexpr auto __EventPartyError__Delegate = 0x338; // DelegateProperty
		constexpr auto __EventPartyJoinGameError__Delegate = 0x350; // DelegateProperty
		constexpr auto __EventPartyJoinGameSuccess__Delegate = 0x368; // DelegateProperty
		constexpr auto __EventPartyDestroyed__Delegate = 0x380; // DelegateProperty
		constexpr auto __EventConfirmJoinGameMessage__Delegate = 0x398; // DelegateProperty
		constexpr auto __EventLeaderLeftOnlineGame__Delegate = 0x3b0; // DelegateProperty
		constexpr auto __EventProcessingStatusChanged__Delegate = 0x3c8; // DelegateProperty
		constexpr auto __EventDisableCrossPlayChanged__Delegate = 0x3e0; // DelegateProperty
		constexpr auto __EventTradingStatusChanged__Delegate = 0x3f8; // DelegateProperty
		constexpr auto __EventInviteToTrade__Delegate = 0x410; // DelegateProperty
		constexpr auto __EventAcceptedInviteToTrade__Delegate = 0x428; // DelegateProperty
		constexpr auto __EventCloseInviteToTrade__Delegate = 0x440; // DelegateProperty
		constexpr auto __EventRemotePlayerReadyToLock__Delegate = 0x458; // DelegateProperty
		constexpr auto __EventRemotePlayerNotReadyToLock__Delegate = 0x470; // DelegateProperty
		constexpr auto __EventRemotePlayerReadyToConfirm__Delegate = 0x488; // DelegateProperty
		constexpr auto __EventTradeConfirmed__Delegate = 0x4a0; // DelegateProperty
		constexpr auto __EventAnotherInviteToTrade__Delegate = 0x4b8; // DelegateProperty
		constexpr auto __EventPlayerInMatchChanged__Delegate = 0x4d0; // DelegateProperty
		constexpr auto __EventPlayerIsCurrentlyTrading__Delegate = 0x4e8; // DelegateProperty
		constexpr auto __EventStartedJoinFriend__Delegate = 0x500; // DelegateProperty
		constexpr auto __EventAddPartyMember__Delegate = 0x518; // DelegateProperty
		constexpr auto __EventRemovePartyMember__Delegate = 0x530; // DelegateProperty
		constexpr auto __bTradeLocked__ChangeNotify = 0x548; // DelegateProperty
	}

	namespace n_URPC_GetLeaderboardValueForUserBase_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto LeaderboardId = 0x130; // FString
		constexpr auto bHasSkill = 0x140; // uint32_t : 1
		constexpr auto bHasValue = 0x140; // uint32_t : 1
		constexpr auto Value = 0x144; // int32_t
		constexpr auto MMR = 0x148; // float
	}

	namespace n_UPartyMessage_ProfileChange_TA {
		constexpr auto PlayerID = 0xa8; // FUniqueNetId
		constexpr auto ProfileProducts = 0xf0; // TArray<FOnlineProductData>
	}

	namespace n_AGameEditor_Actor_TA {
		constexpr auto Mesh = 0x268; // ComponentProperty
		constexpr auto RotateCameraOffset = 0x270; // FVector
		constexpr auto MaxRotatePitch = 0x27c; // float
		constexpr auto MaxInputRotatePitch = 0x280; // float
		constexpr auto bModifiyPitchOnEditorSetRotation = 0x284; // uint32_t : 1
		constexpr auto FXActorArchetype = 0x288; // ObjectProperty
		constexpr auto FXActor = 0x290; // ObjectProperty
		constexpr auto __EventSelectionChange__Delegate = 0x298; // DelegateProperty
	}

	namespace n_UBTDecorator {
		constexpr auto Child = 0x80; // ObjectProperty
	}

	namespace n_USeqVar_Group {
		constexpr auto GroupName = 0x108; // FName
		constexpr auto bCachedList = 0x110; // uint32_t : 1
		constexpr auto Actors = 0x118; // TArray<ObjectProperty>
	}

	namespace n_UCameraState_CamActor_X {
		constexpr auto bUseOverridePostProcess = 0x90; // uint32_t : 1
		constexpr auto CamActor = 0x98; // ObjectProperty
		constexpr auto PrevPost = 0xa0; // FPostProcessSettings
		constexpr auto PrevPostAlpha = 0x208; // float
	}

	namespace n_UDynamicValueModifier_X {
		constexpr auto DisplayName = 0x60; // FString
		constexpr auto Type = 0x70; // EDynamicValueModType
		constexpr auto Priority = 0x74; // int32_t
	}

	namespace n_URewardDrop_TA {
		constexpr auto RewardName = 0x60; // FName
	}

	namespace n_UJsonObject {
		constexpr auto ValueMap = 0x60; // FMap_Mirror
		constexpr auto ObjectMap = 0xb0; // FMap_Mirror
		constexpr auto ValueArray = 0x100; // TArray<FString>
		constexpr auto ObjectArray = 0x110; // TArray<ObjectProperty>
		constexpr auto bArray = 0x120; // uint32_t : 1
	}

	namespace n_ULocalPlayer_X {
		constexpr auto OnlinePlayer = 0x4d0; // ObjectProperty
	}

	namespace n_UPartyMessage_TourLeaveTournament_TA {
		constexpr auto TourID = 0xa8; // QWordProperty
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x70; // FRawDistributionVector
	}

	namespace n_UBTAction_Face {
		constexpr auto ReachAngle = 0x160; // float
		constexpr auto MaxSpeed = 0x164; // float
		constexpr auto MaxTravel = 0x168; // float
		constexpr auto bMovingForward = 0x16c; // uint32_t : 1
		constexpr auto StartLocation = 0x170; // FVector
	}

	namespace n_AEmitterPool {
		constexpr auto PSCTemplate = 0x268; // ComponentProperty
		constexpr auto PoolComponents = 0x270; // TArray<ComponentProperty>
		constexpr auto ActiveComponents = 0x280; // TArray<ComponentProperty>
		constexpr auto MaxActiveEffects = 0x290; // int32_t
		constexpr auto bLogPoolOverflow = 0x294; // uint32_t : 1
		constexpr auto bLogPoolOverflowList = 0x294; // uint32_t : 1
		constexpr auto RelativePSCs = 0x298; // TArray<FEmitterBaseInfo>
		constexpr auto SMC_MIC_ReductionTime = 0x2a8; // float
		constexpr auto SMC_MIC_CurrentReductionTime = 0x2ac; // float
		constexpr auto IdealStaticMeshComponents = 0x2b0; // int32_t
		constexpr auto IdealMaterialInstanceConstants = 0x2b4; // int32_t
		constexpr auto FreeSMComponents = 0x2b8; // TArray<ComponentProperty>
		constexpr auto FreeMatInstConsts = 0x2c8; // TArray<ObjectProperty>
	}

	namespace n_U__ClubUtil_X__IsClubTeam_B04766064E47E9C1A223FDBEE57D0260 {
		constexpr auto TeamClubs = 0x60; // TArray<QWordProperty>
	}

	namespace n_USkelControlBase {
		constexpr auto ControlName = 0x90; // FName
		constexpr auto ControlStrength = 0x98; // float
		constexpr auto BlendInTime = 0x9c; // float
		constexpr auto BlendOutTime = 0xa0; // float
		constexpr auto BlendType = 0xa4; // AlphaBlendType
		constexpr auto bPostPhysicsController = 0xa8; // uint32_t : 1
		constexpr auto bSetStrengthFromAnimNode = 0xa8; // uint32_t : 1
		constexpr auto bInitializedCachedNodeList = 0xa8; // uint32_t : 1
		constexpr auto bControlledByAnimMetada = 0xa8; // uint32_t : 1
		constexpr auto bInvertMetadataWeight = 0xa8; // uint32_t : 1
		constexpr auto bPropagateSetActive = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreWhenNotRendered = 0xa8; // uint32_t : 1
		constexpr auto bShouldTickInScript = 0xa8; // uint32_t : 1
		constexpr auto bShouldTickOwner = 0xa8; // uint32_t : 1
		constexpr auto bEnableEaseInOut = 0xa8; // uint32_t : 1
		constexpr auto StrengthTarget = 0xac; // float
		constexpr auto BlendTimeToGo = 0xb0; // float
		constexpr auto StrengthAnimNodeNameList = 0xb8; // TArray<FName>
		constexpr auto CachedNodeList = 0xc8; // TArray<ObjectProperty>
		constexpr auto AnimMetadataWeight = 0xd8; // float
		constexpr auto AnimMetaDataUpdateTag = 0xdc; // int32_t
		constexpr auto BoneScale = 0xe0; // float
		constexpr auto ControlTickTag = 0xe4; // int32_t
		constexpr auto IgnoreAtOrAboveLOD = 0xe8; // int32_t
		constexpr auto NextControl = 0xf0; // ObjectProperty
		constexpr auto ControlPosX = 0xf8; // int32_t
		constexpr auto ControlPosY = 0xfc; // int32_t
	}

	namespace n_UWebImageDownload_X {
		constexpr auto URL = 0x60; // FString
		constexpr auto bSRGB = 0x70; // uint32_t : 1
		constexpr auto Texture = 0x78; // ObjectProperty
		constexpr auto AsyncResult = 0x80; // ObjectProperty
	}

	namespace n_UPaintDatabase_TA {
		constexpr auto Paints = 0x60; // TArray<ObjectProperty>
		constexpr auto PaintNameToPaintID = 0x70; // FMap_Mirror
		constexpr auto bClickToRebuild = 0xc0; // uint32_t : 1
	}

	namespace n_UEulaSave_TA {
		constexpr auto AcceptedEulas = 0xc8; // TArray<FEulaVersion>
	}

	namespace n_U__TAsyncResult__UserBugReportUploadResult_TA__Copy_73F5A9164F7FD80A56B1B5A9D612BFCE {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_TourCheckIn_TA__PerformCheckIn_57E2FC504242992AC995A2BCC8AEA14A {
		constexpr auto Settings = 0x60; // ObjectProperty
		constexpr auto bPromptUnsubscribeOnFailure = 0x68; // uint32_t : 1
	}

	namespace n_UAnimNodeBlendPerBone {
		constexpr auto bForceLocalSpaceBlend = 0x158; // uint32_t : 1
		constexpr auto BranchStartBoneName = 0x160; // TArray<FName>
		constexpr auto Child2PerBoneWeight = 0x170; // TArray<float>
		constexpr auto LocalToCompReqBones = 0x180; // TArray<char>
	}

	namespace n_UEOS_GetAccountsResponse {
		constexpr auto Accounts = 0x60; // TArray<FEOSAccountInfo>
	}

	namespace n_AColorScaleVolume {
		constexpr auto ColorScale = 0x2a8; // FVector
		constexpr auto InterpTime = 0x2b4; // float
	}

	namespace n_ULanServerRecord_X {
		constexpr auto ServerId = 0x60; // FString
		constexpr auto MetaData = 0x70; // FString
	}

	namespace n_USeqAct_SetSoundMode {
		constexpr auto SoundMode = 0x160; // ObjectProperty
		constexpr auto bTopPriority = 0x168; // uint32_t : 1
	}

	namespace n_UGFxData_Leaderboards_TA {
		constexpr auto LeaderboardDataSet = 0x98; // TArray<FLeaderboardData>
		constexpr auto PlayerLeaderboardValue = 0xa8; // int32_t
		constexpr auto PlayerLeaderboardDivision = 0xac; // int32_t
		constexpr auto PlayerLeaderboardMMR = 0xb0; // float
		constexpr auto PlayerLeaderboardName = 0xb8; // FString
		constexpr auto bShowGlobalLeaderboards = 0xc8; // uint32_t : 1
		constexpr auto bWordFilterError = 0xc8; // uint32_t : 1
		constexpr auto Leaderboards = 0xd0; // ObjectProperty
		constexpr auto PendingLeaderboardRequestID = 0xd8; // FName
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xc8; // uint32_t : 1
		constexpr auto bAdjustForWorldSpace = 0xc8; // uint32_t : 1
		constexpr auto StartRadius = 0xd0; // FRawDistributionFloat
		constexpr auto StartHeight = 0xf8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x120; // CylinderHeightAxis
	}

	namespace n_AFXActor_Car_TA {
		constexpr auto WheelEffectsMap = 0x360; // ObjectProperty
		constexpr auto AkWheelImpactSound = 0x368; // ObjectProperty
		constexpr auto AkWheelDriveSound = 0x370; // ObjectProperty
		constexpr auto AkEnterSupersonicSound = 0x378; // ObjectProperty
		constexpr auto AkLoopSupersonicSound = 0x380; // ObjectProperty
		constexpr auto MinImpactMomentum = 0x388; // float
		constexpr auto AkImpactTypeKey = 0x38c; // FName
		constexpr auto AkImpactIntensityKey = 0x394; // FName
		constexpr auto WheelImpactShake = 0x3a0; // ObjectProperty
		constexpr auto WheelImpactForceFeedback = 0x3a8; // ObjectProperty
		constexpr auto ShakeScaleCurve = 0x3b0; // FInterpCurveFloat
		constexpr auto SupersonicWheelTemplate = 0x3c8; // ObjectProperty
		constexpr auto BoostGlowRate = 0x3d0; // float
		constexpr auto ShakeComponent = 0x3d8; // ComponentProperty
		constexpr auto Vehicle = 0x3e0; // ObjectProperty
		constexpr auto bThrottle = 0x3e8; // uint32_t : 1
		constexpr auto bInAir = 0x3e8; // uint32_t : 1
		constexpr auto bBrake = 0x3e8; // uint32_t : 1
		constexpr auto bWasBoosting = 0x3e8; // uint32_t : 1
		constexpr auto bWasBoostFlying = 0x3e8; // uint32_t : 1
		constexpr auto bWasSuperSonic = 0x3e8; // uint32_t : 1
		constexpr auto bWasOnWall = 0x3e8; // uint32_t : 1
		constexpr auto bEnabled = 0x3e8; // uint32_t : 1
		constexpr auto ThrottleState = 0x3f0; // ObjectProperty
		constexpr auto SuperSonicState = 0x3f8; // ObjectProperty
		constexpr auto InAirState = 0x400; // ObjectProperty
		constexpr auto BoostState = 0x408; // ObjectProperty
		constexpr auto BoostPreviewState = 0x410; // ObjectProperty
		constexpr auto BoostFlyState = 0x418; // ObjectProperty
		constexpr auto OnWallState = 0x420; // ObjectProperty
		constexpr auto SuperSonicEndState = 0x428; // ObjectProperty
		constexpr auto ContactPhysMat = 0x430; // ObjectProperty
		constexpr auto ContactPhysMatProp = 0x438; // ObjectProperty
		constexpr auto WheelEffects = 0x440; // TArray<FWheelFX>
		constexpr auto WheelEffectsParticle = 0x450; // ObjectProperty
		constexpr auto CarMesh = 0x458; // ComponentProperty
		constexpr auto MaxActorsGroup = 0x460; // ComponentProperty
		constexpr auto BoostGlow = 0x468; // float
	}

	namespace n_UGFxData_LocalCar_TA {
		constexpr auto Boost = 0x98; // int32_t
		constexpr auto bOnBack = 0x9c; // uint32_t : 1
		constexpr auto bViewingCarCam = 0x9c; // uint32_t : 1
		constexpr auto bShowItemsDisplay = 0x9c; // uint32_t : 1
		constexpr auto bItemActive = 0x9c; // uint32_t : 1
		constexpr auto TimeTillItem = 0xa0; // int32_t
		constexpr auto MaxTimeTillItem = 0xa4; // int32_t
		constexpr auto ItemName = 0xa8; // FString
		constexpr auto ItemIcon = 0xb8; // ObjectProperty
		constexpr auto ItemTimeRemaining = 0xc0; // float
		constexpr auto ItemTargetID = 0xc4; // int32_t
	}

	namespace n_UGFxData_SeasonMode_TA {
		constexpr auto PlayerBots = 0x98; // TArray<ObjectProperty>
		constexpr auto NumSeasons = 0xa8; // int32_t
		constexpr auto Logos = 0xb0; // TArray<FGFxLogoData>
		constexpr auto Bots = 0xc0; // TArray<FGFxBotData>
		constexpr auto TeamLogo = 0xd0; // ObjectProperty
		constexpr auto SeasonSave = 0xd8; // ObjectProperty
		constexpr auto PreviewSet = 0xe0; // ObjectProperty
		constexpr auto bUseSeasonColors = 0xe8; // uint32_t : 1
		constexpr auto CurrentTeamSize = 0xec; // int32_t
	}

	namespace n_UOnline_X {
		constexpr auto OnlineSub = 0x68; // ObjectProperty
		constexpr auto PsyNet = 0x70; // ObjectProperty
		constexpr auto EOS = 0x78; // ObjectProperty
		constexpr auto __EventEOSInitialized__Delegate = 0x80; // DelegateProperty
	}

	namespace n_U__PsyNetServiceProvider_X__CreateChannel_D898B5804E8EEEA2416127A6DBC2029E {
		constexpr auto ChannelName = 0x60; // FString
	}

	namespace n_AImageReflectionSceneCapture {
		constexpr auto DepthRange = 0x280; // float
		constexpr auto ColorRange = 0x284; // float
	}

	namespace n_UGroupComponent_ORS {
		constexpr auto Components = 0xa0; // TArray<FComponentTemplate>
		constexpr auto AllComponents = 0xb0; // TArray<FComponentTemplate>
		constexpr auto AllObjects = 0xc0; // TArray<ObjectProperty>
		constexpr auto bGlobalGroup = 0xd0; // uint32_t : 1
		constexpr auto bInitializedComponents = 0xd0; // uint32_t : 1
		constexpr auto bRegisteredWithORS = 0xd0; // uint32_t : 1
		constexpr auto __ComponentCondition__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UOnlineGame_TA {
		constexpr auto Tournaments = 0x298; // ObjectProperty
		constexpr auto TourMatchmaking = 0x2a0; // ObjectProperty
		constexpr auto Personas = 0x2a8; // ObjectProperty
		constexpr auto ClubPersonas = 0x2b0; // ObjectProperty
	}

	namespace n_UPsyNetService_RewardDropReceived_TA {
		constexpr auto RocketPassInfo = 0x90; // FRocketPassInfo
		constexpr auto ProductData = 0xa0; // TArray<FOnlineProductData>
		constexpr auto RewardDrops = 0xb0; // TArray<FOnlineXPReward>
		constexpr auto ChallengeRewards = 0xc0; // TArray<FOnlineReward>
		constexpr auto AchievementRewards = 0xd0; // TArray<FOnlineReward>
		constexpr auto CurrencyDrops = 0xe0; // TArray<FCurrency>
		constexpr auto MatchGUID = 0xf0; // FString
	}

	namespace n_URPC_GetLeaderboard_X {
		constexpr auto Stat = 0x110; // FString
	}

	namespace n_UGFxObjectReference_X {
		constexpr auto Value = 0x60; // int32_t [0xc]
	}

	namespace n_U__CrowdActorManager_TA__PlayCrowdSound_B1F0F677443568DB4A951F920FA40639 {
		constexpr auto GetSoundDelegate = 0x60; // DelegateProperty
	}

	namespace n_UBallTrajectoryComponent_Beam_TA {
		constexpr auto TrajectoryFXs = 0x118; // TArray<FTrajectoryFX>
		constexpr auto ParticleBeamArchetype = 0x128; // ObjectProperty
	}

	namespace n_UProductAttribute_Trademark_TA {
		constexpr auto Glyph = 0x80; // ETrademarkGlyph
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x70; // uint32_t : 1
		constexpr auto bApplyOwnerScale = 0x70; // uint32_t : 1
	}

	namespace n_U__CrumbTrails_TA__SetupCompletionCondition_DD27AC0A411389D3CBB88A878A5E96A4 {
		constexpr auto Index = 0x60; // int32_t
	}

	namespace n_UBotReplacement_TA {
		constexpr auto ReplacingBotPRI = 0x60; // ObjectProperty
	}

	namespace n_UPartyMessage_MatchmakingAvailability_X {
		constexpr auto MatchmakeRestrictions = 0xa8; // int32_t
	}

	namespace n_USeqAct_SetVector {
		constexpr auto DefaultValue = 0x160; // FVector
	}

	namespace n_UTitleFileDownloadCache {
		constexpr auto TitleFiles = 0x80; // TArray<FTitleFileCacheEntry>
		constexpr auto LoadCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto SaveCompleteDelegates = 0xa0; // TArray<DelegateProperty>
		constexpr auto __OnLoadTitleFileComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnSaveTitleFileComplete__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UMatchData_X {
		constexpr auto MatchGUID = 0x60; // FString
		constexpr auto RecordStartTimestamp = 0x70; // QWordProperty
		constexpr auto RecordEndTimestamp = 0x78; // QWordProperty
		constexpr auto MatchStartTimestamp = 0x80; // QWordProperty
		constexpr auto MatchEndTimestamp = 0x88; // QWordProperty
		constexpr auto MapName = 0x90; // FName
		constexpr auto Playlist = 0x98; // int32_t
		constexpr auto Mutators = 0xa0; // TArray<FName>
		constexpr auto bIsBotMatch = 0xb0; // uint32_t : 1
		constexpr auto bClubVsClub = 0xb0; // uint32_t : 1
		constexpr auto bOverTime = 0xb0; // uint32_t : 1
		constexpr auto bNoContest = 0xb0; // uint32_t : 1
		constexpr auto bForfeit = 0xb0; // uint32_t : 1
		constexpr auto ClubID = 0xb4; // int32_t
		constexpr auto CustomMatchCreatorPlayerID = 0xb8; // FUniqueNetId
		constexpr auto CustomServerName = 0x100; // FString
		constexpr auto CustomServerPassword = 0x110; // FString
		constexpr auto SecondsPlayed = 0x120; // float
		constexpr auto OvertimeSecondsPlayed = 0x124; // float
		constexpr auto WinningTeam = 0x128; // int32_t
		constexpr auto Team0Score = 0x12c; // int32_t
		constexpr auto Team1Score = 0x130; // int32_t
		constexpr auto Players = 0x138; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_CarMatinee_TA {
		constexpr auto CinematicCarArchPath = 0x288; // FString
		constexpr auto bHideAfterPause = 0x298; // uint32_t : 1
		constexpr auto bHideAfterCompleted = 0x298; // uint32_t : 1
		constexpr auto ClassesToNotShow = 0x2a0; // TArray<FNone*>
	}

	namespace n_UBTC_TimeSinceBallHit {
		constexpr auto CheckTeam = 0x90; // EAITeam
		constexpr auto TimeGreaterThan = 0x94; // float
		constexpr auto TimeLessThan = 0x98; // float
		constexpr auto Ball = 0xa0; // ObjectProperty
		constexpr auto LastHitTime = 0xa8; // float
	}

	namespace n_UPartyMessage_TourPreCheckIn_TA {
		constexpr auto Settings = 0xa8; // ObjectProperty
	}

	namespace n_UGFxData_CarRumble_TA {
		constexpr auto Items = 0x98; // TArray<FRumblePickupData>
		constexpr auto SelectedItem = 0xa8; // int32_t
		constexpr auto bHasItems = 0xac; // uint32_t : 1
		constexpr auto ItemCount = 0xb0; // int32_t
		constexpr auto PreviewTimeSeconds = 0xb4; // int32_t
		constexpr auto Pickups = 0xb8; // ObjectProperty
	}

	namespace n_URBVehicleHistory_TA {
		constexpr auto InputFadeTime = 0xa0; // float
		constexpr auto RBVehicleSnapshots = 0xa8; // TArray<FRBVehicleSnapshot>
		constexpr auto ComponentHistories = 0xb8; // TArray<FCarComponentHistory>
		constexpr auto BackupVehicleInputs = 0xc8; // FVehicleInputs
	}

	namespace n_U__GFxData_TourDependentMatch_TA__UpdateDependentMatch_6A0CBD5746D6ABC05E38108D6D49EEFF {
		constexpr auto Match = 0x60; // FTourMatch
	}

	namespace n_UCameraState_Waiting_TA {
		constexpr auto MinExecutionTime = 0x210; // float
		constexpr auto ExecutionTime = 0x214; // float
	}

	namespace n_UPlayerLegacyStatusSave_TA {
		constexpr auto LegacyStatus = 0xc8; // ELegacyBoxStatus
		constexpr auto bOnlineSet = 0xcc; // uint32_t : 1
		constexpr auto OnlineProducts = 0xd0; // TArray<FOnlineProductData>
		constexpr auto __bOnlineSet__ChangeNotify = 0xe0; // DelegateProperty
	}

	namespace n_UGFxData_TourBracketMatch_TA {
		constexpr auto MatchID = 0x98; // int32_t
		constexpr auto Round = 0x9c; // int32_t
		constexpr auto Order = 0xa0; // int32_t
		constexpr auto NextMatch = 0xa4; // int32_t
		constexpr auto PrevMatchA = 0xa8; // int32_t
		constexpr auto PrevMatchB = 0xac; // int32_t
		constexpr auto TeamA = 0xb0; // QWordProperty
		constexpr auto TeamB = 0xb8; // QWordProperty
		constexpr auto TeamAWins = 0xc0; // int32_t
		constexpr auto TeamBWins = 0xc4; // int32_t
		constexpr auto WinnerTeam = 0xc8; // QWordProperty
		constexpr auto bInProgress = 0xd0; // uint32_t : 1
		constexpr auto bCanSpectate = 0xd0; // uint32_t : 1
		constexpr auto GFxGameClass = 0xd8; // FNone*
	}

	namespace n_U__ShopsService_PsyNet_TA__Purchase_EBB53EB04F9FB1BA7FC1438F83C039ED {
		constexpr auto SuccessCallback = 0x60; // DelegateProperty
		constexpr auto FailedCallback = 0x78; // DelegateProperty
	}

	namespace n_USeqAct_Counter_TA {
		constexpr auto MaxCount = 0x160; // int32_t
	}

	namespace n_AHUD_X {
		constexpr auto ShowDebugObject = 0x308; // ObjectProperty
		constexpr auto DebugDrawer = 0x310; // ObjectProperty
		constexpr auto DebugTexture = 0x318; // ObjectProperty
	}

	namespace n_URPC_RocketPassPurchasePremium_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceIDs = 0x130; // TArray<FProductInstanceID>
		constexpr auto PurchasableID = 0x140; // int32_t
		constexpr auto bOwnsPremium = 0x144; // uint32_t : 1
		constexpr auto TierLevel = 0x148; // int32_t
		constexpr auto Unlocks = 0x150; // TArray<FRocketPassUnlock>
		constexpr auto WalletCurrencies = 0x160; // TArray<FCurrency>
	}

	namespace n_USeqAct_GetTeamScore_TA {
		constexpr auto TeamIndex = 0x160; // int32_t
		constexpr auto TeamScore = 0x164; // int32_t
	}

	namespace n_URPC_TourSetScheduleRegion_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ScheduleRegion = 0x130; // FString
	}

	namespace n_UBTC_InCone {
		constexpr auto Source = 0xe8; // ObjectProperty
		constexpr auto Destination = 0xf0; // ObjectProperty
		constexpr auto AngleLessThan = 0xf8; // float
		constexpr auto AngleGreaterThan = 0xfc; // float
	}

	namespace n_URPC_RocketPassGetPlayerInfo_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto RocketPassID = 0x130; // int32_t
		constexpr auto RocketPassInfo = 0x134; // FRocketPassInfo
		constexpr auto RocketPassStore = 0x140; // FRocketPassStore
	}

	namespace n_UGFxData_TourSearch_TA {
		constexpr auto Config = 0x98; // ObjectProperty
		constexpr auto Text = 0xa0; // FString
		constexpr auto RankMin = 0xb0; // int32_t
		constexpr auto RankMax = 0xb4; // int32_t
		constexpr auto GameMode = 0xb8; // int32_t
		constexpr auto Regions = 0xc0; // TArray<FGFxRegion>
		constexpr auto TeamSize = 0xd0; // int32_t
		constexpr auto BracketSize = 0xd4; // int32_t
		constexpr auto bShowIneligibleRank = 0xd8; // uint32_t : 1
		constexpr auto GFxTourList = 0xe0; // ComponentProperty
		constexpr auto TourList = 0xe8; // ComponentProperty
		constexpr auto Profile = 0xf0; // ObjectProperty
		constexpr auto SearchTask = 0xf8; // ObjectProperty
		constexpr auto TournamentSave = 0x100; // ObjectProperty
	}

	namespace n_UOnlineGameReservations_TA {
		constexpr auto Loadouts = 0x1b0; // TArray<FReservationLoadout>
	}

	namespace n_UPsyNetService_FaceItReservationFound_TA {
		constexpr auto Reservation = 0x90; // FCheckReservationResponse
		constexpr auto MatchInfo = 0x110; // FFaceItMatchInfo
	}

	namespace n_UFogVolumeConeDensityComponent {
		constexpr auto MaxDensity = 0xf0; // float
		constexpr auto ConeVertex = 0xf4; // FVector
		constexpr auto ConeRadius = 0x100; // float
		constexpr auto ConeAxis = 0x104; // FVector
		constexpr auto ConeMaxAngle = 0x110; // float
		constexpr auto PreviewCone = 0x118; // ComponentProperty
	}

	namespace n_URPC_MicroTransactions_UnlockContainer_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceIDs = 0x130; // TArray<FProductInstanceID>
		constexpr auto KeyInstanceIDs = 0x140; // TArray<FProductInstanceID>
		constexpr auto Drops = 0x150; // TArray<FOnlineProductData>
	}

	namespace n_UGFxData_TourSpectate_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
		constexpr auto MatchNotAvailable = 0xa0; // FString
		constexpr auto SearchingTitle = 0xb0; // FString
		constexpr auto SearchingBody = 0xc0; // FString
		constexpr auto ActiveTask = 0xd0; // ObjectProperty
		constexpr auto PendingTourID = 0xd8; // QWordProperty
	}

	namespace n_USequenceObject {
		constexpr auto ObjInstanceVersion = 0x60; // int32_t
		constexpr auto ParentSequence = 0x68; // ObjectProperty
		constexpr auto ObjPosX = 0x70; // int32_t
		constexpr auto ObjPosY = 0x74; // int32_t
		constexpr auto ObjName = 0x78; // FString
		constexpr auto ObjCategory = 0x88; // FString
		constexpr auto ObjRemoveInProject = 0x98; // TArray<FString>
		constexpr auto ObjColor = 0xa8; // FColor
		constexpr auto ObjComment = 0xb0; // FString
		constexpr auto bDeletable = 0xc0; // uint32_t : 1
		constexpr auto bDrawFirst = 0xc0; // uint32_t : 1
		constexpr auto bDrawLast = 0xc0; // uint32_t : 1
		constexpr auto bOutputObjCommentToScreen = 0xc0; // uint32_t : 1
		constexpr auto bSuppressAutoComment = 0xc0; // uint32_t : 1
		constexpr auto DrawWidth = 0xc4; // int32_t
		constexpr auto DrawHeight = 0xc8; // int32_t
		constexpr auto PIESequenceObject = 0xd0; // ObjectProperty
	}

	namespace n_UWebCache_X {
		constexpr auto Requests = 0x60; // TArray<FCachedDataRequest>
		constexpr auto __CachedDataCallback__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UPostProcessManager_X {
		constexpr auto PlayerOwner = 0x60; // ObjectProperty
		constexpr auto ActiveEffects = 0x68; // TArray<ObjectProperty>
		constexpr auto bNeedsReset = 0x78; // uint32_t : 1
		constexpr auto EffectDefaults = 0x80; // TArray<FPPEffectDefaults>
		constexpr auto PersistentEffectDefaults = 0x90; // TArray<FPPPersistentEffectDefaults>
		constexpr auto ActiveChains = 0xa0; // TArray<FPPChainInfo>
		constexpr auto ChainDefaults = 0xb0; // TArray<FPPChainInfo>
		constexpr auto PostProcessOverrides = 0xc0; // TArray<FPostProcessOverride>
	}

	namespace n_UEngineAudioRevSimBoostLevel_TA {
		constexpr auto ActivatedInterpTime = 0x70; // float
		constexpr auto InactiveInterpTime = 0x74; // float
		constexpr auto InterpExp = 0x78; // float
		constexpr auto ActivatedSpeedSq = 0x7c; // float
		constexpr auto InterpTime = 0x80; // float
		constexpr auto InterpValue = 0x84; // float
		constexpr auto InterpTimeElapsed = 0x88; // float
		constexpr auto TargetValue = 0x8c; // float
	}

	namespace n_U__GFxData_TourBracketMatchDetails_TA__HandleGetMatchDetails_BF35AC99412E871EDEF757BE72F8E400 {
		constexpr auto Details = 0x60; // FTourMatchTeamDetails
	}

	namespace n_UServerFormPartyEvent_TA {
		constexpr auto ConfirmedMerge = 0x60; // ObjectProperty
	}

	namespace n_URPC_DebugAddXP_TA {
		constexpr auto XPToAdd = 0xe8; // int32_t
		constexpr auto PlayerID = 0xf0; // FUniqueNetId
		constexpr auto XPInfoResponse = 0x138; // FXPInfo
	}

	namespace n_UAnimMetaData_SkelControlKeyFrame {
		constexpr auto KeyFrames = 0x80; // TArray<FTimeModifier>
	}

	namespace n_UOnlineClubCache_X {
		constexpr auto ClubDetailsCache = 0x70; // TArray<ObjectProperty>
		constexpr auto __EventClubUpdated__Delegate = 0x80; // DelegateProperty
	}

	namespace n_USeqAct_GetVectorComponents {
		constexpr auto InVector = 0x160; // FVector
		constexpr auto X = 0x16c; // float
		constexpr auto Y = 0x170; // float
		constexpr auto Z = 0x174; // float
	}

	namespace n_URPC_FileStorage_GetFileDownloadUrl_X {
		constexpr auto Path = 0xe8; // FString
		constexpr auto URL = 0xf8; // FString
	}

	namespace n_U__GFxData_Chat_TA__AddChatMessage_C6C9F62843F25DBA3A7E99AC68EFCA81 {
		constexpr auto NewMessage = 0x60; // FGFxChatMessage
	}

	namespace n_USeqEvent_PreviewGoalExplosion_TA {
		constexpr auto FXInstance = 0x180; // ObjectProperty
	}

	namespace n_UMapsConfig_TA {
		constexpr auto OnlineMapSets = 0x78; // TArray<FOnlineMapSet>
	}

	namespace n_U__GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_5E8027C84EB60E4AC80B90B0BE61A3C2 {
		constexpr auto Converter = 0x60; // ObjectProperty
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x60; // ObjectProperty
		constexpr auto OldRenderingOverrides = 0x68; // FRenderingPerformanceOverrides
	}

	namespace n_UShadowMap2D {
		constexpr auto Texture = 0x60; // ObjectProperty
		constexpr auto CoordinateScale = 0x68; // FVector2D
		constexpr auto CoordinateBias = 0x70; // FVector2D
		constexpr auto LightGuid = 0x78; // FGuid
		constexpr auto bIsShadowFactorTexture = 0x88; // uint32_t : 1
		constexpr auto Component = 0x90; // ComponentProperty
		constexpr auto InstanceIndex = 0x98; // int32_t
	}

	namespace n_UGFxData_MainMenu_TA {
		constexpr auto PreviewCameraRotationScale = 0x98; // float
		constexpr auto RequestedDLCName = 0x9c; // FName
		constexpr auto RequestedSubIdx = 0xa4; // int32_t
		constexpr auto QueuedName = 0xa8; // FName
		constexpr auto QueuedSubIdx = 0xb0; // int32_t
		constexpr auto UISoundState_AudioPreview = 0xb4; // FName
		constexpr auto UISoundState_MusicPreview = 0xbc; // FName
		constexpr auto UISoundState_CurrentPreview = 0xc4; // FName
		constexpr auto ProductLoadedCallback = 0xd0; // DelegateProperty
	}

	namespace n_UMaterialExpressionGameParameter {
		constexpr auto GameShaderParamType = 0xc0; // EGameShaderParameterType
	}

	namespace n_UGFxData_ChallengeFolder_TA {
		constexpr auto bSelected = 0x98; // uint32_t : 1
		constexpr auto bNotifyNewInfo = 0x98; // uint32_t : 1
		constexpr auto bNormalRewardsAvailable = 0x98; // uint32_t : 1
		constexpr auto bPremiumRewardsAvailable = 0x98; // uint32_t : 1
		constexpr auto GFxParentFolder = 0xa0; // ObjectProperty
		constexpr auto GFxSubFolders = 0xa8; // TArray<ObjectProperty>
		constexpr auto SubFolderClass = 0xb8; // FNone*
		constexpr auto __EventSelected__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventRefreshed__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UBTC_Impact {
		constexpr auto TimeGreaterThan = 0x218; // float
		constexpr auto TimeLessThan = 0x21c; // float
	}

	namespace n_ABall_Breakout_TA {
		constexpr auto DamageAtTime = 0xa40; // TArray<FBreakoutDamage>
		constexpr auto DamageForceLevels = 0xa50; // TArray<int32_t>
		constexpr auto bClearTeamOnDamage = 0xa60; // uint32_t : 1
		constexpr auto bCanDamageOwnTeam = 0xa60; // uint32_t : 1
		constexpr auto MinDamageVelocity = 0xa64; // float
		constexpr auto MinDamageTime = 0xa68; // float
		constexpr auto MinImpactSpeedForCharge = 0xa6c; // int32_t
		constexpr auto DoubleTapTime = 0xa70; // float
		constexpr auto ForceAccumDecayPerSecond = 0xa74; // float
		constexpr auto ForceAccumMax = 0xa78; // float
		constexpr auto ForceAccumRecent = 0xa7c; // float
		constexpr auto LastTeamTouch = 0xa80; // char
		constexpr auto LastCarTouch = 0xa88; // ObjectProperty
		constexpr auto LastDamage = 0xa90; // int32_t
		constexpr auto LastDamageTime = 0xa94; // float
		constexpr auto DamageIndex = 0xa98; // int32_t
		constexpr auto AbsorbedForce = 0xa9c; // float
		constexpr auto AppliedDamage = 0xaa0; // FAppliedBreakoutDamage
		constexpr auto __EventDamageIndexChanged__Delegate = 0xab8; // DelegateProperty
		constexpr auto __EventLastTeamTouchChanged__Delegate = 0xad0; // DelegateProperty
		constexpr auto __EventHitNoDamage__Delegate = 0xae8; // DelegateProperty
		constexpr auto __EventAppliedDamage__Delegate = 0xb00; // DelegateProperty
	}

	namespace n_UGFxData_PRI_TA {
		constexpr auto PlayerName = 0x98; // FString
		constexpr auto PlayerIDString = 0xa8; // FString
		constexpr auto Platform = 0xb8; // FString
		constexpr auto Avatar = 0xc8; // ObjectProperty
		constexpr auto Team = 0xd0; // int32_t
		constexpr auto Score = 0xd4; // int32_t
		constexpr auto Goals = 0xd8; // int32_t
		constexpr auto Assists = 0xdc; // int32_t
		constexpr auto Saves = 0xe0; // int32_t
		constexpr auto Shots = 0xe4; // int32_t
		constexpr auto Ping = 0xe8; // int32_t
		constexpr auto BreakoutDamage = 0xec; // int32_t
		constexpr auto bMvp = 0xf0; // uint32_t : 1
		constexpr auto bSpeaking = 0xf0; // uint32_t : 1
		constexpr auto bMuted = 0xf0; // uint32_t : 1
		constexpr auto bReady = 0xf0; // uint32_t : 1
		constexpr auto bBotPlayer = 0xf0; // uint32_t : 1
		constexpr auto bLocalPlayer = 0xf0; // uint32_t : 1
		constexpr auto bDisconnected = 0xf0; // uint32_t : 1
		constexpr auto bStayAsPartyActive = 0xf0; // uint32_t : 1
		constexpr auto bSpectator = 0xf0; // uint32_t : 1
		constexpr auto bCompletedPlacementMatches = 0xf0; // uint32_t : 1
		constexpr auto bSelected = 0xf0; // uint32_t : 1
		constexpr auto bHighlighted = 0xf0; // uint32_t : 1
		constexpr auto bGameEnded = 0xf0; // uint32_t : 1
		constexpr auto bOnPodium = 0xf0; // uint32_t : 1
		constexpr auto bWantsToHonorDuel = 0xf0; // uint32_t : 1
		constexpr auto bChallengedToHonorDuel = 0xf0; // uint32_t : 1
		constexpr auto bCanChallengeToHonorDuel = 0xf0; // uint32_t : 1
		constexpr auto ConnectionStatus = 0xf8; // FString
		constexpr auto PartyID = 0x108; // FString
		constexpr auto XPTitle = 0x118; // FString
		constexpr auto TitleColor = 0x128; // FColor
		constexpr auto TitleGlowColor = 0x12c; // FColor
		constexpr auto SkillTier = 0x130; // int32_t
		constexpr auto Boost = 0x134; // int32_t
		constexpr auto PRI = 0x138; // ObjectProperty
		constexpr auto PlayerID = 0x140; // FUniqueNetId
		constexpr auto PodiumSpotlightScreenPosX = 0x188; // float
		constexpr auto PodiumSpotlightScreenPosY = 0x18c; // float
		constexpr auto PrimaryTitle = 0x190; // FString
		constexpr auto SecondaryTitle = 0x1a0; // FString
		constexpr auto PrimaryTitleStat = 0x1b0; // FString
		constexpr auto SecondaryTitleStat = 0x1c0; // FString
		constexpr auto PrimaryStat = 0x1d0; // int32_t
		constexpr auto SecondaryStat = 0x1d4; // int32_t
		constexpr auto ClubID = 0x1d8; // QWordProperty
		constexpr auto WorstConnectionQualityStateBeyondLatency = 0x1e0; // EConnectionQualityState
		constexpr auto QuitSeverity = 0x1e1; // ESeverityType
		constexpr auto SpectatorShortcut = 0x1e4; // int32_t
		constexpr auto GFxPlayerBanner = 0x1e8; // ObjectProperty
		constexpr auto GFxPlayerAvatar = 0x1f0; // ObjectProperty
		constexpr auto GFxPlayerBorder = 0x1f8; // ObjectProperty
		constexpr auto Persona = 0x200; // ObjectProperty
	}

	namespace n_U__GFxTourList_TA__HandleTournamentsChanged_ADE6C70B4E89AB8959FDACADD820880E {
		constexpr auto InTourList = 0x60; // ComponentProperty
	}

	namespace n_UIdlePlayer_TA {
		constexpr auto StartTime = 0x60; // float
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UGFxData_TourBracketMatchDetails_TA {
		constexpr auto TournamentID = 0x98; // QWordProperty
		constexpr auto MatchID = 0xa0; // int32_t
		constexpr auto PollIntervalSeconds = 0xa4; // float
		constexpr auto GetMatchDetailsTask = 0xa8; // ObjectProperty
		constexpr auto Tournaments = 0xb0; // ObjectProperty
	}

	namespace n_UProfilePCSave_TA {
		constexpr auto PCBindings = 0xc8; // TArray<FPlayerBinding>
		constexpr auto MouseSensitivity = 0xd8; // float
		constexpr auto MouseXDeadZone = 0xdc; // float
		constexpr auto MouseYDeadZone = 0xe0; // float
		constexpr auto MouseXDeadZoneAir = 0xe4; // float
		constexpr auto MouseYDeadZoneAir = 0xe8; // float
		constexpr auto KeyboardAxisBlendTime = 0xec; // float
		constexpr auto bAirPitchSafetyEnabled = 0xf0; // uint32_t : 1
	}

	namespace n_URB_BodySetup {
		constexpr auto SleepFamily = 0xc0; // ESleepFamily
		constexpr auto BoneName = 0xc4; // FName
		constexpr auto bFixed = 0xcc; // uint32_t : 1
		constexpr auto bNoCollision = 0xcc; // uint32_t : 1
		constexpr auto bBlockZeroExtent = 0xcc; // uint32_t : 1
		constexpr auto bBlockNonZeroExtent = 0xcc; // uint32_t : 1
		constexpr auto bEnableContinuousCollisionDetection = 0xcc; // uint32_t : 1
		constexpr auto bAlwaysFullAnimWeight = 0xcc; // uint32_t : 1
		constexpr auto bConsiderForBounds = 0xcc; // uint32_t : 1
		constexpr auto PhysMaterial = 0xd0; // ObjectProperty
		constexpr auto MassScale = 0xd8; // float
		constexpr auto CollisionGeom = 0xe0; // TArray<FPointer>
		constexpr auto CollisionGeomScale3D = 0xf0; // TArray<FVector>
		constexpr auto PreCachedPhysScale = 0x100; // TArray<FVector>
		constexpr auto PreCachedPhysData = 0x110; // TArray<FKCachedConvexData>
		constexpr auto PreCachedPhysDataVersion = 0x120; // int32_t
	}

	namespace n_UPBRuleNodeExtractTopBottom {
		constexpr auto ExtractTopZ = 0x98; // float
		constexpr auto ExtractNotTopZ = 0x9c; // float
		constexpr auto ExtractBottomZ = 0xa0; // float
		constexpr auto ExtractNotBottomZ = 0xa4; // float
	}

	namespace n_UEOS_ManageBlockListResponse {
		constexpr auto AccountId = 0x60; // FString
		constexpr auto Created = 0x70; // FString
	}

	namespace n_UTourServerInfo_TA {
		constexpr auto InfoName = 0x60; // FName
		constexpr auto NumAllowedSpectators = 0x68; // int32_t
		constexpr auto bUsesTieBreakerRules = 0x6c; // uint32_t : 1
		constexpr auto bRestoreInterruptedMatches = 0x6c; // uint32_t : 1
		constexpr auto GetMatchDetailsClass = 0x70; // FNone*
		constexpr auto GameUpdateClass = 0x78; // FNone*
	}

	namespace n_UEpicAccountSave_TA {
		constexpr auto LinkedPlatforms = 0xc8; // TArray<OnlinePlatform>
		constexpr auto ConvertFriendsData = 0xd8; // TArray<FEpicConvertFriendsSaveData>
		constexpr auto SentEOSFriendInvites = 0xe8; // TArray<FString>
	}

	namespace n_UNavMeshGoal_Null {
		constexpr auto PartialGoal = 0x80; // FPointer
	}

	namespace n_UDecodeObject_X {
		constexpr auto Checksum = 0x60; // int32_t
		constexpr auto Error = 0x68; // ObjectProperty
	}

	namespace n_UCarColorSet_TA {
		constexpr auto Grayscales = 0x80; // TArray<FLinearColor>
		constexpr auto H = 0x90; // TArray<FLinearColor>
		constexpr auto SV = 0xa0; // TArray<FLinearColor>
		constexpr auto ColorBlindColor = 0xb0; // FLinearColor
		constexpr auto DebugColors = 0xc0; // TArray<FDebugColor>
		constexpr auto MinStadiumBrightness = 0xd0; // float
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x78; // FRawDistributionVector
		constexpr auto Absolute = 0xa0; // uint32_t : 1
	}

	namespace n_U__VanityQuery_TA__CompleteRequests_933A7A2547ED48AB2E6E5EA789042D71 {
		constexpr auto I = 0x60; // int32_t
	}

	namespace n_ANxTornadoForceField {
		constexpr auto RadialStrength = 0x2c0; // float
		constexpr auto RotationalStrength = 0x2c4; // float
		constexpr auto LiftStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceTopRadius = 0x2d0; // float
		constexpr auto LiftFalloffHeight = 0x2d4; // float
		constexpr auto EscapeVelocity = 0x2d8; // float
		constexpr auto ForceHeight = 0x2dc; // float
		constexpr auto HeightOffset = 0x2e0; // float
		constexpr auto BSpecialRadialForceMode = 0x2e4; // uint32_t : 1
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_URPC_TrainingEditor_DeleteTrainingData_TA {
		constexpr auto Code = 0xe8; // FString
	}

	namespace n_U__GFxData_Playlist_TA__SetPlayerCount_98EF68DA4908B16F08A5C4B3E0942EBD {
		constexpr auto Count = 0x60; // int32_t
	}

	namespace n_ALandscapeGizmoActiveActor {
		constexpr auto DataType = 0x288; // ELandscapeGizmoType
		constexpr auto SelectedData = 0x290; // TMap<None, None>
		constexpr auto GizmoTexture = 0x2e0; // ObjectProperty
		constexpr auto TextureScale = 0x2e8; // FVector2D
		constexpr auto SampledHeight = 0x2f0; // TArray<FVector>
		constexpr auto SampledNormal = 0x300; // TArray<FVector>
		constexpr auto SampleSizeX = 0x310; // int32_t
		constexpr auto SampleSizeY = 0x314; // int32_t
		constexpr auto CachedWidth = 0x318; // float
		constexpr auto CachedHeight = 0x31c; // float
		constexpr auto CachedScaleXY = 0x320; // float
		constexpr auto FrustumVerts = 0x324; // FVector [0x8]
		constexpr auto GizmoMaterial = 0x388; // ObjectProperty
		constexpr auto GizmoDataMaterial = 0x390; // ObjectProperty
		constexpr auto GizmoMeshMaterial = 0x398; // ObjectProperty
		constexpr auto GizmoMeshMaterial2 = 0x3a0; // ObjectProperty
		constexpr auto LayerNames = 0x3a8; // TArray<FName>
	}

	namespace n_USmoothDynamicValue_X {
		constexpr auto LerpUpSpeed = 0x88; // float
		constexpr auto LerpDownSpeed = 0x8c; // float
		constexpr auto SmoothedCachedValue = 0x90; // float
	}

	namespace n_USceneCapture2DHitMaskComponent {
		constexpr auto TextureTarget = 0xf8; // ObjectProperty
		constexpr auto SkeletalMeshComp = 0x100; // ComponentProperty
		constexpr auto MaterialIndex = 0x108; // int32_t
		constexpr auto ForceLOD = 0x10c; // int32_t
		constexpr auto HitMaskCullDistance = 0x110; // int32_t
		constexpr auto FadingStartTimeSinceHit = 0x114; // float
		constexpr auto FadingPercentage = 0x118; // float
		constexpr auto FadingDurationTime = 0x11c; // float
		constexpr auto FadingIntervalTime = 0x120; // float
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x78; // FName
	}

	namespace n_AInternetLink {
		constexpr auto LinkMode = 0x268; // ELinkMode
		constexpr auto InLineMode = 0x269; // ELineMode
		constexpr auto OutLineMode = 0x26a; // ELineMode
		constexpr auto ReceiveMode = 0x26b; // EReceiveMode
		constexpr auto Socket = 0x270; // FPointer
		constexpr auto Port = 0x278; // int32_t
		constexpr auto RemoteSocket = 0x280; // FPointer
		constexpr auto PrivateResolveInfo = 0x288; // FPointer
		constexpr auto DataPending = 0x290; // int32_t
	}

	namespace n_UMutator_Freeplay_TA {
		constexpr auto CarArchetype = 0x68; // ObjectProperty
		constexpr auto TeamArchetypes = 0x70; // TArray<ObjectProperty>
		constexpr auto SoccarGame = 0x80; // ObjectProperty
		constexpr auto PlayerRumbleItems = 0x88; // TArray<FRumbleItemIndex>
		constexpr auto LastResetTime = 0x98; // float
		constexpr auto ResetCooldown = 0x9c; // float
	}

	namespace n_UBallSlomoComponent_TA {
		constexpr auto BallSloMoRadius = 0xa8; // float
		constexpr auto BallSloMoDuration = 0xac; // float
		constexpr auto BallSloMoDilation = 0xb0; // float
		constexpr auto BallSloMoCooldown = 0xb4; // float
		constexpr auto BallSloMoNext = 0xb8; // float
		constexpr auto BallSloMoDiffSpeed = 0xbc; // float
	}

	namespace n_UBinaryUploader_TA {
		constexpr auto Data = 0x60; // TArray<char>
		constexpr auto Headers = 0x70; // ComponentProperty
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UGFxData_BlueprintGarage_TA {
		constexpr auto BlueprintGarageSet = 0x98; // ComponentProperty
		constexpr auto BlueprintPreviewProducts = 0xa0; // TArray<FBlueprintPreviewProduct>
		constexpr auto PendingBlueprintProduct = 0xb0; // ObjectProperty
		constexpr auto SaveData = 0xb8; // ObjectProperty
	}

	namespace n_USeqAct_AkPlaySoundAndSeek {
		constexpr auto SoundCue = 0x160; // ObjectProperty
		constexpr auto StartLocationSeconds = 0x168; // float
		constexpr auto SoundSource = 0x170; // ComponentProperty
	}

	namespace n_U__OnlinePlayerInterfaceEOS__LinkedAccount_CF310906488B42CF1DFA56853F6C2DB7 {
		constexpr auto LocalUserNum = 0x60; // int32_t
	}

	namespace n_UUIDataProvider_SettingsArray {
		constexpr auto Settings = 0x70; // ObjectProperty
		constexpr auto SettingsId = 0x78; // int32_t
		constexpr auto SettingsName = 0x7c; // FName
		constexpr auto ColumnHeaderText = 0x88; // FString
		constexpr auto Values = 0x98; // TArray<FIdToStringMapping>
	}

	namespace n_U__TAsyncResult__PsyNetClientService_X__Copy_D06C54F34E6B706F337285BDAE7E4880 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_UStateObject_X {
		constexpr auto bDebug = 0x60; // uint32_t : 1
	}

	namespace n_URPC_TourStartMatchmaking_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_UNxForceFieldRadialComponent {
		constexpr auto ForceStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto SelfRotationStrength = 0x2d0; // float
		constexpr auto ForceFalloff = 0x2d4; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2d8; // FPointer
	}

	namespace n_AActorTarget_TA {
		constexpr auto TargetClass = 0x268; // FNone*
	}

	namespace n_U__AdHocBrowser_X__CreateErrorDelegate_5F0E6A4E40F78EEF5D8A07B6DBCF23EE {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto ErrorDelegate = 0x68; // DelegateProperty
	}

	namespace n_UParticleModuleUberLTISIVCLILIRSSBLIRR {
		constexpr auto LifeTime = 0x80; // FRawDistributionFloat
		constexpr auto StartSize = 0xa8; // FRawDistributionVector
		constexpr auto StartVelocity = 0xd0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xf8; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x120; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x148; // FRawDistributionFloat
		constexpr auto StartLocation = 0x170; // FRawDistributionVector
		constexpr auto StartRotation = 0x198; // FRawDistributionFloat
		constexpr auto SizeLifeMultiplier = 0x1c0; // FRawDistributionVector
		constexpr auto SizeMultiplyX = 0x1e8; // uint32_t : 1
		constexpr auto SizeMultiplyY = 0x1e8; // uint32_t : 1
		constexpr auto SizeMultiplyZ = 0x1e8; // uint32_t : 1
		constexpr auto StartRotationRate = 0x1f0; // FRawDistributionFloat
	}

	namespace n_UBTProxyType {
		constexpr auto bStatic = 0x60; // uint32_t : 1
	}

	namespace n_UAnimNodeBlendDirectional {
		constexpr auto DirDegreesPerSecond = 0x148; // float
		constexpr auto DirAngle = 0x14c; // float
		constexpr auto SingleAnimAtOrAboveLOD = 0x150; // int32_t
		constexpr auto RotationOffset = 0x154; // FRotator
		constexpr auto bUseAcceleration = 0x160; // uint32_t : 1
	}

	namespace n_UWheel_TA {
		constexpr auto SteerFactor = 0x70; // float
		constexpr auto WheelRadius = 0x74; // float
		constexpr auto SuspensionStiffness = 0x78; // float
		constexpr auto SuspensionDampingCompression = 0x7c; // float
		constexpr auto SuspensionDampingRelaxation = 0x80; // float
		constexpr auto SuspensionTravel = 0x84; // float
		constexpr auto SuspensionMaxRaise = 0x88; // float
		constexpr auto ContactForceDistance = 0x8c; // float
		constexpr auto PushForceConstant = 0x90; // float
		constexpr auto SpinSpeedDecayRate = 0x94; // float
		constexpr auto LatFrictionCurve = 0x98; // FInterpCurveFloat
		constexpr auto LongFrictionCurve = 0xb0; // FInterpCurveFloat
		constexpr auto HandbrakeLatFrictionCurve = 0xc8; // FInterpCurveFloat
		constexpr auto HandbrakeLongFrictionCurve = 0xe0; // FInterpCurveFloat
		constexpr auto WallFrictionCurve = 0xf8; // FInterpCurveFloat
		constexpr auto BoneName = 0x110; // FName
		constexpr auto PhysicsBoneName = 0x118; // FName
		constexpr auto BoneOffset = 0x120; // FVector
		constexpr auto PresetRestPosition = 0x12c; // FVector
		constexpr auto LocalSuspensionRayStart = 0x138; // FVector
		constexpr auto LocalRestPosition = 0x144; // FVector
		constexpr auto VehicleSim = 0x150; // ComponentProperty
		constexpr auto WheelIndex = 0x158; // int32_t
		constexpr auto Contact = 0x160; // FWheelContactData
		constexpr auto bDrawDebug = 0x1b0; // uint32_t : 1
		constexpr auto bHadContact = 0x1b0; // uint32_t : 1
		constexpr auto FrictionCurveInput = 0x1b4; // float
		constexpr auto AerialThrottleToVelocityFactor = 0x1b8; // float
		constexpr auto AerialAccelerationFactor = 0x1bc; // float
		constexpr auto SpinSpeed = 0x1c0; // float
		constexpr auto __EventContactChanged__Delegate = 0x1c8; // DelegateProperty
	}

	namespace n_UGFxModal_RankedReconnect_TA {
		constexpr auto ConnectingTitleString = 0xc8; // FString
		constexpr auto ConnectingBodyString = 0xd8; // FString
		constexpr auto Task = 0xe8; // ObjectProperty
	}

	namespace n_U__PlayerVanity_TA__EquipProduct_C47A341748CFB6BCDAC072A8C3D3A308 {
		constexpr auto ProductSource = 0x60; // FProductHashSource
	}

	namespace n_UApexGenericAsset {
		constexpr auto MApexAsset = 0xb0; // FPointer
		constexpr auto Materials = 0xb8; // TArray<ObjectProperty>
	}

	namespace n_UUIDataStore_InputAlias {
		constexpr auto InputAliases = 0xa0; // TArray<FUIDataStoreInputAlias>
		constexpr auto InputAliasLookupMap = 0xb0; // TMap<None, None>
	}

	namespace n_URPC_ProductsDebugSetEdition_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto EditionID = 0x140; // int32_t
		constexpr auto Product = 0x148; // FOnlineProductData
		constexpr auto OnlineProduct = 0x188; // ObjectProperty
		constexpr auto __EventEditionComplete__Delegate = 0x190; // DelegateProperty
	}

	namespace n_U__TAsyncResult__array_ClubInvite_X__Copy_224286244122D148C0EE94ABF2BB30C0 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_ATrigger {
		constexpr auto CylinderComponent = 0x268; // ComponentProperty
		constexpr auto bRecentlyTriggered = 0x270; // uint32_t : 1
		constexpr auto AITriggerDelay = 0x274; // float
	}

	namespace n_ACarComponent_DoubleJump_Robin_TA {
		constexpr auto RandomPitch = 0x300; // FWaveParams
		constexpr auto RandomYaw = 0x308; // FWaveParams
		constexpr auto RandomRoll = 0x310; // FWaveParams
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x478; // ObjectProperty
		constexpr auto PlayerCamera = 0x480; // ObjectProperty
		constexpr auto CameraClass = 0x488; // FNone*
		constexpr auto bFrozen = 0x490; // uint32_t : 1
		constexpr auto bPressedJump = 0x490; // uint32_t : 1
		constexpr auto bDoubleJump = 0x490; // uint32_t : 1
		constexpr auto bUpdatePosition = 0x490; // uint32_t : 1
		constexpr auto bUpdating = 0x490; // uint32_t : 1
		constexpr auto bCheatFlying = 0x490; // uint32_t : 1
		constexpr auto bCameraPositionLocked = 0x490; // uint32_t : 1
		constexpr auto bShortConnectTimeOut = 0x490; // uint32_t : 1
		constexpr auto bPendingDestroy = 0x490; // uint32_t : 1
		constexpr auto bWasSpeedHack = 0x490; // uint32_t : 1
		constexpr auto bWasSaturated = 0x490; // uint32_t : 1
		constexpr auto bAimingHelp = 0x490; // uint32_t : 1
		constexpr auto bCameraCut = 0x490; // uint32_t : 1
		constexpr auto bClientSimulatingViewTarget = 0x490; // uint32_t : 1
		constexpr auto bHasVoiceHandshakeCompleted = 0x490; // uint32_t : 1
		constexpr auto bIsChatBanned = 0x490; // uint32_t : 1
		constexpr auto bCinematicMode = 0x490; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x490; // uint32_t : 1
		constexpr auto bCinemaDisableInputMove = 0x490; // uint32_t : 1
		constexpr auto bCinemaDisableInputLook = 0x490; // uint32_t : 1
		constexpr auto bIgnoreNetworkMessages = 0x490; // uint32_t : 1
		constexpr auto bShowKismetDrawText = 0x490; // uint32_t : 1
		constexpr auto bReplicateAllPawns = 0x490; // uint32_t : 1
		constexpr auto bIsUsingStreamingVolumes = 0x490; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x490; // uint32_t : 1
		constexpr auto bIsControllerConnected = 0x490; // uint32_t : 1
		constexpr auto bCheckSoundOcclusion = 0x490; // uint32_t : 1
		constexpr auto bDebugCameraAnims = 0x490; // uint32_t : 1
		constexpr auto bBlockCameraAnimsFromOverridingPostProcess = 0x490; // uint32_t : 1
		constexpr auto bLogHearSoundOverflow = 0x490; // uint32_t : 1
		constexpr auto bCheckRelevancyThroughPortals = 0x490; // uint32_t : 1
		constexpr auto bDebugClientAdjustPosition = 0x490; // uint32_t : 1
		constexpr auto MaxResponseTime = 0x494; // float
		constexpr auto WaitDelay = 0x498; // float
		constexpr auto AcknowledgedPawn = 0x4a0; // ObjectProperty
		constexpr auto DoubleClickDir = 0x4a8; // EDoubleClickDir
		constexpr auto bIgnoreMoveInput = 0x4a9; // char
		constexpr auto bIgnoreLookInput = 0x4aa; // char
		constexpr auto bRun = 0x4ab; // char
		constexpr auto bDuck = 0x4ac; // char
		constexpr auto NetPlayerIndex = 0x4ad; // char
		constexpr auto ViewTarget = 0x4b0; // ObjectProperty
		constexpr auto RealViewTarget = 0x4b8; // ObjectProperty
		constexpr auto ControllingDirTrackInst = 0x4c0; // ObjectProperty
		constexpr auto FOVAngle = 0x4c8; // float
		constexpr auto DesiredFOV = 0x4cc; // float
		constexpr auto DefaultFOV = 0x4d0; // float
		constexpr auto LODDistanceFactor = 0x4d4; // float
		constexpr auto TargetViewRotation = 0x4d8; // FRotator
		constexpr auto TargetEyeHeight = 0x4e4; // float
		constexpr auto BlendedTargetViewRotation = 0x4e8; // FRotator
		constexpr auto myHUD = 0x4f8; // ObjectProperty
		constexpr auto mySecondaryHUD = 0x500; // ObjectProperty
		constexpr auto SavedMoveClass = 0x508; // FNone*
		constexpr auto SavedMoves = 0x510; // ObjectProperty
		constexpr auto FreeMoves = 0x518; // ObjectProperty
		constexpr auto PendingMove = 0x520; // ObjectProperty
		constexpr auto LastAckedAccel = 0x528; // FVector
		constexpr auto CurrentTimeStamp = 0x534; // float
		constexpr auto LastUpdateTime = 0x538; // float
		constexpr auto ServerTimeStamp = 0x53c; // float
		constexpr auto TimeMargin = 0x540; // float
		constexpr auto ClientUpdateTime = 0x544; // float
		constexpr auto MaxTimeMargin = 0x548; // float
		constexpr auto LastActiveTime = 0x54c; // float
		constexpr auto DynamicPingThreshold = 0x550; // float
		constexpr auto LastPingUpdate = 0x554; // float
		constexpr auto LastSpeedHackLog = 0x558; // float
		constexpr auto PendingAdjustment = 0x560; // FClientAdjustment
		constexpr auto GroundPitch = 0x598; // int32_t
		constexpr auto CheatManager = 0x5a0; // ObjectProperty
		constexpr auto CheatClass = 0x5a8; // FNone*
		constexpr auto PlayerInput = 0x5b0; // ObjectProperty
		constexpr auto InputClass = 0x5b8; // FNone*
		constexpr auto FailedPathStart = 0x5c0; // FVector
		constexpr auto CylinderComponent = 0x5d0; // ComponentProperty
		constexpr auto ForceFeedbackManagerClassName = 0x5d8; // FString
		constexpr auto ForceFeedbackManager = 0x5e8; // ObjectProperty
		constexpr auto Interactions = 0x5f0; // TArray<ObjectProperty>
		constexpr auto VoiceMuteList = 0x600; // TArray<FUniqueNetId>
		constexpr auto GameplayVoiceMuteList = 0x610; // TArray<FUniqueNetId>
		constexpr auto VoicePacketFilter = 0x620; // TArray<FUniqueNetId>
		constexpr auto ConnectedPeers = 0x630; // TArray<FConnectedPeerInfo>
		constexpr auto BestNextHostPeers = 0x640; // TArray<FUniqueNetId>
		constexpr auto MigratedSearchToJoin = 0x650; // ObjectProperty
		constexpr auto OnlineSub = 0x658; // ObjectProperty
		constexpr auto VoiceInterface = 0x660; // TScriptInterface<Class>
		constexpr auto OnlinePlayerData = 0x670; // ObjectProperty
		constexpr auto InteractDistance = 0x678; // float
		constexpr auto DelayedJoinSessionName = 0x67c; // FName
		constexpr auto InputRequests = 0x688; // TArray<FInputMatchRequest>
		constexpr auto LastBroadcastTime = 0x698; // float
		constexpr auto LastBroadcastString = 0x6a0; // FString [0x4]
		constexpr auto PendingMapChangeLevelNames = 0x6e0; // TArray<FName>
		constexpr auto MyCoverReplicator = 0x6f0; // ObjectProperty
		constexpr auto DebugTextList = 0x6f8; // TArray<FDebugTextInfo>
		constexpr auto SpectatorCameraSpeed = 0x708; // float
		constexpr auto PendingSwapConnection = 0x710; // ObjectProperty
		constexpr auto MinRespawnDelay = 0x718; // float
		constexpr auto MaxConcurrentHearSounds = 0x71c; // int32_t
		constexpr auto HearSoundActiveComponents = 0x720; // TArray<ComponentProperty>
		constexpr auto HearSoundPoolComponents = 0x730; // TArray<ComponentProperty>
		constexpr auto HiddenActors = 0x740; // TArray<ObjectProperty>
		constexpr auto LastSpectatorStateSynchTime = 0x750; // float
		constexpr auto __EventConnectionTimedOut__Delegate = 0x758; // DelegateProperty
		constexpr auto __OnMissingPeersUnregistered__Delegate = 0x770; // DelegateProperty
		constexpr auto __CanUnpause__Delegate = 0x788; // DelegateProperty
		constexpr auto __InputMatchDelegate__Delegate = 0x7a0; // DelegateProperty
	}

	namespace n_UGFxData_ProductAttribute_Expiration_TA {
		constexpr auto ExpirationTime = 0xb0; // QWordProperty
	}

	namespace n_USoundSettingsControllerSave_TA {
		constexpr auto Volume = 0xc8; // float
		constexpr auto SoundMode = 0xcc; // EControllerSoundMode
		constexpr auto __Volume__ChangeNotify = 0xd0; // DelegateProperty
		constexpr auto __SoundMode__ChangeNotify = 0xe8; // DelegateProperty
	}

	namespace n_UProductStat_DistanceDriven_TA {
		constexpr auto OldLocation = 0xb0; // FVector
	}

	namespace n_UInterpTrack {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto CurveEdVTable = 0x68; // FPointer
		constexpr auto SubTracks = 0x70; // TArray<ObjectProperty>
		constexpr auto SubTrackGroups = 0x80; // TArray<FSubTrackGroup>
		constexpr auto SupportedSubTracks = 0x90; // TArray<FSupportedSubTrackInfo>
		constexpr auto TrackInstClass = 0xa0; // FNone*
		constexpr auto ActiveCondition = 0xa8; // ETrackActiveCondition
		constexpr auto TrackTitle = 0xb0; // FString
		constexpr auto bOnePerGroup = 0xc0; // uint32_t : 1
		constexpr auto bDirGroupOnly = 0xc0; // uint32_t : 1
		constexpr auto bDisableTrack = 0xc0; // uint32_t : 1
		constexpr auto bIsAnimControlTrack = 0xc0; // uint32_t : 1
		constexpr auto bSubTrackOnly = 0xc0; // uint32_t : 1
		constexpr auto bVisible = 0xc0; // uint32_t : 1
		constexpr auto bIsSelected = 0xc0; // uint32_t : 1
		constexpr auto bIsRecording = 0xc0; // uint32_t : 1
		constexpr auto bIsCollapsed = 0xc0; // uint32_t : 1
	}

	namespace n_UCountdownObject_TA {
		constexpr auto CountTime = 0x90; // int32_t
		constexpr auto __EventCountChange__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UOnlineGameReservations_X {
		constexpr auto ExtraMapLoadTime = 0x98; // float
		constexpr auto WaitForReservationsTimeout = 0x9c; // float
		constexpr auto InitialReservationTimeoutSeconds = 0xa0; // float
		constexpr auto InitialMigrationTimeoutSeconds = 0xa4; // float
		constexpr auto bAllowPrivateMatchCrossPlayDisable = 0xa8; // uint32_t : 1
		constexpr auto bSkipReservationCheck = 0xa8; // uint32_t : 1
		constexpr auto bSinglePlayerMatchmaking = 0xa8; // uint32_t : 1
		constexpr auto bServerTraveling = 0xa8; // uint32_t : 1
		constexpr auto bScrambleTeams = 0xa8; // uint32_t : 1
		constexpr auto bMatchStarted = 0xa8; // uint32_t : 1
		constexpr auto bLockTeams = 0xa8; // uint32_t : 1
		constexpr auto bIsBotMatch = 0xa8; // uint32_t : 1
		constexpr auto bMigrationInProgress = 0xa8; // uint32_t : 1
		constexpr auto Beacon = 0xb0; // ComponentProperty
		constexpr auto PingBeacon = 0xb8; // ComponentProperty
		constexpr auto Players = 0xc0; // TArray<FReservationData>
		constexpr auto TeamPairHistories = 0xd0; // TArray<FTeamPairHistory>
		constexpr auto BotNames = 0xe0; // TArray<FString>
		constexpr auto Crossplay = 0xf0; // ObjectProperty
		constexpr auto MapPrefsConfig = 0xf8; // ObjectProperty
		constexpr auto BeaconConfig = 0x100; // ObjectProperty
		constexpr auto PendingReservations = 0x108; // TArray<FPendingReservation>
		constexpr auto GetClubTask = 0x118; // ObjectProperty
		constexpr auto RankedMatchReservationID = 0x120; // FString
		constexpr auto RankedMatchPushedPlayerIDs = 0x130; // TArray<FUniqueNetId>
		constexpr auto Clubs = 0x140; // ObjectProperty
		constexpr auto JoinName = 0x148; // FString
		constexpr auto JoinPassword = 0x158; // FString
		constexpr auto __EventReservationsUpdated__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventMigrationJoinOccurred__Delegate = 0x180; // DelegateProperty
		constexpr auto __bMatchStarted__ChangeNotify = 0x198; // DelegateProperty
	}

	namespace n_UOnlineGamePlayerTitles_TA {
		constexpr auto PlayerTitleCacheTime = 0x98; // float
		constexpr auto PlayerCache = 0xa0; // TArray<FCachedPlayerData>
		constexpr auto TitleConfig = 0xb0; // ObjectProperty
		constexpr auto __EventPlayerTitleUpdated__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventPlayerTitlesChanged__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_UDownloadableContentEnumerator {
		constexpr auto DLCBundles = 0x60; // TArray<FOnlineContent>
		constexpr auto DLCRootDir = 0x70; // FString
		constexpr auto FindDLCDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto __OnFindDLCComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UMaterialExpressionStaticSwitchParameter {
		constexpr auto A = 0xf0; // FExpressionInput
		constexpr auto B = 0x128; // FExpressionInput
	}

	namespace n_ATriggerStreamingLevel {
		constexpr auto Levels = 0x278; // TArray<FLevelStreamingData>
	}

	namespace n_UInterpTrackSkelControlScale {
		constexpr auto SkelControlName = 0xe8; // FName
	}

	namespace n_URPC_XPRequest_TA {
		constexpr auto XPInfoResponse = 0xe8; // FXPInfo
		constexpr auto PlayerID = 0x108; // FUniqueNetId
	}

	namespace n_AAkEnvironmentVolume {
		constexpr auto Environment = 0x2a8; // FAkEnvironment
	}

	namespace n_USceneCaptureCubeMapComponent {
		constexpr auto TextureTarget = 0xf8; // ObjectProperty
		constexpr auto NearPlane = 0x100; // float
		constexpr auto FarPlane = 0x104; // float
		constexpr auto WorldLocation = 0x108; // FVector
	}

	namespace n_URPC_CheckPsyTag_X {
		constexpr auto PsyTagName = 0xe8; // FString
		constexpr auto PsyTag = 0xf8; // FPsyTag
		constexpr auto bIsValid = 0x110; // uint32_t : 1
		constexpr auto bIsProfane = 0x110; // uint32_t : 1
		constexpr auto bIsAvailable = 0x110; // uint32_t : 1
		constexpr auto bIsUpdated = 0x110; // uint32_t : 1
		constexpr auto InvalidCharacters = 0x118; // TArray<FString>
		constexpr auto SuggestedNames = 0x128; // TArray<FString>
		constexpr auto CheckTask = 0x138; // ObjectProperty
	}

	namespace n_UActorFactoryFracturedStaticMesh {
		constexpr auto FracturedStaticMesh = 0xa0; // ObjectProperty
		constexpr auto DrawScale3D = 0xa8; // FVector
	}

	namespace n_UPrivilegeCheck_X {
		constexpr auto ControllerIDs = 0x60; // TArray<int32_t>
		constexpr auto bHasRestriction = 0x70; // uint32_t : 1
		constexpr auto bFinished = 0x70; // uint32_t : 1
		constexpr auto FailReason = 0x78; // ObjectProperty
		constexpr auto PendingPrivileges = 0x80; // TArray<EFeaturePrivilege>
		constexpr auto FailedControllerID = 0x90; // int32_t
		constexpr auto FailedPrivilege = 0x94; // EFeaturePrivilege
		constexpr auto FailedPrivilegeLevel = 0x95; // EFeaturePrivilegeLevel
		constexpr auto PendingControllerIDs = 0x98; // TArray<int32_t>
		constexpr auto CheckDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto EventFinished = 0xb8; // DelegateProperty
		constexpr auto __CheckDelegate__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_URPC_RejectClubInvite_X {
		constexpr auto ClubID = 0xe8; // int32_t
	}

	namespace n_UPartyMessage_GetPlatformPartyResponse_X {
		constexpr auto PlatformPartyID = 0xa8; // FUniqueLobbyId
		constexpr auto OriginalSender = 0xb8; // FUniqueNetId
	}

	namespace n_UCollisionTestComponent_TA {
		constexpr auto LineStart = 0xa0; // ObjectProperty
		constexpr auto LineEnd = 0xa8; // ObjectProperty
		constexpr auto ArchetypeToSpawn = 0xb0; // ObjectProperty
		constexpr auto CachedCenter = 0xb8; // FVector
		constexpr auto CachedStart = 0xc4; // FVector
		constexpr auto CachedEnd = 0xd0; // FVector
		constexpr auto Speed = 0xdc; // float
		constexpr auto Step = 0xe0; // float
		constexpr auto Time = 0xe4; // float
		constexpr auto bEnabled = 0xe8; // uint32_t : 1
	}

	namespace n_ANxForceFieldRadial {
		constexpr auto Shape = 0x2c0; // ObjectProperty
		constexpr auto DrawComponent = 0x2c8; // ComponentProperty
		constexpr auto ForceStrength = 0x2d0; // float
		constexpr auto ForceRadius = 0x2d4; // float
		constexpr auto SelfRotationStrength = 0x2d8; // float
		constexpr auto ForceFalloff = 0x2dc; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2e0; // FPointer
	}

	namespace n_UMatchType_Tournament_TA {
		constexpr auto DedicatedServer = 0xa8; // ObjectProperty
		constexpr auto TourServer = 0xb0; // ObjectProperty
		constexpr auto TournamentServerConfig = 0xb8; // ObjectProperty
		constexpr auto MatchSeries = 0xc0; // ObjectProperty
		constexpr auto PlaylistName = 0xc8; // FName
	}

	namespace n_UOnlineGameAccount_X {
		constexpr auto PrimaryPlayer = 0x98; // ObjectProperty
		constexpr auto UpdateCurrentGameTaskTimer = 0xa0; // float
		constexpr auto CurrentPlaylistId = 0xa4; // int32_t
		constexpr auto __EventPrimaryPlayerIdChanged__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventCurrentPlaylistSet__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_USeqEvent_GameEventStateChanged_TA {
		constexpr auto StateName = 0x180; // FString
	}

	namespace n_UTourConfig_TA {
		constexpr auto bEnableUI = 0x78; // uint32_t : 1
		constexpr auto bNextMatchPushNotificationsEnabled = 0x78; // uint32_t : 1
		constexpr auto bEnableRewards = 0x78; // uint32_t : 1
		constexpr auto bHideBetaUI = 0x78; // uint32_t : 1
		constexpr auto bAllowTeamMemberCheckIns = 0x78; // uint32_t : 1
		constexpr auto CheckInWindowMinutes = 0x7c; // int32_t
		constexpr auto CreateFutureMinutes = 0x80; // int32_t
		constexpr auto ActivityWindowMinutes = 0x84; // int32_t
		constexpr auto NextMatchPollIntervalSeconds = 0x88; // float
		constexpr auto NextMatchPollIntervalSecondsPushEnabled = 0x8c; // float
		constexpr auto FirstMatchRequestOffsetMin = 0x90; // float
		constexpr auto FirstMatchRequestOffsetMax = 0x94; // float
		constexpr auto PausedRpcDelaySeconds = 0x98; // float
		constexpr auto CreateFutureMaxDays = 0x9c; // int32_t
		constexpr auto BracketCacheSeconds = 0xa0; // float
		constexpr auto AllowedTeamSizes = 0xa8; // TArray<int32_t>
		constexpr auto AllowedTeamSizesCSV = 0xb8; // FString
		constexpr auto MaxBracketSize = 0xc8; // int32_t
		constexpr auto TeamSizeToPlaylistMap = 0xd0; // TArray<FName>
		constexpr auto GameModeToPlaylistMap = 0xe0; // TArray<FName>
		constexpr auto MaxJoinServerAttempts = 0xf0; // char
		constexpr auto JoinServerAttemptsMessagingLimit = 0xf1; // char
		constexpr auto MatchmakingDelay = 0xf4; // float
		constexpr auto MinCheckInDelaySeconds = 0xf8; // int32_t
		constexpr auto MaxCheckInDelaySeconds = 0xfc; // int32_t
		constexpr auto CheckInDelaySeconds = 0x100; // int32_t
		constexpr auto PlaylistsWithDynamicMapsets = 0x108; // TArray<FName>
	}

	namespace n_U__SaveDataVersions_TA__UpdateFavoriteHashIDs_0C0417A84037E262F3E1C68448D5AF8C {
		constexpr auto Id = 0x60; // int32_t
	}

	namespace n_UDemolishedCar_TA {
		constexpr auto Data = 0x60; // FDemolishData
	}

	namespace n_U__GFxData_ProductFilter_TA__SetExclusiveAttributeTypeSelected_A5D3B51D483D95336B8962B9C5D6D2ED {
		constexpr auto Typename = 0x60; // FName
	}

	namespace n_ANxForceFieldSpawnable {
		constexpr auto ForceFieldComponent = 0x268; // ComponentProperty
	}

	namespace n_UProductAttribute_SpecialEdition_TA {
		constexpr auto EditionID = 0x80; // int32_t
	}

	namespace n_U__ProductAttribute_Painted_TA__ApplyToSetParameter_4910E97042B895C3CBD8CBB8F9567C92 {
		constexpr auto Target = 0x60; // TScriptInterface<Class>
		constexpr auto PaintSettings = 0x70; // ObjectProperty
		constexpr auto Paint = 0x78; // ObjectProperty
	}

	namespace n_UPsyNetService_CreateExternalMatch_X {
		constexpr auto Playlist = 0xb0; // int32_t
		constexpr auto Settings = 0xb8; // FTourServerSettings
		constexpr auto MatchInfo = 0x1a0; // FFaceItReservationMatchInfo
	}

	namespace n_UGFxData_TourCreate_TA {
		constexpr auto PrivateNoPassword = 0x1a0; // FString
		constexpr auto StartTimeTooSoon = 0x1b0; // FString
		constexpr auto MaxBracketSize = 0x1c0; // int32_t
		constexpr auto RankMin = 0x1c4; // int32_t
		constexpr auto RankMax = 0x1c8; // int32_t
		constexpr auto SeriesLength = 0x1cc; // int32_t
		constexpr auto FinalSeriesLength = 0x1d0; // int32_t
		constexpr auto Rewards = 0x1d8; // TArray<FGFxTournamentReward>
		constexpr auto SeedingType = 0x1e8; // ETourSeedType
		constexpr auto TieBreaker = 0x1e9; // EMatchTieBreaker
		constexpr auto OnlineSub = 0x1f0; // ObjectProperty
		constexpr auto Tournaments = 0x1f8; // ObjectProperty
		constexpr auto Config = 0x200; // ObjectProperty
		constexpr auto Settings = 0x208; // ObjectProperty
		constexpr auto TournamentSave = 0x210; // ObjectProperty
		constexpr auto DefaultMapSet = 0x218; // ObjectProperty
		constexpr auto __EventTournamentCreated__Delegate = 0x220; // DelegateProperty
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto VfTable_IISetParameter = 0x318; // FPointer
		constexpr auto FontParameterValues = 0x320; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x330; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0x340; // TArray<FTextureParameterValue>
		constexpr auto VectorParameterValues = 0x350; // TArray<FVectorParameterValue>
	}

	namespace n_UGFxData_WalletCurrency_TA {
		constexpr auto CurrencyID = 0x98; // int32_t
		constexpr auto Type = 0x9c; // ECurrency
		constexpr auto SmallImage = 0xa0; // ObjectProperty
		constexpr auto LargeImage = 0xa8; // ObjectProperty
		constexpr auto Amount = 0xb0; // int32_t
		constexpr auto LocalizedName = 0xb8; // FString
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0xc0; // ObjectProperty
		constexpr auto FontTexturePage = 0xc8; // int32_t
	}

	namespace n_UActorFactoryActor {
		constexpr auto ActorClass = 0xa0; // FNone*
	}

	namespace n_UPBRuleNodeSubRuleset {
		constexpr auto SubRuleset = 0x98; // ObjectProperty
	}

	namespace n_URPC_ReportLowFPS_X {
		constexpr auto IP = 0xe8; // FString
		constexpr auto MachineId = 0xf8; // int32_t
		constexpr auto ServerId = 0x100; // QWordProperty
		constexpr auto ServerName = 0x108; // FString
		constexpr auto NumHumans = 0x118; // int32_t
		constexpr auto NumBots = 0x11c; // int32_t
	}

	namespace n_UServerToServerMessage_X {
		constexpr auto ServerId = 0x60; // QWordProperty
	}

	namespace n_AForceVolume_TA {
		constexpr auto VfTable_IITickNotify_TA = 0x2a8; // FPointer
		constexpr auto ForceDirection = 0x2b0; // EForceDirection
		constexpr auto ConstantForceMode = 0x2b1; // EForceMode
		constexpr auto EnterForceMode = 0x2b2; // EForceMode
		constexpr auto ConstantForce = 0x2b4; // float
		constexpr auto EnterForce = 0x2b8; // float
		constexpr auto CustomForceDirection = 0x2c0; // ObjectProperty
	}

	namespace n_UCrowdSoundManager_TA {
		constexpr auto Settings = 0xa8; // ObjectProperty
		constexpr auto CrowdActorManager = 0xb0; // ObjectProperty
		constexpr auto Sounds = 0xb8; // ObjectProperty
		constexpr auto bInitializedMods = 0xc0; // uint32_t : 1
		constexpr auto bFastBreakInProgress = 0xc0; // uint32_t : 1
		constexpr auto bShotInProgress = 0xc0; // uint32_t : 1
		constexpr auto bAerialInProgress = 0xc0; // uint32_t : 1
		constexpr auto bIn0Seconds = 0xc0; // uint32_t : 1
		constexpr auto bWaitingForKickoffTouch = 0xc0; // uint32_t : 1
		constexpr auto bLowEnergy = 0xc0; // uint32_t : 1
		constexpr auto bWaitingForTenseClear = 0xc0; // uint32_t : 1
		constexpr auto DefenseZoneTime = 0xc4; // float
		constexpr auto LastBallHitNoiseTime = 0xc8; // float
		constexpr auto LastBallHitNoiseLevel = 0xcc; // int32_t
		constexpr auto TimeSinceLastGoal = 0xd0; // float
		constexpr auto LeadChanges = 0xd4; // int32_t
		constexpr auto OpenGoalTime = 0xd8; // float
		constexpr auto NearGoalTime = 0xdc; // float
		constexpr auto FastBreakTime = 0xe0; // float
		constexpr auto ShotGoal = 0xe8; // ComponentProperty
		constexpr auto ShotMaxScorability = 0xf0; // float
		constexpr auto LastShotTime = 0xf4; // float
		constexpr auto AerialDuration = 0xf8; // float
		constexpr auto LastAerialTime = 0xfc; // float
		constexpr auto DebugLastExcitementSoundValue = 0x100; // FString
		constexpr auto DebugLastExcitementSoundTime = 0x110; // float
		constexpr auto TimeSince0Seconds = 0x114; // float
		constexpr auto Mod0Seconds = 0x118; // ObjectProperty
		constexpr auto CurrentLowEnergyDuration = 0x120; // float
		constexpr auto ChantLowEnergyDuration = 0x124; // float
		constexpr auto TenseNearGoalTime = 0x128; // float
		constexpr auto LastScoreSeparation = 0x12c; // int32_t
		constexpr auto ScoreSeparationTrend = 0x130; // int32_t
		constexpr auto LastExcitementState = 0x134; // FName
		constexpr auto LastTensionState = 0x13c; // FName
		constexpr auto LastScoreState = 0x144; // FName
		constexpr auto AprilCrowdOverridePath = 0x150; // FString
		constexpr auto AprilCrowdLocation = 0x160; // FVector
		constexpr auto __GetSound__Delegate = 0x170; // DelegateProperty
	}

	namespace n_URPC_AutoTour_GetCycleData_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto CycleID = 0x130; // QWordProperty
		constexpr auto CycleEndTime = 0x138; // QWordProperty
		constexpr auto WeekID = 0x140; // int32_t
		constexpr auto WeekEndTime = 0x148; // QWordProperty
		constexpr auto WeeklyCurrencies = 0x150; // TArray<FShopCurrencyInfo>
		constexpr auto Weeks = 0x160; // TArray<FTournamentWeek>
		constexpr auto MaxTierScores = 0x170; // TArray<int32_t>
	}

	namespace n_URPC_StartMatchmaking_X {
		constexpr auto Regions = 0xe8; // TArray<FString>
		constexpr auto Playlists = 0xf8; // TArray<int32_t>
		constexpr auto SecondsSearching = 0x108; // int32_t
		constexpr auto CurrentServerId = 0x110; // QWordProperty
		constexpr auto bDisableCrossPlay = 0x118; // uint32_t : 1
		constexpr auto PartyID = 0x120; // FString
		constexpr auto PartyMembers = 0x130; // TArray<FUniqueNetId>
		constexpr auto BannedSecondsRemaining = 0x140; // float
	}

	namespace n_U__MtxConfig_TA__CreateModalForError_9AEDF7FF403B093ECD0A009CDBC24B08 {
		constexpr auto Error = 0x60; // ObjectProperty
	}

	namespace n_UTexture {
		constexpr auto SRGB = 0x60; // uint32_t : 1
		constexpr auto RGBE = 0x60; // uint32_t : 1
		constexpr auto bIsSourceArtUncompressed = 0x60; // uint32_t : 1
		constexpr auto CompressionNoAlpha = 0x60; // uint32_t : 1
		constexpr auto CompressionNone = 0x60; // uint32_t : 1
		constexpr auto CompressionNoMipmaps = 0x60; // uint32_t : 1
		constexpr auto CompressionFullDynamicRange = 0x60; // uint32_t : 1
		constexpr auto DeferCompression = 0x60; // uint32_t : 1
		constexpr auto NeverStream = 0x60; // uint32_t : 1
		constexpr auto bDitherMipMapAlpha = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderR = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderG = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderB = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderA = 0x60; // uint32_t : 1
		constexpr auto bNoTiling = 0x60; // uint32_t : 1
		constexpr auto bForcePVRTC4 = 0x60; // uint32_t : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // uint32_t : 1
		constexpr auto bUseCinematicMipLevels = 0x60; // uint32_t : 1
		constexpr auto UnpackMin = 0x64; // float [0x4]
		constexpr auto UnpackMax = 0x74; // float [0x4]
		constexpr auto SourceArt = 0x88; // FUntypedBulkData_Mirror
		constexpr auto CompressionSettings = 0xe0; // TextureCompressionSettings
		constexpr auto Filter = 0xe1; // TextureFilter
		constexpr auto LODGroup = 0xe2; // TextureGroup
		constexpr auto CachedLODGroup = 0xe3; // TextureGroup
		constexpr auto MipGenSettings = 0xe4; // TextureMipGenSettings
		constexpr auto LODBias = 0xe8; // int32_t
		constexpr auto CachedCombinedLODBias = 0xec; // int32_t
		constexpr auto NumCinematicMipLevels = 0xf0; // int32_t
		constexpr auto SourceFilePath = 0xf8; // FString
		constexpr auto SourceFileTimestamp = 0x108; // FString
		constexpr auto Resource = 0x118; // FPointer
		constexpr auto LightingGuid = 0x120; // FGuid
		constexpr auto AdjustBrightness = 0x130; // float
		constexpr auto AdjustBrightnessCurve = 0x134; // float
		constexpr auto AdjustVibrance = 0x138; // float
		constexpr auto AdjustSaturation = 0x13c; // float
		constexpr auto AdjustRGBCurve = 0x140; // float
		constexpr auto AdjustHue = 0x144; // float
		constexpr auto InternalFormatLODBias = 0x148; // int32_t
		constexpr auto RequiredCreationFlags = 0x14c; // int32_t
	}

	namespace n_UPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x70; // float
		constexpr auto MinDistance = 0x74; // float
		constexpr auto bSoft = 0x78; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x78; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x7c; // float
		constexpr auto EnvelopeTestPoint = 0x80; // FVector
	}

	namespace n_ASplineActor {
		constexpr auto Connections = 0x268; // TArray<FSplineConnection>
		constexpr auto SplineActorTangent = 0x278; // FVector
		constexpr auto SplineColor = 0x284; // FColor
		constexpr auto bDisableDestination = 0x288; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x288; // uint32_t : 1
		constexpr auto LinksFrom = 0x290; // TArray<ObjectProperty>
		constexpr auto nextOrdered = 0x2a0; // ObjectProperty
		constexpr auto prevOrdered = 0x2a8; // ObjectProperty
		constexpr auto previousPath = 0x2b0; // ObjectProperty
		constexpr auto bestPathWeight = 0x2b8; // int32_t
		constexpr auto visitedWeight = 0x2bc; // int32_t
		constexpr auto SplineVelocityOverTime = 0x2c0; // FInterpCurveFloat
	}

	namespace n_UBTNode {
		constexpr auto Decorators = 0x60; // TArray<ObjectProperty>
		constexpr auto bDebugPause = 0x70; // uint32_t : 1
		constexpr auto bDebug = 0x70; // uint32_t : 1
		constexpr auto AI = 0x78; // ObjectProperty
	}

	namespace n_UOnlineProductStore_TA {
		constexpr auto Sets = 0x70; // TArray<ComponentProperty>
		constexpr auto CurrentTempInstanceID = 0x80; // FProductInstanceID
	}

	namespace n_UNameplateComponentCar_TA {
		constexpr auto Car = 0xe0; // ObjectProperty
	}

	namespace n_USeqAct_ControlMovieTexture {
		constexpr auto MovieTexture = 0x160; // ObjectProperty
	}

	namespace n_URPCBatch_X {
		constexpr auto SendTime = 0x60; // float
		constexpr auto Requests = 0x68; // TArray<FPendingRPC>
		constexpr auto Responses = 0x78; // TArray<FRPCResponse>
		constexpr auto Error = 0x88; // FRPCError
		constexpr auto Result = 0xa8; // ObjectProperty
		constexpr auto RequestMessage = 0xb0; // ObjectProperty
		constexpr auto ResponseMessage = 0xb8; // ObjectProperty
		constexpr auto ResponseError = 0xc0; // ObjectProperty
		constexpr auto bUseRpcV2 = 0xc8; // uint32_t : 1
	}

	namespace n_UParticleModuleColorScaleOverDensity {
		constexpr auto ColorScaleOverDensity = 0x70; // FRawDistributionVector
		constexpr auto AlphaScaleOverDensity = 0x98; // FRawDistributionFloat
	}

	namespace n_URegionPing_X {
		constexpr auto Region = 0x60; // ObjectProperty
		constexpr auto RegionID = 0x68; // FString
		constexpr auto Address = 0x78; // FName
		constexpr auto Connection = 0x80; // ObjectProperty
		constexpr auto PingSendTime = 0x88; // float
		constexpr auto Ping = 0x8c; // float
		constexpr auto AvgPing = 0x90; // float
		constexpr auto PingCount = 0x94; // int32_t
		constexpr auto PingResult = 0x98; // RegionPingResult
	}

	namespace n_UBTC_Landing {
		constexpr auto LandTimeLessThan = 0x218; // float
		constexpr auto LandTimeGreaterThan = 0x21c; // float
	}

	namespace n_UBoxCollisionShape_X {
		constexpr auto StartSize = 0x80; // FVector
		constexpr auto EndSize = 0x8c; // FVector
	}

	namespace n_UOnlinePlayerAuthentication_X {
		constexpr auto LoginRPC = 0x98; // ObjectProperty
		constexpr auto LoginSuccessRPC = 0xa0; // ObjectProperty
		constexpr auto LoggedInPlayerId = 0xa8; // FUniqueNetId
		constexpr auto LoggedInPlayerName = 0xf0; // FString
		constexpr auto PlayerUID = 0x100; // FString
		constexpr auto Platform = 0x110; // FString
		constexpr auto bLoggedIn = 0x120; // uint32_t : 1
		constexpr auto bPlatformTokenAuthenticationFailed = 0x120; // uint32_t : 1
		constexpr auto bSkipAuth = 0x120; // uint32_t : 1
		constexpr auto bLastChanceAuthBan = 0x120; // uint32_t : 1
		constexpr auto AuthLoginError = 0x128; // ObjectProperty
		constexpr auto BanMessage = 0x130; // ObjectProperty
		constexpr auto PsyTagInfo = 0x138; // ComponentProperty
		constexpr auto EncryptedAuthTicket = 0x140; // FString
		constexpr auto EpicAuthTicket = 0x150; // FString
		constexpr auto AuthRequestFailureMax = 0x160; // int32_t
		constexpr auto AuthRequestRetryTime = 0x164; // int32_t
		constexpr auto AuthRequestFailureCount = 0x168; // int32_t
		constexpr auto AuthenticatedName = 0x170; // FString
		constexpr auto EpicLogin = 0x180; // ObjectProperty
		constexpr auto PrimaryAccountNotSetError = 0x188; // ObjectProperty
		constexpr auto __EventLoginChanged__Delegate = 0x190; // DelegateProperty
		constexpr auto __EventBanned__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __EventLoginResult__Delegate = 0x1c0; // DelegateProperty
	}

	namespace n_UTickEventBase {
		constexpr auto DeltaSeconds = 0x60; // float
		constexpr auto TimeDilation = 0x64; // float
		constexpr auto Count = 0x68; // int32_t
	}

	namespace n_UPerCon_X {
		constexpr auto Config = 0x60; // ObjectProperty
		constexpr auto URL = 0x68; // FString
		constexpr auto Status = 0x78; // EPerConStatus
		constexpr auto __EventStatusChanged__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UStringObjectMap {
		constexpr auto Map = 0x70; // FMap_Mirror
	}

	namespace n_ASpecialPickup_TA {
		constexpr auto PickupName = 0x2e0; // FString
		constexpr auto bHudIgnoreUseTime = 0x2f0; // uint32_t : 1
		constexpr auto bHasActivated = 0x2f0; // uint32_t : 1
		constexpr auto bIsActive = 0x2f0; // uint32_t : 1
		constexpr auto ActiveIcon = 0x2f8; // ObjectProperty
		constexpr auto InactiveIcon = 0x300; // ObjectProperty
		constexpr auto ActivationDuration = 0x308; // float
		constexpr auto PickupFXArchetype = 0x310; // ObjectProperty
		constexpr auto BodyReplacements = 0x318; // TArray<FPickupReplacement>
		constexpr auto ShakeComponentArchetype = 0x328; // ComponentProperty
		constexpr auto ActivateSFX = 0x330; // ObjectProperty
		constexpr auto LocalActivateSFX = 0x338; // ObjectProperty
		constexpr auto PickupFX = 0x340; // ObjectProperty
		constexpr auto ShakeComp = 0x348; // ComponentProperty
		constexpr auto PickupSlot = 0x350; // int32_t
		constexpr auto CooldownSeconds = 0x354; // int32_t
		constexpr auto __EventActivated__Delegate = 0x358; // DelegateProperty
		constexpr auto __EventDeactivated__Delegate = 0x370; // DelegateProperty
	}

	namespace n_UProductOverride_MaterialParameter_TA {
		constexpr auto CopyFromMIC = 0x60; // ObjectProperty
		constexpr auto MaterialName = 0x68; // FName
		constexpr auto FontParameterValues = 0x70; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x80; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0x90; // TArray<FTextureParameterValue>
		constexpr auto VectorParameterValues = 0xa0; // TArray<FVectorParameterValue>
	}

	namespace n_UCarTrajectoryComponent_TA {
		constexpr auto bEnabled = 0xa8; // uint32_t : 1
		constexpr auto Points = 0xb0; // TArray<FVector>
		constexpr auto TotalDrawPoints = 0xc0; // int32_t
		constexpr auto FramesBetweenPoints = 0xc4; // int32_t
		constexpr auto LastAngle = 0xc8; // float
		constexpr auto VelocityRot = 0xcc; // FRotator
		constexpr auto CurrentVelocity = 0xd8; // FVector
		constexpr auto LastRotateAxis = 0xe4; // FVector
		constexpr auto LastVelocity = 0xf0; // FVector
	}

	namespace n_UCheatManager_TA {
		constexpr auto InputRecorder = 0xb0; // ObjectProperty
		constexpr auto DebugColor = 0xb8; // FColor
		constexpr auto TestClubColor = 0xbc; // int32_t
		constexpr auto BodyHandlingTestTime = 0xc0; // float
		constexpr auto BodyHandlingTestIndex = 0xc4; // int32_t
		constexpr auto TickNotifier = 0xc8; // ObjectProperty
	}

	namespace n_UGFxData_Community_TA {
		constexpr auto GFxBlogTiles = 0x98; // TArray<ObjectProperty>
		constexpr auto Config = 0xa8; // ObjectProperty
		constexpr auto MotD = 0xb0; // FString
		constexpr auto Cache = 0xc0; // ObjectProperty
	}

	namespace n_UCrumbTrailSave_TA {
		constexpr auto CompletedTrails = 0xc8; // TArray<FName>
		constexpr auto ActiveTrails = 0xd8; // TArray<FName>
	}

	namespace n_UProductTransactions_TA {
		constexpr auto InventoryProductSet = 0x70; // ComponentProperty
		constexpr auto TransactionProductSet = 0x78; // ComponentProperty
	}

	namespace n_UOnlinePlayerStorageConfig_X {
		constexpr auto QueueBatchDelay = 0x78; // float
	}

	namespace n_APlayerController_TA {
		constexpr auto Car = 0x968; // ObjectProperty
		constexpr auto PRI = 0x970; // ObjectProperty
		constexpr auto VehicleInput = 0x978; // FVehicleInputs
		constexpr auto bReceivedServerShutdownMessage = 0x998; // uint32_t : 1
		constexpr auto bUseDebugInputs = 0x998; // uint32_t : 1
		constexpr auto bJumpPressed = 0x998; // uint32_t : 1
		constexpr auto bBoostPressed = 0x998; // uint32_t : 1
		constexpr auto bHandbrakePressed = 0x998; // uint32_t : 1
		constexpr auto bHasPitchedOrRolled = 0x998; // uint32_t : 1
		constexpr auto bAirPitchSafetyEnabled = 0x998; // uint32_t : 1
		constexpr auto bAllowAsymmetricalMute = 0x998; // uint32_t : 1
		constexpr auto bResetCamera = 0x998; // uint32_t : 1
		constexpr auto LoginURL = 0x9a0; // FString
		constexpr auto VoiceFilter = 0x9b0; // EVoiceFilter
		constexpr auto ChatFilter = 0x9b1; // EVoiceFilter
		constexpr auto ChatSpam = 0x9b4; // FChatSpamData
		constexpr auto ChatSpamHarsh = 0x9cc; // FChatSpamData
		constexpr auto LightBar = 0x9e8; // ComponentProperty
		constexpr auto MusicComponent = 0x9f0; // ComponentProperty
		constexpr auto AudioPriorityComponent = 0x9f8; // ComponentProperty
		constexpr auto AudioMixStateComponent = 0xa00; // ComponentProperty
		constexpr auto FollowTarget = 0xa08; // ObjectProperty
		constexpr auto SpectatorCameraArchetype = 0xa10; // ObjectProperty
		constexpr auto SpectatorHUDArchetype = 0xa18; // ObjectProperty
		constexpr auto SpectatorInputClass = 0xa20; // FNone*
		constexpr auto EditorCameraArchetype = 0xa28; // ObjectProperty
		constexpr auto EditorHUDArchetype = 0xa30; // ObjectProperty
		constexpr auto EditorInputClass = 0xa38; // FNone*
		constexpr auto MoveActor = 0xa40; // TScriptInterface<Class>
		constexpr auto MoveActorGrabOffset = 0xa50; // FVector
		constexpr auto MoveActorGrabIncrement = 0xa5c; // float
		constexpr auto MinMoveActorGrabDistance = 0xa60; // float
		constexpr auto MouseIncrementSpeed = 0xa64; // float
		constexpr auto BallVelocityIncrementAmount = 0xa68; // float
		constexpr auto BallVelocityIncrementFireCount = 0xa6c; // int32_t
		constexpr auto BallVelocityIncrementFireCountMax = 0xa70; // float
		constexpr auto BallVelocityIncrementSpeedDefault = 0xa74; // float
		constexpr auto BallVelocityIncrementSpeedMax = 0xa78; // float
		constexpr auto CrosshairTraceDistance = 0xa7c; // float
		constexpr auto TracedCrosshairActor = 0xa80; // ObjectProperty
		constexpr auto CrosshairTraceExtents = 0xa88; // TArray<FCrosshairExtentInfo>
		constexpr auto RotatedActor = 0xa98; // TScriptInterface<Class>
		constexpr auto RotateActorCameraLocationOffset = 0xaa8; // FVector
		constexpr auto RotateActorCameraRotationOffset = 0xab4; // FVector
		constexpr auto RotateActorCameraSide = 0xac0; // int32_t
		constexpr auto DesiredCameraSide = 0xac4; // float
		constexpr auto PawnTypeChangedTime = 0xac8; // float
		constexpr auto SelectedSpawnArchetype = 0xacc; // int32_t
		constexpr auto DebugInputs = 0xad0; // FVehicleInputs
		constexpr auto MinClientInputRate = 0xaf0; // int32_t
		constexpr auto MedianClientInputRate = 0xaf4; // int32_t
		constexpr auto MaxClientInputRate = 0xaf8; // int32_t
		constexpr auto ConfiguredClientInputRate = 0xafc; // int32_t
		constexpr auto TimeSinceLastMovePacket = 0xb00; // float
		constexpr auto TimeLastReplicatedMovePacket = 0xb04; // float
		constexpr auto PlatformMetrics = 0xb08; // ComponentProperty
		constexpr auto MouseXDeadZone = 0xb10; // float
		constexpr auto MouseYDeadZone = 0xb14; // float
		constexpr auto MouseXDeadZoneAir = 0xb18; // float
		constexpr auto MouseYDeadZoneAir = 0xb1c; // float
		constexpr auto LastInputs = 0xb20; // FVehicleInputs
		constexpr auto PendingViewPRI = 0xb40; // ObjectProperty
		constexpr auto ConnectionTracker = 0xb48; // ComponentProperty
		constexpr auto CameraSave = 0xb50; // ObjectProperty
		constexpr auto LastInputPitchUp = 0xb58; // float
		constexpr auto LastInputPitchDown = 0xb5c; // float
		constexpr auto LastInputYawLeft = 0xb60; // float
		constexpr auto LastInputYawRight = 0xb64; // float
		constexpr auto LastInputPitch = 0xb68; // float
		constexpr auto LastInputYaw = 0xb6c; // float
		constexpr auto MouseInputMax = 0xb70; // float
		constexpr auto ControllerEventInfoArchetype = 0xb78; // ObjectProperty
		constexpr auto ControllerEventInfo = 0xb80; // ObjectProperty
		constexpr auto EngineShare = 0xb88; // ObjectProperty
		constexpr auto AimAssistSave = 0xb90; // ObjectProperty
		constexpr auto InputBuffer = 0xb98; // ObjectProperty
		constexpr auto CrossplayConfig = 0xba0; // ObjectProperty
		constexpr auto PlayerReportedMessage = 0xba8; // FString
		constexpr auto __EventLaunchAccountPicker__Delegate = 0xbb8; // DelegateProperty
		constexpr auto __EventLaunchControllerApplet__Delegate = 0xbd0; // DelegateProperty
		constexpr auto __EventMuteChanged__Delegate = 0xbe8; // DelegateProperty
		constexpr auto __EventTrainingEditorActorModified__Delegate = 0xc00; // DelegateProperty
		constexpr auto __EventSelectCameraTarget__Delegate = 0xc18; // DelegateProperty
		constexpr auto __EventConnectionTrackerAttached__Delegate = 0xc30; // DelegateProperty
		constexpr auto __EventChatMessage__Delegate = 0xc48; // DelegateProperty
	}

	namespace n_UCameraState_DirectorKickoff_TA {
		constexpr auto Distance = 0x180; // float
		constexpr auto RotationOffset = 0x184; // FRotator
		constexpr auto FOV = 0x190; // float
		constexpr auto BlendToParams = 0x194; // FViewTargetTransitionParams
	}

	namespace n_URPC_GetSpecialEventCurrency_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto EventID = 0x130; // int32_t
		constexpr auto EventCurrency = 0x138; // FEventCurrencyData
	}

	namespace n_URPC_LoginAuthPlayer_X {
		constexpr auto Platform = 0xe8; // FString
		constexpr auto PlayerName = 0xf8; // FString
		constexpr auto PlayerID = 0x108; // FString
		constexpr auto Language = 0x118; // FString
		constexpr auto AuthTicket = 0x128; // FString
		constexpr auto BuildRegion = 0x138; // FString
		constexpr auto FeatureSet = 0x148; // FName
		constexpr auto bSkipAuth = 0x150; // uint32_t : 1
		constexpr auto bSetAsPrimaryAccount = 0x150; // uint32_t : 1
		constexpr auto UseWebSocket = 0x150; // uint32_t : 1
		constexpr auto IsLastChanceAuthBan = 0x150; // uint32_t : 1
		constexpr auto EpicAuthTicket = 0x158; // FString
		constexpr auto EpicAccountId = 0x168; // FString
		constexpr auto SessionId = 0x178; // FString
		constexpr auto PsyToken = 0x188; // FString
		constexpr auto BanMessage = 0x198; // ObjectProperty
		constexpr auto VerifiedPlayerName = 0x1a0; // FString
		constexpr auto PerConURL = 0x1b0; // FString
		constexpr auto PerConURLv2 = 0x1c0; // FString
		constexpr auto PsyTag = 0x1d0; // FPsyTag
		constexpr auto CountryRestrictions = 0x1e8; // TArray<FName>
	}

	namespace n_USeqAct_ChangeCollision {
		constexpr auto bCollideActors = 0x160; // uint32_t : 1
		constexpr auto bBlockActors = 0x160; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0x160; // uint32_t : 1
		constexpr auto CollisionType = 0x164; // ECollisionType
	}

	namespace n_AActor {
		constexpr auto ActorDependantPSCs = 0x60; // TArray<ComponentProperty>
		constexpr auto Components = 0x70; // TArray<ComponentProperty>
		constexpr auto AllComponents = 0x80; // TArray<ComponentProperty>
		constexpr auto Location = 0x90; // FVector
		constexpr auto Rotation = 0x9c; // FRotator
		constexpr auto DrawScale = 0xa8; // float
		constexpr auto DrawScale3D = 0xac; // FVector
		constexpr auto PrePivot = 0xb8; // FVector
		constexpr auto EditorIconColor = 0xc4; // FColor
		constexpr auto DetachFence = 0xc8; // FRenderCommandFence
		constexpr auto CustomTimeDilation = 0xcc; // float
		constexpr auto Physics = 0xd0; // EPhysics
		constexpr auto RemoteRole = 0xd1; // ENetRole
		constexpr auto Role = 0xd2; // ENetRole
		constexpr auto CollisionType = 0xd3; // ECollisionType
		constexpr auto ReplicatedCollisionType = 0xd4; // ECollisionType
		constexpr auto TickGroup = 0xd5; // ETickingGroup
		constexpr auto Owner = 0xd8; // ObjectProperty
		constexpr auto Base = 0xe0; // ObjectProperty
		constexpr auto Timers = 0xe8; // TArray<FTimerData>
		constexpr auto bStatic = 0xf8; // uint32_t : 1
		constexpr auto bHidden = 0xf8; // uint32_t : 1
		constexpr auto bHiddenSelf = 0xf8; // uint32_t : 1
		constexpr auto bNoDelete = 0xf8; // uint32_t : 1
		constexpr auto bDeleteMe = 0xf8; // uint32_t : 1
		constexpr auto bTicked = 0xf8; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0xf8; // uint32_t : 1
		constexpr auto bTickIsDisabled = 0xf8; // uint32_t : 1
		constexpr auto bWorldGeometry = 0xf8; // uint32_t : 1
		constexpr auto bIgnoreRigidBodyPawns = 0xf8; // uint32_t : 1
		constexpr auto bOrientOnSlope = 0xf8; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0xf8; // uint32_t : 1
		constexpr auto bPushedByEncroachers = 0xf8; // uint32_t : 1
		constexpr auto bDestroyedByInterpActor = 0xf8; // uint32_t : 1
		constexpr auto bRouteBeginPlayEvenIfStatic = 0xf8; // uint32_t : 1
		constexpr auto bIsMoving = 0xf8; // uint32_t : 1
		constexpr auto bAlwaysEncroachCheck = 0xf8; // uint32_t : 1
		constexpr auto bHasAlternateTargetLocation = 0xf8; // uint32_t : 1
		constexpr auto bCanStepUpOn = 0xf8; // uint32_t : 1
		constexpr auto bNetTemporary = 0xf8; // uint32_t : 1
		constexpr auto bOnlyRelevantToOwner = 0xf8; // uint32_t : 1
		constexpr auto bNetDirty = 0xf8; // uint32_t : 1
		constexpr auto bAlwaysRelevant = 0xf8; // uint32_t : 1
		constexpr auto bReplicateInstigator = 0xf8; // uint32_t : 1
		constexpr auto bReplicateMovement = 0xf8; // uint32_t : 1
		constexpr auto bSkipActorPropertyReplication = 0xf8; // uint32_t : 1
		constexpr auto bUpdateSimulatedPosition = 0xf8; // uint32_t : 1
		constexpr auto bTearOff = 0xf8; // uint32_t : 1
		constexpr auto bOnlyDirtyReplication = 0xf8; // uint32_t : 1
		constexpr auto bAllowFluidSurfaceInteraction = 0xf8; // uint32_t : 1
		constexpr auto bDemoRecording = 0xf8; // uint32_t : 1
		constexpr auto bDemoOwner = 0xf8; // uint32_t : 1
		constexpr auto bForceDemoRelevant = 0xfc; // uint32_t : 1
		constexpr auto bNetInitialRotation = 0xfc; // uint32_t : 1
		constexpr auto bReplicateRigidBodyLocation = 0xfc; // uint32_t : 1
		constexpr auto bKillDuringLevelTransition = 0xfc; // uint32_t : 1
		constexpr auto bExchangedRoles = 0xfc; // uint32_t : 1
		constexpr auto bConsiderAllStaticMeshComponentsForStreaming = 0xfc; // uint32_t : 1
		constexpr auto bDebug = 0xfc; // uint32_t : 1
		constexpr auto bPostRenderIfNotVisible = 0xfc; // uint32_t : 1
		constexpr auto bForceNetUpdate = 0xfc; // uint32_t : 1
		constexpr auto bForcePacketUpdate = 0xfc; // uint32_t : 1
		constexpr auto bPendingNetUpdate = 0xfc; // uint32_t : 1
		constexpr auto bHardAttach = 0xfc; // uint32_t : 1
		constexpr auto bIgnoreBaseRotation = 0xfc; // uint32_t : 1
		constexpr auto bShadowParented = 0xfc; // uint32_t : 1
		constexpr auto bSkipAttachedMoves = 0xfc; // uint32_t : 1
		constexpr auto bCanBeAdheredTo = 0xfc; // uint32_t : 1
		constexpr auto bCanBeFrictionedTo = 0xfc; // uint32_t : 1
		constexpr auto bGameRelevant = 0xfc; // uint32_t : 1
		constexpr auto bMovable = 0xfc; // uint32_t : 1
		constexpr auto bShouldBaseAtStartup = 0xfc; // uint32_t : 1
		constexpr auto bPendingDelete = 0xfc; // uint32_t : 1
		constexpr auto bCanTeleport = 0xfc; // uint32_t : 1
		constexpr auto bAlwaysTick = 0xfc; // uint32_t : 1
		constexpr auto bBlocksNavigation = 0xfc; // uint32_t : 1
		constexpr auto BlockRigidBody = 0xfc; // uint32_t : 1
		constexpr auto bCollideWhenPlacing = 0xfc; // uint32_t : 1
		constexpr auto bCollideActors = 0xfc; // uint32_t : 1
		constexpr auto bCollideWorld = 0xfc; // uint32_t : 1
		constexpr auto bCollideComplex = 0xfc; // uint32_t : 1
		constexpr auto bBlockActors = 0xfc; // uint32_t : 1
		constexpr auto bBlocksTeleport = 0xfc; // uint32_t : 1
		constexpr auto bMoveIgnoresDestruction = 0xfc; // uint32_t : 1
		constexpr auto bProjectileMoveSingleBlocking = 0x100; // uint32_t : 1
		constexpr auto bNoEncroachCheck = 0x100; // uint32_t : 1
		constexpr auto bCollideAsEncroacher = 0x100; // uint32_t : 1
		constexpr auto bPhysRigidBodyOutOfWorldCheck = 0x100; // uint32_t : 1
		constexpr auto bComponentOutsideWorld = 0x100; // uint32_t : 1
		constexpr auto bForceOctreeSNFilter = 0x100; // uint32_t : 1
		constexpr auto bForceOctreeMNFilter = 0x100; // uint32_t : 1
		constexpr auto bRigidBodyWasAwake = 0x100; // uint32_t : 1
		constexpr auto bCallRigidBodyWakeEvents = 0x100; // uint32_t : 1
		constexpr auto bBounce = 0x100; // uint32_t : 1
		constexpr auto bJustTeleported = 0x100; // uint32_t : 1
		constexpr auto bEnableMobileTouch = 0x100; // uint32_t : 1
		constexpr auto bNetInitial = 0x100; // uint32_t : 1
		constexpr auto bNetOwner = 0x100; // uint32_t : 1
		constexpr auto bHiddenEd = 0x100; // uint32_t : 1
		constexpr auto bEditable = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdGroup = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdLayer = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdCustom = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdTemporary = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdLevel = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdScene = 0x100; // uint32_t : 1
		constexpr auto bHiddenEdNoPhysics = 0x100; // uint32_t : 1
		constexpr auto bEdShouldSnap = 0x100; // uint32_t : 1
		constexpr auto bTempEditor = 0x100; // uint32_t : 1
		constexpr auto bPathColliding = 0x100; // uint32_t : 1
		constexpr auto bPathTemp = 0x100; // uint32_t : 1
		constexpr auto bScriptInitialized = 0x100; // uint32_t : 1
		constexpr auto bLockLocation = 0x100; // uint32_t : 1
		constexpr auto bForceAllowKismetModification = 0x100; // uint32_t : 1
		constexpr auto bDedicatedServerRelevant = 0x100; // uint32_t : 1
		constexpr auto bLockedFromEditorDeletion = 0x100; // uint32_t : 1
		constexpr auto bComponentsDirty = 0x104; // uint32_t : 1
		constexpr auto bUpdateComponentsIfEmpty = 0x104; // uint32_t : 1
		constexpr auto bDebugEffectIsRelevant = 0x104; // uint32_t : 1
		constexpr auto SkelMeshCompTickTag = 0x108; // int32_t
		constexpr auto NetTag = 0x10c; // int32_t
		constexpr auto NetUpdateTime = 0x110; // float
		constexpr auto NetUpdateFrequency = 0x114; // float
		constexpr auto NetPriority = 0x118; // float
		constexpr auto LastNetUpdateTime = 0x11c; // float
		constexpr auto LastForcePacketUpdateTime = 0x120; // float
		constexpr auto TimeSinceLastTick = 0x124; // float
		constexpr auto Instigator = 0x128; // ObjectProperty
		constexpr auto WorldInfo = 0x130; // ObjectProperty
		constexpr auto LifeSpan = 0x138; // float
		constexpr auto CreationTime = 0x13c; // float
		constexpr auto LastRenderTime = 0x140; // float
		constexpr auto Tag = 0x144; // FName
		constexpr auto InitialState = 0x14c; // FName
		constexpr auto Layer = 0x154; // FName
		constexpr auto Group = 0x15c; // FName
		constexpr auto HiddenEditorViews = 0x168; // QWordProperty
		constexpr auto Touching = 0x170; // TArray<ObjectProperty>
		constexpr auto Children = 0x180; // TArray<ObjectProperty>
		constexpr auto LatentFloat = 0x190; // float
		constexpr auto LatentSeqNode = 0x198; // ObjectProperty
		constexpr auto PhysicsVolume = 0x1a0; // ObjectProperty
		constexpr auto Velocity = 0x1a8; // FVector
		constexpr auto Acceleration = 0x1b4; // FVector
		constexpr auto AngularVelocity = 0x1c0; // FVector
		constexpr auto BaseSkelComponent = 0x1d0; // ComponentProperty
		constexpr auto BaseBoneName = 0x1d8; // FName
		constexpr auto Attached = 0x1e0; // TArray<ObjectProperty>
		constexpr auto RelativeLocation = 0x1f0; // FVector
		constexpr auto RelativeRotation = 0x1fc; // FRotator
		constexpr auto CollisionComponent = 0x208; // ComponentProperty
		constexpr auto OverlapTag = 0x210; // int32_t
		constexpr auto RotationRate = 0x214; // FRotator
		constexpr auto PendingTouch = 0x220; // ObjectProperty
		constexpr auto SupportedEvents = 0x228; // TArray<FNone*>
		constexpr auto GeneratedEvents = 0x238; // TArray<ObjectProperty>
		constexpr auto LatentActions = 0x248; // TArray<ObjectProperty>
		constexpr auto IgnoredTouchClasses = 0x258; // TArray<FNone*>
	}

	namespace n_UGFxData_Regions_TA {
		constexpr auto SuperRegions = 0x98; // TArray<FGFxRegion>
		constexpr auto Regions = 0xa8; // TArray<FGFxRegion>
		constexpr auto __EventRegionsSynced__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UTourSubscriptions_TA {
		constexpr auto TourList = 0x60; // ComponentProperty
		constexpr auto GFxTourList = 0x68; // ComponentProperty
		constexpr auto Created = 0x70; // TArray<QWordProperty>
		constexpr auto AdminOf = 0x80; // TArray<QWordProperty>
		constexpr auto RegisteredTo = 0x90; // TArray<QWordProperty>
		constexpr auto WindowWatcher = 0xa0; // ObjectProperty
		constexpr auto GetSubscriptionsRPC = 0xa8; // ObjectProperty
		constexpr auto bSynced = 0xb0; // uint32_t : 1
		constexpr auto SyncError = 0xb8; // ObjectProperty
		constexpr auto LastEarlyLeaveTournamentID = 0xc0; // QWordProperty
		constexpr auto LastSpectatedTourID = 0xc8; // QWordProperty
		constexpr auto __EventSubscriptionsSynced__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventUnsubscribe__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventSubscribe__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventTourCancelled__Delegate = 0x118; // DelegateProperty
		constexpr auto __EventTournamentSwapped__Delegate = 0x130; // DelegateProperty
		constexpr auto __Created__ChangeNotify = 0x148; // DelegateProperty
		constexpr auto __AdminOf__ChangeNotify = 0x160; // DelegateProperty
		constexpr auto __RegisteredTo__ChangeNotify = 0x178; // DelegateProperty
	}

	namespace n_UChallengeFolder_TA {
		constexpr auto CodeName = 0x60; // FString
		constexpr auto DisplayName = 0x70; // FString
		constexpr auto ChallengeID = 0x80; // int32_t
		constexpr auto DefaultActiveIndex = 0x84; // int32_t
		constexpr auto StartTime = 0x88; // QWordProperty
		constexpr auto EndTime = 0x90; // QWordProperty
		constexpr auto ChallengeFolderSort = 0x98; // EChallengeSort
		constexpr auto ChallengeIDs = 0xa0; // TArray<int32_t>
		constexpr auto SubFolders = 0xb0; // TArray<ObjectProperty>
		constexpr auto SubFolderNames = 0xc0; // FString
		constexpr auto LinkedFolderCodeName = 0xd0; // FString
	}

	namespace n_UGetPlayerStorageResultItem_X {
		constexpr auto Category = 0x60; // FName
		constexpr auto Tick = 0x68; // int32_t
		constexpr auto Data = 0x70; // FString
		constexpr auto Checksum = 0x80; // int32_t
		constexpr auto bChecksumMatch = 0x84; // uint32_t : 1
		constexpr auto Encoding = 0x88; // EObjectEncoding
	}

	namespace n_UPsyNetMessengerWebSocket_X {
		constexpr auto MessageSendTimeout = 0x78; // float
		constexpr auto HandshakeHeaders = 0x80; // ComponentProperty
		constexpr auto URL = 0x88; // FString
		constexpr auto Connection = 0x98; // ObjectProperty
		constexpr auto QueuedMessages = 0xa0; // TArray<FQueuedPsyNetMessage>
		constexpr auto PsyNetConfig = 0xb0; // ObjectProperty
		constexpr auto __EventStartConnect__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventStartConnectFail__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventConnected__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventDisconnected__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventInvalidMessageReceived__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UCameraState_PodiumSpotlight_TA {
		constexpr auto ArcT = 0x90; // float
		constexpr auto CameraDistance = 0x94; // float
		constexpr auto CameraOffsetYaw = 0x98; // float
		constexpr auto CameraOffsetPitch = 0x9c; // float
		constexpr auto XOffsetDistanceStart = 0xa0; // float
		constexpr auto XOffsetDistanceEnd = 0xa4; // float
		constexpr auto XOffsetDollySpeed = 0xa8; // float
		constexpr auto DefaultFOV = 0xac; // float
		constexpr auto FadeInDuration = 0xb0; // float
		constexpr auto Cars = 0xb8; // TArray<FCachedPodiumCar>
	}

	namespace n_UGFxData_AutoTour_Week_TA {
		constexpr auto Score = 0x98; // int32_t
		constexpr auto Results = 0xa0; // TArray<FTournamentResult>
	}

	namespace n_UGFxData_ChinaPaymentBrowser_TA {
		constexpr auto UIConfig = 0x98; // ObjectProperty
		constexpr auto UrlConfig = 0xa0; // ObjectProperty
	}

	namespace n_UShopItemExpirationHelper_TA {
		constexpr auto ShopItemExpirations = 0x60; // TArray<QWordProperty>
		constexpr auto __EventShopItemExpired__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UBTC_Skill {
		constexpr auto SkillGreaterThan = 0x90; // float
		constexpr auto SkillLessThan = 0x94; // float
	}

	namespace n_UUIDataProvider_Settings {
		constexpr auto Settings = 0x98; // ObjectProperty
		constexpr auto bIsAListRow = 0xa0; // uint32_t : 1
	}

	namespace n_AHideLevelAssetsBase_TA {
		constexpr auto ActorsInLevel = 0x268; // TArray<ObjectProperty>
		constexpr auto ActorClasses = 0x278; // TArray<FNone*>
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UGameModesConfig_TA {
		constexpr auto EnabledGameModes = 0x78; // TArray<FName>
	}

	namespace n_USeqAct_GetWeatherEnabled_TA {
		constexpr auto bEnabled = 0x160; // uint32_t : 1
	}

	namespace n_U__TourStatus_TA__GetStatus_E8D4194347F413B73802F9BB16F312F8 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_U__GFxData_CarRumble_TA__HandlePawnSet_B637FE7B459410AAE8C7CEB73A7E8E60 {
		constexpr auto NewCar = 0x60; // ObjectProperty
	}

	namespace n_U__OnlineClubProvider_X__SyncClubDetails_E354CEA949DC98C2A20EF6A4017F87B8 {
		constexpr auto ClubID = 0x60; // QWordProperty
		constexpr auto RPC = 0x68; // ObjectProperty
	}

	namespace n_UInterpComponent_X {
		constexpr auto InterpStart = 0xa0; // FMatrix
		constexpr auto InterpEnd = 0xe0; // FMatrix
		constexpr auto InterpLocalToWorld = 0x120; // FMatrix
		constexpr auto InterpStartTime = 0x160; // float
		constexpr auto InterpEndTime = 0x164; // float
		constexpr auto Attachments = 0x168; // TArray<FAttachment>
	}

	namespace n_UDOFAndBloomEffect {
		constexpr auto BloomScale = 0xb8; // float
		constexpr auto BloomThreshold = 0xbc; // float
		constexpr auto BloomTint = 0xc0; // FColor
		constexpr auto BloomScreenBlendThreshold = 0xc4; // float
		constexpr auto SceneMultiplier = 0xc8; // float
		constexpr auto BlurBloomKernelSize = 0xcc; // float
		constexpr auto bEnableReferenceDOF = 0xd0; // uint32_t : 1
		constexpr auto DepthOfFieldType = 0xd4; // EDOFType
		constexpr auto DepthOfFieldQuality = 0xd5; // EDOFQuality
		constexpr auto BokehTexture = 0xd8; // ObjectProperty
	}

	namespace n_AGameInfo_Season_TA {
		constexpr auto SoccarArchetype = 0x540; // ObjectProperty
	}

	namespace n_ULoadingScreen_TA {
		constexpr auto ProtipMessages = 0x60; // TArray<FString>
		constexpr auto ProtipMessagesQueue = 0x70; // TArray<FString>
		constexpr auto MaximumPlayerCounts = 0x80; // FString
		constexpr auto GFxEngineRef = 0x90; // ObjectProperty
		constexpr auto OnlineGame = 0x98; // ObjectProperty
		constexpr auto LoadingScreenInfo = 0xa0; // FLoadingMovieMapInfo
		constexpr auto bUnfairTeams = 0x140; // uint32_t : 1
	}

	namespace n_U__ChallengeReward_TA__Init_87327DF04DC487E275D03DA2D60EFDDD {
		constexpr auto ListenObj = 0x60; // ObjectProperty
	}

	namespace n_UProductAsset_Wheel_TA {
		constexpr auto MeshRadius = 0xf8; // float
		constexpr auto MeshWidth = 0xfc; // float
		constexpr auto Generator = 0x100; // ComponentProperty
		constexpr auto PrevGenerator = 0x108; // ComponentProperty
		constexpr auto CollisionMesh = 0x110; // ObjectProperty
		constexpr auto CustomWheelDriveSound = 0x118; // ObjectProperty
		constexpr auto CustomWheelImpactSound = 0x120; // ObjectProperty
		constexpr auto MirrorMode = 0x128; // EMeshMirrorMode
		constexpr auto StaticMesh = 0x130; // ObjectProperty
		constexpr auto RearStaticMesh = 0x138; // ObjectProperty
		constexpr auto SkeletalMesh = 0x140; // ObjectProperty
		constexpr auto RearSkeletalMesh = 0x148; // ObjectProperty
		constexpr auto AnimTree = 0x150; // ObjectProperty
		constexpr auto LeftAnimTree = 0x158; // ObjectProperty
		constexpr auto Behaviors = 0x160; // TArray<ObjectProperty>
		constexpr auto Attachment = 0x170; // FWheelAttachment
		constexpr auto Attachments = 0x1a0; // TArray<FWheelAttachment>
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x258; // FColor
		constexpr auto ArrowSize = 0x25c; // float
		constexpr auto bTreatAsASprite = 0x260; // uint32_t : 1
		constexpr auto SpriteCategoryName = 0x264; // FName
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x70; // FRawDistributionVector
		constexpr auto bInheritParent = 0x98; // uint32_t : 1
	}

	namespace n_UActorFactoryFogVolumeConstantDensityInfo {
		constexpr auto SelectedMaterial = 0xa0; // ObjectProperty
		constexpr auto bNothingSelected = 0xa8; // uint32_t : 1
	}

	namespace n_UMcpUserCloudFileDownload {
		constexpr auto EnumerateCloudFilesUrl = 0x78; // FString
		constexpr auto ReadCloudFileUrl = 0x88; // FString
		constexpr auto WriteCloudFileUrl = 0x98; // FString
		constexpr auto DeleteCloudFileUrl = 0xa8; // FString
		constexpr auto UserCloudFileRequests = 0xb8; // TArray<FMcpUserCloudFilesEntry>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0x138; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0x150; // DelegateProperty
	}

	namespace n_USeqAct_MultiplyInt {
		constexpr auto ValueA = 0x160; // int32_t
		constexpr auto ValueB = 0x164; // int32_t
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_UOnlineGameServer_X {
		constexpr auto PsyNetConnection = 0x178; // ObjectProperty
	}

	namespace n_UProductAttribute_Key_TA {
		constexpr auto bMagicKey = 0x80; // uint32_t : 1
	}

	namespace n_UReplay_Soccar_TA {
		constexpr auto TeamSize = 0x2b0; // int32_t
		constexpr auto UnfairTeamSize = 0x2b4; // int32_t
		constexpr auto bUnfairBots = 0x2b8; // uint32_t : 1
		constexpr auto PrimaryPlayerTeam = 0x2bc; // int32_t
		constexpr auto Team0Score = 0x2c0; // int32_t
		constexpr auto Team1Score = 0x2c4; // int32_t
		constexpr auto Goals = 0x2c8; // TArray<FScoredGoal>
		constexpr auto HighLights = 0x2d8; // TArray<FHighlight>
		constexpr auto PlayerStats = 0x2e8; // TArray<FReplayPlayerStats>
	}

	namespace n_UParticleModuleLocationStaticVertSurface {
		constexpr auto SourceType = 0x70; // ELocationStaticVertSurfaceSource
		constexpr auto UniversalOffset = 0x74; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x80; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x80; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x80; // uint32_t : 1
		constexpr auto StaticMeshActorParamName = 0x84; // FName
		constexpr auto EditorStaticMesh = 0x90; // ObjectProperty
		constexpr auto NormalToCompare = 0x98; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0xa4; // float
		constexpr auto NormalCheckTolerance = 0xa8; // float
		constexpr auto ValidMaterialIndices = 0xb0; // TArray<int32_t>
	}

	namespace n_UDistributionFloat {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto CollisionHeightData = 0x258; // FUntypedBulkData_Mirror
		constexpr auto ComponentLayers = 0x2b0; // TArray<FName>
		constexpr auto DominantLayerData = 0x2c0; // FUntypedBulkData_Mirror
		constexpr auto SectionBaseX = 0x318; // int32_t
		constexpr auto SectionBaseY = 0x31c; // int32_t
		constexpr auto CollisionSizeQuads = 0x320; // int32_t
		constexpr auto CollisionScale = 0x324; // float
		constexpr auto CollisionQuadFlags = 0x328; // TArray<char>
		constexpr auto PhysicalMaterials = 0x338; // TArray<ObjectProperty>
		constexpr auto RBHeightfield = 0x348; // FPointer
		constexpr auto CachedBoxSphereBounds = 0x350; // FBoxSphereBounds
		constexpr auto bIncludeHoles = 0x36c; // uint32_t : 1
		constexpr auto bHeightFieldDataHasHole = 0x36c; // uint32_t : 1
	}

	namespace n_UBTC_JumpHit {
		constexpr auto MinImpactTime = 0x1d0; // float
	}

	namespace n_UMatchType_Public_TA {
		constexpr auto Reservations = 0xa0; // ObjectProperty
	}

	namespace n_UGFxData_TourBracketGame_TA {
		constexpr auto MatchID = 0x98; // int32_t
		constexpr auto GameNum = 0x9c; // int32_t
		constexpr auto TeamScore0 = 0xa0; // int32_t
		constexpr auto TeamScore1 = 0xa4; // int32_t
		constexpr auto GameTimeSeconds = 0xa8; // int32_t
		constexpr auto bOverTime = 0xac; // uint32_t : 1
		constexpr auto WinnerTeam = 0xb0; // QWordProperty
	}

	namespace n_UMenuSequence_PremiumGarageReveal_TA {
		constexpr auto FinishCameraState = 0xb8; // FName
	}

	namespace n_U__LocalClubData_X__GetClubForPlayer_0861C25147074472447C129EB8142EB2 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_UFogVolumeSphericalDensityComponent {
		constexpr auto MaxDensity = 0xf0; // float
		constexpr auto SphereCenter = 0xf4; // FVector
		constexpr auto SphereRadius = 0x100; // float
		constexpr auto PreviewSphereRadius = 0x108; // ComponentProperty
	}

	namespace n_URankedConfig_X {
		constexpr auto ReconnectTimeoutSeconds = 0x78; // int32_t
		constexpr auto SkillTierToSeasonRewardLevel = 0x80; // TArray<int32_t>
		constexpr auto SeasonRewardRequiredWinsPerLevel = 0x90; // TArray<int32_t>
		constexpr auto bCheckReservationID = 0xa0; // uint32_t : 1
		constexpr auto SeasonEndTimeSeconds = 0xa8; // QWordProperty
		constexpr auto MaximumRankDisparity = 0xb0; // int32_t
		constexpr auto PlacementMatchesNeededToReceiveRank = 0xb4; // int32_t
		constexpr auto HighestTierNewPlayersCanPlayWith = 0xb8; // int32_t
		constexpr auto HighestMuNewPlayersCanHave = 0xbc; // int32_t
	}

	namespace n_URPC_GetGenericDataAll_X {
		constexpr auto GenericData = 0xe8; // TArray<FGetGenericDataAllData>
	}

	namespace n_UReachSpec {
		constexpr auto NavOctreeObject = 0x60; // FPointer
		constexpr auto Distance = 0x68; // int32_t
		constexpr auto Direction = 0x6c; // FVector
		constexpr auto Start = 0x78; // ObjectProperty
		constexpr auto End = 0x80; // FActorReference
		constexpr auto CollisionRadius = 0x98; // int32_t
		constexpr auto CollisionHeight = 0x9c; // int32_t
		constexpr auto reachFlags = 0xa0; // int32_t
		constexpr auto MaxLandingVelocity = 0xa4; // int32_t
		constexpr auto bPruned = 0xa8; // char
		constexpr auto PathColorIndex = 0xa9; // char
		constexpr auto bAddToNavigationOctree = 0xac; // uint32_t : 1
		constexpr auto bCanCutCorners = 0xac; // uint32_t : 1
		constexpr auto bCheckForObstructions = 0xac; // uint32_t : 1
		constexpr auto bSkipPrune = 0xac; // uint32_t : 1
		constexpr auto bDisabled = 0xac; // uint32_t : 1
		constexpr auto PruneSpecList = 0xb0; // TArray<FNone*>
		constexpr auto BlockedBy = 0xc0; // ObjectProperty
	}

	namespace n_UActorComponent_X {
		constexpr auto bTick = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreScriptAttach = 0xa0; // uint32_t : 1
	}

	namespace n_URocketPass_TA {
		constexpr auto FreeRewards = 0x60; // TArray<FRocketPassRewardData>
		constexpr auto PremiumRewards = 0x70; // TArray<FRocketPassRewardData>
		constexpr auto PrestigeRewards = 0x80; // TArray<FRocketPassRewardData>
		constexpr auto TierCap = 0x90; // int32_t
		constexpr auto bIsPassActive = 0x94; // uint32_t : 1
		constexpr auto bOwnsPremium = 0x94; // uint32_t : 1
		constexpr auto bPrestigeItemsDirtied = 0x94; // uint32_t : 1
		constexpr auto XPMultiplier = 0x98; // float
		constexpr auto TierLevel = 0x9c; // int32_t
		constexpr auto SecondsRemaining = 0xa0; // int32_t
		constexpr auto Bundles = 0xa8; // ComponentProperty
		constexpr auto SyncAllInfoTask = 0xb0; // ObjectProperty
		constexpr auto PendingPlayerInfoTask = 0xb8; // ObjectProperty
		constexpr auto PendingRewardsTask = 0xc0; // ObjectProperty
		constexpr auto PendingPrestigeRewardsTask = 0xc8; // ObjectProperty
		constexpr auto PurchasePremiumTask = 0xd0; // ObjectProperty
		constexpr auto PurchaseTiersTask = 0xd8; // ObjectProperty
		constexpr auto CodeRedemptionPurchasableID = 0xe0; // int32_t
		constexpr auto RocketPassConfig = 0xe8; // ObjectProperty
		constexpr auto OnlineGame = 0xf0; // ObjectProperty
		constexpr auto Wallet = 0xf8; // ObjectProperty
		constexpr auto __EventError__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventRocketPassInfoChanged__Delegate = 0x118; // DelegateProperty
		constexpr auto __FreeRewards__ChangeNotify = 0x130; // DelegateProperty
		constexpr auto __PremiumRewards__ChangeNotify = 0x148; // DelegateProperty
		constexpr auto __PrestigeRewards__ChangeNotify = 0x160; // DelegateProperty
	}

	namespace n_U__OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_67BA15EB440C2F83E7F666AF310D7A3A {
		constexpr auto ProductsFavoriteSave = 0x60; // ObjectProperty
		constexpr auto SaveData = 0x68; // ObjectProperty
		constexpr auto ArchiveSave = 0x70; // ObjectProperty
	}

	namespace n_AApexDestructibleActor {
		constexpr auto LightEnvironment = 0x268; // ComponentProperty
		constexpr auto bFractureMaterialOverride = 0x270; // uint32_t : 1
		constexpr auto bPlaySingleFractureMaterialEffect = 0x270; // uint32_t : 1
		constexpr auto FractureMaterials = 0x278; // TArray<ObjectProperty>
		constexpr auto StaticDestructibleComponent = 0x288; // ComponentProperty
		constexpr auto LOD = 0x290; // int32_t
		constexpr auto VisibilityFactors = 0x298; // TArray<char>
		constexpr auto FractureSounds = 0x2a8; // TArray<ObjectProperty>
		constexpr auto FractureParticleEffects = 0x2b8; // TArray<ObjectProperty>
	}

	namespace n_ARBActor_TA {
		constexpr auto VfTable_IITickNotify_TA = 0x558; // FPointer
		constexpr auto MaxLinearSpeed = 0x560; // float
		constexpr auto MaxAngularSpeed = 0x564; // float
		constexpr auto RollingFriction = 0x568; // float
		constexpr auto bDisableSleeping = 0x56c; // uint32_t : 1
		constexpr auto bReplayActor = 0x56c; // uint32_t : 1
		constexpr auto bFrozen = 0x56c; // uint32_t : 1
		constexpr auto bAutoInitFXEffects = 0x56c; // uint32_t : 1
		constexpr auto bIgnoreSyncing = 0x56c; // uint32_t : 1
		constexpr auto bPhysInitialized = 0x56c; // uint32_t : 1
		constexpr auto bSkipNextErrorAccumulation = 0x56c; // uint32_t : 1
		constexpr auto NetworkSyncSettings = 0x570; // FNetworkSyncSettingsData
		constexpr auto OldRBState = 0x590; // FReplicatedRBState
		constexpr auto RBState = 0x5d0; // FReplicatedRBState
		constexpr auto ReplicatedRBState = 0x610; // FReplicatedRBState
		constexpr auto ClientCorrectionRBState = 0x650; // FReplicatedRBState
		constexpr auto WorldContact = 0x690; // FWorldContactData
		constexpr auto SyncErrorLocation = 0x6b8; // FVector
		constexpr auto SyncErrorAngle = 0x6c4; // float
		constexpr auto SyncErrorAxis = 0x6c8; // FVector
		constexpr auto Ak = 0x6d8; // ComponentProperty
		constexpr auto FXActorArchetype = 0x6e0; // ObjectProperty
		constexpr auto FXActor = 0x6e8; // ObjectProperty
		constexpr auto ImpactEffectsComponent = 0x6f0; // ComponentProperty
		constexpr auto RBCollisions = 0x6f8; // TArray<FAccumulatedRigidBodyCollision>
		constexpr auto RBHistoryClass = 0x708; // FNone*
		constexpr auto RBHistory = 0x710; // ComponentProperty
		constexpr auto LastRBCollisionsFrame = 0x718; // int32_t
		constexpr auto Replay = 0x720; // ComponentProperty
		constexpr auto WeldedInfo = 0x728; // FWeldingInfo
		constexpr auto WeldedActor = 0x750; // ObjectProperty
		constexpr auto WeldedTo = 0x758; // ObjectProperty
		constexpr auto PreWeldMass = 0x760; // float
		constexpr auto ReplicatedGravityScale = 0x764; // float
		constexpr auto ReplicatedCollisionScale = 0x768; // float
		constexpr auto Constraint2D = 0x770; // FPointer
		constexpr auto BulletRigidBody = 0x778; // FPointer
		constexpr auto PhysicsConfig = 0x780; // ObjectProperty
		constexpr auto TeleportCounter = 0x788; // char
		constexpr auto __EventRigidBodyCollision__Delegate = 0x790; // DelegateProperty
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0xc0; // FName
		constexpr auto ExpressionGUID = 0xc8; // FGuid
		constexpr auto Group = 0xd8; // FName
	}

	namespace n_ULanServerMetaData_TA {
		constexpr auto OwnerId = 0x60; // FUniqueNetId
		constexpr auto OwnerName = 0xa8; // FString
		constexpr auto ServerName = 0xb8; // FString
		constexpr auto ServerMap = 0xc8; // FName
		constexpr auto ServerGameMode = 0xd0; // int32_t
		constexpr auto bPassword = 0xd4; // uint32_t : 1
		constexpr auto NumPlayers = 0xd8; // int32_t
		constexpr auto MaxPlayers = 0xdc; // int32_t
		constexpr auto BuildID = 0xe0; // int32_t
	}

	namespace n_U__GFxData_ProductFilter_TA__GetProductSortingFilters_0F73816341DD91F452A735A3B078C855 {
		constexpr auto FilterType = 0x60; // EProductFilterType
	}

	namespace n_U__GFxData_SpecialEvents_TA__HandlePurchaseRewardFromStoreSuccess_B39ECEFA4AB1A7AAF68438AA2F8D3AD1 {
		constexpr auto RPC = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_EventsPageBrowser_TA {
		constexpr auto bShowButton = 0x98; // uint32_t : 1
		constexpr auto UIConfig = 0xa0; // ObjectProperty
		constexpr auto EventsConfig = 0xa8; // ObjectProperty
	}

	namespace n_UGameViewportClient_TA {
		constexpr auto bSplitScreenDisabled = 0x2b0; // uint32_t : 1
		constexpr auto bUpdateSplitscreenSizes = 0x2b0; // uint32_t : 1
		constexpr auto bDrawWorldFullScreen = 0x2b0; // uint32_t : 1
		constexpr auto bDrawBuildInfo = 0x2b0; // uint32_t : 1
		constexpr auto LastSplitJoinTryTimes = 0x2b8; // TArray<float>
		constexpr auto UIScaleModifier = 0x2c8; // float
		constexpr auto NameplateScaleModifier = 0x2cc; // float
		constexpr auto GameEvent = 0x2d0; // ObjectProperty
		constexpr auto OnlineGame = 0x2d8; // ObjectProperty
		constexpr auto __EventPostInit__Delegate = 0x2e0; // DelegateProperty
		constexpr auto __EventSplitScreenTypeChanged__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __EventDrawWorldFullScreenChanged__Delegate = 0x310; // DelegateProperty
		constexpr auto __EventUIScaleModifierUpdated__Delegate = 0x328; // DelegateProperty
		constexpr auto __EventSafeZoneRatioUpdated__Delegate = 0x340; // DelegateProperty
		constexpr auto __EventUpdatedNumLocalPlayers__Delegate = 0x358; // DelegateProperty
		constexpr auto __EventNameplateScaleModifierUpdated__Delegate = 0x370; // DelegateProperty
	}

	namespace n_UGFxData_LanBrowser_TA {
		constexpr auto LanBrowser = 0x98; // ObjectProperty
		constexpr auto GetServerListTask = 0xa0; // ObjectProperty
	}

	namespace n_UTimeWindow {
		constexpr auto WindowStartTime = 0x60; // QWordProperty
		constexpr auto WindowDuration = 0x68; // int32_t
		constexpr auto WindowResetInterval = 0x6c; // int32_t
		constexpr auto bRepeatable = 0x70; // uint32_t : 1
	}

	namespace n_UGameEvent_Soccar_SubRules_Basketball_TA {
		constexpr auto LongDistanceScore = 0x60; // int32_t
		constexpr auto DefaultScore = 0x64; // int32_t
	}

	namespace n_AMatchBroadcast_TA {
		constexpr auto GameEvent = 0x268; // ObjectProperty
		constexpr auto RecordedPlayers = 0x270; // TArray<ObjectProperty>
		constexpr auto bBroadcasting = 0x280; // uint32_t : 1
		constexpr auto __EventLog__Delegate = 0x288; // DelegateProperty
	}

	namespace n_U__CurrencyProductSet_TA__GetCurrencyIndexFromHashID_248FA0664D707A9A0CC1D8AC98BC1C01 {
		constexpr auto CurrencyHashID = 0x60; // FProductHashID
	}

	namespace n_USkelControl_TwistBone {
		constexpr auto SourceBoneName = 0x100; // FName
		constexpr auto TwistAngleScale = 0x108; // float
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Bias = 0xf8; // float
		constexpr auto Scale = 0xfc; // float
	}

	namespace n_URPC_GetClubPrivateMatches_X {
		constexpr auto Servers = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_AKActor {
		constexpr auto bDamageAppliesImpulse = 0x2c8; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x2c8; // uint32_t : 1
		constexpr auto bCurrentSlide = 0x2c8; // uint32_t : 1
		constexpr auto bSlideActive = 0x2c8; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0x2c8; // uint32_t : 1
		constexpr auto bLimitMaxPhysicsVelocity = 0x2c8; // uint32_t : 1
		constexpr auto bNeedsRBStateReplication = 0x2c8; // uint32_t : 1
		constexpr auto bDisableClientSidePawnInteractions = 0x2c8; // uint32_t : 1
		constexpr auto ImpactEffectComponent = 0x2d0; // ComponentProperty
		constexpr auto ImpactSoundComponent = 0x2d8; // ComponentProperty
		constexpr auto ImpactSoundComponent2 = 0x2e0; // ComponentProperty
		constexpr auto LastImpactTime = 0x2e8; // float
		constexpr auto ImpactEffectInfo = 0x2f0; // FPhysEffectInfo
		constexpr auto SlideEffectComponent = 0x308; // ComponentProperty
		constexpr auto SlideSoundComponent = 0x310; // ComponentProperty
		constexpr auto LastSlideTime = 0x318; // float
		constexpr auto SlideEffectInfo = 0x320; // FPhysEffectInfo
		constexpr auto StayUprightTorqueFactor = 0x338; // float
		constexpr auto StayUprightMaxTorque = 0x33c; // float
		constexpr auto MaxPhysicsVelocity = 0x340; // float
		constexpr auto RBState = 0x350; // FRigidBodyState
		constexpr auto AngErrorAccumulator = 0x390; // float
		constexpr auto ReplicatedDrawScale3D = 0x394; // FVector
		constexpr auto InitialLocation = 0x3a0; // FVector
		constexpr auto InitialRotation = 0x3ac; // FRotator
	}

	namespace n_UDistributionFloatSpeed_TA {
		constexpr auto VelocityScale = 0xa8; // FVector
		constexpr auto VelocitySpace = 0xb4; // ESpeedDistributionSpace
	}

	namespace n_AMaxTimeWarningData_TA {
		constexpr auto EndGameEpochTime = 0x270; // QWordProperty
		constexpr auto EndGameWarningEpochTime = 0x278; // QWordProperty
	}

	namespace n_U__TAsyncResult__PsyNetMessage_X__NotifyOnResult_27FF27F0428A24E40F1F008484F37621 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_LevelVisibility {
		constexpr auto Level = 0x178; // ObjectProperty
		constexpr auto LevelName = 0x180; // FName
		constexpr auto bStatusIsOk = 0x188; // uint32_t : 1
	}

	namespace n_UMeshComponent {
		constexpr auto VfTable_IISetParameter = 0x258; // FPointer
		constexpr auto NumSilhouettes = 0x260; // int32_t
		constexpr auto Materials = 0x268; // TArray<ObjectProperty>
		constexpr auto InvisiTekMaterials = 0x278; // TArray<ObjectProperty>
	}

	namespace n_ATeam_TA {
		constexpr auto CarColorSet = 0x290; // ObjectProperty
		constexpr auto CarColorSet_v1 = 0x298; // ObjectProperty
		constexpr auto CarColorSet_v2 = 0x2a0; // ObjectProperty
		constexpr auto FontColor = 0x2a8; // FLinearColor
		constexpr auto ColorBlindFontColor = 0x2b8; // FLinearColor
		constexpr auto Crossplay = 0x2c8; // ObjectProperty
		constexpr auto TeamControllerColor = 0x2d0; // FColor
		constexpr auto TeamScoreStrobeColor = 0x2d4; // FColor
		constexpr auto TeamScriptedTexture = 0x2d8; // ObjectProperty
		constexpr auto DefaultColorList = 0x2e0; // TArray<FLinearColor>
		constexpr auto ColorBlindColorList = 0x2f0; // TArray<FLinearColor>
		constexpr auto CurrentColorList = 0x300; // TArray<FLinearColor>
		constexpr auto GameEvent = 0x310; // ObjectProperty
		constexpr auto Members = 0x318; // TArray<ObjectProperty>
		constexpr auto CustomTeamName = 0x328; // FString
		constexpr auto TeamNameComponent = 0x338; // ComponentProperty
		constexpr auto ClubID = 0x340; // QWordProperty
		constexpr auto Logo = 0x348; // ObjectProperty
		constexpr auto LogoData = 0x350; // FReplicatedLogoData
		constexpr auto ClubColors = 0x358; // FClubColorSet
		constexpr auto ForfeitVoteArchetype = 0x360; // ObjectProperty
		constexpr auto ForfeitVote = 0x368; // ObjectProperty
		constexpr auto PartyUpVote = 0x370; // ObjectProperty
		constexpr auto bForfeit = 0x378; // uint32_t : 1
		constexpr auto TemporarySpawnSpots = 0x380; // TArray<FTemporarySpawnSpot>
		constexpr auto Difficulty = 0x390; // int32_t
		constexpr auto __EventMemberAdded__Delegate = 0x398; // DelegateProperty
		constexpr auto __EventMemberRemoved__Delegate = 0x3b0; // DelegateProperty
		constexpr auto __EventColorsChanged__Delegate = 0x3c8; // DelegateProperty
		constexpr auto __EventScoreUpdated__Delegate = 0x3e0; // DelegateProperty
		constexpr auto __EventLogoChanged__Delegate = 0x3f8; // DelegateProperty
		constexpr auto __EventForfeit__Delegate = 0x410; // DelegateProperty
		constexpr auto __ClubColors__ChangeNotify = 0x428; // DelegateProperty
		constexpr auto __Difficulty__ChangeNotify = 0x440; // DelegateProperty
	}

	namespace n_UTAsyncResult__PrivilegeCheck_X {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UVideoSettingsSavePC_TA {
		constexpr auto WindowMode = 0xe0; // int32_t
		constexpr auto VideoOptions = 0xe8; // TArray<FOptionsValue>
		constexpr auto Resolution = 0xf8; // FString
		constexpr auto MaxFPS = 0x108; // int32_t
	}

	namespace n_UPsyNetService_FriendStatusUpdate_X {
		constexpr auto FromPlayer = 0x90; // FPsyNetOnlineStatus
	}

	namespace n_UAnimNodeFrame {
		constexpr auto SizeX = 0x90; // int32_t
		constexpr auto SizeY = 0x94; // int32_t
		constexpr auto BorderWidth = 0x98; // int32_t
		constexpr auto bDrawBox = 0x9c; // uint32_t : 1
		constexpr auto bFilled = 0x9c; // uint32_t : 1
		constexpr auto bTileFill = 0x9c; // uint32_t : 1
		constexpr auto BorderColor = 0xa0; // FColor
		constexpr auto FillColor = 0xa4; // FColor
		constexpr auto FillTexture = 0xa8; // ObjectProperty
		constexpr auto FillMaterial = 0xb0; // ObjectProperty
		constexpr auto ObjComment = 0xb8; // FString
	}

	namespace n_URPC_AcceptClubInvite_X {
		constexpr auto ClubID = 0xf8; // int32_t
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto SkeletalMesh = 0x288; // ObjectProperty
		constexpr auto AttachedToSkelComponent = 0x290; // ComponentProperty
		constexpr auto AnimTreeTemplate = 0x298; // ObjectProperty
		constexpr auto Animations = 0x2a0; // ObjectProperty
		constexpr auto AnimTickArray = 0x2a8; // TArray<ObjectProperty>
		constexpr auto AnimAlwaysTickArray = 0x2b8; // TArray<ObjectProperty>
		constexpr auto AnimTickRelevancyArray = 0x2c8; // TArray<int32_t>
		constexpr auto AnimTickWeightsArray = 0x2d8; // TArray<float>
		constexpr auto SkelControlTickArray = 0x2e8; // TArray<ObjectProperty>
		constexpr auto PhysicsAsset = 0x2f8; // ObjectProperty
		constexpr auto PhysicsAssetInstance = 0x300; // ObjectProperty
		constexpr auto ApexClothing = 0x308; // FPointer
		constexpr auto PhysicsWeight = 0x310; // float
		constexpr auto GlobalAnimRateScale = 0x314; // float
		constexpr auto StreamingDistanceMultiplier = 0x318; // float
		constexpr auto MeshObject = 0x320; // FPointer
		constexpr auto WireframeColor = 0x328; // FColor
		constexpr auto SpaceBases = 0x330; // TArray<FBoneAtom>
		constexpr auto LocalAtoms = 0x340; // TArray<FBoneAtom>
		constexpr auto CachedLocalAtoms = 0x350; // TArray<FBoneAtom>
		constexpr auto CachedSpaceBases = 0x360; // TArray<FBoneAtom>
		constexpr auto LowUpdateFrameRate = 0x370; // int32_t
		constexpr auto RequiredBones = 0x378; // TArray<char>
		constexpr auto ComposeOrderedRequiredBones = 0x388; // TArray<char>
		constexpr auto ParentAnimComponent = 0x398; // ComponentProperty
		constexpr auto ParentBoneMap = 0x3a0; // TArray<int32_t>
		constexpr auto AnimSets = 0x3b0; // TArray<ObjectProperty>
		constexpr auto TemporarySavedAnimSets = 0x3c0; // TArray<ObjectProperty>
		constexpr auto MorphSets = 0x3d0; // TArray<ObjectProperty>
		constexpr auto ActiveMorphs = 0x3e0; // TArray<FActiveMorph>
		constexpr auto ActiveCurveMorphs = 0x3f0; // TArray<FActiveMorph>
		constexpr auto MorphTargetIndexMap = 0x400; // TMap<None, None>
		constexpr auto Attachments = 0x450; // TArray<FAttachment>
		constexpr auto SkelControlIndex = 0x460; // TArray<char>
		constexpr auto PostPhysSkelControlIndex = 0x470; // TArray<char>
		constexpr auto ForcedLodModel = 0x480; // int32_t
		constexpr auto MinLodModel = 0x484; // int32_t
		constexpr auto PredictedLODLevel = 0x488; // int32_t
		constexpr auto OldPredictedLODLevel = 0x48c; // int32_t
		constexpr auto DistanceLODLevel = 0x490; // int32_t
		constexpr auto AnimationLODDistanceFactor = 0x494; // float
		constexpr auto AnimationLODFrameRate = 0x498; // int32_t
		constexpr auto MaxDistanceFactor = 0x49c; // float
		constexpr auto ChunkIndexPreview = 0x4a0; // int32_t
		constexpr auto SectionIndexPreview = 0x4a4; // int32_t
		constexpr auto bForceWireframe = 0x4a8; // int32_t
		constexpr auto bForceRefpose = 0x4ac; // int32_t
		constexpr auto bOldForceRefPose = 0x4b0; // int32_t
		constexpr auto bNoSkeletonUpdate = 0x4b4; // uint32_t : 1
		constexpr auto bDisplayBones = 0x4b8; // int32_t
		constexpr auto bShowPrePhysBones = 0x4bc; // int32_t
		constexpr auto bHideSkin = 0x4c0; // int32_t
		constexpr auto bForceRawOffset = 0x4c4; // int32_t
		constexpr auto bIgnoreControllers = 0x4c8; // int32_t
		constexpr auto bTransformFromAnimParent = 0x4cc; // int32_t
		constexpr auto TickTag = 0x4d0; // int32_t
		constexpr auto InitTag = 0x4d4; // int32_t
		constexpr auto CachedAtomsTag = 0x4d8; // int32_t
		constexpr auto bUseSingleBodyPhysics = 0x4dc; // int32_t
		constexpr auto bRequiredBonesUpToDate = 0x4e0; // int32_t
		constexpr auto MinDistFactorForKinematicUpdate = 0x4e4; // float
		constexpr auto FramesPhysicsAsleep = 0x4e8; // int32_t
		constexpr auto SkipRateForTickAnimNodesAndGetBoneAtoms = 0x4ec; // int32_t
		constexpr auto bSkipTickAnimNodes = 0x4f0; // uint32_t : 1
		constexpr auto bSkipGetBoneAtoms = 0x4f0; // uint32_t : 1
		constexpr auto bInterpolateBoneAtoms = 0x4f0; // uint32_t : 1
		constexpr auto bHasValidBodies = 0x4f0; // uint32_t : 1
		constexpr auto bSkipAllUpdateWhenPhysicsAsleep = 0x4f0; // uint32_t : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x4f0; // uint32_t : 1
		constexpr auto bUseBoundsFromParentAnimComponent = 0x4f0; // uint32_t : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x4f0; // uint32_t : 1
		constexpr auto bUpdateSkelWhenNotRendered = 0x4f0; // uint32_t : 1
		constexpr auto bIgnoreControllersWhenNotRendered = 0x4f0; // uint32_t : 1
		constexpr auto bTickAnimNodesWhenNotRendered = 0x4f0; // uint32_t : 1
		constexpr auto bNotUpdatingKinematicDueToDistance = 0x4f0; // uint32_t : 1
		constexpr auto bForceDiscardRootMotion = 0x4f0; // uint32_t : 1
		constexpr auto bNotifyRootMotionProcessed = 0x4f0; // uint32_t : 1
		constexpr auto bRootMotionModeChangeNotify = 0x4f0; // uint32_t : 1
		constexpr auto bRootMotionExtractedNotify = 0x4f0; // uint32_t : 1
		constexpr auto bProcessingRootMotion = 0x4f0; // uint32_t : 1
		constexpr auto bDisableFaceFXMaterialInstanceCreation = 0x4f0; // uint32_t : 1
		constexpr auto bDisableFaceFX = 0x4f0; // uint32_t : 1
		constexpr auto bAnimTreeInitialised = 0x4f0; // uint32_t : 1
		constexpr auto bForceMeshObjectUpdate = 0x4f0; // uint32_t : 1
		constexpr auto bHasPhysicsAssetInstance = 0x4f0; // uint32_t : 1
		constexpr auto bUpdateKinematicBonesFromAnimation = 0x4f0; // uint32_t : 1
		constexpr auto bUpdateJointsFromAnimation = 0x4f0; // uint32_t : 1
		constexpr auto bSkelCompFixed = 0x4f0; // uint32_t : 1
		constexpr auto bHasHadPhysicsBlendedIn = 0x4f0; // uint32_t : 1
		constexpr auto bForceUpdateAttachmentsInTick = 0x4f0; // uint32_t : 1
		constexpr auto bEnableFullAnimWeightBodies = 0x4f0; // uint32_t : 1
		constexpr auto bPerBoneVolumeEffects = 0x4f0; // uint32_t : 1
		constexpr auto bPerBoneMotionBlur = 0x4f0; // uint32_t : 1
		constexpr auto bSyncActorLocationToRootRigidBody = 0x4f0; // uint32_t : 1
		constexpr auto bUseRawData = 0x4f0; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x4f4; // uint32_t : 1
		constexpr auto bOverrideAttachmentOwnerVisibility = 0x4f4; // uint32_t : 1
		constexpr auto bNeedsToDeleteHitMask = 0x4f4; // uint32_t : 1
		constexpr auto bPauseAnims = 0x4f4; // uint32_t : 1
		constexpr auto bChartDistanceFactor = 0x4f4; // uint32_t : 1
		constexpr auto bEnableLineCheckWithBounds = 0x4f4; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x4f4; // uint32_t : 1
		constexpr auto bUpdateMorphWhenParentAnimComponentExists = 0x4f4; // uint32_t : 1
		constexpr auto LineCheckBoundsScale = 0x4f8; // FVector
		constexpr auto bEnableClothSimulation = 0x504; // uint32_t : 1
		constexpr auto bDisableClothCollision = 0x504; // uint32_t : 1
		constexpr auto bClothFrozen = 0x504; // uint32_t : 1
		constexpr auto bAutoFreezeClothWhenNotRendered = 0x504; // uint32_t : 1
		constexpr auto bClothAwakeOnStartup = 0x504; // uint32_t : 1
		constexpr auto bClothBaseVelClamp = 0x504; // uint32_t : 1
		constexpr auto bClothBaseVelInterp = 0x504; // uint32_t : 1
		constexpr auto bAttachClothVertsToBaseBody = 0x504; // uint32_t : 1
		constexpr auto bIsClothOnStaticObject = 0x504; // uint32_t : 1
		constexpr auto bUpdatedFixedClothVerts = 0x504; // uint32_t : 1
		constexpr auto bClothPositionalDampening = 0x504; // uint32_t : 1
		constexpr auto bClothWindRelativeToOwner = 0x504; // uint32_t : 1
		constexpr auto bRecentlyRendered = 0x504; // uint32_t : 1
		constexpr auto bCacheAnimSequenceNodes = 0x504; // uint32_t : 1
		constexpr auto bNeedsInstanceWeightUpdate = 0x504; // uint32_t : 1
		constexpr auto bAlwaysUseInstanceWeights = 0x504; // uint32_t : 1
		constexpr auto bUpdateComposeSkeletonPasses = 0x504; // uint32_t : 1
		constexpr auto bValidTemporarySavedAnimSets = 0x504; // uint32_t : 1
		constexpr auto InstanceVertexWeightBones = 0x508; // TArray<FBonePair>
		constexpr auto LODInfo = 0x518; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto FrozenLocalToWorldPos = 0x528; // FVector
		constexpr auto FrozenLocalToWorldRot = 0x534; // FRotator
		constexpr auto ClothExternalForce = 0x540; // FVector
		constexpr auto ClothWind = 0x54c; // FVector
		constexpr auto ClothBaseVelClampRange = 0x558; // FVector
		constexpr auto ClothBlendWeight = 0x564; // float
		constexpr auto ClothDynamicBlendWeight = 0x568; // float
		constexpr auto ClothBlendMinDistanceFactor = 0x56c; // float
		constexpr auto ClothBlendMaxDistanceFactor = 0x570; // float
		constexpr auto MinPosDampRange = 0x574; // FVector
		constexpr auto MaxPosDampRange = 0x580; // FVector
		constexpr auto MinPosDampScale = 0x58c; // FVector
		constexpr auto MaxPosDampScale = 0x598; // FVector
		constexpr auto ClothSim = 0x5a8; // FPointer
		constexpr auto SceneIndex = 0x5b0; // int32_t
		constexpr auto ClothMeshPosData = 0x5b8; // TArray<FVector>
		constexpr auto ClothMeshNormalData = 0x5c8; // TArray<FVector>
		constexpr auto ClothMeshIndexData = 0x5d8; // TArray<int32_t>
		constexpr auto NumClothMeshVerts = 0x5e8; // int32_t
		constexpr auto NumClothMeshIndices = 0x5ec; // int32_t
		constexpr auto ClothMeshParentData = 0x5f0; // TArray<int32_t>
		constexpr auto NumClothMeshParentIndices = 0x600; // int32_t
		constexpr auto ClothMeshWeldedPosData = 0x608; // TArray<FVector>
		constexpr auto ClothMeshWeldedNormalData = 0x618; // TArray<FVector>
		constexpr auto ClothMeshWeldedIndexData = 0x628; // TArray<int32_t>
		constexpr auto ClothDirtyBufferFlag = 0x638; // int32_t
		constexpr auto ClothRBChannel = 0x63c; // ERBCollisionChannel
		constexpr auto ClothRBCollideWithChannels = 0x640; // FRBCollisionChannelContainer
		constexpr auto ClothForceScale = 0x644; // float
		constexpr auto ClothImpulseScale = 0x648; // float
		constexpr auto ClothAttachmentTearFactor = 0x64c; // float
		constexpr auto bClothUseCompartment = 0x650; // uint32_t : 1
		constexpr auto MinDistanceForClothReset = 0x654; // float
		constexpr auto LastClothLocation = 0x658; // FVector
		constexpr auto ApexClothingRBChannel = 0x664; // ERBCollisionChannel
		constexpr auto ApexClothingRBCollideWithChannels = 0x668; // FRBCollisionChannelContainer
		constexpr auto ApexClothingCollisionRBChannel = 0x66c; // ERBCollisionChannel
		constexpr auto bAutoFreezeApexClothingWhenNotRendered = 0x670; // uint32_t : 1
		constexpr auto bLocalSpaceWind = 0x670; // uint32_t : 1
		constexpr auto WindVelocity = 0x674; // FVector
		constexpr auto WindVelocityBlendTime = 0x680; // float
		constexpr auto bSkipInitClothing = 0x684; // uint32_t : 1
		constexpr auto SoftBodySim = 0x688; // FPointer
		constexpr auto SoftBodySceneIndex = 0x690; // int32_t
		constexpr auto bEnableSoftBodySimulation = 0x694; // uint32_t : 1
		constexpr auto SoftBodyTetraPosData = 0x698; // TArray<FVector>
		constexpr auto SoftBodyTetraIndexData = 0x6a8; // TArray<int32_t>
		constexpr auto NumSoftBodyTetraVerts = 0x6b8; // int32_t
		constexpr auto NumSoftBodyTetraIndices = 0x6bc; // int32_t
		constexpr auto SoftBodyImpulseScale = 0x6c0; // float
		constexpr auto bSoftBodyFrozen = 0x6c4; // uint32_t : 1
		constexpr auto bAutoFreezeSoftBodyWhenNotRendered = 0x6c4; // uint32_t : 1
		constexpr auto bSoftBodyAwakeOnStartup = 0x6c4; // uint32_t : 1
		constexpr auto bSoftBodyUseCompartment = 0x6c4; // uint32_t : 1
		constexpr auto SoftBodyRBChannel = 0x6c8; // ERBCollisionChannel
		constexpr auto SoftBodyRBCollideWithChannels = 0x6cc; // FRBCollisionChannelContainer
		constexpr auto SoftBodyASVPlane = 0x6d0; // FPointer
		constexpr auto LimitMaterial = 0x6d8; // ObjectProperty
		constexpr auto RootMotionDelta = 0x6e0; // FBoneAtom
		constexpr auto RootMotionVelocity = 0x700; // FVector
		constexpr auto RootBoneTranslation = 0x70c; // FVector
		constexpr auto RootMotionAccelScale = 0x718; // FVector
		constexpr auto RootMotionMode = 0x724; // ERootMotionMode
		constexpr auto PreviousRMM = 0x725; // ERootMotionMode
		constexpr auto PendingRMM = 0x726; // ERootMotionMode
		constexpr auto OldPendingRMM = 0x727; // ERootMotionMode
		constexpr auto bRMMOneFrameDelay = 0x728; // int32_t
		constexpr auto RootMotionRotationMode = 0x72c; // ERootMotionRotationMode
		constexpr auto AnimRotationOnly = 0x72d; // EAnimRotationOnly
		constexpr auto FaceFXBlendMode = 0x72e; // EFaceFXBlendMode
		constexpr auto FaceFXActorInstance = 0x730; // FPointer
		constexpr auto CachedFaceFXAudioComp = 0x738; // ComponentProperty
		constexpr auto BoneVisibilityStates = 0x740; // TArray<char>
		constexpr auto CachedFaceFxAkEvent = 0x750; // ObjectProperty
		constexpr auto LocalToWorldBoneAtom = 0x760; // FBoneAtom
		constexpr auto ProgressiveDrawingFraction = 0x780; // float
		constexpr auto CustomSortAlternateIndexMode = 0x784; // char
		constexpr auto MorphTargetsQueried = 0x788; // TArray<FName>
		constexpr auto bUseTickOptimization = 0x798; // uint32_t : 1
		constexpr auto TickCount = 0x79c; // int32_t
		constexpr auto LastDropRate = 0x7a0; // int32_t
		constexpr auto LastDropRateChange = 0x7a4; // float
		constexpr auto AccumulatedDroppedDeltaTime = 0x7a8; // float
		constexpr auto ComponentDroppedDeltaTime = 0x7ac; // float
	}

	namespace n_UGameServerPinger_X {
		constexpr auto Config = 0x70; // ObjectProperty
		constexpr auto Address = 0x78; // FName
		constexpr auto PingBeacon = 0x80; // ComponentProperty
		constexpr auto __EventPong__Delegate = 0x88; // DelegateProperty
		constexpr auto __EventLost__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UGFxData_ProductAttribute_ContainerKey_TA {
		constexpr auto bMagicKey = 0xb0; // uint32_t : 1
	}

	namespace n_URPC_TourCheckIn_TA {
		constexpr auto TournamentID = 0xe8; // QWordProperty
		constexpr auto PlayerID = 0xf0; // FUniqueNetId
		constexpr auto PartyID = 0x138; // FUniqueLobbyId
		constexpr auto Settings = 0x148; // FCustomMatchTeamSettings
		constexpr auto LocalTeamMembers = 0x168; // TArray<FUniqueNetId>
		constexpr auto TeamMembers = 0x178; // TArray<FUniqueNetId>
		constexpr auto TeamID = 0x188; // QWordProperty
		constexpr auto TeamName = 0x190; // FString
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0xe8; // EInterpMoveAxis
		constexpr auto LookupTrack = 0xf0; // FInterpLookupTrack
	}

	namespace n_USeqAct_SetTutorialGameEvent_TA {
		constexpr auto TutorialType = 0x160; // FString
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0xc0; // int32_t
		constexpr auto UTiling = 0xc4; // float
		constexpr auto VTiling = 0xc8; // float
		constexpr auto UnMirrorU = 0xcc; // uint32_t : 1
		constexpr auto UnMirrorV = 0xcc; // uint32_t : 1
	}

	namespace n_URPC_RecordMatch_X {
		constexpr auto Match = 0xe8; // ObjectProperty
	}

	namespace n_ULensFlareComponent_X {
		constexpr auto VfTable_IISetParameter = 0x2c0; // FPointer
		constexpr auto AlphaOverTime = 0x2c8; // FRawDistributionFloat
		constexpr auto ColorOverTime = 0x2f0; // FRawDistributionVector
		constexpr auto MaterialFloatParamValuesOverTime = 0x318; // TArray<FLensFlareFloatParamCurve>
		constexpr auto SourceColorParamName = 0x328; // FName
		constexpr auto SourceColorAlphaParamName = 0x330; // FName
		constexpr auto AttachTime = 0x338; // float
	}

	namespace n_U__GFxData_Clubs_TA__CreateClub_7BA257054BF767EA52A3869109D740B7 {
		constexpr auto Settings = 0x60; // ObjectProperty
	}

	namespace n_U__ChallengeDefault_TA__RequestImage_34126CC54945ED56101F6080ADBC238E {
		constexpr auto ImageURL = 0x60; // FString
	}

	namespace n_AGFxHUD_GameEditor_TA {
		constexpr auto EditorData = 0x558; // ObjectProperty
		constexpr auto TrainingGameEvent = 0x560; // ObjectProperty
	}

	namespace n_UObjectSerializer_X {
		constexpr auto bPersistent = 0x60; // uint32_t : 1
		constexpr auto bDebug = 0x60; // uint32_t : 1
	}

	namespace n_UAnimNotify_Script {
		constexpr auto NotifyName = 0x68; // FName
		constexpr auto NotifyTickName = 0x70; // FName
		constexpr auto NotifyEndName = 0x78; // FName
	}

	namespace n_UProductAttribute_Currency_TA {
		constexpr auto CurrencyID = 0x80; // int32_t
	}

	namespace n_UListenObject_TA {
		constexpr auto Id = 0x60; // int32_t
		constexpr auto __EventRemoved__Delegate = 0x68; // DelegateProperty
	}

	namespace n_U__GFxData_ProductFilter_TA__UpdateProductSlotNewItems_D41452074FDC55854EEDCD8341B35158 {
		constexpr auto SlotIdx = 0x60; // int32_t
		constexpr auto Loadout = 0x68; // ObjectProperty
	}

	namespace n_UArenaSoundEvent_TA {
		constexpr auto MapName = 0x60; // FName
		constexpr auto InGameMusicCue = 0x68; // ObjectProperty
		constexpr auto StartTime = 0x70; // QWordProperty
		constexpr auto EndTime = 0x78; // QWordProperty
	}

	namespace n_UScriptGroup_ORS {
		constexpr auto GroupOwner = 0x60; // ObjectProperty
	}

	namespace n_UMaterialExpressionTerrainLayerSwitch {
		constexpr auto InstanceOverride = 0xc0; // FPointer
		constexpr auto LayerUsed = 0xc8; // FExpressionInput
		constexpr auto LayerNotUsed = 0x100; // FExpressionInput
		constexpr auto ParameterName = 0x138; // FName
		constexpr auto PreviewUsed = 0x140; // uint32_t : 1
		constexpr auto ExpressionGUID = 0x144; // FGuid
	}

	namespace n_UXPManager_TA {
		constexpr auto LevelCap = 0x60; // int32_t
		constexpr auto Level_Max = 0x64; // int32_t
		constexpr auto Level_XPBaseStep = 0x68; // int32_t
		constexpr auto Level_XPBucketSize = 0x6c; // int32_t
		constexpr auto Level_XPIncrementAmt = 0x70; // float
		constexpr auto Level_XPBaseRequirement = 0x74; // int32_t
		constexpr auto Titles = 0x78; // TArray<FTitleInfo>
	}

	namespace n_UMcpServerTimeManager {
		constexpr auto TimeStampUrl = 0xa0; // FString
		constexpr auto LastTimeStamp = 0xb0; // FString
		constexpr auto HTTPRequestServerTime = 0xc0; // ObjectProperty
	}

	namespace n_USeqEvent_TouchInput {
		constexpr auto bTrapInput = 0x180; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x184; // int32_t
		constexpr auto AllowedTouchIndex = 0x188; // int32_t
		constexpr auto AllowedTouchpadIndex = 0x18c; // int32_t
	}

	namespace n_UInterpTrackPostProcess_TA {
		constexpr auto SettingsToApply = 0xe0; // FPostProcessSettings
		constexpr auto PreviousCameraSettings = 0x248; // FPostProcessSettings
	}

	namespace n_UHTTPDownload {
		constexpr auto RedirectToURL = 0x78; // FString
		constexpr auto UseCompression = 0x88; // uint32_t : 1
		constexpr auto ProxyServerHost = 0xab0; // FString
		constexpr auto ProxyServerPort = 0xac0; // int32_t
		constexpr auto MaxRedirection = 0xac4; // uint32_t : 1
		constexpr auto ConnectionTimeout = 0xac8; // float
	}

	namespace n_U__OnlineGameMatchmaking_X__OnReceiveGameServer_4D0DB84040447CED6AD407959BEF9949 {
		constexpr auto Reservation = 0x60; // FServerReservationData
	}

	namespace n_AGameEvent_Training_TA {
		constexpr auto __EventTrainingCompleted__Delegate = 0xeb8; // DelegateProperty
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0xc8; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0xd8; // uint32_t : 1
	}

	namespace n_USeqAct_ConsoleCommand {
		constexpr auto Command = 0x160; // FString
		constexpr auto Commands = 0x170; // TArray<FString>
	}

	namespace n_UActorFactoryAmbientSound {
		constexpr auto AmbientSoundCue = 0xa0; // ObjectProperty
	}

	namespace n_USeqEvent_ParticleEvent {
		constexpr auto EventType = 0x180; // EParticleEventOutputType
		constexpr auto EventPosition = 0x184; // FVector
		constexpr auto EventEmitterTime = 0x190; // float
		constexpr auto EventVelocity = 0x194; // FVector
		constexpr auto EventParticleTime = 0x1a0; // float
		constexpr auto EventNormal = 0x1a4; // FVector
		constexpr auto UseRelfectedImpactVector = 0x1b0; // uint32_t : 1
	}

	namespace n_ADynamicTriggerVolume {
		constexpr auto bEnabled = 0x2a8; // uint32_t : 1
	}

	namespace n_UMcpIdMappingBase {
		constexpr auto McpIdMappingClassName = 0x78; // FString
		constexpr auto __OnAddMappingComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryMappingsComplete__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_URPC_SearchPsyTag_X {
		constexpr auto PsyTagName = 0xe8; // FString
		constexpr auto PsyTagCode = 0xf8; // int32_t
		constexpr auto PageIndex = 0xfc; // int32_t
		constexpr auto PageSize = 0x100; // int32_t
		constexpr auto SortType = 0x108; // FString
		constexpr auto TotalRows = 0x118; // int32_t
		constexpr auto MatchedPlayers = 0x120; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_PartyInvite_TA {
		constexpr auto Invites = 0x98; // TArray<FInviteDatabind>
		constexpr auto PendingInvites = 0xa8; // TArray<FInviteTarget>
		constexpr auto SilentSentInvites = 0xb8; // TArray<FUniqueNetId>
		constexpr auto PsyNetParty = 0xc8; // ObjectProperty
		constexpr auto OnlineGameParty = 0xd0; // ObjectProperty
		constexpr auto CrossplayConfig = 0xd8; // ObjectProperty
		constexpr auto PersonasData = 0xe0; // ObjectProperty
		constexpr auto __SendPartyInvitation__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_U__ProductAttribute_UnlockForcedProducts_TA__ContainsSlotToUnlock_A0EA87B446C2420337D4E58BB6CCB435 {
		constexpr auto SlotToFind = 0x60; // ObjectProperty
	}

	namespace n_URadialBlurComponent {
		constexpr auto Material = 0xa0; // ObjectProperty
		constexpr auto DepthPriorityGroup = 0xa8; // ESceneDepthPriorityGroup
		constexpr auto BlurScale = 0xac; // float
		constexpr auto BlurFalloffExponent = 0xb0; // float
		constexpr auto BlurOpacity = 0xb4; // float
		constexpr auto MaxCullDistance = 0xb8; // float
		constexpr auto DistanceFalloffExponent = 0xbc; // float
		constexpr auto bRenderAsVelocity = 0xc0; // uint32_t : 1
		constexpr auto bEnabled = 0xc0; // uint32_t : 1
		constexpr auto LocalToWorld = 0xd0; // FMatrix
	}

	namespace n_UProductAttribute_SwapMICParameterValues_TA {
		constexpr auto Parameters = 0x80; // TArray<FMICSwapParameters>
	}

	namespace n_UInterpTrackInstHeadTracking {
		constexpr auto Action = 0x60; // EHeadTrackingAction
		constexpr auto CurrentActorMap = 0x68; // TMap<None, None>
		constexpr auto Mesh = 0xb8; // ComponentProperty
		constexpr auto TrackControls = 0xc0; // TArray<ObjectProperty>
		constexpr auto LastUpdatePosition = 0xd0; // float
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xc8; // FParticleRandomSeedInfo
	}

	namespace n_UTMetricsShared_TA {
		constexpr auto PreLoadMapTime = 0x60; // float
		constexpr auto LevelLoadTime = 0x64; // float
	}

	namespace n_UPsyNetService_DSReservation_X {
		constexpr auto Reservation = 0x90; // FPsyNetBeaconReservation
	}

	namespace n_UParticleSystemComponent {
		constexpr auto VfTable_IISetParameter = 0x258; // FPointer
		constexpr auto Template = 0x260; // ObjectProperty
		constexpr auto LightEnvironmentClass = 0x268; // FNone*
		constexpr auto LightEnvironmentSharedInstigator = 0x270; // ObjectProperty
		constexpr auto MaxLightEnvironmentPooledReuses = 0x278; // int32_t
		constexpr auto EmitterInstances = 0x280; // TArray<FPointer>
		constexpr auto SMComponents = 0x290; // TArray<ComponentProperty>
		constexpr auto SMMaterialInterfaces = 0x2a0; // TArray<ObjectProperty>
		constexpr auto SkelMeshComponents = 0x2b0; // TArray<ComponentProperty>
		constexpr auto ViewMBInfoArray = 0x2c0; // TArray<FViewParticleEmitterInstanceMotionBlurInfo>
		constexpr auto bAutoActivate = 0x2d0; // uint32_t : 1
		constexpr auto bWasCompleted = 0x2d0; // uint32_t : 1
		constexpr auto bSuppressSpawning = 0x2d0; // uint32_t : 1
		constexpr auto bWasDeactivated = 0x2d0; // uint32_t : 1
		constexpr auto bResetOnDetach = 0x2d0; // uint32_t : 1
		constexpr auto bUpdateOnDedicatedServer = 0x2d0; // uint32_t : 1
		constexpr auto bJustAttached = 0x2d0; // uint32_t : 1
		constexpr auto bIsActive = 0x2d0; // uint32_t : 1
		constexpr auto bHasBeenActivated = 0x2d0; // uint32_t : 1
		constexpr auto bWarmingUp = 0x2d0; // uint32_t : 1
		constexpr auto bIsCachedInPool = 0x2d0; // uint32_t : 1
		constexpr auto bOverrideLODMethod = 0x2d0; // uint32_t : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x2d0; // uint32_t : 1
		constexpr auto bSkipBoundsUpdate = 0x2d0; // uint32_t : 1
		constexpr auto bUpdateComponentInTick = 0x2d0; // uint32_t : 1
		constexpr auto bDeferredBeamUpdate = 0x2d0; // uint32_t : 1
		constexpr auto bForcedInActive = 0x2d0; // uint32_t : 1
		constexpr auto bIsWarmingUp = 0x2d0; // uint32_t : 1
		constexpr auto bIsViewRelevanceDirty = 0x2d0; // uint32_t : 1
		constexpr auto bRecacheViewRelevance = 0x2d0; // uint32_t : 1
		constexpr auto bParticleRequiresUpdateInTick = 0x2d0; // uint32_t : 1
		constexpr auto bLODUpdatePending = 0x2d0; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0x2d0; // uint32_t : 1
		constexpr auto LastDetailMode = 0x2d4; // char
		constexpr auto LODMethod = 0x2d5; // ParticleSystemLODMethod
		constexpr auto ReplayState = 0x2d6; // ParticleReplayState
		constexpr auto InstanceParameters = 0x2d8; // TArray<FParticleSysParam>
		constexpr auto OldPosition = 0x2e8; // FVector
		constexpr auto PartSysVelocity = 0x2f4; // FVector
		constexpr auto WarmupTime = 0x300; // float
		constexpr auto WarmupTickRate = 0x304; // float
		constexpr auto LODLevel = 0x308; // int32_t
		constexpr auto SecondsBeforeInactive = 0x30c; // float
		constexpr auto TimeSinceLastForceUpdateTransform = 0x310; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x314; // float
		constexpr auto EditorLODLevel = 0x318; // int32_t
		constexpr auto EditorDetailMode = 0x31c; // int32_t
		constexpr auto AccumTickTime = 0x320; // float
		constexpr auto CachedViewRelevanceFlags = 0x328; // TArray<FMaterialViewRelevance>
		constexpr auto ReplayClips = 0x338; // TArray<ObjectProperty>
		constexpr auto ReplayClipIDNumber = 0x348; // int32_t
		constexpr auto ReplayFrameIndex = 0x34c; // int32_t
		constexpr auto AccumLODDistanceCheckTime = 0x350; // float
		constexpr auto SpawnEvents = 0x358; // TArray<FParticleEventSpawnData>
		constexpr auto DeathEvents = 0x368; // TArray<FParticleEventDeathData>
		constexpr auto CollisionEvents = 0x378; // TArray<FParticleEventCollideData>
		constexpr auto KismetEvents = 0x388; // TArray<FParticleEventKismetData>
		constexpr auto AttractorCollisionEvents = 0x398; // TArray<FParticleEventAttractorCollideData>
		constexpr auto ReleaseResourcesFence = 0x3a8; // FPointer
		constexpr auto CustomTimeDilation = 0x3b0; // float
		constexpr auto EmitterDelay = 0x3b4; // float
		constexpr auto FakeVelocity = 0x3b8; // FVector
		constexpr auto __OnSystemFinished__Delegate = 0x3c8; // DelegateProperty
	}

	namespace n_UAnimNotify_AkEvent {
		constexpr auto AkEvent = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // uint32_t : 1
		constexpr auto BoneName = 0x74; // FName
	}

	namespace n_AFXActor_Ball_TA {
		constexpr auto SuperSonicSpeed = 0x360; // float
		constexpr auto MaxGoalProximityDistance = 0x364; // float
		constexpr auto BallFadeInSpeed = 0x368; // float
		constexpr auto BallFadeOutSpeed = 0x36c; // float
		constexpr auto TrailOpacityLerpSpeed = 0x370; // float
		constexpr auto CurrentTrailOpacity = 0x374; // float
		constexpr auto BallFadeSpeed = 0x378; // float
		constexpr auto BallFadeOpacity = 0x37c; // float
		constexpr auto ShockwaveParamMin = 0x380; // float
		constexpr auto ShockwaveParamMax = 0x384; // float
		constexpr auto ShockwaveParamTime = 0x388; // float
		constexpr auto InAirState = 0x390; // ObjectProperty
		constexpr auto SuperSonicState = 0x398; // ObjectProperty
		constexpr auto Ball = 0x3a0; // ObjectProperty
		constexpr auto TouchingWorldTime = 0x3a8; // float
		constexpr auto bInAir = 0x3ac; // uint32_t : 1
		constexpr auto bSuperSonic = 0x3ac; // uint32_t : 1
		constexpr auto CurrentTrailDilation = 0x3b0; // float
		constexpr auto MaxTrailDilation = 0x3b4; // float
		constexpr auto TrailIntensityName = 0x3b8; // FName
	}

	namespace n_UActorFactoryDynamicSM {
		constexpr auto StaticMesh = 0xa0; // ObjectProperty
		constexpr auto DrawScale3D = 0xa8; // FVector
		constexpr auto bNoEncroachCheck = 0xb4; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xb4; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0xb4; // uint32_t : 1
		constexpr auto bUseCompartment = 0xb4; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xb4; // uint32_t : 1
		constexpr auto CollisionType = 0xb8; // ECollisionType
	}

	namespace n_U__GFxData_Products_TA__LoadProduct_6E11030641BF930D4F3C55B6A947233D {
		constexpr auto InHashID = 0x60; // FProductHashID
		constexpr auto ThumbnailSize = 0x64; // EProductThumbnailSize
	}

	namespace n_UProductAsset_SupersonicTrail_TA {
		constexpr auto FXActor = 0xf8; // ObjectProperty
		constexpr auto LeftFXActor = 0x100; // ObjectProperty
		constexpr auto RightFXActor = 0x108; // ObjectProperty
		constexpr auto AkEnterSound = 0x110; // ObjectProperty
		constexpr auto AkLoopSound = 0x118; // ObjectProperty
	}

	namespace n_USeqAct_CinematicIntroStartNextSeq_TA {
		constexpr auto CurrentSequenceIndex = 0x160; // int32_t
		constexpr auto __EventActivated__Delegate = 0x168; // DelegateProperty
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x268; // ComponentProperty
		constexpr auto bEnabled = 0x270; // uint32_t : 1
	}

	namespace n_UBTComponent {
		constexpr auto Root = 0x70; // ObjectProperty
		constexpr auto RootStatus = 0x78; // EBTStatus
		constexpr auto AI = 0x80; // ObjectProperty
		constexpr auto bPrintStatusLogs = 0x88; // uint32_t : 1
		constexpr auto bDirtyStatusLogs = 0x88; // uint32_t : 1
		constexpr auto bEvaluatingConditions = 0x88; // uint32_t : 1
		constexpr auto bPauseNextTick = 0x88; // uint32_t : 1
		constexpr auto StatusLogs = 0x90; // TArray<FBTStatusLog>
		constexpr auto StatusLogsIndex = 0xa0; // int32_t
		constexpr auto StatusLogsStack = 0xa8; // TArray<int32_t>
		constexpr auto CanvasDrawer = 0xb8; // ObjectProperty
		constexpr auto DynamicLinks = 0xc0; // TArray<FBTDynamicLinkData>
		constexpr auto __EventDynamicLinksChanged__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_U__AchievementManager_TA__IsPlayingWithClubmates_273A70FA4AADC9ED8AB476938E41261A {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_UMutator_Demolish_TA {
		constexpr auto DemolishTarget = 0x68; // EDemolishTarget
		constexpr auto DemolishSpeed = 0x69; // EDemolishSpeed
	}

	namespace n_AReplicatedActor_ORS {
		constexpr auto ReplicatedOwner = 0x268; // ObjectProperty
	}

	namespace n_UAssetAttribute_SoundOverrides_TA {
		constexpr auto SoundOverrides = 0x60; // TArray<FFXAttachmentSoundOverride>
	}

	namespace n_USeqAct_ScreenFade_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto FadeColor = 0x168; // FColor
		constexpr auto FadeTime = 0x16c; // float
		constexpr auto bFadeAudio = 0x170; // uint32_t : 1
	}

	namespace n_USeqAct_SetReplayCamera_TA {
		constexpr auto FocusActor = 0x160; // FString
		constexpr auto LocationOffset = 0x170; // FVector
		constexpr auto Rotation = 0x17c; // FRotator
		constexpr auto FOV = 0x188; // float
	}

	namespace n_USeqEvent_CarSpawned_TA {
		constexpr auto PlayerName = 0x180; // FString
	}

	namespace n_UProductAttribute_Blueprint_TA {
		constexpr auto ProductID = 0x80; // int32_t
		constexpr auto CachedBlueprintSeriesID = 0x84; // int32_t
	}

	namespace n_UAnimNodeBlendList {
		constexpr auto TargetWeight = 0x148; // TArray<float>
		constexpr auto BlendTimeToGo = 0x158; // float
		constexpr auto ActiveChildIndex = 0x15c; // int32_t
		constexpr auto bPlayActiveChild = 0x160; // uint32_t : 1
		constexpr auto bForceChildFullWeightWhenBecomingRelevant = 0x160; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x160; // uint32_t : 1
		constexpr auto SliderPosition = 0x164; // float
		constexpr auto EditorActiveChildIndex = 0x168; // int32_t
	}

	namespace n_UAnimNodeSequenceBlendByAim {
		constexpr auto Aim = 0x1b8; // FVector2D
		constexpr auto PreviousAim = 0x1c0; // FVector2D
		constexpr auto HorizontalRange = 0x1c8; // FVector2D
		constexpr auto VerticalRange = 0x1d0; // FVector2D
		constexpr auto AngleOffset = 0x1d8; // FVector2D
		constexpr auto AnimName_LU = 0x1e0; // FName
		constexpr auto AnimName_LC = 0x1e8; // FName
		constexpr auto AnimName_LD = 0x1f0; // FName
		constexpr auto AnimName_CU = 0x1f8; // FName
		constexpr auto AnimName_CC = 0x200; // FName
		constexpr auto AnimName_CD = 0x208; // FName
		constexpr auto AnimName_RU = 0x210; // FName
		constexpr auto AnimName_RC = 0x218; // FName
		constexpr auto AnimName_RD = 0x220; // FName
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_AFXActor_Boost_TA {
		constexpr auto ParametersPerExtraBoostSockets = 0x360; // TArray<FParticleParameterSet>
		constexpr auto BodyParticleParameters = 0x370; // TArray<FParticleBodyParameterSet>
		constexpr auto DryFireSound = 0x380; // ObjectProperty
		constexpr auto CarBoostGlowColor = 0x388; // FLinearColor
		constexpr auto BoostMeshMaterialParams = 0x398; // TArray<FAnimatedMaterialMesh>
		constexpr auto BoostMeshMaterialOverrides = 0x3a8; // TArray<FBoostMeshMaterialOverride>
		constexpr auto BoostMeshArchetype = 0x3b8; // ObjectProperty
		constexpr auto BoostMesh = 0x3c0; // ObjectProperty
		constexpr auto BoostMeshFadeInTime = 0x3c8; // FRandomRange
		constexpr auto BoostMeshFadeOutTime = 0x3d0; // FRandomRange
		constexpr auto MultipleBoostsOverride = 0x3d8; // TArray<ComponentProperty>
		constexpr auto BoostEmitterSocketBehavior = 0x3e8; // EmitterSocketBehavior
		constexpr auto PreviewParticleOverrides = 0x3f0; // TArray<FPreviewParticleOverride>
		constexpr auto bWasBoosting = 0x400; // uint32_t : 1
		constexpr auto bWasInputBoosting = 0x400; // uint32_t : 1
		constexpr auto MaxBoostMeshMaterialTime = 0x404; // float
		constexpr auto Vehicle = 0x408; // ObjectProperty
		constexpr auto CarPreview = 0x410; // ObjectProperty
		constexpr auto CarMesh = 0x418; // ComponentProperty
	}

	namespace n_UMapPrefsSave_TA {
		constexpr auto MapPrefs = 0xc8; // TArray<FPlaylistMapPrefs>
		constexpr auto SelectedFreeplayMap = 0xd8; // FName
		constexpr auto __EventUsedAllMapVotes__Delegate = 0xe0; // DelegateProperty
	}

	namespace n_UPlatformMetrics_TA {
		constexpr auto bDroveWithGP = 0x80; // uint32_t : 1
		constexpr auto bDroveWithKBM = 0x80; // uint32_t : 1
	}

	namespace n_UTourList_TA {
		constexpr auto Tournaments = 0x70; // TArray<ObjectProperty>
		constexpr auto Results = 0x80; // TArray<FTourResult>
		constexpr auto __EventTournamentsChanged__Delegate = 0x90; // DelegateProperty
		constexpr auto __EventTournamentAdded__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventResultsChanged__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UMatchmakingViewFilter_Casual_TA {
		constexpr auto MicroEventConfig = 0x60; // TScriptInterface<Class>
		constexpr auto Playlists = 0x70; // TScriptInterface<Class>
	}

	namespace n_UOnlineProductStoreSet_TA {
		constexpr auto Player = 0xc0; // ObjectProperty
		constexpr auto PlayerID = 0xc8; // FUniqueNetId
	}

	namespace n_UAchievement_TA {
		constexpr auto Type = 0x60; // EAchievementType
		constexpr auto LocalId = 0x64; // int32_t
	}

	namespace n_UPBRuleNodeCorner {
		constexpr auto CornerSize = 0x98; // float
		constexpr auto Angles = 0xa0; // TArray<FRBCornerAngleInfo>
		constexpr auto FlatThreshold = 0xb0; // float
		constexpr auto bNoMeshForConcaveCorners = 0xb4; // uint32_t : 1
		constexpr auto bUseAdjacentRulesetForRightGap = 0xb4; // uint32_t : 1
		constexpr auto CornerType = 0xb8; // EPBCornerType
		constexpr auto CornerShapeOffset = 0xbc; // float
		constexpr auto RoundTesselation = 0xc0; // int32_t
		constexpr auto RoundCurvature = 0xc4; // float
	}

	namespace n_URPC_TrainingEditor_ListPlayerTrainingData_TA {
		constexpr auto Codes = 0xe8; // TArray<FString>
	}

	namespace n_U__RPCQueue_X__CreateBatch_EB0EF1CA4A1ABBDCE54793ABED9950F9 {
		constexpr auto Batch = 0x60; // ObjectProperty
	}

	namespace n_UMeshBeaconHost {
		constexpr auto ClientConnections = 0xa8; // TArray<FClientMeshBeaconConnection>
		constexpr auto PendingPlayerConnections = 0xb8; // TArray<FUniqueNetId>
		constexpr auto OwningPlayerId = 0xc8; // FUniqueNetId
		constexpr auto bAllowBandwidthTesting = 0x110; // uint32_t : 1
		constexpr auto ConnectionBacklog = 0x114; // int32_t
		constexpr auto __OnReceivedClientConnectionRequest__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnStartedBandwidthTest__Delegate = 0x130; // DelegateProperty
		constexpr auto __OnFinishedBandwidthTest__Delegate = 0x148; // DelegateProperty
		constexpr auto __OnAllPendingPlayersConnected__Delegate = 0x160; // DelegateProperty
		constexpr auto __OnReceivedClientCreateNewSessionResult__Delegate = 0x178; // DelegateProperty
	}

	namespace n_UPremiumSkinSet_TA {
		constexpr auto Body = 0x60; // ObjectProperty
		constexpr auto Skins = 0x68; // TArray<FPremiumSkinSetItem>
	}

	namespace n_UProductAttribute_ShopItem_TA {
		constexpr auto ShopItemReference = 0x80; // ObjectProperty
	}

	namespace n_U__GFxData_Clubs_TA__AcceptClubInvite_F3596A0B45F5AFF7B258AF8E76FE5A1B {
		constexpr auto Notification = 0x60; // ObjectProperty
	}

	namespace n_UUIRoot {
		constexpr auto BadCapsLocContexts = 0x60; // TArray<FString>
	}

	namespace n_UOnlinePlayerFriends_TA {
		constexpr auto __EventPsyNetRecentPlayers__Delegate = 0x328; // DelegateProperty
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x88; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x98; // FString
		constexpr auto LastErrorSolution = 0xa8; // FString
	}

	namespace n_ABall_God_TA {
		constexpr auto WallBounceSpeed = 0xa40; // float
		constexpr auto WallBounceBlend = 0xa44; // float
		constexpr auto WallBounceBackDistance = 0xa48; // float
		constexpr auto TargetBlendScaleXY = 0xa4c; // float
		constexpr auto TargetBlendScaleZ = 0xa50; // float
		constexpr auto TargetSpeed = 0xa54; // float
		constexpr auto TargetSpeedIncrement = 0xa58; // float
		constexpr auto TargetSpeedBlend = 0xa5c; // float
		constexpr auto MaxVelocityPitch = 0xa60; // float
		constexpr auto LastSpeedIncrementTime = 0xa64; // float
		constexpr auto TargetSpeedIncrementTime = 0xa68; // float
		constexpr auto MinGlowBrightness = 0xa6c; // float
		constexpr auto MaxGlowBrightness = 0xa70; // float
		constexpr auto PulseSpeedScale = 0xa74; // float
		constexpr auto PulseBrightnessScale = 0xa78; // float
		constexpr auto PulseMinBrightness = 0xa7c; // float
		constexpr auto PulseLifetime = 0xa80; // float
		constexpr auto GlowDefaultColor = 0xa84; // FLinearColor
		constexpr auto MaxSpeedColor = 0xa94; // FLinearColor
		constexpr auto AudioCurveName = 0xaa4; // FName
		constexpr auto AudioIntensityName = 0xaac; // FName
		constexpr auto FXEvent_TeamChanged = 0xab8; // ObjectProperty
		constexpr auto FXEvent_IntensityChanged = 0xac0; // ObjectProperty
	}

	namespace n_UGFxData_IntroCarSelect_TA {
		constexpr auto ModalProcessing = 0x98; // ObjectProperty
		constexpr auto CarBodyName = 0xa0; // FString
		constexpr auto FTE = 0xb0; // ObjectProperty
	}

	namespace n_UDynamicValueModifierCurve_X {
		constexpr auto Curve = 0x78; // FInterpCurveFloat
		constexpr auto __GetValueDelegate__Delegate = 0x90; // DelegateProperty
	}

	namespace n_U__ArenaSoundConfig_TA__GetNextEvent_89B9754946BCC30F109759BED56DF521 {
		constexpr auto MapName = 0x60; // FName
		constexpr auto CurrentTime = 0x68; // QWordProperty
	}

	namespace n_UAnimNotify_Sound {
		constexpr auto SoundCue = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // uint32_t : 1
		constexpr auto bIgnoreIfActorHidden = 0x70; // uint32_t : 1
		constexpr auto BoneName = 0x74; // FName
		constexpr auto PercentToPlay = 0x7c; // float
		constexpr auto VolumeMultiplier = 0x80; // float
		constexpr auto PitchMultiplier = 0x84; // float
	}

	namespace n_UNavMeshGoalFilter_MinPathDistance {
		constexpr auto MinDistancePathShouldBe = 0x70; // int32_t
	}

	namespace n_AFXActor_X {
		constexpr auto SpawnState = 0x268; // ObjectProperty
		constexpr auto ActivationState = 0x270; // ObjectProperty
		constexpr auto Attachments = 0x278; // TArray<FFXAttachment>
		constexpr auto Locality = 0x288; // EFXLocality
		constexpr auto SocketOrBoneName = 0x28c; // FName
		constexpr auto bDeactivateWhenOwnerDestroyed = 0x294; // uint32_t : 1
		constexpr auto bAllowShadowCasting = 0x294; // uint32_t : 1
		constexpr auto bAutoActivate = 0x294; // uint32_t : 1
		constexpr auto bRenderInactive = 0x294; // uint32_t : 1
		constexpr auto bActive = 0x294; // uint32_t : 1
		constexpr auto bHadOwner = 0x294; // uint32_t : 1
		constexpr auto Parent = 0x298; // ObjectProperty
		constexpr auto AttachmentActor = 0x2a0; // ObjectProperty
		constexpr auto FXStates = 0x2a8; // TArray<ObjectProperty>
		constexpr auto FXEvents = 0x2b8; // TArray<FFXActorEventCheck>
		constexpr auto DestroyWaitTime = 0x2c8; // float
		constexpr auto DestroyTime = 0x2cc; // float
		constexpr auto Parameters = 0x2d0; // ComponentProperty
		constexpr auto EditID = 0x2d8; // int32_t
		constexpr auto EventSubscriptions = 0x2e0; // TArray<FFXEventSubscription>
		constexpr auto AnimationEndState = 0x2f0; // ObjectProperty
		constexpr auto __EventFXStatePushed__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __EventFXStatePopped__Delegate = 0x310; // DelegateProperty
	}

	namespace n_URetryDelay_X {
		constexpr auto Id = 0x60; // FName
		constexpr auto DelaySeconds = 0x68; // TArray<float>
	}

	namespace n_UControllerLayoutStack {
		constexpr auto CurrentLayout = 0x60; // FName
		constexpr auto LayoutStack = 0x68; // TArray<FControllerLayout>
		constexpr auto ControllerLayout_Gameplay = 0x78; // FName
		constexpr auto ControllerLayout_Menu = 0x80; // FName
		constexpr auto ControllerLayout_ReplayViewer = 0x88; // FName
		constexpr auto ControllerLayout_Spectator = 0x90; // FName
		constexpr auto ControllerLayout_TrainingEditor = 0x98; // FName
		constexpr auto ControllerLayoutPriority_Default = 0xa0; // int32_t
		constexpr auto ControllerLayoutPriority_Menu = 0xa4; // int32_t
	}

	namespace n_UErrors_TA {
		constexpr auto ReplayImport = 0x80; // ObjectProperty
		constexpr auto ReplayExport = 0x88; // ObjectProperty
		constexpr auto ReplayNoReplay = 0x90; // ObjectProperty
		constexpr auto ReplayExportNoSpace = 0x98; // ObjectProperty
		constexpr auto UpdateRequired = 0xa0; // ObjectProperty
		constexpr auto TradeInMaxed = 0xa8; // ObjectProperty
		constexpr auto TransactionInProgress = 0xb0; // ObjectProperty
		constexpr auto OrderNotFound = 0xb8; // ObjectProperty
		constexpr auto InventoryOutOfSync = 0xc0; // ObjectProperty
		constexpr auto TimedOut = 0xc8; // ObjectProperty
		constexpr auto TrainingModeNotFound = 0xd0; // ObjectProperty
		constexpr auto TrainingModeInvalidFavoritedCodes = 0xd8; // ObjectProperty
		constexpr auto TrainingModeListPlayerTrainingFailed = 0xe0; // ObjectProperty
		constexpr auto TrainingModeAddFailed = 0xe8; // ObjectProperty
		constexpr auto TrainingModeUpdateFailed = 0xf0; // ObjectProperty
		constexpr auto TrainingNameInvalid = 0xf8; // ObjectProperty
		constexpr auto CodeIsNotValid = 0x100; // ObjectProperty
		constexpr auto CodeHasBeenRedeemed = 0x108; // ObjectProperty
		constexpr auto CodeMaxIncorrectAttempts = 0x110; // ObjectProperty
		constexpr auto GarageSlotIsLocked = 0x118; // ObjectProperty
		constexpr auto GarageSlotAlreadyUnlocked = 0x120; // ObjectProperty
		constexpr auto GarageSlotCostNotFound = 0x128; // ObjectProperty
		constexpr auto GarageNotEnoughCurrency = 0x130; // ObjectProperty
		constexpr auto LoadoutTemplateDoesNotExist = 0x138; // ObjectProperty
		constexpr auto PlayerAlreadyLinked = 0x140; // ObjectProperty
		constexpr auto InvalidPlayerPlatformAuth = 0x148; // ObjectProperty
		constexpr auto OnlineAchievementsSaveDataNotFound = 0x150; // ObjectProperty
		constexpr auto ShopItemPlayerPurchaseMax = 0x158; // ObjectProperty
		constexpr auto MicrotransactionProductPurchaseLimitReached = 0x160; // ObjectProperty
		constexpr auto TwoFactorAuthenticationRequired = 0x168; // ObjectProperty
		constexpr auto MatchHasConcluded = 0x170; // ObjectProperty
	}

	namespace n_UStatusObserver_FTE_TA {
		constexpr auto LastGroupCompleted = 0xa0; // FName
		constexpr auto FTEManager = 0xa8; // ObjectProperty
	}

	namespace n_UItemPoolSelection_TA {
		constexpr auto ConcurrentItemCount = 0x70; // int32_t
		constexpr auto bPreviewItems = 0x74; // uint32_t : 1
		constexpr auto LastDispensedItems = 0x78; // TArray<ObjectProperty>
		constexpr auto DemolishedItems = 0x88; // TArray<ObjectProperty>
		constexpr auto OriginalPickupCooldownSeconds = 0x98; // int32_t
		constexpr auto CooldownSecondsAtPreviousGoal = 0x9c; // int32_t
		constexpr auto ActivePickup = 0xa0; // ObjectProperty
	}

	namespace n_UClientInputData_TA {
		constexpr auto PC = 0x60; // ObjectProperty
		constexpr auto InputFrames = 0x68; // TArray<FClientFrameData>
		constexpr auto LastPacketTimestamp = 0x78; // float
		constexpr auto LastProcessedFrame = 0x7c; // int32_t
		constexpr auto LastProcessedReceivedFrame = 0x80; // int32_t
	}

	namespace n_ASpecialPickup_Batarang_TA {
		constexpr auto SpinSpeed = 0x570; // float
		constexpr auto CurRotation = 0x574; // float
	}

	namespace n_APRI_TA {
		constexpr auto MatchScore = 0x458; // int32_t
		constexpr auto MatchGoals = 0x45c; // int32_t
		constexpr auto MatchOwnGoals = 0x460; // int32_t
		constexpr auto MatchAssists = 0x464; // int32_t
		constexpr auto MatchSaves = 0x468; // int32_t
		constexpr auto MatchShots = 0x46c; // int32_t
		constexpr auto MatchDemolishes = 0x470; // int32_t
		constexpr auto MatchBonusXP = 0x474; // int32_t
		constexpr auto MatchBreakoutDamage = 0x478; // int32_t
		constexpr auto bMatchMVP = 0x47c; // uint32_t : 1
		constexpr auto bMatchAdmin = 0x47c; // uint32_t : 1
		constexpr auto bLoadoutSet = 0x47c; // uint32_t : 1
		constexpr auto bOnlineLoadoutSet = 0x47c; // uint32_t : 1
		constexpr auto bLoadoutsSet = 0x47c; // uint32_t : 1
		constexpr auto bOnlineLoadoutsSet = 0x47c; // uint32_t : 1
		constexpr auto bServerSetTeamLoadoutLocked = 0x47c; // uint32_t : 1
		constexpr auto bTeamPaintSet = 0x47c; // uint32_t : 1
		constexpr auto bReady = 0x47c; // uint32_t : 1
		constexpr auto bIsDistracted = 0x47c; // uint32_t : 1
		constexpr auto bUsingSecondaryCamera = 0x47c; // uint32_t : 1
		constexpr auto bUsingBehindView = 0x47c; // uint32_t : 1
		constexpr auto bUsingFreecam = 0x47c; // uint32_t : 1
		constexpr auto bIsInSplitScreen = 0x47c; // uint32_t : 1
		constexpr auto bStartVoteToForfeitDisabled = 0x47c; // uint32_t : 1
		constexpr auto bUsingItems = 0x47c; // uint32_t : 1
		constexpr auto PlayerHistoryValid = 0x47c; // uint32_t : 1
		constexpr auto bIdleBanned = 0x47c; // uint32_t : 1
		constexpr auto GameEvent = 0x480; // ObjectProperty
		constexpr auto ReplicatedGameEvent = 0x488; // ObjectProperty
		constexpr auto Car = 0x490; // ObjectProperty
		constexpr auto FullLoadouts = 0x498; // FLoadoutData [0x2]
		constexpr auto FullLoadoutAttributes = 0x518; // FLoadoutAttributesArray [0x2]
		constexpr auto FullOnlineLoadout = 0x538; // FClientLoadoutOnlineData [0x2]
		constexpr auto ClientLoadout = 0x558; // FClientLoadoutData
		constexpr auto ClientLoadoutOnline = 0x568; // FClientLoadoutOnlineData
		constexpr auto ClientLoadouts = 0x578; // FClientLoadoutDatas
		constexpr auto ClientLoadoutsOnline = 0x598; // FClientLoadoutOnlineDatas
		constexpr auto OnlineProductStats = 0x5c0; // TArray<FOnlineProductStat>
		constexpr auto TeamPaint = 0x5d0; // FLoadoutTeamPaint
		constexpr auto MatchStats = 0x5e0; // TArray<FTAPlayerStat>
		constexpr auto WaitingStartTime = 0x5f0; // int32_t
		constexpr auto TotalGameTimePlayed = 0x5f4; // float
		constexpr auto PersistentCamera = 0x5f8; // ObjectProperty
		constexpr auto Camera = 0x600; // ObjectProperty
		constexpr auto CameraSettings = 0x608; // FProfileCameraSettings
		constexpr auto CameraPitch = 0x624; // char
		constexpr auto CameraYaw = 0x625; // char
		constexpr auto PawnType = 0x626; // EPawnType
		constexpr auto PlayerHistoryKey = 0x627; // char [0x40]
		constexpr auto ReplicatedWorstNetQualityBeyondLatency = 0x667; // EConnectionQualityState
		constexpr auto QuitSeverity = 0x668; // ESeverityType
		constexpr auto ProductStats = 0x670; // TArray<ObjectProperty>
		constexpr auto PendingProductStatValues = 0x680; // TArray<FProductStat>
		constexpr auto PartyLeader = 0x690; // FUniqueNetId
		constexpr auto Title = 0x6d8; // FName
		constexpr auto SkillTier = 0x6e0; // FSkillTierData
		constexpr auto DodgeInputThreshold = 0x6e8; // float
		constexpr auto SteeringSensitivity = 0x6ec; // float
		constexpr auto AirControlSensitivity = 0x6f0; // float
		constexpr auto StatCooldowns = 0x6f8; // TArray<FStatCooldown>
		constexpr auto BoostPickups = 0x708; // int32_t
		constexpr auto BallTouches = 0x70c; // int32_t
		constexpr auto CarTouches = 0x710; // int32_t
		constexpr auto PREI = 0x718; // ObjectProperty
		constexpr auto ReplacingBotPRI = 0x720; // ObjectProperty
		constexpr auto PrimaryTitle = 0x728; // FMemberTitleStat
		constexpr auto SecondaryTitle = 0x748; // FMemberTitleStat
		constexpr auto PlayerGoalExplosion = 0x768; // ObjectProperty
		constexpr auto PlayerBanner = 0x770; // ComponentProperty
		constexpr auto PlayerAvatar = 0x778; // ComponentProperty
		constexpr auto PlayerBorder = 0x780; // ComponentProperty
		constexpr auto PlayerMusicStinger = 0x788; // ObjectProperty
		constexpr auto BotProductName = 0x790; // FName
		constexpr auto BotAvatarProductID = 0x798; // int32_t
		constexpr auto BotBannerProductID = 0x79c; // int32_t
		constexpr auto ClubID = 0x7a0; // QWordProperty
		constexpr auto PublicIP = 0x7a8; // FString
		constexpr auto SpectatorShortcut = 0x7b8; // int32_t
		constexpr auto CarDistanceTracker = 0x7c0; // ObjectProperty
		constexpr auto StayAsPartyVoter = 0x7c8; // ObjectProperty
		constexpr auto StayAsPartyVoteYes = 0x7d0; // ObjectProperty
		constexpr auto PickupTimer = 0x7d8; // ObjectProperty
		constexpr auto TimeTillItem = 0x7e0; // int32_t
		constexpr auto MaxTimeTillItem = 0x7e4; // int32_t
		constexpr auto ProductsConfig = 0x7e8; // ObjectProperty
		constexpr auto __EventGameEventChanged__Delegate = 0x7f0; // DelegateProperty
		constexpr auto __EventStatEvent__Delegate = 0x808; // DelegateProperty
		constexpr auto __EventRequestedLoadout__Delegate = 0x820; // DelegateProperty
		constexpr auto __EventSelectedLoadout__Delegate = 0x838; // DelegateProperty
		constexpr auto __EventVanityChanged__Delegate = 0x850; // DelegateProperty
		constexpr auto __EventStatTickerMessage__Delegate = 0x868; // DelegateProperty
		constexpr auto __EventInvalidPsyonixID__Delegate = 0x880; // DelegateProperty
		constexpr auto __EventReadyChanged__Delegate = 0x898; // DelegateProperty
		constexpr auto __EventCarPreUpdate__Delegate = 0x8b0; // DelegateProperty
		constexpr auto __EventCarSet__Delegate = 0x8c8; // DelegateProperty
		constexpr auto __EventSplitScreenStatusChanged__Delegate = 0x8e0; // DelegateProperty
		constexpr auto __EventDistracted__Delegate = 0x8f8; // DelegateProperty
		constexpr auto __EventPersistentCameraSet__Delegate = 0x910; // DelegateProperty
		constexpr auto __EventCameraChanged__Delegate = 0x928; // DelegateProperty
		constexpr auto __EventPartyLeaderChanged__Delegate = 0x940; // DelegateProperty
		constexpr auto __EventScorePoint__Delegate = 0x958; // DelegateProperty
		constexpr auto __EventWonMVP__Delegate = 0x970; // DelegateProperty
		constexpr auto __EventStatTitlesSet__Delegate = 0x988; // DelegateProperty
		constexpr auto __EventPawnTypeChanged__Delegate = 0x9a0; // DelegateProperty
		constexpr auto __EventCommittedStats__Delegate = 0x9b8; // DelegateProperty
		constexpr auto __EventStartVoteToForfeitDisabledChanged__Delegate = 0x9d0; // DelegateProperty
		constexpr auto __EventTitleChanged__Delegate = 0x9e8; // DelegateProperty
		constexpr auto __EventSkillTierChanged__Delegate = 0xa00; // DelegateProperty
		constexpr auto __EventServerChangeTeamFailed__Delegate = 0xa18; // DelegateProperty
		constexpr auto __EventScoredGoal__Delegate = 0xa30; // DelegateProperty
		constexpr auto __EventReplacingBotChanged__Delegate = 0xa48; // DelegateProperty
		constexpr auto __EventMatchAdmin__Delegate = 0xa60; // DelegateProperty
		constexpr auto __EventServerUnlockedAchievement__Delegate = 0xa78; // DelegateProperty
		constexpr auto __EventServerAchievementProgression__Delegate = 0xa90; // DelegateProperty
		constexpr auto __EventSpectatorShortcutChanged__Delegate = 0xaa8; // DelegateProperty
		constexpr auto __EventOwnerChanged__Delegate = 0xac0; // DelegateProperty
		constexpr auto __EventQuitSeverityChanged__Delegate = 0xad8; // DelegateProperty
		constexpr auto __EventIdleBannedChanged__Delegate = 0xaf0; // DelegateProperty
		constexpr auto __EventCurrentVoiceRoomChanged__Delegate = 0xb08; // DelegateProperty
		constexpr auto __ReplicatedWorstNetQualityBeyondLatency__ChangeNotify = 0xb20; // DelegateProperty
		constexpr auto __PREI__ChangeNotify = 0xb38; // DelegateProperty
		constexpr auto __ClubID__ChangeNotify = 0xb50; // DelegateProperty
	}

	namespace n_AGameInfo_Soccar_TA {
		constexpr auto GameEventArchetypes = 0x540; // TArray<FGameEventData>
	}

	namespace n_U__ClubPersonas_TA__RefreshPersona_B34B7FF943B4261461D8E38C15F4D18F {
		constexpr auto Persona = 0x60; // ObjectProperty
		constexpr auto PClub = 0x68; // ObjectProperty
		constexpr auto Club = 0x70; // ObjectProperty
	}

	namespace n_ATargetPoint {
		constexpr auto SpawnSpriteTexture = 0x270; // ObjectProperty
		constexpr auto SpawnRefCount = 0x278; // int32_t
	}

	namespace n_UGFxData_ProductAttribute_Rental_TA {
		constexpr auto RentalLength = 0xb0; // int32_t
	}

	namespace n_UPathConstraint {
		constexpr auto CacheIdx = 0x60; // int32_t
		constexpr auto NextConstraint = 0x68; // ObjectProperty
	}

	namespace n_UCinematicIntroSequence_TA {
		constexpr auto SequenceIndex = 0x60; // int32_t
		constexpr auto MessageModal = 0x68; // ObjectProperty
		constexpr auto ActionNames = 0x70; // TArray<FName>
		constexpr auto PressedKeys = 0x80; // TArray<FName>
		constexpr auto PressedAxes = 0x90; // TArray<FPressedAxis>
		constexpr auto LocalizationFile = 0xa0; // FString
		constexpr auto LocalizationGroup = 0xb0; // FString
		constexpr auto LocalizationKeyPrefix = 0xc0; // FString
		constexpr auto AxisDeadzone = 0xd0; // float
		constexpr auto AxisPressTime = 0xd4; // float
		constexpr auto AutoFinishTime = 0xd8; // float
		constexpr auto TrackedBindingsPC = 0xe0; // TArray<FPlayerBinding>
		constexpr auto TrackedBindingsGamepad = 0xf0; // TArray<FPlayerBinding>
		constexpr auto InputInteraction = 0x100; // ObjectProperty
		constexpr auto __EventSequenceFinished__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UServerStartVoteEvent_TA {
		constexpr auto Parties = 0x60; // TArray<FPartyInfo>
		constexpr auto VoteOwner = 0x70; // ObjectProperty
	}

	namespace n_UUIDataProvider_OnlineFriends {
		constexpr auto FriendsList = 0x78; // TArray<FOnlineFriend>
		constexpr auto NickNameCol = 0x88; // FString
		constexpr auto PresenceInfoCol = 0x98; // FString
		constexpr auto FriendStateCol = 0xa8; // FString
		constexpr auto bIsOnlineCol = 0xb8; // FString
		constexpr auto bIsPlayingCol = 0xc8; // FString
		constexpr auto bIsPlayingThisGameCol = 0xd8; // FString
		constexpr auto bIsJoinableCol = 0xe8; // FString
		constexpr auto bHasVoiceSupportCol = 0xf8; // FString
		constexpr auto bHaveInvitedCol = 0x108; // FString
		constexpr auto bHasInvitedYouCol = 0x118; // FString
		constexpr auto OfflineText = 0x128; // FString
		constexpr auto OnlineText = 0x138; // FString
		constexpr auto AwayText = 0x148; // FString
		constexpr auto BusyText = 0x158; // FString
	}

	namespace n_U__GFxData_ErrorModals_TA__RemoveErrorType_B60A19E8412F20528C9445B6641C95E6 {
		constexpr auto InErrorType = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_ShopAds_TA {
		constexpr auto Config = 0x98; // ObjectProperty
	}

	namespace n_UPartyMessage_SearchStatus_X {
		constexpr auto SearchState = 0xa8; // FName
		constexpr auto bIsSearching = 0xb0; // uint32_t : 1
	}

	namespace n_USoundSettingsSave_TA {
		constexpr auto MasterVolume = 0xc8; // float
		constexpr auto SoundVolume = 0xcc; // float
		constexpr auto MusicVolume = 0xd0; // float
		constexpr auto GameplayMusicVolume = 0xd4; // float
		constexpr auto AmbientVolume = 0xd8; // float
		constexpr auto CrowdVolume = 0xdc; // float
		constexpr auto VoiceVolume = 0xe0; // float
		constexpr auto bMuteOnFocusLost = 0xe4; // uint32_t : 1
		constexpr auto bStreamerSafeAudioEnabled = 0xe4; // uint32_t : 1
		constexpr auto OutputType = 0xe8; // EAkOutputType
		constexpr auto DynamicRangeType = 0xe9; // EAkDynamicRangeType
		constexpr auto MusicStingersSetting = 0xea; // EMusicStingersSetting
		constexpr auto __MasterVolume__ChangeNotify = 0xf0; // DelegateProperty
		constexpr auto __SoundVolume__ChangeNotify = 0x108; // DelegateProperty
		constexpr auto __MusicVolume__ChangeNotify = 0x120; // DelegateProperty
		constexpr auto __GameplayMusicVolume__ChangeNotify = 0x138; // DelegateProperty
		constexpr auto __AmbientVolume__ChangeNotify = 0x150; // DelegateProperty
		constexpr auto __CrowdVolume__ChangeNotify = 0x168; // DelegateProperty
		constexpr auto __VoiceVolume__ChangeNotify = 0x180; // DelegateProperty
		constexpr auto __bMuteOnFocusLost__ChangeNotify = 0x198; // DelegateProperty
		constexpr auto __bStreamerSafeAudioEnabled__ChangeNotify = 0x1b0; // DelegateProperty
		constexpr auto __OutputType__ChangeNotify = 0x1c8; // DelegateProperty
		constexpr auto __DynamicRangeType__ChangeNotify = 0x1e0; // DelegateProperty
		constexpr auto __MusicStingersSetting__ChangeNotify = 0x1f8; // DelegateProperty
	}

	namespace n_ASpecialPickup_BoostOverride_TA {
		constexpr auto OtherCarFXArchetype = 0x3c0; // ObjectProperty
		constexpr auto BoostSFX = 0x3c8; // ObjectProperty
		constexpr auto BeamPS = 0x3d0; // ObjectProperty
		constexpr auto AddVelocityZ = 0x3d8; // float
		constexpr auto BeamPSC = 0x3e0; // ComponentProperty
		constexpr auto OtherCarFX = 0x3e8; // ObjectProperty
		constexpr auto OtherCar = 0x3f0; // ObjectProperty
	}

	namespace n_UProductAttribute_PaintSettings_TA {
		constexpr auto MaterialGroups = 0x60; // FPaintMaterialGroup [0x2]
		constexpr auto bPaintParticles = 0x80; // uint32_t : 1
		constexpr auto bPaintBody = 0x80; // uint32_t : 1
		constexpr auto bGammaCorrect = 0x80; // uint32_t : 1
		constexpr auto PaintParameterName = 0x84; // FName
		constexpr auto PaintType = 0x8c; // EPaintColorVariant
		constexpr auto PaintAdditionalParameters = 0x90; // TArray<FPaintAttributeParameter>
		constexpr auto PaintEmissiveMultiplier = 0xa0; // float
		constexpr auto PaintableMaterials = 0xa8; // TArray<ObjectProperty>
		constexpr auto PaintableMaterialsMetallic = 0xb8; // TArray<ObjectProperty>
		constexpr auto IncludePaints = 0xc8; // TArray<ObjectProperty>
		constexpr auto ExcludePaints = 0xd8; // TArray<ObjectProperty>
		constexpr auto UnsupportedPaints = 0xe8; // TArray<ObjectProperty>
		constexpr auto PaintsToOverride = 0xf8; // TArray<FPaintWithOverride>
	}

	namespace n_UTourService_TA {
		constexpr auto __OnTournamentResult__Delegate = 0x60; // DelegateProperty
		constexpr auto __OnCheckIn__Delegate = 0x78; // DelegateProperty
		constexpr auto __OnGetBracket__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnGetMatch__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnGetMatchDetails__Delegate = 0xc0; // DelegateProperty
		constexpr auto __OnGetRewards__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnStartMatchmaking__Delegate = 0xf0; // DelegateProperty
	}

	namespace n_UMaterialExpressionPitchTekTextureSample {
		constexpr auto Coordinates = 0xc0; // FExpressionInput
		constexpr auto PitchTekTextureType = 0xf8; // EPitchTekTextureType
	}

	namespace n_UAnimMetaData_SkelControl {
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto bFullControlOverController = 0x70; // uint32_t : 1
		constexpr auto SkelControlName = 0x74; // FName
	}

	namespace n_UCrumbTrails_TA {
		constexpr auto CrumbTrails = 0x60; // TArray<FCrumbTrailData>
		constexpr auto CrumbRedefine = 0x70; // ObjectProperty
		constexpr auto CrumbSave = 0x78; // ObjectProperty
		constexpr auto bTrailSetup = 0x80; // uint32_t : 1
		constexpr auto __EventActiveTrailsChanged__Delegate = 0x88; // DelegateProperty
		constexpr auto __EventActiveTrailCompleted__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_AAIController_Soccar_TA {
		constexpr auto BallProxyType = 0x708; // ObjectProperty
		constexpr auto BallLandingProxyType = 0x710; // ObjectProperty
		constexpr auto BallTeamGoalLineProxyType = 0x718; // ObjectProperty
		constexpr auto BallEnemyGoalLineProxyType = 0x720; // ObjectProperty
		constexpr auto BallProjectedProxyType = 0x728; // ObjectProperty
		constexpr auto TeamGoalProxyType = 0x730; // ObjectProperty
		constexpr auto EnemyGoalProxyType = 0x738; // ObjectProperty
		constexpr auto MidFieldProxyType = 0x740; // ObjectProperty
		constexpr auto BallTarget = 0x748; // ObjectProperty
		constexpr auto TeamGoalTarget = 0x750; // ObjectProperty
		constexpr auto EnemyGoalTarget = 0x758; // ObjectProperty
		constexpr auto SoccarGame = 0x760; // ObjectProperty
		constexpr auto Ball = 0x768; // ObjectProperty
		constexpr auto TeamGoalInfo = 0x770; // FAICachedGoalInfo
		constexpr auto EnemyGoalInfo = 0x788; // FAICachedGoalInfo
		constexpr auto LastBallHitTime = 0x7a0; // float
		constexpr auto __EventBallChanged__Delegate = 0x7a8; // DelegateProperty
	}

	namespace n_UAudioMixStateComponent_TA {
		constexpr auto CameraBallFocusStateGroup = 0xa8; // FName
		constexpr auto CameraBallFocus_On = 0xb0; // FName
		constexpr auto CameraBallFocus_Off = 0xb8; // FName
		constexpr auto GameState = 0xc0; // FName
		constexpr auto PlayerCountStateGroup = 0xc8; // FName
		constexpr auto PlayerCount_4s = 0xd0; // FName
		constexpr auto PlayerCount_3s = 0xd8; // FName
		constexpr auto PlayerCount_2s = 0xe0; // FName
		constexpr auto PlayerCount_1s = 0xe8; // FName
		constexpr auto PlayerCount_None = 0xf0; // FName
		constexpr auto MajorityFarStateGroup = 0xf8; // FName
		constexpr auto MajorityFar_True = 0x100; // FName
		constexpr auto MajorityFar_None = 0x108; // FName
		constexpr auto MajorityFarRTPC = 0x110; // FName
		constexpr auto IsTeamRTPC = 0x118; // FName
		constexpr auto FocusCarRTPC = 0x120; // FName
		constexpr auto LiveReplay_InCameraViewRTPC = 0x128; // FName
		constexpr auto NumLocalPlayers = 0x130; // int32_t
		constexpr auto bPlayerUsingBallCam = 0x134; // uint32_t : 1
		constexpr auto bIsActiveState = 0x134; // uint32_t : 1
		constexpr auto bSpectating = 0x134; // uint32_t : 1
		constexpr auto bIsMajorityFar = 0x134; // uint32_t : 1
		constexpr auto bInLiveReplay = 0x134; // uint32_t : 1
		constexpr auto MajorityFarMinDistanceSq = 0x138; // float
		constexpr auto BallListenerOffset = 0x13c; // float
	}

	namespace n_UOnlineGameSkill_X {
		constexpr auto Playlists = 0x98; // TArray<ObjectProperty>
		constexpr auto SeasonRewards = 0xa8; // TArray<FPlayerSeasonRewardProgress>
		constexpr auto SyncRequests = 0xb8; // TArray<FSkillSyncRequest>
		constexpr auto SkillsSyncedPlayers = 0xc8; // TArray<FUniqueNetId>
		constexpr auto __EventSkillSynced__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_U__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_6076CC0F42A12E68E42719B22750AEEA {
		constexpr auto InLobbyId = 0x60; // FUniqueLobbyId
		constexpr auto FriendId = 0x70; // FUniqueNetId
	}

	namespace n_UBTAction_Stop {
		constexpr auto bWasGoingForward = 0xc0; // uint32_t : 1
	}

	namespace n_ACoverReplicator {
		constexpr auto CoverReplicationData = 0x268; // TArray<FCoverReplicationInfo>
	}

	namespace n_U__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_BD16A3494D76095A85FA7681A240AFD2 {
		constexpr auto InPrimaryID = 0x60; // FUniqueNetId
	}

	namespace n_UEpicLogin_X {
		constexpr auto PinGrantCode = 0x60; // FString
		constexpr auto PinGrantURL = 0x70; // FString
		constexpr auto PinGrantExpiration = 0x80; // QWordProperty
		constexpr auto bLoggedIn = 0x88; // uint32_t : 1
		constexpr auto bSetAsPrimaryAccount = 0x88; // uint32_t : 1
		constexpr auto bPollDuringAccountLinking = 0x88; // uint32_t : 1
		constexpr auto bPinGrantRequestInProgress = 0x88; // uint32_t : 1
		constexpr auto bLoginInProgress = 0x88; // uint32_t : 1
		constexpr auto bAccountCreationInProgress = 0x88; // uint32_t : 1
		constexpr auto ParentalConsentURL = 0x90; // FString
		constexpr auto LoginFailureCount = 0xa0; // int32_t
		constexpr auto LoginError = 0xa8; // ObjectProperty
		constexpr auto LoginErrorTimestamp = 0xb0; // QWordProperty
		constexpr auto EpicConfig = 0xb8; // ObjectProperty
		constexpr auto CreateAccountURL = 0xc0; // FString
		constexpr auto __EventLoginSucceeded__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventLoginFailed__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventReceivedPinGrantCode__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventLoginError__Delegate = 0x118; // DelegateProperty
		constexpr auto __EventReceivedEpicAuthTicket__Delegate = 0x130; // DelegateProperty
		constexpr auto __EventInitialized__Delegate = 0x148; // DelegateProperty
		constexpr auto __EventCreatedEpicGamesAccount__Delegate = 0x160; // DelegateProperty
	}

	namespace n_U__GameEvent_Soccar_TA__CommitPlayerMatchData_7886F999491194CD97C27F90EF61395B {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_APointInSpace_TA {
		constexpr auto Sprite = 0x268; // ComponentProperty
		constexpr auto Arrow = 0x270; // ComponentProperty
	}

	namespace n_U__GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_F0CBF3194B4E2787D5362FA2286DD886 {
		constexpr auto CostID = 0x60; // int32_t
	}

	namespace n_USeqEvent_ReplayTime_TA {
		constexpr auto TimeSeconds = 0x180; // float
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x70; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x74; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x80; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x80; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x80; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x84; // FName
		constexpr auto EditorSkelMesh = 0x90; // ObjectProperty
		constexpr auto ValidAssociatedBones = 0x98; // TArray<FName>
		constexpr auto NormalToCompare = 0xa8; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0xb4; // float
		constexpr auto NormalCheckTolerance = 0xb8; // float
		constexpr auto ValidMaterialIndices = 0xc0; // TArray<int32_t>
	}

	namespace n_U__EpicAccountSave_TA__SetConvertPlatformFriends_2F4776DB491F36F30DC34DBD701366B9 {
		constexpr auto OSS = 0x60; // ObjectProperty
	}

	namespace n_USeqAct_AttachAssetToCar_TA {
		constexpr auto StaticMeshToAttach = 0x160; // ObjectProperty
		constexpr auto SkeletalMeshToAttach = 0x168; // ObjectProperty
		constexpr auto ParticleSystemToAttach = 0x170; // ObjectProperty
		constexpr auto BoneToAttachTo = 0x178; // FName
	}

	namespace n_ASpecialPickup_CarLaunch_TA {
		constexpr auto LaunchVelocity = 0x388; // float
	}

	namespace n_USoundNode {
		constexpr auto NodeUpdateHint = 0x60; // int32_t
		constexpr auto ChildNodes = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UUIDataProvider_OnlinePartyChatList {
		constexpr auto PartyMembersList = 0x78; // TArray<FOnlinePartyMember>
		constexpr auto NatTypes = 0x88; // TArray<FString>
		constexpr auto NickNameCol = 0x98; // FString
		constexpr auto NatTypeCol = 0xa8; // FString
		constexpr auto IsLocalCol = 0xb8; // FString
		constexpr auto IsInPartyVoiceCol = 0xc8; // FString
		constexpr auto IsTalkingCol = 0xd8; // FString
		constexpr auto IsInGameSessionCol = 0xe8; // FString
		constexpr auto IsPlayingThisGameCol = 0xf8; // FString
	}

	namespace n_UFluidSurfaceComponent {
		constexpr auto FluidMaterial = 0x258; // ObjectProperty
		constexpr auto LightMapResolution = 0x260; // int32_t
		constexpr auto LightmassSettings = 0x264; // FLightmassPrimitiveSettings
		constexpr auto EnableSimulation = 0x280; // uint32_t : 1
		constexpr auto EnableDetail = 0x280; // uint32_t : 1
		constexpr auto bTiling = 0x280; // uint32_t : 1
		constexpr auto bPause = 0x280; // uint32_t : 1
		constexpr auto bShowSimulationNormals = 0x280; // uint32_t : 1
		constexpr auto bShowSimulationPosition = 0x280; // uint32_t : 1
		constexpr auto bShowDetailNormals = 0x280; // uint32_t : 1
		constexpr auto bShowDetailPosition = 0x280; // uint32_t : 1
		constexpr auto bShowFluidSimulation = 0x280; // uint32_t : 1
		constexpr auto bShowFluidDetail = 0x280; // uint32_t : 1
		constexpr auto bTestRipple = 0x280; // uint32_t : 1
		constexpr auto bTestRippleCenterOnDetail = 0x280; // uint32_t : 1
		constexpr auto SimulationQuadsX = 0x284; // int32_t
		constexpr auto SimulationQuadsY = 0x288; // int32_t
		constexpr auto GridSpacing = 0x28c; // float
		constexpr auto GridSpacingLowRes = 0x290; // float
		constexpr auto TargetSimulation = 0x298; // ObjectProperty
		constexpr auto GPUTessellationFactor = 0x2a0; // float
		constexpr auto FluidDamping = 0x2a4; // float
		constexpr auto FluidTravelSpeed = 0x2a8; // float
		constexpr auto FluidHeightScale = 0x2ac; // float
		constexpr auto FluidUpdateRate = 0x2b0; // float
		constexpr auto ForceImpact = 0x2b4; // float
		constexpr auto ForceContinuous = 0x2b8; // float
		constexpr auto LightingContrast = 0x2bc; // float
		constexpr auto TargetDetail = 0x2c0; // ObjectProperty
		constexpr auto DeactivationDistance = 0x2c8; // float
		constexpr auto DetailResolution = 0x2cc; // int32_t
		constexpr auto DetailSize = 0x2d0; // float
		constexpr auto DetailDamping = 0x2d4; // float
		constexpr auto DetailTravelSpeed = 0x2d8; // float
		constexpr auto DetailTransfer = 0x2dc; // float
		constexpr auto DetailHeightScale = 0x2e0; // float
		constexpr auto DetailUpdateRate = 0x2e4; // float
		constexpr auto NormalLength = 0x2e8; // float
		constexpr auto TestRippleSpeed = 0x2ec; // float
		constexpr auto TestRippleFrequency = 0x2f0; // float
		constexpr auto TestRippleRadius = 0x2f4; // float
		constexpr auto FluidWidth = 0x2f8; // float
		constexpr auto FluidHeight = 0x2fc; // float
		constexpr auto TestRippleTime = 0x300; // float
		constexpr auto TestRippleAngle = 0x304; // float
		constexpr auto DeactivationTimer = 0x308; // float
		constexpr auto ViewDistance = 0x30c; // float
		constexpr auto SimulationPosition = 0x310; // FVector
		constexpr auto DetailPosition = 0x31c; // FVector
		constexpr auto ClampMap = 0x328; // TArray<char>
		constexpr auto ShadowMaps = 0x338; // TArray<ObjectProperty>
		constexpr auto LightMap = 0x348; // FLightMapRef
		constexpr auto FluidSimulation = 0x350; // FPointer
	}

	namespace n_UNavigationHandle {
		constexpr auto AnchorPylon = 0x60; // ObjectProperty
		constexpr auto AnchorPoly = 0x68; // FPointer
		constexpr auto PathCache = 0x70; // FPathStore
		constexpr auto BestUnfinishedPathPoint = 0x80; // FPointer
		constexpr auto CurrentEdge = 0x88; // FPointer
		constexpr auto SubGoal_DestPoly = 0x90; // FPointer
		constexpr auto FinalDestination = 0x98; // FBasedPosition
		constexpr auto bSkipRouteCacheUpdates = 0xd0; // uint32_t : 1
		constexpr auto bUseORforEvaluateGoal = 0xd0; // uint32_t : 1
		constexpr auto bDebugConstraintsAndGoalEvals = 0xd0; // uint32_t : 1
		constexpr auto bUltraVerbosePathDebugging = 0xd0; // uint32_t : 1
		constexpr auto bVisualPathDebugging = 0xd0; // uint32_t : 1
		constexpr auto bDebug_Breadcrumbs = 0xd0; // uint32_t : 1
		constexpr auto PathConstraintList = 0xd8; // ObjectProperty
		constexpr auto PathGoalList = 0xe0; // ObjectProperty
		constexpr auto CachedPathParams = 0xe8; // FNavMeshPathParams
		constexpr auto LastPathError = 0x120; // EPathFindingError
		constexpr auto LastPathFailTime = 0x124; // float
		constexpr auto Breadcrumbs = 0x128; // FVector [0xa]
		constexpr auto BreadCrumbMostRecentIdx = 0x1a0; // int32_t
		constexpr auto BreadCrumbDistanceInterval = 0x1a4; // float
	}

	namespace n_USeqAct_AkLoadBank {
		constexpr auto Async = 0x178; // uint32_t : 1
		constexpr auto bWaitingCallback = 0x178; // uint32_t : 1
		constexpr auto Bank = 0x180; // ObjectProperty
		constexpr auto Signal = 0x188; // int32_t
	}

	namespace n_UFracturedSkinnedMeshComponent {
		constexpr auto ComponentSkinResources = 0x338; // FPointer
		constexpr auto FragmentTransforms = 0x340; // TArray<FMatrix>
		constexpr auto DependentComponents = 0x350; // TArray<ComponentProperty>
		constexpr auto bBecameVisible = 0x360; // uint32_t : 1
		constexpr auto bFragmentTransformsChanged = 0x360; // uint32_t : 1
	}

	namespace n_UGFxEvent_FSCommand {
		constexpr auto Movie = 0x180; // ObjectProperty
		constexpr auto FSCommand = 0x188; // FString
		constexpr auto Handler = 0x198; // ObjectProperty
	}

	namespace n_UTextureCube {
		constexpr auto SizeX = 0x150; // int32_t
		constexpr auto SizeY = 0x154; // int32_t
		constexpr auto Format = 0x158; // EPixelFormat
		constexpr auto NumMips = 0x15c; // int32_t
		constexpr auto bIsCubemapValid = 0x160; // uint32_t : 1
		constexpr auto FacePosX = 0x168; // ObjectProperty
		constexpr auto FaceNegX = 0x170; // ObjectProperty
		constexpr auto FacePosY = 0x178; // ObjectProperty
		constexpr auto FaceNegY = 0x180; // ObjectProperty
		constexpr auto FacePosZ = 0x188; // ObjectProperty
		constexpr auto FaceNegZ = 0x190; // ObjectProperty
	}

	namespace n_UAnalyticEventsBase {
		constexpr auto bSessionInProgress = 0x88; // uint32_t : 1
		constexpr auto bAutoStartSession = 0x88; // uint32_t : 1
		constexpr auto SessionPauseThresholdSec = 0x8c; // int32_t
		constexpr auto UserId = 0x90; // FString
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x268; // ComponentProperty
		constexpr auto bEnabled = 0x270; // uint32_t : 1
	}

	namespace n_UAchievementManager_TA {
		constexpr auto PC = 0x90; // ObjectProperty
		constexpr auto UnlockedAchievements = 0x98; // TArray<int32_t>
		constexpr auto DLC1Cars = 0xa8; // TArray<FName>
		constexpr auto DLC2Cars = 0xb8; // TArray<FName>
		constexpr auto ClassicCars = 0xc8; // TArray<FName>
		constexpr auto RequiredDontLookBackProducts = 0xd8; // TArray<FName>
		constexpr auto RequiredAnInchAnd62MilesProducts = 0xe8; // TArray<FName>
		constexpr auto SARPBCArenas = 0xf8; // TArray<FName>
		constexpr auto RequiredLevelsToPlay = 0x108; // TArray<FName>
		constexpr auto RequiredRocketLabsArenas = 0x118; // ObjectProperty
		constexpr auto RocketLabsArenaNames = 0x120; // TArray<FName>
		constexpr auto BraveTheElementsBaseLevels = 0x130; // TArray<ObjectProperty>
		constexpr auto RequiredRumbleActivation = 0x140; // TArray<FName>
		constexpr auto MaxBoostTime = 0x150; // float
		constexpr auto MaxTimeOnWall = 0x154; // float
		constexpr auto MaxDriveDistanceKM = 0x158; // float
		constexpr auto MaxHandbrakeRadius = 0x15c; // float
		constexpr auto MinHandbrakeDotAngleForComplete = 0x160; // float
		constexpr auto DunksScored = 0x164; // int32_t
		constexpr auto RocketBoostFills = 0x168; // int32_t
		constexpr auto TotalDLC0BoostTime = 0x16c; // int32_t
		constexpr auto GoalsScoredInCurrentGame = 0x170; // int32_t
		constexpr auto SavesInCurrentGame = 0x174; // int32_t
		constexpr auto AssistsInCurrentGame = 0x178; // int32_t
		constexpr auto DLC2PsychoMasterExplodeCount = 0x17c; // int32_t
		constexpr auto TotalBreakoutGoals = 0x180; // int32_t
		constexpr auto MaxRocketBoostFills = 0x184; // int32_t
		constexpr auto TotalBreakoutPlatformsToDamage = 0x188; // int32_t
		constexpr auto TotalDLC0WheelDriveDistanceKM = 0x18c; // int32_t
		constexpr auto Winner_GameEventsWon = 0x190; // int32_t
		constexpr auto SuperVictorious_GameEventsWon = 0x194; // int32_t
		constexpr auto PitchVeteran_GameEventsPlayed = 0x198; // int32_t
		constexpr auto PickMeUp_RandomItemDrops = 0x19c; // int32_t
		constexpr auto DropsInTheBucket_RandomItemDrops = 0x1a0; // int32_t
		constexpr auto RidersBlock_GoalSaves = 0x1a4; // int32_t
		constexpr auto Savage_Goals = 0x1a8; // int32_t
		constexpr auto Spectacular_Goals = 0x1ac; // int32_t
		constexpr auto Ruthless_Goals = 0x1b0; // int32_t
		constexpr auto RocketGenocider_Goals = 0x1b4; // int32_t
		constexpr auto MadScientist_Maps = 0x1b8; // int32_t
		constexpr auto ComingOnStrong_GoalsOrAssists = 0x1bc; // int32_t
		constexpr auto PeoplePerson_CompletedMatches = 0x1c0; // int32_t
		constexpr auto MetaAchievementPointMax = 0x1c4; // int32_t
		constexpr auto BattleCarCollector_CarsCollected = 0x1c8; // int32_t
		constexpr auto Traveler_Maps = 0x1cc; // int32_t
		constexpr auto bBoostWasFull = 0x1d0; // uint32_t : 1
		constexpr auto bPlayerInited = 0x1d0; // uint32_t : 1
		constexpr auto bHandbrakePressed = 0x1d0; // uint32_t : 1
		constexpr auto bCheckMinuteToWinIt = 0x1d0; // uint32_t : 1
		constexpr auto bDidInitialCheckForMinuteToWinIt = 0x1d0; // uint32_t : 1
		constexpr auto bCheckBuzzerBeater = 0x1d0; // uint32_t : 1
		constexpr auto bDidInitialCheckForBuzzerBeater = 0x1d0; // uint32_t : 1
		constexpr auto bQualifiesForDLC1Throwback = 0x1d0; // uint32_t : 1
		constexpr auto bSSFuryCarInLoadout = 0x1d0; // uint32_t : 1
		constexpr auto HandbrakeStartDir = 0x1d4; // FVector
		constexpr auto HandbrakeStartLocation = 0x1e0; // FVector
		constexpr auto WastelandMapName = 0x1f0; // FString
		constexpr auto AquaticMapName = 0x200; // FString
		constexpr auto UtopiaMapName = 0x210; // FString
		constexpr auto ArcMapName = 0x220; // FString
		constexpr auto TrainStationMapName = 0x230; // FString
		constexpr auto ProductNames_Body_MuscleCar = 0x240; // TArray<FName>
		constexpr auto ProductNames_Body_SSFury = 0x250; // TArray<FName>
		constexpr auto ProductName_Body_GearsCar = 0x260; // FName
		constexpr auto ProductName_Body_Import = 0x268; // FName
		constexpr auto ProductName_Body_Interceptor = 0x270; // FName
		constexpr auto ProductName_Body_Warthog = 0x278; // FName
		constexpr auto ProductName_Body_WastelandTruck = 0x280; // FName
		constexpr auto ProductName_Boost_Bubble = 0x288; // FName
		constexpr auto ProductName_Boost_MusicalNotes = 0x290; // FName
		constexpr auto ProductName_Hat_Halo = 0x298; // FName
		constexpr auto ProductName_Body_Octane = 0x2a0; // FName
		constexpr auto ProductName_Body_Backfire = 0x2a8; // FName
		constexpr auto ProductName_Body_Force = 0x2b0; // FName
		constexpr auto ProductName_Body_Vanquish = 0x2b8; // FName
		constexpr auto ProductNames_Body_Savage = 0x2c0; // TArray<FName>
		constexpr auto ProductNames_Body_Spectacular = 0x2d0; // TArray<FName>
		constexpr auto ProductNames_Body_Ruthless = 0x2e0; // TArray<FName>
		constexpr auto ProductName_Boost_Standard = 0x2f0; // FName
		constexpr auto ProductName_Boost_Ion = 0x2f8; // FName
		constexpr auto ProductName_Boost_Flamethrower = 0x300; // FName
		constexpr auto ProductName_Boost_Thermal = 0x308; // FName
		constexpr auto StatName_BoostTimeMinutes = 0x310; // FName
		constexpr auto StatName_Certifiable = 0x318; // FName
		constexpr auto StatName_DistanceDrivenKm = 0x320; // FName
		constexpr auto StatName_ItemCollected = 0x328; // FName
		constexpr auto StatName_LeftWingRightWing = 0x330; // FName
		constexpr auto StatName_MadScientist = 0x338; // FName
		constexpr auto StatName_MatchComplete = 0x340; // FName
		constexpr auto StatName_WallTimeMinutes = 0x348; // FName
		constexpr auto StatName_RocketGenocider = 0x350; // FName
		constexpr auto StatName_BraveTheElements = 0x358; // FName
		constexpr auto StatName_FullCourse = 0x360; // FName
		constexpr auto StatName_BuckminsterX10 = 0x368; // FName
		constexpr auto StatName_ComingOnStrong = 0x370; // FName
		constexpr auto StatName_PeoplePerson = 0x378; // FName
		constexpr auto HockeyEventType = 0x380; // FName
		constexpr auto BaseSaveData = 0x388; // ObjectProperty
		constexpr auto SaveData = 0x390; // ObjectProperty
		constexpr auto LastPRI = 0x398; // ObjectProperty
		constexpr auto LastGame = 0x3a0; // ObjectProperty
		constexpr auto LastGameEvent = 0x3a8; // ObjectProperty
		constexpr auto LastCar = 0x3b0; // ObjectProperty
		constexpr auto PendingTradeGuid = 0x3b8; // FGuid
		constexpr auto LoadoutSave = 0x3c8; // ObjectProperty
		constexpr auto __EventNewMVPScore__Delegate = 0x3d0; // DelegateProperty
		constexpr auto __EventGoalAmountScored__Delegate = 0x3e8; // DelegateProperty
		constexpr auto __EventDrivenDistance__Delegate = 0x400; // DelegateProperty
		constexpr auto __EventShotAmountBlocked__Delegate = 0x418; // DelegateProperty
		constexpr auto __EventGameEventAmountWon__Delegate = 0x430; // DelegateProperty
		constexpr auto __EventChampionshipAmountChanged__Delegate = 0x448; // DelegateProperty
		constexpr auto __EventRandomItemAmountDropped__Delegate = 0x460; // DelegateProperty
		constexpr auto __EventRegularSeasonAmountChanged__Delegate = 0x478; // DelegateProperty
		constexpr auto __EventAchievementUnlocked__Delegate = 0x490; // DelegateProperty
		constexpr auto __EventStatIncremented__Delegate = 0x4a8; // DelegateProperty
		constexpr auto __EventReceiveServerProgress__Delegate = 0x4c0; // DelegateProperty
		constexpr auto __EventSaveDataSet__Delegate = 0x4d8; // DelegateProperty
	}

	namespace n_UOvertimeComponent_TA {
		constexpr auto TieBreaker = 0xa8; // EMatchTieBreaker
		constexpr auto OvertimeGameTime = 0xac; // int32_t
		constexpr auto BallHitGroundTimeoutSeconds = 0xb0; // float
		constexpr auto FirstScoreTeamIndex = 0xb4; // int32_t
		constexpr auto RandomWinningTeamIndex = 0xb8; // int32_t
	}

	namespace n_APlayerStart {
		constexpr auto bEnabled = 0x388; // uint32_t : 1
		constexpr auto bPrimaryStart = 0x388; // uint32_t : 1
		constexpr auto bBestStart = 0x388; // uint32_t : 1
		constexpr auto TeamIndex = 0x38c; // int32_t
		constexpr auto Score = 0x390; // int32_t
		constexpr auto SelectionIndex = 0x394; // int32_t
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x70; // FName
	}

	namespace n_U__TriggerCondition_TA__AddTriggers_65C8CF5B4585D361C51B7182D954273E {
		constexpr auto Clump = 0x60; // ObjectProperty
	}

	namespace n_UParticleModuleUberBase {
		constexpr auto RequiredModules = 0x70; // TArray<FName>
	}

	namespace n_ASplineLoftActor {
		constexpr auto ScaleX = 0x2d8; // float
		constexpr auto ScaleY = 0x2dc; // float
		constexpr auto SplineMeshComps = 0x2e0; // TArray<ComponentProperty>
		constexpr auto DeformMesh = 0x2f0; // ObjectProperty
		constexpr auto DeformMeshMaterials = 0x2f8; // TArray<ObjectProperty>
		constexpr auto Roll = 0x308; // float
		constexpr auto WorldXDir = 0x30c; // FVector
		constexpr auto Offset = 0x318; // FVector2D
		constexpr auto bSmoothInterpRollAndScale = 0x320; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x320; // uint32_t : 1
		constexpr auto MeshLightEnvironment = 0x328; // ComponentProperty
		constexpr auto MeshMaxDrawDistance = 0x330; // float
	}

	namespace n_UOnlineGamePrivileges_X {
		constexpr auto PendingChecks = 0x98; // TArray<ObjectProperty>
		constexpr auto bIsCheckingPrivileges = 0xa8; // uint32_t : 1
		constexpr auto __EventCheckingPrivilegesChanged__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventPrivilegeCheckRestriction__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_U__CrumbTrails_TA__GetActiveCrumbs_7B02AA444E76ACC2EB31169DE2FD9B2F {
		constexpr auto Crumbs = 0x60; // TArray<FName>
	}

	namespace n_U__GFxData_PartyInvite_TA__InviteToPartySilent_6F6ACF274867AB7365E5849E17D7CB63 {
		constexpr auto PsyNetInterface = 0x60; // ObjectProperty
	}

	namespace n_U__TourCheckInError_TA__AlertSignupError_F0147D49462C50DD230AE7B19AECBE71 {
		constexpr auto Shell = 0x60; // ObjectProperty
		constexpr auto TournamentID = 0x68; // QWordProperty
	}

	namespace n_UPartyMessage_TourCheckInError_TA {
		constexpr auto TourID = 0xa8; // QWordProperty
		constexpr auto ErrorTypeName = 0xb0; // FName
	}

	namespace n_AFXActor_TrainingEditor_TA {
		constexpr auto AdjustSpeedStateRemoveDelay = 0x328; // float
		constexpr auto AkBallSpeedDirectionChange = 0x330; // ObjectProperty
		constexpr auto SimulatingBallState = 0x338; // ObjectProperty
		constexpr auto AdjustingSpeedState = 0x340; // ObjectProperty
		constexpr auto PlaytestingState = 0x348; // ObjectProperty
		constexpr auto GameEvent = 0x350; // ObjectProperty
		constexpr auto PrevLaunchSpeed = 0x358; // float
		constexpr auto PrevLaunchSpeedSign = 0x35c; // float
	}

	namespace n_UCloudStorageBaseCloudSaveSystemKVS {
		constexpr auto CloudStorage = 0x60; // ObjectProperty
	}

	namespace n_UProductsSave_TA {
		constexpr auto OnlineProductInstanceIds = 0xc8; // TArray<QWordProperty>
		constexpr auto NewProductIDs = 0xd8; // TArray<QWordProperty>
		constexpr auto UnseenContainerProducts = 0xe8; // TArray<QWordProperty>
		constexpr auto LastUnlockDisplayId = 0xf8; // QWordProperty
		constexpr auto OnlineProductInstanceIDs128 = 0x100; // TArray<FProductInstanceID>
		constexpr auto NewProductIDs128 = 0x110; // TArray<FProductInstanceID>
		constexpr auto UnseenContainerProducts128 = 0x120; // TArray<FProductInstanceID>
		constexpr auto LastUnlockDisplayId128 = 0x130; // FProductInstanceID
		constexpr auto PreviousKeyCount = 0x140; // int32_t
		constexpr auto PreviousDecryptorCount = 0x144; // int32_t
		constexpr auto bHasUnseenGiftboxes = 0x148; // uint32_t : 1
		constexpr auto __NewProductIDs128__ChangeNotify = 0x150; // DelegateProperty
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0xe0; // float
		constexpr auto bRanged = 0xe4; // uint32_t : 1
		constexpr auto MinParameterValue = 0xe8; // float
		constexpr auto MaxParameterValue = 0xec; // float
	}

	namespace n_UProductAssetCache_TA {
		constexpr auto bDebug = 0x70; // uint32_t : 1
		constexpr auto NewProductIDs = 0x78; // TArray<int32_t>
		constexpr auto LoadedProductIDs = 0x88; // TArray<int32_t>
		constexpr auto Assets = 0x98; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_GetLocationAndRotation {
		constexpr auto Location = 0x160; // FVector
		constexpr auto RotationVector = 0x16c; // FVector
		constexpr auto Rotation = 0x178; // FVector
		constexpr auto SocketOrBoneName = 0x184; // FName
	}

	namespace n_UProductPaint_TA {
		constexpr auto Label = 0x60; // FString
		constexpr auto Colors = 0x70; // FLinearColor [0xc]
		constexpr auto FinishType = 0x130; // EPaintFinishType
	}

	namespace n_UDominantDirectionalLightComponent {
		constexpr auto DominantLightShadowInfo = 0x1f0; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x2a0; // FArray_Mirror
	}

	namespace n_UMultiProviderAnalytics {
		constexpr auto AnalyticsProviderClassNames = 0xa0; // TArray<FString>
		constexpr auto AnalyticsProviders = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_U__AutoTour_TA__OnReceivedBracket_B3FD085049B4540D8983288995F43481 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_U__OnlineGameTourServer_TA__IsBotOnlyTeam_2CAB54244C36F45376C6D2A3C9A1FF03 {
		constexpr auto Team = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_TourStatus_TA {
		constexpr auto Status = 0x98; // ObjectProperty
	}

	namespace n_UDominantSpotLightComponent {
		constexpr auto DominantLightShadowInfo = 0x2a0; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x350; // FArray_Mirror
	}

	namespace n_UGameplayEventsHandler {
		constexpr auto EventIDFilter = 0x60; // TArray<int32_t>
		constexpr auto GroupFilter = 0x70; // TArray<FGameStatGroup>
		constexpr auto Reader = 0x80; // ObjectProperty
	}

	namespace n_UInterpTrackMorphWeight {
		constexpr auto MorphNodeName = 0xe8; // FName
	}

	namespace n_UTimersComponent_X {
		constexpr auto Timers = 0x70; // TArray<FTimerData>
	}

	namespace n_UShopAdsConfig_TA {
		constexpr auto Ads = 0x78; // TArray<FShopAdData>
	}

	namespace n_UMapSelector_TA {
		constexpr auto bDebug = 0x70; // uint32_t : 1
		constexpr auto AllMaps = 0x78; // TArray<ObjectProperty>
		constexpr auto FilteredMaps = 0x88; // TArray<ObjectProperty>
		constexpr auto AllGroups = 0x98; // TArray<FMapGroup>
		constexpr auto RemainingGroupMaps = 0xa8; // TArray<FMapGroup>
		constexpr auto RemainingGroups = 0xb8; // TArray<int32_t>
		constexpr auto PreviousGroups = 0xc8; // TArray<int32_t>
		constexpr auto PreviousGroupMax = 0xd8; // int32_t
		constexpr auto LastPlayedMap = 0xe0; // ObjectProperty
		constexpr auto Skill = 0xe8; // float
		constexpr auto MapSkillRequirements = 0xf0; // TArray<FMapSkillSettings>
		constexpr auto MapSetName = 0x100; // FName
	}

	namespace n_USeqAct_SetBreakoutTileDamage_TA {
		constexpr auto PlatformObj = 0x160; // ObjectProperty
		constexpr auto Damage = 0x168; // int32_t
	}

	namespace n_ASpecialPickup_HauntedBallBeam_TA {
		constexpr auto bIsPhasingBall = 0x420; // uint32_t : 1
		constexpr auto bIsInRange = 0x420; // uint32_t : 1
		constexpr auto bSFxLoopIsPlaying = 0x420; // uint32_t : 1
		constexpr auto PrevHauntedBall = 0x428; // ObjectProperty
		constexpr auto MaxSimulatedClients = 0x430; // int32_t
		constexpr auto ArrivalDistance = 0x434; // float
		constexpr auto CarAvoidenceOffset = 0x438; // FVector
		constexpr auto BeamEndSFX = 0x448; // ObjectProperty
		constexpr auto ConnectedBeamLoopSFX = 0x450; // ObjectProperty
		constexpr auto BeamLoopSFX = 0x458; // ObjectProperty
	}

	namespace n_URPC_ProductsTradePlayer_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto OtherPlayerID = 0x130; // FUniqueNetId
		constexpr auto TradeId = 0x178; // FGuid
		constexpr auto InstancesToGive = 0x188; // TArray<FProductInstanceID>
		constexpr auto InstancesToGet = 0x198; // TArray<FProductInstanceID>
		constexpr auto CurrenciesToGive = 0x1a8; // TArray<FCurrency>
		constexpr auto CurrenciesToGet = 0x1b8; // TArray<FCurrency>
	}

	namespace n_UNetDriver {
		constexpr auto ConnectionTimeout = 0xa4; // float
		constexpr auto KeepAliveTime = 0xa8; // float
		constexpr auto RelevantTimeout = 0xac; // float
		constexpr auto SpawnPrioritySeconds = 0xb0; // float
		constexpr auto ServerTravelPause = 0xb4; // float
		constexpr auto MinClientRate = 0xb8; // int32_t
		constexpr auto MaxClientRate = 0xbc; // int32_t
		constexpr auto MedianClientRate = 0xc0; // int32_t
		constexpr auto MinReplicationRate = 0xc4; // int32_t
		constexpr auto MaxReplicationRate = 0xc8; // int32_t
		constexpr auto MedianReplicationRate = 0xcc; // int32_t
		constexpr auto NetServerMaxTickRate = 0xd0; // int32_t
		constexpr auto bClampListenServerTickRate = 0xd4; // uint32_t : 1
		constexpr auto AllowDownloads = 0xd8; // uint32_t : 1
		constexpr auto AllowPeerConnections = 0xdc; // uint32_t : 1
		constexpr auto AllowPeerVoice = 0xe0; // uint32_t : 1
		constexpr auto MaxDownloadSize = 0x108; // int32_t
		constexpr auto DownloadManagers = 0x110; // TArray<FString>
		constexpr auto NetConnectionClassName = 0x1c8; // FString
	}

	namespace n_UPsyNetMessage_X {
		constexpr auto Headers = 0x60; // ComponentProperty
		constexpr auto Body = 0x68; // TArray<char>
	}

	namespace n_U__GFxData_Clubs_TA__UpdateGFxClubDetails_ABF41C4E408BBFA3660B20B41A4DFC59 {
		constexpr auto ClubDetails = 0x60; // ObjectProperty
	}

	namespace n_U__PsyNetServiceProvider_X__ExecuteServiceMessage_99FEADDC452BC8255F3E2F8C9379548C {
		constexpr auto ServiceName = 0x60; // FString
		constexpr auto Service = 0x70; // ObjectProperty
		constexpr auto Task = 0x78; // ObjectProperty
	}

	namespace n_UProductAssetReferenceSkin_TA {
		constexpr auto SkinAsset = 0x70; // ObjectProperty
	}

	namespace n_USeqAct_CompleteFTECheckpoint_TA {
		constexpr auto CheckpointName = 0x160; // FString
	}

	namespace n_UGFxData_System_TA {
		constexpr auto Language = 0x98; // FString
		constexpr auto UIState = 0xa8; // FString
		constexpr auto SharedUIState = 0xb8; // FString
		constexpr auto LocalPlayerCount = 0xc8; // int32_t
		constexpr auto bSaveDataLoaded = 0xcc; // uint32_t : 1
		constexpr auto bLoggedInPsyNet = 0xcc; // uint32_t : 1
		constexpr auto bLoggedInPlatform = 0xcc; // uint32_t : 1
		constexpr auto bOnline = 0xcc; // uint32_t : 1
		constexpr auto bUndocked = 0xcc; // uint32_t : 1
		constexpr auto SplitScreenType = 0xd0; // ESplitScreenType
		constexpr auto AvailableGamepadType = 0xd1; // EInputPlatformType
		constexpr auto SafeZoneRatio = 0xd4; // float
		constexpr auto UIScale = 0xd8; // float
		constexpr auto Platform = 0xe0; // FString
	}

	namespace n_UProductStat_BoostTime_TA {
		constexpr auto BoostComponent = 0xb0; // ObjectProperty
		constexpr auto BoostStartTime = 0xb8; // float
		constexpr auto LeftoverTime = 0xbc; // float
	}

	namespace n_UMcpServiceBase {
		constexpr auto McpConfigClassName = 0x60; // FString
		constexpr auto McpConfig = 0x70; // ObjectProperty
	}

	namespace n_UOnlineGameRegions_X {
		constexpr auto PingRegionsCacheTime = 0x98; // float
		constexpr auto LastPingRegionsTime = 0x9c; // float
		constexpr auto RegionIdxPingCur = 0xa0; // int32_t
		constexpr auto Config = 0xa8; // ObjectProperty
		constexpr auto RegionPings = 0xb0; // TArray<ObjectProperty>
		constexpr auto CachedRegionPings = 0xc0; // TArray<FCachedRegionPing>
		constexpr auto Beacon = 0xd0; // ComponentProperty
		constexpr auto BeaconConfig = 0xd8; // ObjectProperty
		constexpr auto bWaitingToPingRegions = 0xe0; // uint32_t : 1
		constexpr auto bPingingRegions = 0xe0; // uint32_t : 1
		constexpr auto __EventRegionsSynced__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventRegionsPinged__Delegate = 0x100; // DelegateProperty
		constexpr auto __EventRegionsError__Delegate = 0x118; // DelegateProperty
	}

	namespace n_ULocalClubData_X {
		constexpr auto Clubs = 0x60; // TArray<ObjectProperty>
		constexpr auto Invites = 0x70; // TArray<FPlayerClubPair>
		constexpr auto NextClubID = 0x80; // int32_t
	}

	namespace n_UServerPerformanceConfig_TA {
		constexpr auto InternalLowFPS = 0x78; // float
		constexpr auto InternalLowFPSTimeThreshold = 0x7c; // float
		constexpr auto PublicBadFPS = 0x80; // float
		constexpr auto PublicMediocreFPS = 0x84; // float
		constexpr auto FpsRollingAverageTime = 0x88; // float
	}

	namespace n_ACrowdManager_TA {
		constexpr auto CrowdActors = 0x268; // TArray<ObjectProperty>
		constexpr auto Settings = 0x278; // ObjectProperty
		constexpr auto bInitialized = 0x280; // uint32_t : 1
		constexpr auto RandomChantCrowdActors = 0x288; // TArray<ObjectProperty>
		constexpr auto ReplicatedGlobalOneShotSound = 0x298; // ObjectProperty
		constexpr auto DefenseZoneTime = 0x2a0; // float
		constexpr auto GameEvent = 0x2a8; // ObjectProperty
	}

	namespace n_U__PsyNetConnection_X__ProcessServiceCall_5B7BD5F248089D8D5A274C871B941C96 {
		constexpr auto Response = 0x60; // ObjectProperty
	}

	namespace n_UGFxData_SpecialEvents_TA {
		constexpr auto EventData = 0x98; // ObjectProperty
		constexpr auto EventState = 0xa0; // ESpecialEventState
		constexpr auto Currency = 0xa4; // int32_t
		constexpr auto SecondsRemaining = 0xa8; // int32_t
		constexpr auto EventStores = 0xb0; // TArray<ObjectProperty>
		constexpr auto Wallet = 0xc0; // ObjectProperty
		constexpr auto bSpecialEventButtonVisible = 0xc8; // uint32_t : 1
	}

	namespace n_ULocalCacheTests_X {
		constexpr auto CacheFilePath = 0x60; // FString
	}

	namespace n_USeqEvent_AnimNotify {
		constexpr auto NotifyName = 0x180; // FName
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x60; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x70; // int32_t
	}

	namespace n_UProductAssetReferencePaintFinish_TA {
		constexpr auto PaintFinishAsset = 0x70; // ObjectProperty
	}

	namespace n_UEulaConfig_TA {
		constexpr auto bRequiresAcceptance = 0x78; // uint32_t : 1
		constexpr auto ExcludedPlatforms = 0x80; // TArray<OnlinePlatform>
	}

	namespace n_UCheatManagerBase_TA {
		constexpr auto LastEquippedProductID = 0x98; // int32_t
		constexpr auto LastEquippedInstanceID = 0xa0; // FProductInstanceID
	}

	namespace n_USimilarSeasonLogos_TA {
		constexpr auto LogoGroups = 0x60; // TArray<FSimilarLogoGroup>
	}

	namespace n_URankedReconnectSave_TA {
		constexpr auto Reservation = 0xc8; // FServerReservationData
		constexpr auto EpochTime = 0x148; // QWordProperty
	}

	namespace n_UAnimNodeSequenceBlendBase {
		constexpr auto Anims = 0x1a8; // TArray<FAnimBlendInfo>
	}

	namespace n_URPC_SubmitUserBugReport_TA {
		constexpr auto AppSessionID = 0xe8; // FGuid
		constexpr auto LevelSessionID = 0xf8; // FGuid
		constexpr auto MatchGUID = 0x108; // FString
		constexpr auto MatchSeconds = 0x118; // int32_t
		constexpr auto BugDescription = 0x120; // FString
		constexpr auto BugCategories = 0x130; // TArray<FName>
		constexpr auto bDescriptionFiltered = 0x140; // uint32_t : 1
		constexpr auto ConfirmationCode = 0x148; // FString
		constexpr auto UploadZipURL = 0x158; // FString
	}

	namespace n_UTourBracketCache_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Config = 0x68; // ObjectProperty
		constexpr auto Brackets = 0x70; // TArray<FBracketResult>
		constexpr auto Requests = 0x80; // TArray<FBracketRequest>
		constexpr auto __OnBracketRetrieved__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnBracketError__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UStreamerSafeConfig_TA {
		constexpr auto StreamerSafeSoundCues = 0x78; // TArray<ObjectProperty>
		constexpr auto bPlayerSettingEnabled = 0x88; // uint32_t : 1
		constexpr auto __bPlayerSettingEnabled__ChangeNotify = 0x90; // DelegateProperty
	}

	namespace n_UProductOverride_SpecificMaterials_TA {
		constexpr auto MaterialOverrides = 0x60; // TArray<FMaterialAndMaterialOverride>
	}

	namespace n_UTexture2DDynamic {
		constexpr auto SizeX = 0x150; // int32_t
		constexpr auto SizeY = 0x154; // int32_t
		constexpr auto Format = 0x158; // EPixelFormat
		constexpr auto NumMips = 0x15c; // int32_t
		constexpr auto bIsResolveTarget = 0x160; // uint32_t : 1
	}

	namespace n_ALensFlareSource {
		constexpr auto LensFlareComp = 0x268; // ComponentProperty
		constexpr auto bCurrentlyActive = 0x270; // uint32_t : 1
	}

	namespace n_ACamera_Replay_TA {
		constexpr auto OverrideStates = 0x7a8; // TArray<ObjectProperty>
		constexpr auto FocusActorString = 0x7b8; // FString
		constexpr auto CameraMode = 0x7c8; // FName
		constexpr auto DefaultCameraMode = 0x7d0; // FName
		constexpr auto DOFDistanceLimits = 0x7d8; // FProfileSliderLimits
		constexpr auto DOFInfLimits = 0x7e4; // FProfileSliderLimits
		constexpr auto DOFKernelLimits = 0x7f0; // FProfileSliderLimits
		constexpr auto GreenScreenLimits = 0x7fc; // FProfileSliderLimits
		constexpr auto BloomScaleLimits = 0x808; // FProfileSliderLimits
		constexpr auto FilterOverlayLimits = 0x814; // FProfileSliderLimits
		constexpr auto bReplayTranslucency = 0x820; // uint32_t : 1
		constexpr auto bGreenScreen = 0x820; // uint32_t : 1
		constexpr auto GreenScreenColorIndex = 0x824; // float
		constexpr auto CurrentCameraState = 0x828; // ObjectProperty
		constexpr auto PreviousCameraProxyState = 0x830; // ObjectProperty
		constexpr auto __EventCameraProxyStateChanged__Delegate = 0x838; // DelegateProperty
		constexpr auto __CameraMode__ChangeNotify = 0x850; // DelegateProperty
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x70; // Beam2SourceTargetMethod
		constexpr auto TargetTangentMethod = 0x71; // Beam2SourceTargetTangentMethod
		constexpr auto TargetName = 0x74; // FName
		constexpr auto Target = 0x80; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0xa8; // uint32_t : 1
		constexpr auto bLockTarget = 0xa8; // uint32_t : 1
		constexpr auto bLockTargetTangent = 0xa8; // uint32_t : 1
		constexpr auto bLockTargetStength = 0xa8; // uint32_t : 1
		constexpr auto TargetTangent = 0xb0; // FRawDistributionVector
		constexpr auto TargetBone = 0xd8; // FName
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto LockRadius = 0x108; // float
	}

	namespace n_UAdHocDelegates {
		constexpr auto __EventAdHocOnNetworkChanged__Delegate = 0x60; // DelegateProperty
		constexpr auto __EventAdHocError__Delegate = 0x78; // DelegateProperty
		constexpr auto __EventAdHocInitialized__Delegate = 0x90; // DelegateProperty
		constexpr auto __EventAccessPointCreated__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventBecomeStation__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventStationConnected__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventStationDisconnected__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventAdHocFinalized__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventAdHocDestroyed__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UFreeplayCommandsConfig_TA {
		constexpr auto BallSpinSpeedMultiplier = 0x78; // float
		constexpr auto BallInFrontDistance = 0x7c; // float
		constexpr auto BallOnCarDistance = 0x80; // float
		constexpr auto BallOnCarBaseForwardOffset = 0x84; // float
		constexpr auto BallOnCarForwardOffsetFromTurn = 0x88; // float
		constexpr auto BallOnCarAccelerationEffect = 0x8c; // float
		constexpr auto BallOnCarMaxRightOffset = 0x90; // float
		constexpr auto BallOnCarSlowRightOffsetPerc = 0x94; // float
		constexpr auto BallOnCarMinUpOffsetPerc = 0x98; // float
		constexpr auto PopBallUpZVelocity = 0x9c; // float
		constexpr auto MaxVerticalLaunchSpeedRatio = 0xa0; // float
		constexpr auto DefendShotLaunchSpeed = 0xa4; // float
		constexpr auto RedirectPassLaunchSpeed = 0xa8; // float
		constexpr auto RedirectPassVelocityWeight = 0xac; // float
		constexpr auto RedirectPassVelocityZWeight = 0xb0; // float
		constexpr auto RedirectPassGoalWeight = 0xb4; // float
		constexpr auto RedirectPassMaxGoalLeading = 0xb8; // float
		constexpr auto RedirectPassAdditionalHeight = 0xbc; // float
		constexpr auto RedirectPassSpeedDropoffRange = 0xc0; // float
		constexpr auto RedirectPassIterations = 0xc4; // int32_t
		constexpr auto TeleportSucceededSFX = 0xc8; // ObjectProperty
		constexpr auto TeleportFailedSFX = 0xd0; // ObjectProperty
		constexpr auto LaunchBallSFX = 0xd8; // ObjectProperty
	}

	namespace n_UGFxData_Shops_TA {
		constexpr auto ShopManager = 0x98; // ObjectProperty
		constexpr auto Config = 0xa0; // ObjectProperty
		constexpr auto Shops = 0xa8; // TArray<ObjectProperty>
		constexpr auto DebugShopID = 0xb8; // int32_t
		constexpr auto bHideMainMenuButton = 0xbc; // uint32_t : 1
		constexpr auto CrateShopSet = 0xc0; // ComponentProperty
		constexpr auto CacheDuration = 0xc8; // float
		constexpr auto LastCacheTime = 0xcc; // float
		constexpr auto ShopTask = 0xd0; // ObjectProperty
		constexpr auto ShopMetrics = 0xd8; // ComponentProperty
		constexpr auto __EventReceivedShops__Delegate = 0xe0; // DelegateProperty
	}

	namespace n_UFracturedStaticMeshComponent {
		constexpr auto FragmentNeighborsVisible = 0x338; // TArray<char>
		constexpr auto VisibleBox = 0x348; // FBox
		constexpr auto bUseSkinnedRendering = 0x364; // uint32_t : 1
		constexpr auto bUseVisibleVertsForBounds = 0x364; // uint32_t : 1
		constexpr auto bTopFragmentsRootNonDestroyable = 0x364; // uint32_t : 1
		constexpr auto bBottomFragmentsRootNonDestroyable = 0x364; // uint32_t : 1
		constexpr auto TopBottomFragmentDistThreshold = 0x368; // float
		constexpr auto LoseChunkOutsideMaterialOverride = 0x370; // ObjectProperty
		constexpr auto FragmentBoundsMaxZ = 0x378; // float
		constexpr auto FragmentBoundsMinZ = 0x37c; // float
		constexpr auto SkinnedComponent = 0x380; // ComponentProperty
	}

	namespace n_UNavMeshGoal_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x80; // float
		constexpr auto MinDistance = 0x84; // float
		constexpr auto MinTraversalDist = 0x88; // float
		constexpr auto EnvelopeTestPoint = 0x8c; // FVector
	}

	namespace n_AFracturedStaticMeshPart {
		constexpr auto DestroyPartRadiusFactor = 0x2f0; // float
		constexpr auto BaseFracturedMeshActor = 0x2f8; // ObjectProperty
		constexpr auto bHasBeenRecycled = 0x300; // uint32_t : 1
		constexpr auto bChangeRBChannelWhenAsleep = 0x300; // uint32_t : 1
		constexpr auto bCompositeThatExplodesOnImpact = 0x300; // uint32_t : 1
		constexpr auto LastSpawnTime = 0x304; // float
		constexpr auto PartPoolIndex = 0x308; // int32_t
		constexpr auto FracPartGravScale = 0x30c; // float
		constexpr auto AsleepRBChannel = 0x310; // ERBCollisionChannel
		constexpr auto OldVelocity = 0x314; // FVector
		constexpr auto CurrentVibrationLevel = 0x320; // float
		constexpr auto LastImpactSoundTime = 0x324; // float
	}

	namespace n_UGameSetting_X {
		constexpr auto bHidden = 0x60; // uint32_t : 1
	}

	namespace n_UDynamicValueModifierDuration_X {
		constexpr auto Duration = 0x78; // float
		constexpr auto Value = 0x7c; // float
		constexpr auto CurveValue = 0x80; // FInterpCurveFloat
		constexpr auto bUseCurve = 0x98; // uint32_t : 1
	}

	namespace n_UEncodeObjectJson_X {
		constexpr auto JsonSerializer = 0x78; // ObjectProperty
	}

	namespace n_UArenaSoundSettings_TA {
		constexpr auto InGameMusicCue = 0x60; // ObjectProperty
		constexpr auto bDynamicMusic = 0x68; // uint32_t : 1
		constexpr auto UpdateStatSounds = 0x68; // uint32_t : 1
		constexpr auto GoalScoreSound = 0x70; // ObjectProperty
		constexpr auto GameStartStinger = 0x78; // ObjectProperty
		constexpr auto GoalScoreStinger = 0x80; // ObjectProperty
		constexpr auto EpicSaveStinger = 0x88; // ObjectProperty
		constexpr auto OvertimeStinger = 0x90; // ObjectProperty
		constexpr auto WinStinger = 0x98; // ObjectProperty
		constexpr auto LoseStinger = 0xa0; // ObjectProperty
		constexpr auto ForfeitStinger = 0xa8; // ObjectProperty
		constexpr auto GoalScoreStingerDelay = 0xb0; // float
		constexpr auto Win = 0xb8; // ObjectProperty
		constexpr auto Lose = 0xc0; // ObjectProperty
		constexpr auto CountdownStart = 0xc8; // ObjectProperty
		constexpr auto CountdownEnd = 0xd0; // ObjectProperty
		constexpr auto OneMinRemaining = 0xd8; // ObjectProperty
		constexpr auto ThirtySecondsRemaining = 0xe0; // ObjectProperty
		constexpr auto OvertimeStart = 0xe8; // ObjectProperty
		constexpr auto StatSounds = 0xf0; // TArray<FArenaStatSound>
		constexpr auto CountDownSoundList = 0x100; // TArray<ObjectProperty>
		constexpr auto RoundCountDownSoundList = 0x110; // TArray<ObjectProperty>
		constexpr auto GoalStingerEnvironment = 0x120; // FAkEnvironment
		constexpr auto LevelDefaultEnvironment = 0x140; // FAkEnvironment
		constexpr auto ArenaReverbShareset = 0x160; // FName
	}

	namespace n_U__GFxData_AutoTour_TourCard_TA__HandleSubscriptionChanged_8D58095B4FC957C2E2231C9AD0AA89F8 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_URPC_GetSkillLeaderboard_X {
		constexpr auto Playlist = 0x110; // int32_t
	}

	namespace n_AAkAmbientSoundActor {
		constexpr auto PlaySoundComponent = 0x270; // ComponentProperty
	}

	namespace n_UBTAction_HitBall {
		constexpr auto RandomTargetOffset = 0x1c8; // float
		constexpr auto AimOffsetScale = 0x1cc; // float
		constexpr auto CurrentRandomTargetOffset = 0x1d0; // FVector
		constexpr auto SoccarAI = 0x1e0; // ObjectProperty
	}

	namespace n_ULightmassLevelSettings {
		constexpr auto NumIndirectLightingBounces = 0x60; // int32_t
		constexpr auto EnvironmentColor = 0x64; // FColor
		constexpr auto EnvironmentIntensity = 0x68; // float
		constexpr auto EmissiveBoost = 0x6c; // float
		constexpr auto DiffuseBoost = 0x70; // float
		constexpr auto SpecularBoost = 0x74; // float
		constexpr auto bUseAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto bVisualizeAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto DirectIlluminationOcclusionFraction = 0x7c; // float
		constexpr auto IndirectIlluminationOcclusionFraction = 0x80; // float
		constexpr auto OcclusionExponent = 0x84; // float
		constexpr auto FullyOccludedSamplesFraction = 0x88; // float
		constexpr auto MaxOcclusionDistance = 0x8c; // float
	}

	namespace n_USeqVar_RandomInt {
		constexpr auto Min = 0xe8; // int32_t
		constexpr auto Max = 0xec; // int32_t
	}

	namespace n_UExplosionCollisionShapes_X {
		constexpr auto Location = 0x70; // FVector
		constexpr auto GrowthAmount = 0x7c; // float
	}

	namespace n_UParticleModuleSubUVSelect {
		constexpr auto SubImageSelect = 0x70; // FRawDistributionVector
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0xb1e8; // ObjectProperty
	}

	namespace n_UPingMessage_X {
		constexpr auto bIsResponse = 0x60; // uint32_t : 1
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x78; // int32_t
		constexpr auto bStartAtSecondKey = 0x7c; // uint32_t : 1
	}

	namespace n_UOnlinePlayerFriends_X {
		constexpr auto bAllowSamePlatformPsyNetFriends = 0x98; // uint32_t : 1
		constexpr auto bRepeatFriendsListDownloadsUntilSuccess = 0x98; // uint32_t : 1
		constexpr auto bFetchingLinkedAccounts = 0x98; // uint32_t : 1
		constexpr auto CachedFriends = 0xa0; // ComponentProperty
		constexpr auto PlatformFriends = 0xa8; // ComponentProperty
		constexpr auto PsyNetFriends = 0xb0; // ComponentProperty
		constexpr auto EpicFriends = 0xb8; // ComponentProperty
		constexpr auto BlockedPlayers = 0xc0; // ComponentProperty
		constexpr auto PsyNetBlockList = 0xc8; // ComponentProperty
		constexpr auto EpicBlockList = 0xd0; // ComponentProperty
		constexpr auto PlatformToEpicAccountMap = 0xd8; // ComponentProperty
		constexpr auto EpicToPlatformAccountMap = 0xe0; // ComponentProperty
		constexpr auto PlatformFriendsDownloadDelayer = 0xe8; // ComponentProperty
		constexpr auto PsyNetFriendsDownloadDelayer = 0xf0; // ComponentProperty
		constexpr auto EpicFriendsDownloadDelayer = 0xf8; // ComponentProperty
		constexpr auto BlockedListDownloadDelayer = 0x100; // ComponentProperty
		constexpr auto PendingFriendAccepts = 0x108; // TArray<FUniqueNetId>
		constexpr auto OSSConfig = 0x118; // ObjectProperty
		constexpr auto EpicConfig = 0x120; // ObjectProperty
		constexpr auto EpicFriendsPlugin = 0x128; // ObjectProperty
		constexpr auto __EventFriendsListChanged__Delegate = 0x130; // DelegateProperty
		constexpr auto __EventPsyNetBlockedListDownloadComplete__Delegate = 0x148; // DelegateProperty
		constexpr auto __EventPsyNetBlockedListChanged__Delegate = 0x160; // DelegateProperty
		constexpr auto __EventPsyNetBlockedPlayer__Delegate = 0x178; // DelegateProperty
		constexpr auto __EventPsyNetUnblockedPlayer__Delegate = 0x190; // DelegateProperty
		constexpr auto __EventAcceptEpicFriendInvite__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __EventDeclineEpicFriendInvite__Delegate = 0x1c0; // DelegateProperty
		constexpr auto __EventChatMessage__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __EventPsyNetStatusUpdate__Delegate = 0x1f0; // DelegateProperty
		constexpr auto __EventPsyNetPsyTagUpdate__Delegate = 0x208; // DelegateProperty
		constexpr auto __EventPlatformStatusUpdate__Delegate = 0x220; // DelegateProperty
		constexpr auto __EventEpicStatusUpdate__Delegate = 0x238; // DelegateProperty
		constexpr auto __EventEpicFriendInviteReceived__Delegate = 0x250; // DelegateProperty
		constexpr auto __EventEpicFriendInviteRemoved__Delegate = 0x268; // DelegateProperty
		constexpr auto __EventEpicFriendInviteSucceeded__Delegate = 0x280; // DelegateProperty
		constexpr auto __EventEpicFriendInviteFailed__Delegate = 0x298; // DelegateProperty
		constexpr auto __EventEpicPlayerUnfriended__Delegate = 0x2b0; // DelegateProperty
		constexpr auto __EventQueriedUserByEpicDisplayName__Delegate = 0x2c8; // DelegateProperty
		constexpr auto __EventPlatformFriendsListDownloadCompleted__Delegate = 0x2e0; // DelegateProperty
		constexpr auto __EventPsyNetFriendsListDownloadCompleted__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __EventEpicFriendsListDownloadCompleted__Delegate = 0x310; // DelegateProperty
	}

	namespace n_U__TAsyncResult__array_LanServerRecord_X__Copy_B4CBD1704922F8D042A80993BD1A3BF5 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_U__GameEvent_Tutorial_FreePlay_TA__HandleHitGoal_47D387704127DDDA2899C7AEE9F8FDE6 {
		constexpr auto Goal = 0x60; // ComponentProperty
	}

	namespace n_USeqVar_RandomFloat {
		constexpr auto Min = 0xe8; // float
		constexpr auto Max = 0xec; // float
	}

	namespace n_UOnlineGameLanServer_X {
		constexpr auto Reservations = 0x180; // ObjectProperty
		constexpr auto CustomMatch = 0x188; // FCustomMatchSettings
		constexpr auto CustomMatchOwner = 0x218; // FUniqueNetId
	}

	namespace n_U__GFxData_Products_TA__InstanceAttributes_C72139224F0321CF5E64AEA7C05011BE {
		constexpr auto AttributeProvider = 0x60; // TScriptInterface<Class>
	}

	namespace n_AScout {
		constexpr auto PathSizes = 0x518; // TArray<FPathSizeInfo>
		constexpr auto TestJumpZ = 0x528; // float
		constexpr auto TestGroundSpeed = 0x52c; // float
		constexpr auto TestMaxFallSpeed = 0x530; // float
		constexpr auto TestFallSpeed = 0x534; // float
		constexpr auto MaxLandingVelocity = 0x538; // float
		constexpr auto MinNumPlayerStarts = 0x53c; // int32_t
		constexpr auto DefaultReachSpecClass = 0x540; // FNone*
		constexpr auto EdgePathColors = 0x548; // TArray<FColor>
		constexpr auto NavMeshGen_StepSize = 0x558; // float
		constexpr auto NavMeshGen_EntityHalfHeight = 0x55c; // float
		constexpr auto NavMeshGen_StartingHeightOffset = 0x560; // float
		constexpr auto NavMeshGen_MaxDropHeight = 0x564; // float
		constexpr auto NavMeshGen_MaxStepHeight = 0x568; // float
		constexpr auto NavMeshGen_VertZDeltaSnapThresh = 0x56c; // float
		constexpr auto NavMeshGen_MinPolyArea = 0x570; // float
		constexpr auto NavMeshGen_BorderBackfill_CheckDist = 0x574; // float
		constexpr auto NavMeshGen_MinMergeDotAreaThreshold = 0x578; // float
		constexpr auto NavMeshGen_MinMergeDotSmallArea = 0x57c; // float
		constexpr auto NavMeshGen_MinMergeDotLargeArea = 0x580; // float
		constexpr auto NavMeshGen_MaxPolyHeight = 0x584; // float
		constexpr auto NavMeshGen_HeightMergeThreshold = 0x588; // float
		constexpr auto NavMeshGen_EdgeMaxDelta = 0x58c; // float
		constexpr auto NavMeshGen_MaxGroundCheckSize = 0x590; // float
		constexpr auto NavMeshGen_MinEdgeLength = 0x594; // float
		constexpr auto NavMeshGen_ExpansionDoObstacleMeshSimplification = 0x598; // uint32_t : 1
		constexpr auto bHightlightOneWayReachSpecs = 0x598; // uint32_t : 1
		constexpr auto MinMantleFallDist = 0x59c; // float
		constexpr auto MaxMantleFallDist = 0x5a0; // float
		constexpr auto MinMantleLateralDist = 0x5a4; // float
		constexpr auto MaxMantleLateralDist = 0x5a8; // float
		constexpr auto MaxMantleFallTime = 0x5ac; // float
	}

	namespace n_UHttpRequestWindowsMcp {
		constexpr auto AppID = 0xa8; // FString
		constexpr auto AppSecret = 0xb8; // FString
	}

	namespace n_USeqAct_SpawnBot_TA {
		constexpr auto SpawnedBot = 0x160; // ObjectProperty
		constexpr auto SpawnTransform = 0x168; // ObjectProperty
		constexpr auto SkillLevel = 0x170; // float
		constexpr auto bDisableAllLogic = 0x174; // uint32_t : 1
		constexpr auto bCollideWithBall = 0x174; // uint32_t : 1
		constexpr auto bCollideWithVehicle = 0x174; // uint32_t : 1
		constexpr auto TeamIndex = 0x178; // int32_t
	}

	namespace n_UDistributionVectorConstantCurveBase {
		constexpr auto ConstantCurve = 0x80; // FInterpCurveVector
		constexpr auto bLockAxes = 0x98; // uint32_t : 1
		constexpr auto LockedAxes = 0x9c; // EDistributionVectorLockFlags
	}

	namespace n_UControlPreset_X {
		constexpr auto PCBindings = 0x60; // TArray<FPlayerBinding>
		constexpr auto GamepadBindings = 0x70; // TArray<FPlayerBinding>
		constexpr auto bRemovedPCOverrides = 0x80; // uint32_t : 1
		constexpr auto bRemovedGamepadOverrides = 0x80; // uint32_t : 1
		constexpr auto SteamInputBindings = 0x88; // TArray<FPlayerBinding>
		constexpr auto CustomPresetName = 0x98; // FName
		constexpr auto DefaultPresetName = 0xa0; // FName
	}

	namespace n_U__BanSync_TA__GetPlayerBanMessages_47355C4C4E354A0281CCA4A946364B88 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_U__ShopsService_PsyNet_TA__GetAllShops_F59423F445988D046B6BAE87D84075DA {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto FailedCallback = 0x78; // DelegateProperty
	}

	namespace n_UInterpTrackInstSkelControlStrength {
		constexpr auto bSavedControlledByAnimMetaData = 0x60; // uint32_t : 1
	}

	namespace n_USeqAct_Possess {
		constexpr auto PawnToPossess = 0x160; // ObjectProperty
		constexpr auto bKillOldPawn = 0x168; // uint32_t : 1
	}

	namespace n_UBanMessage_X {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto BanType = 0xa8; // EBanType
		constexpr auto SeverityType = 0xa9; // ESeverityType
		constexpr auto Title = 0xb0; // FString
		constexpr auto Body = 0xc0; // FString
		constexpr auto BannedMinutes = 0xd0; // int32_t
		constexpr auto bContributedToBan = 0xd4; // uint32_t : 1
		constexpr auto Citations = 0xd8; // TArray<FString>
		constexpr auto BannedUntilTime = 0xe8; // float
		constexpr auto __EventBanEnded__Delegate = 0xf0; // DelegateProperty
	}

	namespace n_USeqVar_Float {
		constexpr auto FloatValue = 0xe0; // float
	}

	namespace n_AGameInfo_Replay_TA {
		constexpr auto Replay = 0x4d8; // ObjectProperty
		constexpr auto ReplayPath = 0x4e0; // FString
		constexpr auto GameEvent = 0x4f0; // ObjectProperty
		constexpr auto PrevTime = 0x4f8; // float
		constexpr auto ReplayStartTime = 0x4fc; // float
		constexpr auto ReplayKismetLevelName = 0x500; // FString
		constexpr auto __EventReplayStarted__Delegate = 0x510; // DelegateProperty
		constexpr auto __EventGameEventSet__Delegate = 0x528; // DelegateProperty
	}

	namespace n_URPC_GetUploadUrls_TA {
		constexpr auto Match = 0xe8; // ObjectProperty
		constexpr auto ReplayContentType = 0xf0; // FString
		constexpr auto LogContentType = 0x100; // FString
		constexpr auto FlatbufferContentType = 0x110; // FString
		constexpr auto UploadReplayUrl = 0x120; // FString
		constexpr auto UploadLogUrl = 0x130; // FString
		constexpr auto UploadFlatbufferUrl = 0x140; // FString
		constexpr auto FlatBufferMetaData = 0x150; // TArray<FKeyValuePair>
	}

	namespace n_UGFxData_ProductAttribute_ProductLink_TA {
		constexpr auto ProductID = 0xb0; // int32_t
	}

	namespace n_UContentConfig_X {
		constexpr auto ContentMap = 0x78; // TArray<FContentPair>
	}

	namespace n_USeqAct_SetMatInstScalarParam {
		constexpr auto MatInst = 0x160; // ObjectProperty
		constexpr auto ParamName = 0x168; // FName
		constexpr auto ScalarValue = 0x170; // float
	}

	namespace n_USeasonSave_TA {
		constexpr auto Seasons = 0xc8; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_NotifyEventOnTutorial_TA {
		constexpr auto EventName = 0x160; // FString
		constexpr auto Instigator = 0x170; // ObjectProperty
	}

	namespace n_UBTAction_Input {
		constexpr auto Input = 0xc0; // FVehicleInputs
	}

	namespace n_UGFxData_ServerBrowser_TA {
		constexpr auto TAPlayer = 0x98; // ObjectProperty
		constexpr auto ServerName = 0xa0; // FString
		constexpr auto Password = 0xb0; // FString
		constexpr auto Results = 0xc0; // TArray<FServerResult>
		constexpr auto ProcessingModal = 0xd0; // ObjectProperty
		constexpr auto JoiningServerName = 0xd8; // FString
		constexpr auto SaveData = 0xe8; // ObjectProperty
	}

	namespace n_UTournamentSettingsSave_TA {
		constexpr auto TourCreateSettings = 0xc8; // FTourCreateSettings
		constexpr auto TourSearchSettings = 0x100; // FTourSearchSettings
		constexpr auto GameTags = 0x160; // ObjectProperty
		constexpr auto CheckInTeamName = 0x168; // FString
	}

	namespace n_U__TourBracketSimulator_TA__RoundStep_174B8FE74C951E48BADAE5826789B474 {
		constexpr auto BracketRound = 0x60; // int32_t
	}

	namespace n_UGFxData_FreeToPlayRewards_TA {
		constexpr auto LegacyStatus = 0x98; // ELegacyBoxStatus
		constexpr auto CompensationItems = 0xa0; // TArray<FCompensationItem>
		constexpr auto bIsLegacySet = 0xb0; // uint32_t : 1
	}

	namespace n_UPartyMessage_CurrentVoiceRoom_TA {
		constexpr auto PlayerID = 0xa8; // FUniqueNetId
		constexpr auto RoomName = 0xf0; // FString
	}

	namespace n_USeqAct_GetPlayerCar_TA {
		constexpr auto PlayerName = 0x160; // FString
		constexpr auto FoundActor = 0x170; // ObjectProperty
	}

	namespace n_ASplineFocusTarget_TA {
		constexpr auto Spline = 0x268; // ObjectProperty
		constexpr auto DistanceAhead = 0x270; // float
	}

	namespace n_UGFxData_PlayerBanner_TA {
		constexpr auto PlayerBanner = 0x98; // ComponentProperty
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x78; // FRawDistributionFloat
		constexpr auto Velocity = 0xa0; // FRawDistributionFloat
		constexpr auto Direction = 0xc8; // FVector
	}

	namespace n_UUIWeaponSummary {
		constexpr auto ClassPathName = 0xa0; // FString
		constexpr auto FriendlyName = 0xb0; // FString
		constexpr auto WeaponDescription = 0xc0; // FString
		constexpr auto bIsDisabled = 0xd0; // uint32_t : 1
	}

	namespace n_URPC_GetWallet_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Currencies = 0x130; // TArray<FCurrency>
	}

	namespace n_AStaticEmitterCollectionActor {
		constexpr auto ParticleSystemComponents = 0x280; // TArray<ComponentProperty>
	}

	namespace n_USeqVar_Player {
		constexpr auto Players = 0x108; // TArray<ObjectProperty>
		constexpr auto bAllPlayers = 0x118; // uint32_t : 1
		constexpr auto PlayerIdx = 0x11c; // int32_t
	}

	namespace n_USeqAct_IsTargetInPlayerCameraView {
		constexpr auto Instigator = 0x178; // ObjectProperty
		constexpr auto Target = 0x180; // ObjectProperty
		constexpr auto MaxConeAngle = 0x188; // float
	}

	namespace n_U__EpicFriendsPlugin_X__AcceptFriendRequest_BFC2E5064E39448CD464B4B5DFEB9EB3 {
		constexpr auto FriendId = 0x60; // FUniqueNetId
	}

	namespace n_UParticleModuleVelocitySurfaceNormal_X {
		constexpr auto MeshActorParamName = 0x78; // FName
		constexpr auto VelocityMultiplier = 0x80; // FRawDistributionFloat
	}

	namespace n_U__GFxData_Clubs_TA__UpdateClubColors_A74294764F5B1EE868528C82D53BF18D {
		constexpr auto PrimaryColor = 0x60; // int32_t
		constexpr auto AccentColor = 0x64; // int32_t
	}

	namespace n_USpeedTreeActorFactory {
		constexpr auto SpeedTree = 0xa0; // ObjectProperty
	}

	namespace n_UWheelShimmy_TA {
		constexpr auto AccumDistance = 0x78; // float
		constexpr auto Wave1Freq = 0x7c; // float
		constexpr auto Wave2Freq = 0x80; // float
		constexpr auto OnOffBias = 0x84; // float
		constexpr auto HighFreq = 0x88; // float
		constexpr auto ShimmyMag = 0x8c; // float
		constexpr auto AffectedWheels = 0x90; // TArray<int32_t>
		constexpr auto SkelMeshComponent = 0xa0; // ComponentProperty
		constexpr auto Wheel = 0xa8; // ComponentProperty
		constexpr auto RollControl = 0xb0; // ObjectProperty
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x60; // ObjectProperty
		constexpr auto GroupActor = 0x68; // ObjectProperty
		constexpr auto TrackInst = 0x70; // TArray<ObjectProperty>
		constexpr auto CachedCamOverridePostProcess = 0x80; // FPointer
	}

	namespace n_UStatGraphSystem_TA {
		constexpr auto GraphSampleTime = 0x70; // float
		constexpr auto GraphLevel = 0x74; // EStatGraphLevel
		constexpr auto PerfStatGraph = 0x78; // ComponentProperty
		constexpr auto NetStatGraph = 0x80; // ComponentProperty
		constexpr auto InputBufferGraph = 0x88; // ComponentProperty
		constexpr auto StatGraphs = 0x90; // TArray<ComponentProperty>
		constexpr auto VisibleStatGraphs = 0xa0; // TArray<ComponentProperty>
		constexpr auto PreallocGraphLines = 0xb0; // int32_t
	}

	namespace n_U__GFxData_Settings_TA__SetTourScheduleRegion_48762F084898C5E30459E0964A47FC22 {
		constexpr auto AutoTour = 0x60; // ObjectProperty
		constexpr auto Value = 0x68; // FString
	}

	namespace n_ACoverGroup {
		constexpr auto CoverLinkRefs = 0x268; // TArray<FActorReference>
		constexpr auto AutoSelectRadius = 0x278; // float
		constexpr auto AutoSelectHeight = 0x27c; // float
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0xa0; // uint32_t : 1
		constexpr auto FrameRate = 0xa8; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xd0; // int32_t
	}

	namespace n_U__OnlineGameSkill_X__ClearSkill_BB73CBEE409012C944AF2EB13E7FD863 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_USeqAct_CheckRotationAngle_TA {
		constexpr auto Actor = 0x178; // ObjectProperty
		constexpr auto CheckActor = 0x180; // ObjectProperty
		constexpr auto RotationAngle = 0x188; // float
		constexpr auto LastRotation = 0x18c; // FRotator
		constexpr auto LastDirection = 0x198; // float
		constexpr auto CheckAxis = 0x19c; // FVector
		constexpr auto TurnAxis = 0x1a8; // FVector
		constexpr auto MaxRotationAngle = 0x1b4; // float
		constexpr auto bResetOnDirectionChange = 0x1b8; // uint32_t : 1
		constexpr auto AxisDirection = 0x1bc; // ECheckAxis
	}

	namespace n_UOnlineFriendsInterfaceImpl {
		constexpr auto VfTable_IOnlineFriendsInterface = 0x60; // FPointer
		constexpr auto __OnReceivedLinkedAccount__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0xe0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xe0; // uint32_t : 1
		constexpr auto InstanceOverride = 0xe8; // FPointer
	}

	namespace n_ANxGenericForceField {
		constexpr auto Coordinates = 0x2c0; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2c4; // FVector
		constexpr auto PositionMultiplierX = 0x2d0; // FVector
		constexpr auto PositionMultiplierY = 0x2dc; // FVector
		constexpr auto PositionMultiplierZ = 0x2e8; // FVector
		constexpr auto PositionTarget = 0x2f4; // FVector
		constexpr auto VelocityMultiplierX = 0x300; // FVector
		constexpr auto VelocityMultiplierY = 0x30c; // FVector
		constexpr auto VelocityMultiplierZ = 0x318; // FVector
		constexpr auto VelocityTarget = 0x324; // FVector
		constexpr auto Noise = 0x330; // FVector
		constexpr auto FalloffLinear = 0x33c; // FVector
		constexpr auto FalloffQuadratic = 0x348; // FVector
		constexpr auto TorusRadius = 0x354; // float
		constexpr auto LinearKernel = 0x358; // FPointer
	}

	namespace n_UNavMeshPathConstraint {
		constexpr auto NextConstraint = 0x60; // ObjectProperty
		constexpr auto NumNodesProcessed = 0x68; // int32_t
		constexpr auto NumThrownOutNodes = 0x6c; // int32_t
		constexpr auto AddedDirectCost = 0x70; // float
		constexpr auto AddedHeuristicCost = 0x74; // float
	}

	namespace n_UAnimNotify_CameraEffect {
		constexpr auto CameraLensEffect = 0x68; // FNone*
	}

	namespace n_UEOSMetrics_X {
		constexpr auto PsyNet = 0x60; // ObjectProperty
		constexpr auto EOSMetricsConfig = 0x68; // ObjectProperty
		constexpr auto LocalPlayer = 0x70; // ObjectProperty
		constexpr auto bCrashing = 0x78; // uint32_t : 1
		constexpr auto EMGuid = 0x80; // FString
		constexpr auto QueryParamsTemplate = 0x90; // FString
		constexpr auto CurrentEvents = 0xa0; // FMetricEventJsonStruct
		constexpr auto LatestPresenceEvent = 0xb0; // ObjectProperty
	}

	namespace n_UPsyNetRetryConfig_X {
		constexpr auto RetryDelays = 0x78; // TArray<ObjectProperty>
		constexpr auto RetryPolicies = 0x88; // TArray<ObjectProperty>
		constexpr auto ReAuthPolicies = 0x98; // TArray<ObjectProperty>
	}

	namespace n_USampleRecordSettings_TA {
		constexpr auto MaxSampleAge = 0x70; // float
		constexpr auto RecordRate = 0x74; // float
	}

	namespace n_UUIDataProvider_PlayerAchievements {
		constexpr auto Achievements = 0x78; // TArray<FAchievementDetails>
	}

	namespace n_UWindowsClient {
		constexpr auto AudioDeviceClass = 0x278; // FNone*
		constexpr auto AllowJoystickInput = 0x2b8; // int32_t
	}

	namespace n_ANxCylindricalForceFieldCapsule {
		constexpr auto RenderComponent = 0x2f0; // ComponentProperty
	}

	namespace n_UAchievementSave_TA {
		constexpr auto BotTeamsPlayed = 0xc8; // TArray<FString>
		constexpr auto TrainingModesPlayed = 0xd8; // TArray<FString>
		constexpr auto LevelsPlayed = 0xe8; // TArray<FName>
		constexpr auto LabsMapsPlayed = 0xf8; // TArray<FName>
		constexpr auto CarsPlayed = 0x108; // TArray<FName>
		constexpr auto RumbleItemsActivated = 0x118; // TArray<FName>
		constexpr auto BraveTheElementsLevelsPlayed = 0x128; // TArray<FName>
		constexpr auto TotalBoostTime = 0x138; // float
		constexpr auto TotalTimeOnWall = 0x13c; // float
		constexpr auto TotalDriveDistanceKM = 0x140; // float
		constexpr auto GoalShotsAny = 0x144; // int32_t
		constexpr auto GoalShots = 0x148; // int32_t
		constexpr auto GoalSaves = 0x14c; // int32_t
		constexpr auto SavageGoals = 0x150; // int32_t
		constexpr auto GameEventsWon = 0x154; // int32_t
		constexpr auto GamesWonInARow = 0x158; // int32_t
		constexpr auto GameEventsPlayed = 0x15c; // int32_t
		constexpr auto SpectacularGoals = 0x160; // int32_t
		constexpr auto TotalScoredGoals = 0x164; // int32_t
		constexpr auto TotalShotsBlocked = 0x168; // int32_t
		constexpr auto RandomItemsDropped = 0x16c; // int32_t
		constexpr auto HighestMVPScore = 0x170; // int32_t
		constexpr auto ChampionshipsWon = 0x174; // int32_t
		constexpr auto RegularSeasonsCompleted = 0x178; // int32_t
		constexpr auto HighestRecordedCertifiedRank = 0x17c; // int32_t
		constexpr auto BreakoutGoals = 0x180; // int32_t
		constexpr auto BreakoutPlatformsDamaged = 0x184; // int32_t
		constexpr auto bResetWinningIsWinningSeasonList = 0x188; // uint32_t : 1
		constexpr auto CustomizedSlotNames = 0x190; // TArray<FName>
		constexpr auto CheckDistancesDrivenKM = 0x1a0; // TArray<float>
		constexpr auto CheckScoredGoals = 0x1b0; // TArray<int32_t>
		constexpr auto CheckShotsBlocked = 0x1c0; // TArray<int32_t>
		constexpr auto CheckGameEventsWon = 0x1d0; // TArray<int32_t>
		constexpr auto CheckRandomItemsDropped = 0x1e0; // TArray<int32_t>
		constexpr auto LeftWingRightWingTeamsPlayed = 0x1f0; // TArray<int32_t>
		constexpr auto WinningIsWinningPlayedWithDLC0Cars = 0x200; // TArray<char>
		constexpr auto CarsCollected = 0x210; // TArray<int32_t>
		constexpr auto ExhibitionMatchesPlayed = 0x220; // int32_t
		constexpr auto RankedMatchesPlayed = 0x224; // int32_t
		constexpr auto UnrankedMatchesPlayed = 0x228; // int32_t
		constexpr auto PrivateMatchesPlayed = 0x22c; // int32_t
		constexpr auto ReplayEditorOpened = 0x230; // int32_t
		constexpr auto CreditsViewed = 0x234; // int32_t
		constexpr auto GoalsOrAssists = 0x238; // int32_t
		constexpr auto CompletedMatchesWithClubmates = 0x23c; // int32_t
		constexpr auto NewOfflineProductsUnlocked = 0x240; // int32_t
	}

	namespace n_U__GFxData_Products_TA__LoadAdditionalProductReferences_00FD667E442C2C4B76B89F9FB2CAB3DD {
		constexpr auto LoadingProduct = 0x60; // ObjectProperty
	}

	namespace n_U__OnlineGameParty_TA__CanPlayerSendPartyMessage_E78C599E435EF97E5A44F580EA7A6C2C {
		constexpr auto OnlinePlayer = 0x60; // ObjectProperty
	}

	namespace n_USeqAct_SetWorldAttractorParam {
		constexpr auto Attractor = 0x160; // TArray<ObjectProperty>
		constexpr auto bEnabledField = 0x170; // uint32_t : 1
		constexpr auto bFalloffTypeField = 0x170; // uint32_t : 1
		constexpr auto bFalloffExponentField = 0x170; // uint32_t : 1
		constexpr auto bRangeField = 0x170; // uint32_t : 1
		constexpr auto bStrengthField = 0x170; // uint32_t : 1
		constexpr auto bEnabled = 0x170; // uint32_t : 1
		constexpr auto FalloffType = 0x174; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x178; // FRawDistributionFloat
		constexpr auto Range = 0x1a0; // FRawDistributionFloat
		constexpr auto Strength = 0x1c8; // FRawDistributionFloat
	}

	namespace n_UPsyNetService_CreateHonorDuel_X {
		constexpr auto Playlist = 0xb0; // int32_t
		constexpr auto PlayerRoles = 0xb8; // FHonorDuelChallenge
	}

	namespace n_U__ProductAsset_Skin_TA__AttemptApplyChassisOverride_72600D354C6C3D36102027B1AC5E3367 {
		constexpr auto ForBodyID = 0x60; // int32_t
	}

	namespace n_ANxTornadoForceFieldCapsule {
		constexpr auto RenderComponent = 0x2f0; // ComponentProperty
	}

	namespace n_UBTLockCollection {
		constexpr auto Locks = 0x70; // TArray<FTimedLock>
		constexpr auto __EventLockSet__Delegate = 0x80; // DelegateProperty
		constexpr auto __EventLockExpired__Delegate = 0x98; // DelegateProperty
	}

	namespace n_U__GameEvent_TA__HasMutatorType_8B40A5B14964DB7F2296E2A6FC0171F3 {
		constexpr auto MutatorClass = 0x60; // FNone*
	}

	namespace n_U__ReplayManager_TA__PlayReplayFile_57FA0FD4483EA3C0A81815B3DBEE9014 {
		constexpr auto Map = 0x60; // FString
		constexpr auto URL = 0x70; // FString
	}

	namespace n_UDemoRecDriver {
		constexpr auto DemoSpectatorClass = 0x238; // FString
		constexpr auto MaxRewindPoints = 0x2e8; // int32_t
		constexpr auto RewindPointInterval = 0x2f0; // float
		constexpr auto NumRecentRewindPoints = 0x2f4; // int32_t
	}

	namespace n_UUIResourceDataProvider {
		constexpr auto bSkipDuringEnumeration = 0x98; // uint32_t : 1
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Period = 0xf8; // float
	}

	namespace n_UInterpFilter_Custom {
		constexpr auto GroupsToInclude = 0x70; // TArray<ObjectProperty>
	}

	namespace n_UPsyNetService_ReservationBase_X {
		constexpr auto ReservationID = 0x90; // FString
		constexpr auto Players = 0xa0; // TArray<FPsyNetBeaconPlayerReservation>
	}

	namespace n_UProductAttribute_TitleID_TA {
		constexpr auto TitleId = 0x80; // FName
	}

	namespace n_UGFxData_Controls_TA {
		constexpr auto Categories = 0x98; // TArray<FLocalizedBindingCategory>
		constexpr auto Actions = 0xa8; // TArray<FLocalizedAction>
		constexpr auto PCBindings = 0xb8; // TArray<FUIPlayerBinding>
		constexpr auto GamepadBindings = 0xc8; // TArray<FUIPlayerBinding>
		constexpr auto Profile = 0xd8; // ObjectProperty
		constexpr auto GamepadSave = 0xe0; // ObjectProperty
		constexpr auto BindingActions = 0xe8; // TArray<FBindingAction>
		constexpr auto PendingRecordBindingAction = 0xf8; // FName
		constexpr auto PendingRecordBindingAxis = 0x100; // FName
		constexpr auto Interaction = 0x108; // ObjectProperty
		constexpr auto ProfilePCSave = 0x110; // ObjectProperty
		constexpr auto CustomPresetOverwriteWarning = 0x118; // FString
		constexpr auto ClearButtonBindingTitle = 0x128; // FString
		constexpr auto ClearKeybindTitle = 0x138; // FString
		constexpr auto ClearButtonBindingDesc = 0x148; // FString
		constexpr auto ClearKeybindDesc = 0x158; // FString
	}

	namespace n_U__OnlineGameReservations_X__SetPlayersWithMigrationData_5B670C6A4B06DFF15852269FEB4E2D39 {
		constexpr auto CurrentPlayers = 0x60; // TArray<FReservationData>
		constexpr auto GEngine = 0x70; // ObjectProperty
	}

	namespace n_UCloudSaveSystem {
		constexpr auto KeyValueStore = 0x60; // TScriptInterface<Class>
		constexpr auto DataBlobStore = 0x70; // TScriptInterface<Class>
		constexpr auto OnGetSaveDataCallbacks = 0x80; // TArray<FGetSaveDataCallbackStruct>
		constexpr auto OnSetSaveDataCallbacks = 0x90; // TArray<FSetSaveDataCallbackStruct>
		constexpr auto DeleteSaveDataCallback = 0xa0; // DelegateProperty
		constexpr auto ActiveSlotForDelete = 0xb8; // int32_t
		constexpr auto ActiveSaveSlotOperations = 0xc0; // TArray<FSaveSlotOperation>
		constexpr auto __OnGetSaveDataCallback__Delegate = 0xd0; // DelegateProperty
		constexpr auto __SaveSystemCallback__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x98; // FName
		constexpr auto MinInput = 0xa0; // FVector
		constexpr auto MaxInput = 0xac; // FVector
		constexpr auto MinOutput = 0xb8; // FVector
		constexpr auto MaxOutput = 0xc4; // FVector
		constexpr auto ParamModes = 0xd0; // DistributionParamMode [0x3]
	}

	namespace n_AVehiclePickup_Boost_TA {
		constexpr auto BoostAmount = 0x2f0; // float
		constexpr auto LocalPickupSound = 0x2f8; // ObjectProperty
		constexpr auto BoostType = 0x300; // EBoostType
	}

	namespace n_UGarageSlotDropGroup_TA {
		constexpr auto Icon = 0xb0; // ObjectProperty
		constexpr auto SlotIndex = 0xb8; // int32_t
	}

	namespace n_USeqCond_IsLoggedIn {
		constexpr auto NumNeededLoggedIn = 0x140; // int32_t
	}

	namespace n_USeqEvent_LOS {
		constexpr auto ScreenCenterDistance = 0x180; // float
		constexpr auto TriggerDistance = 0x184; // float
		constexpr auto bCheckForObstructions = 0x188; // uint32_t : 1
	}

	namespace n_UCameraState_ReplayPlayerView_TA {
		constexpr auto CarCameraState = 0xb8; // ObjectProperty
		constexpr auto BallCameraState = 0xc0; // ObjectProperty
		constexpr auto CurrentCameraState = 0xc8; // ObjectProperty
		constexpr auto CameraSave = 0xd0; // ObjectProperty
	}

	namespace n_UInterpTrackSkelControlStrength {
		constexpr auto SkelControlName = 0xe8; // FName
	}

	namespace n_UGFxData_Chat_TA {
		constexpr auto MaxMessages = 0x98; // int32_t
		constexpr auto MaxActiveChatTabs = 0x9c; // int32_t
		constexpr auto ActiveChatTabs = 0xa0; // TArray<FActiveChatTab>
		constexpr auto PresetGroups = 0xb0; // TArray<FChatPresetMessageGroup>
		constexpr auto PresetMessages = 0xc0; // TArray<FChatPresetMessage>
		constexpr auto Messages = 0xd0; // TArray<FGFxChatMessage>
		constexpr auto BlockedMessageString = 0xe0; // FString
		constexpr auto ChatFilteredString = 0xf0; // FString
		constexpr auto bPreMatchLobby = 0x100; // uint32_t : 1
		constexpr auto LastMessagedCrossPlatformChatState = 0x104; // ECrossPlatformChatState
		constexpr auto ChatHistory = 0x108; // ObjectProperty
		constexpr auto MaxNumGroups = 0x110; // int32_t
		constexpr auto MaxNumMessagesPerGroup = 0x114; // int32_t
		constexpr auto PostGameGroupOverride = 0x118; // FChatPresetGroupOverride
		constexpr auto PreGameGroupOverride = 0x138; // FChatPresetGroupOverride
	}

	namespace n_UPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenSpecTypes = 0x70; // float
		constexpr auto InitLocation = 0x74; // FVector
		constexpr auto ReachSpecClass = 0x80; // FNone*
	}

	namespace n_UCameraStateBlender_X {
		constexpr auto Transition = 0x70; // FCameraTransition
		constexpr auto TransitionDelta = 0xc0; // FCameraOrientation
		constexpr auto CameraState = 0xf0; // ObjectProperty
		constexpr auto __EventBlenderStateChanged__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UStayAsPartyVote_TA {
		constexpr auto Voters = 0x60; // TArray<ObjectProperty>
		constexpr auto VotedYes = 0x70; // TArray<ObjectProperty>
		constexpr auto PendingMerges = 0x80; // TArray<ObjectProperty>
		constexpr auto MergeRecord = 0x90; // TArray<ObjectProperty>
		constexpr auto MergeErrors = 0xa0; // TArray<FPartyUpMergeError>
	}

	namespace n_AArenaSoundPlayer_TA {
		constexpr auto SoundSource = 0x268; // ComponentProperty
	}

	namespace n_USeqEvent_Touch {
		constexpr auto ClassProximityTypes = 0x180; // TArray<FNone*>
		constexpr auto IgnoredClassProximityTypes = 0x190; // TArray<FNone*>
		constexpr auto bForceOverlapping = 0x1a0; // uint32_t : 1
		constexpr auto TouchedList = 0x1a8; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Min = 0xf8; // FExpressionInput
		constexpr auto Max = 0x130; // FExpressionInput
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x278; // ObjectProperty
		constexpr auto PhysicalMaterial = 0x280; // FNone*
		constexpr auto PhysMaterialMask = 0x288; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x290; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x298; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x2a0; // ObjectProperty
		constexpr auto DiffuseColor = 0x2a8; // FColorMaterialInput
		constexpr auto DiffusePower = 0x2e8; // FScalarMaterialInput
		constexpr auto SpecularColor = 0x328; // FColorMaterialInput
		constexpr auto SpecularPower = 0x368; // FScalarMaterialInput
		constexpr auto Normal = 0x3a8; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x3f0; // FColorMaterialInput
		constexpr auto Opacity = 0x430; // FScalarMaterialInput
		constexpr auto OpacityMask = 0x470; // FScalarMaterialInput
		constexpr auto OpacityMaskClipValue = 0x4b0; // float
		constexpr auto ShadowDepthBias = 0x4b4; // float
		constexpr auto Distortion = 0x4b8; // FVector2MaterialInput
		constexpr auto BlendMode = 0x500; // EBlendMode
		constexpr auto LightingModel = 0x501; // EMaterialLightingModel
		constexpr auto D3D11TessellationMode = 0x502; // EMaterialTessellationMode
		constexpr auto CustomLighting = 0x508; // FColorMaterialInput
		constexpr auto CustomSkylightDiffuse = 0x548; // FColorMaterialInput
		constexpr auto AnisotropicDirection = 0x588; // FVectorMaterialInput
		constexpr auto TwoSidedLightingMask = 0x5d0; // FScalarMaterialInput
		constexpr auto TwoSidedLightingColor = 0x610; // FColorMaterialInput
		constexpr auto WorldPositionOffset = 0x650; // FVectorMaterialInput
		constexpr auto WorldDisplacement = 0x698; // FVectorMaterialInput
		constexpr auto TessellationMultiplier = 0x6e0; // FScalarMaterialInput
		constexpr auto SubsurfaceInscatteringColor = 0x720; // FColorMaterialInput
		constexpr auto SubsurfaceAbsorptionColor = 0x760; // FColorMaterialInput
		constexpr auto SubsurfaceScatteringRadius = 0x7a0; // FScalarMaterialInput
		constexpr auto EnableSubsurfaceScattering = 0x7e0; // uint32_t : 1
		constexpr auto EnableSeparateTranslucency = 0x7e0; // uint32_t : 1
		constexpr auto EnableSeparateTranslucencyDuring4KCheckerboard = 0x7e0; // uint32_t : 1
		constexpr auto bEnableMaskedAntialiasing = 0x7e0; // uint32_t : 1
		constexpr auto TwoSided = 0x7e0; // uint32_t : 1
		constexpr auto TwoSidedSeparatePass = 0x7e0; // uint32_t : 1
		constexpr auto bDisableDepthTest = 0x7e0; // uint32_t : 1
		constexpr auto bSceneTextureRenderBehindTranslucency = 0x7e0; // uint32_t : 1
		constexpr auto bAllowFog = 0x7e0; // uint32_t : 1
		constexpr auto bTranslucencyReceiveDominantShadowsFromStatic = 0x7e0; // uint32_t : 1
		constexpr auto bTranslucencyInheritDominantShadowsFromOpaque = 0x7e0; // uint32_t : 1
		constexpr auto bAllowTranslucencyDoF = 0x7e0; // uint32_t : 1
		constexpr auto bUseOneLayerDistortion = 0x7e0; // uint32_t : 1
		constexpr auto bUseLitTranslucencyDepthPass = 0x7e0; // uint32_t : 1
		constexpr auto bUseLitTranslucencyPostRenderDepthPass = 0x7e0; // uint32_t : 1
		constexpr auto bCastLitTranslucencyShadowAsMasked = 0x7e0; // uint32_t : 1
		constexpr auto bDrawLitTranslucencyPrepassInOpaquePrepassWhen4KCB = 0x7e0; // uint32_t : 1
		constexpr auto bUsedAsLightFunction = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithFogVolumes = 0x7e0; // uint32_t : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithSkeletalMesh = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithTerrain = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithLandscape = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithMobileLandscape = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithFracturedMeshes = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSystem = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSprites = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithBeamTrails = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSubUV = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithSpeedTree = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithStaticLighting = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithLensFlare = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithGammaCorrection = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshParticles = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithFluidSurfaces = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithDecals = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithMaterialEffect = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithMorphTargets = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithRadialBlur = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithSplineMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithAPEXMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithScreenDoorFade = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithSilhouettes = 0x7e4; // uint32_t : 1
		constexpr auto bEnableCrackFreeDisplacement = 0x7e4; // uint32_t : 1
		constexpr auto bUseImageBasedReflections = 0x7e4; // uint32_t : 1
		constexpr auto Wireframe = 0x7e4; // uint32_t : 1
		constexpr auto bPerPixelCameraVector = 0x7e4; // uint32_t : 1
		constexpr auto bAllowLightmapSpecular = 0x7e4; // uint32_t : 1
		constexpr auto bIsFallbackMaterial = 0x7e4; // uint32_t : 1
		constexpr auto bUsesDistortion = 0x7e4; // uint32_t : 1
		constexpr auto bIsMasked = 0x7e4; // uint32_t : 1
		constexpr auto bIsPreviewMaterial = 0x7e4; // uint32_t : 1
		constexpr auto ImageReflectionNormalDampening = 0x7e8; // float
		constexpr auto MaterialResources = 0x7f0; // FPointer [0x2]
		constexpr auto DefaultMaterialInstances = 0x800; // FPointer [0x3]
		constexpr auto EditorX = 0x818; // int32_t
		constexpr auto EditorY = 0x81c; // int32_t
		constexpr auto EditorPitch = 0x820; // int32_t
		constexpr auto EditorYaw = 0x824; // int32_t
		constexpr auto Expressions = 0x828; // TArray<ObjectProperty>
		constexpr auto EditorComments = 0x838; // TArray<ObjectProperty>
		constexpr auto MaterialFunctionInfos = 0x848; // TArray<FMaterialFunctionInfo>
		constexpr auto EditorParameters = 0x858; // TMap<None, None>
		constexpr auto ReferencedTextures = 0x8a8; // TArray<ObjectProperty>
		constexpr auto ReferencedTextureGuids = 0x8b8; // TArray<FGuid>
	}

	namespace n_UWaveFormBase {
		constexpr auto TheWaveForm = 0x60; // ObjectProperty
	}

	namespace n_ULightEnvironmentComponent {
		constexpr auto bEnabled = 0xa0; // uint32_t : 1
		constexpr auto bForceNonCompositeDynamicLights = 0xa0; // uint32_t : 1
		constexpr auto bAllowDynamicShadowsOnTranslucency = 0xa0; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0xa0; // uint32_t : 1
		constexpr auto bTranslucencyShadowed = 0xa0; // uint32_t : 1
		constexpr auto DominantShadowFactor = 0xa4; // float
		constexpr auto AffectingDominantLight = 0xa8; // ComponentProperty
		constexpr auto AffectedComponents = 0xb0; // TArray<ComponentProperty>
	}

	namespace n_USeqAct_Switch {
		constexpr auto LinkCount = 0x160; // int32_t
		constexpr auto IncrementAmount = 0x164; // int32_t
		constexpr auto bLooping = 0x168; // uint32_t : 1
		constexpr auto bAutoDisableLinks = 0x168; // uint32_t : 1
		constexpr auto Indices = 0x170; // TArray<int32_t>
	}

	namespace n_UPartyMessage_InviteToTrade_X {
		constexpr auto InviteMemberId = 0xa8; // FUniqueNetId
	}

	namespace n_UAudioFieldSideComponent_TA {
		constexpr auto FieldSideRTPC = 0xa8; // FName
		constexpr auto OneOverFieldLength = 0xb0; // float
		constexpr auto GameEvent = 0xb8; // ObjectProperty
		constexpr auto ArenaReflectionsManager = 0xc0; // ObjectProperty
	}

	namespace n_U__GFxData_ErrorModals_TA__AlertError_5D3537B64466AF2486A788AEFCF8F852 {
		constexpr auto Error = 0x60; // ObjectProperty
	}

	namespace n_UActorFactoryPhysicsAsset {
		constexpr auto PhysicsAsset = 0xa0; // ObjectProperty
		constexpr auto SkeletalMesh = 0xa8; // ObjectProperty
		constexpr auto bStartAwake = 0xb0; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xb0; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xb0; // uint32_t : 1
		constexpr auto bUseCompartment = 0xb0; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xb0; // uint32_t : 1
		constexpr auto InitialVelocity = 0xb4; // FVector
		constexpr auto DrawScale3D = 0xc0; // FVector
	}

	namespace n_UOnlineStats {
		constexpr auto ViewIdMappings = 0x60; // TArray<FStringIdToStringMapping>
	}

	namespace n_UAnimObject {
		constexpr auto DrawWidth = 0x60; // int32_t
		constexpr auto DrawHeight = 0x64; // int32_t
		constexpr auto NodePosX = 0x68; // int32_t
		constexpr auto NodePosY = 0x6c; // int32_t
		constexpr auto OutDrawY = 0x70; // int32_t
		constexpr auto CategoryDesc = 0x78; // FString
		constexpr auto SkelComponent = 0x88; // ComponentProperty
	}

	namespace n_U__TAsyncResult__ClubDetails_X__Copy_A5140FB947DEC365FD31A5B42946D951 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto Exponent = 0xc0; // float
		constexpr auto Normal = 0xc8; // FExpressionInput
	}

	namespace n_URPC_UpdatePlayerPlaylist_X {
		constexpr auto Playlist = 0xe8; // int32_t
		constexpr auto NumLocalPlayers = 0xec; // int32_t
	}

	namespace n_UFpsBucketRecorder_TA {
		constexpr auto Buckets = 0xa0; // TArray<FFpsBucketData>
		constexpr auto MinFPS = 0xb0; // int32_t
		constexpr auto MaxFPS = 0xb4; // int32_t
	}

	namespace n_UBTNodeParent {
		constexpr auto Children = 0xb0; // TArray<ObjectProperty>
		constexpr auto RunningChild = 0xc0; // int32_t
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x60; // uint32_t : 1
		constexpr auto bUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bFinalUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bCurvesAsColor = 0x60; // uint32_t : 1
		constexpr auto b3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bSupported3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bEnabled = 0x60; // uint32_t : 1
		constexpr auto bEditable = 0x60; // uint32_t : 1
		constexpr auto LODDuplicate = 0x60; // uint32_t : 1
		constexpr auto bSupportsRandomSeed = 0x60; // uint32_t : 1
		constexpr auto bRequiresLoopingNotification = 0x60; // uint32_t : 1
		constexpr auto bRequiresUpdateInTick = 0x60; // uint32_t : 1
		constexpr auto LODValidity = 0x64; // char
		constexpr auto ModuleEditorColor = 0x68; // FColor
	}

	namespace n_UNxForceFieldCylindricalComponent {
		constexpr auto RadialStrength = 0x2c8; // float
		constexpr auto RotationalStrength = 0x2cc; // float
		constexpr auto LiftStrength = 0x2d0; // float
		constexpr auto ForceRadius = 0x2d4; // float
		constexpr auto ForceTopRadius = 0x2d8; // float
		constexpr auto LiftFalloffHeight = 0x2dc; // float
		constexpr auto EscapeVelocity = 0x2e0; // float
		constexpr auto ForceHeight = 0x2e4; // float
		constexpr auto HeightOffset = 0x2e8; // float
		constexpr auto UseSpecialRadialForce = 0x2ec; // uint32_t : 1
		constexpr auto Kernel = 0x2f0; // FPointer
	}

	namespace n_UBTAction_BlockGoal {
		constexpr auto GoalRadius = 0x1c8; // float
	}

	namespace n_UPointLightComponent {
		constexpr auto ShadowRadiusMultiplier = 0x1c8; // float
		constexpr auto Radius = 0x1cc; // float
		constexpr auto FalloffExponent = 0x1d0; // float
		constexpr auto ShadowFalloffExponent = 0x1d4; // float
		constexpr auto MinShadowFalloffRadius = 0x1d8; // float
		constexpr auto CachedParentToWorld = 0x1e0; // FMatrix
		constexpr auto Translation = 0x220; // FVector
		constexpr auto ShadowPlane = 0x230; // FPlane
		constexpr auto PreviewLightRadius = 0x240; // ComponentProperty
		constexpr auto LightmassSettings = 0x248; // FLightmassPointLightSettings
		constexpr auto PreviewLightSourceRadius = 0x258; // ComponentProperty
		constexpr auto MaxShadowDistanceToCastInLightDirection = 0x260; // float
	}

	namespace n_USkelControlSingleBoneParameterized_TA {
		constexpr auto Pitch = 0x130; // FRawDistributionFloat
		constexpr auto Yaw = 0x158; // FRawDistributionFloat
		constexpr auto Roll = 0x180; // FRawDistributionFloat
		constexpr auto PitchSpeed = 0x1a8; // FRawDistributionFloat
		constexpr auto YawSpeed = 0x1d0; // FRawDistributionFloat
		constexpr auto RollSpeed = 0x1f8; // FRawDistributionFloat
	}

	namespace n_UAssetAttribute_ForceWheelAxle_TA {
		constexpr auto AxleToForce = 0x60; // EAxleToForce
		constexpr auto ForcedWheel = 0x68; // ObjectProperty
	}

	namespace n_U__CarMeshComponentBase_TA__RemoveProductAttributeFromProduct_8524DD694304FBEF50D59A8779945103 {
		constexpr auto AttributeClassToRemove = 0x60; // FNone*
	}

	namespace n_UTeamNameComponent_TA {
		constexpr auto SanitizedTeamName = 0x70; // FString
		constexpr auto bHasCustomColor = 0x80; // uint32_t : 1
		constexpr auto TeamIndex = 0x84; // int32_t
		constexpr auto __EventNameChanged__Delegate = 0x88; // DelegateProperty
		constexpr auto __SanitizedTeamName__ChangeNotify = 0xa0; // DelegateProperty
		constexpr auto __bHasCustomColor__ChangeNotify = 0xb8; // DelegateProperty
	}

	namespace n_UGFxDataRow_X {
		constexpr auto TableName = 0x60; // FName
		constexpr auto PrimaryKeyName = 0x68; // FName
		constexpr auto ProxyClass = 0x70; // FNone*
		constexpr auto bLevelTransitionPersistent = 0x78; // uint32_t : 1
		constexpr auto ProxyObject = 0x80; // ObjectProperty
		constexpr auto Shell = 0x88; // ObjectProperty
		constexpr auto RowIndex = 0x90; // int32_t
	}

	namespace n_UServerPerformanceTracker_TA {
		constexpr auto ServerPerformanceConfig = 0xa8; // ObjectProperty
		constexpr auto ConnectionQualityConfig = 0xb0; // ObjectProperty
		constexpr auto RollingFpsAverage = 0xb8; // float
		constexpr auto InternalLowFpsTime = 0xbc; // float
		constexpr auto ServerPerformanceLastUpdateTime = 0xc0; // float
		constexpr auto bReportedServerForPoorPerformance = 0xc4; // uint32_t : 1
	}

	namespace n_U__GFxData_MultiItemDrops_TA__HandleNewOnlineItem_A7DEF2EC4EF4B8977BCE8395FC71EFE3 {
		constexpr auto InSaveData = 0x60; // ObjectProperty
		constexpr auto OnlineProduct = 0x68; // ObjectProperty
	}

	namespace n_UChallengeCurrency_TA {
		constexpr auto CurrencyID = 0x80; // int32_t
		constexpr auto Amount = 0x84; // int32_t
	}

	namespace n_UWallet_TA {
		constexpr auto Currencies = 0x60; // TArray<FCurrency>
		constexpr auto CurrencyProductSet = 0x70; // ComponentProperty
		constexpr auto RocketBucksCurrencyID = 0x78; // int32_t
		constexpr auto SpecialEvent = 0x80; // ObjectProperty
		constexpr auto __EventWalletUpdated__Delegate = 0x88; // DelegateProperty
		constexpr auto __EventWalletCurrencyUpdated__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventWalletCurrencyDataUpdated__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventReceivedCurrencyDrop__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_UGFxData_Map_TA {
		constexpr auto RandomMapData = 0x98; // FGFxMapData
		constexpr auto RandomStandardMapData = 0xd0; // FGFxMapData
		constexpr auto Data = 0x108; // TArray<FGFxMapData>
		constexpr auto ActiveMapIndex = 0x118; // int32_t
		constexpr auto LastLoadedMapImage = 0x120; // ObjectProperty
		constexpr auto RandomMapName = 0x128; // FName
		constexpr auto RandomStandardMapName = 0x130; // FName
		constexpr auto __EventMapListChanged__Delegate = 0x138; // DelegateProperty
	}

	namespace n_U__GFxData_Shops_TA__GetCrateShop_D2F25E914C8A7161C9AF6681B18BAF75 {
		constexpr auto CrateID = 0x60; // int32_t
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_UPsyNet_X {
		constexpr auto Environment = 0x60; // EDatabaseEnvironment
		constexpr auto EnvironmentName = 0x68; // FString
		constexpr auto Keys = 0x78; // FPsyNetKeys
		constexpr auto Headers = 0xa8; // ComponentProperty
		constexpr auto Services = 0xb0; // ComponentProperty
		constexpr auto PrimaryEnabledConnection = 0xb8; // ObjectProperty
		constexpr auto PrimaryAuthedConnection = 0xc0; // ObjectProperty
		constexpr auto AnonymousConnection = 0xc8; // ObjectProperty
		constexpr auto LastReportCheaterTime = 0xd0; // float
		constexpr auto bUsePsynetEnvironment = 0xd4; // uint32_t : 1
		constexpr auto __EventPrimaryConnectionEnabled__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventPrimaryConnectionDisabled__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventPrimaryPlayerLoggedIn__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventPrimaryPlayerLoggedOut__Delegate = 0x120; // DelegateProperty
		constexpr auto __EventCheaterReported__Delegate = 0x138; // DelegateProperty
	}

	namespace n_U__AdHocBrowser_X__CreateServer_480B607348FDDC79CDA8CEB29094DF11 {
		constexpr auto MetaData = 0x60; // FString
		constexpr auto Task = 0x70; // ObjectProperty
		constexpr auto ApcDelegate = 0x78; // DelegateProperty
	}

	namespace n_UProductThumbnail_TA {
		constexpr auto Texture = 0x60; // ObjectProperty
		constexpr auto RenderTarget = 0x68; // ObjectProperty
		constexpr auto RenderCount = 0x70; // int32_t
		constexpr auto LastRenderTime = 0x78; // FDouble
	}

	namespace n_UAdHocBrowser_X {
		constexpr auto AdHocBeacon = 0x60; // ObjectProperty
		constexpr auto AdHocNodesOnNetwork = 0x68; // TArray<FAdHocAccessPointInfo>
		constexpr auto SearchTimeout = 0x78; // float
		constexpr auto SearchTask = 0x80; // ObjectProperty
		constexpr auto SearchResults = 0x88; // TArray<ObjectProperty>
		constexpr auto AdHocAccessPointsAvailable = 0x98; // TArray<FAdHocAccessPointInfo>
	}

	namespace n_U__GameEvent_TA__HasMutatorNamed_D8D8DFE044BC9BDDE82174B029585717 {
		constexpr auto MutatorName = 0x60; // FName
	}

	namespace n_UGFxData_DLC_TA {
		constexpr auto Packs = 0x98; // TArray<FGFxDLCData>
		constexpr auto bReturningFromStore = 0xa8; // uint32_t : 1
		constexpr auto MtxConfig = 0xb0; // ObjectProperty
		constexpr auto OnlineSub = 0xb8; // ObjectProperty
		constexpr auto MTX = 0xc0; // ObjectProperty
		constexpr auto TimeWhenClientLostFocus = 0xc8; // QWordProperty
	}

	namespace n_UTourPartyCheckInTransaction_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto Party = 0x68; // ObjectProperty
		constexpr auto CheckInError = 0x70; // ObjectProperty
		constexpr auto Settings = 0x78; // ObjectProperty
		constexpr auto bDisposed = 0x80; // uint32_t : 1
		constexpr auto __EventPartyCheckInError__Delegate = 0x88; // DelegateProperty
	}

	namespace n_U__TourService_PsyNet_TA__RegisterTournament_9C9ACE7A4D2D89ED030E16B20FA90F69 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x60; // ObjectProperty
		constexpr auto PreviewInterpGroup = 0x68; // ObjectProperty
		constexpr auto AnimLength = 0x70; // float
		constexpr auto BoundingBox = 0x74; // FBox
		constexpr auto BasePPSettings = 0x90; // FPostProcessSettings
		constexpr auto BasePPSettingsAlpha = 0x1f8; // float
		constexpr auto BaseFOV = 0x1fc; // float
	}

	namespace n_U__EpicAccountSave_TA__Reconcile_72D3486D48FC9D37D1A2CE8986702CBC {
		constexpr auto Platform = 0x60; // OnlinePlatform
	}

	namespace n_UNetworkConfig_TA {
		constexpr auto ReplicationRate = 0x78; // FNetworkLimit
		constexpr auto ClientRate = 0x88; // FNetworkLimit
		constexpr auto ClientInputRate = 0x98; // FNetworkLimit
		constexpr auto MaxClientUploadFrames = 0xa8; // int32_t
		constexpr auto bForceNetPackets = 0xac; // uint32_t : 1
		constexpr auto ForcePacketSignificantDistance = 0xb0; // float
	}

	namespace n_ACar_Freeplay_TA {
		constexpr auto CarColors = 0xb28; // TArray<FLinearColor>
	}

	namespace n_UCarJointSpinner_TA {
		constexpr auto ControlName = 0xa8; // FName
		constexpr auto IdleSpeed = 0xb0; // float
		constexpr auto DrivingSpeed = 0xb4; // float
		constexpr auto BoostSpeed = 0xb8; // float
		constexpr auto RotationAxis = 0xbc; // FVector
		constexpr auto Car = 0xc8; // ObjectProperty
		constexpr auto Control = 0xd0; // ObjectProperty
		constexpr auto Speed = 0xd8; // float
	}

	namespace n_UPartyMessage_AcceptInviteToTrade_X {
		constexpr auto InviteMemberId = 0xa8; // FUniqueNetId
		constexpr auto bInviteAccepted = 0xf0; // uint32_t : 1
		constexpr auto TradeId = 0xf4; // FGuid
	}

	namespace n_UGameplayEventsReader {
		constexpr auto RegisteredHandlers = 0x210; // TArray<ObjectProperty>
	}

	namespace n_ARB_RadialForceActor {
		constexpr auto RenderComponent = 0x268; // ComponentProperty
		constexpr auto ForceStrength = 0x270; // float
		constexpr auto ForceRadius = 0x274; // float
		constexpr auto SwirlStrength = 0x278; // float
		constexpr auto SpinTorque = 0x27c; // float
		constexpr auto ForceFalloff = 0x280; // ERadialImpulseFalloff
		constexpr auto RadialForceMode = 0x281; // ERadialForceType
		constexpr auto bForceActive = 0x284; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x284; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x284; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x284; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x284; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x288; // FRBCollisionChannelContainer
	}

	namespace n_UImageReflectionShadowPlaneComponent {
		constexpr auto bEnabled = 0x258; // uint32_t : 1
		constexpr auto ReflectionPlane = 0x260; // FPlane
	}

	namespace n_UMaterialExpressionDepthBiasedBlend {
		constexpr auto bNormalize = 0xc0; // uint32_t : 1
		constexpr auto BiasScale = 0xc4; // float
		constexpr auto RGB = 0xc8; // FExpressionInput
		constexpr auto Alpha = 0x100; // FExpressionInput
		constexpr auto Bias = 0x138; // FExpressionInput
	}

	namespace n_U__CarMeshComponentBase_TA__AddVisualAsset_36C4038B4D78F15C8BBC318BCA766E76 {
		constexpr auto Asset = 0x60; // ObjectProperty
	}

	namespace n_USkelControlFootPlacement {
		constexpr auto FootOffset = 0x158; // float
		constexpr auto FootUpAxis = 0x15c; // EAxis
		constexpr auto FootRotOffset = 0x160; // FRotator
		constexpr auto bInvertFootUpAxis = 0x16c; // uint32_t : 1
		constexpr auto bOrientFootToGround = 0x16c; // uint32_t : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0x16c; // uint32_t : 1
		constexpr auto MaxUpAdjustment = 0x170; // float
		constexpr auto MaxDownAdjustment = 0x174; // float
		constexpr auto MaxFootOrientAdjust = 0x178; // float
	}

	namespace n_U__TAsyncResult__ClubDetails_X__SetResultWhen_F6DCE1524CB96FDB54C502AF8164497B {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_U__TAsyncResult__PsyTagCheckResult_X__SetResultWhen_04D5BA704DC3CE863DDB68AAA07685BA {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_UPersona_TA {
		constexpr auto PlayerName = 0x60; // FString
		constexpr auto UnSanitizedPlayerName = 0x70; // FString
		constexpr auto PlayerID = 0x80; // FUniqueNetId
		constexpr auto OnlinePresenceState = 0xc8; // EOnlineFriendState
		constexpr auto OnlinePresenceState_Platform = 0xc9; // EOnlineFriendState
		constexpr auto OnlinePresenceState_PsyNet = 0xca; // EOnlineFriendState
		constexpr auto OnlinePresenceState_Epic = 0xcb; // EOnlineFriendState
		constexpr auto Platform = 0xcc; // OnlinePlatform
		constexpr auto SecondaryPlatform = 0xcd; // OnlinePlatform
		constexpr auto OnlinePresenceMessage = 0xd0; // FString
		constexpr auto bBlockedStatus = 0xe0; // uint32_t : 1
		constexpr auto bPlatformFriend = 0xe0; // uint32_t : 1
		constexpr auto bPsyNetFriend = 0xe0; // uint32_t : 1
		constexpr auto bEpicFriend = 0xe0; // uint32_t : 1
		constexpr auto bNameSanitized = 0xe0; // uint32_t : 1
		constexpr auto GroupId = 0xe4; // int32_t
		constexpr auto LastActive = 0xe8; // QWordProperty
		constexpr auto PlayerNote = 0xf0; // FString
		constexpr auto PsyTagName = 0x100; // FString
		constexpr auto PsyTagCode = 0x110; // int32_t
		constexpr auto ClubTag = 0x118; // FString
		constexpr auto SecondaryPlayerName = 0x128; // FString
		constexpr auto UnsanitizedSecondaryPlayerName = 0x138; // FString
		constexpr auto EpicAccountId = 0x148; // FString
		constexpr auto __EventUpdated__Delegate = 0x158; // DelegateProperty
		constexpr auto __EventNameSanitized__Delegate = 0x170; // DelegateProperty
		constexpr auto __EventBlockStatusChanged__Delegate = 0x188; // DelegateProperty
	}

	namespace n_UPsyNetService_CreateTournament_X {
		constexpr auto Playlist = 0xb0; // int32_t
		constexpr auto Settings = 0xb8; // FTourServerSettings
	}

	namespace n_UGFxData_ProductAttribute_Tiered_TA {
		constexpr auto ProductTier = 0xb0; // int32_t
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0x158; // int32_t
		constexpr auto SizeY = 0x15c; // int32_t
		constexpr auto Format = 0x160; // EPixelFormat
		constexpr auto AddressX = 0x161; // TextureAddress
		constexpr auto AddressY = 0x162; // TextureAddress
		constexpr auto ClearColor = 0x164; // FLinearColor
		constexpr auto bForceLinearGamma = 0x174; // uint32_t : 1
		constexpr auto __EventResourceUpdated__Delegate = 0x178; // DelegateProperty
	}

	namespace n_U__GFxData_Party_TA__SendAllowTradeRPC_A94567464BAE031C38E50D9AF4B0E32C {
		constexpr auto OnSuccess = 0x60; // DelegateProperty
		constexpr auto OtherPlayerNetId = 0x78; // FUniqueNetId
		constexpr auto OnFail = 0xc0; // DelegateProperty
	}

	namespace n_U__StayAsPartySystem_TA__GFxLeaderActive_F18F54F14AB175E4EB52B1BB0D4401C4 {
		constexpr auto Voter = 0x60; // ObjectProperty
		constexpr auto PrimaryGroup = 0x68; // TArray<ObjectProperty>
	}

	namespace n_URPC_ClubDetailsBase_X {
		constexpr auto ClubDetails = 0xe8; // ObjectProperty
		constexpr auto ClubDetailsTask = 0xf0; // ObjectProperty
	}

	namespace n_UEngineAudioComponent_TA {
		constexpr auto Profile = 0x100; // ObjectProperty
		constexpr auto OldCarState = 0x108; // FCarStateData
		constexpr auto NativeState = 0x118; // FPointer
	}

	namespace n_U__Mutator_Freeplay_TA__HandleUnlimitedBoostChange_1D2E7ADD46BCC108925961B687149482 {
		constexpr auto Settings = 0x60; // ObjectProperty
	}

	namespace n_UEngineContent {
		constexpr auto Content = 0x60; // TArray<ObjectProperty>
	}

	namespace n_URPC_TourGetMatchReservations_TA {
		constexpr auto ServerId = 0xe8; // QWordProperty
		constexpr auto Settings = 0xf0; // FTourServerSettings
	}

	namespace n_UBTAction_MoveTo {
		constexpr auto bReverse = 0x160; // uint32_t : 1
		constexpr auto bBoost = 0x160; // uint32_t : 1
		constexpr auto bAllowPointTurns = 0x160; // uint32_t : 1
		constexpr auto bPointTurn = 0x160; // uint32_t : 1
		constexpr auto bWasFacingDestination = 0x160; // uint32_t : 1
		constexpr auto bHasPath = 0x160; // uint32_t : 1
		constexpr auto MinSpeed = 0x164; // float
		constexpr auto MaxSpeed = 0x168; // float
		constexpr auto RandomMaxSpeedModifier = 0x16c; // float
		constexpr auto MinBoostDistance = 0x170; // float
		constexpr auto TeamSeparationDistance = 0x174; // float
		constexpr auto ReachDistance = 0x178; // float
		constexpr auto FaceLocation = 0x180; // ObjectProperty
		constexpr auto FaceRotation = 0x188; // ObjectProperty
		constexpr auto MaxTurnRadius = 0x190; // float
		constexpr auto Modifiers = 0x198; // TArray<ComponentProperty>
		constexpr auto OldPathDestination = 0x1a8; // FVector
		constexpr auto OldPathCarLocation = 0x1b4; // FVector
		constexpr auto CachedMaxGravitySlope = 0x1c0; // float
		constexpr auto CurrentRandomMaxSpeedModifier = 0x1c4; // float
	}

	namespace n_URPC_DeactivateGameServer_X {
		constexpr auto ServerId = 0xe8; // QWordProperty
	}

	namespace n_URPC_GetBlockList_X {
		constexpr auto bLocked = 0xe8; // TArray<FBlockedListRequestData>
		constexpr auto FriendsData = 0xf8; // TArray<FOnlineFriend>
	}

	namespace n_U__GFxData_PlayerBanners_TA__CreatePlayerBanner_6E2658484EE819A164700BB1CA4A2880 {
		constexpr auto Banner = 0x60; // ComponentProperty
		constexpr auto ProductSource = 0x68; // FProductHashSource
		constexpr auto InColorID = 0x88; // int32_t
	}

	namespace n_UMenuSequence_PremiumGarage_TA {
		constexpr auto FadeTime = 0xa8; // float
		constexpr auto FadeOutDelay = 0xac; // float
		constexpr auto TurnTableYawOffset = 0xb0; // float
	}

	namespace n_UMutator_Bots_TA {
		constexpr auto bRandomizedBotLoadouts = 0x68; // uint32_t : 1
	}

	namespace n_USeqAct_GetFTEState_TA {
		constexpr auto CheckpointName = 0x160; // FString
		constexpr auto bIsActive = 0x170; // uint32_t : 1
	}

	namespace n_URPC_MicroTransactions_GetContainerDropTable_TA {
		constexpr auto ContainerDrops = 0xe8; // TArray<FRPCContainerDropTable>
	}

	namespace n_USkelControl_Multiply {
		constexpr auto Multiplier = 0x100; // float
	}

	namespace n_UPBRuleNodeRandom {
		constexpr auto NumOutputs = 0x98; // int32_t
		constexpr auto MinNumExecuted = 0x9c; // int32_t
		constexpr auto MaxNumExecuted = 0xa0; // int32_t
	}

	namespace n_UUserSettingObserver_TA {
		constexpr auto Cache = 0x70; // ComponentProperty
		constexpr auto Metrics = 0x78; // ComponentProperty
	}

	namespace n_URPC_DebugSetXP_TA {
		constexpr auto XPToSet = 0xe8; // int32_t
		constexpr auto PlayerID = 0xf0; // FUniqueNetId
		constexpr auto XPInfoResponse = 0x138; // FXPInfo
	}

	namespace n_USeqCond_CompareInt {
		constexpr auto ValueA = 0x140; // int32_t
		constexpr auto ValueB = 0x144; // int32_t
	}

	namespace n_UWheelAssetGenerator_1Wheel_TA {
		constexpr auto MirrorMode = 0x80; // EMeshMirrorMode
		constexpr auto ParticleMirrorMode = 0x81; // EMeshMirrorMode
		constexpr auto FrontRight = 0x88; // ComponentProperty
	}

	namespace n_UProductAttribute_TeamEdition_TA {
		constexpr auto Id = 0x80; // int32_t
	}

	namespace n_URPC_AdsGet_TA {
		constexpr auto Language = 0xe8; // FString
		constexpr auto Ads = 0xf8; // TArray<FAdInfo>
	}

	namespace n_USeqAct_DriveSpline_TA {
		constexpr auto ForwardOffset = 0x178; // float
		constexpr auto Spline = 0x180; // ObjectProperty
		constexpr auto Throttle = 0x188; // float
		constexpr auto bDebug = 0x18c; // uint32_t : 1
		constexpr auto Cars = 0x190; // TArray<FCarSplineData>
	}

	namespace n_U__CrowdActorManager_TA__OverrideCrowdActorSounds_6EE4E98B430F4CEA14DF109D5B4617AF {
		constexpr auto NewSounds = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_DLC_TA__HandleEntitlementsError_46E3440E473198C4256E19BDD7FA9581 {
		constexpr auto Error = 0x60; // ObjectProperty
	}

	namespace n_UProductAttribute_Rental_TA {
		constexpr auto RentalLength = 0x80; // int32_t
	}

	namespace n_URPC_TourRegister_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto Credentials = 0x138; // FTourPrivateCredentials
		constexpr auto Tournament = 0x158; // ObjectProperty
	}

	namespace n_UGFxData_CarColors_TA {
		constexpr auto Custom = 0x98; // TArray<FGFxTeamColor>
		constexpr auto Team0 = 0xa8; // TArray<FGFxTeamColor>
		constexpr auto Team1 = 0xb8; // TArray<FGFxTeamColor>
		constexpr auto Clubs = 0xc8; // TArray<FGFxTeamColor>
		constexpr auto PlayerBanners = 0xd8; // TArray<FGFxTeamColor>
		constexpr auto PlayerVanity = 0xe8; // TArray<FGFxTeamColor>
	}

	namespace n_UEdCoordSystem {
		constexpr auto M = 0x60; // FMatrix
		constexpr auto Desc = 0xa0; // FString
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x70; // EParticleAxisLock
	}

	namespace n_USeqEvent_GameTimeChanged_TA {
		constexpr auto CallTimePercent = 0x180; // float
		constexpr auto bHasBeenCalled = 0x184; // uint32_t : 1
	}

	namespace n_USeqAct_WaitForLevelsVisible {
		constexpr auto LevelNames = 0x178; // TArray<FName>
		constexpr auto bShouldBlockOnLoad = 0x188; // uint32_t : 1
	}

	namespace n_UAttachmentBehavior_Steering_TA {
		constexpr auto BoneControlName = 0x78; // FName
		constexpr auto AnimTree = 0x80; // ObjectProperty
		constexpr auto SteeringToDegreesCurve = 0x88; // FInterpCurveFloat
		constexpr auto SkelMeshComponent = 0xa0; // ComponentProperty
		constexpr auto BoneController = 0xa8; // ObjectProperty
		constexpr auto Vehicle = 0xb0; // ObjectProperty
	}

	namespace n_UWheelAssetGenerator_RightWheels_TA {
		constexpr auto MirrorMode = 0x80; // EMeshMirrorMode
		constexpr auto ParticleMirrorMode = 0x81; // EMeshMirrorMode
		constexpr auto FrontRight = 0x88; // ComponentProperty
		constexpr auto BackRight = 0x90; // ComponentProperty
	}

	namespace n_UProductAttribute_BodyCompatibility_TA {
		constexpr auto CompatibleBodies = 0x80; // TArray<ObjectProperty>
	}

	namespace n_UStatusObserver_MenuStack_TA {
		constexpr auto LastMenuVisited = 0xa0; // FName
		constexpr auto LastButtonTriggered = 0xa8; // FName
		constexpr auto LastCrumbTrailCompleted = 0xb0; // FName
		constexpr auto CrumbManager = 0xb8; // ObjectProperty
		constexpr auto CrumbSave = 0xc0; // ObjectProperty
	}

	namespace n_UAkRevPhysicsSimulation {
		constexpr auto EngineGearRatio = 0x60; // float
		constexpr auto EngineFriction = 0x64; // float
		constexpr auto GroundFriction = 0x68; // float
		constexpr auto WindResistancePerVelocity = 0x6c; // float
		constexpr auto UpShiftingRPM = 0x70; // float
		constexpr auto DownShiftRPM = 0x74; // float
		constexpr auto InfiniteGearRatioDecreaseAmount = 0x78; // float
		constexpr auto ThrottleInterpolationTime = 0x7c; // float
		constexpr auto EngineTorque = 0x80; // float
		constexpr auto BrakingForce = 0x84; // float
		constexpr auto WindResistance = 0x88; // float
		constexpr auto FrictionResistance = 0x8c; // float
		constexpr auto EngineResistance = 0x90; // float
		constexpr auto NetForce = 0x94; // float
		constexpr auto __EventGearChange__Delegate = 0x98; // DelegateProperty
	}

	namespace n_U__OnlineGameParty_X__HasMultiplePlatforms_795DFC5D4F75E91161D8ECB73C5DF284 {
		constexpr auto PartyLeaderCrossPlayGroup = 0x60; // TArray<OnlinePlatform>
	}

	namespace n_UAnimNodeBlendByBase {
		constexpr auto Type = 0x170; // EBaseBlendType
		constexpr auto ActorTag = 0x174; // FName
		constexpr auto ActorClass = 0x180; // FNone*
		constexpr auto BlendTime = 0x188; // float
		constexpr auto CachedBase = 0x190; // ObjectProperty
	}

	namespace n_USeqAct_UpdateAd_TA {
		constexpr auto MeshActor = 0x160; // ObjectProperty
	}

	namespace n_USeqAct_SubtractInt {
		constexpr auto ValueA = 0x160; // int32_t
		constexpr auto ValueB = 0x164; // int32_t
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_U__EpicLogin_X__RequestNintendoAccountAuthorization_CF8842A146F604F6862C76BB78C1DA41 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USceneCapture2DComponent {
		constexpr auto TextureTarget = 0xf8; // ObjectProperty
		constexpr auto FieldOfView = 0x100; // float
		constexpr auto NearPlane = 0x104; // float
		constexpr auto FarPlane = 0x108; // float
		constexpr auto bUpdateMatrices = 0x10c; // uint32_t : 1
		constexpr auto ViewMatrix = 0x110; // FMatrix
		constexpr auto ProjMatrix = 0x150; // FMatrix
	}

	namespace n_USeqEvent_MainMenuSwitched_TA {
		constexpr auto PrevBackground = 0x180; // EMainMenuBackground
	}

	namespace n_UUserSettingObserverEventCache_TA {
		constexpr auto CacheTimeout = 0x70; // float
		constexpr auto Events = 0x78; // TArray<FSettingEvent>
		constexpr auto __EventCacheTimeout__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UESportConfig_TA {
		constexpr auto Events = 0x78; // TArray<FESportEventData>
	}

	namespace n_UMaterialExpressionDepthBiasBlend {
		constexpr auto bNormalize = 0x138; // uint32_t : 1
		constexpr auto BiasScale = 0x13c; // float
		constexpr auto Bias = 0x140; // FExpressionInput
	}

	namespace n_UBTAction_DodgeHit {
		constexpr auto FlipAmount = 0x170; // float
		constexpr auto AimTarget = 0x178; // ObjectProperty
		constexpr auto DodgeDirection = 0x180; // FVector
		constexpr auto DodgeTime = 0x18c; // float
	}

	namespace n_UGameShare_TA {
		constexpr auto CarEngineAudioGroup = 0x60; // ComponentProperty
		constexpr auto BallPositionMaterialInstances = 0x68; // TArray<ObjectProperty>
		constexpr auto ActiveBoostPills = 0x78; // TArray<ObjectProperty>
		constexpr auto bHideWorldUI = 0x88; // uint32_t : 1
		constexpr auto Nameplates = 0x90; // TArray<ComponentProperty>
		constexpr auto CarPreviewActors = 0xa0; // TArray<ObjectProperty>
		constexpr auto SoundSourcePool = 0xb0; // TArray<ComponentProperty>
		constexpr auto __EventHideWorldUIChanged__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventNameplateAdded__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventNameplateRemoved__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventCarPreviewActorAdded__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventCarPreviewActorRemoved__Delegate = 0x120; // DelegateProperty
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x78; // float
	}

	namespace n_UFindServerTask_X {
		constexpr auto SearchTimeout = 0xd0; // float
		constexpr auto RPC = 0xd8; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xe0; // DelegateProperty
	}

	namespace n_URPC_Test_X {
		constexpr auto TestParamLocalizedString = 0xe8; // FString
		constexpr auto TestParamString = 0xf8; // FString
		constexpr auto TestParamStruct = 0x108; // FRPCTestParam
		constexpr auto TestParamStructs = 0x190; // TArray<FRPCTestParam>
		constexpr auto TestResultLocalizedString = 0x1a0; // FString
		constexpr auto TestResultString = 0x1b0; // FString
		constexpr auto TestResultStruct = 0x1c0; // FRPCTestParam
		constexpr auto TestResultStructs = 0x248; // TArray<FRPCTestParam>
	}

	namespace n_UNotification_TA {
		constexpr auto NotificationID = 0x60; // int32_t
		constexpr auto Title = 0x68; // FString
		constexpr auto Body = 0x78; // FString
		constexpr auto bPopUp = 0x88; // uint32_t : 1
		constexpr auto bRemoveAfterDisplayed = 0x88; // uint32_t : 1
		constexpr auto bPopUpShown = 0x88; // uint32_t : 1
		constexpr auto bSave = 0x88; // uint32_t : 1
		constexpr auto PopUpDuration = 0x8c; // float
		constexpr auto Expiration = 0x90; // QWordProperty
		constexpr auto NotificationManager = 0x98; // ObjectProperty
		constexpr auto GFxDataClass = 0xa0; // FNone*
		constexpr auto CrossplayConfig = 0xa8; // ObjectProperty
		constexpr auto AcceptCallBack = 0xb0; // DelegateProperty
		constexpr auto DenyCallBack = 0xc8; // DelegateProperty
		constexpr auto __ClickDelegate__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventRemoveNotification__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UStatusTrigger_Product_TA {
		constexpr auto ConditionalValue = 0x80; // ObjectProperty
	}

	namespace n_UUIResourceCombinationProvider {
		constexpr auto StaticDataProvider = 0x70; // ObjectProperty
		constexpr auto ProfileProvider = 0x78; // ObjectProperty
	}

	namespace n_USeqAct_LookAtActor_TA {
		constexpr auto Actor = 0x178; // ObjectProperty
		constexpr auto ActorToLookAt = 0x180; // ObjectProperty
		constexpr auto InterpSpeed = 0x188; // float
		constexpr auto bConstantInterpSpeed = 0x18c; // uint32_t : 1
		constexpr auto bUpdating = 0x18c; // uint32_t : 1
	}

	namespace n_UNetworkSave_TA {
		constexpr auto bEnableCrossPlatform = 0xc8; // uint32_t : 1
		constexpr auto bDisableCrossPlay = 0xc8; // uint32_t : 1
		constexpr auto IncomingPacketFrequency = 0xcc; // ENetworkValue
		constexpr auto OutgoingPacketFrequency = 0xcd; // ENetworkValue
		constexpr auto IncomingBandwidth = 0xce; // ENetworkValue
		constexpr auto NetworkInputBuffer = 0xcf; // ENetworkInputBuffer
		constexpr auto __bEnableCrossPlatform__ChangeNotify = 0xd0; // DelegateProperty
		constexpr auto __NetworkInputBuffer__ChangeNotify = 0xe8; // DelegateProperty
	}

	namespace n_APortalMarker {
		constexpr auto MyPortal = 0x388; // ObjectProperty
	}

	namespace n_UEpicFriendsConverter_TA {
		constexpr auto bCheckedToConvert = 0x60; // uint32_t : 1
		constexpr auto EpicSave = 0x68; // ObjectProperty
		constexpr auto InvitesToSend = 0x70; // TArray<FUniqueNetId>
		constexpr auto LocalPlayerId = 0x80; // int32_t
		constexpr auto EpicFriendsConverterConfig = 0x88; // ObjectProperty
		constexpr auto EOSSubsystem = 0x90; // ObjectProperty
		constexpr auto FriendsPlugin = 0x98; // ObjectProperty
		constexpr auto SecondsBetweenInvites = 0xa0; // float
		constexpr auto NumFailedAttempts = 0xa4; // int32_t
	}

	namespace n_UGFxData_TrainingModeBrowser_TA {
		constexpr auto CachedOnlineSearchResults = 0x98; // FSearchCacheData [0x2]
		constexpr auto PendingRPC = 0xc8; // ObjectProperty
		constexpr auto CachedSearchDuration = 0xd0; // float
		constexpr auto CachedFavoriteTimeoutTime = 0xd4; // float
		constexpr auto FavoritedFilesMetaData = 0xd8; // TArray<FFavoritedFileMetaData>
		constexpr auto bFavoritesLoaded = 0xe8; // uint32_t : 1
		constexpr auto bErrorModalOpen = 0xe8; // uint32_t : 1
		constexpr auto CachedFavoriteDuration = 0xec; // float
		constexpr auto CachedDownloadedFiles = 0xf0; // TArray<FCachedDownloadedFile>
		constexpr auto LoadingFiles = 0x100; // TArray<FString>
		constexpr auto DownloadedFilename = 0x110; // FString
		constexpr auto MaxCachedDownloadedFiles = 0x120; // int32_t
		constexpr auto TrainingSaveData = 0x128; // ObjectProperty
		constexpr auto __EventFavoritesLoaded__Delegate = 0x130; // DelegateProperty
		constexpr auto __EventAllTrainingFilesLoaded__Delegate = 0x148; // DelegateProperty
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x98; // FParticleRandomSeedInfo
	}

	namespace n_UUIDataProvider_OnlinePlayerStorageArray {
		constexpr auto PlayerStorage = 0x70; // ObjectProperty
		constexpr auto PlayerStorageId = 0x78; // int32_t
		constexpr auto ColumnHeaderText = 0x80; // FString
		constexpr auto Values = 0x90; // TArray<FName>
	}

	namespace n_UEOSMetricsConfig_X {
		constexpr auto DataRouterURL = 0x78; // FString
		constexpr auto PingDelayTime = 0x88; // float
	}

	namespace n_USimpleSplineAudioComponent {
		constexpr auto bAttenuateWithLPF = 0x320; // uint32_t : 1
		constexpr auto LPFRadiusMin = 0x324; // float
		constexpr auto LPFRadiusMax = 0x328; // float
		constexpr auto dBAttenuationAtMax = 0x32c; // float
		constexpr auto FlattenAttenuationRadius = 0x330; // float
		constexpr auto DistanceAlgorithm = 0x334; // SoundDistanceModel
		constexpr auto RadiusMin = 0x338; // float
		constexpr auto RadiusMax = 0x33c; // float
		constexpr auto SoundSlots = 0x340; // TArray<FSplineSoundSlot>
		constexpr auto NotifyBufferFinishedHook = 0x350; // ObjectProperty
	}

	namespace n_USeqAct_Latent {
		constexpr auto LatentActors = 0x160; // TArray<ObjectProperty>
		constexpr auto bAborted = 0x170; // uint32_t : 1
		constexpr auto LatentActivationTime = 0x174; // float
	}

	namespace n_UMatchRecorder_X {
		constexpr auto MatchDataClass = 0x60; // FNone*
		constexpr auto PlayerDataClass = 0x68; // FNone*
		constexpr auto Match = 0x70; // ObjectProperty
	}

	namespace n_USplineComponent {
		constexpr auto SplineInfo = 0x258; // FInterpCurveVector
		constexpr auto SplineCurviness = 0x270; // float
		constexpr auto SplineColor = 0x274; // FColor
		constexpr auto SplineDrawRes = 0x278; // float
		constexpr auto SplineArrowSize = 0x27c; // float
		constexpr auto bSplineDisabled = 0x280; // uint32_t : 1
		constexpr auto SplineReparamTable = 0x288; // FInterpCurveFloat
	}

	namespace n_USeqEvent_InputSequence_TA {
		constexpr auto SequenceName = 0x180; // FName
	}

	namespace n_UAnimNotify_PlayParticleEffect_X {
		constexpr auto PSC = 0x98; // ComponentProperty
		constexpr auto CachedAnimSequence = 0xa0; // ObjectProperty
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x78; // TArray<FDistanceDatum>
	}

	namespace n_URegionPingData_X {
		constexpr auto Address = 0x60; // FName
		constexpr auto PingsSent = 0x68; // int32_t
		constexpr auto PingsReceived = 0x6c; // int32_t
		constexpr auto LowestPing = 0x70; // float
		constexpr auto LastSendTime = 0x74; // float
	}

	namespace n_USaveGameManager_TA {
		constexpr auto SaveObjectManager = 0x60; // ObjectProperty
		constexpr auto SaveDataID = 0x68; // FString
		constexpr auto Player = 0x78; // ObjectProperty
		constexpr auto SaveData = 0x80; // ObjectProperty
		constexpr auto SaveObjectProvider = 0x88; // ComponentProperty
		constexpr auto MinTimeBetweenSaves = 0x90; // float
		constexpr auto LastSaveTime = 0x94; // float
		constexpr auto DataLoadError = 0x98; // ObjectProperty
		constexpr auto DataSaveError = 0xa0; // ObjectProperty
		constexpr auto bDataLoaded = 0xa8; // uint32_t : 1
		constexpr auto bUserIgnoredLoadFailure = 0xa8; // uint32_t : 1
		constexpr auto bEnableSaving = 0xa8; // uint32_t : 1
		constexpr auto bDisableSaveOSS = 0xa8; // uint32_t : 1
		constexpr auto bDirty = 0xa8; // uint32_t : 1
		constexpr auto SaveFolderPath = 0xb0; // FString
		constexpr auto EpicSaveFolderPath = 0xc0; // FString
		constexpr auto __EventDataLoaded__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventDataSaved__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_AGameEditor_Ring_TA {
		constexpr auto ActorTouchRecords = 0x2d0; // TArray<FActorTouchRecordData>
		constexpr auto MaxRadius = 0x2e0; // float
		constexpr auto DetectionType = 0x2e4; // EDetectionType
		constexpr auto __OnRingScored__Delegate = 0x2e8; // DelegateProperty
	}

	namespace n_UActionQueue_X {
		constexpr auto ActionsPerSecond = 0x70; // float
		constexpr auto Queue = 0x78; // TArray<DelegateProperty>
		constexpr auto QueueIndex = 0x88; // int32_t
		constexpr auto __ActionDelegate__Delegate = 0x90; // DelegateProperty
	}

	namespace n_USeqAct_SetPhysics {
		constexpr auto newPhysics = 0x160; // EPhysics
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0xe8; // FName
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x70; // FRawDistributionFloat
	}

	namespace n_UThrottleShakeComponent_TA {
		constexpr auto ThrottleRiseSpeed = 0x1b8; // float
		constexpr auto ThrottleFallSpeed = 0x1bc; // float
		constexpr auto Throttle = 0x1c0; // float
	}

	namespace n_UUIStrings_TA {
		constexpr auto Continue = 0x60; // FString
		constexpr auto ExitGame = 0x70; // FString
		constexpr auto Retry = 0x80; // FString
		constexpr auto OK = 0x90; // FString
		constexpr auto Cancel = 0xa0; // FString
		constexpr auto Yes = 0xb0; // FString
		constexpr auto No = 0xc0; // FString
		constexpr auto SignIn = 0xd0; // FString
		constexpr auto Days = 0xe0; // FString
		constexpr auto Hours = 0xf0; // FString
		constexpr auto Minutes = 0x100; // FString
		constexpr auto Seconds = 0x110; // FString
		constexpr auto Meters = 0x120; // FString
		constexpr auto Kilometers = 0x130; // FString
		constexpr auto Feet = 0x140; // FString
		constexpr auto Miles = 0x150; // FString
		constexpr auto MetersUnit = 0x160; // FString
		constexpr auto FeetUnit = 0x170; // FString
		constexpr auto MetersPerSecondUnit = 0x180; // FString
		constexpr auto FeetPerSecondUnit = 0x190; // FString
		constexpr auto Error = 0x1a0; // FString
		constexpr auto Warning = 0x1b0; // FString
		constexpr auto Close = 0x1c0; // FString
		constexpr auto Savage = 0x1d0; // FString
	}

	namespace n_UKMeshProps {
		constexpr auto COMNudge = 0x60; // FVector
		constexpr auto AggGeom = 0x70; // FKAggregateGeom
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x288; // int32_t
		constexpr auto PreviousLODLevel = 0x28c; // int32_t
		constexpr auto StaticMesh = 0x290; // ObjectProperty
		constexpr auto WireframeColor = 0x298; // FColor
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x29c; // uint32_t : 1
		constexpr auto bOverrideLightMapResolution = 0x29c; // uint32_t : 1
		constexpr auto bOverrideLightMapRes = 0x29c; // uint32_t : 1
		constexpr auto OverriddenLightMapResolution = 0x2a0; // int32_t
		constexpr auto OverriddenLightMapRes = 0x2a4; // int32_t
		constexpr auto OverriddenLODMaxRange = 0x2a8; // float
		constexpr auto StreamingDistanceMultiplier = 0x2ac; // float
		constexpr auto SubDivisionStepSize = 0x2b0; // int32_t
		constexpr auto bUseSubDivisions = 0x2b4; // uint32_t : 1
		constexpr auto bForceStaticDecals = 0x2b4; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x2b4; // uint32_t : 1
		constexpr auto bUseSimpleLightmapModifications = 0x2b4; // uint32_t : 1
		constexpr auto SimpleLightmapModificationTexture = 0x2b8; // ObjectProperty
		constexpr auto SimpleLightmapModificationFunction = 0x2c0; // ELightmapModificationFunction
		constexpr auto bNeverBecomeDynamic = 0x2c4; // uint32_t : 1
		constexpr auto IrrelevantLights = 0x2c8; // TArray<FGuid>
		constexpr auto LODData = 0x2d8; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto VertexPositionVersionNumber = 0x2e8; // int32_t
		constexpr auto LightmassSettings = 0x2ec; // FLightmassPrimitiveSettings
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x70; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x80; // int32_t
		constexpr auto bUsesVelocity = 0x84; // uint32_t : 1
	}

	namespace n_UPsyNetService_ChallengeProgress_TA {
		constexpr auto Challenges = 0x90; // TArray<FChallengeProgress>
	}

	namespace n_U__CarMeshComponentBase_TA__ApplyPaintSettings_6F5C21DE43FB4DF89A007090434EFC86 {
		constexpr auto AdditionalParams = 0x60; // FAssociativeMaterialParams
	}

	namespace n_UGFxData_ProductAttribute_TeamEdition_TA {
		constexpr auto TeamName = 0xb0; // FString
		constexpr auto TeamLogo = 0xc0; // ObjectProperty
	}

	namespace n_U__TAsyncResult__PsyTagCheckResult_X__NotifyOnResultComplete_F231F1E7433D8DFA8537558EEC28AD9A {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__StatusObserver_X__FindByAcceptedType_E71CED6040E1B231360B249C6386FFD5 {
		constexpr auto InType = 0x60; // FNone*
	}

	namespace n_USeqEvent_CinematicIntroSeqFinished_TA {
		constexpr auto SequenceIndex = 0x180; // int32_t
	}

	namespace n_ALandscapeGizmoActor {
		constexpr auto Width = 0x268; // float
		constexpr auto Height = 0x26c; // float
		constexpr auto LengthZ = 0x270; // float
		constexpr auto MarginZ = 0x274; // float
		constexpr auto MinRelativeZ = 0x278; // float
		constexpr auto RelativeScaleZ = 0x27c; // float
		constexpr auto TargetLandscapeInfo = 0x280; // ObjectProperty
	}

	namespace n_UAudioDevice {
		constexpr auto MaxChannels = 0x68; // int32_t
		constexpr auto CommonAudioPoolSize = 0x6c; // int32_t
		constexpr auto LowPassFilterResonance = 0x70; // float
		constexpr auto MinCompressedDurationEditor = 0x74; // float
		constexpr auto MinCompressedDurationGame = 0x78; // float
		constexpr auto ChirpInSoundNodeWaveName = 0x80; // FString
		constexpr auto ChirpInSoundNodeWave = 0x90; // ObjectProperty
		constexpr auto ChirpOutSoundNodeWaveName = 0x98; // FString
		constexpr auto ChirpOutSoundNodeWave = 0xa8; // ObjectProperty
		constexpr auto CommonAudioPool = 0xb0; // FPointer
		constexpr auto CommonAudioPoolFreeBytes = 0xb8; // int32_t
		constexpr auto AudioComponents = 0xc0; // TArray<ComponentProperty>
		constexpr auto Sources = 0xd0; // TArray<FPointer>
		constexpr auto FreeSources = 0xe0; // TArray<FPointer>
		constexpr auto WaveInstanceSourceMap = 0xf0; // TMap<None, None>
		constexpr auto bGameWasTicking = 0x140; // uint32_t : 1
		constexpr auto bSoundSpawningEnabled = 0x140; // uint32_t : 1
		constexpr auto Listeners = 0x148; // TArray<FListener>
		constexpr auto CurrentTick = 0x158; // QWordProperty
		constexpr auto SoundClasses = 0x160; // TMap<None, None>
		constexpr auto SourceSoundClasses = 0x1b0; // TMap<None, None>
		constexpr auto CurrentSoundClasses = 0x200; // TMap<None, None>
		constexpr auto DestinationSoundClasses = 0x250; // TMap<None, None>
		constexpr auto SoundModes = 0x2a0; // TMap<None, None>
		constexpr auto Effects = 0x2f0; // FPointer
		constexpr auto BaseSoundModeName = 0x2f8; // FName
		constexpr auto CurrentMode = 0x300; // ObjectProperty
		constexpr auto SoundModeStartTime = 0x308; // FDouble
		constexpr auto SoundModeFadeInStartTime = 0x310; // FDouble
		constexpr auto SoundModeFadeInEndTime = 0x318; // FDouble
		constexpr auto SoundModeEndTime = 0x320; // FDouble
		constexpr auto ListenerVolumeIndex = 0x328; // int32_t
		constexpr auto ListenerInteriorSettings = 0x32c; // FInteriorSettings
		constexpr auto InteriorStartTime = 0x350; // FDouble
		constexpr auto InteriorEndTime = 0x358; // FDouble
		constexpr auto ExteriorEndTime = 0x360; // FDouble
		constexpr auto InteriorLPFEndTime = 0x368; // FDouble
		constexpr auto ExteriorLPFEndTime = 0x370; // FDouble
		constexpr auto InteriorVolumeInterp = 0x378; // float
		constexpr auto InteriorLPFInterp = 0x37c; // float
		constexpr auto ExteriorVolumeInterp = 0x380; // float
		constexpr auto ExteriorLPFInterp = 0x384; // float
		constexpr auto TestAudioComponent = 0x388; // ComponentProperty
		constexpr auto TextToSpeech = 0x390; // FPointer
		constexpr auto DebugState = 0x398; // EDebugState
		constexpr auto TransientMasterVolume = 0x39c; // float
		constexpr auto LastUpdateTime = 0x3a0; // float
	}

	namespace n_ALiftCenter {
		constexpr auto MyLift = 0x388; // ObjectProperty
		constexpr auto MaxDist2D = 0x390; // float
		constexpr auto LiftOffset = 0x394; // FVector
		constexpr auto bJumpLift = 0x3a0; // uint32_t : 1
		constexpr auto CollisionHeight = 0x3a4; // float
		constexpr auto LiftTrigger = 0x3a8; // ObjectProperty
	}

	namespace n_URPC_PlayerStorageSet_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Items = 0x130; // TArray<FSetPlayerStorageRequestItem>
		constexpr auto Result = 0x140; // ObjectProperty
	}

	namespace n_AInMapScoreboard_TA {
		constexpr auto StaticMesh = 0x268; // ObjectProperty
		constexpr auto MaterialInstance = 0x270; // ObjectProperty
		constexpr auto MaterialIndex = 0x278; // int32_t
		constexpr auto TeamIndex = 0x27c; // int32_t
		constexpr auto GoalAnimation = 0x280; // FInterpCurveFloat
		constexpr auto GoDuration = 0x298; // float
		constexpr auto GoSwitch = 0x29c; // FName
		constexpr auto GoalXPos = 0x2a4; // FName
		constexpr auto CountdownSwitch = 0x2ac; // FName
		constexpr auto CountdownToggle = 0x2b4; // FName
		constexpr auto ScoreToggle = 0x2bc; // FName
		constexpr auto ScoreParam = 0x2c4; // FName
		constexpr auto CountdownValueParam = 0x2cc; // FName
		constexpr auto LastCountdownTime = 0x2d4; // int32_t
		constexpr auto ReplayCountdownTime = 0x2d8; // float
		constexpr auto bHasReplayCountdownTime = 0x2dc; // uint32_t : 1
		constexpr auto GameEvent = 0x2e0; // ObjectProperty
		constexpr auto LastState = 0x2e8; // FName
		constexpr auto MIC = 0x2f0; // ObjectProperty
		constexpr auto GoalTime = 0x2f8; // float
	}

	namespace n_UCycleLog_X {
		constexpr auto MaxLogs = 0x70; // int32_t
		constexpr auto Logs = 0x78; // TArray<FString>
		constexpr auto LogIndex = 0x88; // int32_t
	}

	namespace n_UCameraState_DirectorGoalScorer_TA {
		constexpr auto Distance = 0x180; // float
		constexpr auto FOV = 0x184; // float
		constexpr auto FocusCar = 0x188; // ObjectProperty
	}

	namespace n_UUICharacterSummary {
		constexpr auto ClassPathName = 0xa0; // FString
		constexpr auto CharacterName = 0xb0; // FString
		constexpr auto CharacterBio = 0xc0; // FString
		constexpr auto bIsDisabled = 0xd0; // uint32_t : 1
	}

	namespace n_UMcpServiceConfig {
		constexpr auto Protocol = 0x60; // FString
		constexpr auto Domain = 0x70; // FString
		constexpr auto AppKey = 0x80; // FString
		constexpr auto AppSecret = 0x90; // FString
	}

	namespace n_USeqAct_RotateActor_TA {
		constexpr auto Actor = 0x178; // ObjectProperty
		constexpr auto RotateTransform = 0x180; // ObjectProperty
		constexpr auto InterpSpeed = 0x188; // float
		constexpr auto bConstantInterpSpeed = 0x18c; // uint32_t : 1
		constexpr auto bUpdating = 0x18c; // uint32_t : 1
		constexpr auto RotateTolerance = 0x190; // float
	}

	namespace n_UPBRuleNodeSplit {
		constexpr auto SplitAxis = 0x98; // EProcBuildingAxis
		constexpr auto SplitSetup = 0xa0; // TArray<FRBSplitInfo>
	}

	namespace n_UGFxNameplatesManager_TA {
		constexpr auto MovieArchetype = 0x70; // ObjectProperty
		constexpr auto NameplateMeshArchetype = 0x78; // ComponentProperty
		constexpr auto Shell = 0x80; // ObjectProperty
		constexpr auto Movie = 0x88; // ObjectProperty
		constexpr auto bHidden = 0x90; // uint32_t : 1
		constexpr auto bShowingShortcuts = 0x90; // uint32_t : 1
		constexpr auto bDebug = 0x90; // uint32_t : 1
		constexpr auto ComponentSlots = 0x98; // TArray<ComponentProperty>
		constexpr auto PendingComponents = 0xa8; // TArray<ComponentProperty>
		constexpr auto NameplateRows = 0xb8; // TArray<ObjectProperty>
		constexpr auto Nameplates = 0xc8; // TArray<ComponentProperty>
	}

	namespace n_UGFxMoviePlayer {
		constexpr auto pMovie = 0x60; // FPointer
		constexpr auto pCaptureKeys = 0x68; // FPointer
		constexpr auto pFocusIgnoreKeys = 0x70; // FPointer
		constexpr auto ASUClasses = 0x78; // TMap<None, None>
		constexpr auto ASUObjects = 0xc8; // TMap<None, None>
		constexpr auto NextASUObject = 0x118; // int32_t
		constexpr auto MovieInfo = 0x120; // ObjectProperty
		constexpr auto bMovieIsOpen = 0x128; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x128; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x128; // uint32_t : 1
		constexpr auto bWidgetsInitializedThisFrame = 0x128; // uint32_t : 1
		constexpr auto bLogUnhandedWidgetInitializations = 0x128; // uint32_t : 1
		constexpr auto bAllowInput = 0x128; // uint32_t : 1
		constexpr auto bAllowFocus = 0x128; // uint32_t : 1
		constexpr auto bAutoPlay = 0x128; // uint32_t : 1
		constexpr auto bPauseGameWhileActive = 0x128; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x128; // uint32_t : 1
		constexpr auto bCaptureWorldRendering = 0x128; // uint32_t : 1
		constexpr auto bCloseOnLevelChange = 0x128; // uint32_t : 1
		constexpr auto bOnlyOwnerFocusable = 0x128; // uint32_t : 1
		constexpr auto bForceFullViewport = 0x128; // uint32_t : 1
		constexpr auto bDiscardNonOwnerInput = 0x128; // uint32_t : 1
		constexpr auto bCaptureInput = 0x128; // uint32_t : 1
		constexpr auto bCaptureMouseInput = 0x128; // uint32_t : 1
		constexpr auto bIgnoreMouseInput = 0x128; // uint32_t : 1
		constexpr auto bIsSplitscreenLayoutModified = 0x128; // uint32_t : 1
		constexpr auto bShowHardwareMouseCursor = 0x128; // uint32_t : 1
		constexpr auto bForceFullScreen = 0x128; // uint32_t : 1
		constexpr auto bBlurLesserMovies = 0x128; // uint32_t : 1
		constexpr auto bHideLesserMovies = 0x128; // uint32_t : 1
		constexpr auto bIsPriorityBlurred = 0x128; // uint32_t : 1
		constexpr auto bIsPriorityHidden = 0x128; // uint32_t : 1
		constexpr auto bIgnoreVisibilityEffect = 0x128; // uint32_t : 1
		constexpr auto bIgnoreBlurEffect = 0x128; // uint32_t : 1
		constexpr auto RenderTexture = 0x130; // ObjectProperty
		constexpr auto LocalPlayerOwnerIndex = 0x138; // int32_t
		constexpr auto ExternalInterface = 0x140; // ObjectProperty
		constexpr auto CaptureKeys = 0x148; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x158; // TArray<FName>
		constexpr auto ExternalTextures = 0x168; // TArray<FExternalTexture>
		constexpr auto SoundThemes = 0x178; // TArray<FSoundThemeBinding>
		constexpr auto TimingMode = 0x188; // GFxTimingMode
		constexpr auto RenderTextureMode = 0x189; // GFxRenderTextureMode
		constexpr auto Priority = 0x18a; // char
		constexpr auto WidgetBindings = 0x190; // TArray<FGFxWidgetBinding>
		constexpr auto WidgetPathBindings = 0x1a0; // TMap<None, None>
		constexpr auto SplitscreenLayoutObject = 0x1f0; // ObjectProperty
		constexpr auto SplitscreenLayoutYAdjust = 0x1f8; // int32_t
		constexpr auto __OnPostAdvance__Delegate = 0x200; // DelegateProperty
	}

	namespace n_UTextureMovie {
		constexpr auto SizeX = 0x150; // int32_t
		constexpr auto SizeY = 0x154; // int32_t
		constexpr auto Format = 0x158; // EPixelFormat
		constexpr auto AddressX = 0x159; // TextureAddress
		constexpr auto AddressY = 0x15a; // TextureAddress
		constexpr auto MovieStreamSource = 0x15b; // EMovieStreamSource
		constexpr auto DecoderClass = 0x160; // FNone*
		constexpr auto Decoder = 0x168; // ObjectProperty
		constexpr auto Paused = 0x170; // uint32_t : 1
		constexpr auto Stopped = 0x170; // uint32_t : 1
		constexpr auto Looping = 0x170; // uint32_t : 1
		constexpr auto ResetOnLastFrame = 0x170; // uint32_t : 1
		constexpr auto AutoPlay = 0x170; // uint32_t : 1
		constexpr auto Data = 0x178; // FUntypedBulkData_Mirror
		constexpr auto ReleaseCodecFence = 0x1d0; // FPointer
	}

	namespace n_UCachedWebData_X {
		constexpr auto Data = 0x60; // TArray<char>
		constexpr auto DataCRC = 0x70; // int32_t
		constexpr auto ETag = 0x78; // FString
		constexpr auto ContentType = 0x88; // FString
		constexpr auto Signature = 0x98; // FString
		constexpr auto LoadError = 0xa8; // ObjectProperty
		constexpr auto DownloadError = 0xb0; // ObjectProperty
		constexpr auto bNewData = 0xb8; // uint32_t : 1
	}

	namespace n_UAprilConfig_X {
		constexpr auto StartTime = 0x78; // QWordProperty
		constexpr auto EndTime = 0x80; // QWordProperty
		constexpr auto bChangeRankedIcons = 0x88; // uint32_t : 1
		constexpr auto bChangePlaylists = 0x88; // uint32_t : 1
		constexpr auto bChangeCrowd = 0x88; // uint32_t : 1
		constexpr auto HatScale = 0x8c; // float
		constexpr auto AntennaScale = 0x90; // float
	}

	namespace n_USeqAct_SetNameplate_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto LocalizedPlayerName = 0x168; // FString
	}

	namespace n_UCameraState_BallCam_TA {
		constexpr auto RotationRate = 0x1c0; // float
		constexpr auto PitchScale = 0x1c4; // float
		constexpr auto PitchFocusZFactor = 0x1c8; // float
		constexpr auto PitchExtentMin = 0x1cc; // float
		constexpr auto PitchExtentMax = 0x1d0; // float
		constexpr auto Target = 0x1d8; // ComponentProperty
		constexpr auto BasePOV = 0x1e0; // FCameraOrientation
		constexpr auto OldTargetLocation = 0x20c; // FVector
		constexpr auto bWasReverseCam = 0x218; // uint32_t : 1
		constexpr auto bActive = 0x218; // uint32_t : 1
		constexpr auto TargetClasses = 0x220; // TArray<FNone*>
		constexpr auto PlaneSelectSettings = 0x230; // TArray<FPlaneSelectData>
		constexpr auto AngleSelectSettings = 0x240; // TArray<FAngleSelectData>
	}

	namespace n_AKeypoint {
		constexpr auto SpriteComp = 0x268; // ComponentProperty
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x78; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x80; // FRawDistributionVector
		constexpr auto OffsetOptions = 0xa8; // FOrbitOptions
		constexpr auto RotationAmount = 0xb0; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x108; // FOrbitOptions
	}

	namespace n_UMatchmakingSettingsSave_TA {
		constexpr auto MatchmakingViewTab = 0xc8; // EMatchmakingViewTab
		constexpr auto QuickMatchPlaylists = 0xd0; // TArray<FName>
		constexpr auto QuickMatchRegions = 0xe0; // TArray<FString>
		constexpr auto bMultiSelectEnabled = 0xf0; // uint32_t : 1
	}

	namespace n_USeqAct_SetActiveAnimChild {
		constexpr auto NodeName = 0x160; // FName
		constexpr auto ChildIndex = 0x168; // int32_t
		constexpr auto BlendTime = 0x16c; // float
	}

	namespace n_AGFxHUD_Spectator_TA {
		constexpr auto ViewerData = 0x558; // ObjectProperty
		constexpr auto ZoomSpeed = 0x560; // float
		constexpr auto ZoomClickTime = 0x564; // float
		constexpr auto GameHUD = 0x568; // ObjectProperty
		constexpr auto bZoomIn = 0x570; // uint32_t : 1
		constexpr auto bZoomOut = 0x570; // uint32_t : 1
		constexpr auto ZoomInTime = 0x574; // float
		constexpr auto ZoomOutTime = 0x578; // float
		constexpr auto __OpenMenuWithKeycodeDelegate__Delegate = 0x580; // DelegateProperty
	}

	namespace n_URPC_SetPlayerSkillTier_X {
		constexpr auto Playlist = 0xe8; // int32_t
		constexpr auto Tier = 0xec; // int32_t
		constexpr auto MatchesPlayed = 0xf0; // int32_t
	}

	namespace n_UGFxData_TourBracket_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
		constexpr auto PlayerTeamID = 0xa0; // QWordProperty
		constexpr auto TotalRounds = 0xa8; // int32_t
		constexpr auto Id = 0xb0; // QWordProperty
		constexpr auto CurrentPayouts = 0xb8; // TArray<FShopCurrencyInfo>
		constexpr auto BracketSync = 0xc8; // ObjectProperty
	}

	namespace n_USeqAct_AkSetRTPCValue {
		constexpr auto Param = 0x178; // FString
		constexpr auto Value = 0x188; // float
		constexpr auto Running = 0x18c; // uint32_t : 1
	}

	namespace n_U__GFxData_Party_TA__HandlePartyError_1E250CFC48EB33584D5DECABE24827FB {
		constexpr auto Error = 0x60; // ObjectProperty
	}

	namespace n_AWebConnection {
		constexpr auto WebServer = 0x2d8; // ObjectProperty
		constexpr auto ReceivedData = 0x2e0; // FString
		constexpr auto Request = 0x2f0; // ObjectProperty
		constexpr auto Response = 0x2f8; // ObjectProperty
		constexpr auto Application = 0x300; // ObjectProperty
		constexpr auto bDelayCleanup = 0x308; // uint32_t : 1
		constexpr auto RawBytesExpecting = 0x30c; // int32_t
		constexpr auto MaxValueLength = 0x310; // int32_t
		constexpr auto MaxLineLength = 0x314; // int32_t
		constexpr auto ConnID = 0x318; // int32_t
	}

	namespace n_U__GameEvent_Soccar_TA__GetGoalByTeamIndex_E1DAD7A44647F54F16E81A92748D841C {
		constexpr auto TeamIndex = 0x60; // int32_t
	}

	namespace n_URB_ConstraintDrawComponent {
		constexpr auto LimitMaterial = 0x258; // ObjectProperty
	}

	namespace n_UUIDataStore_GameState {
		constexpr auto __OnRefreshDataFieldValue__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_AAmbientSoundSimpleToggleable {
		constexpr auto bCurrentlyPlaying = 0x298; // uint32_t : 1
		constexpr auto bFadeOnToggle = 0x298; // uint32_t : 1
		constexpr auto bIgnoreAutoPlay = 0x298; // uint32_t : 1
		constexpr auto FadeInDuration = 0x29c; // float
		constexpr auto FadeInVolumeLevel = 0x2a0; // float
		constexpr auto FadeOutDuration = 0x2a4; // float
		constexpr auto FadeOutVolumeLevel = 0x2a8; // float
	}

	namespace n_URegion_X {
		constexpr auto SuperRegionID = 0x60; // FString
		constexpr auto Id = 0x70; // FString
		constexpr auto Label = 0x80; // FString
		constexpr auto Secret = 0x90; // FString
	}

	namespace n_U__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_D4CE9F594933927902B16183BA4B1E38 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UChatHistory_TA {
		constexpr auto StoredChat = 0x60; // TArray<ObjectProperty>
		constexpr auto MaxNumHistories = 0x70; // int32_t
	}

	namespace n_UPrivateMatchSettingsSave_TA {
		constexpr auto Region = 0x160; // FString
	}

	namespace n_ATeam_Soccar_TA {
		constexpr auto GameScore = 0x458; // int32_t
		constexpr auto PrimaryStarts = 0x460; // TArray<ObjectProperty>
		constexpr auto SecondaryStarts = 0x470; // TArray<ObjectProperty>
		constexpr auto __EventGameScoreUpdated__Delegate = 0x480; // DelegateProperty
	}

	namespace n_URPC_FaceItFindMatchForPlayer_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ReservationData = 0x130; // FServerReservationData
		constexpr auto MatchInfo = 0x1b0; // FFaceItMatchInfo
		constexpr auto Expiration = 0x230; // QWordProperty
	}

	namespace n_UUIConfig_TA {
		constexpr auto bReportServerButton = 0x78; // uint32_t : 1
		constexpr auto bTournamentTeamColorSection = 0x78; // uint32_t : 1
		constexpr auto bShowCurrencyRechargeButton = 0x78; // uint32_t : 1
		constexpr auto bCrateRouletteEnabled = 0x78; // uint32_t : 1
		constexpr auto bPsyNetFriendListEnabled = 0x78; // uint32_t : 1
		constexpr auto bShowStatGraphOptions = 0x78; // uint32_t : 1
		constexpr auto bUseCoherentBrowser = 0x78; // uint32_t : 1
		constexpr auto bRankedSportsEnabled = 0x78; // uint32_t : 1
		constexpr auto bShowStarterBundles = 0x78; // uint32_t : 1
		constexpr auto bPurchaseProTier = 0x78; // uint32_t : 1
		constexpr auto bShowAnthems = 0x78; // uint32_t : 1
		constexpr auto bDisplayVideoQualitySetting = 0x78; // uint32_t : 1
		constexpr auto FriendInvitationLimit = 0x7c; // int32_t
		constexpr auto ClubInvitationLimit = 0x80; // int32_t
		constexpr auto MainMenuBG = 0x84; // EMainMenuBackground
		constexpr auto MainMenuTeamColors = 0x88; // TArray<FTeamColor>
		constexpr auto XPDataRanges = 0x98; // TArray<int32_t>
		constexpr auto TradeConfirmationLockoutSeconds = 0xa8; // int32_t
		constexpr auto SupportURL = 0xb0; // FString
		constexpr auto CurrentActiveSeason = 0xc0; // int32_t
		constexpr auto __MainMenuBG__ChangeNotify = 0xc8; // DelegateProperty
	}

	namespace n_U__UserBugReportConfig_TA__GetCategory_945728A244343924042D029CC846AFB4 {
		constexpr auto CategoryID = 0x60; // FName
	}

	namespace n_AFogVolumeDensityInfo {
		constexpr auto DensityComponent = 0x268; // ComponentProperty
		constexpr auto AutomaticMeshComponent = 0x270; // ComponentProperty
		constexpr auto bEnabled = 0x278; // uint32_t : 1
	}

	namespace n_UParticleModulePhysicsVolumes {
		constexpr auto GlobalInfluence = 0x70; // FRawDistributionFloat
		constexpr auto LevelInfluenceType = 0x98; // EParticleLevelInfluenceType
	}

	namespace n_U__TAsyncResult__PsyNetClientService_X__NotifyOnResult_A3278C8C4DC495217BE353B2D3BBC878 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_ARBVehiclePart_TA {
		constexpr auto MaxVehicleParts = 0x268; // int32_t
		constexpr auto Ak = 0x270; // ComponentProperty
		constexpr auto ImpactEffectsComponent = 0x278; // ComponentProperty
	}

	namespace n_UAnimNotify_PawnMaterialParam {
		constexpr auto ScalarParameterInterpArray = 0x68; // TArray<FScalarParameterInterpStruct>
	}

	namespace n_UMatchType_FaceIt_TA {
		constexpr auto MinPlayersMetWaitTimeSeconds = 0xd0; // int32_t
		constexpr auto WaitForPlayersExpirationTimeStamp = 0xd8; // QWordProperty
	}

	namespace n_U__PlayerController_TA__ClientNotifyServerShutdown_5F64142142F03A7D264142A29D026332 {
		constexpr auto OnlineGame = 0x60; // ObjectProperty
		constexpr auto ConnectionInfo = 0x68; // FServerConnectionInfo
		constexpr auto Settings = 0xa8; // FJoinMatchSettings
	}

	namespace n_UProductAttribute_PaintSettingsUpload_TA {
		constexpr auto ExcludePaints = 0x80; // TArray<int32_t>
	}

	namespace n_UOnlineProfileSettings {
		constexpr auto ProfileSettingIds = 0x98; // TArray<int32_t>
		constexpr auto DefaultSettings = 0xa8; // TArray<FOnlineProfileSetting>
		constexpr auto OwnerMappings = 0xb8; // TArray<FIdToStringMapping>
	}

	namespace n_AVolume {
		constexpr auto AssociatedActor = 0x298; // ObjectProperty
		constexpr auto bForcePawnWalk = 0x2a0; // uint32_t : 1
		constexpr auto bProcessAllActors = 0x2a0; // uint32_t : 1
		constexpr auto bPawnsOnly = 0x2a0; // uint32_t : 1
	}

	namespace n_U__TourService_PsyNet_TA__GetBracket_7DCB68414BBA17E069BA90A2C23E2FF5 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UAkEvent {
		constexpr auto RequiredBank = 0x60; // ObjectProperty
	}

	namespace n_UInterpGroupInstAI {
		constexpr auto AIGroup = 0x88; // ObjectProperty
		constexpr auto SavedPhysics = 0x90; // EPhysics
		constexpr auto bSavedNoEncroachCheck = 0x94; // uint32_t : 1
		constexpr auto bSavedCollideActors = 0x94; // uint32_t : 1
		constexpr auto bSavedBlockActors = 0x94; // uint32_t : 1
		constexpr auto PreviewPawn = 0x98; // ObjectProperty
		constexpr auto StageMarkActor = 0xa0; // ObjectProperty
	}

	namespace n_UMorphTarget {
		constexpr auto MorphLODModels = 0x60; // TArray<int32_t>
		constexpr auto MaterialSlotId = 0x70; // int32_t
		constexpr auto ScalarParameterName = 0x74; // FName
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0xe8; // FName
	}

	namespace n_U__TAsyncResult__Texture2DDynamic__NotifyOnResult_D75D834A48460B5D91C284951AFC8D94 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UProductAttribute_InheritCarSetting_TA {
		constexpr auto Parameters = 0x80; // TArray<FInheritedParameter>
	}

	namespace n_UGFxData_ClubDetails_TA {
		constexpr auto ClubID = 0x98; // QWordProperty
		constexpr auto ClubName = 0xa0; // FString
		constexpr auto ClubTag = 0xb0; // FString
		constexpr auto ClubMotD = 0xc0; // FString
		constexpr auto PrimaryColorID = 0xd0; // int32_t
		constexpr auto AccentColorID = 0xd4; // int32_t
		constexpr auto OwnerId = 0xd8; // FUniqueNetId
		constexpr auto bVerified = 0x120; // uint32_t : 1
		constexpr auto bCrossPlatformFiltered = 0x120; // uint32_t : 1
		constexpr auto ClubDetails = 0x128; // ObjectProperty
		constexpr auto ClubMembers = 0x130; // TArray<ObjectProperty>
		constexpr auto WordFilter = 0x140; // ObjectProperty
		constexpr auto CrossplayConfig = 0x148; // ObjectProperty
	}

	namespace n_UModelComponent {
		constexpr auto Model = 0x258; // ObjectProperty
		constexpr auto ZoneIndex = 0x260; // int32_t
		constexpr auto ComponentIndex = 0x264; // int32_t
		constexpr auto Nodes = 0x268; // TArray<FPointer>
		constexpr auto Elements = 0x278; // TArray<FPointer>
	}

	namespace n_UGoal_AtActor {
		constexpr auto GoalActor = 0x78; // ObjectProperty
		constexpr auto GoalDist = 0x80; // float
		constexpr auto bKeepPartial = 0x84; // uint32_t : 1
	}

	namespace n_UNavMeshGoal_GenericFilterContainer {
		constexpr auto GoalFilters = 0x80; // TArray<ObjectProperty>
		constexpr auto SuccessfulGoal = 0x90; // FPointer
		constexpr auto MyNavigationHandle = 0x98; // ObjectProperty
		constexpr auto SeedLocations = 0xa0; // TArray<FVector>
	}

	namespace n_USeqCond_SwitchClass {
		constexpr auto ClassArray = 0x140; // TArray<FSwitchClassInfo>
	}

	namespace n_UEngineShare_X {
		constexpr auto OnlineGame = 0x60; // ObjectProperty
		constexpr auto LocalCache = 0x68; // ObjectProperty
		constexpr auto ArchetypeString_OnlineGame = 0x70; // FString
		constexpr auto ArchetypeString_OnlineGameDedicatedServer = 0x80; // FString
		constexpr auto ArchetypeString_OnlineGameLanServer = 0x90; // FString
		constexpr auto bDisableSaving = 0xa0; // uint32_t : 1
		constexpr auto bIsShowingLoadmapMovie = 0xa0; // uint32_t : 1
		constexpr auto bUndocked = 0xa0; // uint32_t : 1
		constexpr auto __EventPreExit__Delegate = 0xa8; // DelegateProperty
		constexpr auto __EventLoadingMovieClosed__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventPreScriptsReloaded__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventPostScriptsReloaded__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventOnlineGameInitialized__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventPreLoadMap__Delegate = 0x120; // DelegateProperty
		constexpr auto __EventPostLoadMap__Delegate = 0x138; // DelegateProperty
		constexpr auto __EventCrashed__Delegate = 0x150; // DelegateProperty
		constexpr auto __EventUndockedChanged__Delegate = 0x168; // DelegateProperty
	}

	namespace n_UOnlineResource_X {
		constexpr auto URL = 0x70; // FString
		constexpr auto RetryDelays = 0x80; // TArray<float>
		constexpr auto CacheSeconds = 0x90; // float
		constexpr auto bZipResponse = 0x94; // uint32_t : 1
		constexpr auto bSyncing = 0x94; // uint32_t : 1
		constexpr auto Headers = 0x98; // ComponentProperty
		constexpr auto CachedData = 0xa0; // ObjectProperty
		constexpr auto RetryCount = 0xa8; // int32_t
		constexpr auto LastSyncTime = 0xac; // float
		constexpr auto RetryConfig = 0xb0; // ObjectProperty
		constexpr auto ServiceName = 0xb8; // FString
		constexpr auto __EventSyncComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __EventSyncError__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventDataChanged__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x70; // uint32_t : 1
		constexpr auto Positive_Y = 0x70; // uint32_t : 1
		constexpr auto Positive_Z = 0x70; // uint32_t : 1
		constexpr auto Negative_X = 0x70; // uint32_t : 1
		constexpr auto Negative_Y = 0x70; // uint32_t : 1
		constexpr auto Negative_Z = 0x70; // uint32_t : 1
		constexpr auto SurfaceOnly = 0x70; // uint32_t : 1
		constexpr auto Velocity = 0x70; // uint32_t : 1
		constexpr auto VelocityScale = 0x78; // FRawDistributionFloat
		constexpr auto StartLocation = 0xa0; // FRawDistributionVector
	}

	namespace n_UBTC_SelectActor {
		constexpr auto Targets = 0x90; // ObjectProperty
	}

	namespace n_UEventRecorderGroup_X {
		constexpr auto Category = 0x70; // FString
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x268; // ComponentProperty
		constexpr auto bDisableAutoBaseOnProcBuilding = 0x270; // uint32_t : 1
		constexpr auto bProxy = 0x270; // uint32_t : 1
		constexpr auto bHiddenByProxy = 0x270; // uint32_t : 1
		constexpr auto OldCastShadow = 0x270; // uint32_t : 1
		constexpr auto OldAcceptsLights = 0x270; // uint32_t : 1
		constexpr auto OldCollisionType = 0x274; // ECollisionType
		constexpr auto PreCombinedStaticMeshActors = 0x278; // TArray<FPreCombinedStaticMeshActor>
	}

	namespace n_UMatchSeries_TA {
		constexpr auto SeriesLength = 0x60; // int32_t
		constexpr auto Teams = 0x68; // TArray<FSeriesTeam>
		constexpr auto __EventSeriesGameForfeit__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UInterpTrackInstNotify {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UComponent {
		constexpr auto TemplateOwnerClass = 0x60; // FNone*
		constexpr auto TemplateName = 0x68; // FName
	}

	namespace n_UProductAttribute_ProductLink_TA {
		constexpr auto ProductID = 0x80; // int32_t
	}

	namespace n_UInteraction {
		constexpr auto __OnReceivedNativeInputKey__Delegate = 0x70; // DelegateProperty
		constexpr auto __OnReceivedNativeInputAxis__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnReceivedNativeInputChar__Delegate = 0xa0; // DelegateProperty
		constexpr auto __OnInitialize__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UThrottleStateComponent_TA {
		constexpr auto EngageSound = 0xa8; // ObjectProperty
		constexpr auto ReleaseSound = 0xb0; // ObjectProperty
		constexpr auto Car = 0xb8; // ObjectProperty
		constexpr auto PrevThrottle = 0xc0; // float
		constexpr auto bPrevCarAccelerating = 0xc4; // uint32_t : 1
		constexpr auto bPrevCarIdling = 0xc4; // uint32_t : 1
		constexpr auto bCanThrottleEngage = 0xc4; // uint32_t : 1
	}

	namespace n_AAmbientSoundSimple {
		constexpr auto AmbientProperties = 0x280; // ObjectProperty
		constexpr auto SoundCueInstance = 0x288; // ObjectProperty
		constexpr auto SoundNodeInstance = 0x290; // ObjectProperty
	}

	namespace n_URPC_PartyBase_X {
		constexpr auto PartyID = 0xe8; // FString
	}

	namespace n_UActorFactoryLensFlare {
		constexpr auto LensFlareObject = 0xa0; // ObjectProperty
	}

	namespace n_USkinOverrideTable_TA {
		constexpr auto Skins = 0x60; // TArray<FProductSkinOverride>
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x70; // FRawDistributionVector
	}

	namespace n_UEOS_ErrorResponse {
		constexpr auto ErrorMessage = 0x60; // FString
		constexpr auto NumericErrorCode = 0x70; // int32_t
		constexpr auto ErrorCode = 0x78; // FString
		constexpr auto MessageVars = 0x88; // TArray<FString>
	}

	namespace n_UGFxData_MusicPlayer_TA {
		constexpr auto UrlConfig = 0x98; // ObjectProperty
		constexpr auto bDebugMusicPlayer = 0xa0; // uint32_t : 1
		constexpr auto bPlaylistsEnabled = 0xa0; // uint32_t : 1
		constexpr auto bEnableMusicControls = 0xa0; // uint32_t : 1
		constexpr auto bPlayerPopupDisplaying = 0xa0; // uint32_t : 1
		constexpr auto bActivePlaylistsEnabled = 0xa0; // uint32_t : 1
		constexpr auto bTitleTracksActive = 0xa0; // uint32_t : 1
		constexpr auto DefaultPlaylists = 0xa8; // TArray<FGFxMusicPlaylist>
		constexpr auto Playlists = 0xb8; // TArray<FGFxMusicPlaylist>
		constexpr auto TrackTitle = 0xc8; // FString
		constexpr auto TrackArtist = 0xd8; // FString
		constexpr auto TrackIcon = 0xe8; // ObjectProperty
		constexpr auto TrackUrl = 0xf0; // FString
		constexpr auto StartupLogoDisplayDurationMS = 0x100; // float
		constexpr auto CurrentTrackName = 0x108; // FString
		constexpr auto CurrentTrackPlayingID = 0x118; // int32_t
		constexpr auto CurrentTrack = 0x120; // ObjectProperty
		constexpr auto MasterTracklist = 0x128; // TArray<FPlaylistTrack>
		constexpr auto ActiveTracklist = 0x138; // TScriptInterface<Class>
		constexpr auto TracklistFactory = 0x148; // ObjectProperty
		constexpr auto MainRotationTracklistBuilder = 0x150; // ObjectProperty
		constexpr auto MusicTheme = 0x158; // ObjectProperty
		constexpr auto MusicSave = 0x160; // ObjectProperty
		constexpr auto GameMusicPlayer = 0x168; // ObjectProperty
		constexpr auto StreamerSafeConfig = 0x170; // ObjectProperty
		constexpr auto __EventTrackFinished__Delegate = 0x178; // DelegateProperty
		constexpr auto __CurrentTrackName__ChangeNotify = 0x190; // DelegateProperty
	}

	namespace n_UOnlineVoiceInterfaceEOS {
		constexpr auto RTCHandle = 0x60; // FPointer
		constexpr auto RTCAudioHandle = 0x68; // FPointer
		constexpr auto RTCAdminHandle = 0x70; // FPointer
		constexpr auto PlayerInterfaceEOS = 0x78; // ObjectProperty
		constexpr auto InputAudioDevices = 0x80; // TArray<FVoiceAudioDevice>
		constexpr auto OutputAudioDevices = 0x90; // TArray<FVoiceAudioDevice>
		constexpr auto __EventLeftVoiceRoom__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventJoinedVoiceRoom__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventPlayerJoinedVoiceRoom__Delegate = 0xd0; // DelegateProperty
		constexpr auto __EventPlayerLeftVoiceRoom__Delegate = 0xe8; // DelegateProperty
		constexpr auto __EventPlayerStatusChanged__Delegate = 0x100; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x130; // DelegateProperty
	}

	namespace n_UServerMergeErrorEvent_TA {
		constexpr auto Vote = 0x60; // ObjectProperty
		constexpr auto Invitees = 0x68; // TArray<FUniqueNetId>
		constexpr auto Leader = 0x78; // FUniqueNetId
		constexpr auto Reason = 0xc0; // ObjectProperty
	}

	namespace n_UAudioComponent {
		constexpr auto SoundCue = 0xa0; // ObjectProperty
		constexpr auto CueFirstNode = 0xa8; // ObjectProperty
		constexpr auto InstanceParameters = 0xb0; // TArray<FAudioComponentParam>
		constexpr auto bUseOwnerLocation = 0xc0; // uint32_t : 1
		constexpr auto bAutoPlay = 0xc0; // uint32_t : 1
		constexpr auto bAutoDestroy = 0xc0; // uint32_t : 1
		constexpr auto bStopWhenOwnerDestroyed = 0xc0; // uint32_t : 1
		constexpr auto bShouldRemainActiveIfDropped = 0xc0; // uint32_t : 1
		constexpr auto bWasOccluded = 0xc0; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xc0; // uint32_t : 1
		constexpr auto bWasPlaying = 0xc0; // uint32_t : 1
		constexpr auto bAllowSpatialization = 0xc0; // uint32_t : 1
		constexpr auto bFinished = 0xc0; // uint32_t : 1
		constexpr auto bApplyRadioFilter = 0xc0; // uint32_t : 1
		constexpr auto bRadioFilterSelected = 0xc0; // uint32_t : 1
		constexpr auto bPreviewComponent = 0xc0; // uint32_t : 1
		constexpr auto bIgnoreForFlushing = 0xc0; // uint32_t : 1
		constexpr auto StereoBleed = 0xc4; // float
		constexpr auto LFEBleed = 0xc8; // float
		constexpr auto bEQFilterApplied = 0xcc; // uint32_t : 1
		constexpr auto bAlwaysPlay = 0xcc; // uint32_t : 1
		constexpr auto bIsUISound = 0xcc; // uint32_t : 1
		constexpr auto bIsMusic = 0xcc; // uint32_t : 1
		constexpr auto bReverb = 0xcc; // uint32_t : 1
		constexpr auto bCenterChannelOnly = 0xcc; // uint32_t : 1
		constexpr auto bIsCachedInPool = 0xcc; // uint32_t : 1
		constexpr auto WaveInstances = 0xd0; // TArray<FPointer>
		constexpr auto SoundNodeData = 0xe0; // TArray<char>
		constexpr auto SoundNodeOffsetMap = 0xf0; // TMap<None, None>
		constexpr auto SoundNodeResetWaveMap = 0x140; // FMultiMap_Mirror
		constexpr auto Listener = 0x190; // FPointer
		constexpr auto PlaybackTime = 0x198; // float
		constexpr auto PortalVolume = 0x1a0; // ObjectProperty
		constexpr auto Location = 0x1a8; // FVector
		constexpr auto ComponentLocation = 0x1b4; // FVector
		constexpr auto Rotation = 0x1c0; // FRotator
		constexpr auto ComponentRotation = 0x1cc; // FRotator
		constexpr auto LastOwner = 0x1d8; // ObjectProperty
		constexpr auto SubtitlePriority = 0x1e0; // float
		constexpr auto FadeInStartTime = 0x1e4; // float
		constexpr auto FadeInStopTime = 0x1e8; // float
		constexpr auto FadeInTargetVolume = 0x1ec; // float
		constexpr auto FadeOutStartTime = 0x1f0; // float
		constexpr auto FadeOutStopTime = 0x1f4; // float
		constexpr auto FadeOutTargetVolume = 0x1f8; // float
		constexpr auto AdjustVolumeStartTime = 0x1fc; // float
		constexpr auto AdjustVolumeStopTime = 0x200; // float
		constexpr auto AdjustVolumeTargetVolume = 0x204; // float
		constexpr auto CurrAdjustVolumeTargetVolume = 0x208; // float
		constexpr auto CurrentNotifyBufferFinishedHook = 0x210; // ObjectProperty
		constexpr auto CurrentLocation = 0x218; // FVector
		constexpr auto CurrentRotation = 0x224; // FRotator
		constexpr auto CurrentVelocity = 0x230; // FVector
		constexpr auto CurrentVolume = 0x23c; // float
		constexpr auto CurrentPitch = 0x240; // float
		constexpr auto CurrentHighFrequencyGain = 0x244; // float
		constexpr auto CurrentUseSpatialization = 0x248; // int32_t
		constexpr auto CurrentNotifyOnLoop = 0x24c; // int32_t
		constexpr auto OmniRadius = 0x250; // float
		constexpr auto CurrentVolumeMultiplier = 0x254; // float
		constexpr auto CurrentPitchMultiplier = 0x258; // float
		constexpr auto CurrentHighFrequencyGainMultiplier = 0x25c; // float
		constexpr auto CurrentVoiceCenterChannelVolume = 0x260; // float
		constexpr auto CurrentRadioFilterVolume = 0x264; // float
		constexpr auto CurrentRadioFilterVolumeThreshold = 0x268; // float
		constexpr auto LastUpdateTime = 0x270; // FDouble
		constexpr auto SourceInteriorVolume = 0x278; // float
		constexpr auto SourceInteriorLPF = 0x27c; // float
		constexpr auto CurrentInteriorVolume = 0x280; // float
		constexpr auto CurrentInteriorLPF = 0x284; // float
		constexpr auto LastLocation = 0x288; // FVector
		constexpr auto LastInteriorSettings = 0x294; // FInteriorSettings
		constexpr auto LastReverbVolumeIndex = 0x2b8; // int32_t
		constexpr auto VolumeMultiplier = 0x2bc; // float
		constexpr auto PitchMultiplier = 0x2c0; // float
		constexpr auto HighFrequencyGainMultiplier = 0x2c4; // float
		constexpr auto OcclusionCheckInterval = 0x2c8; // float
		constexpr auto LastOcclusionCheckTime = 0x2cc; // float
		constexpr auto PreviewSoundRadius = 0x2d0; // ComponentProperty
		constexpr auto __OnAudioFinished__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __OnQueueSubtitles__Delegate = 0x2f0; // DelegateProperty
	}

	namespace n_UMcpClashMobManager {
		constexpr auto ChallengeListUrl = 0x118; // FString
		constexpr auto ChallengeStatusUrl = 0x128; // FString
		constexpr auto ChallengeMultiStatusUrl = 0x138; // FString
		constexpr auto AcceptChallengeUrl = 0x148; // FString
		constexpr auto UpdateChallengeProgressUrl = 0x158; // FString
		constexpr auto UpdateRewardProgressUrl = 0x168; // FString
		constexpr auto HTTPRequestChallengeList = 0x178; // ObjectProperty
		constexpr auto ChallengeUserRequests = 0x180; // TArray<FMcpChallengeUserRequest>
		constexpr auto ChallengeEvents = 0x190; // TArray<FMcpClashMobChallengeEvent>
		constexpr auto ChallengeUserStatus = 0x1a0; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto TempChallengeUserStatus = 0x1b0; // FMcpClashMobChallengeUserStatus
		constexpr auto TempChallengeUserStatusArray = 0x240; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto FileCache = 0x250; // TScriptInterface<Class>
		constexpr auto FileDownloader = 0x260; // ObjectProperty
	}

	namespace n_ACarThumbnailActor_TA {
		constexpr auto Mesh = 0x268; // ComponentProperty
	}

	namespace n_URPC_ProductsTradePlayerStatus_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TradeId = 0x130; // FGuid
		constexpr auto bIsComplete = 0x140; // uint32_t : 1
		constexpr auto ProductData = 0x148; // TArray<FOnlineProductData>
		constexpr auto CurrencyData = 0x158; // TArray<FCurrency>
		constexpr auto WalletCurrencies = 0x168; // TArray<FCurrency>
	}

	namespace n_UNavMeshPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x78; // float
		constexpr auto MinDistance = 0x7c; // float
		constexpr auto bSoft = 0x80; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x80; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_ULinkedAccountMap_X {
		constexpr auto PlayerMap = 0x70; // FMap_Mirror
	}

	namespace n_UDistributionVectorConstantCurveParticleParameter {
		constexpr auto Points = 0xa0; // TArray<FCurveParameterPoint>
		constexpr auto InterpMethod = 0xb0; // EInterpMethodType
		constexpr auto bIsEditingCurve = 0xb4; // uint32_t : 1
	}

	namespace n_UPartyMessage_Loadout_TA {
		constexpr auto MemberLoadout = 0xa8; // FPartyMemberLoadout
	}

	namespace n_U__TAsyncResult__PrivilegeCheck_X__NotifyOnResultComplete_BB4B9CDF45DCF89659C7F18F8A07FC5A {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__GFxData_Shops_TA__OnCheckForPurchaseWarning_CCDE624E45F0F0D7EC6A1493CA7AE30B {
		constexpr auto ShopID = 0x60; // int32_t
	}

	namespace n_ASceneCaptureCubeMapActor {
		constexpr auto StaticMesh = 0x270; // ComponentProperty
		constexpr auto CubeMaterialInst = 0x278; // ObjectProperty
	}

	namespace n_UCameraState_Freecam_TA {
		constexpr auto ViewOffset_Near = 0xa8; // FCameraOrientation
		constexpr auto ViewOffset_Far = 0xd4; // FCameraOrientation
		constexpr auto ViewOffset = 0x100; // FCameraOrientation
	}

	namespace n_UEngineAudioBlowoffComponent_TA {
		constexpr auto BlowoffSound = 0xa8; // ObjectProperty
		constexpr auto BlowoffThrottleTime = 0xb0; // float
		constexpr auto Car = 0xb8; // ObjectProperty
		constexpr auto FullThrottleTime = 0xc0; // float
	}

	namespace n_U__Team_TA__OnPlayerMarkedAsIdleBanned_1F71620A46EEA8BEFF83C89610CB9D1A {
		constexpr auto IdlePlayer = 0x60; // ObjectProperty
	}

	namespace n_UFaceItClientReservationMessage_X {
		constexpr auto Reservation = 0x60; // FServerReservationData
		constexpr auto MatchInfo = 0xe0; // FFaceItMatchInfo
		constexpr auto Expiration = 0x160; // QWordProperty
		constexpr auto OfflineTimeToLiveSeconds = 0x168; // int32_t
	}

	namespace n_ULightCurveType_TA {
		constexpr auto ParameterValue = 0x60; // int32_t
	}

	namespace n_UOnlineSubsystemEOS {
		constexpr auto PlayerInterfaceEOS = 0x370; // ObjectProperty
		constexpr auto GameInterfaceEOS = 0x378; // ObjectProperty
		constexpr auto StatsInterfaceEOS = 0x380; // ObjectProperty
		constexpr auto AuthInterfaceEOS = 0x388; // ObjectProperty
		constexpr auto PersistentAuthInterfaceEOS = 0x390; // ObjectProperty
		constexpr auto FriendsInterfaceEOS = 0x398; // ObjectProperty
		constexpr auto UserCloudFileInterfaceEOS = 0x3a0; // ObjectProperty
		constexpr auto VoiceInterfaceEOS = 0x3a8; // ObjectProperty
		constexpr auto SpeechRecognitionCompleteDelegates = 0x3b0; // TArray<DelegateProperty>
		constexpr auto AuthHandle = 0x3c0; // FPointer
		constexpr auto FriendsHandle = 0x3c8; // FPointer
		constexpr auto UserInfoHandle = 0x3d0; // FPointer
		constexpr auto PresenceHandle = 0x3d8; // FPointer
		constexpr auto ConnectHandle = 0x3e0; // FPointer
		constexpr auto SessionsHandle = 0x3e8; // FPointer
		constexpr auto PDSHandle = 0x3f0; // FPointer
		constexpr auto StatsHandle = 0x3f8; // FPointer
		constexpr auto AchievementsHandle = 0x400; // FPointer
		constexpr auto EcomHandle = 0x408; // FPointer
		constexpr auto UIHandle = 0x410; // FPointer
		constexpr auto RTCHandle = 0x418; // FPointer
		constexpr auto RTCAudioHandle = 0x420; // FPointer
		constexpr auto RTCAdminHandle = 0x428; // FPointer
		constexpr auto GameClipsHandle = 0x430; // FPointer
		constexpr auto UnlockedDLC = 0x438; // TArray<FName>
		constexpr auto UnlockedDLCDelegates = 0x448; // TArray<DelegateProperty>
		constexpr auto ExternalUIChangeDelegates = 0x458; // TArray<DelegateProperty>
		constexpr auto __OnMicroTxnResponse__Delegate = 0x468; // DelegateProperty
		constexpr auto __EventGetAppPriceInfoComplete__Delegate = 0x480; // DelegateProperty
		constexpr auto __OnPlayerTalking__Delegate = 0x498; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x4b0; // DelegateProperty
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x4c8; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0x4e0; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x4f8; // DelegateProperty
		constexpr auto __OnLinkStatusChange__Delegate = 0x510; // DelegateProperty
		constexpr auto __OnExternalUIChange__Delegate = 0x528; // DelegateProperty
		constexpr auto __OnControllerChange__Delegate = 0x540; // DelegateProperty
		constexpr auto __OnConnectionStatusChange__Delegate = 0x558; // DelegateProperty
		constexpr auto __OnStorageDeviceChange__Delegate = 0x570; // DelegateProperty
		constexpr auto __OnCreateOnlineAccountCompleted__Delegate = 0x588; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x5a0; // DelegateProperty
		constexpr auto __OnCloseKickPlayerDialog__Delegate = 0x5b8; // DelegateProperty
		constexpr auto __OnCommerceDialogClosed__Delegate = 0x5d0; // DelegateProperty
		constexpr auto __OnErrorDialogClosed__Delegate = 0x5e8; // DelegateProperty
		constexpr auto __OnUnlockedDLCChange__Delegate = 0x600; // DelegateProperty
		constexpr auto __OnStorePurchaseCompleteDelegate__Delegate = 0x618; // DelegateProperty
		constexpr auto __OnUserOrphaned__Delegate = 0x630; // DelegateProperty
		constexpr auto __OnUserRestored__Delegate = 0x648; // DelegateProperty
	}

	namespace n_UCameraStateSelector_RandomSequence_TA {
		constexpr auto bReshuffleOnActive = 0x90; // uint32_t : 1
	}

	namespace n_UAnimNotify_ForceField {
		constexpr auto ForceFieldComponent = 0x68; // ComponentProperty
		constexpr auto bAttach = 0x70; // uint32_t : 1
		constexpr auto SocketName = 0x74; // FName
		constexpr auto BoneName = 0x7c; // FName
	}

	namespace n_UAkDialogueEvent {
		constexpr auto Arguments = 0x60; // TArray<ObjectProperty>
	}

	namespace n_U__StayAsPartySystem_TA__IsOneParty_495FEDDF443BE8FE0AE8C6BFEBB4D482 {
		constexpr auto PRIs = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0xc0; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0xd0; // FGuid
	}

	namespace n_UParticleModuleAttractorBoneSocket {
		constexpr auto FalloffType = 0x70; // EBoneSocketAttractorFalloffType
		constexpr auto DestinationType = 0x71; // ELocationBoneSocketDestination
		constexpr auto SelectionMethod = 0x72; // ELocationBoneSocketDestSelectionMethod
		constexpr auto bParticleLifeRelative = 0x74; // uint32_t : 1
		constexpr auto bAttractAlongLengthOfBone = 0x74; // uint32_t : 1
		constexpr auto FalloffExponent = 0x78; // FRawDistributionFloat
		constexpr auto Range = 0xa0; // FRawDistributionFloat
		constexpr auto Strength = 0xc8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xf0; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x118; // FRawDistributionFloat
		constexpr auto DragRadius = 0x140; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x168; // FVector
		constexpr auto SourceLocations = 0x178; // TArray<FAttractLocationBoneSocketInfo>
		constexpr auto SkelMeshActorParamName = 0x188; // FName
		constexpr auto EditorSkelMesh = 0x190; // ObjectProperty
	}

	namespace n_UCameraState_CustomFocus_TA {
		constexpr auto RotationRate = 0x1c0; // float
		constexpr auto PitchScale = 0x1c4; // float
		constexpr auto PitchFocusZFactor = 0x1c8; // float
		constexpr auto PitchExtentMin = 0x1cc; // float
		constexpr auto PitchExtentMax = 0x1d0; // float
		constexpr auto FocusTarget = 0x1d8; // ObjectProperty
	}

	namespace n_UGFxData_LanServer_TA {
		constexpr auto SanitizedOwnerName = 0x98; // FString
		constexpr auto OwnerAvatar = 0xa8; // ObjectProperty
		constexpr auto OwnerPlatform = 0xb0; // FString
		constexpr auto LocalizedMapName = 0xc0; // FString
		constexpr auto SanitizedServerName = 0xd0; // FString
		constexpr auto ServerId = 0xe0; // FString
		constexpr auto ServerBuildID = 0xf0; // int32_t
		constexpr auto OnlineGame = 0xf8; // ObjectProperty
		constexpr auto OnlineSubsystem = 0x100; // ObjectProperty
		constexpr auto WorldFilter = 0x108; // ObjectProperty
		constexpr auto LanBrowser = 0x110; // ObjectProperty
	}

	namespace n_URPC_TrainingEditor_UpdateTrainingData_TA {
		constexpr auto TrainingData = 0xe8; // ObjectProperty
	}

	namespace n_ATcpLink {
		constexpr auto LinkState = 0x298; // ELinkState
		constexpr auto RemoteAddr = 0x29c; // FIpAddr
		constexpr auto AcceptClass = 0x2b0; // FNone*
		constexpr auto SendFIFO = 0x2b8; // TArray<char>
		constexpr auto RecvBuf = 0x2c8; // FString
	}

	namespace n_UMapSet_TA {
		constexpr auto IncludeSets = 0x60; // TArray<ObjectProperty>
		constexpr auto ExcludeSets = 0x70; // TArray<ObjectProperty>
		constexpr auto IncludeMaps = 0x80; // TArray<ObjectProperty>
		constexpr auto ExcludeMaps = 0x90; // TArray<ObjectProperty>
		constexpr auto Maps = 0xa0; // TArray<ObjectProperty>
		constexpr auto Maps_Pristine = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_USkelControlRotationSpring_TA {
		constexpr auto RotationMin = 0x130; // FRotator
		constexpr auto RotationMax = 0x13c; // FRotator
		constexpr auto SpringToPitch = 0x148; // FVector
		constexpr auto SpringToYaw = 0x154; // FVector
		constexpr auto SpringToRoll = 0x160; // FVector
		constexpr auto SpringComponent = 0x170; // ComponentProperty
		constexpr auto TestSpringForce = 0x178; // FVector
		constexpr auto TestSpringDelay = 0x184; // float
		constexpr auto LastTestSpringTime = 0x188; // float
	}

	namespace n_UProductAttribute_TeamEditionUpload_TA {
		constexpr auto SupportedTeamEditions = 0x80; // TArray<int32_t>
	}

	namespace n_UAutoNavMeshPathObstacleUnregister {
		constexpr auto PathObstacleRef = 0x60; // TScriptInterface<Class>
	}

	namespace n_USeqAct_MITV_Activate {
		constexpr auto DurationOfMITV = 0x160; // float
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto TransformSourceType = 0xf8; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0xf9; // EMaterialPositionTransform
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x98; // FParticleRandomSeedInfo
	}

	namespace n_UNavMeshPath_SameCoverLink {
		constexpr auto TestLink = 0x78; // ObjectProperty
	}

	namespace n_UGFxSoundPack_X {
		constexpr auto ExportClassName = 0x60; // FString
		constexpr auto Sounds = 0x70; // TArray<FSoundPackSoundRef>
		constexpr auto bHasSubtitles = 0x80; // uint32_t : 1
	}

	namespace n_UMatchWinner_TA {
		constexpr auto WinningTeam = 0x60; // ObjectProperty
	}

	namespace n_UMusicTracklistBuildStep_RemoveTrack_TA {
		constexpr auto Source = 0x60; // TScriptInterface<Class>
		constexpr auto TrackToRemove = 0x70; // ObjectProperty
	}

	namespace n_UUIInteraction {
		constexpr auto VfTable_FExec = 0xd0; // FPointer
		constexpr auto VfTable_FGlobalDataStoreClientManager = 0xd8; // FPointer
		constexpr auto VfTable_FCallbackEventDevice = 0xe0; // FPointer
		constexpr auto UIManager = 0xe8; // ObjectProperty
		constexpr auto UIManagerClass = 0xf0; // FNone*
		constexpr auto SceneClientClass = 0xf8; // FNone*
		constexpr auto SceneClient = 0x100; // ObjectProperty
		constexpr auto SupportedDoubleClickKeys = 0x108; // TArray<FName>
		constexpr auto DataStoreManager = 0x118; // ObjectProperty
		constexpr auto bProcessInput = 0x120; // uint32_t : 1
		constexpr auto UIJoystickDeadZone = 0x124; // float
		constexpr auto UIAxisMultiplier = 0x128; // float
		constexpr auto AxisRepeatDelay = 0x12c; // float
		constexpr auto MouseButtonRepeatDelay = 0x130; // float
		constexpr auto DoubleClickTriggerSeconds = 0x134; // float
		constexpr auto DoubleClickPixelTolerance = 0x138; // int32_t
		constexpr auto MouseButtonRepeatInfo = 0x140; // FUIKeyRepeatData
		constexpr auto ConfiguredAxisEmulationDefinitions = 0x150; // TArray<FUIAxisEmulationDefinition>
		constexpr auto AxisEmulationDefinitions = 0x160; // TMap<None, None>
		constexpr auto AxisInputEmulation = 0x1b0; // FUIAxisEmulationData [0x4]
	}

	namespace n_U__OnlineGameDedicatedServer_TA__InitReplayUpload_4DBF2FA74E0F468490268B8D49DF4DE0 {
		constexpr auto RPC = 0x60; // ObjectProperty
		constexpr auto Uploader = 0x68; // ObjectProperty
	}

	namespace n_UGFxData_ContainerDrops_TA {
		constexpr auto ContainerDropList = 0x98; // TArray<FContainerInfo>
		constexpr auto ContainerDropsSet = 0xa8; // ComponentProperty
		constexpr auto GetDropTableTask = 0xb0; // ObjectProperty
		constexpr auto __EventContainersUpdated__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UGFxData_PlayerAvatarPreview_TA {
		constexpr auto AvatarPreviews = 0x98; // TArray<FGFxPlayerAvatarRef>
	}

	namespace n_URPC_GetCrateShop_TA {
		constexpr auto CrateID = 0xe8; // int32_t
		constexpr auto ShopItems = 0xf0; // TArray<FShopItem>
		constexpr auto ShopID = 0x100; // int32_t
	}

	namespace n_URPC_TourGetMatch_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TournamentID = 0x130; // QWordProperty
		constexpr auto Match = 0x138; // FTourMatch
	}

	namespace n_UEngineAudioProfile_TA {
		constexpr auto Gears = 0x70; // TArray<FAudioGear>
		constexpr auto GearSwitchTime = 0x80; // float
		constexpr auto RPMAccelStart = 0x84; // float
		constexpr auto RPMAccelEnd = 0x88; // float
		constexpr auto RPMAccelClutched = 0x8c; // float
		constexpr auto RPMDecelClutched = 0x90; // float
		constexpr auto RPMMaxClutched = 0x94; // float
		constexpr auto RPMAccelFactor = 0x98; // float
		constexpr auto RPMDecelFactor = 0x9c; // float
		constexpr auto RPMAccelBoostStart = 0xa0; // float
		constexpr auto RPMAccelBoostEnd = 0xa4; // float
		constexpr auto RPMShiftUpBoost = 0xa8; // float
		constexpr auto RPMMaxLoad = 0xac; // float
		constexpr auto EngineLoadSmoothFactor = 0xb0; // float
		constexpr auto AirMaxThrottleTime = 0xb4; // float
		constexpr auto RevLimitRPM = 0xb8; // float
		constexpr auto RevLimitRPMDecel = 0xbc; // float
	}

	namespace n_AStatFactoryBase_TA {
		constexpr auto AllStatEvents = 0x268; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_GetProperty {
		constexpr auto PropertyName = 0x160; // FName
	}

	namespace n_U__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_FED4B09E4800F9CBDE16F3B7E1BE82FD {
		constexpr auto Settings = 0x60; // FJoinMatchSettings
	}

	namespace n_UUserBugReportConfig_TA {
		constexpr auto bEnabled = 0x78; // uint32_t : 1
		constexpr auto Categories = 0x80; // TArray<FUserBugReportCategory>
		constexpr auto OnlineCategories = 0x90; // TArray<FUserBugReportCategory>
		constexpr auto MemoryDumpIgnoreClassNames = 0xa0; // TArray<FString>
		constexpr auto MaxDataSizeKilobytes = 0xb0; // int32_t
	}

	namespace n_UFactory {
		constexpr auto Category = 0x60; // FString
		constexpr auto SupportedClass = 0x70; // FNone*
		constexpr auto ContextClass = 0x78; // FNone*
		constexpr auto Description = 0x80; // FString
		constexpr auto Formats = 0x90; // TArray<FString>
		constexpr auto bCreateNew = 0xa0; // uint32_t : 1
		constexpr auto bEditAfterNew = 0xa0; // uint32_t : 1
		constexpr auto bEditorImport = 0xa0; // uint32_t : 1
		constexpr auto bText = 0xa0; // uint32_t : 1
		constexpr auto bAssetNameMatchesPackageName = 0xa0; // uint32_t : 1
		constexpr auto AutoPriority = 0xa4; // int32_t
		constexpr auto ValidGameNames = 0xa8; // TArray<FString>
	}

	namespace n_UAvatarDownloadComponent {
		constexpr auto AvatarDownloadCache = 0x70; // ComponentProperty
		constexpr auto ImageDownloader = 0x78; // ObjectProperty
	}

	namespace n_UInterpTrackCameraShake_TA {
		constexpr auto Shake = 0xe0; // ObjectProperty
		constexpr auto ShakeScale = 0xe8; // float
		constexpr auto PlaySpace = 0xec; // ECameraAnimPlaySpace
		constexpr auto PlaySpaceRotation = 0xf0; // FRotator
	}

	namespace n_U__GFxData_ShopCatalogue_TA__SyncItemImages_84192629495D0EC7FA1917A7F8963201 {
		constexpr auto ShopItemID = 0x60; // int32_t
	}

	namespace n_U__TourService_PsyNet_TA__StartMatchmaking_4EBC773F4B8126436B1A7CA0D82B1DAD {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UBTC_AIPlayerIndex {
		constexpr auto IndexGreaterThan = 0x90; // int32_t
		constexpr auto IndexLessThan = 0x94; // int32_t
		constexpr auto IndexEqualTo = 0x98; // int32_t
	}

	namespace n_UDecalComponent {
		constexpr auto VfTable_IISetParameter = 0x258; // FPointer
		constexpr auto DecalMaterial = 0x260; // ObjectProperty
		constexpr auto Width = 0x268; // float
		constexpr auto Height = 0x26c; // float
		constexpr auto TileX = 0x270; // float
		constexpr auto TileY = 0x274; // float
		constexpr auto OffsetX = 0x278; // float
		constexpr auto OffsetY = 0x27c; // float
		constexpr auto DecalRotation = 0x280; // float
		constexpr auto FieldOfView = 0x284; // float
		constexpr auto NearPlane = 0x288; // float
		constexpr auto FarPlane = 0x28c; // float
		constexpr auto Location = 0x290; // FVector
		constexpr auto Orientation = 0x29c; // FRotator
		constexpr auto HitLocation = 0x2a8; // FVector
		constexpr auto HitNormal = 0x2b4; // FVector
		constexpr auto HitTangent = 0x2c0; // FVector
		constexpr auto HitBinormal = 0x2cc; // FVector
		constexpr auto bNoClip = 0x2d8; // uint32_t : 1
		constexpr auto bStaticDecal = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnBackfaces = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnHidden = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnBSP = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnStaticMeshes = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnSkeletalMeshes = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnTerrain = 0x2d8; // uint32_t : 1
		constexpr auto bProjectOnOwner = 0x2d8; // uint32_t : 1
		constexpr auto bFlipBackfaceDirection = 0x2d8; // uint32_t : 1
		constexpr auto bMovableDecal = 0x2d8; // uint32_t : 1
		constexpr auto bHasBeenAttached = 0x2d8; // uint32_t : 1
		constexpr auto bDecalMaterialSetAtRunTime = 0x2d8; // uint32_t : 1
		constexpr auto HitComponent = 0x2e0; // ComponentProperty
		constexpr auto HitBone = 0x2e8; // FName
		constexpr auto HitNodeIndex = 0x2f0; // int32_t
		constexpr auto HitLevelIndex = 0x2f4; // int32_t
		constexpr auto FracturedStaticMeshComponentIndex = 0x2f8; // int32_t
		constexpr auto HitNodeIndices = 0x300; // TArray<int32_t>
		constexpr auto DecalReceivers = 0x310; // TArray<FDecalReceiver>
		constexpr auto StaticReceivers = 0x320; // TArray<FPointer>
		constexpr auto ReleaseResourcesFence = 0x330; // FPointer
		constexpr auto Planes = 0x338; // TArray<FPlane>
		constexpr auto DepthBias = 0x348; // float
		constexpr auto SlopeScaleDepthBias = 0x34c; // float
		constexpr auto SortOrder = 0x350; // int32_t
		constexpr auto BackfaceAngle = 0x354; // float
		constexpr auto BlendRange = 0x358; // FVector2D
		constexpr auto StreamingDistanceMultiplier = 0x360; // float
		constexpr auto DecalTransform = 0x364; // EDecalTransform
		constexpr auto FilterMode = 0x365; // EFilterMode
		constexpr auto Filter = 0x368; // TArray<ObjectProperty>
		constexpr auto ReceiverImages = 0x378; // TArray<ComponentProperty>
		constexpr auto ParentRelativeLocation = 0x388; // FVector
		constexpr auto ParentRelativeOrientation = 0x394; // FRotator
		constexpr auto ParentRelLocRotMatrix = 0x3a0; // FMatrix
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
		constexpr auto AGreaterThanB = 0x130; // FExpressionInput
		constexpr auto AEqualsB = 0x168; // FExpressionInput
		constexpr auto ALessThanB = 0x1a0; // FExpressionInput
	}

	namespace n_UCheckReservation_X {
		constexpr auto StartDelay = 0x60; // float
		constexpr auto Rate = 0x64; // float
		constexpr auto LastMatchmakingHeartbeatTime = 0x68; // float
		constexpr auto CheckReservationTask = 0x70; // ObjectProperty
		constexpr auto FoundReservationCallback = 0x78; // DelegateProperty
		constexpr auto FoundReservation = 0x90; // FServerReservationData
		constexpr auto Config = 0x110; // ObjectProperty
		constexpr auto ReservationBeacon = 0x118; // ComponentProperty
		constexpr auto __OnStartSearch__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnFoundReservation__Delegate = 0x138; // DelegateProperty
	}

	namespace n_UOnlineGameRegions_TA {
		constexpr auto RegionPingCache = 0x130; // ObjectProperty
	}

	namespace n_U__CrumbTrails_TA__HandleTrailComplete_95B1A3AB4152358189DFDCB82F9965D2 {
		constexpr auto Index = 0x60; // int32_t
	}

	namespace n_UMusicPlayerSave_TA {
		constexpr auto PlaylistsUpdate22_2 = 0xc8; // TArray<FPlaylistState>
		constexpr auto GameplayMusicSetting = 0xd8; // EGameplayMusicSetting
		constexpr auto bPlayMusicInMenu = 0xdc; // uint32_t : 1
		constexpr auto bPlayMusicInTraining = 0xdc; // uint32_t : 1
		constexpr auto bPlayMusicInGame = 0xdc; // uint32_t : 1
		constexpr auto __bPlayMusicInMenu__ChangeNotify = 0xe0; // DelegateProperty
		constexpr auto __bPlayMusicInTraining__ChangeNotify = 0xf8; // DelegateProperty
		constexpr auto __bPlayMusicInGame__ChangeNotify = 0x110; // DelegateProperty
	}

	namespace n_UEngineAudioRevSimLimiter_TA {
		constexpr auto LimitTime = 0x70; // float
		constexpr auto SideSpeedThresh = 0x74; // float
		constexpr auto DecelScale = 0x78; // float
		constexpr auto AirMaxThrottleTime = 0x7c; // float
		constexpr auto TimeRemaining = 0x80; // float
		constexpr auto TimeActiveInAir = 0x84; // float
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0xe8; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xf8; // uint32_t : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xf8; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xf8; // uint32_t : 1
		constexpr auto bTreatAsDialogue = 0xf8; // uint32_t : 1
	}

	namespace n_UOnlineGameServerBrowser_X {
		constexpr auto PreferredRegion = 0x98; // FString
		constexpr auto Filter = 0xa8; // FCustomMatchSettings
		constexpr auto StartSearchFailString = 0x138; // FString
		constexpr auto NoResultsFound = 0x148; // FString
		constexpr auto NotLoggedInToPsynet = 0x158; // FString
		constexpr auto __EventSearchComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventSearchError__Delegate = 0x180; // DelegateProperty
		constexpr auto __EventBrowserError__Delegate = 0x198; // DelegateProperty
		constexpr auto __EventSearchCompleteReservation__Delegate = 0x1b0; // DelegateProperty
	}

	namespace n_URPC_MatchComplete_TA {
		constexpr auto PlaylistId = 0xe8; // int32_t
		constexpr auto MatchGUID = 0xf0; // FString
		constexpr auto MatchData = 0x100; // TArray<FOnlinePlayerMatchData>
		constexpr auto AppSessionID = 0x110; // FGuid
		constexpr auto LevelSessionID = 0x120; // FGuid
		constexpr auto MaxTeamSize = 0x130; // int32_t
		constexpr auto MatchWinner = 0x134; // int32_t
		constexpr auto MapName = 0x138; // FString
		constexpr auto MatchType = 0x148; // FName
		constexpr auto TeamScores = 0x150; // TArray<int32_t>
		constexpr auto Drops = 0x160; // TArray<FOnlineProductDrop>
		constexpr auto StatsToSend = 0x170; // TArray<FName>
	}

	namespace n_AGFxHUD_Training_TA {
		constexpr auto TrainingData = 0x570; // ObjectProperty
	}

	namespace n_UMorphTargetSet {
		constexpr auto Targets = 0x60; // TArray<ObjectProperty>
		constexpr auto BaseSkelMesh = 0x70; // ObjectProperty
		constexpr auto RawWedgePointIndices = 0x78; // FArray_Mirror
	}

	namespace n_UBugReport_TA {
		constexpr auto Replay = 0x1b8; // ObjectProperty
	}

	namespace n_UOnlineSubsystemCommonImpl {
		constexpr auto VoiceEngine = 0x310; // FPointer
		constexpr auto MaxLocalTalkers = 0x318; // int32_t
		constexpr auto MaxRemoteTalkers = 0x31c; // int32_t
		constexpr auto bIsUsingSpeechRecognition = 0x320; // uint32_t : 1
		constexpr auto GameInterfaceImpl = 0x328; // ObjectProperty
		constexpr auto AuthInterfaceImpl = 0x330; // ObjectProperty
		constexpr auto PurchaseInterfaceImpl = 0x338; // ObjectProperty
		constexpr auto __OnSanitizeStringComplete__Delegate = 0x340; // DelegateProperty
		constexpr auto __OnPlayerCountryRetrieved__Delegate = 0x358; // DelegateProperty
	}

	namespace n_UDOFBloomMotionBlurEffect {
		constexpr auto MaxVelocity = 0xe0; // float
		constexpr auto MotionBlurAmount = 0xe4; // float
		constexpr auto FullMotionBlur = 0xe8; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0xec; // float
		constexpr auto CameraTranslationThreshold = 0xf0; // float
	}

	namespace n_USeqAct_ParticleEventGenerator {
		constexpr auto bEnabled = 0x160; // uint32_t : 1
		constexpr auto bUseEmitterLocation = 0x160; // uint32_t : 1
		constexpr auto Instigator = 0x168; // ObjectProperty
		constexpr auto EventNames = 0x170; // TArray<FString>
		constexpr auto EventTime = 0x180; // float
		constexpr auto EventLocation = 0x184; // FVector
		constexpr auto EventDirection = 0x190; // FVector
		constexpr auto EventVelocity = 0x19c; // FVector
		constexpr auto EventNormal = 0x1a8; // FVector
	}

	namespace n_URPC_PartyKickMember_X {
		constexpr auto Members = 0xf8; // TArray<FString>
		constexpr auto KickReason = 0x108; // ELobbyKickReason
	}

	namespace n_UActorFactoryDecal {
		constexpr auto DecalMaterial = 0xa0; // ObjectProperty
	}

	namespace n_UEngineShare_TA {
		constexpr auto bEnableClientPrediction = 0x180; // uint32_t : 1
		constexpr auto bClientPhysicsUpdate = 0x180; // uint32_t : 1
		constexpr auto bDisableClientCorrections = 0x180; // uint32_t : 1
		constexpr auto bRunningPhysicsFrame = 0x180; // uint32_t : 1
		constexpr auto bDebugClientCorrections = 0x180; // uint32_t : 1
		constexpr auto bForceClientCorrection = 0x180; // uint32_t : 1
		constexpr auto ReplayManager = 0x188; // ObjectProperty
		constexpr auto AdManager = 0x190; // ObjectProperty
		constexpr auto OnlineProductStore = 0x198; // ComponentProperty
		constexpr auto PhysicsFramerate = 0x1a0; // float
		constexpr auto MaxPhysicsSubsteps = 0x1a4; // int32_t
		constexpr auto MaxUploadedClientFrames = 0x1a8; // int32_t
		constexpr auto MaxClientReplayFrames = 0x1ac; // int32_t
		constexpr auto PhysicsFrame = 0x1b0; // int32_t
		constexpr auto RenderAlpha = 0x1b4; // float
		constexpr auto ReplicatedPhysicsFrame = 0x1b8; // int32_t
		constexpr auto DirtyPhysicsFrame = 0x1bc; // int32_t
		constexpr auto ForceCorrectionFrames = 0x1c0; // int32_t
		constexpr auto TickNotifies = 0x1c8; // TArray<TScriptInterface<Class>>
		constexpr auto TickNotifyIndex = 0x1d8; // int32_t
		constexpr auto ShellArchetypePath = 0x1e0; // FString
		constexpr auto SystemSettingsManager = 0x1f0; // ObjectProperty
		constexpr auto LastBugReportTime = 0x1f8; // float
		constexpr auto DebugClientCorrectionStartTime = 0x1fc; // float
		constexpr auto DebugClientCorrectionCount = 0x200; // int32_t
		constexpr auto StatGraphs = 0x208; // ComponentProperty
		constexpr auto PhysicsConfig = 0x210; // ObjectProperty
		constexpr auto InputBuffers = 0x218; // TArray<ObjectProperty>
		constexpr auto LastPhysicsDeltaTimeScale = 0x228; // float
		constexpr auto __EventPostPhysicsStep__Delegate = 0x230; // DelegateProperty
		constexpr auto __EventPreAsyncTick__Delegate = 0x248; // DelegateProperty
	}

	namespace n_UProductThumbnailAsset_TA {
		constexpr auto Thumbnail = 0x60; // ObjectProperty
		constexpr auto ColorMaskBackground = 0x68; // ObjectProperty
		constexpr auto ThumbnailColorMask = 0x70; // ObjectProperty
	}

	namespace n_UGFxData_MultiItemDrops_TA {
		constexpr auto ActiveGroup = 0x98; // ObjectProperty
		constexpr auto PendingGroups = 0xa0; // TArray<ObjectProperty>
		constexpr auto GroupsRemaining = 0xb0; // int32_t
		constexpr auto DropTableName = 0xb8; // FString
		constexpr auto Wallet = 0xc8; // ObjectProperty
		constexpr auto RewardDrops = 0xd0; // TArray<FOnlineXPReward>
		constexpr auto DropGroupType_ALL = 0xe0; // FName
	}

	namespace n_U__GFxHUD_TA__GetVoteBySubject_E87C05F143208EAFBF4A5783C64F2DAF {
		constexpr auto VoteSubject = 0x60; // EVoteSubject
	}

	namespace n_UTourGameUpdateDispatcher_TA {
		constexpr auto MatchSeries = 0x60; // ObjectProperty
		constexpr auto Reservations = 0x68; // ObjectProperty
		constexpr auto MatchGUID = 0x70; // FString
		constexpr auto GameServerID = 0x80; // QWordProperty
		constexpr auto TournamentID = 0x88; // QWordProperty
		constexpr auto MatchID = 0x90; // int32_t
		constexpr auto GameNum = 0x94; // int32_t
		constexpr auto TeamIDs = 0x98; // TArray<QWordProperty>
		constexpr auto GameData = 0xa8; // FTourMatchGame
		constexpr auto ReservedPlayerIDs = 0xc0; // TArray<FUniqueNetId>
		constexpr auto SeriesWinningTeamID = 0xd0; // QWordProperty
		constexpr auto PsyNetTeamIdOrder = 0xd8; // TArray<QWordProperty>
		constexpr auto GameUpdate = 0xe8; // ObjectProperty
		constexpr auto InactiveGameTimeValue = 0xf0; // int32_t
		constexpr auto __EventUpdateError__Delegate = 0xf8; // DelegateProperty
		constexpr auto __GameData__ChangeNotify = 0x110; // DelegateProperty
	}

	namespace n_AInterpActor {
		constexpr auto bShouldSaveForCheckpoint = 0x2c8; // uint32_t : 1
		constexpr auto bMonitorMover = 0x2c8; // uint32_t : 1
		constexpr auto bMonitorZVelocity = 0x2c8; // uint32_t : 1
		constexpr auto bContinueOnEncroachPhysicsObject = 0x2c8; // uint32_t : 1
		constexpr auto bStopOnEncroach = 0x2c8; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x2c8; // uint32_t : 1
		constexpr auto bIsLift = 0x2c8; // uint32_t : 1
		constexpr auto MyMarker = 0x2d0; // ObjectProperty
		constexpr auto MaxZVelocity = 0x2d8; // float
		constexpr auto StayOpenTime = 0x2dc; // float
		constexpr auto OpenSound = 0x2e0; // ObjectProperty
		constexpr auto OpeningAmbientSound = 0x2e8; // ObjectProperty
		constexpr auto OpenedSound = 0x2f0; // ObjectProperty
		constexpr auto CloseSound = 0x2f8; // ObjectProperty
		constexpr auto ClosingAmbientSound = 0x300; // ObjectProperty
		constexpr auto ClosedSound = 0x308; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x310; // ComponentProperty
	}

	namespace n_UNetStatGraph_TA {
		constexpr auto PacketsOut = 0x90; // ComponentProperty
		constexpr auto PacketsIn = 0x98; // ComponentProperty
		constexpr auto LostPacketsOut = 0xa0; // ComponentProperty
		constexpr auto LostPacketsIn = 0xa8; // ComponentProperty
		constexpr auto BytesOut = 0xb0; // ComponentProperty
		constexpr auto BytesIn = 0xb8; // ComponentProperty
		constexpr auto Latency = 0xc0; // ComponentProperty
		constexpr auto ExpectedOutPacketRate = 0xc8; // float
		constexpr auto ExpectedInPacketRate = 0xcc; // float
		constexpr auto MaxBytesRate = 0xd0; // float
	}

	namespace n_UGFxData_Matchmaking_TA {
		constexpr auto NoPlaylistSelectedMessage = 0x118; // FString
		constexpr auto NoRegionSelectedMessage = 0x128; // FString
		constexpr auto PartyTooBigMessage = 0x138; // FString
		constexpr auto LeavePenaltyMessage = 0x148; // FString
		constexpr auto MatchmakingBanMessage = 0x158; // FString
		constexpr auto PartySkillTooDistant = 0x168; // FString
		constexpr auto PartyMemberNotOriginalAppOwner = 0x178; // FString
		constexpr auto PartyMemberNotLoggedIn = 0x188; // FString
		constexpr auto Regions = 0x198; // TArray<FGFxRegion>
		constexpr auto TotalPopulation = 0x1a8; // int32_t
		constexpr auto MatchmakingViewTab = 0x1ac; // EMatchmakingViewTab
		constexpr auto bRankedPlaylistsEnabled = 0x1b0; // uint32_t : 1
		constexpr auto bMultiSelectEnabled = 0x1b0; // uint32_t : 1
		constexpr auto SeasonEndDays = 0x1b4; // int32_t
		constexpr auto SeasonEndHours = 0x1b8; // int32_t
		constexpr auto SeasonEndMinutes = 0x1bc; // int32_t
		constexpr auto MatchmakingSave = 0x1c0; // ObjectProperty
		constexpr auto MessageUpdates = 0x1c8; // TArray<FMessageUpdate>
		constexpr auto CurrentMessageUpdateIndex = 0x1d8; // int32_t
		constexpr auto RankedConfig = 0x1e0; // ObjectProperty
		constexpr auto TabFilters = 0x1e8; // ObjectProperty
	}

	namespace n_U__BanSync_TA__GetBanMessageTypes_46A758FD42F3642059F808896F14946A {
		constexpr auto BanType = 0x60; // EBanType
	}

	namespace n_UGFxTourList_TA {
		constexpr auto Shell = 0x70; // ObjectProperty
		constexpr auto TourList = 0x78; // ComponentProperty
		constexpr auto GFxDataClass = 0x80; // FNone*
	}

	namespace n_UGameEventProductAssetCache_TA {
		constexpr auto AssetCache = 0xa8; // ComponentProperty
		constexpr auto PriCache = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_UBTC_TargetNumberSatisfying {
		constexpr auto Targets = 0x90; // ObjectProperty
		constexpr auto TargetsGreaterThan = 0x98; // int32_t
		constexpr auto TargetsLessThan = 0x9c; // int32_t
	}

	namespace n_UCameraState_Lobby_TA {
		constexpr auto bInitDefaultPOV = 0x90; // uint32_t : 1
		constexpr auto TeamSettings = 0x98; // TArray<FCameraSettings>
		constexpr auto FadeInDuration = 0xa8; // float
		constexpr auto DefaultCamera = 0xac; // FCameraOrientation
	}

	namespace n_UGFxData_ConnectionStats_TA {
		constexpr auto ConnectionQualityConfig = 0x98; // ObjectProperty
	}

	namespace n_UGFxData_Freeplay_TA {
		constexpr auto FreeplayCommands = 0x98; // ObjectProperty
	}

	namespace n_UKoalaConfig_TA {
		constexpr auto bIsKoalaActive = 0x78; // uint32_t : 1
		constexpr auto bGoalReplayClippingEnabled = 0x78; // uint32_t : 1
		constexpr auto bGameplayClippingEnabled = 0x78; // uint32_t : 1
	}

	namespace n_UGoal_Hoops_TA {
		constexpr auto Backboard = 0x1c0; // ObjectProperty
		constexpr auto Radius = 0x1c8; // float
		constexpr auto BackboardLocation = 0x1cc; // FVector
		constexpr auto BackboardDirection = 0x1d8; // FVector
	}

	namespace n_UGFxModal_TextInput_TA {
		constexpr auto Callback = 0xc8; // DelegateProperty
	}

	namespace n_UBTC_GameState {
		constexpr auto StateName = 0x90; // FName
	}

	namespace n_URPC_GetSpecialEvents_TA {
		constexpr auto Events = 0xe8; // TArray<FSpecialEventData>
	}

	namespace n_USeqEvent_SequenceActivated {
		constexpr auto InputLabel = 0x180; // FString
	}

	namespace n_UProductEquipProfileSlot_ForcedProduct_TA {
		constexpr auto ForcedProduct = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_Stats_TA__SetupStatData_41BDE8174558185BCBB33F844D178220 {
		constexpr auto EventStat = 0x60; // ObjectProperty
	}

	namespace n_UPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto GeneratedGoal = 0x68; // ObjectProperty
		constexpr auto MaxPathVisits = 0x70; // int32_t
		constexpr auto CacheIdx = 0x74; // int32_t
	}

	namespace n_UOnlineGameInterfaceImpl {
		constexpr auto OwningSubsystem = 0x60; // ObjectProperty
		constexpr auto GameSettings = 0x68; // ObjectProperty
		constexpr auto GameSearch = 0x70; // ObjectProperty
		constexpr auto CreateOnlineGameCompleteDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto UpdateOnlineGameCompleteDelegates = 0x88; // TArray<DelegateProperty>
		constexpr auto DestroyOnlineGameCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto JoinOnlineGameCompleteDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto MigrateOnlineGameCompleteDelegates = 0xb8; // TArray<DelegateProperty>
		constexpr auto JoinMigratedOnlineGameCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto RecalculateSkillRatingCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto StartOnlineGameCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto EndOnlineGameCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto FindOnlineGamesCompleteDelegates = 0x108; // TArray<DelegateProperty>
		constexpr auto CancelFindOnlineGamesCompleteDelegates = 0x118; // TArray<DelegateProperty>
		constexpr auto LanBeaconState = 0x128; // ELanBeaconState
		constexpr auto LanNonce = 0x129; // char [0x8]
		constexpr auto LanAnnouncePort = 0x134; // int32_t
		constexpr auto LanGameUniqueId = 0x138; // int32_t
		constexpr auto LanPacketPlatformMask = 0x13c; // int32_t
		constexpr auto LanQueryTimeLeft = 0x140; // float
		constexpr auto LanQueryTimeout = 0x144; // float
		constexpr auto LanBeacon = 0x148; // FPointer
		constexpr auto SessionInfo = 0x150; // FPointer
		constexpr auto GameInviteAcceptedDelegates = 0x158; // TArray<DelegateProperty>
		constexpr auto __OnFindOnlineGamesComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnCreateOnlineGameComplete__Delegate = 0x180; // DelegateProperty
		constexpr auto __OnUpdateOnlineGameComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnDestroyOnlineGameComplete__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __OnCancelFindOnlineGamesComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnJoinOnlineGameComplete__Delegate = 0x1e0; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x210; // DelegateProperty
		constexpr auto __OnStartOnlineGameComplete__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnEndOnlineGameComplete__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnArbitrationRegistrationComplete__Delegate = 0x258; // DelegateProperty
		constexpr auto __OnGameInviteAccepted__Delegate = 0x270; // DelegateProperty
		constexpr auto __OnRecalculateSkillRatingComplete__Delegate = 0x288; // DelegateProperty
		constexpr auto __OnMigrateOnlineGameComplete__Delegate = 0x2a0; // DelegateProperty
		constexpr auto __OnJoinMigratedOnlineGameComplete__Delegate = 0x2b8; // DelegateProperty
		constexpr auto __OnQosStatusChanged__Delegate = 0x2d0; // DelegateProperty
		constexpr auto __EventReportMatchmakingInfo__Delegate = 0x2e8; // DelegateProperty
		constexpr auto __OnGamePlayersChanged__Delegate = 0x300; // DelegateProperty
	}

	namespace n_UCertifiedStat_TA {
		constexpr auto StatClass = 0x60; // FNone*
		constexpr auto RankThresholds = 0x68; // TArray<int32_t>
	}

	namespace n_UVanityQuery_TA {
		constexpr auto MaxNumberQueriesAllowed = 0x70; // int32_t
		constexpr auto ActiveQueries = 0x78; // TArray<FVanityQuerySet>
		constexpr auto QueuedRequests = 0x88; // TArray<FVanityQueryRequest>
		constexpr auto __VanitiesUpdated__Delegate = 0x98; // DelegateProperty
		constexpr auto __CompleteRequest__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_URPC_ReportPlayer_TA {
		constexpr auto Reports = 0xe8; // TArray<FReportedPlayerInfo>
		constexpr auto GameID = 0xf8; // FString
	}

	namespace n_UPsyNetService_CurrencyAdded_TA {
		constexpr auto CurrencyID = 0x90; // int32_t
		constexpr auto Amount = 0x94; // int32_t
	}

	namespace n_U__ProductLoader_TA__GetAssetBySlot_57CEB8E048DD9C26A54F2BB192810CD8 {
		constexpr auto Slot = 0x60; // ObjectProperty
	}

	namespace n_UParticleModuleWind_X {
		constexpr auto StrengthScaleOverLife = 0x70; // FRawDistributionFloat
		constexpr auto AccelerationOverLife = 0x98; // FRawDistributionFloat
	}

	namespace n_U__OnlineGameDedicatedServer_TA__HandleVoiceTokenCacheError_98616A424C766F1D47FBDD802133BD4E {
		constexpr auto RequestedPlayers = 0x60; // TArray<FUniqueNetId>
	}

	namespace n_UUpdateDistanceDrivenTimer_TA {
		constexpr auto KMDriven = 0x60; // int32_t
	}

	namespace n_U__OnlinePlayerFriends_X__DownloadBlockedList_F5772128471BB412EE4D8AA567080375 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_USeqAct_Teleport {
		constexpr auto bUpdateRotation = 0x160; // uint32_t : 1
		constexpr auto bCheckOverlap = 0x160; // uint32_t : 1
		constexpr auto TeleportDistance = 0x164; // float
		constexpr auto TeleportVolumes = 0x168; // TArray<ObjectProperty>
	}

	namespace n_UPsyTagCheckResult_X {
		constexpr auto PsyTag = 0x60; // FPsyTag
		constexpr auto bValid = 0x78; // uint32_t : 1
		constexpr auto ErrorMessage = 0x80; // FString
	}

	namespace n_UBanSave_TA {
		constexpr auto bViewedLastChanceModal = 0xc8; // uint32_t : 1
		constexpr auto __bViewedLastChanceModal__ChangeNotify = 0xd0; // DelegateProperty
	}

	namespace n_UNxForceFieldGenericComponent {
		constexpr auto RoughExtentX = 0x2c8; // float
		constexpr auto RoughExtentY = 0x2cc; // float
		constexpr auto RoughExtentZ = 0x2d0; // float
		constexpr auto Coordinates = 0x2d4; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2d8; // FVector
		constexpr auto PositionMultiplierX = 0x2e4; // FVector
		constexpr auto PositionMultiplierY = 0x2f0; // FVector
		constexpr auto PositionMultiplierZ = 0x2fc; // FVector
		constexpr auto PositionTarget = 0x308; // FVector
		constexpr auto VelocityMultiplierX = 0x314; // FVector
		constexpr auto VelocityMultiplierY = 0x320; // FVector
		constexpr auto VelocityMultiplierZ = 0x32c; // FVector
		constexpr auto VelocityTarget = 0x338; // FVector
		constexpr auto Noise = 0x344; // FVector
		constexpr auto FalloffLinear = 0x350; // FVector
		constexpr auto FalloffQuadratic = 0x35c; // FVector
		constexpr auto TorusRadius = 0x368; // float
		constexpr auto Kernel = 0x370; // FPointer
	}

	namespace n_USeqAct_FinishSequence {
		constexpr auto OutputLabel = 0x160; // FString
	}

	namespace n_UGameEvent_Soccar_SubRules_Items_TA {
		constexpr auto DispenserArchetype = 0x60; // ObjectProperty
		constexpr auto StaggerTime = 0x68; // float
		constexpr auto CurrentStaggerByTeam = 0x6c; // float [0x2]
		constexpr auto ItemDispensers = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UTargetFinder_TA {
		constexpr auto __TargetFilter__Delegate = 0x60; // DelegateProperty
	}

	namespace n_U__GFxData_Settings_TA__SetDefaults_C12AA16F4BC783BCB7FB66983E075553 {
		constexpr auto Group = 0x60; // FName
	}

	namespace n_UMutator_GameSpeed_TA {
		constexpr auto GameSpeed = 0x68; // float
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0xc0; // FExpressionInput
	}

	namespace n_UUdpPingBeaconBase_X {
		constexpr auto Beacon = 0x70; // FPointer
		constexpr auto Thread = 0x78; // FPointer
		constexpr auto Runnable = 0x80; // FPointer
		constexpr auto SocketErrorLogDelaySeconds = 0x88; // int32_t
		constexpr auto bThreaded = 0x8c; // uint32_t : 1
		constexpr auto Config = 0x90; // ObjectProperty
	}

	namespace n_UPBRuleNodeQuad {
		constexpr auto Material = 0x98; // ObjectProperty
		constexpr auto RepeatMaxSizeX = 0xa0; // float
		constexpr auto RepeatMaxSizeZ = 0xa4; // float
		constexpr auto QuadLightmapRes = 0xa8; // int32_t
		constexpr auto YOffset = 0xac; // float
		constexpr auto bDisableMaterialRepeat = 0xb0; // uint32_t : 1
	}

	namespace n_UNameplateRenderTarget_TA {
		constexpr auto NameplatesMovie = 0x1b0; // ObjectProperty
	}

	namespace n_U__PerfStatGraph_TA__UpdateGraphRanges_6C6653594F0E5D831F2F47BC8E53A034 {
		constexpr auto TargetMS = 0x60; // float
	}

	namespace n_AGoalVolume_TA {
		constexpr auto Goal = 0x2a8; // ComponentProperty
	}

	namespace n_UPersonaClubData {
		constexpr auto Persona = 0x60; // ObjectProperty
		constexpr auto ClubTagWithName = 0x68; // FString
		constexpr auto ClubID = 0x78; // QWordProperty
	}

	namespace n_URB_ConstraintInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto OwnerComponent = 0x68; // ComponentProperty
		constexpr auto ConstraintIndex = 0x70; // int32_t
		constexpr auto SceneIndex = 0x74; // int32_t
		constexpr auto bInHardware = 0x78; // uint32_t : 1
		constexpr auto bLinearXPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearXVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bAngularSlerpDrive = 0x78; // uint32_t : 1
		constexpr auto bTerminated = 0x78; // uint32_t : 1
		constexpr auto ConstraintData = 0x80; // FPointer
		constexpr auto LinearPositionTarget = 0x88; // FVector
		constexpr auto LinearVelocityTarget = 0x94; // FVector
		constexpr auto LinearDriveSpring = 0xa0; // float
		constexpr auto LinearDriveDamping = 0xa4; // float
		constexpr auto LinearDriveForceLimit = 0xa8; // float
		constexpr auto AngularPositionTarget = 0xb0; // FQuat
		constexpr auto AngularVelocityTarget = 0xc0; // FVector
		constexpr auto AngularDriveSpring = 0xcc; // float
		constexpr auto AngularDriveDamping = 0xd0; // float
		constexpr auto AngularDriveForceLimit = 0xd4; // float
		constexpr auto DummyKinActor = 0xd8; // FPointer
	}

	namespace n_UFreeplayErrors_TA {
		constexpr auto NoCar = 0x80; // ObjectProperty
		constexpr auto NoBall = 0x88; // ObjectProperty
		constexpr auto NoClosestGoal = 0x90; // ObjectProperty
		constexpr auto TeleportFailed = 0x98; // ObjectProperty
	}

	namespace n_U__GFxData_TourEvent_TA__HandleBracketRetrieved_01D38CE643BF4BD86F001683C5BA3DD1 {
		constexpr auto OpponentTeamId = 0x60; // QWordProperty
	}

	namespace n_USeqEvent_RigidBodyCollision {
		constexpr auto MinCollisionVelocity = 0x180; // float
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0xc0; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0xc8; // FExpressionInput
	}

	namespace n_USeqAct_GetSaveData_TA {
		constexpr auto SaveData = 0x160; // ObjectProperty
	}

	namespace n_USeqAct_ControlCarMovement_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
	}

	namespace n_UGFxData_TourDependentMatch_TA {
		constexpr auto Tournaments = 0xe0; // ObjectProperty
	}

	namespace n_USeqEvent_CarTouchBall_TA {
		constexpr auto bOneTouchOnly = 0x180; // uint32_t : 1
	}

	namespace n_U__OnlineGameParty_X__BroadcastAllLocalPlayers_E8211C7E4AA03271C0D268A29349EC0B {
		constexpr auto Primary = 0x60; // FPartyMember
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xc8; // FRawDistributionFloat
	}

	namespace n_USeqAct_AnalyzeMusicFromCsv_TA {
		constexpr auto VfTable_FTickableObject = 0x160; // FPointer
		constexpr auto CsvFileName = 0x168; // FString
		constexpr auto StartOverrideTime = 0x178; // float
		constexpr auto OverrideTime = 0x17c; // float
		constexpr auto bTickable = 0x180; // uint32_t : 1
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x70; // uint32_t : 1
	}

	namespace n_U__GFxData_Clubs_TA__InviteToClub_D03379F04826E8ECBF9B81844BB78041 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_USeqEvent_RemoteEvent {
		constexpr auto EventName = 0x180; // FName
		constexpr auto bStatusIsOk = 0x188; // uint32_t : 1
	}

	namespace n_UDrawQuadComponent {
		constexpr auto Texture = 0x258; // ObjectProperty
		constexpr auto Width = 0x260; // float
		constexpr auto Height = 0x264; // float
	}

	namespace n_AHUD {
		constexpr auto WhiteColor = 0x268; // FColor
		constexpr auto GreenColor = 0x26c; // FColor
		constexpr auto RedColor = 0x270; // FColor
		constexpr auto PlayerOwner = 0x278; // ObjectProperty
		constexpr auto bLostFocusPaused = 0x280; // uint32_t : 1
		constexpr auto bShowHUD = 0x280; // uint32_t : 1
		constexpr auto bShowScores = 0x280; // uint32_t : 1
		constexpr auto bShowDebugInfo = 0x280; // uint32_t : 1
		constexpr auto bShowBadConnectionAlert = 0x280; // uint32_t : 1
		constexpr auto bShowDirectorInfoDebug = 0x280; // uint32_t : 1
		constexpr auto bShowDirectorInfoHUD = 0x280; // uint32_t : 1
		constexpr auto bRenderFullScreen = 0x280; // uint32_t : 1
		constexpr auto bScaleCanvasForCinematicMode = 0x280; // uint32_t : 1
		constexpr auto bShowOverlays = 0x280; // uint32_t : 1
		constexpr auto HudCanvasScale = 0x284; // float
		constexpr auto PostRenderedActors = 0x288; // TArray<ObjectProperty>
		constexpr auto ConsoleMessages = 0x298; // TArray<FConsoleMessage>
		constexpr auto ConsoleColor = 0x2a8; // FColor
		constexpr auto ConsoleMessageCount = 0x2ac; // int32_t
		constexpr auto ConsoleFontSize = 0x2b0; // int32_t
		constexpr auto ConsoleMessagePosX = 0x2b4; // float
		constexpr auto ConsoleMessagePosY = 0x2b8; // float
		constexpr auto Canvas = 0x2c0; // ObjectProperty
		constexpr auto LastHUDRenderTime = 0x2c8; // float
		constexpr auto RenderDelta = 0x2cc; // float
		constexpr auto SizeX = 0x2d0; // float
		constexpr auto SizeY = 0x2d4; // float
		constexpr auto CenterX = 0x2d8; // float
		constexpr auto CenterY = 0x2dc; // float
		constexpr auto RatioX = 0x2e0; // float
		constexpr auto RatioY = 0x2e4; // float
		constexpr auto DebugDisplay = 0x2e8; // TArray<FName>
		constexpr auto KismetTextInfo = 0x2f8; // TArray<FKismetDrawTextInfo>
	}

	namespace n_ANxForceFieldTornado {
		constexpr auto Shape = 0x2c0; // ObjectProperty
		constexpr auto DrawComponent = 0x2c8; // ComponentProperty
		constexpr auto RadialStrength = 0x2d0; // float
		constexpr auto RotationalStrength = 0x2d4; // float
		constexpr auto LiftStrength = 0x2d8; // float
		constexpr auto ForceRadius = 0x2dc; // float
		constexpr auto ForceTopRadius = 0x2e0; // float
		constexpr auto LiftFalloffHeight = 0x2e4; // float
		constexpr auto EscapeVelocity = 0x2e8; // float
		constexpr auto ForceHeight = 0x2ec; // float
		constexpr auto HeightOffset = 0x2f0; // float
		constexpr auto BSpecialRadialForceMode = 0x2f4; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2f8; // float
		constexpr auto Kernel = 0x300; // FPointer
	}

	namespace n_URPC_SetClubOwner_X {
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
	}

	namespace n_ADynamicMeshActor_TA {
		constexpr auto StaticMeshComponent = 0x268; // ComponentProperty
	}

	namespace n_UParticleModuleUberRainDrops {
		constexpr auto LifetimeMin = 0x80; // float
		constexpr auto LifetimeMax = 0x84; // float
		constexpr auto StartSizeMin = 0x88; // FVector
		constexpr auto StartSizeMax = 0x94; // FVector
		constexpr auto StartVelocityMin = 0xa0; // FVector
		constexpr auto StartVelocityMax = 0xac; // FVector
		constexpr auto StartVelocityRadialMin = 0xb8; // float
		constexpr auto StartVelocityRadialMax = 0xbc; // float
		constexpr auto ColorOverLife = 0xc0; // FVector
		constexpr auto AlphaOverLife = 0xcc; // float
		constexpr auto bIsUsingCylinder = 0xd0; // uint32_t : 1
		constexpr auto bPositive_X = 0xd0; // uint32_t : 1
		constexpr auto bPositive_Y = 0xd0; // uint32_t : 1
		constexpr auto bPositive_Z = 0xd0; // uint32_t : 1
		constexpr auto bNegative_X = 0xd0; // uint32_t : 1
		constexpr auto bNegative_Y = 0xd0; // uint32_t : 1
		constexpr auto bNegative_Z = 0xd0; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xd0; // uint32_t : 1
		constexpr auto bVelocity = 0xd0; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xd0; // uint32_t : 1
		constexpr auto PC_VelocityScale = 0xd4; // float
		constexpr auto PC_StartLocation = 0xd8; // FVector
		constexpr auto PC_StartRadius = 0xe4; // float
		constexpr auto PC_StartHeight = 0xe8; // float
		constexpr auto PC_HeightAxis = 0xec; // CylinderHeightAxis
		constexpr auto StartLocationMin = 0xf0; // FVector
		constexpr auto StartLocationMax = 0xfc; // FVector
	}

	namespace n_U__GFxData_Products_TA__RenderProductThumbnail_FE1B64CB4AA8D6EA3BDC2081AF0DDD7B {
		constexpr auto ProductData = 0x60; // ObjectProperty
	}

	namespace n_UPhysicsAsset {
		constexpr auto DefaultSkelMesh = 0x60; // ObjectProperty
		constexpr auto BodySetup = 0x68; // TArray<ObjectProperty>
		constexpr auto BodySetupIndexMap = 0x78; // FMap_Mirror
		constexpr auto BoundsBodies = 0xc8; // TArray<int32_t>
		constexpr auto ConstraintSetup = 0xd8; // TArray<ObjectProperty>
		constexpr auto DefaultInstance = 0xe8; // ObjectProperty
	}

	namespace n_UPlayerInput_TA {
		constexpr auto GamepadLookScale = 0x478; // float
		constexpr auto aTargetSelect = 0x47c; // float
		constexpr auto TargetSelectDeadZone = 0x480; // float
		constexpr auto bTargetSelected = 0x484; // uint32_t : 1
		constexpr auto bIsUsingMouseSteer = 0x484; // uint32_t : 1
		constexpr auto bIsUsingMouseThrottle = 0x484; // uint32_t : 1
		constexpr auto bIsUsingPositiveMouseAirYaw = 0x484; // uint32_t : 1
		constexpr auto bIsUsingNegativeMouseAirYaw = 0x484; // uint32_t : 1
		constexpr auto bIsUsingPositiveMouseAirPitch = 0x484; // uint32_t : 1
		constexpr auto bIsUsingNegativeMouseAirPitch = 0x484; // uint32_t : 1
		constexpr auto bIsUsingPositiveMouseAirRoll = 0x484; // uint32_t : 1
		constexpr auto bIsUsingNegativeMouseAirRoll = 0x484; // uint32_t : 1
		constexpr auto bAllowMouseSwivel = 0x484; // uint32_t : 1
		constexpr auto aPositiveYaw = 0x488; // float
		constexpr auto aNegativeYaw = 0x48c; // float
		constexpr auto aPositivePitch = 0x490; // float
		constexpr auto aNegativePitch = 0x494; // float
		constexpr auto aPositiveRoll = 0x498; // float
		constexpr auto aNegativeRoll = 0x49c; // float
		constexpr auto aLookRoll = 0x4a0; // float
		constexpr auto bRoll = 0x4a4; // char
		constexpr auto bPitch = 0x4a5; // char
		constexpr auto aLookDown = 0x4a8; // float
		constexpr auto aTurnRight = 0x4ac; // float
		constexpr auto aTurnLeft = 0x4b0; // float
		constexpr auto aMouseForward = 0x4b4; // float
		constexpr auto aMouseStrafe = 0x4b8; // float
		constexpr auto aDodgeForward = 0x4bc; // float
		constexpr auto Profile = 0x4c0; // ObjectProperty
	}

	namespace n_USampleHistory_TA {
		constexpr auto RecordSettings = 0x70; // ComponentProperty
		constexpr auto Title = 0x78; // FString
		constexpr auto Summaries = 0x88; // TArray<FGraphSummaryMethod>
		constexpr auto YMin = 0x98; // float
		constexpr auto YMax = 0x9c; // float
		constexpr auto GoodValue = 0xa0; // float
		constexpr auto BadValue = 0xa4; // float
		constexpr auto BaseValue = 0xa8; // float
		constexpr auto Samples = 0xb0; // TArray<FSample>
		constexpr auto SampleIndex = 0xc0; // int32_t
		constexpr auto AccumTime = 0xc4; // float
		constexpr auto PendingSample = 0xc8; // FSample
		constexpr auto bHasPendingSample = 0xd0; // uint32_t : 1
		constexpr auto Drawer = 0xd8; // ObjectProperty
	}

	namespace n_UTradeConfig_TA {
		constexpr auto MinimumLevelToTrade = 0x78; // int32_t
	}

	namespace n_UBTC_BounceHeight {
		constexpr auto HeightLessThan = 0x1d0; // float
		constexpr auto HeightGreaterThan = 0x1d4; // float
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0xc8; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0xd8; // FName
	}

	namespace n_UConsecutiveMatchTracker_TA {
		constexpr auto PlayerMatchData = 0x60; // TArray<FMatchData>
	}

	namespace n_U__UserSettingObserverEventCache_TA__RecordSetting_861F0D8748B2D9855B751E9311EFFED4 {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto Id = 0xa8; // FName
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xc8; // FParticleRandomSeedInfo
	}

	namespace n_USeqAct_AddRemoveFaceFXAnimSet {
		constexpr auto FaceFXAnimSets = 0x160; // TArray<ObjectProperty>
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x268; // ComponentProperty
	}

	namespace n_URPC_Challenge_FTEGroupComplete_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto GroupName = 0x130; // FName
	}

	namespace n_UPsyNetService_AutoTourFound_TA {
		constexpr auto Tournament = 0x90; // ObjectProperty
		constexpr auto Team = 0x98; // FTourTeam
	}

	namespace n_UVersionHelper_TA {
		constexpr auto __VersionDelegate__Delegate = 0x60; // DelegateProperty
		constexpr auto __VersionChangedDelegate__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UNavMeshGoalFilter_OutOfViewFrom {
		constexpr auto GoalPoly = 0x70; // FPointer
		constexpr auto OutOfViewLocation = 0x78; // FVector
	}

	namespace n_U__GFxData_MultiItemDrops_TA__IsProductInGroup_710C2286441948C46AEEAEADB1666DBE {
		constexpr auto InstanceID = 0x60; // FProductInstanceID
	}

	namespace n_UAnimNotify_Trails {
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto SampledSkeletalMesh = 0x70; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x78; // uint32_t : 1
		constexpr auto bPreview = 0x78; // uint32_t : 1
		constexpr auto bPreviewForceExplicit = 0x78; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x78; // uint32_t : 1
		constexpr auto bResampleRequired = 0x78; // uint32_t : 1
		constexpr auto FirstEdgeSocketName = 0x7c; // FName
		constexpr auto ControlPointSocketName = 0x84; // FName
		constexpr auto SecondEdgeSocketName = 0x8c; // FName
		constexpr auto LastStartTime = 0x94; // float
		constexpr auto EndTime = 0x98; // float
		constexpr auto SampleTimeStep = 0x9c; // float
		constexpr auto TrailSampleData = 0xa0; // TArray<FTrailSamplePoint>
		constexpr auto SamplesPerSecond = 0xb0; // float
		constexpr auto TrailSampledData = 0xb8; // TArray<FTrailSample>
		constexpr auto CurrentTime = 0xc8; // float
		constexpr auto TimeStep = 0xcc; // float
		constexpr auto AnimNodeSeq = 0xd0; // ObjectProperty
	}

	namespace n_UCurveEdPresetCurve {
		constexpr auto CurveName = 0x60; // FString
		constexpr auto Points = 0x70; // TArray<FPresetGeneratedPoint>
	}

	namespace n_URPC_GetAntiAddictionData_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto bUnderAge = 0x130; // uint32_t : 1
		constexpr auto bShowMessage = 0x130; // uint32_t : 1
		constexpr auto HoursPlayed = 0x134; // int32_t
	}

	namespace n_UVehiclePartStaticMeshComponent_TA {
		constexpr auto BodySetupOverride = 0x308; // ObjectProperty
	}

	namespace n_UTextureRenderTarget {
		constexpr auto bUpdateImmediate = 0x150; // uint32_t : 1
		constexpr auto bNeedsTwoCopies = 0x150; // uint32_t : 1
		constexpr auto bRenderOnce = 0x150; // uint32_t : 1
		constexpr auto TargetGamma = 0x154; // float
	}

	namespace n_UGameTags_TA {
		constexpr auto Tags = 0x60; // TArray<FKeyValuePair>
		constexpr auto __Tags__ChangeNotify = 0x70; // DelegateProperty
	}

	namespace n_URPC_RecordMetrics_X {
		constexpr auto AppSessionID = 0xe8; // FGuid
		constexpr auto LevelSessionID = 0xf8; // FGuid
		constexpr auto CurrentTimeSeconds = 0x108; // float
		constexpr auto FirstEventIndex = 0x10c; // int32_t
		constexpr auto Events = 0x110; // TArray<FMetricsEvent>
	}

	namespace n_AController {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x268; // FPointer
		constexpr auto ObjectProvider = 0x270; // ComponentProperty
		constexpr auto RegistryGroup = 0x278; // ComponentProperty
		constexpr auto Pawn = 0x280; // ObjectProperty
		constexpr auto PlayerReplicationInfo = 0x288; // ObjectProperty
		constexpr auto PlayerNum = 0x290; // int32_t
		constexpr auto NextController = 0x298; // ObjectProperty
		constexpr auto bIsPlayer = 0x2a0; // uint32_t : 1
		constexpr auto bGodMode = 0x2a0; // uint32_t : 1
		constexpr auto bSoaking = 0x2a0; // uint32_t : 1
		constexpr auto bSlowerZAcquire = 0x2a0; // uint32_t : 1
		constexpr auto bNotifyPostLanded = 0x2a0; // uint32_t : 1
		constexpr auto bNotifyApex = 0x2a0; // uint32_t : 1
		constexpr auto bOverrideSearchStart = 0x2a0; // uint32_t : 1
		constexpr auto bAdvancedTactics = 0x2a0; // uint32_t : 1
		constexpr auto bCanDoSpecial = 0x2a0; // uint32_t : 1
		constexpr auto bAdjusting = 0x2a0; // uint32_t : 1
		constexpr auto bPreparingMove = 0x2a0; // uint32_t : 1
		constexpr auto bForceStrafe = 0x2a0; // uint32_t : 1
		constexpr auto bLOSflag = 0x2a0; // uint32_t : 1
		constexpr auto bSkipExtraLOSChecks = 0x2a0; // uint32_t : 1
		constexpr auto bNotifyFallingHitWall = 0x2a0; // uint32_t : 1
		constexpr auto bEarlyOutOfSighTestsForSameType = 0x2a0; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x2a0; // uint32_t : 1
		constexpr auto bSeeFriendly = 0x2a0; // uint32_t : 1
		constexpr auto bUsingPathLanes = 0x2a0; // uint32_t : 1
		constexpr auto bFire = 0x2a4; // char
		constexpr auto bAltFire = 0x2a5; // char
		constexpr auto MinHitWall = 0x2a8; // float
		constexpr auto NavigationHandleClass = 0x2b0; // FNone*
		constexpr auto NavigationHandle = 0x2b8; // ObjectProperty
		constexpr auto OverrideSearchStart = 0x2c0; // FVector
		constexpr auto MoveTimer = 0x2cc; // float
		constexpr auto MoveTarget = 0x2d0; // ObjectProperty
		constexpr auto DestinationPosition = 0x2d8; // FBasedPosition
		constexpr auto FocalPosition = 0x310; // FBasedPosition
		constexpr auto Focus = 0x348; // ObjectProperty
		constexpr auto GoalList = 0x350; // ObjectProperty [0x4]
		constexpr auto AdjustPosition = 0x370; // FBasedPosition
		constexpr auto StartSpot = 0x3a8; // ObjectProperty
		constexpr auto RouteCache = 0x3b0; // TArray<ObjectProperty>
		constexpr auto CurrentPath = 0x3c0; // ObjectProperty
		constexpr auto NextRoutePath = 0x3c8; // ObjectProperty
		constexpr auto CurrentPathDir = 0x3d0; // FVector
		constexpr auto RouteGoal = 0x3e0; // ObjectProperty
		constexpr auto RouteDist = 0x3e8; // float
		constexpr auto LastRouteFind = 0x3ec; // float
		constexpr auto PendingMover = 0x3f0; // ObjectProperty
		constexpr auto FailedMoveTarget = 0x3f8; // ObjectProperty
		constexpr auto MoveFailureCount = 0x400; // int32_t
		constexpr auto GroundPitchTime = 0x404; // float
		constexpr auto ShotTarget = 0x408; // ObjectProperty
		constexpr auto LastFailedReach = 0x410; // ObjectProperty
		constexpr auto FailedReachTime = 0x418; // float
		constexpr auto FailedReachLocation = 0x41c; // FVector
		constexpr auto SightCounter = 0x428; // float
		constexpr auto SightCounterInterval = 0x42c; // float
		constexpr auto InUseNodeCostMultiplier = 0x430; // float
		constexpr auto HighJumpNodeCostModifier = 0x434; // int32_t
		constexpr auto MaxMoveTowardPawnTargetTime = 0x438; // float
		constexpr auto Enemy = 0x440; // ObjectProperty
		constexpr auto VisiblePortals = 0x448; // TArray<FVisiblePortalInfo>
		constexpr auto LaneOffset = 0x458; // float
		constexpr auto OldBasedRotation = 0x45c; // FRotator
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x468; // FVector
	}

	namespace n_UAnimNotify_Rumble {
		constexpr auto PredefinedWaveForm = 0x68; // FNone*
		constexpr auto WaveForm = 0x70; // ObjectProperty
		constexpr auto bCheckForBasedPlayer = 0x78; // uint32_t : 1
		constexpr auto EffectRadius = 0x7c; // float
	}

	namespace n_USeqAct_CastToFloat {
		constexpr auto Value = 0x160; // int32_t
		constexpr auto FloatResult = 0x164; // float
	}

	namespace n_UActorFactoryAI {
		constexpr auto ControllerClass = 0xa0; // FNone*
		constexpr auto PawnClass = 0xa8; // FNone*
		constexpr auto PawnName = 0xb0; // FString
		constexpr auto TeamIndex = 0xc0; // int32_t
	}

	namespace n_UProductAssetReferenceBase_TA {
		constexpr auto ProductAsset = 0x60; // ObjectProperty
		constexpr auto ProductID = 0x68; // int32_t
	}

	namespace n_UClipPadEntry {
		constexpr auto Title = 0x60; // FString
		constexpr auto Text = 0x70; // FString
	}

	namespace n_UCustomMatchSettingsSave_TA {
		constexpr auto Settings = 0xc8; // FCustomMatchSettings
		constexpr auto GameTags = 0x158; // ObjectProperty
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
	}

	namespace n_USeqAct_PlayCameraAnim {
		constexpr auto CameraAnim = 0x160; // ObjectProperty
		constexpr auto bLoop = 0x168; // uint32_t : 1
		constexpr auto bRandomStartTime = 0x168; // uint32_t : 1
		constexpr auto BlendInTime = 0x16c; // float
		constexpr auto BlendOutTime = 0x170; // float
		constexpr auto Rate = 0x174; // float
		constexpr auto IntensityScale = 0x178; // float
		constexpr auto PlaySpace = 0x17c; // ECameraAnimPlaySpace
		constexpr auto UserDefinedSpaceActor = 0x180; // ObjectProperty
	}

	namespace n_USilhouetteComponent {
		constexpr auto FadeStartDistance = 0x258; // float
		constexpr auto FadeDistance = 0x25c; // float
		constexpr auto SilhouetteParents = 0x260; // TArray<ComponentProperty>
		constexpr auto SilhouetteColor = 0x270; // FLinearColor
		constexpr auto bVisible = 0x280; // uint32_t : 1
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0xa0; // FParticleRandomSeedInfo
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x88; // TArray<FCameraShakeInstance>
		constexpr auto SplitScreenShakeScale = 0x98; // float
	}

	namespace n_UDSPendingMessage_X {
		constexpr auto Message = 0x60; // ObjectProperty
		constexpr auto TimeoutTime = 0x68; // float
	}

	namespace n_UBTTarget {
		constexpr auto Type = 0x60; // ObjectProperty
		constexpr auto LocalOffset = 0x68; // FVector
		constexpr auto WorldOffset = 0x74; // FVector
		constexpr auto Filters = 0x80; // TArray<ObjectProperty>
	}

	namespace n_USkelControlSingleBoneCopy_TA {
		constexpr auto ControlToCopyName = 0x130; // FName
		constexpr auto TranslationX = 0x138; // FAxisConversion
		constexpr auto TranslationY = 0x144; // FAxisConversion
		constexpr auto TranslationZ = 0x150; // FAxisConversion
		constexpr auto RotationPitch = 0x15c; // FAxisConversion
		constexpr auto RotationYaw = 0x168; // FAxisConversion
		constexpr auto RotationRoll = 0x174; // FAxisConversion
		constexpr auto TranslationScale = 0x180; // FVector
		constexpr auto RotationScale = 0x18c; // FVector
		constexpr auto bConvertedScales = 0x198; // uint32_t : 1
		constexpr auto ControlToCopy = 0x1a0; // ObjectProperty
	}

	namespace n_U__PlayerController_TA__HandleProfileGamepadSave_C9A75173418DE19FFA20EB8562BD0ACA {
		constexpr auto GamepadSave = 0x60; // ObjectProperty
	}

	namespace n_ALevelGridVolume {
		constexpr auto LevelGridVolumeName = 0x2a8; // FString
		constexpr auto CellShape = 0x2b8; // LevelGridCellShape
		constexpr auto Subdivisions = 0x2bc; // int32_t [0x3]
		constexpr auto LoadingDistance = 0x2c8; // float
		constexpr auto KeepLoadedRange = 0x2cc; // float
		constexpr auto CellConvexElem = 0x2d0; // FKConvexElem
	}

	namespace n_USeqAct_ToggleInput {
		constexpr auto bToggleMovement = 0x160; // uint32_t : 1
		constexpr auto bToggleTurning = 0x160; // uint32_t : 1
	}

	namespace n_UEpochTimerTick_X {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Timers = 0x68; // TArray<FEpochTimer>
	}

	namespace n_UCameraState_PrePodiumSpotlight_TA {
		constexpr auto ElapsedTime = 0x90; // float
		constexpr auto bFadeOut = 0x94; // uint32_t : 1
		constexpr auto FadeOutDelay = 0x98; // float
		constexpr auto FadeOutDuration = 0x9c; // float
	}

	namespace n_UScrollComponent_TA {
		constexpr auto bGrabbed = 0xa8; // uint32_t : 1
		constexpr auto bDeterminedSnapStopLocation = 0xa8; // uint32_t : 1
		constexpr auto Momentum = 0xac; // float
		constexpr auto ActiveSnapIndex = 0xb0; // int32_t
		constexpr auto GrabbedMoveSpeed = 0xb4; // float
		constexpr auto MaxMomentum = 0xb8; // float
		constexpr auto LastMomentum = 0xbc; // float
		constexpr auto MinStopMomentum = 0xc0; // float
		constexpr auto FallOffSpeed = 0xc4; // float
		constexpr auto ScrollDirection = 0xc8; // FVector
		constexpr auto StartPoint = 0xd4; // FVector
		constexpr auto TotalDistance = 0xe0; // float
		constexpr auto SnapDistance = 0xe4; // float
		constexpr auto TotalSnaps = 0xe8; // int32_t
		constexpr auto StopSnapLocation = 0xec; // FVector
		constexpr auto SnapBlendSpeed = 0xf8; // float
		constexpr auto ShiftSnapBlendSpeed = 0xfc; // float
		constexpr auto __EventSnapIndexChanged__Delegate = 0x100; // DelegateProperty
	}

	namespace n_UGFxData_TourBracketLeaderboard_TA {
		constexpr auto TeamGoals = 0x98; // TArray<FTourPlacementInfo>
		constexpr auto PlayerGoals = 0xa8; // TArray<FTourPlacementInfo>
		constexpr auto PlayerAssists = 0xb8; // TArray<FTourPlacementInfo>
		constexpr auto PlayerSaves = 0xc8; // TArray<FTourPlacementInfo>
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x268; // float
		constexpr auto OuterConeAngle = 0x26c; // float
		constexpr auto LightShaftConeAngle = 0x270; // float
		constexpr auto PreviewInnerCone = 0x278; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x280; // ComponentProperty
		constexpr auto Rotation = 0x288; // FRotator
	}

	namespace n_UEOSErrors {
		constexpr auto AcceptFriendRequestFailed = 0x80; // ObjectProperty
		constexpr auto RejectFriendRequestFailed = 0x88; // ObjectProperty
	}

	namespace n_UGFxData_Credits_TA {
		constexpr auto LocalizedDepartmentGroups = 0x98; // TArray<FLocalizedDepartmentData>
		constexpr auto LocalizedCopyrightGroups = 0xa8; // TArray<FLocalizedPostCreditData>
		constexpr auto LocalizedMusicGroups = 0xb8; // TArray<FLocalizedPostCreditData>
		constexpr auto DepartmentGroups = 0xc8; // TArray<FDepartmentData>
		constexpr auto CopyrightGroups = 0xd8; // TArray<FPostCreditData>
		constexpr auto MusicGroups = 0xe8; // TArray<FPostCreditData>
	}

	namespace n_UNetworkJitterSettings_TA {
		constexpr auto MinTimeBetweenPackets = 0x60; // float
		constexpr auto MaxTimeBetweenPackets = 0x64; // float
		constexpr auto BufferStdDeviations = 0x68; // float
		constexpr auto MinBufferTime = 0x6c; // float
		constexpr auto RollingAverageTime = 0x70; // float
		constexpr auto InputBufferTightenUpSizeFrequency = 0x74; // float
		constexpr auto MaxSingleAdjustmentFrames = 0x78; // int32_t
	}

	namespace n_U__CarMeshComponentBase_TA__AttachOrnament_CDDD91EC472D3F78E6EE2CBE742DE12F {
		constexpr auto AprilConfig = 0x60; // ObjectProperty
	}

	namespace n_URPC_Challenge_TutorialComplete_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TutorialType = 0x130; // FString
	}

	namespace n_UFogVolumeDensityComponent {
		constexpr auto FogMaterial = 0xa0; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterial = 0xa8; // ObjectProperty
		constexpr auto bEnabled = 0xb0; // uint32_t : 1
		constexpr auto bAffectsTranslucency = 0xb0; // uint32_t : 1
		constexpr auto bOnlyAffectsTranslucency = 0xb0; // uint32_t : 1
		constexpr auto SimpleLightColor = 0xb4; // FLinearColor
		constexpr auto ApproxFogLightColor = 0xc4; // FLinearColor
		constexpr auto StartDistance = 0xd4; // float
		constexpr auto MaxDistance = 0xd8; // float
		constexpr auto FogVolumeActors = 0xe0; // TArray<ObjectProperty>
	}

	namespace n_UPsyNetChannel_X {
		constexpr auto ChannelName = 0x60; // FString
		constexpr auto bOpen = 0x70; // uint32_t : 1
		constexpr auto bReceivedFirstMessage = 0x70; // uint32_t : 1
		constexpr auto bClosed = 0x70; // uint32_t : 1
		constexpr auto bTimedOut = 0x70; // uint32_t : 1
		constexpr auto NextMessageID = 0x74; // int32_t
		constexpr auto WaitForMessageTime = 0x78; // float
		constexpr auto ServiceQueue = 0x80; // TArray<FPendingChannelService>
		constexpr auto Subscriptions = 0x90; // ComponentProperty
		constexpr auto __EventClosed__Delegate = 0x98; // DelegateProperty
	}

	namespace n_U__OnlineGameParty_TA__HandleProfileSet_5033A1EE420E594567C8C992569A84C9 {
		constexpr auto P = 0x60; // ObjectProperty
	}

	namespace n_U__ProductOverride_TA__ApplyOverrides_CAFFA86E4DAD4ACADD0FCBB5472DB313 {
		constexpr auto Target = 0x60; // ObjectProperty
	}

	namespace n_UOnlineGameLeaderboards_X {
		constexpr auto NumResults = 0x98; // int32_t
		constexpr auto CachedLeaderboards = 0xa0; // TArray<FCachedLeaderboardData>
		constexpr auto NumFriendsLeaderboardRequests = 0xb0; // int32_t
		constexpr auto CurrentLeaderboardID = 0xb4; // FName
		constexpr auto CurrentFriendIndex = 0xbc; // int32_t
		constexpr auto bGlobalLeaderboards = 0xc0; // uint32_t : 1
		constexpr auto GetLoaderboardPlayerValueRPC = 0xc8; // ObjectProperty
		constexpr auto LeaderboardRequests = 0xd0; // TArray<ObjectProperty>
		constexpr auto __OnGetLeaderboardPlayerValue__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventNewLeaderboard__Delegate = 0xf8; // DelegateProperty
		constexpr auto __EventGetLeaderboardFailed__Delegate = 0x110; // DelegateProperty
	}

	namespace n_ASpecialPickup_HandbrakeOverride_TA {
		constexpr auto OtherCar = 0x3c0; // ObjectProperty
	}

	namespace n_U__AdHocInterface_X__DisableAdHoc_8EF0FFE348EEC6E15605DA9D437E91CD {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto DestroyedDelegate = 0x68; // DelegateProperty
	}

	namespace n_UProductOverride_ParticleSystemFloatParameter_TA {
		constexpr auto FloatParameter = 0x60; // FFloatParamPair
	}

	namespace n_AStatFactory_HauntedBall_TA {
		constexpr auto EpicSaveTime = 0x458; // float
	}

	namespace n_UTcpNetDriver {
		constexpr auto AllowPlayerPortUnreach = 0x260; // uint32_t : 1
		constexpr auto LogPortUnreach = 0x264; // uint32_t : 1
	}

	namespace n_U__TAsyncResult__PsyTagCheckResult_X__NotifyOnResult_784685B64DE6DDA65FCC5E8BEF0FAB78 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UCameraModifier {
		constexpr auto bDisabled = 0x60; // uint32_t : 1
		constexpr auto bPendingDisable = 0x60; // uint32_t : 1
		constexpr auto bExclusive = 0x60; // uint32_t : 1
		constexpr auto bDebug = 0x60; // uint32_t : 1
		constexpr auto CameraOwner = 0x68; // ObjectProperty
		constexpr auto Priority = 0x70; // char
		constexpr auto AlphaInTime = 0x74; // float
		constexpr auto AlphaOutTime = 0x78; // float
		constexpr auto Alpha = 0x7c; // float
		constexpr auto TargetAlpha = 0x80; // float
	}

	namespace n_UMaterialExpressionCustomTexture {
		constexpr auto Texture = 0xc0; // ObjectProperty
	}

	namespace n_ACarComponent_AirControl_TA {
		constexpr auto AirTorque = 0x2e0; // FRotator
		constexpr auto AirDamping = 0x2ec; // FRotator
		constexpr auto ThrottleForce = 0x2f8; // float
		constexpr auto AirControlSensitivity = 0x2fc; // float
	}

	namespace n_UParticleModuleTrailSpawn {
		constexpr auto SpawnDistanceMap = 0x70; // ComponentProperty
		constexpr auto MinSpawnVelocity = 0x78; // float
	}

	namespace n_UMaxActorsGroup_TA {
		constexpr auto VfTable_FTickableObject = 0x70; // FPointer
		constexpr auto MaxActors = 0x78; // int32_t
		constexpr auto UpdateDelay = 0x7c; // float
		constexpr auto NextUpdateTime = 0x80; // float
		constexpr auto Actors = 0x88; // TArray<FMaxActorCallback>
		constexpr auto __OnToggledDelegate__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UMaterialExpressionTextureSampleParameterNormal {
		constexpr auto InstanceOverride = 0x158; // FPointer
	}

	namespace n_URPC_GetSkillLeaderboardRankForUsers_X {
		constexpr auto Playlist = 0x118; // int32_t
	}

	namespace n_U__Car_TA__QueueDemolish_Deprecated_2C66C8FF4199C3CFC7B7F182D35411DC {
		constexpr auto Data = 0x60; // FDemolishData
		constexpr auto CustomDemoFX = 0x88; // ObjectProperty
	}

	namespace n_UOnlineGameTourMatchmaking_TA {
		constexpr auto Tournaments = 0x118; // ObjectProperty
		constexpr auto Config = 0x120; // ObjectProperty
		constexpr auto FoundServerString = 0x128; // FString
		constexpr auto StartSearchFailString = 0x138; // FString
		constexpr auto TourEvent = 0x148; // ObjectProperty
		constexpr auto Error = 0x150; // ObjectProperty
		constexpr auto bPlayerReadyForNextMatch = 0x158; // uint32_t : 1
		constexpr auto JoinServerAttemptCounter = 0x15c; // char
		constexpr auto __EventError__Delegate = 0x160; // DelegateProperty
		constexpr auto __EventJoinedGame__Delegate = 0x178; // DelegateProperty
		constexpr auto __EventFailedToJoinGame__Delegate = 0x190; // DelegateProperty
	}

	namespace n_USplineAudioComponent {
		constexpr auto ListenerScopeRadius = 0x308; // float
		constexpr auto ClosestPointOnSplineIndex = 0x30c; // int32_t
		constexpr auto Points = 0x310; // TArray<FInterpPointOnSpline>
	}

	namespace n_UTerrainComponent {
		constexpr auto ShadowMaps = 0x258; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x268; // TArray<FGuid>
		constexpr auto TerrainObject = 0x278; // FPointer
		constexpr auto SectionBaseX = 0x280; // int32_t
		constexpr auto SectionBaseY = 0x284; // int32_t
		constexpr auto SectionSizeX = 0x288; // int32_t
		constexpr auto SectionSizeY = 0x28c; // int32_t
		constexpr auto TrueSectionSizeX = 0x290; // int32_t
		constexpr auto TrueSectionSizeY = 0x294; // int32_t
		constexpr auto LightMap = 0x298; // FLightMapRef
		constexpr auto PatchBounds = 0x2a0; // TArray<FTerrainPatchBounds>
		constexpr auto BatchMaterials = 0x2b0; // TArray<FTerrainMaterialMask>
		constexpr auto FullBatch = 0x2c0; // int32_t
		constexpr auto BVTree = 0x2c8; // FTerrainBVTree
		constexpr auto CollisionVertices = 0x2d8; // TArray<FVector>
		constexpr auto RBHeightfield = 0x2e8; // FPointer
		constexpr auto bDisplayCollisionLevel = 0x2f0; // uint32_t : 1
	}

	namespace n_UOnlineGameJoinGame_X {
		constexpr auto JoinCountdownTime = 0x98; // int32_t
		constexpr auto FailCommand = 0xa0; // FString
		constexpr auto LoadingScreenCommand = 0xb0; // FString
		constexpr auto JoinGameShake = 0xc0; // ComponentProperty
		constexpr auto ReservationBeacon = 0xc8; // ComponentProperty
		constexpr auto WaitingForPlayersString = 0xd0; // FString
		constexpr auto ReservationNotRespondingString = 0xe0; // FString
		constexpr auto ReservationFullString = 0xf0; // FString
		constexpr auto PartyTeamReservationFullString = 0x100; // FString
		constexpr auto NoFriendJoinPrivateMatchString = 0x110; // FString
		constexpr auto BeaconTimedOutString = 0x120; // FString
		constexpr auto NotAllPlayersJoinedString = 0x130; // FString
		constexpr auto CanceledString = 0x140; // FString
		constexpr auto SecurityKeyAcquisitionFailed = 0x150; // FString
		constexpr auto SecurityKeyVerificationFailed = 0x160; // FString
		constexpr auto SendingReservationMessage = 0x170; // FString
		constexpr auto JoiningPartyLeadersGame = 0x180; // FString
		constexpr auto InvalidPassword = 0x190; // FString
		constexpr auto WrongPlaylistString = 0x1a0; // FString
		constexpr auto WrongRankedMatchString = 0x1b0; // FString
		constexpr auto MatchEndedString = 0x1c0; // FString
		constexpr auto CrossplayDisabled = 0x1d0; // FString
		constexpr auto AnotherPlayerCanceled = 0x1e0; // FString
		constexpr auto ActiveServer = 0x1f0; // FActiveServerData
		constexpr auto bUseNetworkNextDriver = 0x2b0; // uint32_t : 1
		constexpr auto Settings = 0x2b8; // FJoinMatchSettings
		constexpr auto PendingFailMessage = 0x2d8; // FString
		constexpr auto JoinedPlayers = 0x2e8; // TArray<ObjectProperty>
		constexpr auto CustomMatch = 0x2f8; // FCustomMatchSettings
		constexpr auto GenerateKeysRPCs = 0x388; // TArray<ObjectProperty>
		constexpr auto __EventJoinGameComplete__Delegate = 0x398; // DelegateProperty
		constexpr auto __EventStatusUpdate__Delegate = 0x3b0; // DelegateProperty
		constexpr auto __EventCountdownStarted__Delegate = 0x3c8; // DelegateProperty
		constexpr auto __EventCountdownEnded__Delegate = 0x3e0; // DelegateProperty
		constexpr auto __EventActiveServerChanged__Delegate = 0x3f8; // DelegateProperty
		constexpr auto __EventServerReserved__Delegate = 0x410; // DelegateProperty
		constexpr auto __EventPasswordRequired__Delegate = 0x428; // DelegateProperty
		constexpr auto __EventJoiningGame__Delegate = 0x440; // DelegateProperty
		constexpr auto __EventMaxPlayersChanged__Delegate = 0x458; // DelegateProperty
	}

	namespace n_AGameEvent_Season_TA {
		constexpr auto PreMatchTime = 0xc78; // int32_t
		constexpr auto Season = 0xc80; // ObjectProperty
		constexpr auto Match = 0xc88; // FSeasonMatch
		constexpr auto Profile = 0xca8; // ObjectProperty
		constexpr auto HumanTeam = 0xcb0; // ObjectProperty
		constexpr auto BotTeam = 0xcb8; // ObjectProperty
		constexpr auto HumanMatchTeam = 0xcc0; // int32_t
		constexpr auto BotMatchTeam = 0xcc4; // int32_t
		constexpr auto SeasonIntroTime = 0xcc8; // float
		constexpr auto bIsChampionShipGame = 0xccc; // uint32_t : 1
		constexpr auto bIsFirstGameOfSeason = 0xccc; // uint32_t : 1
		constexpr auto bLastGameOfRegularSeason = 0xccc; // uint32_t : 1
		constexpr auto SimilarLogoGroups = 0xcd0; // ObjectProperty
		constexpr auto TeamOverrides = 0xcd8; // FString [0x2]
		constexpr auto __EventWonChampionShip__Delegate = 0xcf8; // DelegateProperty
	}

	namespace n_U__VanitySetManager_TA__RequestsBorders_52F4231749CA9457B5F2569C221A04D8 {
		constexpr auto EmptyID = 0x60; // FUniqueNetId
	}

	namespace n_URB_ConstraintSetup {
		constexpr auto JointName = 0x60; // FName
		constexpr auto ConstraintBone1 = 0x68; // FName
		constexpr auto ConstraintBone2 = 0x70; // FName
		constexpr auto Pos1 = 0x78; // FVector
		constexpr auto PriAxis1 = 0x84; // FVector
		constexpr auto SecAxis1 = 0x90; // FVector
		constexpr auto Pos2 = 0x9c; // FVector
		constexpr auto PriAxis2 = 0xa8; // FVector
		constexpr auto SecAxis2 = 0xb4; // FVector
		constexpr auto PulleyPivot1 = 0xc0; // FVector
		constexpr auto PulleyPivot2 = 0xcc; // FVector
		constexpr auto bEnableProjection = 0xd8; // uint32_t : 1
		constexpr auto bLinearLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bLinearBreakable = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimited = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimited = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bAngularBreakable = 0xd8; // uint32_t : 1
		constexpr auto bIsPulley = 0xd8; // uint32_t : 1
		constexpr auto bMaintainMinDistance = 0xd8; // uint32_t : 1
		constexpr auto LinearXSetup = 0xdc; // FLinearDOFSetup
		constexpr auto LinearYSetup = 0xe4; // FLinearDOFSetup
		constexpr auto LinearZSetup = 0xec; // FLinearDOFSetup
		constexpr auto LinearLimitStiffness = 0xf4; // float
		constexpr auto LinearLimitDamping = 0xf8; // float
		constexpr auto LinearBreakThreshold = 0xfc; // float
		constexpr auto Swing1LimitAngle = 0x100; // float
		constexpr auto Swing2LimitAngle = 0x104; // float
		constexpr auto TwistLimitAngle = 0x108; // float
		constexpr auto SwingLimitStiffness = 0x10c; // float
		constexpr auto SwingLimitDamping = 0x110; // float
		constexpr auto TwistLimitStiffness = 0x114; // float
		constexpr auto TwistLimitDamping = 0x118; // float
		constexpr auto AngularBreakThreshold = 0x11c; // float
		constexpr auto PulleyRatio = 0x120; // float
	}

	namespace n_U__StatusObserver_X__ObservesTriggerType_9564A8C64A47EE409BC788A7C203132F {
		constexpr auto InTrigger = 0x60; // ObjectProperty
	}

	namespace n_UAnimSequence {
		constexpr auto SequenceName = 0x60; // FName
		constexpr auto Notifies = 0x68; // TArray<FAnimNotifyEvent>
		constexpr auto MetaData = 0x78; // TArray<ObjectProperty>
		constexpr auto BoneControlModifiers = 0x88; // TArray<FSkelControlModifier>
		constexpr auto SequenceLength = 0x98; // float
		constexpr auto NumFrames = 0x9c; // int32_t
		constexpr auto RateScale = 0xa0; // float
		constexpr auto bNoLoopingInterpolation = 0xa4; // uint32_t : 1
		constexpr auto bIsAdditive = 0xa4; // uint32_t : 1
		constexpr auto bAdditiveBuiltLooping = 0xa4; // uint32_t : 1
		constexpr auto bDoNotOverrideCompression = 0xa4; // uint32_t : 1
		constexpr auto bHasBeenUsed = 0xa4; // uint32_t : 1
		constexpr auto bWasCompressedWithoutTranslations = 0xa4; // uint32_t : 1
		constexpr auto RawAnimData = 0xa8; // TArray<FRawAnimSequenceTrack>
		constexpr auto RawAnimationData = 0xb8; // TArray<FRawAnimSequenceTrack>
		constexpr auto TranslationData = 0xc8; // TArray<FTranslationTrack>
		constexpr auto RotationData = 0xd8; // TArray<FRotationTrack>
		constexpr auto CurveData = 0xe8; // TArray<FCurveTrack>
		constexpr auto CompressionScheme = 0xf8; // ObjectProperty
		constexpr auto TranslationCompressionFormat = 0x100; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x101; // AnimationCompressionFormat
		constexpr auto KeyEncodingFormat = 0x102; // AnimationKeyFormat
		constexpr auto CompressedTrackOffsets = 0x108; // TArray<int32_t>
		constexpr auto CompressedByteStream = 0x118; // TArray<char>
		constexpr auto TranslationCodec = 0x128; // FPointer
		constexpr auto RotationCodec = 0x130; // FPointer
		constexpr auto AdditiveRefPose = 0x138; // TArray<FBoneAtom>
		constexpr auto AdditiveBasePose = 0x148; // TArray<FRawAnimSequenceTrack>
		constexpr auto AdditiveRefName = 0x158; // FName
		constexpr auto AdditiveBasePoseAnimSeq = 0x160; // TArray<ObjectProperty>
		constexpr auto AdditiveTargetPoseAnimSeq = 0x170; // TArray<ObjectProperty>
		constexpr auto RelatedAdditiveAnimSeqs = 0x180; // TArray<ObjectProperty>
		constexpr auto EncodingPkgVersion = 0x190; // int32_t
		constexpr auto CompressCommandletVersion = 0x194; // int32_t
		constexpr auto UseScore = 0x198; // float
	}

	namespace n_UGFxClikWidget {
		constexpr auto __EventListener__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UOnlineLobbyInterfaceImpl {
		constexpr auto CreateLobbyCompleteDelegates = 0x60; // TArray<DelegateProperty>
		constexpr auto FindLobbiesCompleteDelegates = 0x70; // TArray<DelegateProperty>
		constexpr auto JoinLobbyCompleteDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto LobbySettingsUpdateDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto LobbyMemberSettingsUpdateDelegates = 0xa0; // TArray<DelegateProperty>
		constexpr auto LobbyMemberStatusUpdateDelegates = 0xb0; // TArray<DelegateProperty>
		constexpr auto LobbyReceiveMessageDelegates = 0xc0; // TArray<DelegateProperty>
		constexpr auto LobbyReceiveBinaryDataDelegates = 0xd0; // TArray<DelegateProperty>
		constexpr auto LobbyJoinGameDelegates = 0xe0; // TArray<DelegateProperty>
		constexpr auto LobbyInviteDelegates = 0xf0; // TArray<DelegateProperty>
		constexpr auto LobbyErrorDelegates = 0x100; // TArray<DelegateProperty>
		constexpr auto LobbyDestroyedDelegates = 0x110; // TArray<DelegateProperty>
		constexpr auto LobbySessionCreatedDelegates = 0x120; // TArray<DelegateProperty>
		constexpr auto HostStartPlayTogetherDelegates = 0x130; // TArray<DelegateProperty>
		constexpr auto ActiveLobbies = 0x140; // TArray<FActiveLobbyInfo>
		constexpr auto CachedFindLobbyResults = 0x150; // TArray<FBasicLobbyInfo>
		constexpr auto CachedBinaryData = 0x160; // TArray<char>
		constexpr auto __OnCreateLobbyComplete__Delegate = 0x170; // DelegateProperty
		constexpr auto __OnFindLobbiesComplete__Delegate = 0x188; // DelegateProperty
		constexpr auto __OnJoinLobbyComplete__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __OnLobbySettingsUpdate__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnLobbyMemberSettingsUpdate__Delegate = 0x1d0; // DelegateProperty
		constexpr auto __OnLobbyMemberStatusUpdate__Delegate = 0x1e8; // DelegateProperty
		constexpr auto __OnLobbyReceiveMessage__Delegate = 0x200; // DelegateProperty
		constexpr auto __OnLobbyReceiveBinaryData__Delegate = 0x218; // DelegateProperty
		constexpr auto __OnLobbyJoinGame__Delegate = 0x230; // DelegateProperty
		constexpr auto __OnLobbyInvite__Delegate = 0x248; // DelegateProperty
		constexpr auto __OnLobbyDestroyed__Delegate = 0x260; // DelegateProperty
		constexpr auto __OnLobbySessionCreated__Delegate = 0x278; // DelegateProperty
		constexpr auto __OnLobbyError__Delegate = 0x290; // DelegateProperty
		constexpr auto __OnHostStartPlayTogether__Delegate = 0x2a8; // DelegateProperty
	}

	namespace n_UAntennaComponent_TA {
		constexpr auto TopperSocket = 0xe8; // FName
		constexpr auto AntennaMesh = 0xf0; // ObjectProperty
		constexpr auto AntennaSegmentExtension = 0xf8; // float
		constexpr auto AntennaMaterial = 0x100; // ObjectProperty
		constexpr auto AnimTreeTemplate = 0x108; // ObjectProperty
		constexpr auto BendyBoneControllers = 0x110; // TArray<FName>
		constexpr auto BendScale = 0x120; // float
		constexpr auto PitchScale = 0x124; // float
		constexpr auto RollScale = 0x128; // float
		constexpr auto PitchZScale = 0x12c; // float
		constexpr auto RollZScale = 0x130; // float
		constexpr auto TopperMaterial = 0x138; // ObjectProperty
		constexpr auto LastTopperWindSpeedParamValue = 0x140; // float
		constexpr auto AntennaSK = 0x148; // ComponentProperty
		constexpr auto BendyControls = 0x150; // TArray<ObjectProperty>
	}

	namespace n_UTickableStateObject_X {
		constexpr auto VfTable_FTickableObject = 0x68; // FPointer
		constexpr auto bTickWhenGamePaused = 0x70; // uint32_t : 1
		constexpr auto bAutoTick = 0x70; // uint32_t : 1
		constexpr auto Timers = 0x78; // TArray<FTimerData>
		constexpr auto LatentFloat = 0x88; // float
	}

	namespace n_USeqAct_SetTimeDilation_TA {
		constexpr auto VfTable_FTickableObject = 0x160; // FPointer
		constexpr auto bUseCurve = 0x168; // uint32_t : 1
		constexpr auto bActivated = 0x168; // uint32_t : 1
		constexpr auto CurrentTime = 0x16c; // float
		constexpr auto EndTime = 0x170; // float
		constexpr auto SlomoValue = 0x174; // float
		constexpr auto SlomoCurve = 0x178; // FRawDistributionFloat
	}

	namespace n_UPrefab {
		constexpr auto PrefabVersion = 0x60; // int32_t
		constexpr auto PrefabArchetypes = 0x68; // TArray<ObjectProperty>
		constexpr auto RemovedArchetypes = 0x78; // TArray<ObjectProperty>
		constexpr auto PrefabSequence = 0x88; // ObjectProperty
		constexpr auto PrefabPreview = 0x90; // ObjectProperty
	}

	namespace n_UAnimNodeBlendSpeed_TA {
		constexpr auto BlendRate = 0x1a8; // float
		constexpr auto MaxSpeed = 0x1ac; // float
	}

	namespace n_UGFxData_MenuSequence_TA {
		constexpr auto MenuStack = 0x98; // TArray<FMenuSequencePair>
	}

	namespace n_AStatFactory_TA {
		constexpr auto Events = 0x278; // FStatEventCollection
		constexpr auto BallCache = 0x3d0; // TArray<FBallInfo>
		constexpr auto GoalSizeFudge = 0x3e0; // float
		constexpr auto ShotMaxTime = 0x3e4; // float
		constexpr auto ShotArriveTime = 0x3e8; // float
		constexpr auto ShotMaxDistance = 0x3ec; // float
		constexpr auto RedZoneDistance = 0x3f0; // float
		constexpr auto JuggleMinSpeed = 0x3f4; // float
		constexpr auto BulletHitSpeed = 0x3f8; // float
		constexpr auto AerialHitHeight = 0x3fc; // float
		constexpr auto AerialHitMinRelSpeed = 0x400; // float
		constexpr auto BicycleSpinSpeed = 0x404; // float
		constexpr auto LongGoalDistance = 0x408; // float
		constexpr auto HatTrickThreshold = 0x40c; // int32_t
		constexpr auto PlaymakerThreshold = 0x410; // int32_t
		constexpr auto SaviorThreshold = 0x414; // int32_t
		constexpr auto DemolitionThreshold = 0x418; // int32_t
		constexpr auto bGaveFirstTouch = 0x41c; // uint32_t : 1
		constexpr auto SoccarGame = 0x420; // ObjectProperty
		constexpr auto ScoringPRI = 0x428; // ObjectProperty
		constexpr auto CarsIssuedAnyFiveHit = 0x430; // TArray<ObjectProperty>
		constexpr auto __EventGaveStat__Delegate = 0x440; // DelegateProperty
	}

	namespace n_UPsyNetService_Reservation2_X {
		constexpr auto Reservation = 0x90; // FCheckReservationResponse
	}

	namespace n_UGFxData_PlayerAvatarBorder_TA {
		constexpr auto PlayerBorder = 0x98; // ComponentProperty
	}

	namespace n_URPC_PartyChatMessage_X {
		constexpr auto Message = 0xf8; // FString
	}

	namespace n_UDLCPack_TA {
		constexpr auto UnlockedPlatforms = 0x60; // TArray<EConsoleType>
		constexpr auto DiscUnlockedPlatforms = 0x70; // TArray<EConsoleType>
		constexpr auto LabelSlot = 0x80; // ObjectProperty
		constexpr auto SteamID = 0x88; // int32_t
		constexpr auto PS4ID = 0x90; // FString
		constexpr auto XboxOneID = 0xa0; // FString
		constexpr auto SwitchID = 0xb0; // FString
		constexpr auto EpicId = 0xc0; // FString
		constexpr auto Products = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UProductsFavoriteSave_TA {
		constexpr auto FavoritedHashes = 0x110; // TArray<int32_t>
	}

	namespace n_U__OnlineGameTourServer_TA__FilterMapData_84D44BC3402E989B18A3D5BC3E69CC69 {
		constexpr auto FilterMaps = 0x60; // TArray<FName>
	}

	namespace n_UGFxData_EpicLogin_TA {
		constexpr auto EpicAccountSave = 0x98; // ObjectProperty
		constexpr auto EpicDisplayName = 0xa0; // FString
		constexpr auto AccountLinkURL = 0xb0; // FString
		constexpr auto EpicConfig = 0xc0; // ObjectProperty
	}

	namespace n_UGFxData_TourRegistration_TA {
		constexpr auto Tournaments = 0x98; // ObjectProperty
	}

	namespace n_U__AdHocBrowser_X__JoinServer_35A347A5456C47295EE223907B40E65E {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto ServerId = 0x68; // FString
		constexpr auto Options = 0x78; // FString
	}

	namespace n_USeqAct_Timer {
		constexpr auto ActivationTime = 0x160; // float
		constexpr auto Time = 0x164; // float
	}

	namespace n_URPC_FileStorage_GetFileUploadUrl_X {
		constexpr auto Path = 0xe8; // FString
		constexpr auto ContentType = 0xf8; // FString
		constexpr auto URL = 0x108; // FString
	}

	namespace n_UBTDynamicLink {
		constexpr auto LinkName = 0x88; // FName
		constexpr auto bUnlinkedSuccess = 0x90; // uint32_t : 1
		constexpr auto ChildArchetype = 0x98; // ObjectProperty
	}

	namespace n_UGFxData_TrainingModeEditor_TA {
		constexpr auto MyGameEvent = 0x98; // ObjectProperty
		constexpr auto SanitizedTrainingModeName = 0xa0; // FString
		constexpr auto RoundData = 0xb0; // TArray<FEditorRoundData>
		constexpr auto CurrentRound = 0xc0; // int32_t
		constexpr auto Tags = 0xc8; // TArray<FTrainingModeTag>
		constexpr auto Editing = 0xd8; // EEditingType
		constexpr auto BallStartSpeed = 0xdc; // float
		constexpr auto BallScreenPosX = 0xe0; // float
		constexpr auto BallScreenPosY = 0xe4; // float
		constexpr auto bOwned = 0xe8; // uint32_t : 1
		constexpr auto bNoEditor = 0xe8; // uint32_t : 1
		constexpr auto bUnsavedChanges = 0xe8; // uint32_t : 1
		constexpr auto ModalProcessing = 0xf0; // ObjectProperty
	}

	namespace n_UServerConfig_X {
		constexpr auto HeartbeatSeconds = 0x78; // float
		constexpr auto HeartbeatRetrySeconds = 0x7c; // float
		constexpr auto bUploadLogFiles = 0x80; // uint32_t : 1
		constexpr auto bUploadReplays = 0x80; // uint32_t : 1
		constexpr auto bFlatbufferRecordInput = 0x80; // uint32_t : 1
		constexpr auto MaxUploadLogFileSize = 0x84; // int32_t
		constexpr auto NetServerMaxTickRate = 0x88; // float
		constexpr auto IdleNetServerMaxTickRate = 0x8c; // float
		constexpr auto FlatbufferChance = 0x90; // float
		constexpr auto FlatbufferMaxRecordSizeMB = 0x94; // int32_t
		constexpr auto FlatbufferPacketSendRate = 0x98; // int32_t
		constexpr auto MinSecondsForUnstableConnection = 0x9c; // float
		constexpr auto MinSecondsUntilConnectionCheck = 0xa0; // float
	}

	namespace n_U__OnlineGameMatchmaking_X__GetSubRegionPings_3009C79640BE8A216E37D4B909837EF8 {
		constexpr auto SuperRegionID = 0x60; // FString
	}

	namespace n_UMcpMessageManager {
		constexpr auto VfTable_FTickableObject = 0x110; // FPointer
		constexpr auto CreateMessageUrl = 0x118; // FString
		constexpr auto DeleteMessageUrl = 0x128; // FString
		constexpr auto QueryMessagesUrl = 0x138; // FString
		constexpr auto QueryMessageContentsUrl = 0x148; // FString
		constexpr auto DeleteAllMessagesUrl = 0x158; // FString
		constexpr auto CompressMessageRequests = 0x168; // TArray<FMcpCompressMessageRequest>
		constexpr auto UncompressMessageRequests = 0x178; // TArray<FMcpUncompressMessageRequest>
	}

	namespace n_UPartyMessage_ReadyToConfirmTrade_X {
		constexpr auto TradingMemberId = 0xa8; // FUniqueNetId
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x280; // int32_t
	}

	namespace n_UPlatformAccountSettings {
		constexpr auto bCrossplayEnabled = 0x70; // uint32_t : 1
		constexpr auto bAllowInvites = 0x70; // uint32_t : 1
		constexpr auto CrossPlatformChatState = 0x74; // ECrossPlatformChatState
		constexpr auto __EventAccountSettingsChanged__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UPrefabSequence {
		constexpr auto OwnerPrefab = 0x1d0; // ObjectProperty
	}

	namespace n_UMorphNodeWeightByBoneAngle {
		constexpr auto Angle = 0xb0; // float
		constexpr auto NodeWeight = 0xb4; // float
		constexpr auto BaseBoneName = 0xb8; // FName
		constexpr auto BaseBoneAxis = 0xc0; // EAxis
		constexpr auto AngleBoneAxis = 0xc1; // EAxis
		constexpr auto bInvertBaseBoneAxis = 0xc4; // uint32_t : 1
		constexpr auto bInvertAngleBoneAxis = 0xc4; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0xc4; // uint32_t : 1
		constexpr auto AngleBoneName = 0xc8; // FName
		constexpr auto MaterialSlotId = 0xd0; // int32_t
		constexpr auto ScalarParameterName = 0xd4; // FName
		constexpr auto MaterialInstanceConstant = 0xe0; // ObjectProperty
		constexpr auto WeightArray = 0xe8; // TArray<FBoneAngleMorph>
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x70; // EBeam2Method
		constexpr auto TaperMethod = 0x71; // EBeamTaperMethod
		constexpr auto TextureTile = 0x74; // int32_t
		constexpr auto TextureTileDistance = 0x78; // float
		constexpr auto Sheets = 0x7c; // int32_t
		constexpr auto MaxBeamCount = 0x80; // int32_t
		constexpr auto Speed = 0x84; // float
		constexpr auto InterpolationPoints = 0x88; // int32_t
		constexpr auto bAlwaysOn = 0x8c; // uint32_t : 1
		constexpr auto RenderGeometry = 0x8c; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x8c; // uint32_t : 1
		constexpr auto RenderLines = 0x8c; // uint32_t : 1
		constexpr auto RenderTessellation = 0x8c; // uint32_t : 1
		constexpr auto UpVectorStepSize = 0x90; // int32_t
		constexpr auto BranchParentName = 0x94; // FName
		constexpr auto Distance = 0xa0; // FRawDistributionFloat
		constexpr auto TaperFactor = 0xc8; // FRawDistributionFloat
		constexpr auto TaperScale = 0xf0; // FRawDistributionFloat
	}

	namespace n_URPC_PsyNetReadFriends_X {
		constexpr auto Friends = 0xe8; // TArray<FPsyNetPersonaData>
		constexpr auto FriendsData = 0xf8; // TArray<FOnlineFriend>
	}

	namespace n_UEngineAudioRevSimReverse_TA {
		constexpr auto ReverseGearScale = 0x70; // float
	}

	namespace n_UMapList_TA {
		constexpr auto AllMaps = 0x60; // TArray<ObjectProperty>
		constexpr auto AllMaps_Pristine = 0x70; // TArray<ObjectProperty>
		constexpr auto SortedMaps = 0x80; // TArray<ObjectProperty>
		constexpr auto SortedMaps_Pristine = 0x90; // TArray<ObjectProperty>
		constexpr auto AdditionalCookedMaps = 0xa0; // TArray<FName>
		constexpr auto MapGroups = 0xb0; // TArray<FMapGroup>
		constexpr auto GeneratedMapGroups = 0xc0; // TArray<FMapGroup>
		constexpr auto GeneratedMapGroups_Pristine = 0xd0; // TArray<FMapGroup>
		constexpr auto SelectableMaps = 0xe0; // ObjectProperty
		constexpr auto SeasonMaps = 0xe8; // ObjectProperty
		constexpr auto SeasonPlayoffsMaps = 0xf0; // ObjectProperty
		constexpr auto AllMapSets = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_HideDuplicateCar_TA {
		constexpr auto ActorNameToHide = 0x160; // FString
		constexpr auto bKeepAllInstancesHidden = 0x170; // uint32_t : 1
		constexpr auto bFoundDemoedCar = 0x170; // uint32_t : 1
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x70; // uint32_t : 1
		constexpr auto bNRScaleEmitterTime = 0x70; // uint32_t : 1
		constexpr auto bSmooth = 0x70; // uint32_t : 1
		constexpr auto bNoiseLock = 0x70; // uint32_t : 1
		constexpr auto bOscillate = 0x70; // uint32_t : 1
		constexpr auto bUseNoiseTangents = 0x70; // uint32_t : 1
		constexpr auto bTargetNoise = 0x70; // uint32_t : 1
		constexpr auto bApplyNoiseScale = 0x70; // uint32_t : 1
		constexpr auto Frequency = 0x74; // int32_t
		constexpr auto Frequency_LowRange = 0x78; // int32_t
		constexpr auto NoiseRange = 0x80; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0xa8; // FRawDistributionFloat
		constexpr auto NoiseSpeed = 0xd0; // FRawDistributionVector
		constexpr auto NoiseLockRadius = 0xf8; // float
		constexpr auto NoiseLockTime = 0xfc; // float
		constexpr auto NoiseTension = 0x100; // float
		constexpr auto NoiseTangentStrength = 0x108; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x130; // int32_t
		constexpr auto FrequencyDistance = 0x134; // float
		constexpr auto NoiseScale = 0x138; // FRawDistributionFloat
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x98; // FParticleRandomSeedInfo
	}

	namespace n_UWheelAssetGenerator_FrontWheels_TA {
		constexpr auto FrontRight = 0x80; // ComponentProperty
		constexpr auto FrontLeft = 0x88; // ComponentProperty
	}

	namespace n_USeason_TA {
		constexpr auto NumTeams = 0x60; // int32_t
		constexpr auto TeamSize = 0x64; // int32_t
		constexpr auto Difficulty = 0x68; // int32_t
		constexpr auto NumRegularWeeks = 0x6c; // int32_t
		constexpr auto NumPlayoffsWeeks = 0x70; // int32_t
		constexpr auto NumPlayoffsTeams = 0x74; // int32_t
		constexpr auto Teams = 0x78; // TArray<FSeasonTeam>
		constexpr auto Players = 0x88; // TArray<FSeasonPlayer>
		constexpr auto PlayerStats = 0x98; // TArray<FSeasonPlayerStat>
		constexpr auto Year = 0xa8; // int32_t
		constexpr auto CurrentWeek = 0xac; // int32_t
		constexpr auto Matches = 0xb0; // TArray<FSeasonMatch>
		constexpr auto __EventWeekSimulated__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_U__PsyNetBeacon_X__SendMessageToClients_C134A056419A092838A505ABEA3618CB {
		constexpr auto Connection = 0x60; // ObjectProperty
	}

	namespace n_ARumblePickups_TA {
		constexpr auto PickupInfo = 0x268; // FPickupInfo_TA
		constexpr auto AttachedPickup = 0x288; // ObjectProperty
		constexpr auto ConcurrentItemCount = 0x290; // int32_t
		constexpr auto SelectedIndex = 0x294; // int32_t
		constexpr auto PreviewTimeSeconds = 0x298; // int32_t
		constexpr auto __PickupInfo__ChangeNotify = 0x2a0; // DelegateProperty
		constexpr auto __AttachedPickup__ChangeNotify = 0x2b8; // DelegateProperty
		constexpr auto __ConcurrentItemCount__ChangeNotify = 0x2d0; // DelegateProperty
		constexpr auto __SelectedIndex__ChangeNotify = 0x2e8; // DelegateProperty
		constexpr auto __PreviewTimeSeconds__ChangeNotify = 0x300; // DelegateProperty
	}

	namespace n_UAnimNodePlayCustomAnim {
		constexpr auto bIsPlayingCustomAnim = 0x158; // uint32_t : 1
		constexpr auto CustomPendingBlendOutTime = 0x15c; // float
	}

	namespace n_UUIPropertyDataProvider {
		constexpr auto ComplexPropertyTypes = 0x70; // TArray<FNone*>
		constexpr auto __CanSupportComplexPropertyType__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UProductAttribute_EquippableSlot_TA {
		constexpr auto Slot = 0x80; // EEquippableProductSlot
	}

	namespace n_URPC_ServerToServer_X {
		constexpr auto ServerId = 0xe8; // QWordProperty
		constexpr auto MessageType = 0xf0; // FString
		constexpr auto MessagePayload = 0x100; // FString
	}

	namespace n_UMicroEvent_TA {
		constexpr auto PlaylistId = 0x60; // int32_t
		constexpr auto StartTime = 0x68; // QWordProperty
		constexpr auto EndTime = 0x70; // QWordProperty
	}

	namespace n_UStatusTrigger_FTEGroupComplete_TA {
		constexpr auto ConditionalValue = 0x80; // FName
	}

	namespace n_U__GFxData_MultiItemDrops_TA__HandleChallengeRewardCollected_4A0E895D498D1A4A5C059BB417ACF8A1 {
		constexpr auto Currency = 0x60; // TArray<FCurrency>
	}

	namespace n_U__TourUtils_TA__CalcTeamWins_96E893FD47C67854C4C0C082912B1A15 {
		constexpr auto TeamID = 0x60; // QWordProperty
	}

	namespace n_UActorFactoryAmbientSoundSimple {
		constexpr auto SoundNodeWave = 0xa0; // ObjectProperty
	}

	namespace n_UStatGraph_TA {
		constexpr auto RecordSettings = 0x70; // ComponentProperty
		constexpr auto LastTickTime = 0x78; // FDouble
		constexpr auto SampleHistories = 0x80; // TArray<ComponentProperty>
	}

	namespace n_USeqAct_SubtractFloat {
		constexpr auto ValueA = 0x160; // float
		constexpr auto ValueB = 0x164; // float
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_UTutorial_Dodge_TA {
		constexpr auto bDidDodge = 0x248; // uint32_t : 1
		constexpr auto bBallHitGoal = 0x248; // uint32_t : 1
		constexpr auto bCheckFailOnLand = 0x248; // uint32_t : 1
		constexpr auto Dodges = 0x24c; // int32_t
		constexpr auto MaxDodges = 0x250; // int32_t
	}

	namespace n_U__PlayerControllerBase_TA__InitFromProfile_7454815E4F9F676C2ACC2A887B1A4ECE {
		constexpr auto Profile = 0x60; // ObjectProperty
	}

	namespace n_URPC_UploadXP_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto XPTotal = 0x130; // float
		constexpr auto XpLevel = 0x134; // int32_t
	}

	namespace n_UPsyNetClientService_X {
		constexpr auto Service = 0x60; // FString
		constexpr auto Version = 0x70; // int32_t
		constexpr auto Error = 0x78; // ObjectProperty
		constexpr auto Connection = 0x80; // ObjectProperty
		constexpr auto Expiration = 0x88; // QWordProperty
	}

	namespace n_U__GFxData_ProductFilter_TA__InitProductAttributes_5F6E39384CBDF0654AC04CAB688530E5 {
		constexpr auto ExcludedAttributes = 0x60; // TArray<FNone*>
	}

	namespace n_UMcpUserManagerBase {
		constexpr auto McpUserManagerClassName = 0x78; // FString
		constexpr auto __OnRegisterUserComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnAuthenticateUserComplete__Delegate = 0xa0; // DelegateProperty
		constexpr auto __OnQueryUsersComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnDeleteUserComplete__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_ADemolishExplosion_TA {
		constexpr auto PartRandomAngle = 0x280; // float
		constexpr auto PartRandomSpeedMin = 0x284; // float
		constexpr auto PartRandomSpeedMax = 0x288; // float
		constexpr auto PartRandomSpeedMinZ = 0x28c; // float
		constexpr auto PartRandomSpeedMaxZ = 0x290; // float
		constexpr auto PartRandomAngularSpeed = 0x294; // float
		constexpr auto BodyLifetime = 0x298; // float
	}

	namespace n_UVideoSettingsSave_TA {
		constexpr auto bVsync = 0xc8; // uint32_t : 1
		constexpr auto bShowWeatherFX = 0xc8; // uint32_t : 1
		constexpr auto bShowLightShafts = 0xc8; // uint32_t : 1
		constexpr auto bTranslucentArenaShaders = 0xc8; // uint32_t : 1
		constexpr auto bShowLensFlares = 0xc8; // uint32_t : 1
		constexpr auto bEnableHDRSideBySideVisualizer = 0xc8; // uint32_t : 1
		constexpr auto bUncappedFramerate = 0xc8; // uint32_t : 1
		constexpr auto HDRBrightnessScale = 0xcc; // float
		constexpr auto HDRPaperWhiteScale = 0xd0; // float
		constexpr auto HDRGammaScale = 0xd4; // float
		constexpr auto CustomFPS = 0xd8; // float
	}

	namespace n_U__GFxEngine_TA__InitOnlineSub_4B0B4C4C4FC4536AAAE9769DE6D085F2 {
		constexpr auto OnlineX = 0x60; // ObjectProperty
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x80; // FInterpCurveVector2D
	}

	namespace n_USeqAct_ApplySoundNode {
		constexpr auto PlaySound = 0x160; // ObjectProperty
		constexpr auto ApplyNode = 0x168; // ObjectProperty
	}

	namespace n_UProductAsset_MusicStingers_TA {
		constexpr auto GoalScoredStinger = 0xf8; // ObjectProperty
		constexpr auto EpicSaveStinger = 0x100; // ObjectProperty
		constexpr auto MVPAnthem = 0x108; // ObjectProperty
	}

	namespace n_AArchetypeSpawnPoint_X {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x268; // FPointer
		constexpr auto ArchetypePath = 0x270; // FString
		constexpr auto bSeedNavMesh = 0x280; // uint32_t : 1
		constexpr auto bSpawnOnLevelStart = 0x280; // uint32_t : 1
		constexpr auto bOnlyAllowOneInstance = 0x280; // uint32_t : 1
		constexpr auto ActorArchetype = 0x288; // ObjectProperty
		constexpr auto PlacementSprite = 0x290; // ComponentProperty
		constexpr auto ArchetypeSkeletalMesh = 0x298; // ComponentProperty
		constexpr auto ArchetypeStaticMesh = 0x2a0; // ComponentProperty
		constexpr auto SpawnedActors = 0x2a8; // TArray<ObjectProperty>
		constexpr auto SpawnedActor = 0x2b8; // ObjectProperty
		constexpr auto __EventSpawned__Delegate = 0x2c0; // DelegateProperty
	}

	namespace n_UGFxData_StartMenu_TA {
		constexpr auto OnlineGame = 0x98; // ObjectProperty
		constexpr auto SigningInText = 0xa0; // FString
		constexpr auto SignInModal = 0xb0; // ObjectProperty
		constexpr auto ClickedControllerIndex = 0xb8; // int32_t
		constexpr auto __EventTitleScreenClicked__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_USeqVar_Int {
		constexpr auto IntValue = 0xe0; // int32_t
	}

	namespace n_UOnlineGamePopulation_X {
		constexpr auto UpdatePopulationDelay = 0x98; // float
		constexpr auto LastUpdatePopulationTime = 0x9c; // float
		constexpr auto GetPopulationRPC = 0xa0; // ObjectProperty
		constexpr auto TotalPlayers = 0xa8; // int32_t
		constexpr auto Populations = 0xb0; // TArray<FGetPopulationData>
		constexpr auto __EventGetPlaylistPopulations__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_URPC_GetChallengeDefault_TA {
		constexpr auto Challenges = 0xe8; // TArray<ObjectProperty>
		constexpr auto Folders = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_U__GFxData_MultiItemDrops_TA__HandleGroupSeen_5B0910594D17F1E3EE0CF4A5BA021067 {
		constexpr auto SaveData = 0x60; // ObjectProperty
	}

	namespace n_UPsyNetService_Echo_X {
		constexpr auto RequestString = 0x90; // FString
		constexpr auto ResponseString = 0xa0; // FString
	}

	namespace n_U__ArenaSoundManager_TA__HandleMatchWinnerSet_854DC32342E97646B0D679B0F24A2CD4 {
		constexpr auto InGameEvent = 0x60; // ObjectProperty
	}

	namespace n_UPsyNetService_AutoTourReceiveBan_TA {
		constexpr auto AutoTournamentBanSeconds = 0x90; // int32_t
		constexpr auto MatchmakingBanSeconds = 0x94; // int32_t
	}

	namespace n_U__OnlineClubCache_X__GetClubDetails_E539DA414781BAEA36ECA49F38631C0F {
		constexpr auto ClubID = 0x60; // QWordProperty
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0xc8; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xd8; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xd8; // uint32_t : 1
	}

	namespace n_UTextureFlipBook {
		constexpr auto VfTable_FTickableObject = 0x280; // FPointer
		constexpr auto TimeIntoMovie = 0x288; // float
		constexpr auto TimeSinceLastFrame = 0x28c; // float
		constexpr auto HorizontalScale = 0x290; // float
		constexpr auto VerticalScale = 0x294; // float
		constexpr auto bPaused = 0x298; // uint32_t : 1
		constexpr auto bStopped = 0x298; // uint32_t : 1
		constexpr auto bLooping = 0x298; // uint32_t : 1
		constexpr auto bAutoPlay = 0x298; // uint32_t : 1
		constexpr auto HorizontalImages = 0x29c; // int32_t
		constexpr auto VerticalImages = 0x2a0; // int32_t
		constexpr auto FBMethod = 0x2a4; // TextureFlipBookMethod
		constexpr auto FrameRate = 0x2a8; // float
		constexpr auto FrameTime = 0x2ac; // float
		constexpr auto CurrentRow = 0x2b0; // int32_t
		constexpr auto CurrentColumn = 0x2b4; // int32_t
		constexpr auto RenderOffsetU = 0x2b8; // float
		constexpr auto RenderOffsetV = 0x2bc; // float
		constexpr auto ReleaseResourcesFence = 0x2c0; // FPointer
	}

	namespace n_UOnlineGameSearch {
		constexpr auto MaxSearchResults = 0xa0; // int32_t
		constexpr auto Query = 0xa4; // FLocalizedStringSetting
		constexpr auto bIsLanQuery = 0xb0; // uint32_t : 1
		constexpr auto bUsesArbitration = 0xb0; // uint32_t : 1
		constexpr auto bIsSearchInProgress = 0xb0; // uint32_t : 1
		constexpr auto GameSettingsClass = 0xb8; // FNone*
		constexpr auto Results = 0xc0; // TArray<FOnlineGameSearchResult>
		constexpr auto ManualSkillOverride = 0xd0; // FOverrideSkill
		constexpr auto NamedProperties = 0x108; // TArray<FNamedObjectProperty>
		constexpr auto FilterQuery = 0x118; // FOnlineGameSearchQuery
		constexpr auto AdditionalSearchCriteria = 0x138; // FString
		constexpr auto PingBucketSize = 0x148; // int32_t
		constexpr auto NumPingProbes = 0x14c; // int32_t
		constexpr auto MaxPingBytes = 0x150; // int32_t
	}

	namespace n_UOnlinePlaylistGameTypeProvider {
		constexpr auto PlaylistGameTypeName = 0xa0; // FName
		constexpr auto DisplayName = 0xa8; // FString
		constexpr auto Description = 0xb8; // FString
		constexpr auto GameTypeId = 0xc8; // int32_t
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0xc0; // FExpressionInput
	}

	namespace n_ARB_Thruster {
		constexpr auto bThrustEnabled = 0x268; // uint32_t : 1
		constexpr auto ThrustStrength = 0x26c; // float
	}

	namespace n_USeqCond_IncrementFloat {
		constexpr auto IncrementAmount = 0x140; // float
		constexpr auto ValueA = 0x144; // float
		constexpr auto ValueB = 0x148; // float
	}

	namespace n_UOnlinePlayerStorageSync_X {
		constexpr auto __EventSyncSuccess__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UCameraState_X {
		constexpr auto DefaultBlendParams = 0x68; // FViewTargetTransitionParams
		constexpr auto WorldInfo = 0x78; // ObjectProperty
		constexpr auto Camera = 0x80; // ObjectProperty
		constexpr auto bCanSwivel = 0x88; // uint32_t : 1
	}

	namespace n_UBTAction_PowerSlide {
		constexpr auto bReverse = 0x160; // uint32_t : 1
		constexpr auto Delay = 0x164; // float
		constexpr auto TurnTarget = 0x168; // ObjectProperty
		constexpr auto Steer = 0x170; // float
		constexpr auto startYaw = 0x174; // int32_t
	}

	namespace n_AAmbientSoundSimpleSpline {
		constexpr auto EditedSlot = 0x2a0; // int32_t
	}

	namespace n_AGFxHUD_Soccar_TA {
		constexpr auto SoccarGame = 0x558; // ObjectProperty
		constexpr auto GFxServerPerformanceStats = 0x560; // ObjectProperty
		constexpr auto PreMatchLobby = 0x568; // ObjectProperty
	}

	namespace n_U__GFxShell_TA__ShowRankedReconnectModal_5496D3664963C2A1833B6EBC6C159736 {
		constexpr auto Reservation = 0x60; // FServerReservationData
	}

	namespace n_UConnectionQualitySave_TA {
		constexpr auto RollingBadPingTime = 0xc8; // float
		constexpr auto RollingBadJitterTime = 0xcc; // float
		constexpr auto RollingBadPacketLossTime = 0xd0; // float
		constexpr auto LastNotificationEpochSeconds = 0xd8; // QWordProperty
		constexpr auto bShowConnectionQualityIndicators = 0xe0; // uint32_t : 1
	}

	namespace n_USceneCaptureReflectComponent {
		constexpr auto TextureTarget = 0xf8; // ObjectProperty
		constexpr auto ScaleFOV = 0x100; // float
	}

	namespace n_U__OnlineGameDedicatedServer_TA__InitFlatbufferUpload_43EEC8DE4A871FE4D94959891E3774A0 {
		constexpr auto RPC = 0x60; // ObjectProperty
		constexpr auto Session = 0x68; // ObjectProperty
	}

	namespace n_U__PlayerControllerBase_TA__Say_TA_C08A2A614A4ACE6F4AA9948ADF9F7CCF {
		constexpr auto OnlinePlayer = 0x60; // ObjectProperty
		constexpr auto OnlineGame = 0x68; // ObjectProperty
		constexpr auto OnlineGameParty = 0x70; // ObjectProperty
		constexpr auto AllowedPlayers = 0x78; // TArray<FUniqueNetId>
	}

	namespace n_URocketPassConfig_TA {
		constexpr auto RocketPassID = 0x78; // int32_t
		constexpr auto StartTime = 0x80; // QWordProperty
		constexpr auto EndTime = 0x88; // QWordProperty
		constexpr auto StartRangeSeconds = 0x90; // int32_t
		constexpr auto FinalStartTime = 0x98; // QWordProperty
		constexpr auto bIsActive = 0xa0; // uint32_t : 1
		constexpr auto bHideMainMenuButton = 0xa0; // uint32_t : 1
		constexpr auto __bIsActive__ChangeNotify = 0xa8; // DelegateProperty
	}

	namespace n_UNavMeshPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto MaxPathVisits = 0x68; // int32_t
		constexpr auto bAlwaysCallEvaluateGoal = 0x6c; // uint32_t : 1
		constexpr auto bDoPartialAStar = 0x6c; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x70; // int32_t
		constexpr auto NumNodesProcessed = 0x74; // int32_t
		constexpr auto MaxOpenListSize = 0x78; // int32_t
	}

	namespace n_UOnlineGameDedicatedServer_TA {
		constexpr auto Tournaments = 0x3b0; // ObjectProperty
		constexpr auto LastPlaylistID = 0x3b8; // int32_t
		constexpr auto AllRelevantProducts = 0x3c0; // TArray<ObjectProperty>
		constexpr auto ReplayToUpload = 0x3d0; // ObjectProperty
		constexpr auto FlatbufferSession = 0x3d8; // ObjectProperty
		constexpr auto GameModesConfig = 0x3e0; // ObjectProperty
		constexpr auto __EventGameEventInitialized__Delegate = 0x3e8; // DelegateProperty
	}

	namespace n_U__GFxData_Clubs_TA__SetClubOwner_4C16C7FE4362201339B691B7F428B37C {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
	}

	namespace n_UGFxData_ViewMetrics_TA {
		constexpr auto bRecordingMetrics = 0x98; // uint32_t : 1
		constexpr auto ActiveViewID = 0x9c; // int32_t
		constexpr auto Config = 0xa0; // ObjectProperty
	}

	namespace n_U__GameObserver_TA__GetCarDataForPRI_3B7321684E89D3E169B09888AC15D4E5 {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_UViewMetrics_TA {
		constexpr auto Metrics = 0x80; // TArray<FViewData>
		constexpr auto SourceID = 0x90; // int32_t
		constexpr auto Descriptor = 0x94; // FName
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x258; // FColor
		constexpr auto FrustumAngle = 0x25c; // float
		constexpr auto FrustumAspectRatio = 0x260; // float
		constexpr auto FrustumStartDist = 0x264; // float
		constexpr auto FrustumEndDist = 0x268; // float
		constexpr auto Texture = 0x270; // ObjectProperty
	}

	namespace n_U__GFxData_Party_TA__ProcessInvitationResponse_66F6A1ED4C87BA4C68E1FC96C474607B {
		constexpr auto JoinPartyCallback = 0x60; // DelegateProperty
		constexpr auto PartyID = 0x78; // FUniqueLobbyId
	}

	namespace n_AVehiclePickup_TA {
		constexpr auto RespawnDelay = 0x268; // float
		constexpr auto FXActorArchetype = 0x270; // ObjectProperty
		constexpr auto FXActor = 0x278; // ObjectProperty
		constexpr auto PickedUpEvent = 0x280; // ObjectProperty
		constexpr auto LocalPickedUpEvent = 0x288; // ObjectProperty
		constexpr auto CylinderComponent = 0x290; // ComponentProperty
		constexpr auto ReplicatedPickupData = 0x298; // FPickupData
		constexpr auto NewReplicatedPickupData = 0x2a8; // FPickupData2
		constexpr auto bNetRelevant = 0x2b8; // uint32_t : 1
		constexpr auto bNoPickup = 0x2b8; // uint32_t : 1
		constexpr auto __EventSpawned__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __EventPickedUp__Delegate = 0x2d8; // DelegateProperty
	}

	namespace n_UGFxData_OnlineMatch_TA {
		constexpr auto TAPlayer = 0x98; // ObjectProperty
		constexpr auto Profile = 0xa0; // ObjectProperty
		constexpr auto NoRegionsMessage = 0xa8; // FString
		constexpr auto NotLoggedInPsynetMessage = 0xb8; // FString
		constexpr auto BannedMessage = 0xc8; // FString
		constexpr auto NotPartyLeaderMsg = 0xd8; // FString
		constexpr auto CountdownSeconds = 0xe8; // int32_t
		constexpr auto OnlineParty = 0xf0; // ObjectProperty
		constexpr auto OnlineStatusError = 0xf8; // FString
		constexpr auto SearchStatusData = 0x108; // ObjectProperty
		constexpr auto bSearching = 0x110; // uint32_t : 1
	}

	namespace n_UAnimNodeSequence_X {
		constexpr auto AnimSetBlendTime = 0x1a8; // float
		constexpr auto bResetOnRelevant = 0x1ac; // uint32_t : 1
		constexpr auto PrevAnimSeq = 0x1b0; // ObjectProperty
		constexpr auto PrevAnimLinkupIndex = 0x1b8; // int32_t
		constexpr auto BlendTimeLeft = 0x1bc; // float
	}

	namespace n_UTriggerCondition_TA {
		constexpr auto Clumps = 0x60; // TArray<ObjectProperty>
		constexpr auto Callback = 0x70; // DelegateProperty
		constexpr auto bRepeatable = 0x88; // uint32_t : 1
		constexpr auto __OnTriggersMet__Delegate = 0x90; // DelegateProperty
	}

	namespace n_URPC_SchematicsTradeIn_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto CrateID = 0x130; // FProductInstanceID
		constexpr auto Schematics = 0x140; // TArray<FSchematicResourceData>
		constexpr auto Drops = 0x150; // TArray<FOnlineProductData>
		constexpr auto CrateDrops = 0x160; // TArray<FOnlineProductData>
		constexpr auto ConsumedInstanceIDs = 0x170; // TArray<FProductInstanceID>
		constexpr auto Products = 0x180; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0xc8; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0xe0; // float
	}

	namespace n_UScriptViewportClient {
		constexpr auto VfTable_FViewportClient = 0x60; // FPointer
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto ControlEdgeName = 0x70; // FName
		constexpr auto SheetsPerTrail = 0x78; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x7c; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x7c; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x7c; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x7c; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x7c; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x7c; // uint32_t : 1
		constexpr auto bRenderTangents = 0x7c; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x7c; // uint32_t : 1
		constexpr auto TilingDistance = 0x80; // float
		constexpr auto DistanceTessellationStepSize = 0x84; // float
		constexpr auto TangentTessellationScalar = 0x88; // float
	}

	namespace n_UPsyNetConfig_X {
		constexpr auto bAllowPerCon = 0x78; // uint32_t : 1
		constexpr auto bRequiresPerCon = 0x78; // uint32_t : 1
		constexpr auto bAllowPsyNetParty = 0x78; // uint32_t : 1
		constexpr auto bSendPingMessage = 0x78; // uint32_t : 1
		constexpr auto bUploadServerBugReports = 0x78; // uint32_t : 1
		constexpr auto bAllowServerBacktraceUploads = 0x78; // uint32_t : 1
		constexpr auto bAllowServerBacktraceLogUploads = 0x78; // uint32_t : 1
		constexpr auto bAllowClientBacktraceUploads = 0x78; // uint32_t : 1
		constexpr auto bAllowClientBacktraceLogUploads = 0x78; // uint32_t : 1
		constexpr auto bUseMatchmakingNotifications = 0x78; // uint32_t : 1
		constexpr auto bUsePsyNetBeacon = 0x78; // uint32_t : 1
		constexpr auto bUseReservationsV3 = 0x78; // uint32_t : 1
		constexpr auto bAllowPlayerCancelMatch = 0x78; // uint32_t : 1
		constexpr auto bEnablePrime30596 = 0x78; // uint32_t : 1
		constexpr auto PerConTimeout = 0x7c; // float
		constexpr auto PerConPingInterval = 0x80; // float
		constexpr auto FreshConnectionWindow = 0x84; // float
		constexpr auto MatchmakingHeartbeatTimeSeconds = 0x88; // float
	}

	namespace n_UVanitySet_TA {
		constexpr auto Avatar = 0x60; // ComponentProperty
		constexpr auto Banner = 0x68; // ComponentProperty
		constexpr auto Border = 0x70; // ComponentProperty
	}

	namespace n_UTourMatchServerBrowser_TA {
		constexpr auto GetMatchTask = 0x60; // ObjectProperty
		constexpr auto __OnGetMatchServer__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UWheelSpeedComponent_TA {
		constexpr auto Car = 0xa8; // ObjectProperty
		constexpr auto WheelForwardSpeedInterpRate = 0xb0; // float
		constexpr auto WheelSideSpeedInterpRate = 0xb4; // float
		constexpr auto MaxWheelSpeed = 0xb8; // float
		constexpr auto AvgWheelForwardSpeed = 0xbc; // float
		constexpr auto AvgWheelSideSpeed = 0xc0; // float
		constexpr auto AvgWheelSpinSpeed = 0xc4; // float
		constexpr auto OldWheelRotation = 0xc8; // float
		constexpr auto WheelTurnSpeed = 0xcc; // float
	}

	namespace n_AGameEvent_Tutorial_TA {
		constexpr auto TotalFieldExtent = 0xc78; // FVector
		constexpr auto TeamNum = 0xc84; // int32_t
		constexpr auto BallGoalNum = 0xc88; // int32_t
		constexpr auto bOnlyScoreInBallGoalNum = 0xc8c; // uint32_t : 1
		constexpr auto bRedoRound = 0xc8c; // uint32_t : 1
		constexpr auto bAllowSuperBoost = 0xc8c; // uint32_t : 1
		constexpr auto bDisplayedRedoPenaltyMessage = 0xc8c; // uint32_t : 1
		constexpr auto bShowBoostMeter = 0xc8c; // uint32_t : 1
		constexpr auto Difficulty = 0xc90; // EDifficulty
		constexpr auto DebugRotationType = 0xc91; // ERotationType
		constexpr auto DifficultyList = 0xc98; // FDifficultyInfo [0x3]
		constexpr auto WaveIndexesLeft = 0xd10; // TArray<int32_t>
		constexpr auto GoalDepth = 0xd20; // float
		constexpr auto GameEventRounds = 0xd24; // int32_t
		constexpr auto EventStartTime = 0xd28; // float
		constexpr auto BallInitialVelocity = 0xd2c; // FVector
		constexpr auto SpawnIndexTypeOverride = 0xd38; // int32_t
		constexpr auto Cannon = 0xd40; // ObjectProperty
		constexpr auto WaveIndex = 0xd48; // int32_t
		constexpr auto WaveSpawnCount = 0xd4c; // int32_t
		constexpr auto RandomSpawnIndex = 0xd50; // int32_t
		constexpr auto Tutorial = 0xd58; // ObjectProperty
		constexpr auto StartMessageArchetype = 0xd60; // FString
		constexpr auto BallSpawnLocation = 0xd70; // FVector
		constexpr auto CarSpawns = 0xd80; // TArray<FCarSpawnData>
		constexpr auto PointsScoredThisRound = 0xd90; // int32_t
		constexpr auto BallSpawnCount = 0xd94; // int32_t
		constexpr auto BallBounceScale = 0xd98; // float
		constexpr auto CannonArchetype = 0xda0; // ObjectProperty
		constexpr auto DynamicSpawnPoint = 0xda8; // ObjectProperty
		constexpr auto CurrentDebugStepX = 0xdb0; // int32_t
		constexpr auto CurrentDebugStepY = 0xdb4; // int32_t
		constexpr auto CurrentDebugStepZ = 0xdb8; // int32_t
		constexpr auto RedoCount = 0xdbc; // int32_t
		constexpr auto RedoTotal = 0xdc0; // int32_t
		constexpr auto ResetModal = 0xdc8; // ObjectProperty
		constexpr auto BallSpawnInfo = 0xdd0; // FFieldSpawnInfo
		constexpr auto __EventRoundFinished__Delegate = 0xe10; // DelegateProperty
		constexpr auto __EventVehicleSetup__Delegate = 0xe28; // DelegateProperty
		constexpr auto __EventScoreUpdated__Delegate = 0xe40; // DelegateProperty
		constexpr auto __EventDifficultyUpdated__Delegate = 0xe58; // DelegateProperty
		constexpr auto __EventShowBoostMeterChanged__Delegate = 0xe70; // DelegateProperty
		constexpr auto __EventUseActionsChanged__Delegate = 0xe88; // DelegateProperty
		constexpr auto __EventTutorialTipChanged__Delegate = 0xea0; // DelegateProperty
	}

	namespace n_UFreeToPlayConfig_TA {
		constexpr auto bRequireOnlineSubscription = 0x78; // uint32_t : 1
	}

	namespace n_AGameInfo_CollisionTest_TA {
		constexpr auto TestComponents = 0x4d8; // TArray<ComponentProperty>
		constexpr auto CurrentTest = 0x4e8; // ComponentProperty
		constexpr auto CurrentIndex = 0x4f0; // int32_t
		constexpr auto CurrentActor = 0x4f8; // ObjectProperty
		constexpr auto bRepeat = 0x500; // uint32_t : 1
	}

	namespace n_USoundNodeAmbient {
		constexpr auto bAttenuate = 0x78; // uint32_t : 1
		constexpr auto bSpatialize = 0x78; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x78; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x7c; // float
		constexpr auto DistanceModel = 0x80; // SoundDistanceModel
		constexpr auto RadiusMin = 0x84; // float
		constexpr auto RadiusMax = 0x88; // float
		constexpr auto LPFRadiusMin = 0x8c; // float
		constexpr auto LPFRadiusMax = 0x90; // float
		constexpr auto PitchMin = 0x94; // float
		constexpr auto PitchMax = 0x98; // float
		constexpr auto VolumeMin = 0x9c; // float
		constexpr auto VolumeMax = 0xa0; // float
		constexpr auto SoundSlots = 0xa8; // TArray<FAmbientSoundSlot>
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x70; // ObjectProperty
		constexpr auto MeshParamName = 0x78; // FName
		constexpr auto CastShadows = 0x80; // uint32_t : 1
		constexpr auto DoCollisions = 0x80; // uint32_t : 1
		constexpr auto bAllowMotionBlur = 0x80; // uint32_t : 1
		constexpr auto bOverrideMaterial = 0x80; // uint32_t : 1
		constexpr auto bCameraFacing = 0x80; // uint32_t : 1
		constexpr auto bApplyParticleRotationAsSpin = 0x80; // uint32_t : 1
		constexpr auto MeshAlignment = 0x84; // EMeshScreenAlignment
		constexpr auto AxisLockOption = 0x85; // EParticleAxisLock
		constexpr auto CameraFacingUpAxisOption = 0x86; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x87; // EMeshCameraFacingOptions
		constexpr auto Pitch = 0x88; // float
		constexpr auto Roll = 0x8c; // float
		constexpr auto Yaw = 0x90; // float
	}

	namespace n_UOnlineGameWordFilter_X {
		constexpr auto Filtered = 0x98; // TArray<FWordFilterPair>
		constexpr auto Config = 0xa8; // ObjectProperty
		constexpr auto PsyNetWordFilter = 0xb0; // ComponentProperty
	}

	namespace n_USaveObjectSerializer_TA {
		constexpr auto Version = 0x60; // int32_t
		constexpr auto Result = 0x64; // EBasicLoadResult
	}

	namespace n_AReplayDirector_TA {
		constexpr auto SlomoPreScoreTime = 0x268; // float
		constexpr auto SlomoPostScoreTime = 0x26c; // float
		constexpr auto SlomoDefendTime = 0x270; // float
		constexpr auto SlomoDefendDistance = 0x274; // float
		constexpr auto SlomoTimeDilation = 0x278; // float
		constexpr auto MinReplayTime = 0x27c; // float
		constexpr auto MaxReplayTime = 0x280; // float
		constexpr auto ReplayPadding = 0x284; // float
		constexpr auto ReplayStartSound = 0x288; // ObjectProperty
		constexpr auto SlomoStartSound = 0x290; // ObjectProperty
		constexpr auto SlomoStopSound = 0x298; // ObjectProperty
		constexpr auto LiveReplayStateGroup = 0x2a0; // FName
		constexpr auto LiveReplay_PreScore = 0x2a8; // FName
		constexpr auto LiveReplay_Slomo = 0x2b0; // FName
		constexpr auto LiveReplay_PostGoal = 0x2b8; // FName
		constexpr auto LiveReplay_None = 0x2c0; // FName
		constexpr auto HighlightReplayDuration = 0x2c8; // float
		constexpr auto TimeBeforeHighlightReplay = 0x2cc; // float
		constexpr auto Replay = 0x2d0; // ObjectProperty
		constexpr auto FocusCar = 0x2d8; // ObjectProperty
		constexpr auto FocusCarChangeTime = 0x2e0; // float
		constexpr auto FocusBall = 0x2e8; // ObjectProperty
		constexpr auto BallTouches = 0x2f0; // TArray<FBallHitInfo>
		constexpr auto BallName = 0x300; // FName
		constexpr auto ScoreTime = 0x308; // float
		constexpr auto ScoreHitIndex = 0x30c; // int32_t
		constexpr auto ScoredGoal = 0x310; // ComponentProperty
		constexpr auto bSlomo = 0x318; // uint32_t : 1
		constexpr auto bReplicatedSlomo = 0x318; // uint32_t : 1
		constexpr auto bSlomoForDefender = 0x318; // uint32_t : 1
		constexpr auto bAutoSave = 0x318; // uint32_t : 1
		constexpr auto FocusHitIndex = 0x31c; // int32_t
		constexpr auto FocusCars = 0x320; // TArray<FReplayFocusCar>
		constexpr auto FocusCarIdx = 0x330; // int32_t
		constexpr auto ReplayStartGameTime = 0x334; // float
		constexpr auto BallSpawnTime = 0x338; // float
		constexpr auto SoccarGame = 0x340; // ObjectProperty
		constexpr auto ScoredOnTeam = 0x348; // char
		constexpr auto ScoreData = 0x350; // FReplayScoreData
		constexpr auto PreviousScores = 0x370; // int32_t [0x2]
		constexpr auto ForceCutToFocusActors = 0x378; // int32_t
		constexpr auto CameraConfig = 0x380; // ObjectProperty
		constexpr auto __EventReplayFinished__Delegate = 0x388; // DelegateProperty
		constexpr auto __EventScoreDataChanged__Delegate = 0x3a0; // DelegateProperty
		constexpr auto __EventAutoSaveChanged__Delegate = 0x3b8; // DelegateProperty
		constexpr auto __EventFocusCarChanged__Delegate = 0x3d0; // DelegateProperty
	}

	namespace n_UMatchRecorder_TA {
		constexpr auto PRIs = 0x78; // TArray<ObjectProperty>
		constexpr auto SoccarGame = 0x88; // ObjectProperty
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x88; // FName
		constexpr auto MinInput = 0x90; // float
		constexpr auto MaxInput = 0x94; // float
		constexpr auto MinOutput = 0x98; // float
		constexpr auto MaxOutput = 0x9c; // float
		constexpr auto ParamMode = 0xa0; // DistributionParamMode
	}

	namespace n_U__Loadout_TA__ApplyCompatibleAttributeProducts_3ABDCFD84629CD94A77A9AB48466982A {
		constexpr auto EquippedBodyID = 0x60; // int32_t
	}

	namespace n_UUberPostProcessEffect {
		constexpr auto SceneShadows = 0xf8; // FVector
		constexpr auto SceneHighLights = 0x104; // FVector
		constexpr auto SceneMidTones = 0x110; // FVector
		constexpr auto SceneDesaturation = 0x11c; // float
		constexpr auto SceneColorize = 0x120; // FVector
		constexpr auto TonemapperType = 0x12c; // ETonemapperType
		constexpr auto PostProcessAAType = 0x12d; // EPostProcessAAType
		constexpr auto TonemapperRange = 0x130; // float
		constexpr auto TonemapperToeFactor = 0x134; // float
		constexpr auto TonemapperScale = 0x138; // float
		constexpr auto MotionBlurSoftEdgeKernelSize = 0x13c; // float
		constexpr auto bEnableImageGrain = 0x140; // uint32_t : 1
		constexpr auto bScaleEffectsWithViewSize = 0x140; // uint32_t : 1
		constexpr auto bEnableHDRTonemapper = 0x140; // uint32_t : 1
		constexpr auto SceneImageGrainScale = 0x144; // float
		constexpr auto BloomWeightSmall = 0x148; // float
		constexpr auto BloomWeightMedium = 0x14c; // float
		constexpr auto BloomWeightLarge = 0x150; // float
		constexpr auto BloomSizeScaleSmall = 0x154; // float
		constexpr auto BloomSizeScaleMedium = 0x158; // float
		constexpr auto BloomSizeScaleLarge = 0x15c; // float
		constexpr auto EdgeDetectionThreshold = 0x160; // float
		constexpr auto PreviousLUTBlender = 0x168; // FLUTBlender
		constexpr auto SceneHDRTonemapperScale = 0x190; // float
	}

	namespace n_UGameObserver_TA {
		constexpr auto HitTimeToBallMin = 0xa8; // float
		constexpr auto HitTimeToBallMax = 0xac; // float
		constexpr auto HitPredictDistMax = 0xb0; // float
		constexpr auto HitPredictDistMin = 0xb4; // float
		constexpr auto OffenseDotBetweenMin = 0xb8; // float
		constexpr auto OffenseDotBetweenMax = 0xbc; // float
		constexpr auto OffenseDistToGoalMin = 0xc0; // float
		constexpr auto OffenseDistToGoalMax = 0xc4; // float
		constexpr auto OffenseDistToBallMin = 0xc8; // float
		constexpr auto OffenseDistToBallMax = 0xcc; // float
		constexpr auto DefenseDotBetweenMin = 0xd0; // float
		constexpr auto DefenseDotBetweenMax = 0xd4; // float
		constexpr auto DefenseDistToGoalMin = 0xd8; // float
		constexpr auto DefenseDistToGoalMax = 0xdc; // float
		constexpr auto DefenseDistToBallMin = 0xe0; // float
		constexpr auto DefenseDistToBallMax = 0xe4; // float
		constexpr auto ScorabilityDistToBallMin = 0xe8; // float
		constexpr auto ScorabilityDistToBallMax = 0xec; // float
		constexpr auto ScorabilityDistToBallWeight = 0xf0; // float
		constexpr auto ScorabilityDotToBallMin = 0xf4; // float
		constexpr auto ScorabilityDotToBallMax = 0xf8; // float
		constexpr auto ScorabilityDotToBallWeight = 0xfc; // float
		constexpr auto ScorabilityOffenseWeight = 0x100; // float
		constexpr auto ScorabilityDefenseWeight = 0x104; // float
		constexpr auto CarBallAerialBlend = 0x108; // float
		constexpr auto MaxAerialHitProbability = 0x10c; // float
		constexpr auto bDebugCarData = 0x110; // uint32_t : 1
		constexpr auto bDebugGoalData = 0x110; // uint32_t : 1
		constexpr auto bDebugBallData = 0x110; // uint32_t : 1
		constexpr auto bDebugPrediction = 0x110; // uint32_t : 1
		constexpr auto RelevantCars = 0x118; // TArray<FCarData>
		constexpr auto RelevantGoals = 0x128; // TArray<FGoalData>
		constexpr auto MinAerialAltitude = 0x138; // float
		constexpr auto MaxAerialAltitude = 0x13c; // float
		constexpr auto AerialLikelyhood = 0x140; // float
		constexpr auto MaxCalculatedTimeToBall = 0x144; // float
		constexpr auto RelevantBall = 0x148; // FBallData
		constexpr auto Listeners = 0x168; // TArray<ObjectProperty>
		constexpr auto HighestScorability = 0x178; // float
		constexpr auto ClosestBallToGoal = 0x17c; // float
		constexpr auto HighestAerialCar = 0x180; // FCarData
		constexpr auto ClosestGoalToBall = 0x1d8; // FGoalData
		constexpr auto __EventCarHitBall__Delegate = 0x220; // DelegateProperty
	}

	namespace n_UOnlineGameTourServer_TA {
		constexpr auto TourSettings = 0x98; // FTourServerSettings
		constexpr auto ReservationsTourSettings = 0x180; // FTourServerSettings
		constexpr auto MapSet = 0x268; // ObjectProperty
		constexpr auto GameUpdateDispatcher = 0x270; // ObjectProperty
		constexpr auto TourServerInfo = 0x278; // ObjectProperty
		constexpr auto TeamIDs = 0x280; // TArray<QWordProperty>
		constexpr auto TournamentServerConfig = 0x290; // ObjectProperty
	}

	namespace n_UGFxData_RewardDrops_TA {
		constexpr auto RewardName = 0x98; // FName
		constexpr auto Total = 0xa0; // int32_t
		constexpr auto Base = 0xa4; // int32_t
		constexpr auto BaseLevel = 0xa8; // int32_t
		constexpr auto Level = 0xac; // int32_t
		constexpr auto LevelThresholds = 0xb0; // TArray<FGFxLevelThreshold>
		constexpr auto Modifiers = 0xc0; // TArray<FOnlineXPModifier>
		constexpr auto RewardDrops = 0xd0; // ComponentProperty
		constexpr auto PremiumModifierNames = 0xd8; // TArray<FName>
		constexpr auto PenaltyModifierNames = 0xe8; // TArray<FName>
		constexpr auto PromoModifierNames = 0xf8; // TArray<FName>
		constexpr auto WeeklyCapReached = 0x108; // FName
		constexpr auto RewardModifiers_SectionName = 0x110; // FString
		constexpr auto RewardModifiers_PackageName = 0x120; // FString
		constexpr auto WeeklyCap = 0x130; // FName
		constexpr auto RestXP = 0x138; // FName
		constexpr auto bCanDropOnlineRewards = 0x140; // uint32_t : 1
	}

	namespace n_AStatFactory_Basketball_TA {
		constexpr auto HoopsSwishGoal = 0x458; // ObjectProperty
		constexpr auto RedZoneHeightScale = 0x460; // float
	}

	namespace n_UPriAssetCache_TA {
		constexpr auto PRI = 0x60; // ObjectProperty
		constexpr auto Products = 0x68; // TArray<int32_t>
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x70; // uint32_t : 1
		constexpr auto bAttach = 0x70; // uint32_t : 1
		constexpr auto bPreview = 0x70; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x70; // uint32_t : 1
		constexpr auto PSNonExtremeContentTemplate = 0x78; // ObjectProperty
		constexpr auto SocketName = 0x80; // FName
		constexpr auto BoneName = 0x88; // FName
		constexpr auto BoneSocketModuleActorName = 0x90; // FName
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
		constexpr auto Radius = 0x130; // FExpressionInput
		constexpr auto Hardness = 0x168; // FExpressionInput
		constexpr auto AttenuationRadius = 0x1a0; // float
		constexpr auto HardnessPercent = 0x1a4; // float
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto PosX = 0xc0; // int32_t
		constexpr auto PosY = 0xc4; // int32_t
		constexpr auto SizeX = 0xc8; // int32_t
		constexpr auto SizeY = 0xcc; // int32_t
		constexpr auto Text = 0xd0; // FString
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x70; // ObjectProperty
		constexpr auto ScreenAlignment = 0x78; // EParticleScreenAlignment
		constexpr auto SortMode = 0x79; // EParticleSortMode
		constexpr auto ParticleBurstMethod = 0x7a; // EParticleBurstMethod
		constexpr auto InterpolationMethod = 0x7b; // EParticleSubUVInterpMethod
		constexpr auto EmitterNormalsMode = 0x7c; // EEmitterNormalsMode
		constexpr auto bAllowImageFlipping = 0x80; // uint32_t : 1
		constexpr auto bSquareImageFlipping = 0x80; // uint32_t : 1
		constexpr auto bUseLocalSpace = 0x80; // uint32_t : 1
		constexpr auto bKillOnDeactivate = 0x80; // uint32_t : 1
		constexpr auto bKillOnCompleted = 0x80; // uint32_t : 1
		constexpr auto bRequiresSorting = 0x80; // uint32_t : 1
		constexpr auto bUseLegacyEmitterTime = 0x80; // uint32_t : 1
		constexpr auto bEnableNearParticleCulling = 0x80; // uint32_t : 1
		constexpr auto bEnableFarParticleCulling = 0x80; // uint32_t : 1
		constexpr auto bEmitterDurationUseRange = 0x80; // uint32_t : 1
		constexpr auto bDurationRecalcEachLoop = 0x80; // uint32_t : 1
		constexpr auto bEmitterDelayUseRange = 0x80; // uint32_t : 1
		constexpr auto bDelayFirstLoopOnly = 0x80; // uint32_t : 1
		constexpr auto bScaleUV = 0x80; // uint32_t : 1
		constexpr auto bDirectUV = 0x80; // uint32_t : 1
		constexpr auto bOverrideSystemMacroUV = 0x80; // uint32_t : 1
		constexpr auto bUseMaxDrawCount = 0x80; // uint32_t : 1
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x80; // uint32_t : 1
		constexpr auto NearCullDistance = 0x84; // float
		constexpr auto NearFadeDistance = 0x88; // float
		constexpr auto FarFadeDistance = 0x8c; // float
		constexpr auto FarCullDistance = 0x90; // float
		constexpr auto EmitterDuration = 0x94; // float
		constexpr auto EmitterDurationLow = 0x98; // float
		constexpr auto EmitterLoops = 0x9c; // int32_t
		constexpr auto SpawnRate = 0xa0; // FRawDistributionFloat
		constexpr auto BurstList = 0xc8; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xd8; // float
		constexpr auto EmitterDelayLow = 0xdc; // float
		constexpr auto SubImages_Horizontal = 0xe0; // int32_t
		constexpr auto SubImages_Vertical = 0xe4; // int32_t
		constexpr auto RandomImageTime = 0xe8; // float
		constexpr auto RandomImageChanges = 0xec; // int32_t
		constexpr auto MacroUVPosition = 0xf0; // FVector
		constexpr auto MacroUVRadius = 0xfc; // float
		constexpr auto MaxDrawCount = 0x100; // int32_t
		constexpr auto DownsampleThresholdScreenFraction = 0x104; // float
		constexpr auto NormalsSphereCenter = 0x108; // FVector
		constexpr auto NormalsCylinderDirection = 0x114; // FVector
	}

	namespace n_USeqAct_ActivateRemoteEvent {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto EventName = 0x168; // FName
		constexpr auto bStatusIsOk = 0x170; // uint32_t : 1
	}

	namespace n_UClientBeaconAddressResolver {
		constexpr auto BeaconPort = 0x60; // int32_t
		constexpr auto BeaconName = 0x64; // FName
	}

	namespace n_UDecodeObjectUObject_X {
		constexpr auto ObjectSerializer = 0x70; // ObjectProperty
		constexpr auto Stream = 0x78; // TArray<char>
	}

	namespace n_UTourEventMatchComplete_TA {
		constexpr auto GameEvent = 0x60; // ObjectProperty
		constexpr auto __EventMatchComplete__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UPBRuleNodeVariation {
		constexpr auto bVariationOfScopeOnLeft = 0x98; // uint32_t : 1
	}

	namespace n_URPC_PartyChat_X {
		constexpr auto Message = 0xf8; // FString
	}

	namespace n_UCanvas {
		constexpr auto Font = 0x60; // ObjectProperty
		constexpr auto OrgX = 0x68; // float
		constexpr auto OrgY = 0x6c; // float
		constexpr auto ClipX = 0x70; // float
		constexpr auto ClipY = 0x74; // float
		constexpr auto CurX = 0x78; // float
		constexpr auto CurY = 0x7c; // float
		constexpr auto CurZ = 0x80; // float
		constexpr auto CurYL = 0x84; // float
		constexpr auto DrawColor = 0x88; // FColor
		constexpr auto bCenter = 0x8c; // uint32_t : 1
		constexpr auto bNoSmooth = 0x8c; // uint32_t : 1
		constexpr auto SizeX = 0x90; // int32_t
		constexpr auto SizeY = 0x94; // int32_t
		constexpr auto Canvas = 0x98; // FPointer
		constexpr auto SceneView = 0xa0; // FPointer
		constexpr auto ColorModulate = 0xb0; // FPlane
		constexpr auto DefaultTexture = 0xc0; // ObjectProperty
	}

	namespace n_U__OnlineGameParty_X__HandleClientReservationMessage_50B8198C4D8D23BB465593B2F6B209BC {
		constexpr auto Message = 0x60; // ObjectProperty
		constexpr auto Settings = 0x68; // FJoinMatchSettings
	}

	namespace n_UBotDetection_TA {
		constexpr auto ThrottleThreshold = 0xa8; // float
		constexpr auto AirRollThreshold = 0xac; // float
		constexpr auto CameraRotationThreshold = 0xb0; // float
		constexpr auto PlayerStats = 0xb8; // TArray<FPlayerAggregateStats>
		constexpr auto BotConfig = 0xc8; // ObjectProperty
		constexpr auto SoccarData = 0xd0; // ObjectProperty
	}

	namespace n_UMutator_Booster_TA {
		constexpr auto bNoBooster = 0x68; // uint32_t : 1
		constexpr auto bUnlimitedBoost = 0x68; // uint32_t : 1
		constexpr auto bBoostRechargeGroundOnly = 0x68; // uint32_t : 1
		constexpr auto bOverrideStartBoost = 0x68; // uint32_t : 1
		constexpr auto BoostStrength = 0x6c; // float
		constexpr auto BoostRechargeRate = 0x70; // float
		constexpr auto BoostRechargeDelay = 0x74; // float
		constexpr auto BoostStartAmount = 0x78; // float
	}

	namespace n_UEOSGameClipsInterface_X {
		constexpr auto GameClipsHandle = 0x98; // FPointer
		constexpr auto StatusChangedCallbackId = 0xa0; // QWordProperty
		constexpr auto GameClipsAvailability = 0xa8; // EOSGameClipsAvailability
		constexpr auto BackgroundRecordingEnabledSeconds = 0xb0; // QWordProperty
		constexpr auto AvailableTargets = 0xb8; // int32_t
		constexpr auto bRecording = 0xbc; // uint32_t : 1
		constexpr auto bCanClip = 0xbc; // uint32_t : 1
		constexpr auto __EventGameClipsAvailabilityChanged__Delegate = 0xc0; // DelegateProperty
		constexpr auto __EventAvailableTargetsChanged__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventGameClipSaved__Delegate = 0xf0; // DelegateProperty
	}

	namespace n_UUIMapSummary {
		constexpr auto MapName = 0xa0; // FString
		constexpr auto ScreenshotPathName = 0xb0; // FString
		constexpr auto DisplayName = 0xc0; // FString
		constexpr auto Description = 0xd0; // FString
	}

	namespace n_UBTC_ClosestTime {
		constexpr auto TimeGreaterThan = 0x218; // float
		constexpr auto TimeLessThan = 0x21c; // float
	}

	namespace n_URPC_X {
		constexpr auto Service = 0x60; // FString
		constexpr auto Version = 0x70; // int32_t
		constexpr auto ServiceFailRetryDelay = 0x74; // float
		constexpr auto bAllowBatching = 0x78; // uint32_t : 1
		constexpr auto bRequiresAuth = 0x78; // uint32_t : 1
		constexpr auto bDisposed = 0x78; // uint32_t : 1
		constexpr auto Priority = 0x7c; // ERPCPriority
		constexpr auto Headers = 0x80; // TArray<FKeyValuePair>
		constexpr auto Error = 0x90; // ObjectProperty
		constexpr auto Task = 0x98; // ObjectProperty
		constexpr auto __EventSuccess__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventFail__Delegate = 0xb8; // DelegateProperty
		constexpr auto __EventComplete__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_ASpecialPickup_Attachment_TA {
		constexpr auto AttachmentArchetype = 0x388; // ObjectProperty
		constexpr auto Attachment = 0x390; // ObjectProperty
	}

	namespace n_URB_BodyInstance {
		constexpr auto OwnerComponent = 0x60; // ComponentProperty
		constexpr auto BodyIndex = 0x68; // int32_t
		constexpr auto Velocity = 0x6c; // FVector
		constexpr auto PreviousVelocity = 0x78; // FVector
		constexpr auto SceneIndex = 0x84; // int32_t
		constexpr auto BodyData = 0x88; // FPointer
		constexpr auto BulletBodys = 0x90; // TArray<FBulletBodyData>
		constexpr auto BoneSpring = 0xa0; // FPointer
		constexpr auto BoneSpringKinActor = 0xa8; // FPointer
		constexpr auto bEnableBoneSpringLinear = 0xb0; // uint32_t : 1
		constexpr auto bEnableBoneSpringAngular = 0xb0; // uint32_t : 1
		constexpr auto bDisableOnOverextension = 0xb0; // uint32_t : 1
		constexpr auto bNotifyOwnerOnOverextension = 0xb0; // uint32_t : 1
		constexpr auto bTeleportOnOverextension = 0xb0; // uint32_t : 1
		constexpr auto bUseKinActorForBoneSpring = 0xb0; // uint32_t : 1
		constexpr auto bMakeSpringToBaseCollisionComponent = 0xb0; // uint32_t : 1
		constexpr auto bOnlyCollideWithPawns = 0xb0; // uint32_t : 1
		constexpr auto bEnableCollisionResponse = 0xb0; // uint32_t : 1
		constexpr auto bPushBody = 0xb0; // uint32_t : 1
		constexpr auto bForceUnfixed = 0xb0; // uint32_t : 1
		constexpr auto bInstanceAlwaysFullAnimWeight = 0xb0; // uint32_t : 1
		constexpr auto BoneLinearSpring = 0xb4; // float
		constexpr auto BoneLinearDamping = 0xb8; // float
		constexpr auto BoneAngularSpring = 0xbc; // float
		constexpr auto BoneAngularDamping = 0xc0; // float
		constexpr auto OverextensionThreshold = 0xc4; // float
		constexpr auto CustomGravityFactor = 0xc8; // float
		constexpr auto LastEffectPlayedTime = 0xcc; // float
		constexpr auto PhysMaterialOverride = 0xd0; // ObjectProperty
		constexpr auto ContactReportForceThreshold = 0xd8; // float
		constexpr auto InstanceMassScale = 0xdc; // float
		constexpr auto InstanceDampingScale = 0xe0; // float
	}

	namespace n_URPC_PartyMessage_X {
		constexpr auto Message = 0xf8; // FString
	}

	namespace n_UGameData_TA {
		constexpr auto Products = 0x60; // ObjectProperty
		constexpr auto XPManager = 0x68; // ObjectProperty
		constexpr auto MaxTeamSize = 0x70; // int32_t
		constexpr auto ProductSlots = 0x78; // TArray<ObjectProperty>
		constexpr auto SlotLoadOrder = 0x88; // TArray<ObjectProperty>
		constexpr auto BodySlot = 0x98; // ObjectProperty
		constexpr auto SkinSlot = 0xa0; // ObjectProperty
		constexpr auto WheelSlot = 0xa8; // ObjectProperty
		constexpr auto BoostSlot = 0xb0; // ObjectProperty
		constexpr auto AntennaSlot = 0xb8; // ObjectProperty
		constexpr auto HatSlot = 0xc0; // ObjectProperty
		constexpr auto FrontSlot = 0xc8; // ObjectProperty
		constexpr auto PaintFinishSlot = 0xd0; // ObjectProperty
		constexpr auto BotSlot = 0xd8; // ObjectProperty
		constexpr auto LogoSlot = 0xe0; // ObjectProperty
		constexpr auto UnderGlowSlot = 0xe8; // ObjectProperty
		constexpr auto PremiumInventorySlot = 0xf0; // ObjectProperty
		constexpr auto CustomFinishSlot = 0xf8; // ObjectProperty
		constexpr auto EngineAudioSlot = 0x100; // ObjectProperty
		constexpr auto SupersonicTrailSlot = 0x108; // ObjectProperty
		constexpr auto GoalExplosionSlot = 0x110; // ObjectProperty
		constexpr auto PlayerBannerSlot = 0x118; // ObjectProperty
		constexpr auto PlayerTitleSlot = 0x120; // ObjectProperty
		constexpr auto ESportsTeamSlot = 0x128; // ObjectProperty
		constexpr auto ArchiveSlot = 0x130; // ObjectProperty
		constexpr auto AllSlot = 0x138; // ObjectProperty
		constexpr auto ShopItemSlot = 0x140; // ObjectProperty
		constexpr auto CurrencySlot = 0x148; // ObjectProperty
		constexpr auto PlayerAvatarSlot = 0x150; // ObjectProperty
		constexpr auto PlayerAvatarBorderSlot = 0x158; // ObjectProperty
		constexpr auto GiftPackSlot = 0x160; // ObjectProperty
		constexpr auto BlueprintSlot = 0x168; // ObjectProperty
		constexpr auto MusicStingersSlot = 0x170; // ObjectProperty
		constexpr auto TeamArchetypePaths = 0x178; // TArray<FString>
		constexpr auto TeamArchetypes = 0x188; // TArray<ObjectProperty>
		constexpr auto GameModeListPath = 0x198; // FString
		constexpr auto GameModeList = 0x1a8; // ObjectProperty
		constexpr auto DefaultLoadouts = 0x1b0; // FLoadoutData [0x2]
		constexpr auto DefaultClientLoadout = 0x230; // FClientLoadoutData
		constexpr auto CustomColorSet = 0x240; // ObjectProperty
		constexpr auto ClubColorSet = 0x248; // ObjectProperty
		constexpr auto ClubColorSet_v1 = 0x250; // ObjectProperty
		constexpr auto PlayerBannerColorSet = 0x258; // ObjectProperty
		constexpr auto PlayerVanityColorSet = 0x260; // ObjectProperty
		constexpr auto MapList = 0x268; // ObjectProperty
		constexpr auto GlobalLookupTexture = 0x270; // ObjectProperty
		constexpr auto OnlineProductAttributes = 0x278; // TArray<FNone*>
		constexpr auto SkinOverrideTable = 0x288; // ObjectProperty
		constexpr auto PaintDB = 0x290; // ObjectProperty
		constexpr auto CertifiedStatDB = 0x298; // ObjectProperty
		constexpr auto SpecialEditionDB = 0x2a0; // ObjectProperty
		constexpr auto ESportsTeamDB = 0x2a8; // ObjectProperty
	}

	namespace n_UPartyLeaderChangedEvent_TA {
		constexpr auto PlayerID = 0x60; // FUniqueNetId
		constexpr auto NewLeaderID = 0xa8; // FUniqueNetId
		constexpr auto NewFollowerIds = 0xf0; // TArray<FUniqueNetId>
		constexpr auto VoterOwner = 0x100; // ObjectProperty
	}

	namespace n_U__GFxData_TourSubscriptions_TA__Unsubscribe_DA5A8A7540782F3A2167C6B24DD262ED {
		constexpr auto Party = 0x60; // ObjectProperty
		constexpr auto TimerDelegate = 0x68; // DelegateProperty
	}

	namespace n_USeqAct_ActorFactory {
		constexpr auto bEnabled = 0x178; // uint32_t : 1
		constexpr auto bIsSpawning = 0x178; // uint32_t : 1
		constexpr auto bCheckSpawnCollision = 0x178; // uint32_t : 1
		constexpr auto Factory = 0x180; // ObjectProperty
		constexpr auto PointSelection = 0x188; // EPointSelection
		constexpr auto SpawnPoints = 0x190; // TArray<ObjectProperty>
		constexpr auto SpawnLocations = 0x1a0; // TArray<FVector>
		constexpr auto SpawnOrientations = 0x1b0; // TArray<FVector>
		constexpr auto SpawnCount = 0x1c0; // int32_t
		constexpr auto SpawnDelay = 0x1c4; // float
		constexpr auto LastSpawnIdx = 0x1c8; // int32_t
		constexpr auto CurrentSpawnIdx = 0x1cc; // int32_t
		constexpr auto SpawnedCount = 0x1d0; // int32_t
		constexpr auto RemainingDelay = 0x1d4; // float
	}

	namespace n_URPC_PlayerStorageGet_X {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto Items = 0x130; // TArray<FGetPlayerStorageRequestItem>
		constexpr auto Result = 0x140; // ObjectProperty
	}

	namespace n_UProductAttribute_AnimatedSkinLabel_TA {
		constexpr auto AnimatedLabel = 0x80; // FString
	}

	namespace n_UMutator_Match_TA {
		constexpr auto MatchGames = 0x68; // int32_t
		constexpr auto GameTime = 0x6c; // int32_t
		constexpr auto FinishTime = 0x70; // int32_t
		constexpr auto GameScore = 0x74; // int32_t
		constexpr auto SubRules = 0x78; // ObjectProperty
		constexpr auto bUnlimitedTime = 0x80; // uint32_t : 1
		constexpr auto OvertimeComponent = 0x88; // ObjectProperty
		constexpr auto MaxTimeComponent = 0x90; // ObjectProperty
	}

	namespace n_U__TAsyncResult__PrivilegeCheck_X__SetResultWhen_11A058E348D632A7993C98837775EBCD {
		constexpr auto GetResultDelegate = 0x60; // DelegateProperty
	}

	namespace n_UAnimNodeBlendMultiBone {
		constexpr auto BlendTargetList = 0x148; // TArray<FChildBoneBlendInfo>
		constexpr auto SourceRequiredBones = 0x158; // TArray<char>
	}

	namespace n_URPC_PartyCreate_X {
		constexpr auto bForcePartyonix = 0xe8; // uint32_t : 1
		constexpr auto Info = 0xf0; // FPsyNetPartyInfo
		constexpr auto Members = 0x160; // TArray<FPsyNetPartyMember>
	}

	namespace n_UMapInfo_TA {
		constexpr auto WorldColors = 0x60; // FWorldColorData
		constexpr auto MirrorFieldType = 0xa0; // EMirrorFieldType
		constexpr auto MirrorFieldXYRotation = 0xa4; // int32_t
		constexpr auto FieldCenter = 0xa8; // FVector
		constexpr auto MinStadiumBrightness = 0xb4; // float
		constexpr auto MapResetStartRotation = 0xb8; // FRotator
		constexpr auto MapResetStartHeight = 0xc4; // float
		constexpr auto MapResetStartDistance = 0xc8; // float
		constexpr auto MaxWaitTimeTillBallHit = 0xcc; // float
		constexpr auto GoalScoredDistance = 0xd0; // float
		constexpr auto MaxGoalYZoomOutDistance = 0xd4; // float
		constexpr auto MaxGoalXZoomOutDistance = 0xd8; // float
		constexpr auto CountDownFOV = 0xdc; // float
		constexpr auto BackAwayFromWallDistance = 0xe0; // float
		constexpr auto PylonExtentOverride = 0xe4; // FVector
		constexpr auto ArenaSoundSettings = 0xf0; // ObjectProperty
		constexpr auto CrowdSounds = 0xf8; // ObjectProperty
		constexpr auto CrowdActors = 0x100; // TArray<ObjectProperty>
		constexpr auto bPlayGlobalCrowdSounds = 0x110; // uint32_t : 1
	}

	namespace n_UPartyMessage_LocalPlayers_X {
		constexpr auto PrimaryMemberId = 0xa8; // FUniqueNetId
		constexpr auto Members = 0xf0; // TArray<FSimplePartyMember>
	}

	namespace n_U__ChallengeManager_TA__FindChallengeIndex_1F9E17224771E3F353D47187205BB388 {
		constexpr auto Id = 0x60; // int32_t
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FVectorMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_URPC_ProductsDebugSetCertified_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto CertifiedStatID = 0x140; // int32_t
		constexpr auto CertifiedValue = 0x144; // int32_t
		constexpr auto Product = 0x148; // FOnlineProductData
		constexpr auto OnlineProduct = 0x188; // ObjectProperty
		constexpr auto __EventCertifiedComplete__Delegate = 0x190; // DelegateProperty
	}

	namespace n_U__TourMatchServerBrowser_TA__GetMatchServer_784F205E4435AD52C90ABDAB13C7E747 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__OnlinePlayerStorageQueue_X__HandleStorageSuccess_871127A3496BBAE5CFACBABC86A9784C {
		constexpr auto OutOfSync = 0x60; // TArray<FSetPlayerStorageResultItem>
		constexpr auto RPC = 0x70; // ObjectProperty
	}

	namespace n_UAdHocErrors {
		constexpr auto AdHocError = 0x80; // ObjectProperty
	}

	namespace n_URPC_UpdateLeaderboard_X {
		constexpr auto Updates = 0xe8; // TArray<FUploadStatDataSet>
		constexpr auto MatchGUID = 0xf8; // FString
		constexpr auto PlaylistId = 0x108; // int32_t
	}

	namespace n_U__GFxModal_Processing_TA__CreateAndBindNoCancel_CEF3DADC446FAB5AD97AE7BC77052795 {
		constexpr auto Modal = 0x60; // ObjectProperty
	}

	namespace n_UFracturedBaseComponent {
		constexpr auto ComponentBaseResources = 0x308; // FPointer
		constexpr auto ReleaseResourcesFence = 0x310; // FRenderCommandFence_Mirror
		constexpr auto VisibleFragments = 0x318; // TArray<char>
		constexpr auto bVisibilityHasChanged = 0x328; // uint32_t : 1
		constexpr auto bVisibilityReset = 0x328; // uint32_t : 1
		constexpr auto bInitialVisibilityValue = 0x328; // uint32_t : 1
		constexpr auto bUseDynamicIndexBuffer = 0x328; // uint32_t : 1
		constexpr auto bUseDynamicIBWithHiddenFragments = 0x328; // uint32_t : 1
		constexpr auto NumResourceIndices = 0x32c; // int32_t
		constexpr auto bResetStaticMesh = 0x330; // int32_t
	}

	namespace n_UInterpTrackFaceFX {
		constexpr auto FaceFXAnimSets = 0xc8; // TArray<ObjectProperty>
		constexpr auto FaceFXSeqs = 0xd8; // TArray<FFaceFXTrackKey>
		constexpr auto CachedActorFXAsset = 0xe8; // ObjectProperty
		constexpr auto FaceFXSoundCueKeys = 0xf0; // TArray<FFaceFXSoundCueKey>
	}

	namespace n_UMaterialEffect {
		constexpr auto Material = 0x88; // ObjectProperty
	}

	namespace n_USeqVar_ObjectList {
		constexpr auto ObjList = 0x108; // TArray<ObjectProperty>
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x88; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x98; // uint32_t : 1
	}

	namespace n_UGFxData_PreMatchLobby_TA {
		constexpr auto PreMatchLobby = 0x98; // ObjectProperty
	}

	namespace n_UGFxData_TrainingModeConstants_TA {
		constexpr auto Difficulties = 0x98; // TArray<FTrainingModeDifficulty>
		constexpr auto Types = 0xa8; // TArray<FTrainingModeType>
		constexpr auto Tags = 0xb8; // TArray<FTrainingModeTag>
		constexpr auto DefaultMap = 0xc8; // FName
	}

	namespace n_USystem {
		constexpr auto StaleCacheDays = 0x68; // int32_t
		constexpr auto MaxStaleCacheSize = 0x6c; // int32_t
		constexpr auto MaxOverallCacheSize = 0x70; // int32_t
		constexpr auto PackageSizeSoftLimit = 0x74; // int32_t
		constexpr auto AsyncIOBandwidthLimit = 0x78; // float
		constexpr auto SavePath = 0x80; // FString
		constexpr auto CachePath = 0x90; // FString
		constexpr auto CacheExt = 0xa0; // FString
		constexpr auto Paths = 0xb0; // TArray<FString>
		constexpr auto SeekFreePCPaths = 0xc0; // TArray<FString>
		constexpr auto ScriptPaths = 0xd0; // TArray<FString>
		constexpr auto FRScriptPaths = 0xe0; // TArray<FString>
		constexpr auto CutdownPaths = 0xf0; // TArray<FString>
		constexpr auto Suppress = 0x100; // TArray<FName>
		constexpr auto SuppressPublic = 0x110; // TArray<FName>
		constexpr auto Extensions = 0x120; // TArray<FString>
		constexpr auto SeekFreePCExtensions = 0x130; // TArray<FString>
		constexpr auto LocalizationPaths = 0x140; // TArray<FString>
		constexpr auto TextureFileCacheExtension = 0x150; // FString
	}

	namespace n_UPersonas_TA {
		constexpr auto PersonaMap = 0x60; // FMap_Mirror
		constexpr auto bVerbosePresenceSort = 0xb0; // uint32_t : 1
		constexpr auto DeletedAccountDisplayName = 0xb8; // FString
		constexpr auto EpicIdRequests = 0xc8; // TArray<FUniqueNetId>
		constexpr auto OnlineGame = 0xd8; // ObjectProperty
		constexpr auto __EventAdded__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventEpicIdsReceived__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_URPC_SelectIntroCar_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto TemplateIndex = 0x130; // int32_t
		constexpr auto ProductData = 0x138; // TArray<FOnlineProductData>
		constexpr auto ProcessedProducts = 0x148; // TArray<ObjectProperty>
	}

	namespace n_U__OnlineGameParty_X__JoinParty_7854696D45D516F050BD5EB707D4DFF6 {
		constexpr auto LocalPlayerNum = 0x60; // int32_t
		constexpr auto InPartyId = 0x68; // FUniqueLobbyId
	}

	namespace n_UProductAttribute_MapProductAssetOverride_TA {
		constexpr auto MapsToUseDefaultProduct = 0x60; // ObjectProperty
		constexpr auto GameTypesToUseDefaultProduct = 0x68; // TArray<FNone*>
	}

	namespace n_UBTC_DodgeHit {
		constexpr auto FlipAmount = 0x1d8; // float
		constexpr auto JumpTime = 0x1dc; // float
	}

	namespace n_U__GFxData_Garage_TA__SetPreviewProduct_6B19EB0A40DB1325C5AE569AEDBD4D28 {
		constexpr auto SlotIndex = 0x60; // int32_t
		constexpr auto HashID = 0x64; // FProductHashID
	}

	namespace n_UAccountSettingsComponent_TA {
		constexpr auto bCrossPlatformEnabled = 0x70; // uint32_t : 1
		constexpr auto bPlatformAllowsCrossPlatform = 0x70; // uint32_t : 1
		constexpr auto bPlatformAllowsInvites = 0x70; // uint32_t : 1
		constexpr auto CrossPlatformChatState = 0x74; // ECrossPlatformChatState
		constexpr auto NetworkSave = 0x78; // ObjectProperty
		constexpr auto PlatformSettings = 0x80; // ComponentProperty
		constexpr auto __EventAccountSettingsChanged__Delegate = 0x88; // DelegateProperty
		constexpr auto __bCrossPlatformEnabled__ChangeNotify = 0xa0; // DelegateProperty
		constexpr auto __CrossPlatformChatState__ChangeNotify = 0xb8; // DelegateProperty
	}

	namespace n_UProductAttribute_CompatibleProducts_TA {
		constexpr auto VfTable_IICanEquip_TA = 0x80; // FPointer
		constexpr auto CompatibleProducts = 0x88; // TArray<ObjectProperty>
	}

	namespace n_U__GFxData_Party_TA__HandleAcceptInviteToTrade_A5BA49D542A51185F535BF8E8941649C {
		constexpr auto Modal = 0x60; // ObjectProperty
		constexpr auto Inviter = 0x68; // FUniqueNetId
	}

	namespace n_U__GFxHUD_TA__HandleVoteFinished_102B25CB42B1E96F63B82D8E30645877 {
		constexpr auto VoteActor = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_TourCheckIn_TA__HandleCheckInError_088037114EDA57670A5EA38C49788CE6 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_USequenceAction {
		constexpr auto HandlerName = 0x140; // FName
		constexpr auto bCallHandler = 0x148; // uint32_t : 1
		constexpr auto Targets = 0x150; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_SetMatInstTexParam {
		constexpr auto MatInst = 0x160; // ObjectProperty
		constexpr auto NewTexture = 0x168; // ObjectProperty
		constexpr auto ParamName = 0x170; // FName
	}

	namespace n_UTickNotifyDelegate_TA {
		constexpr auto VfTable_IITickNotify_TA = 0x60; // FPointer
		constexpr auto __EventPrePhysicsStep__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UAnimNodeScalePlayRate {
		constexpr auto ScaleByValue = 0x148; // float
	}

	namespace n_ATestSplittingVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2a8; // FPointer
	}

	namespace n_UUserBugReportUploader_TA {
		constexpr auto Connection = 0x60; // ObjectProperty
		constexpr auto BulkData = 0x68; // ObjectProperty
		constexpr auto SubmitTask = 0x70; // ObjectProperty
		constexpr auto SubmitReportRPC = 0x78; // ObjectProperty
		constexpr auto Result = 0x80; // ObjectProperty
		constexpr auto UploadReportWebRequest = 0x88; // ObjectProperty
	}

	namespace n_UProductAssetLoader_TA {
		constexpr auto bDebug = 0x60; // uint32_t : 1
		constexpr auto bLoadingAssetAsync = 0x60; // uint32_t : 1
		constexpr auto bAssetLoadedThisFrame = 0x60; // uint32_t : 1
		constexpr auto LoadAssetQueue = 0x68; // TArray<FAssetLoadRequest>
	}

	namespace n_UExplosionPreviewer_TA {
		constexpr auto ProductLoader = 0x70; // ComponentProperty
		constexpr auto ExplosionId = 0x78; // FProductInstanceID
		constexpr auto ExplosionProduct = 0x88; // ObjectProperty
		constexpr auto ExplosionInstance = 0x90; // ObjectProperty
		constexpr auto bPreviewing = 0x98; // uint32_t : 1
		constexpr auto PC = 0xa0; // ObjectProperty
	}

	namespace n_ASceneCapture2DActor {
		constexpr auto DrawFrustum = 0x270; // ComponentProperty
	}

	namespace n_UMatchType_TA {
		constexpr auto GameEvent = 0x60; // ObjectProperty
		constexpr auto Components = 0x68; // TArray<FComponentTemplate>
		constexpr auto bPreAssignedTeams = 0x78; // uint32_t : 1
		constexpr auto ForfeitVoteWaitGameTime = 0x7c; // int32_t
		constexpr auto WaitForPlayersTime = 0x80; // int32_t
		constexpr auto WaitingForPlayersStartTime = 0x84; // float
		constexpr auto MatchTypeName = 0x88; // FName
		constexpr auto LobbyTime = 0x90; // float
		constexpr auto LobbyIntroTime = 0x94; // float
		constexpr auto LobbyEndCountdown = 0x98; // int32_t
	}

	namespace n_AGameEvent_Breakout_TA {
		constexpr auto bOnlyResetScoredOnTeam = 0xc78; // uint32_t : 1
		constexpr auto bResetOvertime = 0xc78; // uint32_t : 1
		constexpr auto LastScoredOnTeam = 0xc7c; // char
		constexpr auto __EventPlatformDamaged__Delegate = 0xc80; // DelegateProperty
	}

	namespace n_UOnlineGameWordFilterProcessor_X {
		constexpr auto ResponseDelay = 0x98; // float
		constexpr auto SanitizeCallbacks = 0xa0; // TArray<FWordFilterRequest>
		constexpr auto __OnSanitizeStringComplete__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0xc0; // FExpressionInput
		constexpr auto SceneTextureType = 0xf8; // ESceneTextureType
		constexpr auto ScreenAlign = 0xfc; // uint32_t : 1
	}

	namespace n_U__GameEvent_TA__SetBotSkillByTeam_2BDE3C4044CE776E670C369565B475C1 {
		constexpr auto Team = 0x60; // int32_t
		constexpr auto NewSkill = 0x64; // float
		constexpr auto BoostThreshold = 0x68; // float
	}

	namespace n_U__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_44A7624441B46A283D4ED9B1C4F2A3EF {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UAudioStateComponent_TA {
		constexpr auto StateGroup = 0x258; // FString
		constexpr auto StateName = 0x268; // FString
	}

	namespace n_UTourEvent_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto TourMatchmaking = 0x68; // ObjectProperty
		constexpr auto PlayerID = 0x70; // FUniqueNetId
		constexpr auto ActiveTour = 0xb8; // ObjectProperty
		constexpr auto Team = 0xc0; // FTourTeam
		constexpr auto EventMatch = 0x108; // ObjectProperty
		constexpr auto MatchComplete = 0x110; // ObjectProperty
		constexpr auto __EventStartTimeElapsed__Delegate = 0x118; // DelegateProperty
		constexpr auto __EventDeactivated__Delegate = 0x130; // DelegateProperty
	}

	namespace n_U__GFxModal_Processing_TA__CreateAndBind_CD6CC31C46DAEC4B1A5BBF9330C9C1F1 {
		constexpr auto Task = 0x60; // ObjectProperty
	}

	namespace n_U__EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_532D8A5A4E052A1B7B61E6A0E2A6EDC5 {
		constexpr auto OSS = 0x60; // ObjectProperty
	}

	namespace n_UProductAsset_ShopItem_TA {
		constexpr auto BackgroundImage = 0xf8; // ObjectProperty
		constexpr auto ItemLogo = 0x100; // ObjectProperty
	}

	namespace n_UNavMeshPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenEdgeTypes = 0x78; // float
		constexpr auto InitLocation = 0x7c; // FVector
		constexpr auto EdgeType = 0x88; // ENavMeshEdgeType
		constexpr auto Penalty = 0x8c; // float
	}

	namespace n_AGFxHUD_TA {
		constexpr auto UIState = 0x398; // FString
		constexpr auto MatchInfoMovieArchetype = 0x3a8; // ObjectProperty
		constexpr auto MatchInfoMovie = 0x3b0; // ObjectProperty
		constexpr auto NameplatesManager = 0x3b8; // ComponentProperty
		constexpr auto PlayerJoinString = 0x3c0; // FString
		constexpr auto PlayerLeaveString = 0x3d0; // FString
		constexpr auto PlayerTimedOutString = 0x3e0; // FString
		constexpr auto ChatTitle = 0x3f0; // FString
		constexpr auto TeamChatTitle = 0x400; // FString
		constexpr auto ChatDisabledMessage = 0x410; // FString
		constexpr auto ReplayQueSaveMessage = 0x420; // FString
		constexpr auto KoalaClipSaveMessage = 0x430; // FString
		constexpr auto KoalaClipSaveFailedMessage = 0x440; // FString
		constexpr auto KoalaClipStartCaptureMessage = 0x450; // FString
		constexpr auto KoalaClipStartCaptureFailedMessage = 0x460; // FString
		constexpr auto ChatBannedMessage = 0x470; // FString
		constexpr auto ChatBannedPermanentlyMessage = 0x480; // FString
		constexpr auto OwnerPRI = 0x490; // ObjectProperty
		constexpr auto OwnerCar = 0x498; // ObjectProperty
		constexpr auto GameEvent = 0x4a0; // ObjectProperty
		constexpr auto TeamGameEvent = 0x4a8; // ObjectProperty
		constexpr auto GameEventData = 0x4b0; // ObjectProperty
		constexpr auto CarData = 0x4b8; // ObjectProperty
		constexpr auto PRIData = 0x4c0; // TArray<ObjectProperty>
		constexpr auto KoalaData = 0x4d0; // ObjectProperty
		constexpr auto PlayerRecordData = 0x4d8; // TArray<ObjectProperty>
		constexpr auto CloseScoreboardTime = 0x4e8; // float
		constexpr auto bShowedDisconnectMessage = 0x4ec; // uint32_t : 1
		constexpr auto PendingShowAddMessagePlayers = 0x4f0; // TArray<ObjectProperty>
		constexpr auto LastTarget = 0x500; // ObjectProperty
		constexpr auto TestLastLogTime = 0x508; // float
		constexpr auto CarDisplayingBoost = 0x510; // ObjectProperty
		constexpr auto AdHocBeacon = 0x518; // ObjectProperty
		constexpr auto ServerMigrationTitle = 0x520; // FString
		constexpr auto ServerMigrationBody = 0x530; // FString
		constexpr auto __VoteLambda__Delegate = 0x540; // DelegateProperty
	}

	namespace n_USeqAct_IsHumanPlayer_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto Target = 0x168; // ObjectProperty
	}

	namespace n_U__AutoTour_TA__UpdateIneligibleTournament_D6014435448B2380745D78BD74856392 {
		constexpr auto LastAutoTournament = 0x60; // ObjectProperty
	}

	namespace n_UPartyMessage_TourPreCheckInError_TA {
		constexpr auto TourID = 0xa8; // QWordProperty
		constexpr auto ErrorTypeName = 0xb0; // FName
	}

	namespace n_U__TourPartyCheckIn_TA__HandleLeaderCheckIn_F862F19041543972F63338B53A963C16 {
		constexpr auto Message = 0x60; // ObjectProperty
		constexpr auto Transaction = 0x68; // ObjectProperty
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto R = 0xc0; // float
		constexpr auto G = 0xc4; // float
		constexpr auto B = 0xc8; // float
	}

	namespace n_U__BanSync_TA__GetBanMessage_AEC73A1E4224B109C647E6B8BB352000 {
		constexpr auto BanType = 0x60; // EBanType
		constexpr auto PlayerID = 0x68; // FUniqueNetId
	}

	namespace n_URPC_RelayToServer_X {
		constexpr auto DSConnectToken = 0xe8; // FString
		constexpr auto ReservationID = 0xf8; // FString
		constexpr auto MessageType = 0x108; // FString
		constexpr auto MessagePayload = 0x118; // FString
	}

	namespace n_UTickActorComponent_X {
		constexpr auto Timers = 0xa0; // TArray<FTimerData>
		constexpr auto bTick = 0xb0; // uint32_t : 1
		constexpr auto __EventTick__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UTarget_TA {
		constexpr auto LocalTranslation = 0xa8; // FVector
		constexpr auto WorldTranslation = 0xb4; // FVector
		constexpr auto Priority = 0xc0; // int32_t
	}

	namespace n_UImageBasedReflectionComponent {
		constexpr auto bEnabled = 0x308; // uint32_t : 1
		constexpr auto bTwoSided = 0x308; // uint32_t : 1
		constexpr auto ReflectionTexture = 0x310; // ObjectProperty
		constexpr auto ReflectionColor = 0x318; // FLinearColor
	}

	namespace n_UMusicTracklistBuildStep_ShuffleTracks_TA {
		constexpr auto Source = 0x60; // TScriptInterface<Class>
	}

	namespace n_URewardDrop_XP_TA {
		constexpr auto Total = 0x68; // float
		constexpr auto Base = 0x6c; // int32_t
		constexpr auto BaseLevel = 0x70; // int32_t
		constexpr auto Level = 0x74; // int32_t
		constexpr auto LevelThresholds = 0x78; // TArray<FGFxLevelThreshold>
		constexpr auto Modifiers = 0x88; // TArray<FOnlineXPModifier>
		constexpr auto PremiumModifierNames = 0x98; // TArray<FName>
		constexpr auto PenaltyModifierNames = 0xa8; // TArray<FName>
		constexpr auto PromoModifierNames = 0xb8; // TArray<FName>
		constexpr auto WeeklyCapReached = 0xc8; // FName
		constexpr auto RewardModifiers_SectionName = 0xd0; // FString
		constexpr auto RewardModifiers_PackageName = 0xe0; // FString
		constexpr auto WeeklyCap = 0xf0; // FName
		constexpr auto RestXP = 0xf8; // FName
	}

	namespace n_USaveData_GameEditor_Training_TA {
		constexpr auto LoadedSaveName = 0xa0; // FString
		constexpr auto TrainingData = 0xb0; // ObjectProperty
		constexpr auto PlayerTeamNumber = 0xb8; // int32_t
		constexpr auto bUnowned = 0xbc; // uint32_t : 1
		constexpr auto bPerfectCompleted = 0xbc; // uint32_t : 1
		constexpr auto ShotsCompleted = 0xc0; // int32_t
		constexpr auto FavoritesFolderPath = 0xc8; // FString
		constexpr auto MyTrainingFolderPath = 0xd8; // FString
		constexpr auto DownloadedFolderPath = 0xe8; // FString
	}

	namespace n_UAutoTour_TA {
		constexpr auto Schedules = 0x60; // TArray<FScheduledTournament>
		constexpr auto CycleResults = 0x70; // TArray<FTournamentWeek>
		constexpr auto IneligibleScheduleID = 0x80; // QWordProperty
		constexpr auto RegionID = 0x88; // FString
		constexpr auto CycleID = 0x98; // QWordProperty
		constexpr auto CycleEndTime = 0xa0; // QWordProperty
		constexpr auto WeekID = 0xa8; // int32_t
		constexpr auto WeekEndTime = 0xb0; // QWordProperty
		constexpr auto WeeklyCurrencies = 0xb8; // TArray<FShopCurrencyInfo>
		constexpr auto MaxTierScores = 0xc8; // TArray<int32_t>
		constexpr auto DataRefreshTime = 0xd8; // float
		constexpr auto LastSyncTime = 0xdc; // float
		constexpr auto Config = 0xe0; // ObjectProperty
		constexpr auto OnlineGame = 0xe8; // ObjectProperty
		constexpr auto Tournaments = 0xf0; // ObjectProperty
		constexpr auto TourList = 0xf8; // ComponentProperty
		constexpr auto __EventTourCardsChanged__Delegate = 0x100; // DelegateProperty
		constexpr auto __Schedules__ChangeNotify = 0x118; // DelegateProperty
		constexpr auto __CycleResults__ChangeNotify = 0x130; // DelegateProperty
		constexpr auto __IneligibleScheduleID__ChangeNotify = 0x148; // DelegateProperty
		constexpr auto __RegionID__ChangeNotify = 0x160; // DelegateProperty
	}

	namespace n_UItemPool_TA {
		constexpr auto Items = 0x60; // TArray<FRandomWeight>
	}

	namespace n_U__GFxData_Shops_TA__HandleGetAllShops_20C002D9412C0DC53C30A49544AE74CC {
		constexpr auto Data = 0x60; // FShopData
	}

	namespace n_UGFxData_CustomTeams_TA {
		constexpr auto Settings = 0x98; // TArray<FGFxCustomTeamSettings>
		constexpr auto SettingsType = 0xa8; // ECustomMatchSettingsType
		constexpr auto TeamColors = 0xb0; // TArray<FGFxTeamColor>
		constexpr auto CustomColors = 0xc0; // TArray<FGFxTeamColor>
		constexpr auto TAPlayer = 0xd0; // ObjectProperty
		constexpr auto PreviewTeam = 0xd8; // int32_t
		constexpr auto PreviewSet = 0xe0; // ObjectProperty
		constexpr auto PreviewColors = 0xe8; // FClubColorSet [0x2]
	}

	namespace n_UTutorial_AirTilt_TA {
		constexpr auto ToggleAirRollString = 0x248; // FString
	}

	namespace n_UMatchLog_X {
		constexpr auto LogFileStartSize = 0x60; // int32_t
		constexpr auto URL = 0x68; // FString
		constexpr auto Content = 0x78; // TArray<char>
	}

	namespace n_UEngineAudioREVComponent_TA {
		constexpr auto Profile = 0x100; // ObjectProperty
		constexpr auto PhysicsSim = 0x108; // ObjectProperty
		constexpr auto RevLimiter = 0x110; // ComponentProperty
		constexpr auto Reverse = 0x118; // ComponentProperty
		constexpr auto VelocitySync = 0x120; // ComponentProperty
		constexpr auto Boost = 0x128; // ComponentProperty
		constexpr auto BoostLevel = 0x130; // ComponentProperty
		constexpr auto Resistance = 0x138; // ComponentProperty
		constexpr auto GearManager = 0x140; // ComponentProperty
		constexpr auto SimFrame = 0x148; // FAkRevSimFrame
		constexpr auto CachedUpdateParams = 0x158; // FAkRevSimUpdateParams
	}

	namespace n_ANxTornadoAngularForceField {
		constexpr auto RadialStrength = 0x2c0; // float
		constexpr auto RotationalStrength = 0x2c4; // float
		constexpr auto LiftStrength = 0x2c8; // float
		constexpr auto ForceRadius = 0x2cc; // float
		constexpr auto ForceTopRadius = 0x2d0; // float
		constexpr auto LiftFalloffHeight = 0x2d4; // float
		constexpr auto EscapeVelocity = 0x2d8; // float
		constexpr auto ForceHeight = 0x2dc; // float
		constexpr auto HeightOffset = 0x2e0; // float
		constexpr auto BSpecialRadialForceMode = 0x2e4; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2e8; // float
		constexpr auto Kernel = 0x2f0; // FPointer
	}

	namespace n_USequence {
		constexpr auto LogFile = 0x140; // FPointer
		constexpr auto SequenceObjects = 0x148; // TArray<ObjectProperty>
		constexpr auto ActiveSequenceOps = 0x158; // TArray<ObjectProperty>
		constexpr auto NestedSequences = 0x168; // TArray<ObjectProperty>
		constexpr auto UnregisteredEvents = 0x178; // TArray<ObjectProperty>
		constexpr auto DelayedActivatedOps = 0x188; // TArray<FActivateOp>
		constexpr auto DelayedLatentOps = 0x198; // TArray<ObjectProperty>
		constexpr auto bEnabled = 0x1a8; // uint32_t : 1
		constexpr auto QueuedActivations = 0x1b0; // TArray<FQueuedActivationInfo>
		constexpr auto DefaultViewX = 0x1c0; // int32_t
		constexpr auto DefaultViewY = 0x1c4; // int32_t
		constexpr auto DefaultViewZoom = 0x1c8; // float
	}

	namespace n_U__GameEvent_TA__HasPlayerNamed_F70432CD4F45A1B146E24AAEAC8BA309 {
		constexpr auto PlayerName = 0x60; // FString
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x70; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x98; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xc0; // uint32_t : 1
	}

	namespace n_UAnimNodeScaleRateBySpeed {
		constexpr auto BaseSpeed = 0x150; // float
	}

	namespace n_AKAsset {
		constexpr auto SkeletalMeshComponent = 0x268; // ComponentProperty
		constexpr auto bDamageAppliesImpulse = 0x270; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x270; // uint32_t : 1
		constexpr auto bBlockPawns = 0x270; // uint32_t : 1
		constexpr auto ReplicatedMesh = 0x278; // ObjectProperty
		constexpr auto ReplicatedPhysAsset = 0x280; // ObjectProperty
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevels = 0x2a8; // TArray<ObjectProperty>
		constexpr auto bEditorPreVisOnly = 0x2b8; // uint32_t : 1
		constexpr auto bDisabled = 0x2b8; // uint32_t : 1
		constexpr auto bTestDistanceToVolume = 0x2b8; // uint32_t : 1
		constexpr auto StreamingUsage = 0x2bc; // EStreamingVolumeUsage
		constexpr auto Usage = 0x2bd; // EStreamingVolumeUsage
		constexpr auto TestVolumeDistance = 0x2c0; // float
	}

	namespace n_U__RegionConfig_X__GetSubRegions_9E6411004EA6D8BCAE9A618C9E09CD96 {
		constexpr auto SuperRegionID = 0x60; // FString
	}

	namespace n_UGlobalLookupTexture_TA {
		constexpr auto EnvironmentAPosition = 0x1b0; // FIntVector
		constexpr auto EnvironmentBPosition = 0x1b8; // FIntVector
		constexpr auto SunlightPosition = 0x1c0; // FIntVector
		constexpr auto WorldLightPosition = 0x1c8; // FIntVector
		constexpr auto TeamsPositionX = 0x1d0; // int32_t
		constexpr auto PlayersPositionX = 0x1d4; // int32_t
		constexpr auto TopTeamColors = 0x1d8; // TArray<FLinearColor>
		constexpr auto BottomTeamColors = 0x1e8; // TArray<FLinearColor>
		constexpr auto Players = 0x1f8; // TArray<ObjectProperty>
		constexpr auto TopPlayerColors = 0x208; // TArray<FLinearColor>
		constexpr auto BottomPlayerColors = 0x218; // TArray<FLinearColor>
		constexpr auto bDebug = 0x228; // uint32_t : 1
	}

	namespace n_UAnimNodeMirror {
		constexpr auto bEnableMirroring = 0x148; // uint32_t : 1
	}

	namespace n_ULocalPlayerAudioParamsComponent_TA {
		constexpr auto ParameterInterface = 0x70; // TScriptInterface<Class>
		constexpr auto PC = 0x80; // ObjectProperty
	}

	namespace n_USeqAct_Gate {
		constexpr auto bOpen = 0x160; // uint32_t : 1
		constexpr auto AutoCloseCount = 0x164; // int32_t
		constexpr auto CurrentCloseCount = 0x168; // int32_t
	}

	namespace n_U__ProductAsset_Skin_TA__GetSkinBodySettings_06B42D7A46A71F759DF9F3917930506C {
		constexpr auto ForBodyID = 0x60; // int32_t
	}

	namespace n_U__OnlinePlayerFriends_X__UnblockPlayer_4D5BEC254239A61F5965B3B2EA201DDD {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U____SaveData_TA__GetOnlineProductQuantity_3BCF2D9041011E91F5EBF49F41428453____SaveData_TA__GetOnlineProductQuantity_D6065AFF45D95F473AE46AB50B1590BF_1818BC3149E76824F9A332B1E495E52A {
		constexpr auto Op = 0x60; // ObjectProperty
	}

	namespace n_AAmbientSoundSplineMultiCue {
		constexpr auto EditedSlot = 0x2a0; // int32_t
	}

	namespace n_UTourGameUpdate_TA {
		constexpr auto JoinedPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto IdlePlayers = 0x70; // TArray<FUniqueNetId>
		constexpr auto bHasNetworkIssues = 0x80; // uint32_t : 1
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x70; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x98; // uint32_t : 1
		constexpr auto bFloor = 0x98; // uint32_t : 1
		constexpr auto bApplyPSysScale = 0x98; // uint32_t : 1
	}

	namespace n_ASkeletalMeshActorMAT {
		constexpr auto SlotNodes = 0x2d0; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_ProductAttribute_Certified_TA {
		constexpr auto CertifiedStatLabel = 0xb0; // FString
	}

	namespace n_UProduct_TA {
		constexpr auto AssetPackageName = 0x138; // FName
		constexpr auto AssetPath = 0x140; // FString
		constexpr auto bReplaced = 0x150; // uint32_t : 1
		constexpr auto bPack = 0x150; // uint32_t : 1
		constexpr auto Label = 0x158; // FString
		constexpr auto AsciiLabel = 0x168; // FString
		constexpr auto LongLabel = 0x178; // FString
		constexpr auto ShortAsciiLabel = 0x188; // FString
	}

	namespace n_UBTC_FieldDistance {
		constexpr auto Goal = 0x1d0; // ObjectProperty
		constexpr auto OtherGoal = 0x1d8; // ObjectProperty
		constexpr auto ForwardGreaterThan = 0x1e0; // float
		constexpr auto ForwardLessThan = 0x1e4; // float
		constexpr auto SideGreaterThan = 0x1e8; // float
		constexpr auto SideLessThan = 0x1ec; // float
		constexpr auto AbsSideGreaterThan = 0x1f0; // float
		constexpr auto AbsSideLessThan = 0x1f4; // float
		constexpr auto bUseGoalOrientation = 0x1f8; // uint32_t : 1
		constexpr auto GoalData = 0x200; // FAIProxyData
		constexpr auto OtherGoalData = 0x248; // FAIProxyData
		constexpr auto MidFieldData = 0x290; // FAIProxyData
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x308; // FSplineMeshParams
		constexpr auto SplineXDir = 0x360; // FVector
		constexpr auto bSmoothInterpRollScale = 0x36c; // uint32_t : 1
	}

	namespace n_UUserBugReportGeneratedData_TA {
		constexpr auto MetaData = 0x60; // ObjectProperty
		constexpr auto BulkData = 0x68; // ObjectProperty
		constexpr auto __EventComplete__Delegate = 0x70; // DelegateProperty
	}

	namespace n_APrefabInstance {
		constexpr auto TemplatePrefab = 0x268; // ObjectProperty
		constexpr auto TemplateVersion = 0x270; // int32_t
		constexpr auto ArchetypeToInstanceMap = 0x278; // TMap<None, None>
		constexpr auto SequenceInstance = 0x2c8; // ObjectProperty
		constexpr auto PI_PackageVersion = 0x2d0; // int32_t
		constexpr auto PI_LicenseePackageVersion = 0x2d4; // int32_t
		constexpr auto PI_Bytes = 0x2d8; // TArray<char>
		constexpr auto PI_CompleteObjects = 0x2e8; // TArray<ObjectProperty>
		constexpr auto PI_ReferencedObjects = 0x2f8; // TArray<ObjectProperty>
		constexpr auto PI_SavedNames = 0x308; // TArray<FString>
		constexpr auto PI_ObjectMap = 0x318; // TMap<None, None>
	}

	namespace n_UTAsyncResult__PsyNetMessage_X {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UOnlineEventsInterfaceMcp {
		constexpr auto EventUploadConfigs = 0x80; // TArray<FEventUploadConfig>
		constexpr auto MCPEventPostObjects = 0x90; // TArray<FPointer>
		constexpr auto DisabledUploadTypes = 0xa0; // TArray<EEventUploadType>
		constexpr auto bBinaryStats = 0xb0; // uint32_t : 1
	}

	namespace n_URPC_ProductsClearExpired_TA {
		constexpr auto InstanceIDs = 0xe8; // TArray<FProductInstanceID>
	}

	namespace n_UStatusObserver_Products_TA {
		constexpr auto LastEquippedProducts = 0xa0; // TArray<int32_t>
		constexpr auto LastOwnedProducts = 0xb0; // TArray<int32_t>
		constexpr auto LastTeamIndex = 0xc0; // int32_t
		constexpr auto SaveData = 0xc8; // ObjectProperty
		constexpr auto ProductsSave = 0xd0; // ObjectProperty
		constexpr auto ProfileLoadoutSave = 0xd8; // ObjectProperty
		constexpr auto PendingChangedProductSlots = 0xe0; // TArray<int32_t>
	}

	namespace n_U__CinematicIntroSequence_TA__SetTrackedBindings_B0BD218144619D013B7664939B7F6023 {
		constexpr auto ActionName = 0x60; // FName
	}

	namespace n_U__GameEvent_Soccar_TA__ChallengePlayerToHonorDuel_D7F172C84BEF6581CFF779B63D7F50E3 {
		constexpr auto Challenger = 0x60; // FUniqueNetId
		constexpr auto Defender = 0xa8; // FUniqueNetId
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0xc8; // FInterpCurveVector
		constexpr auto CurveTension = 0xe0; // float
	}

	namespace n_UProductOverride_SkeletalMesh_TA {
		constexpr auto Mesh = 0x60; // ObjectProperty
	}

	namespace n_URPC_TourGetScheduleRegion_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ScheduleRegion = 0x130; // FString
	}

	namespace n_U__ShopsService_Local_TA__QueueTask_590D00CF47F12A338C9648892300137D {
		constexpr auto Task = 0x60; // ObjectProperty
		constexpr auto Error = 0x68; // ObjectProperty
	}

	namespace n_U__WebImageCache_X__StartSync_8597EA0E4C67BFEEF80589BCA36A26E2 {
		constexpr auto Download = 0x60; // ObjectProperty
	}

	namespace n_UProductEquipProfile_TA {
		constexpr auto Skin = 0x60; // ObjectProperty
		constexpr auto Wheel = 0x68; // ObjectProperty
		constexpr auto Boost = 0x70; // ObjectProperty
		constexpr auto Antenna = 0x78; // ObjectProperty
		constexpr auto Hat = 0x80; // ObjectProperty
		constexpr auto PaintFinish = 0x88; // ObjectProperty
		constexpr auto CustomFinish = 0x90; // ObjectProperty
		constexpr auto EngineAudio = 0x98; // ObjectProperty
		constexpr auto SupersonicTrail = 0xa0; // ObjectProperty
		constexpr auto GoalExplosion = 0xa8; // ObjectProperty
		constexpr auto LicenseWhitelist = 0xb0; // TArray<ELicenseGroup>
		constexpr auto LicenseBlacklist = 0xc0; // TArray<ELicenseGroup>
		constexpr auto bWhitelistAll = 0xd0; // uint32_t : 1
		constexpr auto AllSlots = 0xd8; // TArray<ObjectProperty>
	}

	namespace n_UMaxTimeComponent_TA {
		constexpr auto WarningTimeSeconds = 0x60; // int32_t
		constexpr auto TimeLimitSeconds = 0x64; // int32_t
	}

	namespace n_USeqAct_SetMeshMaterialScalarParameter_TA {
		constexpr auto MeshList = 0x160; // TArray<ObjectProperty>
		constexpr auto ParamName = 0x170; // FString
		constexpr auto ScalarValue = 0x180; // float
	}

	namespace n_UInterpTrackAkEvent {
		constexpr auto AkEvents = 0xc8; // TArray<FAkEventTrackKey>
		constexpr auto SeekTimeSeconds = 0xd8; // float
	}

	namespace n_UMeshBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MeshBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x70; // FPointer
		constexpr auto bIsInTick = 0x78; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x78; // uint32_t : 1
		constexpr auto bShouldTick = 0x78; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x7c; // float
		constexpr auto ElapsedHeartbeatTime = 0x80; // float
		constexpr auto BeaconName = 0x84; // FName
		constexpr auto SocketSendBufferSize = 0x8c; // int32_t
		constexpr auto SocketReceiveBufferSize = 0x90; // int32_t
		constexpr auto MaxBandwidthTestBufferSize = 0x94; // int32_t
		constexpr auto MinBandwidthTestBufferSize = 0x98; // int32_t
		constexpr auto MaxBandwidthTestSendTime = 0x9c; // float
		constexpr auto MaxBandwidthTestReceiveTime = 0xa0; // float
		constexpr auto MaxBandwidthHistoryEntries = 0xa4; // int32_t
	}

	namespace n_AAmbientSoundSpline {
		constexpr auto DistanceBetweenPoints = 0x280; // float
		constexpr auto SplineComponent = 0x288; // ComponentProperty
		constexpr auto TestPoint = 0x290; // FVector
	}

	namespace n_ATurnTableActor_TA {
		constexpr auto RotateComponent = 0x2d0; // ComponentProperty
		constexpr auto bIsSwapping = 0x2d8; // uint32_t : 1
		constexpr auto bInReveal = 0x2d8; // uint32_t : 1
		constexpr auto bCarLocked = 0x2d8; // uint32_t : 1
		constexpr auto bMultiDrop = 0x2d8; // uint32_t : 1
		constexpr auto SwapCarName = 0x2dc; // FName
		constexpr auto LiftItemName = 0x2e4; // FName
		constexpr auto LockCarName = 0x2ec; // FName
		constexpr auto TriggerRevealCompleteName = 0x2f4; // FName
		constexpr auto DelayedPreviewSlot = 0x2fc; // int32_t
		constexpr auto TurntableRiseDelay = 0x300; // float
		constexpr auto RevealProduct = 0x308; // ObjectProperty
		constexpr auto __EventCarSwapComplete__Delegate = 0x310; // DelegateProperty
		constexpr auto __EventRevealStarted__Delegate = 0x328; // DelegateProperty
		constexpr auto __EventRevealComplete__Delegate = 0x340; // DelegateProperty
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0xc0; // uint32_t : 1
	}

	namespace n_AArchetypePrefab_X {
		constexpr auto PrefabArchetypes = 0x268; // TArray<ObjectProperty>
		constexpr auto ArchetypeInstances = 0x278; // TArray<ObjectProperty>
	}

	namespace n_UOnlineGameSearch_X {
		constexpr auto InclusiveGameTagsArray = 0x158; // TArray<FString>
		constexpr auto ExclusiveGameTagsArray = 0x168; // TArray<FString>
		constexpr auto MapName = 0x178; // FString
		constexpr auto GameTagsDelimiter = 0x188; // FString
	}

	namespace n_UOnlineClubProvider_X {
		constexpr auto Cache = 0x60; // ComponentProperty
		constexpr auto SyncingClubs = 0x68; // TArray<ObjectProperty>
		constexpr auto SyncingPlayers = 0x78; // TArray<ObjectProperty>
		constexpr auto PlayerClubSyncResults = 0x88; // TArray<FPlayerClubSyncResult>
		constexpr auto __EventSyncComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventPlayerSynced__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto R = 0xf8; // uint32_t : 1
		constexpr auto G = 0xf8; // uint32_t : 1
		constexpr auto B = 0xf8; // uint32_t : 1
		constexpr auto A = 0xf8; // uint32_t : 1
	}

	namespace n_UMaterialExpressionPixelDepth {
		constexpr auto bNormalize = 0xc0; // uint32_t : 1
	}

	namespace n_UOnlineGameMatchmaking_X {
		constexpr auto PreferredPlaylists = 0x118; // TArray<int32_t>
		constexpr auto PreferredRegions = 0x128; // TArray<FString>
		constexpr auto SearchingString = 0x138; // FString
		constexpr auto StartSearchFailString = 0x148; // FString
		constexpr auto FoundServerString = 0x158; // FString
		constexpr auto PlaylistsHaveChangedString = 0x168; // FString
		constexpr auto RegionsHaveChangedString = 0x178; // FString
		constexpr auto MatchmakingAttemptString = 0x188; // FString
		constexpr auto MatchmakingStartTime = 0x198; // float
		constexpr auto MatchmakingBanTime = 0x19c; // int32_t
		constexpr auto bIgnoreSkill = 0x1a0; // uint32_t : 1
		constexpr auto MatchmakingDisabledDuration = 0x1a4; // float
		constexpr auto MatchmakingDisabledUntilTime = 0x1a8; // float
		constexpr auto LastReservationID = 0x1b0; // FString
		constexpr auto __EventStartSearch__Delegate = 0x1c0; // DelegateProperty
		constexpr auto __EventMatchmakingError__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __EventMatchmakingCanceledOnPartySizeChanged__Delegate = 0x1f0; // DelegateProperty
	}

	namespace n_USeqAct_AccessObjectList {
		constexpr auto OutputObject = 0x160; // ObjectProperty
		constexpr auto ObjectIndex = 0x168; // int32_t
	}

	namespace n_UProductAsset_EngineAudio_TA {
		constexpr auto EngineSound = 0xf8; // ObjectProperty
		constexpr auto ExhaustSound = 0x100; // ObjectProperty
		constexpr auto IgnitionSound = 0x108; // ObjectProperty
		constexpr auto BlowoffSound = 0x110; // ObjectProperty
		constexpr auto ThrottleEngageSound = 0x118; // ObjectProperty
		constexpr auto ThrottleReleaseSound = 0x120; // ObjectProperty
		constexpr auto GearChangeSound = 0x128; // ObjectProperty
		constexpr auto Profile = 0x130; // ObjectProperty
	}

	namespace n_UMaterialExpressionFluidNormal {
		constexpr auto Coordinates = 0xc0; // FExpressionInput
	}

	namespace n_UCameraState_SeasonIntro_TA {
		constexpr auto RotateSpeed = 0x90; // float
		constexpr auto ZHeightPercent = 0x94; // float
		constexpr auto XOffsetDistance = 0x98; // float
		constexpr auto DefaultFOV = 0x9c; // float
	}

	namespace n_URPC_ProductsLoadoutGet_TA {
		constexpr auto InstanceToSlotTable = 0xe8; // TArray<FInstanceToSlotRow>
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
		constexpr auto Loadout = 0x140; // TArray<FProductInstanceID>
		constexpr auto ProductData = 0x150; // TArray<FOnlineProductData>
		constexpr auto Products = 0x160; // TArray<ObjectProperty>
	}

	namespace n_UChallengeNotification_TA {
		constexpr auto Icon = 0x110; // ObjectProperty
		constexpr auto NotifyImage = 0x118; // ObjectProperty
		constexpr auto ChallengeID = 0x120; // int32_t
	}

	namespace n_U__TAsyncResult__ClubDetails_X__NotifyOnResult_FEC09F8B4D5586932F932198E211BC40 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__ShopsManager_TA__Purchase_BD10FF944F4C35FA87361D95C21797CE {
		constexpr auto SuccessCallback = 0x60; // DelegateProperty
		constexpr auto FailedCallback = 0x78; // DelegateProperty
	}

	namespace n_U__Loadout_TA__ValidateForcedProducts_B2BEF7BA484C01AAD5AE39B9400162B8 {
		constexpr auto TeamForcedProducts = 0x60; // ObjectProperty
		constexpr auto TeamIndex = 0x68; // int32_t
	}

	namespace n_UCameraState_DirectorProxy_TA {
		constexpr auto GameEvent = 0xb8; // ObjectProperty
		constexpr auto GameObserver = 0xc0; // ComponentProperty
		constexpr auto MinimumStateTime = 0xc8; // float
		constexpr auto DistToBallWeight = 0xd0; // FInterpCurveFloat
		constexpr auto PlayersInViewWeight = 0xe8; // FInterpCurveFloat
		constexpr auto ViewPitchWeight = 0x100; // FInterpCurveFloat
		constexpr auto GoalInViewWeight = 0x118; // float
		constexpr auto CanSeeNewViewContinuity = 0x11c; // float
		constexpr auto SimilarOrientationContinuity = 0x120; // FInterpCurveFloat
		constexpr auto SimilarCarVelocityContinuity = 0x138; // FInterpCurveFloat
		constexpr auto FieldForward = 0x150; // FVector
		constexpr auto FieldSide = 0x15c; // FVector
		constexpr auto bActive = 0x168; // uint32_t : 1
		constexpr auto Director = 0x170; // ObjectProperty
		constexpr auto CameraSave = 0x178; // ObjectProperty
	}

	namespace n_UStaticDataError_X {
		constexpr auto Error = 0x60; // ObjectProperty
	}

	namespace n_U__PsyNetServiceProvider_X__ExecuteRequest_1F58DE7E4F8A270B20FE9B8746F8EC6E {
		constexpr auto Response = 0x60; // ObjectProperty
	}

	namespace n_U__Mutator_Robin_TA__Construct_9494059347F18B7BF298E3BB415ED0A3 {
		constexpr auto Override = 0x60; // ObjectProperty
	}

	namespace n_UUrlConfig_X {
		constexpr auto CDN = 0x60; // FString
		constexpr auto ESportsURL = 0x70; // FString
		constexpr auto ChinaPaymentURL = 0x80; // FString
		constexpr auto CrossPlatformSupportURL = 0x90; // FString
		constexpr auto LegalTextWebFolder = 0xa0; // FString
	}

	namespace n_ALandscape {
		constexpr auto LayerNames = 0x3b8; // TArray<FName>
		constexpr auto LayerInfos = 0x3c8; // TArray<FLandscapeLayerInfo>
	}

	namespace n_ULocalizedAccountLinkURL {
		constexpr auto Language = 0x60; // FString
		constexpr auto URL = 0x70; // FString
	}

	namespace n_UTutorialSave_TA {
		constexpr auto TrainingEventsPlayed = 0xc8; // TArray<FString>
		constexpr auto TrainingEventsPerfected = 0xd8; // TArray<FString>
	}

	namespace n_AScreenDisplayActor_TA {
		constexpr auto PC = 0x2c8; // ObjectProperty
		constexpr auto StartLocationOffset = 0x2d0; // FVector
		constexpr auto LocationOffset = 0x2dc; // FVector
		constexpr auto CurrentRotation = 0x2e8; // FRotator
		constexpr auto RotationSpeed = 0x2f4; // float
		constexpr auto StartRotationOffset = 0x2f8; // float
		constexpr auto BlendInSpeed = 0x2fc; // float
		constexpr auto BlendInAmount = 0x300; // float
		constexpr auto CameraShakeDuration = 0x304; // float
		constexpr auto CameraShakeAmplitude = 0x308; // float
		constexpr auto CameraShakeFrequency = 0x30c; // float
		constexpr auto ParticleFX = 0x310; // ObjectProperty
		constexpr auto ParticleComponent = 0x318; // ComponentProperty
		constexpr auto FXOffset = 0x320; // FVector
	}

	namespace n_UBlueprintErrors_TA {
		constexpr auto BlueprintNotEnoughCurrency = 0x80; // ObjectProperty
		constexpr auto BlueprintPriceMismatch = 0x88; // ObjectProperty
	}

	namespace n_UBTAction_Jump {
		constexpr auto MinJumpTime = 0x160; // float
		constexpr auto TargetRadiusHeightScale = 0x164; // float
		constexpr auto StateStartTime = 0x168; // float
	}

	namespace n_UServerPlayerTracker_X {
		constexpr auto Players = 0x70; // TArray<FUniqueNetId>
		constexpr auto Messages = 0x80; // TArray<ObjectProperty>
		constexpr auto Reservations = 0x90; // ObjectProperty
		constexpr auto __EventPlayerAdded__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventPlayerRemoved__Delegate = 0xb0; // DelegateProperty
	}

	namespace n_UForceFeedbackWaveform {
		constexpr auto bIsLooping = 0x60; // uint32_t : 1
		constexpr auto Samples = 0x68; // TArray<FWaveformSample>
		constexpr auto WaveformFalloffStartDistance = 0x78; // float
		constexpr auto MaxWaveformDistance = 0x7c; // float
	}

	namespace n_UUIDataStore_OnlineGameSettings {
		constexpr auto GameSettingsCfgList = 0xa0; // TArray<FGameSettingsCfg>
		constexpr auto SettingsProviderClass = 0xb0; // FNone*
		constexpr auto SelectedIndex = 0xb8; // int32_t
	}

	namespace n_U__GFxData_Products_TA__IsThumbnailReferenced_B2E07771409D56E4EF8070B967757030 {
		constexpr auto Asset = 0x60; // ObjectProperty
		constexpr auto OnlineProduct = 0x68; // ObjectProperty
		constexpr auto ThumbnailSize = 0x70; // EProductThumbnailSize
	}

	namespace n_UOnlineGameSettings_X {
		constexpr auto NumPublicConnections = 0xa0; // int32_t
		constexpr auto NumOpenPublicConnections = 0xa4; // int32_t
		constexpr auto GameSettingCategories = 0xa8; // TArray<ObjectProperty>
		constexpr auto bOffline = 0xb8; // uint32_t : 1
		constexpr auto bIgnoreHiddenMutatorsOverride = 0xb8; // uint32_t : 1
		constexpr auto MinimumPlayersRequired = 0xbc; // int32_t
		constexpr auto NumSecondsWaitingForPlayers = 0xc0; // int32_t
		constexpr auto SearchScore = 0xc4; // int32_t
		constexpr auto LogTime = 0xc8; // float
		constexpr auto __EventNumPlayersUpdated__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_UPhysicsAssetInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto RootBodyIndex = 0x68; // int32_t
		constexpr auto Bodies = 0x70; // TArray<ObjectProperty>
		constexpr auto Constraints = 0x80; // TArray<ObjectProperty>
		constexpr auto CollisionDisableTable = 0x90; // FMap_Mirror
		constexpr auto LinearSpringScale = 0xe0; // float
		constexpr auto LinearDampingScale = 0xe4; // float
		constexpr auto LinearForceLimitScale = 0xe8; // float
		constexpr auto AngularSpringScale = 0xec; // float
		constexpr auto AngularDampingScale = 0xf0; // float
		constexpr auto AngularForceLimitScale = 0xf4; // float
		constexpr auto bInitBodies = 0xf8; // uint32_t : 1
	}

	namespace n_ARenderProfiler_X {
		constexpr auto TimePerPrimitive = 0x268; // float
		constexpr auto PrimitiveProfiles = 0x270; // TArray<FPrimitiveComponentProfile>
		constexpr auto CurrentIndex = 0x280; // int32_t
		constexpr auto bInclusive = 0x284; // uint32_t : 1
		constexpr auto PrimitiveTime = 0x288; // float
		constexpr auto __EventFinished__Delegate = 0x290; // DelegateProperty
	}

	namespace n_UProductAttribute_Container_TA {
		constexpr auto bUnlocked = 0x80; // uint32_t : 1
		constexpr auto bSkipRoulette = 0x80; // uint32_t : 1
		constexpr auto bGiftbox = 0x80; // uint32_t : 1
	}

	namespace n_UProfileQuickChatSave_TA {
		constexpr auto QuickChatBindings = 0xc8; // TArray<FName>
	}

	namespace n_UMutator_Loadout_TA {
		constexpr auto Products = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UAnimNodeAdditiveBlending {
		constexpr auto bPassThroughWhenNotRendered = 0x158; // uint32_t : 1
	}

	namespace n_URadialBlurComponent_X {
		constexpr auto FadeTime = 0x110; // float
		constexpr auto FadeFalloff = 0x114; // float
	}

	namespace n_UDrawCapsuleComponent {
		constexpr auto CapsuleColor = 0x258; // FColor
		constexpr auto CapsuleMaterial = 0x260; // ObjectProperty
		constexpr auto CapsuleHeight = 0x268; // float
		constexpr auto CapsuleRadius = 0x26c; // float
		constexpr auto bDrawWireCapsule = 0x270; // uint32_t : 1
		constexpr auto bDrawLitCapsule = 0x270; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x270; // uint32_t : 1
	}

	namespace n_UFont {
		constexpr auto Characters = 0x60; // TArray<FFontCharacter>
		constexpr auto Textures = 0x70; // TArray<ObjectProperty>
		constexpr auto CharRemap = 0x80; // TMap<None, None>
		constexpr auto IsRemapped = 0xd0; // int32_t
		constexpr auto EmScale = 0xd4; // float
		constexpr auto Ascent = 0xd8; // float
		constexpr auto Descent = 0xdc; // float
		constexpr auto Leading = 0xe0; // float
		constexpr auto Kerning = 0xe4; // int32_t
		constexpr auto ImportOptions = 0xe8; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x198; // int32_t
		constexpr auto MaxCharHeight = 0x1a0; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x1b0; // float
		constexpr auto bMapUppercaseToLowercase = 0x1b4; // uint32_t : 1
		constexpr auto bMapLowercaseToUppercase = 0x1b4; // uint32_t : 1
		constexpr auto VerticalOffsetOverride = 0x1b8; // int32_t
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0xd0; // FName
		constexpr auto ExpressionGUID = 0xd8; // FGuid
		constexpr auto Group = 0xe8; // FName
	}

	namespace n_UNavMeshGoal_At {
		constexpr auto Goal = 0x80; // FVector
		constexpr auto GoalDist = 0x8c; // float
		constexpr auto bKeepPartial = 0x90; // uint32_t : 1
		constexpr auto bWeightPartialByDist = 0x90; // uint32_t : 1
		constexpr auto bGoalInSamePolyAsAnchor = 0x90; // uint32_t : 1
		constexpr auto PartialDistSq = 0x94; // float
		constexpr auto GoalPoly = 0x98; // FPointer
		constexpr auto PartialGoal = 0xa0; // FPointer
	}

	namespace n_UCountTrigger_X {
		constexpr auto Threshold = 0x70; // int32_t
		constexpr auto Count = 0x74; // int32_t
		constexpr auto __EventTriggered__Delegate = 0x78; // DelegateProperty
	}

	namespace n_ANote_Linked_TA {
		constexpr auto NextNote = 0x278; // ObjectProperty
		constexpr auto PrevNote = 0x280; // ObjectProperty
	}

	namespace n_UGFxData_CrumbTrails_TA {
		constexpr auto TrailNames = 0x98; // TArray<FCrumbTrailName>
		constexpr auto CrumbsMgr = 0xa8; // ObjectProperty
	}

	namespace n_UParticleModuleTypeDataPhysX {
		constexpr auto PhysXParSys = 0x70; // ObjectProperty
		constexpr auto VerticalLod = 0x78; // FPhysXEmitterVerticalLodProperties
	}

	namespace n_AGRI_TA {
		constexpr auto bHasTalkers = 0x690; // uint32_t : 1
		constexpr auto NewDedicatedServerIP = 0x698; // FString
	}

	namespace n_USeqAct_SetCameraTarget {
		constexpr auto CameraTarget = 0x160; // ObjectProperty
		constexpr auto TransitionParams = 0x168; // FViewTargetTransitionParams
	}

	namespace n_UProductOverride_Materials_TA {
		constexpr auto Materials = 0x60; // TArray<ObjectProperty>
	}

	namespace n_AStaticMeshActorBasedOnExtremeContent {
		constexpr auto StaticMeshComponent = 0x268; // ComponentProperty
		constexpr auto ExtremeContent = 0x270; // TArray<FSMMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x280; // TArray<FSMMaterialSetterDatum>
	}

	namespace n_U_Types_X {
		constexpr auto __OnPriviledgeChecked__Delegate = 0x60; // DelegateProperty
		constexpr auto __ServiceExecutionDelegate__Delegate = 0x78; // DelegateProperty
		constexpr auto __OnTimer__Delegate = 0x90; // DelegateProperty
	}

	namespace n_USaveDataVersions_TA {
		constexpr auto KeyProductID = 0x60; // int32_t
		constexpr auto DecryptorProductID = 0x64; // int32_t
	}

	namespace n_UGFxData_PossibleTradeIn_TA {
		constexpr auto TradeInFilterID = 0x98; // int32_t
		constexpr auto Quality = 0x9c; // EProductQuality
		constexpr auto NumberofTradeIns = 0xa0; // int32_t
		constexpr auto RemainingItems = 0xa4; // int32_t
		constexpr auto TradeInFilter = 0xa8; // FProductTradeInFilter
	}

	namespace n_UAnimNotify_Footstep {
		constexpr auto FootDown = 0x68; // int32_t
	}

	namespace n_ULocalizationConfig_X {
		constexpr auto Overrides = 0x78; // TArray<FLocOverride>
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto Materials = 0xe8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xf8; // ObjectProperty
		constexpr auto ParamName = 0x100; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0x108; // uint32_t : 1
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x60; // int32_t
		constexpr auto bEnabled = 0x64; // uint32_t : 1
		constexpr auto ConvertedModules = 0x64; // uint32_t : 1
		constexpr auto RequiredModule = 0x68; // ObjectProperty
		constexpr auto Modules = 0x70; // TArray<ObjectProperty>
		constexpr auto TypeDataModule = 0x80; // ObjectProperty
		constexpr auto SpawnModule = 0x88; // ObjectProperty
		constexpr auto EventGenerator = 0x90; // ObjectProperty
		constexpr auto SpawningModules = 0x98; // TArray<ObjectProperty>
		constexpr auto SpawnModules = 0xa8; // TArray<ObjectProperty>
		constexpr auto UpdateModules = 0xb8; // TArray<ObjectProperty>
		constexpr auto OrbitModules = 0xc8; // TArray<ObjectProperty>
		constexpr auto EventReceiverModules = 0xd8; // TArray<ObjectProperty>
		constexpr auto PeakActiveParticles = 0xe8; // int32_t
	}

	namespace n_UProductAttribute_DisplayLabelSlot_TA {
		constexpr auto DisplayLabelSlot = 0x80; // ObjectProperty
	}

	namespace n_U__ShopAdsConfig_TA__Apply_D3A9933F40A492E64638239B68D79977 {
		constexpr auto Data = 0x60; // FShopAdData
	}

	namespace n_U__GameTags_TA__ConvertToGameTags_6D6A7B6445821018099074A6C83A1E64 {
		constexpr auto InOuter = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_FirstTimeExperience_TA__LoadFTELevel_69DF4D204A8255BCB05839A8E40DCDC6 {
		constexpr auto AddedInfo = 0x60; // FString
	}

	namespace n_UDOFEffect {
		constexpr auto FalloffExponent = 0x88; // float
		constexpr auto BlurKernelSize = 0x8c; // float
		constexpr auto MaxNearBlurAmount = 0x90; // float
		constexpr auto MinBlurAmount = 0x94; // float
		constexpr auto MaxFarBlurAmount = 0x98; // float
		constexpr auto FocusType = 0x9c; // EFocusType
		constexpr auto FocusInnerRadius = 0xa0; // float
		constexpr auto FocusDistance = 0xa4; // float
		constexpr auto FocusPosition = 0xa8; // FVector
	}

	namespace n_UApexStaticDestructibleComponent {
		constexpr auto SleepEnergyThreshold = 0x2a8; // float
		constexpr auto SleepDamping = 0x2ac; // float
		constexpr auto ApexDestructibleActor = 0x2b0; // FPointer
		constexpr auto ApexDestructiblePreview = 0x2b8; // FPointer
		constexpr auto bIsThumbnailComponent = 0x2c0; // uint32_t : 1
	}

	namespace n_UCameraState_CarPreview_TA {
		constexpr auto SideOffsets = 0x90; // TArray<float>
		constexpr auto ViewOffsets = 0xa0; // TArray<FCameraOrientation>
		constexpr auto BlendRate = 0xb0; // float
		constexpr auto MinPitch = 0xb4; // float
		constexpr auto MaxPitch = 0xb8; // float
		constexpr auto CurrentOrientation = 0xbc; // FCameraOrientation
		constexpr auto CurrentSideOffset = 0xe8; // float
		constexpr auto RotationOffset = 0xec; // FRotator
		constexpr auto PrevPremiumGarageState = 0xf8; // ObjectProperty
	}

	namespace n_UAchievementClassCollection_TA {
		constexpr auto Classes = 0x60; // TArray<FNone*>
	}

	namespace n_UInterpGroup {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto InterpTracks = 0x68; // TArray<ObjectProperty>
		constexpr auto GroupName = 0x78; // FName
		constexpr auto GroupColor = 0x80; // FColor
		constexpr auto GroupAnimSets = 0x88; // TArray<ObjectProperty>
		constexpr auto bCollapsed = 0x98; // uint32_t : 1
		constexpr auto bVisible = 0x98; // uint32_t : 1
		constexpr auto bIsFolder = 0x98; // uint32_t : 1
		constexpr auto bIsParented = 0x98; // uint32_t : 1
		constexpr auto bIsSelected = 0x98; // uint32_t : 1
	}

	namespace n_AZoneInfo {
		constexpr auto KillZ = 0x268; // float
		constexpr auto SoftKill = 0x26c; // float
		constexpr auto bSoftKillZ = 0x270; // uint32_t : 1
	}

	namespace n_UAutoTourConfig_TA {
		constexpr auto MaxTournamentsPerWeek = 0x78; // int32_t
		constexpr auto TourResultsTimeoutSeconds = 0x7c; // int32_t
		constexpr auto CurrencyID = 0x80; // int32_t
		constexpr auto MaxNumPlayers = 0x84; // int32_t
		constexpr auto bAutoPartyUpEnabled = 0x88; // uint32_t : 1
		constexpr auto ScheduleRegions = 0x90; // TArray<FScheduleRegion>
	}

	namespace n_UPlayer {
		constexpr auto VfTable_FExec = 0x60; // FPointer
		constexpr auto ObjectProvider = 0x68; // ComponentProperty
		constexpr auto RegistryGroup = 0x70; // ComponentProperty
		constexpr auto Actor = 0x78; // ObjectProperty
		constexpr auto CurrentNetSpeed = 0x80; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x84; // int32_t
		constexpr auto ConfiguredReplicationRate = 0x88; // int32_t
		constexpr auto PP_DesaturationMultiplier = 0x8c; // float
		constexpr auto PP_HighlightsMultiplier = 0x90; // float
		constexpr auto PP_MidTonesMultiplier = 0x94; // float
		constexpr auto PP_ShadowsMultiplier = 0x98; // float
		constexpr auto __EventReceivedController__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_U__Mutator_Freeplay_TA__MutateObject_D1381AD842EC4C392750A985C422F7FD {
		constexpr auto Car = 0x60; // ObjectProperty
	}

	namespace n_ACarComponent_Jump_Robin_TA {
		constexpr auto RandomPitch = 0x308; // FWaveParams
		constexpr auto RandomYaw = 0x310; // FWaveParams
		constexpr auto RandomRoll = 0x318; // FWaveParams
	}

	namespace n_UMorphNodeWeight {
		constexpr auto NodeWeight = 0xb0; // float
	}

	namespace n_AGroundStaticMeshActor_TA {
		constexpr auto HideLocationOffset = 0x288; // float
	}

	namespace n_UGameViewportClient_X {
		constexpr auto bHandCursor = 0x248; // uint32_t : 1
		constexpr auto bMuteSoundOnFocusLost = 0x248; // uint32_t : 1
		constexpr auto MaxSplitScreenPlayers = 0x24c; // int32_t
		constexpr auto __EventLocalPlayerJoin__Delegate = 0x250; // DelegateProperty
		constexpr auto __EventLocalPlayerLeave__Delegate = 0x268; // DelegateProperty
		constexpr auto __EventNotifyConnectionError__Delegate = 0x280; // DelegateProperty
		constexpr auto __EventPrimaryPlayerChange__Delegate = 0x298; // DelegateProperty
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UPhysicalMaterialProperty_X {
		constexpr auto SurfaceType = 0x60; // FName
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x268; // ComponentProperty
		constexpr auto LightEnvironment = 0x270; // ComponentProperty
		constexpr auto bDestroyOnSystemFinish = 0x278; // uint32_t : 1
		constexpr auto bPostUpdateTickGroup = 0x278; // uint32_t : 1
		constexpr auto bCurrentlyActive = 0x278; // uint32_t : 1
	}

	namespace n_UReplayComponent_TA {
		constexpr auto bRecording = 0xa0; // uint32_t : 1
		constexpr auto bPlaying = 0xa0; // uint32_t : 1
	}

	namespace n_UGFxData_GameEvent_TA {
		constexpr auto TimeRemaining = 0x98; // int32_t
		constexpr auto TimeToNextMatch = 0x9c; // int32_t
		constexpr auto TimeWaitingForPlayersRemaining = 0xa0; // int32_t
		constexpr auto bOverTime = 0xa4; // uint32_t : 1
		constexpr auto bOnline = 0xa4; // uint32_t : 1
		constexpr auto bUnfairTeams = 0xa4; // uint32_t : 1
		constexpr auto bForfeit = 0xa4; // uint32_t : 1
		constexpr auto bNoContest = 0xa4; // uint32_t : 1
		constexpr auto bServerTraveling = 0xa4; // uint32_t : 1
		constexpr auto bRankedMatch = 0xa4; // uint32_t : 1
		constexpr auto bSolo = 0xa4; // uint32_t : 1
		constexpr auto bIsBotMatch = 0xa4; // uint32_t : 1
		constexpr auto bForfeitVoteAllowed = 0xa4; // uint32_t : 1
		constexpr auto bHasLeaveMatchPenalty = 0xa4; // uint32_t : 1
		constexpr auto bCanVoteToForfeit = 0xa4; // uint32_t : 1
		constexpr auto bViewingEndGameReplay = 0xa4; // uint32_t : 1
		constexpr auto bShowIntroScene = 0xa4; // uint32_t : 1
		constexpr auto bDisableTeamSelectScreen = 0xa4; // uint32_t : 1
		constexpr auto bStayAsPartyButtonVisible = 0xa4; // uint32_t : 1
		constexpr auto bStayAsPartyButtonEnabled = 0xa4; // uint32_t : 1
		constexpr auto bServerShutdown = 0xa4; // uint32_t : 1
		constexpr auto MatchState = 0xa8; // FString
		constexpr auto GameState = 0xb8; // FName
		constexpr auto MatchType = 0xc0; // FName
		constexpr auto EventType = 0xc8; // FName
		constexpr auto ReplayScoredBy = 0xd0; // int32_t
		constexpr auto ReplayAssistedBy = 0xd4; // int32_t
		constexpr auto ReplaySpeed = 0xd8; // float
		constexpr auto ReplayTime = 0xdc; // float
		constexpr auto WinningTeam = 0xe0; // int32_t
		constexpr auto TieBreakDecision = 0xe4; // ETieBreakDecision
		constexpr auto MaxPlayers = 0xe8; // int32_t
		constexpr auto MaxScore = 0xec; // int32_t
		constexpr auto PlaylistName = 0xf0; // FString
		constexpr auto PlaylistId = 0x100; // FName
		constexpr auto ServerName = 0x108; // FString
		constexpr auto PartyPlaylistName = 0x118; // FString
		constexpr auto MutatorsString = 0x128; // FString
		constexpr auto SeriesGames = 0x138; // int32_t
	}

	namespace n_UDynamicValue_X {
		constexpr auto DefaultValue = 0x60; // float
		constexpr auto bClampMax = 0x64; // uint32_t : 1
		constexpr auto bClampMin = 0x64; // uint32_t : 1
		constexpr auto MaxValue = 0x68; // float
		constexpr auto MinValue = 0x6c; // float
		constexpr auto Modifiers = 0x70; // TArray<ObjectProperty>
		constexpr auto CachedValue = 0x80; // float
	}

	namespace n_UFirstTimeExperienceRedefinition_TA {
		constexpr auto FTERedefinedInfo = 0x60; // TArray<FRedefinedInfo>
		constexpr auto bFTEManagerEnabled = 0x70; // uint32_t : 1
		constexpr auto bClearActiveFTE = 0x70; // uint32_t : 1
	}

	namespace n_U__GFxData_MultiItemDrops_TA__DropItemGroup_C0D9E31740BB94E44C58B7AAD3BCEBFF {
		constexpr auto DropGroup = 0x60; // ObjectProperty
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0xc8; // FInterpCurveVector
		constexpr auto EulerTrack = 0xe0; // FInterpCurveVector
		constexpr auto LookupTrack = 0xf8; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0x108; // FName
		constexpr auto LinCurveTension = 0x110; // float
		constexpr auto AngCurveTension = 0x114; // float
		constexpr auto bUseQuatInterpolation = 0x118; // uint32_t : 1
		constexpr auto bShowArrowAtKeys = 0x118; // uint32_t : 1
		constexpr auto bDisableMovement = 0x118; // uint32_t : 1
		constexpr auto bShowTranslationOnCurveEd = 0x118; // uint32_t : 1
		constexpr auto bShowRotationOnCurveEd = 0x118; // uint32_t : 1
		constexpr auto bHide3DTrack = 0x118; // uint32_t : 1
		constexpr auto bUseRawActorTMforRelativeToInitial = 0x118; // uint32_t : 1
		constexpr auto MoveFrame = 0x11c; // EInterpTrackMoveFrame
		constexpr auto RotMode = 0x11d; // EInterpTrackMoveRotMode
	}

	namespace n_UOnlineFriendMap_X {
		constexpr auto PlayerMap = 0x70; // FMap_Mirror
	}

	namespace n_UInstancedFoliageSettings {
		constexpr auto Density = 0x60; // float
		constexpr auto Radius = 0x64; // float
		constexpr auto ScaleMinX = 0x68; // float
		constexpr auto ScaleMinY = 0x6c; // float
		constexpr auto ScaleMinZ = 0x70; // float
		constexpr auto ScaleMaxX = 0x74; // float
		constexpr auto ScaleMaxY = 0x78; // float
		constexpr auto ScaleMaxZ = 0x7c; // float
		constexpr auto LockScaleX = 0x80; // uint32_t : 1
		constexpr auto LockScaleY = 0x80; // uint32_t : 1
		constexpr auto LockScaleZ = 0x80; // uint32_t : 1
		constexpr auto AlignToNormal = 0x80; // uint32_t : 1
		constexpr auto RandomYaw = 0x80; // uint32_t : 1
		constexpr auto UniformScale = 0x80; // uint32_t : 1
		constexpr auto ReapplyDensity = 0x80; // uint32_t : 1
		constexpr auto ReapplyRadius = 0x80; // uint32_t : 1
		constexpr auto ReapplyAlignToNormal = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomYaw = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleX = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleY = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleZ = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomPitchAngle = 0x80; // uint32_t : 1
		constexpr auto ReapplyGroundSlope = 0x80; // uint32_t : 1
		constexpr auto ReapplyHeight = 0x80; // uint32_t : 1
		constexpr auto ReapplyLandscapeLayer = 0x80; // uint32_t : 1
		constexpr auto ReapplyZOffset = 0x80; // uint32_t : 1
		constexpr auto CastShadow = 0x80; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x80; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x80; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x80; // uint32_t : 1
		constexpr auto bNoModSelfShadow = 0x80; // uint32_t : 1
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x80; // uint32_t : 1
		constexpr auto bCastHiddenShadow = 0x80; // uint32_t : 1
		constexpr auto bCastShadowAsTwoSided = 0x80; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x80; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x80; // uint32_t : 1
		constexpr auto bUseOnePassLightingOnTranslucency = 0x80; // uint32_t : 1
		constexpr auto bUsePrecomputedShadows = 0x80; // uint32_t : 1
		constexpr auto bCollideActors = 0x80; // uint32_t : 1
		constexpr auto bBlockActors = 0x80; // uint32_t : 1
		constexpr auto bBlockNonZeroExtent = 0x84; // uint32_t : 1
		constexpr auto bBlockZeroExtent = 0x84; // uint32_t : 1
		constexpr auto IsSelected = 0x84; // uint32_t : 1
		constexpr auto ShowNothing = 0x84; // uint32_t : 1
		constexpr auto ShowPaintSettings = 0x84; // uint32_t : 1
		constexpr auto ShowInstanceSettings = 0x84; // uint32_t : 1
		constexpr auto AlignMaxAngle = 0x88; // float
		constexpr auto RandomPitchAngle = 0x8c; // float
		constexpr auto GroundSlope = 0x90; // float
		constexpr auto HeightMin = 0x94; // float
		constexpr auto HeightMax = 0x98; // float
		constexpr auto LandscapeLayer = 0x9c; // FName
		constexpr auto ZOffsetMin = 0xa4; // float
		constexpr auto ZOffsetMax = 0xa8; // float
		constexpr auto MaxInstancesPerCluster = 0xac; // int32_t
		constexpr auto MaxClusterRadius = 0xb0; // float
		constexpr auto ReapplyDensityAmount = 0xb4; // float
		constexpr auto StartCullDistance = 0xb8; // int32_t
		constexpr auto EndCullDistance = 0xbc; // int32_t
		constexpr auto CullOption = 0xc0; // FoliageCullOption
		constexpr auto DetailMode = 0xc1; // EDetailMode
		constexpr auto DisplayOrder = 0xc4; // int32_t
	}

	namespace n_UPersonaSave_TA {
		constexpr auto RecentPlayers = 0xc8; // TArray<FPersonaDataId>
		constexpr auto RecentTradingPartners = 0xd8; // TArray<FPersonaDataId>
		constexpr auto RecentGameIDs = 0xe8; // TArray<FPlayerGameID>
		constexpr auto PresenceState = 0xf8; // EOnlineFriendState
		constexpr auto __PresenceState__ChangeNotify = 0x100; // DelegateProperty
	}

	namespace n_U__GFxData_FaceIt_TA__HandleError_EE2222C54A28235ADEF714875F9E51A9 {
		constexpr auto InError = 0x60; // ObjectProperty
	}

	namespace n_U__GFxData_MTXGarage_TA__RevealContainerUnlocks_7B873B4246E7863D3210A980588AFD2C {
		constexpr auto OnlineProducts = 0x60; // TArray<ObjectProperty>
		constexpr auto ProductsSave = 0x70; // ObjectProperty
		constexpr auto PCSaveData = 0x78; // ObjectProperty
	}

	namespace n_UAnimNotify_TriggerTurntableEvent_TA {
		constexpr auto TurntableEventName = 0x68; // FName
		constexpr auto bPlayInReverse = 0x70; // uint32_t : 1
	}

	namespace n_UNotification_AchievementUnlocked_TA {
		constexpr auto Id = 0x110; // int32_t
		constexpr auto Points = 0x114; // int32_t
		constexpr auto Icon = 0x118; // ObjectProperty
	}

	namespace n_UGFxData_TrainingMode_TA {
		constexpr auto Status = 0x98; // EBasicLoadResult
		constexpr auto SanitizedTrainingModeName = 0xa0; // FString
		constexpr auto SanitizedCreatorName = 0xb0; // FString
		constexpr auto Tags = 0xc0; // FString
		constexpr auto bOwned = 0xd0; // uint32_t : 1
		constexpr auto bFavorited = 0xd0; // uint32_t : 1
		constexpr auto bOutOfDate = 0xd0; // uint32_t : 1
		constexpr auto bPerfectCompleted = 0xd0; // uint32_t : 1
		constexpr auto PublishedTime = 0xd8; // FString
		constexpr auto UpdatedAtTime = 0xe8; // FString
		constexpr auto ShotsCompleted = 0xf8; // int32_t
		constexpr auto CreatorPlatform = 0x100; // FString
		constexpr auto CreatorAvatar = 0x110; // ObjectProperty
		constexpr auto SaveDataFilename = 0x118; // FString
		constexpr auto SavingFilename = 0x128; // FString
		constexpr auto AutoplayName = 0x138; // FString
		constexpr auto SaveData = 0x148; // ObjectProperty
		constexpr auto OpenTrainingMapBaseCmd = 0x150; // FString
		constexpr auto OutOfDateMessage = 0x160; // FString
		constexpr auto DownloadingTrainingModeTitleMessage = 0x170; // FString
		constexpr auto DownloadingTrainingModeBodyMessage = 0x180; // FString
		constexpr auto ModalProcessing = 0x190; // ObjectProperty
		constexpr auto __EventTrainingModeDownloadPlay__Delegate = 0x198; // DelegateProperty
		constexpr auto __EventTrainingModeFavorited__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __EventTrainingModeLoaded__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __EventTrainingModeSaved__Delegate = 0x1e0; // DelegateProperty
		constexpr auto __EventTrainingModeWordFilterError__Delegate = 0x1f8; // DelegateProperty
	}

	namespace n_UViewMetricsConfig_TA {
		constexpr auto DisabledViews = 0x78; // TArray<FName>
	}

	namespace n_UAIProxy_TA {
		constexpr auto Actor = 0x60; // ObjectProperty
		constexpr auto Location = 0x68; // FVector
		constexpr auto Velocity = 0x74; // FVector
		constexpr auto Rotation = 0x80; // FRotator
		constexpr auto Forward = 0x8c; // FVector
		constexpr auto Right = 0x98; // FVector
		constexpr auto Up = 0xa4; // FVector
		constexpr auto Speed = 0xb0; // float
		constexpr auto Speed2D = 0xb4; // float
		constexpr auto ForwardSpeed = 0xb8; // float
	}

	namespace n_UTerrainWeightMapTexture {
		constexpr auto ParentTerrain = 0x280; // ObjectProperty
		constexpr auto WeightedMaterials = 0x288; // TArray<FPointer>
	}

	namespace n_UPsyNetService_AutoTourReceiveBannedPartyMembers_TA {
		constexpr auto BannedTeamMembers = 0x90; // TArray<FUniqueNetId>
	}

	namespace n_USeqAct_CreateAttachComponent_TA {
		constexpr auto AttachTo = 0x160; // ObjectProperty
		constexpr auto AttachingComponent = 0x168; // ComponentProperty
	}

	namespace n_UActorFactoryStaticMesh {
		constexpr auto StaticMesh = 0xa0; // ObjectProperty
		constexpr auto DrawScale3D = 0xa8; // FVector
	}

	namespace n_ADecalActorBase {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x268; // FPointer
		constexpr auto Decal = 0x270; // ComponentProperty
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x60; // FString
	}

	namespace n_UInterpGroupAI {
		constexpr auto PreviewPawnClass = 0xa0; // FNone*
		constexpr auto StageMarkGroup = 0xa8; // FName
		constexpr auto SnapToRootBoneLocationWhenFinished = 0xb0; // uint32_t : 1
		constexpr auto bNoEncroachmentCheck = 0xb0; // uint32_t : 1
		constexpr auto bDisableWorldCollision = 0xb0; // uint32_t : 1
		constexpr auto bIgnoreLegacyHeightAdjust = 0xb0; // uint32_t : 1
		constexpr auto bRecreatePreviewPawn = 0xb0; // uint32_t : 1
		constexpr auto bRefreshStageMarkGroup = 0xb0; // uint32_t : 1
	}

	namespace n_ULoadout_TA {
		constexpr auto Products = 0x60; // TArray<int32_t>
		constexpr auto OnlineProducts = 0x70; // TArray<QWordProperty>
		constexpr auto OnlineProducts128 = 0x80; // TArray<FProductInstanceID>
		constexpr auto TeamPaint = 0x90; // FLoadoutTeamPaint
		constexpr auto TeamPaints = 0xa0; // FLoadoutTeamPaint [0x2]
		constexpr auto PlayerTitle = 0xc0; // FName
		constexpr auto GaragePreviewTeam = 0xc8; // int32_t
		constexpr auto Profile = 0xd0; // ObjectProperty
		constexpr auto __EventChanged__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventPreviewTeamChanged__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventProductEquipped__Delegate = 0x108; // DelegateProperty
		constexpr auto __EventOnlineProductEquipped__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UUIDataProvider_OnlinePlayerStorage {
		constexpr auto Profile = 0x78; // ObjectProperty
		constexpr auto ProviderName = 0x80; // FName
		constexpr auto bWasErrorLastRead = 0x88; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x88; // uint32_t : 1
		constexpr auto bNeedsDeferredRefresh = 0x88; // uint32_t : 1
		constexpr auto PlayerStorageArrayProviders = 0x90; // TArray<FPlayerStorageArrayProvider>
		constexpr auto DeviceStorageSizeNeeded = 0xa0; // int32_t
	}

	namespace n_USetPlayerStorageResult_X {
		constexpr auto Items = 0x60; // TArray<FSetPlayerStorageResultItem>
	}

	namespace n_UMatchmakingViewFilter_DebugMicroEvent_TA {
		constexpr auto SpecialEventConfig = 0x60; // ObjectProperty
		constexpr auto Playlists = 0x68; // TScriptInterface<Class>
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0xc0; // FExpressionInput
		constexpr auto Lightmass = 0xf8; // FExpressionInput
	}

	namespace n_U__OnlineClubManager_X__LeaveClub_6E26DAC64A3D2D9B3C1F7A99723E919B {
		constexpr auto ClubID = 0x60; // QWordProperty
	}

	namespace n_UGFxData_ChallengeManager_TA {
		constexpr auto ActiveFolderCodeName = 0x98; // FString
		constexpr auto ActiveChallengeFilter = 0xa8; // EChallengeFilter
		constexpr auto ChallengeManager = 0xb0; // ObjectProperty
		constexpr auto GFxChallengePages = 0xb8; // TArray<ObjectProperty>
		constexpr auto ChallengeFilters = 0xc8; // TArray<FNone*>
	}

	namespace n_UPitchTekSettings {
		constexpr auto bEnabled = 0x60; // uint32_t : 1
		constexpr auto bUseInitialColorTexture = 0x60; // uint32_t : 1
		constexpr auto bUseInitialDataTexture = 0x60; // uint32_t : 1
		constexpr auto bRenderBallDecalOnContact = 0x60; // uint32_t : 1
		constexpr auto bRenderCarPositionDecal = 0x60; // uint32_t : 1
		constexpr auto ColorTargetSize = 0x64; // EPitchTekTargetSize
		constexpr auto DataTargetSize = 0x65; // EPitchTekTargetSize
		constexpr auto PitchLengthX = 0x68; // float
		constexpr auto PitchLengthY = 0x6c; // float
		constexpr auto InitialColorTexture = 0x70; // ObjectProperty
		constexpr auto InitialDataTexture = 0x78; // ObjectProperty
		constexpr auto ClearSettings = 0x80; // FPitchTekClearSettings
		constexpr auto BallContactHeight = 0x90; // float
		constexpr auto BallSettings = 0x98; // FPitchTekTextureDecalSettings
		constexpr auto WheelContactHeight = 0xb8; // float
		constexpr auto WheelSettings = 0xc0; // FPitchTekTextureDecalSettings
		constexpr auto CarBodyContactHeight = 0xe0; // float
		constexpr auto CarBodySettings = 0xe8; // FPitchTekTextureDecalSettings
		constexpr auto DemolitionExplosionMaxHeight = 0x108; // float
		constexpr auto DemolitionSettings = 0x110; // FPitchTekTextureDecalSettings
		constexpr auto GoalExplosionSettings = 0x130; // FPitchTekTextureDecalSettings
		constexpr auto JumpBlastMaxHeight = 0x150; // float
		constexpr auto JumpBlastSettings = 0x158; // FPitchTekTextureDecalSettings
		constexpr auto CarPositionSettings = 0x178; // FPitchTekTextureDecalSettings
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0xc0; // FExpressionInput
		constexpr auto Time = 0xf8; // FExpressionInput
		constexpr auto SpeedX = 0x130; // float
		constexpr auto SpeedY = 0x134; // float
	}

	namespace n_URPC_RedeemCode_TA {
		constexpr auto Code = 0xe8; // FString
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
		constexpr auto Drops = 0x140; // TArray<FOnlineProductData>
	}

	namespace n_AHUDActor_TA {
		constexpr auto HUD = 0x268; // ObjectProperty
		constexpr auto __RenderDelegate__Delegate = 0x270; // DelegateProperty
	}

	namespace n_U__OnlinePlayerFriends_X__BlockPlayer_D775BE5A4122FCBDE39A0FAF1619C915 {
		constexpr auto BlockedPlayerName = 0x60; // FString
		constexpr auto BlockedTag = 0x70; // FPsyTag
		constexpr auto Callback = 0x88; // DelegateProperty
	}

	namespace n_USequenceEvent {
		constexpr auto DuplicateEvts = 0x140; // TArray<ObjectProperty>
		constexpr auto Originator = 0x150; // ObjectProperty
		constexpr auto Instigator = 0x158; // ObjectProperty
		constexpr auto ActivationTime = 0x160; // float
		constexpr auto TriggerCount = 0x164; // int32_t
		constexpr auto MaxTriggerCount = 0x168; // int32_t
		constexpr auto ReTriggerDelay = 0x16c; // float
		constexpr auto bEnabled = 0x170; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x170; // uint32_t : 1
		constexpr auto bRegistered = 0x170; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x170; // uint32_t : 1
		constexpr auto Priority = 0x174; // char
		constexpr auto MaxWidth = 0x178; // int32_t
	}

	namespace n_ASpecialPickup_Spring_TA {
		constexpr auto Force = 0x3c0; // float
		constexpr auto VerticalForce = 0x3c4; // float
		constexpr auto Torque = 0x3c8; // FVector
		constexpr auto bApplyRelativeForce = 0x3d4; // uint32_t : 1
		constexpr auto bApplyConstantForce = 0x3d4; // uint32_t : 1
		constexpr auto bBreakConstantForceWithHit = 0x3d4; // uint32_t : 1
		constexpr auto bApplyRelativeConstantForce = 0x3d4; // uint32_t : 1
		constexpr auto bInstant = 0x3d4; // uint32_t : 1
		constexpr auto bFollowAfterHit = 0x3d4; // uint32_t : 1
		constexpr auto bSpringed = 0x3d4; // uint32_t : 1
		constexpr auto RelativeForceCurve = 0x3d8; // FInterpCurveFloat
		constexpr auto RelativeForceNormalDirection = 0x3f0; // float
		constexpr auto MaxSpringLength = 0x3f4; // float
		constexpr auto ConstantForce = 0x3f8; // float
		constexpr auto RelativeConstantForceCurve = 0x400; // FInterpCurveFloat
		constexpr auto SpringLengthCurve = 0x418; // FInterpCurveFloat
		constexpr auto FromOffset = 0x430; // FVector
		constexpr auto SpringMesh = 0x440; // ObjectProperty
		constexpr auto SpringMeshScale = 0x448; // FVector
		constexpr auto SpringMeshInitialSize = 0x454; // float
		constexpr auto SpringRotationOffset = 0x458; // FRotator
		constexpr auto HittingMesh = 0x468; // ObjectProperty
		constexpr auto HittingMeshScale = 0x470; // FVector
		constexpr auto HittingMeshOffset = 0x47c; // FVector
		constexpr auto HittingRotationOffset = 0x488; // FRotator
		constexpr auto HitDistanceOffset = 0x494; // float
		constexpr auto AfterSpringDuration = 0x498; // float
		constexpr auto BallHitType = 0x49c; // EBallHitType
		constexpr auto AfterHitLengthCurve = 0x4a0; // FInterpCurveFloat
		constexpr auto HitFXArchetype = 0x4b8; // ObjectProperty
		constexpr auto ShootFXArchetype = 0x4c0; // ObjectProperty
		constexpr auto HitSFX = 0x4c8; // ObjectProperty
		constexpr auto FadeOutParam = 0x4d0; // FName
		constexpr auto FadeOutCurve = 0x4d8; // FInterpCurveFloat
		constexpr auto MinSpringLength = 0x4f0; // float
		constexpr auto WeldedForceScalar = 0x4f4; // float
		constexpr auto WeldedVerticalForce = 0x4f8; // float
		constexpr auto CurrentSpringLength = 0x4fc; // float
		constexpr auto SpringedTime = 0x500; // float
		constexpr auto SMC = 0x508; // ComponentProperty
		constexpr auto SMI = 0x510; // ObjectProperty
		constexpr auto HMC = 0x518; // ComponentProperty
		constexpr auto HMI = 0x520; // TArray<ObjectProperty>
		constexpr auto AfterSpringTime = 0x530; // float
		constexpr auto SpringToTime = 0x534; // float
		constexpr auto SpringOrigin = 0x538; // FVector
		constexpr auto SpringedLocation = 0x544; // FVector
		constexpr auto SpringedNormal = 0x550; // FVector
		constexpr auto SpringedLength = 0x55c; // float
		constexpr auto ShootFX = 0x560; // ObjectProperty
	}

	namespace n_UServerVoteStartedEvent_TA {
		constexpr auto Voters = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UTcpMessageBeacon {
		constexpr auto MessageComponent = 0xe0; // ComponentProperty
		constexpr auto __EventMessageReceived__Delegate = 0xe8; // DelegateProperty
	}

	namespace n_UPrimitiveComponent {
		constexpr auto Tag = 0xa0; // int32_t
		constexpr auto Bounds = 0xa4; // FBoxSphereBounds
		constexpr auto SceneInfo = 0xc0; // FPointer
		constexpr auto DetachFence = 0xc8; // int32_t
		constexpr auto LocalToWorldDeterminant = 0xcc; // float
		constexpr auto LocalToWorld = 0xd0; // FMatrix
		constexpr auto MotionBlurInfoIndex = 0x110; // int32_t
		constexpr auto DecalList = 0x118; // TArray<FPointer>
		constexpr auto DecalsToReattach = 0x128; // TArray<ComponentProperty>
		constexpr auto ShadowParent = 0x138; // ComponentProperty
		constexpr auto ReplacementPrimitive = 0x140; // ComponentProperty
		constexpr auto FogVolumeComponent = 0x148; // ComponentProperty
		constexpr auto OverrideLightComponent = 0x150; // ComponentProperty
		constexpr auto LightEnvironment = 0x158; // ComponentProperty
		constexpr auto PreviousLightEnvironment = 0x160; // ComponentProperty
		constexpr auto MinDrawDistance = 0x168; // float
		constexpr auto MassiveLODDistance = 0x16c; // float
		constexpr auto MaxDrawDistance = 0x170; // float
		constexpr auto CachedMaxDrawDistance = 0x174; // float
		constexpr auto MotionBlurInstanceScale = 0x178; // float
		constexpr auto CullDistance = 0x17c; // float
		constexpr auto CachedCullDistance = 0x180; // float
		constexpr auto DepthPriorityGroup = 0x184; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x185; // ESceneDepthPriorityGroup
		constexpr auto DetailMode = 0x186; // EDetailMode
		constexpr auto RBChannel = 0x187; // ERBCollisionChannel
		constexpr auto RBDominanceGroup = 0x188; // char
		constexpr auto PreviewEnvironmentShadowing = 0x189; // char
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x18c; // uint32_t : 1
		constexpr auto bOnlyBlockActorMovement = 0x18c; // uint32_t : 1
		constexpr auto bAllowCullDistanceVolume = 0x18c; // uint32_t : 1
		constexpr auto HiddenGame = 0x18c; // uint32_t : 1
		constexpr auto HiddenEditor = 0x18c; // uint32_t : 1
		constexpr auto bOwnerNoSee = 0x18c; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreOwnerHidden = 0x18c; // uint32_t : 1
		constexpr auto bUseAsOccluder = 0x18c; // uint32_t : 1
		constexpr auto bAllowApproximateOcclusion = 0x18c; // uint32_t : 1
		constexpr auto bFirstFrameOcclusion = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreNearPlaneIntersection = 0x18c; // uint32_t : 1
		constexpr auto bSelectable = 0x18c; // uint32_t : 1
		constexpr auto bForceMipStreaming = 0x18c; // uint32_t : 1
		constexpr auto bAcceptsStaticDecals = 0x18c; // uint32_t : 1
		constexpr auto bAcceptsDynamicDecals = 0x18c; // uint32_t : 1
		constexpr auto bIsRefreshingDecals = 0x18c; // uint32_t : 1
		constexpr auto bAllowDecalAutomaticReAttach = 0x18c; // uint32_t : 1
		constexpr auto bUsePerInstanceHitProxies = 0x18c; // uint32_t : 1
		constexpr auto CastShadow = 0x18c; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x18c; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x18c; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x18c; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x18c; // uint32_t : 1
		constexpr auto bNoModSelfShadow = 0x18c; // uint32_t : 1
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x18c; // uint32_t : 1
		constexpr auto bCastHiddenShadow = 0x18c; // uint32_t : 1
		constexpr auto bCastShadowAsTwoSided = 0x18c; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x18c; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x18c; // uint32_t : 1
		constexpr auto bUseOnePassLightingOnTranslucency = 0x18c; // uint32_t : 1
		constexpr auto bUsePrecomputedShadows = 0x18c; // uint32_t : 1
		constexpr auto bHasExplicitShadowParent = 0x190; // uint32_t : 1
		constexpr auto bAllowAmbientOcclusion = 0x190; // uint32_t : 1
		constexpr auto CollideActors = 0x190; // uint32_t : 1
		constexpr auto AlwaysCheckCollision = 0x190; // uint32_t : 1
		constexpr auto BlockActors = 0x190; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x190; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x190; // uint32_t : 1
		constexpr auto CanBlockCamera = 0x190; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x190; // uint32_t : 1
		constexpr auto bBlockFootPlacement = 0x190; // uint32_t : 1
		constexpr auto bDisableAllRigidBody = 0x190; // uint32_t : 1
		constexpr auto bSkipRBGeomCreation = 0x190; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0x190; // uint32_t : 1
		constexpr auto bFluidDrain = 0x190; // uint32_t : 1
		constexpr auto bFluidTwoWay = 0x190; // uint32_t : 1
		constexpr auto bIgnoreRadialImpulse = 0x190; // uint32_t : 1
		constexpr auto bIgnoreRadialForce = 0x190; // uint32_t : 1
		constexpr auto bIgnoreForceField = 0x190; // uint32_t : 1
		constexpr auto bUseCompartment = 0x190; // uint32_t : 1
		constexpr auto AlwaysLoadOnClient = 0x190; // uint32_t : 1
		constexpr auto AlwaysLoadOnServer = 0x190; // uint32_t : 1
		constexpr auto bIgnoreHiddenActorsMembership = 0x190; // uint32_t : 1
		constexpr auto AbsoluteTranslation = 0x190; // uint32_t : 1
		constexpr auto AbsoluteRotation = 0x190; // uint32_t : 1
		constexpr auto AbsoluteScale = 0x190; // uint32_t : 1
		constexpr auto bAllowShadowFade = 0x190; // uint32_t : 1
		constexpr auto bSupportedOnMobile = 0x190; // uint32_t : 1
		constexpr auto bWasSNFiltered = 0x190; // uint32_t : 1
		constexpr auto OctreeNodes = 0x198; // TArray<int32_t>
		constexpr auto AlwaysShowInSelectedPlatforms = 0x1a8; // TArray<OnlinePlatform>
		constexpr auto TranslucencySortPriority = 0x1b8; // int32_t
		constexpr auto VisibilityId = 0x1bc; // int32_t
		constexpr auto LightingChannels = 0x1c0; // FLightingChannelContainer
		constexpr auto bHideInLowEffectsIntensity = 0x1c4; // uint32_t : 1
		constexpr auto RBCollideWithChannels = 0x1c8; // FRBCollisionChannelContainer
		constexpr auto PhysMaterialOverride = 0x1d0; // ObjectProperty
		constexpr auto BodyInstance = 0x1d8; // ObjectProperty
		constexpr auto CachedParentToWorld = 0x1e0; // FMatrix
		constexpr auto Translation = 0x220; // FVector
		constexpr auto Rotation = 0x22c; // FRotator
		constexpr auto Scale = 0x238; // float
		constexpr auto Scale3D = 0x23c; // FVector
		constexpr auto BoundsScale = 0x248; // float
		constexpr auto LastSubmitTime = 0x24c; // float
		constexpr auto LastRenderTime = 0x250; // float
		constexpr auto ScriptRigidBodyCollisionThreshold = 0x254; // float
	}

	namespace n_USeqAct_AkSetSwitch {
		constexpr auto SwitchGroup = 0x160; // FString
		constexpr auto Switch = 0x170; // FString
	}

	namespace n_U__GFxData_TourCreate_TA__CreateTournament_903DA4244AD23C7F873FA99491182368 {
		constexpr auto FinalTourSettings = 0x60; // FTourCreateSettings
	}

	namespace n_USeqAct_LevelStreamingBase {
		constexpr auto bMakeVisibleAfterLoad = 0x178; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0x178; // uint32_t : 1
	}

	namespace n_USeqAct_IsActionPressed_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto ActionName = 0x168; // FName
	}

	namespace n_AStayAsPartyVoter_TA {
		constexpr auto PlayerID = 0x268; // FUniqueNetId
		constexpr auto Followers = 0x2b0; // TArray<FUniqueNetId>
		constexpr auto YesVote = 0x2c0; // ObjectProperty
		constexpr auto bSentPartyInvites = 0x2c8; // uint32_t : 1
		constexpr auto PRI = 0x2d0; // ObjectProperty
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x60; // FName
		constexpr auto PhysMaterial = 0x68; // ObjectProperty
		constexpr auto Hardness = 0x70; // float
		constexpr auto bNoWeightBlend = 0x74; // uint32_t : 1
	}

	namespace n_UMaterialExpressionVectorParameterReference {
		constexpr auto ReferencedParameter = 0xe0; // FName
	}

	namespace n_UMcpManagedValueManager {
		constexpr auto CreateSaveSlotUrl = 0xe8; // FString
		constexpr auto ReadSaveSlotUrl = 0xf8; // FString
		constexpr auto UpdateValueUrl = 0x108; // FString
		constexpr auto DeleteValueUrl = 0x118; // FString
		constexpr auto SaveSlots = 0x128; // TArray<FManagedValueSaveSlot>
		constexpr auto CreateSaveSlotRequests = 0x138; // TArray<FSaveSlotRequestState>
		constexpr auto ReadSaveSlotRequests = 0x148; // TArray<FSaveSlotRequestState>
		constexpr auto UpdateValueRequests = 0x158; // TArray<FValueRequestState>
		constexpr auto DeleteValueRequests = 0x168; // TArray<FValueRequestState>
	}

	namespace n_ASpecialPickup_Targeted_TA {
		constexpr auto bCanTargetBall = 0x388; // uint32_t : 1
		constexpr auto bCanTargetCars = 0x388; // uint32_t : 1
		constexpr auto bCanTargetEnemyCars = 0x388; // uint32_t : 1
		constexpr auto bCanTargetTeamCars = 0x388; // uint32_t : 1
		constexpr auto bUseDirectionalTargeting = 0x388; // uint32_t : 1
		constexpr auto bRequireTrace = 0x388; // uint32_t : 1
		constexpr auto Range = 0x38c; // float
		constexpr auto DirectionalTargetingAccuracy = 0x390; // float
		constexpr auto ClientTarget = 0x398; // ObjectProperty
		constexpr auto Targeted = 0x3a0; // ObjectProperty
		constexpr auto __EventNewTarget__Delegate = 0x3a8; // DelegateProperty
	}

	namespace n_UPsyNetService_Backfill_X {
		constexpr auto Parties = 0xb0; // TArray<FPsyNetBeaconPartyReservation>
	}

	namespace n_UGameEngine {
		constexpr auto GPendingLevel = 0x958; // ObjectProperty
		constexpr auto PendingLevelPlayerControllerClassName = 0x960; // FString
		constexpr auto LastURL = 0x970; // FURL
		constexpr auto LastRemoteURL = 0x9d0; // FURL
		constexpr auto ServerActors = 0xa30; // TArray<FString>
		constexpr auto TravelURL = 0xa40; // FString
		constexpr auto TravelType = 0xa50; // char
		constexpr auto bWorldWasLoadedThisTick = 0xa54; // uint32_t : 1
		constexpr auto bCheckForMovieCapture = 0xa54; // uint32_t : 1
		constexpr auto bTriggerPostLoadMap = 0xa54; // uint32_t : 1
		constexpr auto bStartedLoadMapMovie = 0xa54; // uint32_t : 1
		constexpr auto bUnloadingMap = 0xa54; // uint32_t : 1
		constexpr auto bShouldCommitPendingMapChange = 0xa54; // uint32_t : 1
		constexpr auto bClearAnimSetLinkupCachesOnLoadMap = 0xa54; // uint32_t : 1
		constexpr auto bEnableSecondaryDisplay = 0xa54; // uint32_t : 1
		constexpr auto bEnableSecondaryViewport = 0xa54; // uint32_t : 1
		constexpr auto OnlineSubsystem = 0xa58; // ObjectProperty
		constexpr auto DLCEnumerator = 0xa60; // ObjectProperty
		constexpr auto DownloadableContentEnumeratorClassName = 0xa68; // FString
		constexpr auto DLCManager = 0xa78; // ObjectProperty
		constexpr auto DownloadableContentManagerClassName = 0xa80; // FString
		constexpr auto LevelsToLoadForPendingMapChange = 0xa90; // TArray<FName>
		constexpr auto LoadedLevelsForPendingMapChange = 0xaa0; // TArray<ObjectProperty>
		constexpr auto PendingMapChangeFailureDescription = 0xab0; // FString
		constexpr auto MaxDeltaTime = 0xac0; // float
		constexpr auto SecondaryViewportClientClassName = 0xac8; // FString
		constexpr auto SecondaryViewportClients = 0xad8; // TArray<ObjectProperty>
		constexpr auto SecondaryViewportFrames = 0xae8; // TArray<FPointer>
		constexpr auto PendingLevelStreamingStatusUpdates = 0xaf8; // TArray<FLevelStreamingStatus>
		constexpr auto ObjectReferencers = 0xb08; // TArray<ObjectProperty>
		constexpr auto PackagesToFullyLoad = 0xb18; // TArray<FFullyLoadedPackagesInfo>
		constexpr auto NamedNetDrivers = 0xb28; // TArray<FNamedNetDriver>
		constexpr auto AnimTags = 0xb38; // TArray<FAnimTag>
	}

	namespace n_UWindPointSourceComponent {
		constexpr auto PreviewRadiusComponent = 0xb8; // ComponentProperty
		constexpr auto Radius = 0xc0; // float
	}

	namespace n_UAnimNotify_ClothingMaxDistanceScale {
		constexpr auto StartScale = 0x68; // float
		constexpr auto EndScale = 0x6c; // float
		constexpr auto ScaleMode = 0x70; // EMaxDistanceScaleMode
		constexpr auto Duration = 0x74; // float
	}

	namespace n_USeqAct_AddInt {
		constexpr auto ValueA = 0x160; // int32_t
		constexpr auto ValueB = 0x164; // int32_t
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_UCameraShake {
		constexpr auto bSingleInstance = 0x60; // uint32_t : 1
		constexpr auto bRandomAnimSegment = 0x60; // uint32_t : 1
		constexpr auto OscillationDuration = 0x64; // float
		constexpr auto OscillationBlendInTime = 0x68; // float
		constexpr auto OscillationBlendOutTime = 0x6c; // float
		constexpr auto RotOscillation = 0x70; // FROscillator
		constexpr auto LocOscillation = 0x94; // FVOscillator
		constexpr auto FOVOscillation = 0xb8; // FFOscillator
		constexpr auto Anim = 0xc8; // ObjectProperty
		constexpr auto AnimPlayRate = 0xd0; // float
		constexpr auto AnimScale = 0xd4; // float
		constexpr auto AnimBlendInTime = 0xd8; // float
		constexpr auto AnimBlendOutTime = 0xdc; // float
		constexpr auto RandomAnimSegmentDuration = 0xe0; // float
	}

	namespace n_UTAsyncResult__ClubDetails_X {
		constexpr auto Result = 0xd0; // ObjectProperty
		constexpr auto __EventResult__Delegate = 0xd8; // DelegateProperty
		constexpr auto __EventResultComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __ResultDelegate__Delegate = 0x108; // DelegateProperty
	}

	namespace n_UUdpLanServer_X {
		constexpr auto Beacon = 0x60; // ComponentProperty
		constexpr auto MetaData = 0x68; // FString
	}

	namespace n_UClient {
		constexpr auto MinDesiredFrameRate = 0x68; // float
		constexpr auto DisplayGamma = 0x6c; // float
		constexpr auto InitialButtonRepeatDelay = 0x70; // float
		constexpr auto ButtonRepeatDelay = 0x74; // float
	}

	namespace n_ULocalPlayer {
		constexpr auto VfTable_FObserverInterface = 0xb8; // FPointer
		constexpr auto ControllerId = 0xc0; // int32_t
		constexpr auto ViewportClient = 0xc8; // ObjectProperty
		constexpr auto Origin = 0xd0; // FVector2D
		constexpr auto Size = 0xd8; // FVector2D
		constexpr auto PlayerPostProcess = 0xe0; // ObjectProperty
		constexpr auto PlayerPostProcessChains = 0xe8; // TArray<ObjectProperty>
		constexpr auto bForceDefaultPostProcessChain = 0xf8; // uint32_t : 1
		constexpr auto bWantToResetToMapDefaultPP = 0xf8; // uint32_t : 1
		constexpr auto bSentSplitJoin = 0xf8; // uint32_t : 1
		constexpr auto bPendingServerAuth = 0xf8; // uint32_t : 1
		constexpr auto bDrawWorldFullScreen = 0xf8; // uint32_t : 1
		constexpr auto bReplayFXDirtied = 0xf8; // uint32_t : 1
		constexpr auto ViewState = 0x100; // FPointer
		constexpr auto ViewState2 = 0x108; // FPointer
		constexpr auto ActorVisibilityHistory = 0x110; // FSynchronizedActorVisibilityHistory
		constexpr auto LastViewLocation = 0x120; // FVector
		constexpr auto CurrentPPInfo = 0x130; // FCurrentPostProcessVolumeInfo
		constexpr auto LevelPPInfo = 0x2a8; // FCurrentPostProcessVolumeInfo
		constexpr auto ActivePPOverrides = 0x420; // TArray<FPostProcessSettingsOverride>
		constexpr auto AspectRatioAxisConstraint = 0x430; // EAspectRatioAxisConstraint
		constexpr auto LastMap = 0x438; // FString
		constexpr auto TagContext = 0x448; // ObjectProperty
		constexpr auto CachedAuthInt = 0x450; // TScriptInterface<Class>
		constexpr auto ServerAuthTimestamp = 0x460; // float
		constexpr auto ServerAuthTimeout = 0x464; // int32_t
		constexpr auto ServerAuthRetryCount = 0x468; // int32_t
		constexpr auto MaxServerAuthRetryCount = 0x46c; // int32_t
		constexpr auto ServerAuthUID = 0x470; // FUniqueNetId
		constexpr auto __bForceDefaultPostProcessChain__ChangeNotify = 0x4b8; // DelegateProperty
	}

	namespace n_U__EpicFriendsPlugin_X__SendHTTPRequest_CC46A155471073A1C524C3A16295AE17 {
		constexpr auto Callback = 0x60; // DelegateProperty
		constexpr auto ResponseClass = 0x78; // FNone*
		constexpr auto Verb = 0x80; // FString
		constexpr auto AddContentTypeHeader = 0x90; // uint32_t : 1
		constexpr auto URL = 0x98; // FString
	}

	namespace n_AFXActor_BallHaunted_TA {
		constexpr auto SwitchTeamSFX = 0x3c0; // ObjectProperty
		constexpr auto IdleSFX = 0x3c8; // ObjectProperty
		constexpr auto BeamBreakSFX = 0x3d0; // ObjectProperty
		constexpr auto BallEnterTrapSFX = 0x3d8; // ObjectProperty
		constexpr auto BallExitTrapSFX = 0x3e0; // ObjectProperty
		constexpr auto BallCountdownSFX = 0x3e8; // ObjectProperty
		constexpr auto DamageEvents = 0x3f0; // TArray<ObjectProperty>
		constexpr auto PulsePSArchetype = 0x400; // ObjectProperty
		constexpr auto PulsePSParam = 0x408; // FName
		constexpr auto BallPulseTimeModifier = 0x410; // float
		constexpr auto BrokenBeamResetTime = 0x414; // float
		constexpr auto MaxTimePercentageToPerformPulse = 0x418; // float
		constexpr auto BallHaunted = 0x420; // ObjectProperty
		constexpr auto DamageIndex = 0x428; // int32_t
		constexpr auto bBallExploded = 0x42c; // uint32_t : 1
		constexpr auto bBeamIsBroken = 0x42c; // uint32_t : 1
		constexpr auto CurrentBrokenTime = 0x430; // float
		constexpr auto NextPulseTime = 0x434; // float
		constexpr auto PulsePSC = 0x438; // ComponentProperty
	}

	namespace n_UProductAssetReferenceBody_TA {
		constexpr auto BodyAsset = 0x70; // ObjectProperty
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x70; // ELocationBoneSocketSource
		constexpr auto SelectionMethod = 0x71; // ELocationBoneSocketSelectionMethod
		constexpr auto UniversalOffset = 0x74; // FVector
		constexpr auto SourceLocations = 0x80; // TArray<FLocationBoneSocketInfo>
		constexpr auto bUpdatePositionEachFrame = 0x90; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x90; // uint32_t : 1
		constexpr auto bInheritVelocityAtSpawn = 0x90; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x94; // FName
		constexpr auto EditorSkelMesh = 0xa0; // ObjectProperty
		constexpr auto LastUpdateTime = 0xa8; // float
	}

	namespace n_UPhysicalMaterial {
		constexpr auto MaterialIndex = 0x60; // int32_t
		constexpr auto Friction = 0x64; // float
		constexpr auto Restitution = 0x68; // float
		constexpr auto bForceConeFriction = 0x6c; // uint32_t : 1
		constexpr auto bEnableAnisotropicFriction = 0x6c; // uint32_t : 1
		constexpr auto AnisoFrictionDir = 0x70; // FVector
		constexpr auto FrictionV = 0x7c; // float
		constexpr auto Density = 0x80; // float
		constexpr auto AngularDamping = 0x84; // float
		constexpr auto LinearDamping = 0x88; // float
		constexpr auto MagneticResponse = 0x8c; // float
		constexpr auto WindResponse = 0x90; // float
		constexpr auto InertiaScale = 0x94; // float
		constexpr auto ImpactThreshold = 0x98; // float
		constexpr auto ImpactReFireDelay = 0x9c; // float
		constexpr auto ImpactEffect = 0xa0; // ObjectProperty
		constexpr auto ImpactSound = 0xa8; // ObjectProperty
		constexpr auto SlideThreshold = 0xb0; // float
		constexpr auto SlideReFireDelay = 0xb4; // float
		constexpr auto SlideEffect = 0xb8; // ObjectProperty
		constexpr auto SlideSound = 0xc0; // ObjectProperty
		constexpr auto FractureSoundExplosion = 0xc8; // ObjectProperty
		constexpr auto FractureSoundSingle = 0xd0; // ObjectProperty
		constexpr auto Parent = 0xd8; // ObjectProperty
		constexpr auto PhysicalMaterialProperty = 0xe0; // ObjectProperty
	}

	namespace n_UAmbientOcclusionEffect {
		constexpr auto OcclusionColor = 0x88; // FLinearColor
		constexpr auto OcclusionPower = 0x98; // float
		constexpr auto OcclusionScale = 0x9c; // float
		constexpr auto OcclusionBias = 0xa0; // float
		constexpr auto MinOcclusion = 0xa4; // float
		constexpr auto SSAO2 = 0xa8; // uint32_t : 1
		constexpr auto bAngleBasedSSAO = 0xa8; // uint32_t : 1
		constexpr auto OcclusionRadius = 0xac; // float
		constexpr auto OcclusionAttenuation = 0xb0; // float
		constexpr auto OcclusionQuality = 0xb4; // EAmbientOcclusionQuality
		constexpr auto OcclusionFadeoutMinDistance = 0xb8; // float
		constexpr auto OcclusionFadeoutMaxDistance = 0xbc; // float
		constexpr auto HaloDistanceThreshold = 0xc0; // float
		constexpr auto HaloDistanceScale = 0xc4; // float
		constexpr auto HaloOcclusion = 0xc8; // float
		constexpr auto EdgeDistanceThreshold = 0xcc; // float
		constexpr auto EdgeDistanceScale = 0xd0; // float
		constexpr auto FilterDistanceScale = 0xd4; // float
		constexpr auto FilterSize = 0xd8; // int32_t
		constexpr auto HistoryConvergenceTime = 0xdc; // float
		constexpr auto HistoryWeightConvergenceTime = 0xe0; // float
	}

	namespace n_UPartyMessage_LobbySettings_X {
		constexpr auto BuildID = 0xa8; // int32_t
	}

	namespace n_AGameEvent_Soccar_TA {
		constexpr auto TestCarArchetype = 0x788; // ObjectProperty
		constexpr auto BallArchetype = 0x790; // ObjectProperty
		constexpr auto GoalIndicatorArchetype = 0x798; // ObjectProperty
		constexpr auto BallSpawnPoint = 0x7a0; // ObjectProperty
		constexpr auto StatFactoryArchetype = 0x7a8; // ObjectProperty
		constexpr auto InitialEventState = 0x7b0; // FName
		constexpr auto SeriesLength = 0x7b8; // int32_t
		constexpr auto GameTime = 0x7bc; // int32_t
		constexpr auto WarmupTime = 0x7c0; // int32_t
		constexpr auto MaxScore = 0x7c4; // int32_t
		constexpr auto AutoBalanceDifference = 0x7c8; // int32_t
		constexpr auto OvertimeComponent = 0x7d0; // ComponentProperty
		constexpr auto ScoreSlomoCurve = 0x7d8; // FInterpCurveFloat
		constexpr auto ScoreSlomoTime = 0x7f0; // float
		constexpr auto GameTimeRemaining = 0x7f4; // float
		constexpr auto SecondsRemaining = 0x7f8; // int32_t
		constexpr auto WaitTimeRemaining = 0x7fc; // int32_t
		constexpr auto TotalGameTimePlayed = 0x800; // float
		constexpr auto OvertimeTimePlayed = 0x804; // float
		constexpr auto GoalScoredMessage = 0x808; // ObjectProperty
		constexpr auto OvertimeMessage = 0x810; // ObjectProperty
		constexpr auto TwoMinRemainingMessage = 0x818; // ObjectProperty
		constexpr auto OneMinRemainingMessage = 0x820; // ObjectProperty
		constexpr auto ThirtySecondsRemainingMessage = 0x828; // ObjectProperty
		constexpr auto StopMessage = 0x830; // ObjectProperty
		constexpr auto GamePausedMessage = 0x838; // ObjectProperty
		constexpr auto GameUnPausedMessage = 0x840; // ObjectProperty
		constexpr auto OutOfBoundsMessage = 0x848; // ObjectProperty
		constexpr auto bRoundActive = 0x850; // uint32_t : 1
		constexpr auto bPlayReplays = 0x850; // uint32_t : 1
		constexpr auto bBallHasBeenHit = 0x850; // uint32_t : 1
		constexpr auto bOverTime = 0x850; // uint32_t : 1
		constexpr auto bUnlimitedTime = 0x850; // uint32_t : 1
		constexpr auto bNoContest = 0x850; // uint32_t : 1
		constexpr auto bDisableGoalDelay = 0x850; // uint32_t : 1
		constexpr auto bShowNoScorerGoalMessage = 0x850; // uint32_t : 1
		constexpr auto bMatchEnded = 0x850; // uint32_t : 1
		constexpr auto bShowIntroScene = 0x850; // uint32_t : 1
		constexpr auto bClubMatch = 0x850; // uint32_t : 1
		constexpr auto bCanDropOnlineRewards = 0x850; // uint32_t : 1
		constexpr auto bAllowHonorDuels = 0x850; // uint32_t : 1
		constexpr auto NextSpawnIndex = 0x854; // int32_t
		constexpr auto ReplayDirectorArchetype = 0x858; // ObjectProperty
		constexpr auto ReplayDirector = 0x860; // ObjectProperty
		constexpr auto GameBalls = 0x868; // TArray<ObjectProperty>
		constexpr auto TotalGameBalls = 0x878; // int32_t
		constexpr auto PostGoalTime = 0x87c; // float
		constexpr auto StatFactory = 0x880; // ObjectProperty
		constexpr auto Goals = 0x888; // TArray<ComponentProperty>
		constexpr auto SecondsRemainingCountdown = 0x898; // int32_t
		constexpr auto SecondsRemainingMessage = 0x8a0; // ObjectProperty
		constexpr auto FieldCenter = 0x8a8; // FVector
		constexpr auto GameWinner = 0x8b8; // ObjectProperty
		constexpr auto MatchWinner = 0x8c0; // ObjectProperty
		constexpr auto TieBreakDecision = 0x8c8; // ETieBreakDecision
		constexpr auto ReplicatedScoredOnTeam = 0x8c9; // char
		constexpr auto ReplicatedServerPerformanceState = 0x8ca; // EConnectionQualityState
		constexpr auto MVP = 0x8d0; // ObjectProperty
		constexpr auto FastestGoalPlayer = 0x8d8; // ObjectProperty
		constexpr auto SlowestGoalPlayer = 0x8e0; // ObjectProperty
		constexpr auto FurthestGoalPlayer = 0x8e8; // ObjectProperty
		constexpr auto FastestGoalSpeed = 0x8f0; // float
		constexpr auto SlowestGoalSpeed = 0x8f4; // float
		constexpr auto FurthestGoal = 0x8f8; // float
		constexpr auto ScoringPlayer = 0x900; // ObjectProperty
		constexpr auto RoundNum = 0x908; // int32_t
		constexpr auto AssistMaxTime = 0x90c; // float
		constexpr auto BallHasBeenHitStartDelay = 0x910; // float
		constexpr auto BallRespawnTime = 0x914; // float
		constexpr auto DefaultSubRules = 0x918; // ObjectProperty
		constexpr auto SubRulesArchetype = 0x920; // ObjectProperty
		constexpr auto SubRules = 0x928; // ObjectProperty
		constexpr auto SpawnPointsPodium = 0x930; // ObjectProperty
		constexpr auto PodiumDelay = 0x938; // float
		constexpr auto PodiumTime = 0x93c; // float
		constexpr auto SpawnPointLobbyTeams = 0x940; // TArray<ObjectProperty>
		constexpr auto StatCategories = 0x950; // TArray<ObjectProperty>
		constexpr auto BallTrajectory = 0x960; // ObjectProperty
		constexpr auto BallTrajectoryArchetype = 0x968; // ObjectProperty
		constexpr auto UnpauseCountdown = 0x970; // ObjectProperty
		constexpr auto Pauser = 0x978; // ObjectProperty
		constexpr auto PlayerMatchData = 0x980; // TArray<FOnlinePlayerMatchData>
		constexpr auto EndRoundComponentArchetype = 0x990; // ComponentProperty
		constexpr auto EndRoundComponent = 0x998; // ComponentProperty
		constexpr auto MatchBroadcast = 0x9a0; // ComponentProperty
		constexpr auto ReplicatedStatEvent = 0x9a8; // ObjectProperty
		constexpr auto ImportantStatEvents = 0x9b0; // TArray<ObjectProperty>
		constexpr auto GameObserver = 0x9c0; // ComponentProperty
		constexpr auto ActiveFpsRecorder = 0x9c8; // ComponentProperty
		constexpr auto InactiveFpsRecorder = 0x9d0; // ComponentProperty
		constexpr auto ServerPerformanceTracker = 0x9d8; // ComponentProperty
		constexpr auto MatchSeries = 0x9e0; // ObjectProperty
		constexpr auto CrowdSound = 0x9e8; // ComponentProperty
		constexpr auto BotDetection = 0x9f0; // ComponentProperty
		constexpr auto LobbyTagOffsetZ = 0x9f8; // float
		constexpr auto BallSpacing = 0x9fc; // float
		constexpr auto PreMatchPlayersReadyStartDelay = 0xa00; // float
		constexpr auto __EventActiveRoundChanged__Delegate = 0xa08; // DelegateProperty
		constexpr auto __EventStartNewRound__Delegate = 0xa20; // DelegateProperty
		constexpr auto __EventBallAdded__Delegate = 0xa38; // DelegateProperty
		constexpr auto __EventBallRemoved__Delegate = 0xa50; // DelegateProperty
		constexpr auto __EventFirstBallHit__Delegate = 0xa68; // DelegateProperty
		constexpr auto __EventGoalScored__Delegate = 0xa80; // DelegateProperty
		constexpr auto __EventGameTimeUpdated__Delegate = 0xa98; // DelegateProperty
		constexpr auto __EventOvertimeUpdated__Delegate = 0xab0; // DelegateProperty
		constexpr auto __EventGameEnded__Delegate = 0xac8; // DelegateProperty
		constexpr auto __EventMatchEnded__Delegate = 0xae0; // DelegateProperty
		constexpr auto __EventEndGameCountDown__Delegate = 0xaf8; // DelegateProperty
		constexpr auto __EventReplayDirectorSet__Delegate = 0xb10; // DelegateProperty
		constexpr auto __EventGameWinnerSet__Delegate = 0xb28; // DelegateProperty
		constexpr auto __EventMatchWinnerSet__Delegate = 0xb40; // DelegateProperty
		constexpr auto __EventPlayerScored__Delegate = 0xb58; // DelegateProperty
		constexpr auto __EventReplicatedGoalScored__Delegate = 0xb70; // DelegateProperty
		constexpr auto __EventStatFactoryInitialized__Delegate = 0xb88; // DelegateProperty
		constexpr auto __EventReplicatedStatEvent__Delegate = 0xba0; // DelegateProperty
		constexpr auto __EventMaxScoreChanged__Delegate = 0xbb8; // DelegateProperty
		constexpr auto __EventReplayFinished__Delegate = 0xbd0; // DelegateProperty
		constexpr auto __WaitTimeRemaining__ChangeNotify = 0xbe8; // DelegateProperty
		constexpr auto __bShowIntroScene__ChangeNotify = 0xc00; // DelegateProperty
		constexpr auto __bClubMatch__ChangeNotify = 0xc18; // DelegateProperty
		constexpr auto __bCanDropOnlineRewards__ChangeNotify = 0xc30; // DelegateProperty
		constexpr auto __TieBreakDecision__ChangeNotify = 0xc48; // DelegateProperty
		constexpr auto __ReplicatedServerPerformanceState__ChangeNotify = 0xc60; // DelegateProperty
	}

	namespace n_UKoalaController_TA {
		constexpr auto OnlineGame = 0x60; // ObjectProperty
		constexpr auto KoalaConfig = 0x68; // ObjectProperty
		constexpr auto CurrentGameEvent = 0x70; // ObjectProperty
		constexpr auto bKoalaEnabled = 0x78; // uint32_t : 1
		constexpr auto bGoalReplayClippingEnabled = 0x78; // uint32_t : 1
		constexpr auto bUploadingFinished = 0x78; // uint32_t : 1
		constexpr auto NextPendingState = 0x7c; // FName
		constexpr auto ClipLengthSeconds = 0x88; // QWordProperty
		constexpr auto MinClipLengthSeconds = 0x90; // int32_t
		constexpr auto __EventKoalaStartCapturingClip__Delegate = 0x98; // DelegateProperty
		constexpr auto __EventKoalaStartCapturingClipFailed__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventKoalaClipSaved__Delegate = 0xc8; // DelegateProperty
		constexpr auto __EventKoalaStateChanged__Delegate = 0xe0; // DelegateProperty
		constexpr auto __bKoalaEnabled__ChangeNotify = 0xf8; // DelegateProperty
		constexpr auto __bGoalReplayClippingEnabled__ChangeNotify = 0x110; // DelegateProperty
		constexpr auto __bUploadingFinished__ChangeNotify = 0x128; // DelegateProperty
	}

	namespace n_U__ProductAsset_Skin_TA__GetSkinParameters_567C01134611C7CADDA5449276F454BE {
		constexpr auto ForBodyID = 0x60; // int32_t
	}

	namespace n_URewardDrop_XPMultiplier_TA {
		constexpr auto Total = 0x68; // float
	}

	namespace n_U__Profile_TA__ValidateLoadoutsWithProduct_B03B60954C93A0AFCF638BBECBBFF14F {
		constexpr auto OnlineID = 0x60; // FProductInstanceID
	}

	namespace n_USphericalHarmonicLightComponent {
		constexpr auto WorldSpaceIncidentLighting = 0x1d0; // FSHVectorRGB
		constexpr auto bRenderBeforeModShadows = 0x260; // uint32_t : 1
	}

	namespace n_UMcpMessageBase {
		constexpr auto McpMessageManagerClassName = 0x78; // FString
		constexpr auto CompressionType = 0x88; // EMcpMessageCompressionType
		constexpr auto MessageContentsList = 0x90; // TArray<FMcpMessageContents>
		constexpr auto MessageLists = 0xa0; // TArray<FMcpMessageList>
		constexpr auto __OnCreateMessageComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnDeleteMessageComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnQueryMessagesComplete__Delegate = 0xe0; // DelegateProperty
		constexpr auto __OnQueryMessageContentsComplete__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UGFxData_SeasonReward_TA {
		constexpr auto Level = 0x98; // int32_t
		constexpr auto Wins = 0x9c; // int32_t
		constexpr auto WinsRequired = 0xa0; // int32_t
		constexpr auto bCanProgress = 0xa4; // uint32_t : 1
		constexpr auto RankedConfig = 0xa8; // ObjectProperty
		constexpr auto Skill = 0xb0; // ObjectProperty
	}

	namespace n_USpeedTreeComponentFactory {
		constexpr auto SpeedTreeComponent = 0x68; // ComponentProperty
	}

	namespace n_U__OnlineGameParty_TA__GetProfileProducts_885A25544B9702CA3A5D9F960885C22F {
		constexpr auto ProfileProductData = 0x60; // TArray<FOnlineProductData>
		constexpr auto SlotIndex = 0x70; // int32_t
	}

	namespace n_U__GFxData_Chat_TA__GetMatchChatLog_24F8742C426EEE8C202870A71B804AFC {
		constexpr auto PersonaId = 0x60; // FUniqueNetId
	}

	namespace n_UTutorial_HandBrake_TA {
		constexpr auto bCheckHandbrakeDir = 0x248; // uint32_t : 1
		constexpr auto bTriggerTouched = 0x248; // uint32_t : 1
		constexpr auto HandbrakeStartDir = 0x24c; // FVector
		constexpr auto MinHandbrakeDotAngleForStart = 0x258; // float
		constexpr auto MinHandbrakeDotAngleForComplete = 0x25c; // float
	}

	namespace n_U__UserBugReportConfig_TA__GetCategories_EB180C08439265CEF1B12B8AC8E35438 {
		constexpr auto ParentCategory = 0x60; // FName
	}

	namespace n_UMorphNodePose {
		constexpr auto Target = 0xa0; // ObjectProperty
		constexpr auto MorphName = 0xa8; // FName
		constexpr auto Weight = 0xb0; // float
	}

	namespace n_UOnlinePlayerPermissions_X {
		constexpr auto SyncDelay = 0x60; // float
		constexpr auto PendingPlayerRequests = 0x68; // TArray<FUniqueNetId>
		constexpr auto PlayerPermissions = 0x78; // TArray<FPlayerPermissionsList>
		constexpr auto __EventUpdated__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UBotConfig_TA {
		constexpr auto BotSkillByPlayerSkillCurve = 0x78; // FInterpCurveFloat
		constexpr auto BotSkillCurveForFTEMatches = 0x90; // FInterpCurveFloat
		constexpr auto BotBoostThreshold_vsAI = 0xa8; // float
		constexpr auto Skills = 0xac; // float [0x5]
		constexpr auto AvatarIDs = 0xc0; // TArray<int32_t>
		constexpr auto BannerIDs = 0xd0; // TArray<int32_t>
		constexpr auto UnselectedAvatarIDs = 0xe0; // TArray<int32_t>
		constexpr auto UnselectedBannerIDs = 0xf0; // TArray<int32_t>
		constexpr auto AllowedAvatarIDs = 0x100; // TArray<int32_t>
		constexpr auto AllowedBannerIDs = 0x110; // TArray<int32_t>
		constexpr auto IgnoredAvatarIDs = 0x120; // TArray<int32_t>
		constexpr auto IgnoredBannerIDs = 0x130; // TArray<int32_t>
	}

	namespace n_UCoverMeshComponent {
		constexpr auto Meshes = 0x308; // TArray<FCoverMeshes>
		constexpr auto LocationOffset = 0x318; // FVector
		constexpr auto AutoAdjustOn = 0x328; // ObjectProperty
		constexpr auto AutoAdjustOff = 0x330; // ObjectProperty
		constexpr auto Disabled = 0x338; // ObjectProperty
		constexpr auto bShowWhenNotSelected = 0x340; // uint32_t : 1
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0xa0; // FParticleRandomSeedInfo
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x60; // FFontImportOptionsData
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x2a8; // TArray<ObjectProperty>
		constexpr auto OverrideInvisibleActors = 0x2b8; // TArray<ObjectProperty>
	}

	namespace n_U__EpicFriendsPlugin_X__RejectFriendRequest_B07A676E41D9D3A507497287EE7B5D76 {
		constexpr auto FriendId = 0x60; // FUniqueNetId
	}

	namespace n_AInputRecorder_TA {
		constexpr auto VfTable_IITickNotify_TA = 0x268; // FPointer
		constexpr auto MaxRecordTime = 0x270; // float
		constexpr auto bRecording = 0x274; // uint32_t : 1
		constexpr auto bPlaying = 0x274; // uint32_t : 1
		constexpr auto CarStates = 0x278; // TArray<FReplicatedRBState>
		constexpr auto BallStates = 0x288; // TArray<FReplicatedRBState>
		constexpr auto Inputs = 0x298; // TArray<FVehicleInputs>
		constexpr auto InputIndex = 0x2a8; // int32_t
	}

	namespace n_AEnvironmentVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x2a8; // FPointer
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2b0; // FPointer
		constexpr auto bSplitNavMesh = 0x2b8; // uint32_t : 1
	}

	namespace n_ACarComponent_Boost_TA {
		constexpr auto BoostConsumptionRate = 0x2e8; // float
		constexpr auto MaxBoostAmount = 0x2ec; // float
		constexpr auto StartBoostAmount = 0x2f0; // float
		constexpr auto CurrentBoostAmount = 0x2f4; // float
		constexpr auto BoostModifier = 0x2f8; // float
		constexpr auto LastBoostAmountRequestTime = 0x2fc; // float
		constexpr auto LastBoostAmount = 0x300; // float
		constexpr auto bPendingConfirmBoostAmount = 0x304; // uint32_t : 1
		constexpr auto bRechargeGroundOnly = 0x304; // uint32_t : 1
		constexpr auto bNoBoost = 0x304; // uint32_t : 1
		constexpr auto BoostForce = 0x308; // float
		constexpr auto MinBoostTime = 0x30c; // float
		constexpr auto RechargeRate = 0x310; // float
		constexpr auto RechargeDelay = 0x314; // float
		constexpr auto UnlimitedBoostRefCount = 0x318; // int32_t
		constexpr auto ReplicatedBoostAmount = 0x31c; // char
		constexpr auto BoostAsset = 0x320; // ObjectProperty
		constexpr auto BoostShakeState = 0x328; // ObjectProperty
		constexpr auto ControlsSave = 0x330; // ObjectProperty
		constexpr auto __EventBoostAmountChanged__Delegate = 0x338; // DelegateProperty
	}

	namespace n_UProductTemplate_TA {
		constexpr auto Slot = 0x60; // ObjectProperty
		constexpr auto UnlockMethod = 0x68; // EUnlockMethod
		constexpr auto Quality = 0x69; // EProductQuality
		constexpr auto Folder = 0x70; // ObjectProperty
		constexpr auto DLC = 0x78; // ObjectProperty
		constexpr auto StatClass = 0x80; // FNone*
		constexpr auto RequiredProduct = 0x88; // ObjectProperty
		constexpr auto ProductIP = 0x90; // TArray<ELicenseGroup>
		constexpr auto ProductIPId = 0xa0; // QWordProperty
		constexpr auto AllowedIPId = 0xa8; // QWordProperty
		constexpr auto bWhitelistAll = 0xb0; // uint32_t : 1
		constexpr auto bLocalized = 0xb0; // uint32_t : 1
		constexpr auto bAutoGenerateDLCPack = 0xb0; // uint32_t : 1
		constexpr auto bLicensed = 0xb0; // uint32_t : 1
		constexpr auto IPWhitelist = 0xb8; // TArray<ELicenseGroup>
		constexpr auto IPBlacklist = 0xc8; // TArray<ELicenseGroup>
		constexpr auto PlatformReplacement = 0xd8; // FProductReplacement2
		constexpr auto PlatformExclusive = 0xf0; // TArray<EConsoleType>
		constexpr auto TradeRestrictions = 0x100; // TArray<EProductTradeRestriction>
		constexpr auto Attributes = 0x110; // TArray<ObjectProperty>
		constexpr auto ChinaAttributes = 0x120; // TArray<ObjectProperty>
		constexpr auto SortPriority = 0x130; // int32_t
	}

	namespace n_USeqAct_SpawnFXActor_TA {
		constexpr auto VfTable_FTickableObject = 0x160; // FPointer
		constexpr auto FXActor = 0x168; // ObjectProperty
		constexpr auto Transform = 0x170; // ObjectProperty
		constexpr auto Location = 0x178; // FVector
		constexpr auto Rotation = 0x184; // FRotator
		constexpr auto ActorToSpawnOn = 0x190; // ObjectProperty
		constexpr auto SpawnedFXActor = 0x198; // ObjectProperty
		constexpr auto Paint = 0x1a0; // ObjectProperty
		constexpr auto PaintParameterNames = 0x1a8; // FName
		constexpr auto bTickable = 0x1b0; // uint32_t : 1
		constexpr auto BallLocMic = 0x1b8; // ObjectProperty
	}

	namespace n_UMutator_Handicap_TA {
		constexpr auto AutoBalanceDifference = 0x68; // int32_t
	}

	namespace n_U__OnlineGameParty_TA__SendTradeToBackEnd_31FD64DF47D0E233CC6D7687724B2FDB {
		constexpr auto LocalProductOffers = 0x60; // TArray<FProductInstanceID>
	}

	namespace n_U__OnlineGameParty_TA__AddPlayerPartyServiceLobbyMessage_BD145E8C474B0422C979669CA2AFFB8B {
		constexpr auto Message = 0x60; // FString
	}

	namespace n_UPartyBeaconClient {
		constexpr auto HostPendingRequest = 0xa8; // FOnlineGameSearchResult
		constexpr auto PendingRequest = 0xb8; // FPartyReservation
		constexpr auto ClientBeaconState = 0x118; // EPartyBeaconClientState
		constexpr auto ClientBeaconRequestType = 0x119; // EPartyBeaconClientRequest
		constexpr auto ReservationRequestTimeout = 0x11c; // float
		constexpr auto ReservationRequestElapsedTime = 0x120; // float
		constexpr auto ResolverClassName = 0x128; // FString
		constexpr auto ResolverClass = 0x138; // FNone*
		constexpr auto Resolver = 0x140; // ObjectProperty
		constexpr auto __OnReservationRequestComplete__Delegate = 0x148; // DelegateProperty
		constexpr auto __OnReservationCountUpdated__Delegate = 0x160; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x178; // DelegateProperty
		constexpr auto __OnHostIsReady__Delegate = 0x190; // DelegateProperty
		constexpr auto __OnHostHasCancelled__Delegate = 0x1a8; // DelegateProperty
	}

	namespace n_UStatusTriggerManager_TA {
		constexpr auto Observers = 0x60; // TArray<ObjectProperty>
		constexpr auto Conditions = 0x70; // TArray<ObjectProperty>
	}

	namespace n_UImageReflectionComponent {
		constexpr auto ReflectionTexture = 0xa0; // ObjectProperty
	}

	namespace n_UInput {
		constexpr auto Bindings = 0xd0; // TArray<FKeyBind>
		constexpr auto PressedKeys = 0xe0; // TArray<FName>
		constexpr auto ReleasedAxisKeys = 0xf0; // TArray<FName>
		constexpr auto CurrentControllerId = 0x100; // int32_t
		constexpr auto CurrentEvent = 0x104; // EInputEvent
		constexpr auto CurrentDelta = 0x108; // float
		constexpr auto CurrentDeltaTime = 0x10c; // float
		constexpr auto NameToPtr = 0x110; // TMap<None, None>
		constexpr auto AxisArray = 0x160; // TArray<FPointer>
		constexpr auto CachedInputEvents = 0x170; // TArray<ObjectProperty>
		constexpr auto CachedAnalogInputEvents = 0x180; // TArray<ObjectProperty>
		constexpr auto CachedTouchInputEvents = 0x190; // TArray<ObjectProperty>
		constexpr auto CurrentTouches = 0x1a0; // TArray<FTouchTracker>
	}

	namespace n_U__OnlinePlayerFriends_TA__DownloadRecentPlayerDetails_A0653A674434F7BA6DD08C80EE7D91D1 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UGFxData_ClubMember_TA {
		constexpr auto ClubID = 0x98; // QWordProperty
		constexpr auto MemberId = 0xa0; // FUniqueNetId
		constexpr auto MemberName = 0xe8; // FString
		constexpr auto Avatar = 0xf8; // ObjectProperty
		constexpr auto UnsanitizedName = 0x100; // FString
		constexpr auto OnlineSubsytem = 0x110; // ObjectProperty
		constexpr auto WordFilter = 0x118; // ObjectProperty
		constexpr auto OnlineGame = 0x120; // ObjectProperty
	}

	namespace n_UAudioSpectatorMixComponent_TA {
		constexpr auto SpectatorCameraModeStateGroup = 0xa8; // FName
		constexpr auto SpectatorCameraMode_Fly = 0xb0; // FName
		constexpr auto SpectatorCameraMode_Director_Base = 0xb8; // FName
		constexpr auto SpectatorCameraMode_Director_Countdown = 0xc0; // FName
		constexpr auto SpectatorCameraMode_None = 0xc8; // FName
		constexpr auto CurrentGameState = 0xd0; // FName
		constexpr auto CurrentCameraState = 0xd8; // FName
		constexpr auto ActorCameraFocusRTPC = 0xe0; // FName
		constexpr auto ActorInViewRTPC = 0xe8; // FName
		constexpr auto ReplayCarFocusRTPC = 0xf0; // FName
		constexpr auto ReplayCameraViewFocusRTPC = 0xf8; // FName
		constexpr auto IsLocalRPTC = 0x100; // FName
		constexpr auto TargetCar = 0x108; // ObjectProperty
		constexpr auto bShouldFocusCar = 0x110; // uint32_t : 1
		constexpr auto bShouldFocusCameraView = 0x110; // uint32_t : 1
		constexpr auto bShouldFocusCarBeLocal = 0x110; // uint32_t : 1
		constexpr auto ReplayCamera = 0x118; // ObjectProperty
		constexpr auto GameEvent = 0x120; // ObjectProperty
	}

	namespace n_U__VanitySetManager_TA__RequestBanners_E4B2474A4B0285EC9F2461A71C81E329 {
		constexpr auto EmptyID = 0x60; // FUniqueNetId
	}

	namespace n_UAkPlaySoundComponent {
		constexpr auto VfTable_IISetParameter = 0xa0; // FPointer
		constexpr auto SoundCue = 0xa8; // ObjectProperty
		constexpr auto bAutoPlay = 0xb0; // uint32_t : 1
		constexpr auto bKillSoundOnDetach = 0xb0; // uint32_t : 1
		constexpr auto bWasAttached = 0xb0; // uint32_t : 1
		constexpr auto Translation = 0xb4; // FVector
		constexpr auto Rotation = 0xc0; // FRotator
		constexpr auto ReFireDelay = 0xcc; // float
		constexpr auto Receiver = 0xd0; // EAkPlaySoundReceiver
		constexpr auto RestartSwitches = 0xd8; // TArray<FName>
		constexpr auto SoundSource = 0xe8; // ComponentProperty
		constexpr auto LastPlayTime = 0xf0; // float
		constexpr auto StoredParameters = 0xf8; // FAkParamSet
	}

	namespace n_UTourStatus_TA {
		constexpr auto Statuses = 0x60; // TArray<FTourStatus>
		constexpr auto Tournaments = 0x70; // ObjectProperty
	}

	namespace n_U__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_57A1281C476AB6C703A8AE9D1AC6CEAC {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UOnlineProductExpirationHelper_TA {
		constexpr auto ExpirationProducts = 0x60; // TArray<ObjectProperty>
		constexpr auto ExpiredProducts = 0x70; // TArray<ObjectProperty>
		constexpr auto ExpiredProductNotificationQueue = 0x80; // TArray<ObjectProperty>
		constexpr auto ExpiredProductsSet = 0x90; // ComponentProperty
	}

	namespace n_U__StayAsPartySystem_TA__MergeEventConfirmFollower_90A7EBB341571C95F7BABFB07C95DB3F {
		constexpr auto MergeEvent = 0x60; // ObjectProperty
	}

	namespace n_U__OnlineGameReservations_X__RecordReservation_1EF42CFF4902526487C2C49CCF7B55B4 {
		constexpr auto Message = 0x60; // ObjectProperty
	}

	namespace n_UAnimNodeBlendBase_X {
		constexpr auto BlendTime = 0x170; // float
		constexpr auto ChildBlendTimes = 0x178; // TArray<float>
		constexpr auto bRebuildChildren = 0x188; // uint32_t : 1
		constexpr auto bChildrenUpdated = 0x188; // uint32_t : 1
	}

	namespace n_UProductAssetReferenceWheel_TA {
		constexpr auto WheelAsset = 0x70; // ObjectProperty
	}

	namespace n_AFXActor_GameEditorActor_TA {
		constexpr auto SpeedMultiplier = 0x328; // float
		constexpr auto EditingState = 0x330; // ObjectProperty
		constexpr auto PrevLocation = 0x338; // FVector
	}

	namespace n_UDemoExplosionHandler_TA {
		constexpr auto DemoFXToApply = 0x150; // ObjectProperty
	}

	namespace n_UMenuSequence_TA {
		constexpr auto CameraState = 0x60; // FName
		constexpr auto bRemotePlayersHidden = 0x68; // uint32_t : 1
		constexpr auto bLockPreviewActor = 0x68; // uint32_t : 1
		constexpr auto bImmediate = 0x68; // uint32_t : 1
		constexpr auto MenuSequenceComp = 0x70; // ComponentProperty
		constexpr auto __EventEnteredSequence__Delegate = 0x78; // DelegateProperty
		constexpr auto __EventLeftSequence__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UEngineAudioPreviewBase_TA {
		constexpr auto StartDelay = 0x60; // float
		constexpr auto AccelerateDelay = 0x64; // float
		constexpr auto AccelerateLength = 0x68; // float
		constexpr auto IdleLength = 0x6c; // float
		constexpr auto EngineAsset = 0x70; // ObjectProperty
		constexpr auto Ak = 0x78; // ComponentProperty
		constexpr auto Throttle = 0x80; // float
	}

	namespace n_UActorFactoryEmitter {
		constexpr auto ParticleSystem = 0xa0; // ObjectProperty
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto TransformSourceType = 0xf8; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0xf9; // EMaterialVectorCoordTransform
	}

	namespace n_U__PsyNetMessengerHttp_X__SendMessage_04B07269444A8302127D5BB5211A5D15 {
		constexpr auto PsyRequestID = 0x60; // FString
		constexpr auto Task = 0x70; // ObjectProperty
	}

	namespace n_UOnlineUserCloudFileInterfaceEOS {
		constexpr auto PDSHandle = 0x60; // FPointer
		constexpr auto LastReadFileErrorCode = 0x68; // int32_t
		constexpr auto PlayerInterfaceEOS = 0x70; // ObjectProperty
		constexpr auto EnumerateUserFileCompleteDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0x88; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0xd0; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0x100; // DelegateProperty
	}

	namespace n_URPC_RequestHonorDuel_TA {
		constexpr auto Challenger = 0xe8; // FUniqueNetId
		constexpr auto Defender = 0x130; // FUniqueNetId
		constexpr auto Spectators = 0x178; // TArray<FUniqueNetId>
		constexpr auto Region = 0x188; // FString
		constexpr auto BuildID = 0x198; // int32_t
	}

	namespace n_USeqAct_GetRarityColor_TA {
		constexpr auto RarityColorsPrime = 0x160; // TArray<FVector>
		constexpr auto RarityColorsChina = 0x170; // TArray<FVector>
		constexpr auto bRandomize = 0x180; // uint32_t : 1
		constexpr auto MinimumRandomQuality = 0x184; // EProductQuality
		constexpr auto ColorIdx = 0x188; // int32_t
		constexpr auto OutColor = 0x18c; // FVector
		constexpr auto LastRandomIdx = 0x198; // int32_t
	}

	namespace n_UFaceFXAnimSet {
		constexpr auto DefaultFaceFXAsset = 0x60; // ObjectProperty
		constexpr auto InternalFaceFXAnimSet = 0x68; // FPointer
		constexpr auto RawFaceFXAnimSetBytes = 0x70; // TArray<char>
		constexpr auto RawFaceFXMiniSessionBytes = 0x80; // TArray<char>
		constexpr auto ReferencedSoundCues = 0x90; // TArray<ObjectProperty>
		constexpr auto ReferencedAkEvents = 0xa0; // TArray<ObjectProperty>
		constexpr auto NumLoadErrors = 0xb0; // int32_t
	}

	namespace n_UProductDatabase_Builder_TA {
		constexpr auto bPrime = 0x60; // uint32_t : 1
		constexpr auto bClickToBuildMarked = 0x60; // uint32_t : 1
	}

	namespace n_UGFxData_Season_TA {
		constexpr auto TeamRankings = 0x98; // TArray<FSeasonTeamRank>
		constexpr auto WeekMatches = 0xa8; // TArray<FSeasonMatch>
		constexpr auto Weeks = 0xb8; // TArray<FSeasonWeek>
		constexpr auto Profile = 0xc8; // ObjectProperty
		constexpr auto Season = 0xd0; // ObjectProperty
	}

	namespace n_ASpecialPickup_TimeBomb_TA {
		constexpr auto Radius = 0x388; // float
		constexpr auto AlmostReadyDuration = 0x38c; // float
		constexpr auto StartMatSpeed = 0x390; // float
		constexpr auto AlmostReadyMatSpeed = 0x394; // float
		constexpr auto ImpulseForce = 0x398; // float
		constexpr auto CarVerticalForce = 0x39c; // float
		constexpr auto CarTorque = 0x3a0; // float
		constexpr auto bDemolish = 0x3a4; // uint32_t : 1
		constexpr auto bImpulse = 0x3a4; // uint32_t : 1
	}

	namespace n_U__GameEventProductAssetCache_TA__HandleCarAssetsLoaded_6699A7C046685C761D68E289E7EE0570 {
		constexpr auto Loader = 0x60; // ComponentProperty
	}

	namespace n_UAdHocInterface_X {
		constexpr auto OldLanBrowser = 0x60; // ObjectProperty
		constexpr auto AdHocBeacon = 0x68; // ObjectProperty
		constexpr auto OnlineGameParty = 0x70; // ObjectProperty
		constexpr auto Matchmaking = 0x78; // ObjectProperty
	}

	namespace n_UPerfStatGraph_TA {
		constexpr auto FPS = 0x90; // ComponentProperty
		constexpr auto FrameTime = 0x98; // ComponentProperty
		constexpr auto GameThreadTime = 0xa0; // ComponentProperty
		constexpr auto RenderThreadTime = 0xa8; // ComponentProperty
		constexpr auto GPUFrameTime = 0xb0; // ComponentProperty
		constexpr auto FrameTimeHistories = 0xb8; // TArray<ComponentProperty>
		constexpr auto MaxFPS = 0xc8; // float
		constexpr auto TargetFPS = 0xcc; // float
	}

	namespace n_UOnlineTitleFileDownloadBase {
		constexpr auto ReadTitleFileCompleteDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto RequestTitleFileListCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto BaseUrl = 0xa0; // FString
		constexpr auto RequestFileListURL = 0xb0; // FString
		constexpr auto RequestFileURL = 0xc0; // FString
		constexpr auto Timeout = 0xd0; // float
		constexpr auto FilesToUrls = 0xd8; // TArray<FFileNameToURLMapping>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnRequestTitleFileListComplete__Delegate = 0x100; // DelegateProperty
	}

	namespace n_USoundMode {
		constexpr auto bApplyEQ = 0x60; // uint32_t : 1
		constexpr auto EQSettings = 0x68; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x90; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0xa0; // float
		constexpr auto FadeInTime = 0xa4; // float
		constexpr auto Duration = 0xa8; // float
		constexpr auto FadeOutTime = 0xac; // float
	}

	namespace n_UGFxData_ClubServerBrowser_TA {
		constexpr auto ServerList = 0x98; // ObjectProperty
		constexpr auto Servers = 0xa0; // TArray<FGFxClubServer>
		constexpr auto bRefreshing = 0xb0; // uint32_t : 1
	}

	namespace n_UItemPoolWeightMultiplier_TA {
		constexpr auto PickWeightMultiplier = 0x70; // int32_t
		constexpr auto bResetWeightsOnGoal = 0x74; // uint32_t : 1
		constexpr auto LastDispensedItem = 0x78; // ObjectProperty
		constexpr auto DemolishedItem = 0x80; // ObjectProperty
	}

	namespace n_USeqAct_ToggleUIOverlay_TA {
		constexpr auto UIOverlayName = 0x160; // FString
	}

	namespace n_USkelControlTrail {
		constexpr auto ChainLength = 0x100; // int32_t
		constexpr auto ChainBoneAxis = 0x104; // EAxis
		constexpr auto bInvertChainBoneAxis = 0x108; // uint32_t : 1
		constexpr auto bLimitStretch = 0x108; // uint32_t : 1
		constexpr auto bActorSpaceFakeVel = 0x108; // uint32_t : 1
		constexpr auto bHadValidStrength = 0x108; // uint32_t : 1
		constexpr auto TrailRelaxation = 0x10c; // float
		constexpr auto StretchLimit = 0x110; // float
		constexpr auto FakeVelocity = 0x114; // FVector
		constexpr auto ThisTimstep = 0x120; // float
		constexpr auto TrailBoneLocations = 0x128; // TArray<FVector>
		constexpr auto OldLocalToWorld = 0x140; // FMatrix
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x78; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0xa0; // uint32_t : 1
	}

	namespace n_UNavMeshPath_Toward {
		constexpr auto bBiasAgainstHighLevelPath = 0x78; // uint32_t : 1
		constexpr auto OutOfHighLevelPathBias = 0x7c; // float
		constexpr auto GoalActor = 0x80; // ObjectProperty
		constexpr auto GoalPoint = 0x88; // FVector
	}

	namespace n_U__VoteActor_TA__GetVotes_BEF0D8AC4A23DFA0453AC7B2CAB6973E {
		constexpr auto VoteStatus = 0x60; // EVoteStatus
		constexpr auto bExcludeIdleBannedPlayers = 0x64; // uint32_t : 1
	}

	namespace n_U__PartySequence_CreateParty_X__CreateParty_9E34699649CE8AC98A57529B0EF92D8A {
		constexpr auto InitialSettings = 0x60; // TArray<FLobbyMetaData>
		constexpr auto LocalPlayerNum = 0x70; // int32_t
		constexpr auto MaxPlayers = 0x74; // int32_t
		constexpr auto Type = 0x78; // ELobbyVisibility
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x78; // float
		constexpr auto PitchMax = 0x7c; // float
		constexpr auto VolumeMin = 0x80; // float
		constexpr auto VolumeMax = 0x84; // float
		constexpr auto PitchModulation = 0x88; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0xb0; // FRawDistributionFloat
	}

	namespace n_U__TourService_PsyNet_TA__GetMatchDetails_81632E3643DC10DB46B27CB5B18A80CF {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_UGFxData_MatchAdmin_TA {
		constexpr auto bMatchAdmin = 0x98; // uint32_t : 1
		constexpr auto PlayerPRI = 0xa0; // ObjectProperty
	}

	namespace n_UPsyNetMetrics_X {
		constexpr auto ServiceData = 0x80; // TArray<FServiceMetricsData>
		constexpr auto ErrorData = 0x90; // TArray<FServiceErrorData>
	}

	namespace n_UHttpResponseCurl {
		constexpr auto Response = 0x60; // FPointer
		constexpr auto Payload = 0x68; // TArray<char>
	}

	namespace n_AImageReflection {
		constexpr auto bEnabled = 0x268; // uint32_t : 1
		constexpr auto ReflectionComponent = 0x270; // ComponentProperty
		constexpr auto ImageReflectionComponent = 0x278; // ComponentProperty
	}

	namespace n_URPC_RemoveFromClub_X {
		constexpr auto PlayerID = 0xf8; // FUniqueNetId
	}

	namespace n_UProfileCameraSave_TA {
		constexpr auto AutoCam = 0xc8; // FProfileAutoCamSettings
		constexpr auto Camera = 0xf0; // FProfileCameraSettings
		constexpr auto bInvertSwivelPitch = 0x10c; // uint32_t : 1
		constexpr auto bInvertSpectatorPitch = 0x10c; // uint32_t : 1
		constexpr auto bLockSpectatorBallCam = 0x10c; // uint32_t : 1
		constexpr auto bFreecam = 0x10c; // uint32_t : 1
		constexpr auto bPrefersSecondaryCamera = 0x10c; // uint32_t : 1
		constexpr auto bToggleSecondaryCamera = 0x10c; // uint32_t : 1
		constexpr auto bToggleRearCamera = 0x10c; // uint32_t : 1
		constexpr auto bUseBallIndicator = 0x10c; // uint32_t : 1
		constexpr auto bUseBallCamIndicator = 0x10c; // uint32_t : 1
		constexpr auto bEnableCameraShake = 0x10c; // uint32_t : 1
		constexpr auto bDirectorAllowCameraBlending = 0x10c; // uint32_t : 1
		constexpr auto bHoldMouseCameraEnabled = 0x10c; // uint32_t : 1
		constexpr auto bMouseCameraSwivel = 0x10c; // uint32_t : 1
		constexpr auto CameraSettingsPreset = 0x110; // ECameraSettingsPreset
		constexpr auto DirectorMinChangeTeamFocusTime = 0x114; // float
		constexpr auto DirectorMinSameTeamFocusTime = 0x118; // float
		constexpr auto __bToggleSecondaryCamera__ChangeNotify = 0x120; // DelegateProperty
		constexpr auto __bHoldMouseCameraEnabled__ChangeNotify = 0x138; // DelegateProperty
		constexpr auto __bMouseCameraSwivel__ChangeNotify = 0x150; // DelegateProperty
	}

	namespace n_UAssetAttribute_ChangeProductDrawScale_TA {
		constexpr auto NewProductDrawScales = 0x60; // TArray<FProductSlotNewDrawScale>
	}

	namespace n_ATriggeredPath {
		constexpr auto bOpen = 0x388; // uint32_t : 1
		constexpr auto MyTrigger = 0x390; // ObjectProperty
	}

	namespace n_USeqAct_GiveBoost_TA {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto BoostAmount = 0x168; // float
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x258; // int32_t
		constexpr auto SectionBaseY = 0x25c; // int32_t
		constexpr auto ComponentSizeQuads = 0x260; // int32_t
		constexpr auto SubsectionSizeQuads = 0x264; // int32_t
		constexpr auto NumSubsections = 0x268; // int32_t
		constexpr auto OverrideMaterial = 0x270; // ObjectProperty
		constexpr auto MaterialInstance = 0x278; // ObjectProperty
		constexpr auto WeightmapLayerAllocations = 0x280; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x290; // TArray<ObjectProperty>
		constexpr auto WeightmapScaleBias = 0x2a0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x2b0; // float
		constexpr auto HeightmapScaleBias = 0x2c0; // FVector4
		constexpr auto HeightmapTexture = 0x2d0; // ObjectProperty
		constexpr auto CachedBoxSphereBounds = 0x2d8; // FBoxSphereBounds
		constexpr auto CachedLocalBox = 0x2f4; // FBox
		constexpr auto LightingGuid = 0x310; // FGuid
		constexpr auto ShadowMaps = 0x320; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x330; // TArray<FGuid>
		constexpr auto LightMap = 0x340; // FLightMapRef
		constexpr auto EditToolRenderData = 0x348; // FPointer
		constexpr auto CollisionMipLevel = 0x350; // int32_t
		constexpr auto PlatformData = 0x358; // FPointer
		constexpr auto PlatformDataSize = 0x360; // int32_t
		constexpr auto bNeedPostUndo = 0x364; // uint32_t : 1
		constexpr auto ForcedLOD = 0x368; // int32_t
		constexpr auto NeighborLOD = 0x36c; // char [0x8]
		constexpr auto NeighborLODBias = 0x374; // char [0x8]
		constexpr auto LODBias = 0x37c; // int32_t
	}

	namespace n_UImageDecoder {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto ActiveDecodeRequests = 0x68; // TArray<FDecodeImageRequest>
		constexpr auto __ImageDecodedDelegate__Delegate = 0x78; // DelegateProperty
	}

	namespace n_UEOSUserPermissions_TA {
		constexpr auto Data = 0x60; // FEOSPermissionsResponse
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x78; // float
		constexpr auto DelayMax = 0x7c; // float
		constexpr auto DelayDuration = 0x80; // FRawDistributionFloat
	}

	namespace n_UApplyVelocityHitHandler_TA {
		constexpr auto VelocityToApply = 0x150; // FVector
	}

	namespace n_UPartySequence_CreateParty_X {
		constexpr auto PendingRPC = 0x60; // ObjectProperty
		constexpr auto __EventPartyCreated__Delegate = 0x68; // DelegateProperty
	}

	namespace n_UEOSOnlineStorageSync_TA {
		constexpr auto SyncTask = 0x60; // ObjectProperty
		constexpr auto EOS_FILE_CORRUPTED = 0x68; // int32_t
		constexpr auto __EventSyncObjectSuccess__Delegate = 0x70; // DelegateProperty
	}

	namespace n_URewardDropGroup_TA {
		constexpr auto Rewards = 0xb0; // TArray<FGFxRewardDrop>
		constexpr auto Thresholds = 0xc0; // TArray<FGFxLevelThreshold>
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x70; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x98; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xc0; // uint32_t : 1
	}

	namespace n_USeqAct_GetVelocity {
		constexpr auto VelocityMag = 0x160; // float
		constexpr auto VelocityVect = 0x164; // FVector
	}

	namespace n_UMcpManagedValueManagerBase {
		constexpr auto McpManagedValueManagerClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnReadSaveSlotComplete__Delegate = 0xa0; // DelegateProperty
		constexpr auto __OnUpdateValueComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnDeleteValueComplete__Delegate = 0xd0; // DelegateProperty
	}

	namespace n_AAIController {
		constexpr auto bAdjustFromWalls = 0x478; // uint32_t : 1
		constexpr auto bReverseScriptedRoute = 0x478; // uint32_t : 1
		constexpr auto Skill = 0x47c; // float
		constexpr auto ScriptedMoveTarget = 0x480; // ObjectProperty
		constexpr auto ScriptedRoute = 0x488; // ObjectProperty
		constexpr auto ScriptedRouteIndex = 0x490; // int32_t
		constexpr auto ScriptedFocus = 0x498; // ObjectProperty
	}

	namespace n_UMorphNodeMultiPose {
		constexpr auto Targets = 0xa0; // TArray<ObjectProperty>
		constexpr auto MorphNames = 0xb0; // TArray<FName>
		constexpr auto Weights = 0xc0; // TArray<float>
	}

	namespace n_UAttachmentBehavior_TA {
		constexpr auto Asset = 0x60; // ObjectProperty
		constexpr auto Component = 0x68; // ComponentProperty
		constexpr auto bPreview = 0x70; // uint32_t : 1
	}

	namespace n_U__OnlineGameParty_TA__HandleCrossplayEnabledChanged_CF3F2FB349005F3BC7FE4B847252B493 {
		constexpr auto AccountSettings = 0x60; // ComponentProperty
	}

	namespace n_USeqAct_ModifyCover {
		constexpr auto Slots = 0x160; // TArray<int32_t>
		constexpr auto ManualCoverType = 0x170; // ECoverType
		constexpr auto bManualAdjustPlayersOnly = 0x174; // uint32_t : 1
	}

	namespace n_U__OnlineGameReservations_X__GetMigrationReservationData_9C4839684E2B7AF5727D7494008B4370 {
		constexpr auto CurrentPlayers = 0x60; // TArray<FMigrationReservationData>
		constexpr auto GEngine = 0x70; // ObjectProperty
	}

	namespace n_UMusicMetrics_TA {
		constexpr auto TrackName = 0x80; // FName
		constexpr auto TrackStartTime = 0x88; // float
		constexpr auto TrackSequence = 0x8c; // int32_t
		constexpr auto PendingMusicVolume = 0x90; // float
	}

	namespace n_ACannon_TA {
		constexpr auto Mesh = 0x268; // ComponentProperty
		constexpr auto CannonAnimTree = 0x270; // ObjectProperty
		constexpr auto CannonAnimSet = 0x278; // ObjectProperty
		constexpr auto FullBodyAnimSlot = 0x280; // ObjectProperty
		constexpr auto PitchControl = 0x288; // ObjectProperty
		constexpr auto Pitch = 0x290; // float
		constexpr auto EngineThrusterParticle = 0x298; // ObjectProperty
		constexpr auto CannonFireSound = 0x2a0; // ObjectProperty
		constexpr auto FireCount = 0x2a8; // char
	}

	namespace n_USeqAct_RangeSwitch {
		constexpr auto Ranges = 0x160; // TArray<FSwitchRange>
	}

	namespace n_UGFxData_Personas_TA {
		constexpr auto PersonaMap = 0x98; // FMap_Mirror
		constexpr auto PersonasData = 0xe8; // ObjectProperty
	}

	namespace n_UPlayerAvatarBorder_TA {
		constexpr auto Asset = 0x198; // ObjectProperty
	}

	namespace n_UCameraState_DirectorBallCam_TA {
		constexpr auto ForcedCameraSettings = 0x250; // FProfileCameraSettings
	}

	namespace n_URPC_GetSpecialEventCurrencyRewards_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto EventIDs = 0x130; // TArray<int32_t>
		constexpr auto EventStores = 0x140; // TArray<FSpecialEventStore>
	}

	namespace n_UThumbnailRenderer_TA {
		constexpr auto CameraRotation = 0x60; // FRotator
		constexpr auto CameraTranslation = 0x6c; // FVector
		constexpr auto CameraFOV = 0x78; // float
		constexpr auto bAutoZoomCamera = 0x7c; // uint32_t : 1
		constexpr auto bDisableLightEnvironment = 0x7c; // uint32_t : 1
		constexpr auto CompressionNone = 0x7c; // uint32_t : 1
		constexpr auto bSkipBackground = 0x7c; // uint32_t : 1
		constexpr auto bSkipScene = 0x7c; // uint32_t : 1
		constexpr auto ProductRotation = 0x80; // FRotator
		constexpr auto ProductTranslation = 0x8c; // FVector
		constexpr auto ScenePrefab = 0x98; // ObjectProperty
		constexpr auto ScenePostProcessChain = 0xa0; // ObjectProperty
		constexpr auto ScenePostProcessSettings = 0xa8; // FPostProcessSettings
		constexpr auto BackgroundColor = 0x210; // FLinearColor
		constexpr auto RenderWidth = 0x220; // int32_t
		constexpr auto RenderHeight = 0x224; // int32_t
		constexpr auto TextureWidth = 0x228; // int32_t
		constexpr auto TextureHeight = 0x22c; // int32_t
		constexpr auto MipGenSettings = 0x230; // TextureMipGenSettings
		constexpr auto LODBias = 0x234; // int32_t
	}

	namespace n_USaveObjectManager_TA {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto ImportTasks = 0x68; // TArray<FPointer>
		constexpr auto ImportCallbacks = 0x78; // TArray<DelegateProperty>
		constexpr auto ExportTasks = 0x88; // TArray<FPointer>
		constexpr auto ListFilesTasks = 0x98; // TArray<FPointer>
		constexpr auto DeleteTasks = 0xa8; // TArray<FPointer>
		constexpr auto ListFilesCallbacks = 0xb8; // TArray<DelegateProperty>
		constexpr auto KeepNewestSaveFileCount = 0xc8; // int32_t
		constexpr auto SaveData = 0xd0; // ObjectProperty
		constexpr auto SavePath = 0xd8; // FString
		constexpr auto ControllerId = 0xe8; // int32_t
		constexpr auto bSaving = 0xec; // uint32_t : 1
		constexpr auto bPlayerSaveData = 0xec; // uint32_t : 1
		constexpr auto __EventDataLoaded__Delegate = 0xf0; // DelegateProperty
		constexpr auto __EventDataSaved__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnFilesListed__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UTexture2DComposite {
		constexpr auto SourceRegions = 0x150; // TArray<FSourceTexture2DRegion>
		constexpr auto MaxTextureSize = 0x160; // int32_t
		constexpr auto DestSizeX = 0x164; // int32_t
		constexpr auto DestSizeY = 0x168; // int32_t
	}

	namespace n_UPhysXParticleSystem {
		constexpr auto MaxParticles = 0x60; // int32_t
		constexpr auto ParticleSpawnReserve = 0x64; // int32_t
		constexpr auto RBChannel = 0x68; // ERBCollisionChannel
		constexpr auto SimulationMethod = 0x69; // ESimulationMethod
		constexpr auto PacketSizeMultiplier = 0x6a; // EPacketSizeMultiplier
		constexpr auto RBCollideWithChannels = 0x6c; // FRBCollisionChannelContainer
		constexpr auto CollisionDistance = 0x70; // float
		constexpr auto RestitutionWithStaticShapes = 0x74; // float
		constexpr auto RestitutionWithDynamicShapes = 0x78; // float
		constexpr auto FrictionWithStaticShapes = 0x7c; // float
		constexpr auto FrictionWithDynamicShapes = 0x80; // float
		constexpr auto StaticFrictionWithStaticShapes = 0x84; // float
		constexpr auto StaticFrictionWithDynamicShapes = 0x88; // float
		constexpr auto bDynamicCollision = 0x8c; // uint32_t : 1
		constexpr auto bDisableGravity = 0x8c; // uint32_t : 1
		constexpr auto bStaticCollision = 0x8c; // uint32_t : 1
		constexpr auto bTwoWayCollision = 0x8c; // uint32_t : 1
		constexpr auto bDestroy = 0x8c; // uint32_t : 1
		constexpr auto bSyncFailed = 0x8c; // uint32_t : 1
		constexpr auto bIsInGame = 0x8c; // uint32_t : 1
		constexpr auto MaxMotionDistance = 0x90; // float
		constexpr auto Damping = 0x94; // float
		constexpr auto ExternalAcceleration = 0x98; // FVector
		constexpr auto RestParticleDistance = 0xa4; // float
		constexpr auto RestDensity = 0xa8; // float
		constexpr auto KernelRadiusMultiplier = 0xac; // float
		constexpr auto Stiffness = 0xb0; // float
		constexpr auto Viscosity = 0xb4; // float
		constexpr auto CollisionResponseCoefficient = 0xb8; // float
		constexpr auto CascadeScene = 0xc0; // FPointer
		constexpr auto PSys = 0xc8; // FPointer
	}

	namespace n_UOnlineTitleFileDownloadWeb {
		constexpr auto TitleFiles = 0x118; // TArray<FTitleFileWeb>
	}

	namespace n_U__OnlineGame_X__CheckPsyNetConnection_3D7B8977465F96CEAA072FBE88651A4F {
		constexpr auto Task = 0x60; // ObjectProperty
	}

	namespace n_URPC_FaceItMatchStarted_TA {
		constexpr auto MatchID = 0xe8; // int32_t
		constexpr auto MatchGUID = 0xf0; // FString
		constexpr auto ServerId = 0x100; // QWordProperty
		constexpr auto SeriesRoundNumber = 0x108; // int32_t
		constexpr auto Players = 0x110; // TArray<FUniqueNetId>
	}

	namespace n_UGFxAction_GetVariable {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto Variable = 0x168; // FString
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0xc8; // TArray<FParticleReplayTrackKey>
		constexpr auto bIsCapturingReplay = 0xd8; // uint32_t : 1
		constexpr auto FixedTimeStep = 0xdc; // float
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x60; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x64; // float
		constexpr auto bSavedActiveState = 0x68; // uint32_t : 1
	}

	namespace n_UGFxAction_SetCaptureKeys {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto CaptureKeys = 0x168; // TArray<FName>
	}

	namespace n_URB_RadialImpulseComponent {
		constexpr auto ImpulseFalloff = 0x258; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x25c; // float
		constexpr auto ImpulseRadius = 0x260; // float
		constexpr auto bVelChange = 0x264; // uint32_t : 1
		constexpr auto bCauseFracture = 0x264; // uint32_t : 1
		constexpr auto PreviewSphere = 0x268; // ComponentProperty
	}

	namespace n_USeqAct_Delay {
		constexpr auto bDelayActive = 0x178; // uint32_t : 1
		constexpr auto bStartWillRestart = 0x178; // uint32_t : 1
		constexpr auto DefaultDuration = 0x17c; // float
		constexpr auto Duration = 0x180; // float
		constexpr auto LastUpdateTime = 0x184; // float
		constexpr auto RemainingTime = 0x188; // float
	}

	namespace n_USeqAct_PlayMusicTrack {
		constexpr auto MusicTrack = 0x160; // FMusicTrackStruct
	}

	namespace n_UTourSettingsCache_TA {
		constexpr auto TourLists = 0x60; // TArray<ComponentProperty>
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x60; // float
		constexpr auto Location = 0x64; // FIntPoint
	}

	namespace n_UWebResponse {
		constexpr auto Headers = 0x60; // TArray<FString>
		constexpr auto ReplacementMap = 0x70; // FMap_Mirror
		constexpr auto IncludePath = 0xc0; // FString
		constexpr auto CharSet = 0xd0; // FString
		constexpr auto Connection = 0xe0; // ObjectProperty
		constexpr auto bSentText = 0xe8; // uint32_t : 1
		constexpr auto bSentResponse = 0xe8; // uint32_t : 1
	}

	namespace n_U__GFxData_Products_TA__StartLoadingProduct_9B478D8A438F1AC08ACE2AA9C6470B66 {
		constexpr auto ProductToLoad = 0x60; // ObjectProperty
	}

	namespace n_U__Team_TA__GetPartyFollowerIds_1C6FED9D40C7974FD4CE7D92E498D4B6 {
		constexpr auto PRI = 0x60; // ObjectProperty
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto BoolProp = 0x70; // FPointer
		constexpr auto BitMask = 0x78; // int32_t
		constexpr auto ResetBool = 0x7c; // uint32_t : 1
	}

	namespace n_UErrorList {
		constexpr auto LocalizationPackage = 0x60; // FString
		constexpr auto LocalizationSection = 0x70; // FString
	}

	namespace n_U__CheatManager_X__RandomSleep_CDD5E1814FAFB0E870CA26B52D62629A {
		constexpr auto MinDelay = 0x60; // float
		constexpr auto MaxDelay = 0x64; // float
		constexpr auto MinSleep = 0x68; // float
		constexpr auto MaxSleep = 0x6c; // float
	}

	namespace n_U__OnlinePlayerFriends_X__DownloadBlockedListAttempt_CC31714B428CEF24510790AA221A93F4 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_ATeleporter {
		constexpr auto URL = 0x388; // FString
		constexpr auto ProductRequired = 0x398; // FName
		constexpr auto bChangesVelocity = 0x3a0; // uint32_t : 1
		constexpr auto bChangesYaw = 0x3a0; // uint32_t : 1
		constexpr auto bReversesX = 0x3a0; // uint32_t : 1
		constexpr auto bReversesY = 0x3a0; // uint32_t : 1
		constexpr auto bReversesZ = 0x3a0; // uint32_t : 1
		constexpr auto bEnabled = 0x3a0; // uint32_t : 1
		constexpr auto TargetVelocity = 0x3a4; // FVector
		constexpr auto LastFired = 0x3b0; // float
	}

	namespace n_UActivateAnimSeriesComponent_X {
		constexpr auto AnimNodeName = 0xa8; // FName
	}

	namespace n_ACarComponent_TA {
		constexpr auto FXActorArchetype = 0x268; // ObjectProperty
		constexpr auto FXEvent = 0x270; // ObjectProperty
		constexpr auto bDisabled = 0x278; // uint32_t : 1
		constexpr auto bAutoActivate = 0x278; // uint32_t : 1
		constexpr auto bSimulateComponent = 0x278; // uint32_t : 1
		constexpr auto bCreated = 0x278; // uint32_t : 1
		constexpr auto bActive = 0x278; // uint32_t : 1
		constexpr auto bRemovedFromCar = 0x278; // uint32_t : 1
		constexpr auto ComponentData = 0x27c; // char
		constexpr auto ReplicatedActive = 0x27d; // char
		constexpr auto Activator = 0x280; // ObjectProperty
		constexpr auto Vehicle = 0x288; // ObjectProperty
		constexpr auto Car = 0x290; // ObjectProperty
		constexpr auto ActivityTime = 0x298; // float
		constexpr auto MinInactiveTime = 0x29c; // float
		constexpr auto ReplicatedActivityTime = 0x2a0; // float
		constexpr auto FXActor = 0x2a8; // ObjectProperty
		constexpr auto __EventPreActivationChanged__Delegate = 0x2b0; // DelegateProperty
		constexpr auto __EventPostActivationChanged__Delegate = 0x2c8; // DelegateProperty
	}

	namespace n_UAnimNotify_PlayAKSound_TA {
		constexpr auto SFX_SoundCue = 0x68; // ObjectProperty
		constexpr auto bPlayInReverse = 0x70; // uint32_t : 1
	}

	namespace n_ULoginResponse_X {
		constexpr auto BannedMessage = 0x60; // FString
		constexpr auto BannedMinutes = 0x70; // int32_t
	}

	namespace n_URPC_PsyNetSetVanity_TA {
		constexpr auto VanityLoadouts = 0xe8; // TArray<FVanityLoadout>
	}

	namespace n_UUISavedValues_TA {
		constexpr auto Values = 0xc8; // TArray<FUISavedKeyValue>
	}

	namespace n_APawn {
		constexpr auto VfTable_IInterface_Speaker = 0x268; // FPointer
		constexpr auto ObjectProvider = 0x270; // ComponentProperty
		constexpr auto RegistryGroup = 0x278; // ComponentProperty
		constexpr auto MaxStepHeight = 0x280; // float
		constexpr auto MaxJumpHeight = 0x284; // float
		constexpr auto WalkableFloorZ = 0x288; // float
		constexpr auto LedgeCheckThreshold = 0x28c; // float
		constexpr auto PartialLedgeMoveDir = 0x290; // FVector
		constexpr auto Controller = 0x2a0; // ObjectProperty
		constexpr auto NextPawn = 0x2a8; // ObjectProperty
		constexpr auto NetRelevancyTime = 0x2b0; // float
		constexpr auto LastRealViewer = 0x2b8; // ObjectProperty
		constexpr auto LastViewer = 0x2c0; // ObjectProperty
		constexpr auto bScriptTickSpecial = 0x2c8; // uint32_t : 1
		constexpr auto bUpAndOut = 0x2c8; // uint32_t : 1
		constexpr auto bIsWalking = 0x2c8; // uint32_t : 1
		constexpr auto bWantsToCrouch = 0x2c8; // uint32_t : 1
		constexpr auto bIsCrouched = 0x2c8; // uint32_t : 1
		constexpr auto bTryToUncrouch = 0x2c8; // uint32_t : 1
		constexpr auto bCanCrouch = 0x2c8; // uint32_t : 1
		constexpr auto bCrawler = 0x2c8; // uint32_t : 1
		constexpr auto bReducedSpeed = 0x2c8; // uint32_t : 1
		constexpr auto bJumpCapable = 0x2c8; // uint32_t : 1
		constexpr auto bCanJump = 0x2c8; // uint32_t : 1
		constexpr auto bCanWalk = 0x2c8; // uint32_t : 1
		constexpr auto bCanFly = 0x2c8; // uint32_t : 1
		constexpr auto bCanStrafe = 0x2c8; // uint32_t : 1
		constexpr auto bAvoidLedges = 0x2c8; // uint32_t : 1
		constexpr auto bStopAtLedges = 0x2c8; // uint32_t : 1
		constexpr auto bAllowLedgeOverhang = 0x2c8; // uint32_t : 1
		constexpr auto bPartiallyOverLedge = 0x2c8; // uint32_t : 1
		constexpr auto bSimulateGravity = 0x2c8; // uint32_t : 1
		constexpr auto bIgnoreForces = 0x2c8; // uint32_t : 1
		constexpr auto bCanWalkOffLedges = 0x2c8; // uint32_t : 1
		constexpr auto bCanBeBaseForPawns = 0x2c8; // uint32_t : 1
		constexpr auto bSimGravityDisabled = 0x2c8; // uint32_t : 1
		constexpr auto bDirectHitWall = 0x2c8; // uint32_t : 1
		constexpr auto bPushesRigidBodies = 0x2c8; // uint32_t : 1
		constexpr auto bForceFloorCheck = 0x2c8; // uint32_t : 1
		constexpr auto bForceKeepAnchor = 0x2c8; // uint32_t : 1
		constexpr auto bCanMantle = 0x2c8; // uint32_t : 1
		constexpr auto bCanClimbUp = 0x2c8; // uint32_t : 1
		constexpr auto bCanClimbCeilings = 0x2c8; // uint32_t : 1
		constexpr auto bCanSwatTurn = 0x2c8; // uint32_t : 1
		constexpr auto bCanLeap = 0x2c8; // uint32_t : 1
		constexpr auto bCanCoverSlip = 0x2cc; // uint32_t : 1
		constexpr auto bDisplayPathErrors = 0x2cc; // uint32_t : 1
		constexpr auto bAmbientCreature = 0x2cc; // uint32_t : 1
		constexpr auto bLOSHearing = 0x2cc; // uint32_t : 1
		constexpr auto bMuffledHearing = 0x2cc; // uint32_t : 1
		constexpr auto bDontPossess = 0x2cc; // uint32_t : 1
		constexpr auto bRollToDesired = 0x2cc; // uint32_t : 1
		constexpr auto bStationary = 0x2cc; // uint32_t : 1
		constexpr auto bCachedRelevant = 0x2cc; // uint32_t : 1
		constexpr auto bModifyReachSpecCost = 0x2cc; // uint32_t : 1
		constexpr auto bModifyNavPointDest = 0x2cc; // uint32_t : 1
		constexpr auto bPrevBypassSimulatedClientPhysics = 0x2cc; // uint32_t : 1
		constexpr auto bRunPhysicsWithNoController = 0x2cc; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x2cc; // uint32_t : 1
		constexpr auto bLimitFallAccel = 0x2cc; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x2cc; // uint32_t : 1
		constexpr auto bForceRegularVelocity = 0x2cc; // uint32_t : 1
		constexpr auto bDesiredRotationSet = 0x2cc; // uint32_t : 1
		constexpr auto bLockDesiredRotation = 0x2cc; // uint32_t : 1
		constexpr auto bUnlockWhenReached = 0x2cc; // uint32_t : 1
		constexpr auto bNeedsBaseTickedFirst = 0x2cc; // uint32_t : 1
		constexpr auto bUsedByMatinee = 0x2cc; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x2cc; // uint32_t : 1
		constexpr auto bDebugShowCameraLocation = 0x2cc; // uint32_t : 1
		constexpr auto bFastAttachedMove = 0x2cc; // uint32_t : 1
		constexpr auto WalkingPhysics = 0x2d0; // EPhysics
		constexpr auto PathSearchType = 0x2d1; // EPathSearchType
		constexpr auto RemoteViewPitch = 0x2d2; // char
		constexpr auto UncrouchTime = 0x2d4; // float
		constexpr auto CrouchHeight = 0x2d8; // float
		constexpr auto CrouchRadius = 0x2dc; // float
		constexpr auto FullHeight = 0x2e0; // int32_t
		constexpr auto PathConstraintList = 0x2e8; // ObjectProperty
		constexpr auto PathGoalList = 0x2f0; // ObjectProperty
		constexpr auto DesiredSpeed = 0x2f8; // float
		constexpr auto MaxDesiredSpeed = 0x2fc; // float
		constexpr auto HearingThreshold = 0x300; // float
		constexpr auto Alertness = 0x304; // float
		constexpr auto SightRadius = 0x308; // float
		constexpr auto PeripheralVision = 0x30c; // float
		constexpr auto AvgPhysicsTime = 0x310; // float
		constexpr auto Mass = 0x314; // float
		constexpr auto Buoyancy = 0x318; // float
		constexpr auto MeleeRange = 0x31c; // float
		constexpr auto Anchor = 0x320; // ObjectProperty
		constexpr auto AnchorItem = 0x328; // int32_t
		constexpr auto LastAnchor = 0x330; // ObjectProperty
		constexpr auto FindAnchorFailedTime = 0x338; // float
		constexpr auto LastValidAnchorTime = 0x33c; // float
		constexpr auto DestinationOffset = 0x340; // float
		constexpr auto NextPathRadius = 0x344; // float
		constexpr auto SerpentineDir = 0x348; // FVector
		constexpr auto SerpentineDist = 0x354; // float
		constexpr auto SerpentineTime = 0x358; // float
		constexpr auto MaxPitchLimit = 0x35c; // int32_t
		constexpr auto GroundSpeed = 0x360; // float
		constexpr auto AirSpeed = 0x364; // float
		constexpr auto AccelRate = 0x368; // float
		constexpr auto JumpZ = 0x36c; // float
		constexpr auto OutofWaterZ = 0x370; // float
		constexpr auto MaxOutOfWaterStepHeight = 0x374; // float
		constexpr auto AirControl = 0x378; // float
		constexpr auto WalkingPct = 0x37c; // float
		constexpr auto MovementSpeedModifier = 0x380; // float
		constexpr auto CrouchedPct = 0x384; // float
		constexpr auto MaxFallSpeed = 0x388; // float
		constexpr auto AIMaxFallSpeedFactor = 0x38c; // float
		constexpr auto BaseEyeHeight = 0x390; // float
		constexpr auto EyeHeight = 0x394; // float
		constexpr auto Floor = 0x398; // FVector
		constexpr auto RMVelocity = 0x3a4; // FVector
		constexpr auto noise1spot = 0x3b0; // FVector
		constexpr auto noise1time = 0x3bc; // float
		constexpr auto noise1other = 0x3c0; // ObjectProperty
		constexpr auto noise1loudness = 0x3c8; // float
		constexpr auto noise2spot = 0x3cc; // FVector
		constexpr auto noise2time = 0x3d8; // float
		constexpr auto noise2other = 0x3e0; // ObjectProperty
		constexpr auto noise2loudness = 0x3e8; // float
		constexpr auto SoundDampening = 0x3ec; // float
		constexpr auto DamageScaling = 0x3f0; // float
		constexpr auto MenuName = 0x3f8; // FString
		constexpr auto ControllerClass = 0x408; // FNone*
		constexpr auto PlayerReplicationInfo = 0x410; // ObjectProperty
		constexpr auto LandMovementState = 0x418; // FName
		constexpr auto WaterMovementState = 0x420; // FName
		constexpr auto LastStartSpot = 0x428; // ObjectProperty
		constexpr auto LastStartTime = 0x430; // float
		constexpr auto Mesh = 0x438; // ComponentProperty
		constexpr auto CylinderComponent = 0x440; // ComponentProperty
		constexpr auto RBPushRadius = 0x448; // float
		constexpr auto RBPushStrength = 0x44c; // float
		constexpr auto AlwaysRelevantDistanceSquared = 0x450; // float
		constexpr auto LastHitBy = 0x458; // ObjectProperty
		constexpr auto ViewPitchMin = 0x460; // float
		constexpr auto ViewPitchMax = 0x464; // float
		constexpr auto AllowedYawError = 0x468; // int32_t
		constexpr auto DesiredRotation = 0x46c; // FRotator
		constexpr auto PreRagdollCollisionComponent = 0x478; // ComponentProperty
		constexpr auto PhysicsPushBody = 0x480; // ObjectProperty
		constexpr auto FailedLandingCount = 0x488; // int32_t
		constexpr auto SlotNodes = 0x490; // TArray<ObjectProperty>
		constexpr auto InterpGroupList = 0x4a0; // TArray<ObjectProperty>
		constexpr auto FacialAudioComp = 0x4b0; // ComponentProperty
		constexpr auto MIC_PawnMat = 0x4b8; // ObjectProperty
		constexpr auto MIC_PawnHair = 0x4c0; // ObjectProperty
		constexpr auto ScalarParameterInterpArray = 0x4c8; // TArray<FScalarParameterInterpStruct>
		constexpr auto RootMotionInterpCurve = 0x4d8; // FRootMotionCurve
		constexpr auto RootMotionInterpRate = 0x500; // float
		constexpr auto RootMotionInterpCurrentTime = 0x504; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x508; // FVector
	}

	namespace n_UAnimNotify_ViewShake {
		constexpr auto Duration = 0x68; // float
		constexpr auto RotAmplitude = 0x6c; // FVector
		constexpr auto RotFrequency = 0x78; // FVector
		constexpr auto LocAmplitude = 0x84; // FVector
		constexpr auto LocFrequency = 0x90; // FVector
		constexpr auto FOVAmplitude = 0x9c; // float
		constexpr auto FOVFrequency = 0xa0; // float
		constexpr auto bDoControllerVibration = 0xa4; // uint32_t : 1
		constexpr auto bUseBoneLocation = 0xa4; // uint32_t : 1
		constexpr auto ShakeRadius = 0xa8; // float
		constexpr auto BoneName = 0xac; // FName
		constexpr auto ShakeParams = 0xb8; // ObjectProperty
	}

	namespace n_UGFxData_ProductAttribute_SpecialEdition_TA {
		constexpr auto EditionLabel = 0xb0; // FString
	}

	namespace n_UTranslatorTag {
		constexpr auto Tag = 0x60; // FName
	}

	namespace n_U__OnlineGameWordFilter_X__InternalSanitize_D7C1C73F43E01411377D3EA4762F8574 {
		constexpr auto Id = 0x60; // FString
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x60; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_USceneCapturePortalComponent {
		constexpr auto TextureTarget = 0xf8; // ObjectProperty
		constexpr auto ScaleFOV = 0x100; // float
		constexpr auto ViewDestination = 0x108; // ObjectProperty
	}

	namespace n_UAkEnvironments {
		constexpr auto VfTable_FObjectDestructionSubscriber = 0x60; // FPointer
		constexpr auto LevelEnvironments = 0x68; // TArray<FAkEnvironment>
		constexpr auto ActorEnvironments = 0x78; // TArray<FAkActorEnvironment>
		constexpr auto bLevelDirty = 0x88; // uint32_t : 1
		constexpr auto bActorEnvironmentDirty = 0x88; // uint32_t : 1
	}

	namespace n_UParticleSystemComponent_TA {
		constexpr auto PreviewFakeVelocity = 0x3e0; // FVector
		constexpr auto PodiumFakeVelocity = 0x3ec; // FVector
	}

	namespace n_UProductAsset_GoalExplosion_TA {
		constexpr auto GoalExplosionFX = 0xf8; // ObjectProperty
		constexpr auto PaintedGoalExplosionFX = 0x100; // ObjectProperty
		constexpr auto ExplosionComponents = 0x108; // TArray<ComponentProperty>
		constexpr auto bUseOverrideGoalOrientations = 0x118; // uint32_t : 1
		constexpr auto IgnoredRotations = 0x11c; // FIgnoredGoalRotations
	}

	namespace n_UOnlineGame_Base_X {
		constexpr auto OnlineSubPlayerInterfaceName = 0x98; // FString
		constexpr auto OnlineSubGameInterfaceName = 0xa8; // FString
		constexpr auto DefaultGameSettingsArchetype = 0xb8; // ObjectProperty
		constexpr auto DefaultGameSettings = 0xc0; // ObjectProperty
		constexpr auto GameSettings = 0xc8; // ObjectProperty
		constexpr auto Playlists = 0xd0; // ObjectProperty
		constexpr auto ImageDownloader = 0xd8; // ObjectProperty
		constexpr auto DLC = 0xe0; // ObjectProperty
		constexpr auto Skill = 0xe8; // ObjectProperty
		constexpr auto StartServerCommand = 0xf0; // FString
		constexpr auto WebCache = 0x100; // ObjectProperty
		constexpr auto WebImageCache = 0x108; // ObjectProperty
		constexpr auto PsyNetStaticData = 0x110; // ComponentProperty
		constexpr auto bLockGameSettings = 0x118; // uint32_t : 1
		constexpr auto bUseEnvironmentZone = 0x118; // uint32_t : 1
		constexpr auto CurrentConnectionStatus = 0x11c; // EOnlineServerConnectionStatus
		constexpr auto ServerName = 0x120; // FString
		constexpr auto CachedOptions = 0x130; // FString
		constexpr auto OnlineConfigDispatcher = 0x140; // ObjectProperty
		constexpr auto WordFilter = 0x148; // ObjectProperty
		constexpr auto OnlineComponents = 0x150; // TArray<ObjectProperty>
		constexpr auto __EventInternetConnectionChanged__Delegate = 0x160; // DelegateProperty
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto Coordinates = 0xc0; // FExpressionInput
		constexpr auto bNormalize = 0xf8; // uint32_t : 1
	}

	namespace n_UAnimNotify_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x68; // ObjectProperty
		constexpr auto GroupName = 0x70; // FString
		constexpr auto AnimName = 0x80; // FString
		constexpr auto SoundCueToPlay = 0x90; // ObjectProperty
		constexpr auto AkEventToPlay = 0x98; // ObjectProperty
		constexpr auto bOverridePlayingAnim = 0xa0; // uint32_t : 1
		constexpr auto PlayFrequency = 0xa4; // float
	}

	namespace n_USeqAct_ConvertToString {
		constexpr auto bIncludeVarComment = 0x160; // uint32_t : 1
		constexpr auto VarSeparator = 0x168; // FString
		constexpr auto NumberOfInputs = 0x178; // int32_t
	}

	namespace n_UDebugDrawer_X {
		constexpr auto TextScale = 0xc0; // float
		constexpr auto Canvas = 0xc8; // ObjectProperty
		constexpr auto DebugCategories = 0xd0; // TArray<FName>
		constexpr auto PossibleDebugCategories = 0xe0; // TArray<FName>
		constexpr auto CharWidth = 0xf0; // float
		constexpr auto LastWidestElement = 0xf4; // float
		constexpr auto bHideDebug = 0xf8; // uint32_t : 1
		constexpr auto OffsetX = 0xfc; // float
	}

	namespace n_UCrumbTrailRedefinition_TA {
		constexpr auto CrumbRedefInfo = 0x60; // TArray<FCrumbRedefinedInfo>
	}

	namespace n_UEndRoundComponent_TA {
		constexpr auto SoccarGame = 0xa8; // ObjectProperty
	}

	namespace n_AFluidInfluenceActor {
		constexpr auto FlowDirection = 0x268; // ComponentProperty
		constexpr auto Sprite = 0x270; // ComponentProperty
		constexpr auto InfluenceComponent = 0x278; // ComponentProperty
		constexpr auto bActive = 0x280; // uint32_t : 1
		constexpr auto bToggled = 0x280; // uint32_t : 1
	}

	namespace n_UPsyNetService_ChallengeDefault_TA {
		constexpr auto Folders = 0x90; // TArray<ObjectProperty>
		constexpr auto Challenges = 0xa0; // TArray<ObjectProperty>
		constexpr auto ChallengeIDsToRemove = 0xb0; // TArray<int32_t>
	}

	namespace n_USeqAct_MultiplyFloat {
		constexpr auto ValueA = 0x160; // float
		constexpr auto ValueB = 0x164; // float
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_UMutator_Gravity_TA {
		constexpr auto Gravity = 0x68; // float
	}

	namespace n_UBTAction_Test {
		constexpr auto TargetLocation = 0x1c8; // FVector
		constexpr auto AimLocation = 0x1d4; // FVector
	}

	namespace n_U__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_516E20704AE141A962B3FCBA9370A607 {
		constexpr auto Callback = 0x60; // DelegateProperty
	}

	namespace n_U__TourBracketCache_TA__Request_3A3D6C6247FCAE917FACD9A1FB2B0E85 {
		constexpr auto TournamentID = 0x60; // QWordProperty
	}

	namespace n_USeqAct_SetApexClothingParam {
		constexpr auto bEnableApexClothingSimulation = 0x160; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDestDepth {
		constexpr auto bNormalize = 0xc0; // uint32_t : 1
	}

	namespace n_UNavMeshGoalFilter_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x70; // FVector
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x70; // FRawDistributionVector
		constexpr auto LocationOffset = 0x98; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0xe8; // FRawDistributionVector
	}

	namespace n_ANetworkInputBuffer_ServerConsume_TA {
		constexpr auto JitterBuffer = 0x2c8; // ObjectProperty
		constexpr auto bFillingBuffer = 0x2d0; // uint32_t : 1
	}

	namespace n_U__StatusTriggerManager_TA__RemoveTriggers_587FD26C460FE387D2F769A28BBFC1E3 {
		constexpr auto Clump = 0x60; // ObjectProperty
	}

	namespace n_UOnlinePurchaseInterfaceImpl {
		constexpr auto __EventGetAppPriceInfoComplete__Delegate = 0x60; // DelegateProperty
		constexpr auto __OnMicroTxnResponse__Delegate = 0x78; // DelegateProperty
	}

	namespace n_U__GFxData_Community_TA__HandleBlogChanged_2ADB532540128918C1CE988B446E492D {
		constexpr auto DateNow = 0x60; // QWordProperty
	}

	namespace n_U__OnlineGameMatchmaking_X__AddRecommendedServers_C03191524966EF6DFEF0CD90092BC81A {
		constexpr auto AccPingThreshold = 0x60; // float
	}

	namespace n_APlayerController_Replay_TA {
		constexpr auto SplitscreenHUDArchetype = 0x968; // ObjectProperty
		constexpr auto GameEvent = 0x970; // ObjectProperty
	}

	namespace n_UPlayerItemDispenser_TA {
		constexpr auto ItemGiveRate = 0x60; // float
		constexpr auto PreviewTimeSeconds = 0x64; // float
		constexpr auto ItemPool = 0x68; // ObjectProperty
		constexpr auto bResetTimerOnDemolish = 0x70; // uint32_t : 1
		constexpr auto bWaitingForNextRound = 0x70; // uint32_t : 1
		constexpr auto bGiveItemOnRoundStart = 0x70; // uint32_t : 1
		constexpr auto bGiveItemOnFirstBallHit = 0x70; // uint32_t : 1
		constexpr auto bGiveItemBeforeRoundStart = 0x70; // uint32_t : 1
		constexpr auto bHideItemIconByDefault = 0x70; // uint32_t : 1
		constexpr auto bGiven = 0x70; // uint32_t : 1
		constexpr auto NextItemTime = 0x74; // float
		constexpr auto NextItemPreviewTime = 0x78; // float
		constexpr auto PRI = 0x80; // ObjectProperty
	}

	namespace n_USeqAct_PlaySound {
		constexpr auto PlaySound = 0x178; // ObjectProperty
		constexpr auto ExtraDelay = 0x180; // float
		constexpr auto bDelayReached = 0x184; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0x184; // uint32_t : 1
		constexpr auto bStopped = 0x184; // uint32_t : 1
		constexpr auto SoundDuration = 0x188; // float
		constexpr auto FadeInTime = 0x18c; // float
		constexpr auto FadeOutTime = 0x190; // float
		constexpr auto VolumeMultiplier = 0x194; // float
		constexpr auto PitchMultiplier = 0x198; // float
		constexpr auto BeforeEndTime = 0x19c; // float
	}

	namespace n_URPC_SetSeasonReward_X {
		constexpr auto SeasonLevel = 0xe8; // int32_t
		constexpr auto SeasonLevelWins = 0xec; // int32_t
	}

	namespace n_UProductSpecialEdition_TA {
		constexpr auto Label = 0x60; // FString
	}

	namespace n_UTourServerConfig_TA {
		constexpr auto bBotTeamsEnabled = 0x78; // uint32_t : 1
		constexpr auto MidSeriesConnectionTimeout = 0x7c; // float
	}

	namespace n_UGFxProductAttributeMap_TA {
		constexpr auto GFxClasses = 0x60; // TArray<FNone*>
	}

	namespace n_UChallengeConfig_TA {
		constexpr auto MinSecondsDelayNewNotification = 0x78; // int32_t
		constexpr auto MaxSecondsDelayNewNotification = 0x7c; // int32_t
		constexpr auto SecondsDelayNewNotification = 0x80; // int32_t
	}

	namespace n_UUISoundTheme {
		constexpr auto SoundEventBindings = 0x60; // TArray<FSoundEventMapping>
	}

	namespace n_UGFxData_ReplayViewer_TA {
		constexpr auto CurrentFrame = 0x98; // int32_t
		constexpr auto CameraModes = 0xa0; // TArray<FLocalizedCameraMode>
		constexpr auto DefaultCameraMode = 0xb0; // FName
		constexpr auto CameraMode = 0xb8; // FName
		constexpr auto FocusActorString = 0xc0; // FString
		constexpr auto LastFocusActorString = 0xd0; // FString
		constexpr auto bHighlightFocusActor = 0xe0; // uint32_t : 1
		constexpr auto bShowReplayHUD = 0xe0; // uint32_t : 1
		constexpr auto bShowMatchInfoHUD = 0xe0; // uint32_t : 1
		constexpr auto bShowPlayerNames = 0xe0; // uint32_t : 1
		constexpr auto bPausedForScrub = 0xe0; // uint32_t : 1
		constexpr auto bChangesMade = 0xe0; // uint32_t : 1
		constexpr auto Slomo = 0xe4; // float
		constexpr auto FOV = 0xe8; // float
		constexpr auto ViewRoll = 0xec; // int32_t
		constexpr auto Replay = 0xf0; // ObjectProperty
		constexpr auto PendingSkipToFrame = 0xf8; // int32_t
		constexpr auto ModalProcessing = 0x100; // ObjectProperty
		constexpr auto __EventHudVisibilityUpdated__Delegate = 0x108; // DelegateProperty
	}

	namespace n_U__ESportConfig_TA__DownloadEventImage_8C16507540F0ACC95DE49D9D82C6D758 {
		constexpr auto URL = 0x60; // FString
	}

	namespace n_U__Team_TA__UpdateCustomColors_EB2131F145411273ECAF93B452AAA433 {
		constexpr auto bHasCustomColor = 0x60; // uint32_t : 1
	}

	namespace n_AGameInfo_TA {
		constexpr auto bShutdownQueued = 0x4d8; // uint32_t : 1
		constexpr auto bShuttingDown = 0x4d8; // uint32_t : 1
		constexpr auto CurrentGame = 0x4e0; // ObjectProperty
		constexpr auto ReplacementServerInfo = 0x4e8; // FServerConnectionInfo
		constexpr auto __EventGameInitialized__Delegate = 0x528; // DelegateProperty
	}

	namespace n_UOnlineStorageSyncManager_TA {
		constexpr auto Config = 0x60; // ObjectProperty
		constexpr auto EOSOnlineStorageSync = 0x68; // ObjectProperty
		constexpr auto bDebugSyncManager = 0x70; // uint32_t : 1
		constexpr auto __EventSyncOnlinePlayerStorageStarted__Delegate = 0x78; // DelegateProperty
		constexpr auto __EventSyncSuccess__Delegate = 0x90; // DelegateProperty
	}

	namespace n_USoundNodeLooping {
		constexpr auto bLoopIndefinitely = 0x78; // uint32_t : 1
		constexpr auto LoopCountMin = 0x7c; // float
		constexpr auto LoopCountMax = 0x80; // float
		constexpr auto LoopCount = 0x88; // FRawDistributionFloat
	}

	namespace n_UMusicTrack_TA {
		constexpr auto Cue = 0x60; // ObjectProperty
		constexpr auto Icon = 0x68; // ObjectProperty
		constexpr auto __NextTrackAction__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UUserBugReportBulkData_TA {
		constexpr auto VideoSettings = 0x60; // TArray<FUserReportVideoSetting>
		constexpr auto Data = 0x70; // TArray<char>
		constexpr auto __EventComplete__Delegate = 0x80; // DelegateProperty
	}

	namespace n_AMatineePawn {
		constexpr auto PreviewMesh = 0x518; // ObjectProperty
	}

	namespace n_URPC_GetPartyMemberSkill_X {
		constexpr auto PlayerIDs = 0xe8; // TArray<FUniqueNetId>
		constexpr auto Players = 0xf8; // TArray<FPartyMemberSkill>
	}

	namespace n_USeqAct_ScreenFade {
		constexpr auto Instigator = 0x160; // ObjectProperty
		constexpr auto FadeColor = 0x168; // FColor
		constexpr auto FadeTime = 0x16c; // float
		constexpr auto bFadeAudio = 0x170; // uint32_t : 1
	}

	namespace n_UChallengeReward_TA {
		constexpr auto XP = 0x80; // int32_t
		constexpr auto Currency = 0x88; // TArray<ObjectProperty>
		constexpr auto Products = 0x98; // TArray<FOnlineProductData>
		constexpr auto ProductHashIDs = 0xa8; // FString
		constexpr auto OnlineProductStoreSet = 0xb8; // ComponentProperty
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0xc0; // FExpressionInput
		constexpr auto B = 0xf8; // FExpressionInput
		constexpr auto Alpha = 0x130; // FExpressionInput
	}

	namespace n_ULightFunction {
		constexpr auto SourceMaterial = 0x60; // ObjectProperty
		constexpr auto Scale = 0x68; // FVector
		constexpr auto DisabledBrightness = 0x74; // float
	}

	namespace n_URPC_CreateClub_X {
		constexpr auto ClubName = 0xf8; // FString
		constexpr auto ClubTag = 0x108; // FString
		constexpr auto PrimaryColor = 0x118; // int32_t
		constexpr auto AccentColor = 0x11c; // int32_t
	}

	namespace n_APlayerController_Cinematic_TA {
		constexpr auto PostProcessManagerArchetype = 0x860; // ObjectProperty
	}

	namespace n_UAudioSlomoReplayComponent_TA {
		constexpr auto ReplayPlaybackSpeedStateGroup = 0xa8; // FName
		constexpr auto ReplayPlaybackSpeed_201 = 0xb0; // FName
		constexpr auto ReplayPlaybackSpeed_101 = 0xb8; // FName
		constexpr auto ReplayPlaybackSpeed_51 = 0xc0; // FName
		constexpr auto ReplayPlaybackSpeed_26 = 0xc8; // FName
		constexpr auto ReplayPlaybackSpeed_11 = 0xd0; // FName
		constexpr auto ReplayPlaybackSpeed_05 = 0xd8; // FName
	}

	namespace n_ACrowdAgentBase {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x268; // FPointer
	}

	namespace n_APickupTimer_TA {
		constexpr auto TimeTillItem = 0x2e0; // int32_t
		constexpr auto MaxTimeTillItem = 0x2e4; // int32_t
	}

	namespace n_UOnlineImageDownloaderWeb {
		constexpr auto MaxSimultaneousDownloads = 0x60; // int32_t
		constexpr auto Downloads = 0x68; // FMap_Mirror
		constexpr auto URLQueue = 0xb8; // TArray<FString>
		constexpr auto Decoder = 0xc8; // ObjectProperty
		constexpr auto PendingDownloadCount = 0xd0; // int32_t
		constexpr auto ActiveDownloadCount = 0xd4; // int32_t
		constexpr auto SucceededDownloadCount = 0xd8; // int32_t
		constexpr auto FailedDownloadCount = 0xdc; // int32_t
		constexpr auto __OnOnlineImageFinished__Delegate = 0xe0; // DelegateProperty
		constexpr auto __EventImageDecoded__Delegate = 0xf8; // DelegateProperty
	}

	namespace n_UProductAsset_Bot_TA {
		constexpr auto LoadoutProducts2 = 0xf8; // TArray<ObjectProperty>
		constexpr auto BlueTeamColorID = 0x108; // int32_t
		constexpr auto OrangeTeamColorID = 0x10c; // int32_t
		constexpr auto CustomColorID = 0x110; // int32_t
	}

	namespace n_URPC_PartyInfo_X {
		constexpr auto Invites = 0xe8; // TArray<FPartyInvite>
		constexpr auto Member = 0xf8; // FPsyNetPartyMember
	}

	namespace n_UBeaconConfig_X {
		constexpr auto bUdpPingRegions = 0x78; // uint32_t : 1
		constexpr auto bUdpPingMetrics = 0x78; // uint32_t : 1
		constexpr auto MaxPingsPerAddress = 0x7c; // int32_t
		constexpr auto MaxPingsWindowSeconds = 0x80; // int32_t
		constexpr auto StatsLogDelaySeconds = 0x84; // int32_t
		constexpr auto WaitForPongSeconds = 0x88; // float
		constexpr auto PingsPerSecond = 0x8c; // int32_t
	}

	namespace n_ASkeletalMeshActorBasedOnExtremeContent {
		constexpr auto ExtremeContent = 0x2d0; // TArray<FSkelMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x2e0; // TArray<FSkelMaterialSetterDatum>
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x60; // float
		constexpr auto PlayAudioComp = 0x68; // ComponentProperty
	}

	namespace n_UTeamColorScriptedTexture_TA {
		constexpr auto PixelColorList = 0x1b0; // TArray<FLinearColor>
		constexpr auto bMaxBrightness = 0x1c0; // uint32_t : 1
	}

	namespace n_UCameraState_LobbyFocus_TA {
		constexpr auto XOffsetDistance = 0x90; // float
		constexpr auto CameraOffsetPitch = 0x94; // float
		constexpr auto AngleOffsets = 0x98; // TArray<float>
		constexpr auto TargetCar = 0xa8; // ObjectProperty
		constexpr auto TargetCamera = 0xb0; // FCameraOrientation
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x70; // TArray<ObjectProperty>
	}

	namespace n_UPrimaryAuthLoggedIn_TA {
		constexpr auto PrimaryAuthedConnection = 0x60; // ObjectProperty
	}

	namespace n_U__FirstTimeExperienceSave_TA__GetGroupIndex_974B9E8F4814828212DD199569AA25F5 {
		constexpr auto GroupName = 0x60; // FName
	}

	namespace n_UPlayerSpawnFeature_TA {
		constexpr auto RespawnDelaySeconds = 0x60; // int32_t
		constexpr auto GameEvent = 0x68; // ObjectProperty
	}

	namespace n_URPC_GetChallengeProgress_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto ChallengeIDs = 0x130; // TArray<int32_t>
		constexpr auto ProgressData = 0x140; // TArray<FChallengeProgress>
	}

	namespace n_ARB_LineImpulseActor {
		constexpr auto ImpulseStrength = 0x268; // float
		constexpr auto ImpulseRange = 0x26c; // float
		constexpr auto bVelChange = 0x270; // uint32_t : 1
		constexpr auto bStopAtFirstHit = 0x270; // uint32_t : 1
		constexpr auto bCauseFracture = 0x270; // uint32_t : 1
		constexpr auto Arrow = 0x278; // ComponentProperty
		constexpr auto ImpulseCount = 0x280; // char
	}

	namespace n_USeqEvent_AISeeEnemy {
		constexpr auto MaxSightDistance = 0x180; // float
	}

	namespace n_U__FirstTimeExperienceManager_TA__DebugSetCheckpoint_FC1F589C4B8CD715947ACA8B54D4D6C9 {
		constexpr auto GroupName = 0x60; // FName
	}

	namespace n_URPC_SupportACreator_Set_TA {
		constexpr auto CreatorCode = 0xe8; // FString
		constexpr auto Success = 0xf8; // uint32_t : 1
		constexpr auto ExpirationTime = 0x100; // QWordProperty
		constexpr auto SupportType = 0x108; // FString
	}

	namespace n_UStatusTrigger_Named_TA {
		constexpr auto ConditionalValue = 0x80; // FName
	}

	namespace n_AKActorFromStatic {
		constexpr auto MyStaticMeshActor = 0x3b8; // ObjectProperty
		constexpr auto MaxImpulseSpeed = 0x3c0; // float
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0xe0; // float
		constexpr auto PathBuildTime = 0xe4; // float
		constexpr auto InterpGroups = 0xe8; // TArray<ObjectProperty>
		constexpr auto CurveEdSetup = 0xf8; // ObjectProperty
		constexpr auto InterpFilters = 0x100; // TArray<ObjectProperty>
		constexpr auto SelectedFilter = 0x110; // ObjectProperty
		constexpr auto DefaultFilters = 0x118; // TArray<ObjectProperty>
		constexpr auto EdSectionStart = 0x128; // float
		constexpr auto EdSectionEnd = 0x12c; // float
		constexpr auto bShouldBakeAndPrune = 0x130; // uint32_t : 1
		constexpr auto bHasSetDefaultTangentWeights = 0x130; // uint32_t : 1
		constexpr auto BakeAndPruneStatus = 0x138; // TArray<FAnimSetBakeAndPruneStatus>
		constexpr auto CachedDirectorGroup = 0x148; // ObjectProperty
	}

	namespace n_U__TAsyncResult__PsyTagCheckResult_X__Copy_62DBBAE045633D144EF70991D1568215 {
		constexpr auto Instance = 0x60; // ObjectProperty
	}

	namespace n_U__CinematicIntroSequence_TA__GetActionBinding_AE73155044C6EC35F38AE2A10F1A01D5 {
		constexpr auto ActionName = 0x60; // FName
	}

	namespace n_ANxRadialCustomForceField {
		constexpr auto SelfRotationStrength = 0x2e0; // float
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_UUIDataProvider_MenuItem {
		constexpr auto OptionType = 0xa0; // EMenuOptionType
		constexpr auto OptionSet = 0xa8; // TArray<FName>
		constexpr auto DataStoreMarkup = 0xb8; // FString
		constexpr auto DescriptionMarkup = 0xc8; // FString
		constexpr auto RequiredGameMode = 0xd8; // FName
		constexpr auto FriendlyName = 0xe0; // FString
		constexpr auto CustomFriendlyName = 0xf0; // FString
		constexpr auto Description = 0x100; // FString
		constexpr auto bEditableCombo = 0x110; // uint32_t : 1
		constexpr auto bNumericCombo = 0x110; // uint32_t : 1
		constexpr auto bKeyboardOrMouseOption = 0x110; // uint32_t : 1
		constexpr auto bOnlineOnly = 0x110; // uint32_t : 1
		constexpr auto bOfflineOnly = 0x110; // uint32_t : 1
		constexpr auto bSearchAllInis = 0x110; // uint32_t : 1
		constexpr auto bRemoveOn360 = 0x110; // uint32_t : 1
		constexpr auto bRemoveOnPC = 0x110; // uint32_t : 1
		constexpr auto bRemoveOnPS3 = 0x110; // uint32_t : 1
		constexpr auto EditBoxMaxLength = 0x114; // int32_t
		constexpr auto RangeData = 0x118; // FUIRangeData
		constexpr auto SchemaCellFields = 0x130; // TArray<FName>
		constexpr auto IniName = 0x140; // FString
	}

	namespace n_U__GFxData_ContainerDrops_TA__GetMatchingProductSeries_681E98A744D314D877511987BDF15EF1 {
		constexpr auto SeriesID = 0x60; // int32_t
		constexpr auto SeriesProducts = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UUIDataProvider_OnlineFriendMessages {
		constexpr auto Messages = 0x78; // TArray<FOnlineFriendMessage>
		constexpr auto SendingPlayerNameCol = 0x88; // FString
		constexpr auto bIsFriendInviteCol = 0x98; // FString
		constexpr auto bWasAcceptedCol = 0xa8; // FString
		constexpr auto bWasDeniedCol = 0xb8; // FString
		constexpr auto MessageCol = 0xc8; // FString
		constexpr auto LastInviteFrom = 0xd8; // FString
	}

	namespace n_U__SaveData_TA__FilterEquippedOnlineProducts_8DA16E194D7D56FCCABA859A1C672C10 {
		constexpr auto EquippedInstanceIDs = 0x60; // TArray<FProductInstanceID>
	}

	namespace n_U__GFxData_PRI_TA__HandleOwnerChanged_FDD6CF0345F98A44892768914CA085CD {
		constexpr auto LoadoutSave = 0x60; // ObjectProperty
	}

	namespace n_URPC_TourUpdateGame_TA {
		constexpr auto MatchGUID = 0xe8; // FString
		constexpr auto ServerId = 0xf8; // QWordProperty
		constexpr auto TournamentID = 0x100; // QWordProperty
		constexpr auto MatchID = 0x108; // int32_t
		constexpr auto Game = 0x10c; // int32_t
		constexpr auto GameData = 0x110; // FTourMatchGame
		constexpr auto Winner = 0x128; // QWordProperty
		constexpr auto PlayersNoShow = 0x130; // TArray<FUniqueNetId>
		constexpr auto PlayersLeftEarly = 0x140; // TArray<FUniqueNetId>
		constexpr auto PlayersIdle = 0x150; // TArray<FUniqueNetId>
		constexpr auto bHasNetworkIssues = 0x160; // uint32_t : 1
		constexpr auto PlayersStats = 0x168; // TArray<FTourPlayerStats>
		constexpr auto Teams = 0x178; // TArray<FTeamUpdateInfo>
	}

	namespace n_USeqAct_SpawnCarColors_TA {
		constexpr auto AccentColors = 0x160; // FSpawnCarColorSet
		constexpr auto AccentTeamColor = 0x170; // FLinearColor
		constexpr auto BlueTeamColors = 0x180; // FSpawnCarColorSet
		constexpr auto OrangeTeamColors = 0x190; // FSpawnCarColorSet
		constexpr auto TeamAccentColor = 0x1a0; // FLinearColor
		constexpr auto Body = 0x1b0; // ObjectProperty
		constexpr auto Skin = 0x1b8; // ObjectProperty
		constexpr auto CarYaw = 0x1c0; // int32_t
		constexpr auto CarOffsetX = 0x1c4; // float
		constexpr auto CarOffsetY = 0x1c8; // float
		constexpr auto SetOffsetY = 0x1cc; // float
		constexpr auto BaseOffsetY = 0x1d0; // float
	}

	namespace n_UAsyncTask {
		constexpr auto bComplete = 0x60; // uint32_t : 1
		constexpr auto bDisposed = 0x60; // uint32_t : 1
		constexpr auto Error = 0x68; // ObjectProperty
		constexpr auto __EventAsyncTaskSuccess__Delegate = 0x70; // DelegateProperty
		constexpr auto __EventAsyncTaskFail__Delegate = 0x88; // DelegateProperty
		constexpr auto __EventAsyncTaskComplete__Delegate = 0xa0; // DelegateProperty
		constexpr auto __EventDisposed__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UNavMeshPath_AlongLine {
		constexpr auto Direction = 0x78; // FVector
	}

	namespace n_USeqAct_DivideFloat {
		constexpr auto ValueA = 0x160; // float
		constexpr auto ValueB = 0x164; // float
		constexpr auto FloatResult = 0x168; // float
		constexpr auto IntResult = 0x16c; // int32_t
	}

	namespace n_URPC_RevealBlueprint_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
		constexpr auto InstanceID = 0x130; // FProductInstanceID
		constexpr auto ProductData = 0x140; // FOnlineProductData
	}

	namespace n_U__GFxShell_TA__SetInputActionEnabled_CE82CD534C751D9B63F16186AD614490 {
		constexpr auto ActionName = 0x60; // FName
		constexpr auto bEnabled = 0x68; // uint32_t : 1
	}

	namespace n_UTourPartyCheckIn_TA {
		constexpr auto TourConfig = 0x60; // ObjectProperty
		constexpr auto MemberCheckInError = 0x68; // FString
		constexpr auto Tournaments = 0x78; // ObjectProperty
		constexpr auto Party = 0x80; // ObjectProperty
	}

	namespace n_UCheckoutErrors_TA {
		constexpr auto MtxConfigDisabled = 0x80; // ObjectProperty
		constexpr auto SystemOverlayDisabled = 0x88; // ObjectProperty
		constexpr auto TransactionInProgress = 0x90; // ObjectProperty
		constexpr auto InvalidNumberOfItemsInCart = 0x98; // ObjectProperty
		constexpr auto InvalidItemsInCart = 0xa0; // ObjectProperty
	}

	namespace n_UGFxData_SupportACreator_TA {
		constexpr auto CreatorCode = 0x98; // FString
		constexpr auto ExpirationDate = 0xa8; // QWordProperty
		constexpr auto SupportType = 0xb0; // ESupportType
		constexpr auto ProcessingModal = 0xb8; // ObjectProperty
		constexpr auto CreatorIcons = 0xc0; // TArray<FString>
	}

	namespace n_UTranslationContext {
		constexpr auto TranslatorTags = 0x60; // TArray<ObjectProperty>
	}

	namespace n_AHUDBase_TA {
		constexpr auto Shell = 0x320; // ObjectProperty
		constexpr auto DisconnectedString = 0x328; // FString
		constexpr auto ServerMaintString = 0x338; // FString
		constexpr auto PartyChatTitle = 0x348; // FString
		constexpr auto ChatData = 0x358; // ObjectProperty
		constexpr auto MultiItemDropData = 0x360; // ObjectProperty
		constexpr auto __EventGameMessage__Delegate = 0x368; // DelegateProperty
		constexpr auto __EventChatMessage__Delegate = 0x380; // DelegateProperty
	}

	namespace n_UGFxData_ProductFilter_TA {
		constexpr auto UIAttributes = 0x98; // TArray<FNone*>
		constexpr auto AlwaysIgnoredSlots = 0xa8; // TArray<ObjectProperty>
		constexpr auto Label = 0xb8; // FString
		constexpr auto Slots = 0xc8; // TArray<FFilterProductSlot>
		constexpr auto Qualities = 0xd8; // TArray<FFilterProductQuality>
		constexpr auto Attributes = 0xe8; // TArray<FFilterProductAttribute>
		constexpr auto SeriesIDs = 0xf8; // TArray<FFilterProductSeries>
		constexpr auto SortingLabels = 0x108; // TArray<FFilterProductSorting>
		constexpr auto bIgnoreEquipped = 0x118; // uint32_t : 1
		constexpr auto bTradeInScreenSelected = 0x118; // uint32_t : 1
		constexpr auto bAllowDefaultProducts = 0x118; // uint32_t : 1
		constexpr auto FilterStack = 0x120; // TArray<EProductFilterType>
		constexpr auto Filters = 0x130; // FProductFilter [0x4]
		constexpr auto ProductQualitiesToIgnore = 0x650; // TArray<FString>
		constexpr auto ProductSortingToIgnore = 0x660; // TArray<FString>
		constexpr auto ProductAttributesToIgnore = 0x670; // TArray<FString>
		constexpr auto DefaultSorting = 0x680; // FString
		constexpr auto GarageArchiveSlot = 0x690; // ObjectProperty
		constexpr auto MtxConfig = 0x698; // ObjectProperty
		constexpr auto ProductsConfig = 0x6a0; // ObjectProperty
		constexpr auto __EventFilterSelected__Delegate = 0x6a8; // DelegateProperty
		constexpr auto __EventSlotSelectedChanged__Delegate = 0x6c0; // DelegateProperty
		constexpr auto __EventAttributeSelected__Delegate = 0x6d8; // DelegateProperty
		constexpr auto __EventPostRefreshPreviewQuantity__Delegate = 0x6f0; // DelegateProperty
		constexpr auto __EventPreRefreshPreviewQuantity__Delegate = 0x708; // DelegateProperty
		constexpr auto __EventPreFilterProducts__Delegate = 0x720; // DelegateProperty
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x80; // float
		constexpr auto Max = 0x84; // float
	}

	namespace n_UGFxData_TradeLobby_TA {
		constexpr auto bLocalPlayerReadyToLock = 0x98; // uint32_t : 1
		constexpr auto bRemotePlayerReadyToLock = 0x98; // uint32_t : 1
		constexpr auto bLocalPlayerReadyToTrade = 0x98; // uint32_t : 1
		constexpr auto bRemotePlayerReadyToTrade = 0x98; // uint32_t : 1
		constexpr auto bTradeLocked = 0x98; // uint32_t : 1
		constexpr auto bIsProcessingTrade = 0x98; // uint32_t : 1
		constexpr auto bVerifyingTrade = 0x98; // uint32_t : 1
		constexpr auto LockCountdownSecondsRemaining = 0x9c; // int32_t
		constexpr auto LocalCurrencyProducts = 0xa0; // ObjectProperty
		constexpr auto RemoteCurrencyProducts = 0xa8; // ObjectProperty
		constexpr auto PlayerWallet = 0xb0; // ObjectProperty
		constexpr auto OnlineParty = 0xb8; // ObjectProperty
		constexpr auto Profile = 0xc0; // ObjectProperty
		constexpr auto ProductTransactions = 0xc8; // ComponentProperty
		constexpr auto RemoteProductSet = 0xd0; // ComponentProperty
		constexpr auto ModalProcessing = 0xd8; // ObjectProperty
		constexpr auto TradeId = 0xe0; // FGuid
		constexpr auto TradingPlayerID = 0xf0; // FUniqueNetId
		constexpr auto MtxConfig = 0x138; // ObjectProperty
		constexpr auto PartyMemberProfile = 0x140; // ObjectProperty
	}

	namespace n_UProductOverride_DisableSkelControl_TA {
		constexpr auto SkelControlToDisable = 0x60; // FName
	}

	namespace n_UCarMeshComponent_TA {
		constexpr auto BoostBlendInTime = 0x8c8; // float
		constexpr auto BoostBlendOutTime = 0x8cc; // float
		constexpr auto BoostDriveFlapScale = 0x8d0; // float
		constexpr auto WheelSuspensionBlendRate = 0x8d4; // float
		constexpr auto WheelSteerBlendRate = 0x8d8; // float
		constexpr auto WheelControls = 0x8e0; // TArray<FWheelSkelControlSet>
		constexpr auto BoostFlyHeight = 0x8f0; // float
		constexpr auto BoostFlyControls = 0x8f8; // TArray<ObjectProperty>
		constexpr auto ChassisSpringComponent = 0x908; // ComponentProperty
		constexpr auto ChassisSpringControl = 0x910; // ObjectProperty
		constexpr auto BoostControls = 0x918; // TArray<ObjectProperty>
		constexpr auto bInAir = 0x928; // uint32_t : 1
		constexpr auto bBoostFlying = 0x928; // uint32_t : 1
		constexpr auto bPreviewSupersonic = 0x928; // uint32_t : 1
		constexpr auto bWantsBoostCameraAdjustment = 0x928; // uint32_t : 1
		constexpr auto Throttle = 0x92c; // float
		constexpr auto __EventAttached__Delegate = 0x930; // DelegateProperty
	}

	namespace n_UTourCheckIn_TA {
		constexpr auto Tournaments = 0x60; // ObjectProperty
		constexpr auto CheckInTask = 0x68; // ObjectProperty
	}

	namespace n_UVehicleSim_TA {
		constexpr auto Wheels = 0xa0; // TArray<ComponentProperty>
		constexpr auto SteerAngleCurve = 0xb0; // FInterpCurveFloat
		constexpr auto DriveTorque = 0xc8; // float
		constexpr auto DriveTorqueCurve = 0xd0; // FInterpCurveFloat
		constexpr auto BrakeTorque = 0xe8; // float
		constexpr auto HandbrakeSteerAngleCurve = 0xf0; // FInterpCurveFloat
		constexpr auto HandbrakeRate = 0x108; // FInputRate
		constexpr auto StopThreshold = 0x110; // float
		constexpr auto IdleBrakeFactor = 0x114; // float
		constexpr auto OppositeBrakeFactor = 0x118; // float
		constexpr auto bUseAckermannSteering = 0x11c; // uint32_t : 1
		constexpr auto bWasAttached = 0x11c; // uint32_t : 1
		constexpr auto OutputThrottle = 0x120; // float
		constexpr auto OutputSteer = 0x124; // float
		constexpr auto OutputBrake = 0x128; // float
		constexpr auto OutputHandbrake = 0x12c; // float
		constexpr auto Vehicle = 0x130; // ObjectProperty
		constexpr auto Car = 0x138; // ObjectProperty
		constexpr auto BulletVehicle = 0x140; // FPointer
		constexpr auto SteeringSensitivity = 0x148; // float
		constexpr auto TireFrictionScales = 0x150; // TArray<float>
		constexpr auto TireFrictionScale = 0x160; // float
	}

	namespace n_UBlueprintThumbnailLoadResult {
		constexpr auto ProductThumbnail = 0x60; // ObjectProperty
		constexpr auto BlueprintThumbnail = 0x68; // ObjectProperty
	}

	namespace n_UWheelAssetSettings_TA {
		constexpr auto StaticMesh = 0x70; // ObjectProperty
		constexpr auto SkeletalMesh = 0x78; // ObjectProperty
		constexpr auto AnimTree = 0x80; // ObjectProperty
		constexpr auto Behaviors = 0x88; // TArray<ObjectProperty>
		constexpr auto Attachments = 0x98; // TArray<FWheelAttachment>
		constexpr auto Scale3D = 0xa8; // FVector
		constexpr auto Rotation = 0xb4; // FRotator
	}

	namespace n_UGFxData_SchematicTradeIn_TA {
		constexpr auto Schematics = 0x98; // TArray<FSchematicResourceData>
		constexpr auto ModalProcessing = 0xa8; // ObjectProperty
		constexpr auto InvalidProductString = 0xb0; // FString
		constexpr auto MinResources = 0xc0; // int32_t
		constexpr auto MaxResources = 0xc4; // int32_t
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x60; // ObjectProperty
		constexpr auto Surfaces = 0x68; // TArray<int32_t>
	}

	namespace n_UForceFeedbackManager {
		constexpr auto bAllowsForceFeedback = 0x60; // uint32_t : 1
		constexpr auto bIsPaused = 0x60; // uint32_t : 1
		constexpr auto FFWaveform = 0x68; // ObjectProperty
		constexpr auto CurrentSample = 0x70; // int32_t
		constexpr auto ElapsedTime = 0x74; // float
		constexpr auto ScaleAllWaveformsBy = 0x78; // float
		constexpr auto WaveformInstigator = 0x80; // ObjectProperty
		constexpr auto ShakeLeft = 0x88; // int32_t
		constexpr auto ShakeRight = 0x8c; // int32_t
		constexpr auto EnableTime = 0x90; // float
		constexpr auto EnabledTimeRemaining = 0x94; // float
	}

	namespace n_UCameraState_BallCamInverted_TA {
		constexpr auto StartBlendParams = 0x250; // FViewTargetTransitionParams
		constexpr auto bAllowBlendTimeOverride = 0x260; // uint32_t : 1
		constexpr auto DelayFromSpawn = 0x264; // float
	}

	namespace n_UParties_X {
		constexpr auto ActiveLobby = 0x60; // FActiveLobbyInfo
		constexpr auto LastActiveLobby = 0x90; // FUniqueLobbyId
		constexpr auto PartyLeaderID = 0xa0; // FUniqueNetId
		constexpr auto PsyNet = 0xe8; // ObjectProperty
		constexpr auto OnlineGameParty = 0xf0; // ObjectProperty
		constexpr auto MessageQueue = 0xf8; // ComponentProperty
		constexpr auto PsyNetConnection = 0x100; // ObjectProperty
		constexpr auto PsyNetChannel = 0x108; // ObjectProperty
		constexpr auto Subscriptions = 0x110; // ComponentProperty
		constexpr auto PlatformSession = 0x118; // ObjectProperty
		constexpr auto SequenceCreateParty = 0x120; // ObjectProperty
		constexpr auto SequenceJoinParty = 0x128; // ObjectProperty
		constexpr auto SequenceLeaveParty = 0x130; // ObjectProperty
		constexpr auto SequenceInviteToParty = 0x138; // ObjectProperty
		constexpr auto bRejoiningParty = 0x140; // uint32_t : 1
		constexpr auto SecondToWaitForPerConReconnect = 0x144; // float
		constexpr auto PartySetting_PsyNetPartyId = 0x148; // FString
		constexpr auto PartySetting_JoinKey = 0x158; // FString
		constexpr auto __EventShowInviteUI__Delegate = 0x168; // DelegateProperty
		constexpr auto __EventLobbyInviteComplete__Delegate = 0x180; // DelegateProperty
		constexpr auto __OnCreateLobbyComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnLobbyError__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __OnLobbySessionCreated__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnFindLobbiesComplete__Delegate = 0x1e0; // DelegateProperty
		constexpr auto __OnJoinLobbyComplete__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __OnLobbySettingsUpdate__Delegate = 0x210; // DelegateProperty
		constexpr auto __OnLobbyMemberSettingsUpdate__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnLobbyMemberStatusUpdate__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnLobbyReceiveMessage__Delegate = 0x258; // DelegateProperty
		constexpr auto __OnLobbyReceiveBinaryData__Delegate = 0x270; // DelegateProperty
		constexpr auto __OnLobbyJoinGame__Delegate = 0x288; // DelegateProperty
		constexpr auto __OnLobbyInvite__Delegate = 0x2a0; // DelegateProperty
		constexpr auto __EventLobbyInvitePending__Delegate = 0x2b8; // DelegateProperty
		constexpr auto __OnLobbyDestroyed__Delegate = 0x2d0; // DelegateProperty
		constexpr auto __EventPartyChatRecieved__Delegate = 0x2e8; // DelegateProperty
		constexpr auto __OnHostStartPlayTogether__Delegate = 0x300; // DelegateProperty
	}

	namespace n_U__GFxData_PartyInvite_TA__InviteToPartyInternal_5821A755494B77BF166B6788DBE431A7 {
		constexpr auto ToPlayer = 0x60; // FUniqueNetId
		constexpr auto InviteHandler = 0xa8; // DelegateProperty
	}

	namespace n_URPC_Challenge_ResetAllProgress_TA {
		constexpr auto PlayerID = 0xe8; // FUniqueNetId
	}

	namespace n_UNavMeshGoal_ClosestActorInList {
		constexpr auto GoalList = 0x80; // TArray<FBiasedGoalActor>
		constexpr auto PolyToGoalActorMap = 0x90; // FMultiMap_Mirror
		constexpr auto CachedAnchorPoly = 0xe0; // FPointer
	}

	namespace n_UShakeComponent_X {
		constexpr auto InnerRadius = 0xa8; // float
		constexpr auto OuterRadius = 0xac; // float
		constexpr auto Falloff = 0xb0; // float
		constexpr auto bAutoPlay = 0xb4; // uint32_t : 1
		constexpr auto bAutoDetach = 0xb4; // uint32_t : 1
		constexpr auto bOnlyAffectPlayersWithPawns = 0xb4; // uint32_t : 1
		constexpr auto bAttenuate = 0xb4; // uint32_t : 1
		constexpr auto bPlaying = 0xb4; // uint32_t : 1
		constexpr auto bStopping = 0xb4; // uint32_t : 1
		constexpr auto Receiver = 0xb8; // EShakeReceiver
		constexpr auto RadiusScale = 0xbc; // float
		constexpr auto BlendInTime = 0xc0; // float
		constexpr auto BlendOutTime = 0xc4; // float
		constexpr auto ShakeParams = 0xc8; // ObjectProperty
		constexpr auto AmplitudeScale = 0xd0; // FRawDistributionFloat
		constexpr auto FrequencyScale = 0xf8; // FRawDistributionFloat
		constexpr auto DurationScale = 0x120; // FRawDistributionFloat
		constexpr auto CurrentAmplitudeScale = 0x148; // float
		constexpr auto CurrentFrequencyScale = 0x14c; // float
		constexpr auto ForceFeedbackWaveform = 0x150; // ObjectProperty
		constexpr auto ForceFeedbackScale = 0x158; // float
		constexpr auto ForceFeedbackBalance = 0x15c; // float
		constexpr auto InstanceParameters = 0x160; // TArray<FParticleSysParam>
		constexpr auto PlayTime = 0x170; // float
		constexpr auto StopTime = 0x174; // float
		constexpr auto ShakeLocTimeOffset = 0x178; // FVector
		constexpr auto ShakeRotTimeOffset = 0x184; // FVector
		constexpr auto ShakeFOVTimeOffset = 0x190; // float
		constexpr auto CameraShakeDuration = 0x194; // float
		constexpr auto ForceFeedbackDuration = 0x198; // float
		constexpr auto ForceFeedbackSamplesTime = 0x19c; // float
		constexpr auto PrevOwner = 0x1a0; // ObjectProperty
		constexpr auto Receivers = 0x1a8; // TArray<FShakeReceiver>
	}

	namespace n_UOnlineTitleFileDownloadMcp {
		constexpr auto TitleFiles = 0x118; // TArray<FTitleFileMcp>
		constexpr auto DownloadCount = 0x128; // int32_t
	}

	namespace n_UCanvasTextureComponent_X {
		constexpr auto Mesh = 0xa0; // ComponentProperty
		constexpr auto MaterialIndex = 0xa8; // int32_t
		constexpr auto MaterialParamName = 0xac; // FName
		constexpr auto Texture = 0xb8; // ObjectProperty
	}

	namespace n_U__StatusTriggerManager_TA__AddTriggerCondition_AC0EDA1B4D0AD351AAA07CBD9C88FDEB {
		constexpr auto InCondition = 0x60; // ObjectProperty
	}

	namespace n_UChallengeDefault_TA {
		constexpr auto Title = 0x80; // FString
		constexpr auto Description = 0x90; // FString
		constexpr auto GroupId = 0xa0; // int32_t
		constexpr auto Points = 0xa4; // int32_t
		constexpr auto bIsAchievement = 0xa8; // uint32_t : 1
		constexpr auto bIsRepeatable = 0xa8; // uint32_t : 1
		constexpr auto bIsPremium = 0xa8; // uint32_t : 1
		constexpr auto bAutoClaimRewards = 0xa8; // uint32_t : 1
		constexpr auto XPUnlockLevel = 0xac; // int32_t
		constexpr auto RepeatLimit = 0xb0; // int32_t
		constexpr auto IconURL = 0xb8; // FString
		constexpr auto BackgroundURL = 0xc8; // FString
		constexpr auto Rewards = 0xd8; // ObjectProperty
		constexpr auto Requirements = 0xe0; // TArray<ObjectProperty>
		constexpr auto NotifyAvailableTitle = 0xf0; // FString
		constexpr auto NotifyAvailableDescription = 0x100; // FString
		constexpr auto NotifyAvailableImageURL = 0x110; // FString
		constexpr auto NotifyCompleteTitle = 0x120; // FString
		constexpr auto NotifyCompleteDescription = 0x130; // FString
		constexpr auto NotifyCompleteImageURL = 0x140; // FString
		constexpr auto Icon = 0x150; // ObjectProperty
		constexpr auto Background = 0x158; // ObjectProperty
		constexpr auto NotifyAvailableImage = 0x160; // ObjectProperty
		constexpr auto NotifyCompleteImage = 0x168; // ObjectProperty
		constexpr auto BackgroundColor = 0x170; // int32_t
		constexpr auto __EventIconChanged__Delegate = 0x178; // DelegateProperty
		constexpr auto __EventBackgroundChanged__Delegate = 0x190; // DelegateProperty
		constexpr auto __EventNotifyAvailableImageChanged__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __EventNotifyCompleteImageChanged__Delegate = 0x1c0; // DelegateProperty
	}

	namespace n_AGameInfoBase_TA {
		constexpr auto SoundPacks = 0x4c8; // TArray<ObjectProperty>
	}

	namespace n_UGFxData_BlogTile_TA {
		constexpr auto ImageTexture = 0x98; // ObjectProperty
		constexpr auto TextureSizeX = 0xa0; // int32_t
		constexpr auto TextureSizeY = 0xa4; // int32_t
		constexpr auto bNewInfo = 0xa8; // uint32_t : 1
	}

	namespace n_U__GFxData_PlayerAvatarBorderPreview_TA__CreatePlayerAvatarBorderPreview_A53AA6124AF035A95542B08827332DE4 {
		constexpr auto AvatarBorderPreview = 0x60; // ComponentProperty
		constexpr auto OnlineProduct = 0x68; // ObjectProperty
		constexpr auto InColorID = 0x70; // int32_t
	}

	namespace n_UActorFactoryAkAmbientSound {
		constexpr auto AmbientEvent = 0xa0; // ObjectProperty
	}

	namespace n_ANxForceFieldGeneric {
		constexpr auto Shape = 0x2c0; // ObjectProperty
		constexpr auto DrawComponent = 0x2c8; // ComponentProperty
		constexpr auto RoughExtentX = 0x2d0; // float
		constexpr auto RoughExtentY = 0x2d4; // float
		constexpr auto RoughExtentZ = 0x2d8; // float
		constexpr auto Coordinates = 0x2dc; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2e0; // FVector
		constexpr auto PositionMultiplierX = 0x2ec; // FVector
		constexpr auto PositionMultiplierY = 0x2f8; // FVector
		constexpr auto PositionMultiplierZ = 0x304; // FVector
		constexpr auto PositionTarget = 0x310; // FVector
		constexpr auto VelocityMultiplierX = 0x31c; // FVector
		constexpr auto VelocityMultiplierY = 0x328; // FVector
		constexpr auto VelocityMultiplierZ = 0x334; // FVector
		constexpr auto VelocityTarget = 0x340; // FVector
		constexpr auto Noise = 0x34c; // FVector
		constexpr auto FalloffLinear = 0x358; // FVector
		constexpr auto FalloffQuadratic = 0x364; // FVector
		constexpr auto TorusRadius = 0x370; // float
		constexpr auto LinearKernel = 0x378; // FPointer
	}

	namespace n_ADynamicPhysicsVolume {
		constexpr auto bEnabled = 0x2d8; // uint32_t : 1
	}

	namespace n_AMapFlythroughProfiler_X {
		constexpr auto Accel = 0x268; // float
		constexpr auto TurnRate = 0x26c; // float
		constexpr auto ProfileTime = 0x270; // float
		constexpr auto FinishTime = 0x274; // float
		constexpr auto Speed = 0x278; // float
		constexpr auto Profile = 0x27c; // FRenderProfile
		constexpr auto __EventFinished__Delegate = 0x2a8; // DelegateProperty
	}

	namespace n_UAvatarDownloadMap {
		constexpr auto AvatarMap = 0x70; // FMap_Mirror
		constexpr auto ImageMap = 0xc0; // FMap_Mirror
		constexpr auto AvatarsPendingImages = 0x110; // FMap_Mirror
	}

	namespace n_U__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_E7E0993A476FEF66B7EE128EEC3E0263 {
		constexpr auto Message = 0x60; // ObjectProperty
	}

	namespace n_AStaticLightCollectionActor {
		constexpr auto LightComponents = 0x278; // TArray<ComponentProperty>
		constexpr auto MaxLightComponents = 0x288; // int32_t
	}

	namespace n_ACamera_X {
		constexpr auto States = 0x5b8; // TArray<ObjectProperty>
		constexpr auto PCDeltaRotation = 0x5c8; // FRotator
		constexpr auto OldControllerRotation = 0x5d4; // FRotator
		constexpr auto PCDeltaLocation = 0x5e0; // FVector
		constexpr auto OldControllerLocation = 0x5ec; // FVector
		constexpr auto PreProcessPOV = 0x5f8; // FCameraOrientation
		constexpr auto PostProcessPOV = 0x624; // FCameraOrientation
		constexpr auto Blender = 0x650; // ComponentProperty
		constexpr auto ShakeLocationOffset = 0x658; // FVector
		constexpr auto ShakeRotationOffset = 0x664; // FRotator
		constexpr auto ShakeFOVOffset = 0x670; // float
		constexpr auto StartFadeColor = 0x674; // FColor
		constexpr auto EndFadeColor = 0x678; // FColor
		constexpr auto ClipOffset = 0x67c; // FVector
		constexpr auto LocationKnocks = 0x688; // TArray<FLocationCameraKnock>
		constexpr auto RotationKnocks = 0x698; // TArray<FRotationCameraKnock>
		constexpr auto bDisableCameraShake = 0x6a8; // uint32_t : 1
		constexpr auto bSnapNextTransition = 0x6a8; // uint32_t : 1
		constexpr auto __EventCameraStateChanged__Delegate = 0x6b0; // DelegateProperty
	}

	namespace n_AVolumePathNode {
		constexpr auto StartingRadius = 0x388; // float
		constexpr auto StartingHeight = 0x38c; // float
	}

	namespace n_UError {
		constexpr auto Type = 0x60; // ObjectProperty
		constexpr auto Message = 0x68; // FString
		constexpr auto Code = 0x78; // int32_t
		constexpr auto RetryKey = 0x7c; // FName
	}

	namespace n_UGFxAction_Invoke {
		constexpr auto Movie = 0x160; // ObjectProperty
		constexpr auto MethodName = 0x168; // FString
		constexpr auto Arguments = 0x178; // TArray<FASValue>
	}

	namespace n_ABall_GameEditor_TA {
		constexpr auto StartLocation = 0xa40; // FVector
		constexpr auto StartRotation = 0xa4c; // FRotator
		constexpr auto VelocityStartSpeed = 0xa58; // float
		constexpr auto VelocityStartRotation = 0xa5c; // FRotator
		constexpr auto BallResetTime = 0xa68; // float
		constexpr auto FirstHitTime = 0xa6c; // float
		constexpr auto CameraPositionOffset = 0xa70; // FVector
		constexpr auto EditingFXActorArchetype = 0xa80; // ObjectProperty
		constexpr auto EditingFXActor = 0xa88; // ObjectProperty
		constexpr auto bUpdateTrajectory = 0xa90; // uint32_t : 1
		constexpr auto ToLocation = 0xa94; // FVector
		constexpr auto __EventBallWentThruRing__Delegate = 0xaa0; // DelegateProperty
		constexpr auto __EventVelocityStartSpeedChanged__Delegate = 0xab8; // DelegateProperty
		constexpr auto __EventFire__Delegate = 0xad0; // DelegateProperty
		constexpr auto __EventReset__Delegate = 0xae8; // DelegateProperty
		constexpr auto __EventSelectionChange__Delegate = 0xb00; // DelegateProperty
	}

	namespace n_URPC_FaceItUpdateGame_TA {
		constexpr auto MatchID = 0xe8; // int32_t
		constexpr auto ServerId = 0xf0; // QWordProperty
		constexpr auto SeriesRoundNumber = 0xf8; // int32_t
		constexpr auto GameData = 0x100; // FTourMatchGame
		constexpr auto SeriesWinner = 0x118; // QWordProperty
		constexpr auto PlayersStats = 0x120; // TArray<FTourPlayerStats>
		constexpr auto PlayersNoShow = 0x130; // TArray<FUniqueNetId>
		constexpr auto PlayersLeftEarly = 0x140; // TArray<FUniqueNetId>
	}

	namespace n_U__GFxData_LocalPlayer_TA__HandleXPLoaded_0197C87347745505FD99BA909E435736 {
		constexpr auto XPSave = 0x60; // ObjectProperty
	}

	namespace n_URPC_UpdateClubMotD_X {
		constexpr auto MotD = 0xf8; // FString
	}

	namespace n_ULocalCache_X {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto ImportTasks = 0x68; // TArray<FPointer>
		constexpr auto ImportCallbacks = 0x78; // TArray<FCacheImportCallbackData>
		constexpr auto ExportTasks = 0x88; // TArray<FPointer>
		constexpr auto ExportCallbacks = 0x98; // TArray<FCacheExportCallbackData>
		constexpr auto bDebug = 0xa8; // uint32_t : 1
		constexpr auto __EventImportFinished__Delegate = 0xb0; // DelegateProperty
		constexpr auto __EventExportFinished__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_UFluidInfluenceComponent {
		constexpr auto bActive = 0x258; // uint32_t : 1
		constexpr auto RaindropFillEntireFluid = 0x258; // uint32_t : 1
		constexpr auto bIsToggleTriggered = 0x258; // uint32_t : 1
		constexpr auto FluidActor = 0x260; // ObjectProperty
		constexpr auto InfluenceType = 0x268; // EInfluenceType
		constexpr auto MaxDistance = 0x26c; // float
		constexpr auto WaveStrength = 0x270; // float
		constexpr auto WaveFrequency = 0x274; // float
		constexpr auto WavePhase = 0x278; // float
		constexpr auto WaveRadius = 0x27c; // float
		constexpr auto RaindropAreaRadius = 0x280; // float
		constexpr auto RaindropRadius = 0x284; // float
		constexpr auto RaindropStrength = 0x288; // float
		constexpr auto RaindropRate = 0x28c; // float
		constexpr auto FlowSpeed = 0x290; // float
		constexpr auto FlowNumRipples = 0x294; // int32_t
		constexpr auto FlowSideMotionRadius = 0x298; // float
		constexpr auto FlowWaveRadius = 0x29c; // float
		constexpr auto FlowStrength = 0x2a0; // float
		constexpr auto FlowFrequency = 0x2a4; // float
		constexpr auto SphereOuterRadius = 0x2a8; // float
		constexpr auto SphereInnerRadius = 0x2ac; // float
		constexpr auto SphereStrength = 0x2b0; // float
		constexpr auto CurrentAngle = 0x2b4; // float
		constexpr auto CurrentTimer = 0x2b8; // float
		constexpr auto CurrentFluidActor = 0x2c0; // ObjectProperty
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0xc0; // FExpressionInput
		constexpr auto Percent = 0xf8; // FExpressionInput
		constexpr auto LuminanceFactors = 0x130; // FLinearColor
	}

	namespace n_U__OnlinePlayerStorageQueue_X__MapResultItem_DF9D0FBA4C7A201E187F7ABE06A0C6F8 {
		constexpr auto Item = 0x60; // FSetPlayerStorageResultItem
	}

	namespace n_U__GFxData_Clubs_TA__RejectClubInvite_819378A14F5CBB32F5EA9589EF6EE6DF {
		constexpr auto Notification = 0x60; // ObjectProperty
	}

	namespace n_USeqAct_ModifyObjectList {
		constexpr auto ListEntriesCount = 0x160; // int32_t
	}

	namespace n_USeqAct_AIMoveToActor {
		constexpr auto bInterruptable = 0x178; // uint32_t : 1
		constexpr auto bPickClosest = 0x178; // uint32_t : 1
		constexpr auto Destination = 0x180; // TArray<ObjectProperty>
		constexpr auto MovementSpeedModifier = 0x190; // float
		constexpr auto LookAt = 0x198; // ObjectProperty
		constexpr auto LastDestinationChoice = 0x1a0; // int32_t
	}

	namespace n_U__GameEvent_Soccar_TA__ShouldAutoReadyUp_46FED8184DCAABFEA15A95B2F554EB14 {
		constexpr auto PrimaryID = 0x60; // FUniqueNetId
	}

	namespace n_UOnlineGameStats_X {
		constexpr auto MatchGUID = 0x98; // FString
		constexpr auto PlaylistId = 0xa8; // int32_t
	}

	namespace n_ACrowdActorManager_TA {
		constexpr auto CrowdActors = 0x268; // TArray<ObjectProperty>
		constexpr auto Sounds = 0x278; // ObjectProperty
	}

	namespace n_UReservationsPasswordMessage_X {
		constexpr auto Reason = 0x60; // EPasswordFailureReason
	}

	namespace n_UPartyMessage_TourCheckIn_TA {
		constexpr auto TourSettings = 0xa8; // ObjectProperty
		constexpr auto Team = 0xb0; // FTourTeam
		constexpr auto Credentials = 0xf8; // FTourPrivateCredentials
	}

	namespace n_UAnimationCompressionAlgorithm_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x98; // float
		constexpr auto MaxPosDiffBitwise = 0x9c; // float
		constexpr auto MaxAngleDiffBitwise = 0xa0; // float
		constexpr auto AllowedRotationFormats = 0xa8; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0xb8; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xc8; // uint32_t : 1
		constexpr auto bUseAdaptiveError = 0xc8; // uint32_t : 1
		constexpr auto bUseOverrideForEndEffectors = 0xc8; // uint32_t : 1
		constexpr auto bUseAdaptiveError2 = 0xc8; // uint32_t : 1
		constexpr auto ResampledFramerate = 0xcc; // float
		constexpr auto MinKeysForResampling = 0xd0; // int32_t
		constexpr auto TrackHeightBias = 0xd4; // int32_t
		constexpr auto ParentingDivisor = 0xd8; // float
		constexpr auto ParentingDivisorExponent = 0xdc; // float
		constexpr auto RotationErrorSourceRatio = 0xe0; // float
		constexpr auto TranslationErrorSourceRatio = 0xe4; // float
		constexpr auto MaxErrorPerTrackRatio = 0xe8; // float
		constexpr auto PerturbationProbeSize = 0xec; // float
		constexpr auto PerReductionCachedData = 0xf0; // FPointer
	}

	namespace n_UColorPalette_X {
		constexpr auto DefaultId = 0x60; // int32_t
		constexpr auto HueCount = 0x64; // int32_t
		constexpr auto ValueCount = 0x68; // int32_t
		constexpr auto Colors = 0x70; // TArray<FLinearColor>
	}

	namespace n_UChallengeDropGroup_TA {
		constexpr auto bPremium = 0xd0; // uint32_t : 1
	}

	namespace n_UGFxData_MTXGarage_TA {
		constexpr auto CatalogItems = 0x98; // TArray<FMTXPurchaseInfo>
		constexpr auto CatalogProducts = 0xa8; // TArray<FMTCatalogInfo>
		constexpr auto CartItems = 0xb8; // TArray<FCartInfo>
		constexpr auto CartTotal = 0xc8; // FString
		constexpr auto Currency = 0xd8; // FString
		constexpr auto TransactionInProgress = 0xe8; // uint32_t : 1
		constexpr auto bCatalogReady = 0xe8; // uint32_t : 1
		constexpr auto ModalProcessing = 0xf0; // ObjectProperty
		constexpr auto BlackMarketSkinProductID = 0xf8; // int32_t
		constexpr auto CatalogExpirationTime = 0xfc; // float
		constexpr auto CatalogCacheDuration = 0x100; // float
		constexpr auto CatalogCategory = 0x104; // EMTXCatalogCategory
		constexpr auto PurchaseTimeoutTime = 0x108; // float
		constexpr auto GetPriceTimeoutTime = 0x10c; // float
		constexpr auto Menu = 0x110; // ObjectProperty
		constexpr auto MtxConfig = 0x118; // ObjectProperty
		constexpr auto SystemInterface = 0x120; // TScriptInterface<Class>
		constexpr auto PurchaseInterface = 0x130; // TScriptInterface<Class>
		constexpr auto PsyNetConnection = 0x140; // ObjectProperty
		constexpr auto RegionRestrictedOpenCrate = 0x148; // FString
		constexpr auto OnlineProductStoreSet = 0x158; // ComponentProperty
	}

	namespace n_UWebBrowser_TA {
		constexpr auto bBrowserLoading = 0x60; // uint32_t : 1
		constexpr auto __EventWebBrowserOpened__Delegate = 0x68; // DelegateProperty
		constexpr auto __EventWebBrowserClosed__Delegate = 0x80; // DelegateProperty
		constexpr auto __EventWebBrowserLoaded__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UPhysicsConfig_TA {
		constexpr auto EnabledFeatures = 0x78; // TArray<FString>
		constexpr auto DisabledFeatures = 0x88; // TArray<FString>
		constexpr auto CarInteractionSettings = 0x98; // FCarInteractionConfig
		constexpr auto SuperSonicSettings = 0x1a0; // FSuperSonicConfig
		constexpr auto bUseAckermannSteering = 0x1ac; // uint32_t : 1
		constexpr auto bPredictContacts = 0x1ac; // uint32_t : 1
		constexpr auto bQuantizePhysics = 0x1ac; // uint32_t : 1
		constexpr auto bOverrideServerPhysicsState = 0x1ac; // uint32_t : 1
		constexpr auto bBackupVehicleInputs = 0x1ac; // uint32_t : 1
		constexpr auto bUseNEQ = 0x1ac; // uint32_t : 1
		constexpr auto bExtrapolateRendering = 0x1ac; // uint32_t : 1
		constexpr auto bEnableCustomExplosionPhysics = 0x1ac; // uint32_t : 1
		constexpr auto JumpLeaveGroundTime = 0x1b0; // float
		constexpr auto STS = 0x1b4; // FSimTimeScaleSettings
		constexpr auto CSTS = 0x1b8; // FContinuousSimTimeScaleSettings
		constexpr auto PushForceConstantScale = 0x1ec; // float
	}

}